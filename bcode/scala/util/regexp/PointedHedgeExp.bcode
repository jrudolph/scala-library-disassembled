Compiled from "PointedHedgeExp.scala"
public abstract class scala.util.regexp.PointedHedgeExp extends scala.util.regexp.Base implements scala.ScalaObject
  SourceFile: "PointedHedgeExp.scala"
  ScalaSig: length = 0x6E8
   05 00 FFFFFF81 6B 06 08 01 02 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF81 00 09 02 0F
   50 6F 69 6E 74 65 64 48 65 64 67 65 45 78 70 0A
   02 03 04 01 06 72 65 67 65 78 70 0A 02 05 06 01
   04 75 74 69 6C 0A 01 07 01 05 73 63 61 6C 61 03
   00 13 03 00 0A 0E 10 02 0B 0C 0D 01 02 09 02 0D
   02 02 04 42 61 73 65 10 02 0F 10 0D 01 06 09 02
   11 06 02 0B 53 63 61 6C 61 4F 62 6A 65 63 74 08
   05 13 00 FFFFFF84 00 14 01 06 3C 69 6E 69 74 3E 14 01
   15 10 02 0B 00 04 08 17 00 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF82 00 18 02
   08 5F 72 65 67 65 78 70 54 11 02 19 1C 10 02 0F
   1A 09 02 1B 06 02 07 4E 6F 74 68 69 6E 67 10 02
   1D 1E 0D 01 00 09 02 1F 0C 02 06 52 65 67 45 78
   70 04 08 21 00 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF82 00 22 02 07 5F 6C 61
   62 65 6C 54 11 02 19 23 10 02 0F 24 09 02 25 06
   02 03 41 6E 79 06 08 27 00 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF80 40 28 02
   04 4E 6F 64 65 13 04 26 1C 0E 29 10 02 0F 2A 09
   02 2B 06 02 07 50 72 6F 64 75 63 74 08 08 2D 26
   FFFFFF82 FFFFFFCA FFFFFF80 FFFFFF84 00 2E 01 05 6C 61 62 65 6C 15 01 2F
   10 02 1D 20 08 08 31 26 FFFFFF82 FFFFFF88 FFFFFFA0 FFFFFF80 04 2F 01 06
   6C 61 62 65 6C 20 08 08 33 26 FFFFFF82 FFFFFFCA FFFFFF80 FFFFFF84 00 34
   01 01 72 15 01 35 10 02 1D 16 08 08 37 26 FFFFFF82 FFFFFF88
   FFFFFFA0 FFFFFF80 04 35 01 02 72 20 08 05 13 26 FFFFFF84 00 39 14
   03 3A 3B 3C 10 02 1D 26 08 05 2D 38 FFFFFFC0 00 2F 08
   05 33 38 FFFFFFC0 00 35 08 07 3E 26 FFFFFFC2 FFFFFF80 FFFFFF84 02 3F 01
   0A 69 73 4E 75 6C 6C 61 62 6C 65 15 01 40 0F 01
   41 19 01 00 08 06 43 26 FFFFFFA0 FFFFFF80 06 40 01 0B 69 73
   4E 75 6C 6C 61 62 6C 65 20 08 07 45 26 FFFFFF81 FFFFFF80 FFFFFF84
   00 46 01 04 63 6F 70 79 14 03 3A 47 4A 08 08 48
   2D 44 FFFFFF90 FFFFFF80 FFFFFFC0 00 2F 08 07 49 26 FFFFFF91 FFFFFF80 FFFFFF84 00 2E
   01 0E 63 6F 70 79 24 64 65 66 61 75 6C 74 24 31
   08 08 4B 33 44 FFFFFF90 FFFFFF80 FFFFFFC0 00 35 08 07 4C 26 FFFFFF91 FFFFFF80
   FFFFFF84 00 34 01 0E 63 6F 70 79 24 64 65 66 61 75 6C
   74 24 32 08 08 4E 26 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF84 20 4F 01 08 68
   61 73 68 43 6F 64 65 14 01 50 10 02 0F 51 09 02
   52 06 02 03 49 6E 74 08 08 54 26 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF84 20
   55 01 08 74 6F 53 74 72 69 6E 67 14 01 56 10 02
   57 5A 0E 02 0F 58 09 02 59 06 01 06 50 72 65 64
   65 66 09 02 5B 5C 02 06 53 74 72 69 6E 67 0A 02
   59 06 08 08 5E 26 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF84 20 5F 01 06 65 71
   75 61 6C 73 14 02 60 63 10 02 0F 61 09 02 62 06
   02 07 42 6F 6F 6C 65 61 6E 08 07 64 5D FFFFFF81 FFFFFF80 FFFFFFC0
   00 23 01 03 78 24 31 08 08 66 26 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF84 20
   67 01 0D 70 72 6F 64 75 63 74 50 72 65 66 69 78
   15 01 68 10 02 69 6E 0D 01 6A 0A 02 6B 6C 01 04
   6C 61 6E 67 0A 01 6D 01 04 6A 61 76 61 09 02 5B
   6A 08 08 70 26 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF84 20 71 01 0C 70 72 6F
   64 75 63 74 41 72 69 74 79 15 01 50 08 08 73 26
   FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF84 20 74 01 0E 70 72 6F 64 75 63 74 45
   6C 65 6D 65 6E 74 14 02 23 75 08 07 64 72 FFFFFF81 FFFFFF80
   FFFFFFC0 00 50 08 08 77 26 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF84 20 78 01 08 63
   61 6E 45 71 75 61 6C 14 02 60 79 08 07 64 76 FFFFFF81
   FFFFFF80 FFFFFFC0 00 23 28 02 26 7B 10 02 0F 7C 09 02 7D 06
   02 0C 73 65 72 69 61 6C 69 7A 61 62 6C 65 07 08
   7F 00 FFFFFF81 FFFFFF80 FFFFFF88 02 FFFFFF81 00 01 04 4E 6F 64 65 10 03
   1D FFFFFF81 01 06 09 27 00 FFFFFF84 FFFFFF81 FFFFFF80 FFFFFF88 02 FFFFFF81 02 13 07
   FFFFFF81 01 FFFFFF81 03 FFFFFF81 06 0E 10 03 69 FFFFFF81 04 09 03 FFFFFF81 05
   6A 02 06 4F 62 6A 65 63 74 10 06 0F FFFFFF81 07 2F 35
   3A 09 03 FFFFFF81 08 06 02 09 46 75 6E 63 74 69 6F 6E
   32 08 07 13 FFFFFF81 01 FFFFFF84 00 FFFFFF81 0A 14 02 FFFFFF81 00 08 0A
   FFFFFF81 0C FFFFFF81 01 FFFFFF81 FFFFFF80 FFFFFF84 40 FFFFFF81 0D 01 05 61 70 70 6C
   79 14 05 3A FFFFFF81 0E FFFFFF81 0F 08 06 2D FFFFFF81 0B FFFFFFC0 00 2F
   08 06 33 FFFFFF81 0B FFFFFFC0 00 35 08 0A FFFFFF81 11 FFFFFF81 01 FFFFFF81 FFFFFF80
   FFFFFF84 40 FFFFFF81 12 01 07 75 6E 61 70 70 6C 79 14 04 FFFFFF81
   13 FFFFFF81 19 10 05 0F FFFFFF81 14 FFFFFF81 16 09 03 FFFFFF81 15 06 02
   04 53 6F 6D 65 10 05 0F FFFFFF81 17 2F 35 09 03 FFFFFF81 18
   06 02 06 54 75 70 6C 65 32 08 07 FFFFFF81 1A FFFFFF81 10 FFFFFFC0
   00 3A 01 03 78 24 30 06 0A FFFFFF81 1C 00 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF80
   40 FFFFFF81 1D 02 07 54 6F 70 49 74 65 72 13 05 FFFFFF81 1B
   1C 0E 29 08 0A FFFFFF81 1F FFFFFF81 1B FFFFFF82 FFFFFFCA FFFFFF80 FFFFFF84 00 34 01
   02 72 31 08 0A FFFFFF81 21 FFFFFF81 1B FFFFFF82 FFFFFF88 FFFFFFA0 FFFFFF80 04 35 01
   03 72 31 20 08 0A FFFFFF81 23 FFFFFF81 1B FFFFFF82 FFFFFFCA FFFFFF80 FFFFFF84 00 34
   01 02 72 32 08 0A FFFFFF81 25 FFFFFF81 1B FFFFFF82 FFFFFF88 FFFFFFA0 FFFFFF80 04 35
   01 03 72 32 20 08 07 13 FFFFFF81 1B FFFFFF84 00 FFFFFF81 27 14 06
   FFFFFF81 28 FFFFFF81 29 FFFFFF81 2A 10 03 1D FFFFFF81 1B 08 07 FFFFFF81 1F FFFFFF81
   26 FFFFFFC0 00 35 08 07 FFFFFF81 23 FFFFFF81 26 FFFFFFC0 00 35 08 09 3E
   FFFFFF81 1B FFFFFFC2 FFFFFF80 FFFFFF84 02 FFFFFF81 2C 15 01 60 08 07 43 FFFFFF81 1B
   FFFFFFA0 FFFFFF80 06 60 08 09 45 FFFFFF81 1B FFFFFF81 FFFFFF80 FFFFFF84 00 FFFFFF81 2F 14
   06 FFFFFF81 28 FFFFFF81 30 FFFFFF81 32 08 0B FFFFFF81 31 FFFFFF81 1F FFFFFF81 2E FFFFFF90
   FFFFFF80 FFFFFFC0 00 35 08 08 49 FFFFFF81 1B FFFFFF91 FFFFFF80 FFFFFF84 00 34 08 0B
   FFFFFF81 33 FFFFFF81 23 FFFFFF81 2E FFFFFF90 FFFFFF80 FFFFFFC0 00 35 08 08 4C FFFFFF81 1B
   FFFFFF91 FFFFFF80 FFFFFF84 00 34 08 09 4E FFFFFF81 1B FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF84 20 4F
   08 09 54 FFFFFF81 1B FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF84 20 55 08 0A 5E FFFFFF81 1B
   FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF84 20 FFFFFF81 37 14 03 60 FFFFFF81 38 08 08 64 FFFFFF81
   36 FFFFFF81 FFFFFF80 FFFFFFC0 00 23 08 09 66 FFFFFF81 1B FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF84 20
   67 08 09 70 FFFFFF81 1B FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF84 20 71 08 0A 73 FFFFFF81
   1B FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF84 20 FFFFFF81 3C 14 03 23 FFFFFF81 3D 08 08 64
   FFFFFF81 3B FFFFFF81 FFFFFF80 FFFFFFC0 00 50 08 0A 77 FFFFFF81 1B FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF84
   20 FFFFFF81 3F 14 03 60 FFFFFF81 40 08 08 64 FFFFFF81 3E FFFFFF81 FFFFFF80 FFFFFFC0
   00 23 28 03 FFFFFF81 1B 7B 07 09 FFFFFF81 43 00 FFFFFF81 FFFFFF80 FFFFFF88 02
   FFFFFF81 44 01 07 54 6F 70 49 74 65 72 10 03 1D FFFFFF81 45
   06 0A FFFFFF81 1C 00 FFFFFF84 FFFFFF81 FFFFFF80 FFFFFF88 02 FFFFFF81 46 13 07 FFFFFF81 45
   FFFFFF81 03 FFFFFF81 47 0E 10 07 0F FFFFFF81 07 35 35 FFFFFF81 28 08 07
   13 FFFFFF81 45 FFFFFF84 00 FFFFFF81 49 14 02 FFFFFF81 44 08 0A FFFFFF81 0C FFFFFF81
   45 FFFFFF81 FFFFFF80 FFFFFF84 40 FFFFFF81 4B 14 06 FFFFFF81 28 FFFFFF81 4C FFFFFF81 4D 08
   07 FFFFFF81 1F FFFFFF81 4A FFFFFFC0 00 35 08 07 FFFFFF81 23 FFFFFF81 4A FFFFFFC0 00
   35 08 0A FFFFFF81 11 FFFFFF81 45 FFFFFF81 FFFFFF80 FFFFFF84 40 FFFFFF81 4F 14 04 FFFFFF81
   50 FFFFFF81 52 10 05 0F FFFFFF81 14 FFFFFF81 51 10 05 0F FFFFFF81 17 35
   35 08 08 FFFFFF81 1A FFFFFF81 4E FFFFFFC0 00 FFFFFF81 28 07 07 FFFFFF81 54 00
   FFFFFF88 42 FFFFFF81 55 01 05 50 6F 69 6E 74 10 03 1D FFFFFF81 56
   06 0A FFFFFF81 57 00 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF88 42 FFFFFF81 58 02 05 50 6F
   69 6E 74 13 05 FFFFFF81 56 1C 0E 29 08 07 13 FFFFFF81 56 FFFFFF84
   00 FFFFFF81 5A 14 02 FFFFFF81 55 08 08 3E FFFFFF81 56 FFFFFFC2 FFFFFF80 FFFFFF84 02
   3F 08 07 43 FFFFFF81 56 FFFFFFA0 FFFFFF80 06 40 08 0A 54 FFFFFF81 56 FFFFFF84
   FFFFFF80 FFFFFF80 FFFFFF84 22 FFFFFF81 5E 14 01 68 08 09 66 FFFFFF81 56 FFFFFF84 FFFFFF80
   FFFFFF80 FFFFFF84 20 67 08 09 70 FFFFFF81 56 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF84 20 71 08
   0A 73 FFFFFF81 56 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF84 20 FFFFFF81 62 14 03 23 FFFFFF81 63
   08 08 64 FFFFFF81 61 FFFFFF81 FFFFFF80 FFFFFFC0 00 50 08 0A 77 FFFFFF81 56 FFFFFF84
   FFFFFF80 FFFFFF80 FFFFFF84 20 FFFFFF81 65 14 03 60 FFFFFF81 66 08 08 64 FFFFFF81 64
   FFFFFF81 FFFFFF80 FFFFFFC0 00 23 08 0B FFFFFF81 68 FFFFFF81 56 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF84 08
   FFFFFF81 69 01 0B 72 65 61 64 52 65 73 6F 6C 76 65 14
   02 FFFFFF81 03 28 03 FFFFFF81 56 7B 
  InnerClass: 
   public #17= #45 of #20; //Node=class scala/util/regexp/PointedHedgeExp$Node of class scala/util/regexp/PointedHedgeExp
   public #28= #47 of #20; //TopIter=class scala/util/regexp/PointedHedgeExp$TopIter of class scala/util/regexp/PointedHedgeExp
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	PointedHedgeExp.scala;
const #3 = Asciz	Node$module;
const #4 = Asciz	Lscala/util/regexp/PointedHedgeExp$Node$;;
const #5 = Asciz	TopIter$module;
const #6 = Asciz	Lscala/util/regexp/PointedHedgeExp$TopIter$;;
const #7 = Asciz	Point$module;
const #8 = Asciz	Lscala/util/regexp/PointedHedgeExp$Point$;;
const #9 = Asciz	<init>;
const #10 = Asciz	()V;
const #11 = Asciz	Code;
const #12 = Asciz	LineNumberTable;
const #13 = Asciz	scala/util/regexp/Base;
const #14 = class	#13;	//  scala/util/regexp/Base
const #15 = NameAndType	#9:#10;//  "<init>":()V
const #16 = Method	#14.#15;	//  scala/util/regexp/Base."<init>":()V
const #17 = Asciz	Node;
const #18 = Asciz	()Lscala/util/regexp/PointedHedgeExp$Node$;;
const #19 = Asciz	scala/util/regexp/PointedHedgeExp;
const #20 = class	#19;	//  scala/util/regexp/PointedHedgeExp
const #21 = NameAndType	#3:#4;//  Node$module:Lscala/util/regexp/PointedHedgeExp$Node$;
const #22 = Field	#20.#21;	//  scala/util/regexp/PointedHedgeExp.Node$module:Lscala/util/regexp/PointedHedgeExp$Node$;
const #23 = Asciz	scala/util/regexp/PointedHedgeExp$Node$;
const #24 = class	#23;	//  scala/util/regexp/PointedHedgeExp$Node$
const #25 = Asciz	(Lscala/util/regexp/PointedHedgeExp;)V;
const #26 = NameAndType	#9:#25;//  "<init>":(Lscala/util/regexp/PointedHedgeExp;)V
const #27 = Method	#24.#26;	//  scala/util/regexp/PointedHedgeExp$Node$."<init>":(Lscala/util/regexp/PointedHedgeExp;)V
const #28 = Asciz	TopIter;
const #29 = Asciz	()Lscala/util/regexp/PointedHedgeExp$TopIter$;;
const #30 = NameAndType	#5:#6;//  TopIter$module:Lscala/util/regexp/PointedHedgeExp$TopIter$;
const #31 = Field	#20.#30;	//  scala/util/regexp/PointedHedgeExp.TopIter$module:Lscala/util/regexp/PointedHedgeExp$TopIter$;
const #32 = Asciz	scala/util/regexp/PointedHedgeExp$TopIter$;
const #33 = class	#32;	//  scala/util/regexp/PointedHedgeExp$TopIter$
const #34 = Method	#33.#26;	//  scala/util/regexp/PointedHedgeExp$TopIter$."<init>":(Lscala/util/regexp/PointedHedgeExp;)V
const #35 = Asciz	Point;
const #36 = Asciz	()Lscala/util/regexp/PointedHedgeExp$Point$;;
const #37 = NameAndType	#7:#8;//  Point$module:Lscala/util/regexp/PointedHedgeExp$Point$;
const #38 = Field	#20.#37;	//  scala/util/regexp/PointedHedgeExp.Point$module:Lscala/util/regexp/PointedHedgeExp$Point$;
const #39 = Asciz	scala/util/regexp/PointedHedgeExp$Point$;
const #40 = class	#39;	//  scala/util/regexp/PointedHedgeExp$Point$
const #41 = Method	#40.#26;	//  scala/util/regexp/PointedHedgeExp$Point$."<init>":(Lscala/util/regexp/PointedHedgeExp;)V
const #42 = Asciz	ScalaSig;
const #43 = Asciz	InnerClasses;
const #44 = Asciz	scala/util/regexp/PointedHedgeExp$Node;
const #45 = class	#44;	//  scala/util/regexp/PointedHedgeExp$Node
const #46 = Asciz	scala/util/regexp/PointedHedgeExp$TopIter;
const #47 = class	#46;	//  scala/util/regexp/PointedHedgeExp$TopIter
const #48 = Asciz	scala/ScalaObject;
const #49 = class	#48;	//  scala/ScalaObject

{
public scala.util.regexp.PointedHedgeExp();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokespecial	#16; //Method scala/util/regexp/Base."<init>":()V
   4:	return
  LineNumberTable: 
   line 20: 0


public final scala.util.regexp.PointedHedgeExp$Node$ Node();
  Code:
   Stack=4, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#22; //Field Node$module:Lscala/util/regexp/PointedHedgeExp$Node$;
   4:	ifnonnull	19
   7:	aload_0
   8:	new	#24; //class scala/util/regexp/PointedHedgeExp$Node$
   11:	dup
   12:	aload_0
   13:	invokespecial	#27; //Method scala/util/regexp/PointedHedgeExp$Node$."<init>":(Lscala/util/regexp/PointedHedgeExp;)V
   16:	putfield	#22; //Field Node$module:Lscala/util/regexp/PointedHedgeExp$Node$;
   19:	aload_0
   20:	getfield	#22; //Field Node$module:Lscala/util/regexp/PointedHedgeExp$Node$;
   23:	areturn
  LineNumberTable: 
   line 25: 0


public final scala.util.regexp.PointedHedgeExp$TopIter$ TopIter();
  Code:
   Stack=4, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#31; //Field TopIter$module:Lscala/util/regexp/PointedHedgeExp$TopIter$;
   4:	ifnonnull	19
   7:	aload_0
   8:	new	#33; //class scala/util/regexp/PointedHedgeExp$TopIter$
   11:	dup
   12:	aload_0
   13:	invokespecial	#34; //Method scala/util/regexp/PointedHedgeExp$TopIter$."<init>":(Lscala/util/regexp/PointedHedgeExp;)V
   16:	putfield	#31; //Field TopIter$module:Lscala/util/regexp/PointedHedgeExp$TopIter$;
   19:	aload_0
   20:	getfield	#31; //Field TopIter$module:Lscala/util/regexp/PointedHedgeExp$TopIter$;
   23:	areturn
  LineNumberTable: 
   line 29: 0


public final scala.util.regexp.PointedHedgeExp$Point$ Point();
  Code:
   Stack=4, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#38; //Field Point$module:Lscala/util/regexp/PointedHedgeExp$Point$;
   4:	ifnonnull	19
   7:	aload_0
   8:	new	#40; //class scala/util/regexp/PointedHedgeExp$Point$
   11:	dup
   12:	aload_0
   13:	invokespecial	#41; //Method scala/util/regexp/PointedHedgeExp$Point$."<init>":(Lscala/util/regexp/PointedHedgeExp;)V
   16:	putfield	#38; //Field Point$module:Lscala/util/regexp/PointedHedgeExp$Point$;
   19:	aload_0
   20:	getfield	#38; //Field Point$module:Lscala/util/regexp/PointedHedgeExp$Point$;
   23:	areturn
  LineNumberTable: 
   line 33: 0


}

