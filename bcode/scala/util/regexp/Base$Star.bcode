Compiled from "Base.scala"
public class scala.util.regexp.Base$Star extends scala.util.regexp.Base$RegExp implements scala.ScalaObject,scala.Product,java.io.Serializable
  SourceFile: "Base.scala"
  Scala: length = 0x
   
  InnerClass: 
   public #72= #14 of #120; //Star=class scala/util/regexp/Base$Star of class scala/util/regexp/Base
   public abstract #121= #18 of #120; //RegExp=class scala/util/regexp/Base$RegExp of class scala/util/regexp/Base
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Base.scala;
const #3 = Asciz	bitmap$0;
const #4 = Asciz	I;
const #5 = Asciz	isNullable;
const #6 = Asciz	Z;
const #7 = Asciz	r;
const #8 = Asciz	Lscala/util/regexp/Base$RegExp;;
const #9 = Asciz	<init>;
const #10 = Asciz	(Lscala/util/regexp/Base;Lscala/util/regexp/Base$RegExp;)V;
const #11 = Asciz	Code;
const #12 = Asciz	LineNumberTable;
const #13 = Asciz	scala/util/regexp/Base$Star;
const #14 = class	#13;	//  scala/util/regexp/Base$Star
const #15 = NameAndType	#7:#8;//  r:Lscala/util/regexp/Base$RegExp;
const #16 = Field	#14.#15;	//  scala/util/regexp/Base$Star.r:Lscala/util/regexp/Base$RegExp;
const #17 = Asciz	scala/util/regexp/Base$RegExp;
const #18 = class	#17;	//  scala/util/regexp/Base$RegExp
const #19 = Asciz	(Lscala/util/regexp/Base;)V;
const #20 = NameAndType	#9:#19;//  "<init>":(Lscala/util/regexp/Base;)V
const #21 = Method	#18.#20;	//  scala/util/regexp/Base$RegExp."<init>":(Lscala/util/regexp/Base;)V
const #22 = Asciz	scala/Product$class;
const #23 = class	#22;	//  scala/Product$class
const #24 = Asciz	$init$;
const #25 = Asciz	(Lscala/Product;)V;
const #26 = NameAndType	#24:#25;//  $init$:(Lscala/Product;)V
const #27 = Method	#23.#26;	//  scala/Product$class.$init$:(Lscala/Product;)V
const #28 = Asciz	this;
const #29 = Asciz	Lscala/util/regexp/Base$Star;;
const #30 = Asciz	$outer;
const #31 = Asciz	Lscala/util/regexp/Base;;
const #32 = Asciz	LocalVariableTable;
const #33 = Asciz	gd1$1;
const #34 = Asciz	(Lscala/util/regexp/Base$RegExp;)Z;
const #35 = Asciz	()Lscala/util/regexp/Base$RegExp;;
const #36 = NameAndType	#7:#35;//  r:()Lscala/util/regexp/Base$RegExp;
const #37 = Method	#14.#36;	//  scala/util/regexp/Base$Star.r:()Lscala/util/regexp/Base$RegExp;
const #38 = Asciz	java/lang/Object;
const #39 = class	#38;	//  java/lang/Object
const #40 = Asciz	equals;
const #41 = Asciz	(Ljava/lang/Object;)Z;
const #42 = NameAndType	#40:#41;//  equals:(Ljava/lang/Object;)Z
const #43 = Method	#39.#42;	//  java/lang/Object.equals:(Ljava/lang/Object;)Z
const #44 = Asciz	scala$util$regexp$Base$Star$$$outer;
const #45 = Asciz	()Lscala/util/regexp/Base;;
const #46 = NameAndType	#30:#31;//  $outer:Lscala/util/regexp/Base;
const #47 = Field	#18.#46;	//  scala/util/regexp/Base$RegExp.$outer:Lscala/util/regexp/Base;
const #48 = Asciz	canEqual;
const #49 = Asciz	productElement;
const #50 = Asciz	(I)Ljava/lang/Object;;
const #51 = Asciz	scala/MatchError;
const #52 = class	#51;	//  scala/MatchError
const #53 = Asciz	scala/runtime/BoxesRunTime;
const #54 = class	#53;	//  scala/runtime/BoxesRunTime
const #55 = Asciz	boxToInteger;
const #56 = Asciz	(I)Ljava/lang/Integer;;
const #57 = NameAndType	#55:#56;//  boxToInteger:(I)Ljava/lang/Integer;
const #58 = Method	#54.#57;	//  scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
const #59 = Asciz	toString;
const #60 = Asciz	()Ljava/lang/String;;
const #61 = NameAndType	#59:#60;//  toString:()Ljava/lang/String;
const #62 = Method	#39.#61;	//  java/lang/Object.toString:()Ljava/lang/String;
const #63 = Asciz	(Ljava/lang/String;)V;
const #64 = NameAndType	#9:#63;//  "<init>":(Ljava/lang/String;)V
const #65 = Method	#52.#64;	//  scala/MatchError."<init>":(Ljava/lang/String;)V
const #66 = Asciz	java/lang/IndexOutOfBoundsException;
const #67 = class	#66;	//  java/lang/IndexOutOfBoundsException
const #68 = Method	#67.#64;	//  java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
const #69 = Asciz	productArity;
const #70 = Asciz	()I;
const #71 = Asciz	productPrefix;
const #72 = Asciz	Star;
const #73 = String	#72;	//  Star
const #74 = NameAndType	#44:#45;//  scala$util$regexp$Base$Star$$$outer:()Lscala/util/regexp/Base;
const #75 = Method	#14.#74;	//  scala/util/regexp/Base$Star.scala$util$regexp$Base$Star$$$outer:()Lscala/util/regexp/Base;
const #76 = NameAndType	#33:#34;//  gd1$1:(Lscala/util/regexp/Base$RegExp;)Z
const #77 = Method	#14.#76;	//  scala/util/regexp/Base$Star.gd1$1:(Lscala/util/regexp/Base$RegExp;)Z
const #78 = Asciz	scala/Equals;
const #79 = class	#78;	//  scala/Equals
const #80 = NameAndType	#48:#41;//  canEqual:(Ljava/lang/Object;)Z
const #81 = InterfaceMethod	#79.#80;	//  scala/Equals.canEqual:(Ljava/lang/Object;)Z
const #82 = Asciz	temp2;
const #83 = Asciz	temp3;
const #84 = Asciz	scala/runtime/ScalaRunTime$;
const #85 = class	#84;	//  scala/runtime/ScalaRunTime$
const #86 = Asciz	MODULE$;
const #87 = Asciz	Lscala/runtime/ScalaRunTime$;;
const #88 = NameAndType	#86:#87;//  MODULE$:Lscala/runtime/ScalaRunTime$;
const #89 = Field	#85.#88;	//  scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
const #90 = Asciz	_toString;
const #91 = Asciz	(Lscala/Product;)Ljava/lang/String;;
const #92 = NameAndType	#90:#91;//  _toString:(Lscala/Product;)Ljava/lang/String;
const #93 = Method	#85.#92;	//  scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
const #94 = Asciz	hashCode;
const #95 = Asciz	_hashCode;
const #96 = Asciz	(Lscala/Product;)I;
const #97 = NameAndType	#95:#96;//  _hashCode:(Lscala/Product;)I
const #98 = Method	#85.#97;	//  scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
const #99 = Asciz	copy;
const #100 = Asciz	(Lscala/util/regexp/Base$RegExp;)Lscala/util/regexp/Base$Star;;
const #101 = NameAndType	#9:#10;//  "<init>":(Lscala/util/regexp/Base;Lscala/util/regexp/Base$RegExp;)V
const #102 = Method	#14.#101;	//  scala/util/regexp/Base$Star."<init>":(Lscala/util/regexp/Base;Lscala/util/regexp/Base$RegExp;)V
const #103 = Asciz	()Z;
const #104 = NameAndType	#3:#4;//  bitmap$0:I
const #105 = Field	#14.#104;	//  scala/util/regexp/Base$Star.bitmap$0:I
const #106 = NameAndType	#5:#6;//  isNullable:Z
const #107 = Field	#14.#106;	//  scala/util/regexp/Base$Star.isNullable:Z
const #108 = Asciz	copy$default$1;
const #109 = Asciz	productElements;
const #110 = Asciz	()Lscala/collection/Iterator;;
const #111 = Asciz	(Lscala/Product;)Lscala/collection/Iterator;;
const #112 = NameAndType	#109:#111;//  productElements:(Lscala/Product;)Lscala/collection/Iterator;
const #113 = Method	#23.#112;	//  scala/Product$class.productElements:(Lscala/Product;)Lscala/collection/Iterator;
const #114 = Asciz	productIterator;
const #115 = NameAndType	#114:#111;//  productIterator:(Lscala/Product;)Lscala/collection/Iterator;
const #116 = Method	#23.#115;	//  scala/Product$class.productIterator:(Lscala/Product;)Lscala/collection/Iterator;
const #117 = Asciz	Scala;
const #118 = Asciz	InnerClasses;
const #119 = Asciz	scala/util/regexp/Base;
const #120 = class	#119;	//  scala/util/regexp/Base
const #121 = Asciz	RegExp;
const #122 = Asciz	scala/ScalaObject;
const #123 = class	#122;	//  scala/ScalaObject
const #124 = Asciz	scala/Product;
const #125 = class	#124;	//  scala/Product
const #126 = Asciz	java/io/Serializable;
const #127 = class	#126;	//  java/io/Serializable

{
public volatile int bitmap$0;

public scala.util.regexp.Base$Star(scala.util.regexp.Base, scala.util.regexp.Base$RegExp);
  Code:
   Stack=2, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_2
   2:	putfield	#16; //Field r:Lscala/util/regexp/Base$RegExp;
   5:	aload_0
   6:	aload_1
   7:	invokespecial	#21; //Method scala/util/regexp/Base$RegExp."<init>":(Lscala/util/regexp/Base;)V
   10:	aload_0
   11:	invokestatic	#27; //Method scala/Product$class.$init$:(Lscala/Product;)V
   14:	return
  LineNumberTable: 
   line 51: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      15      0    this       Lscala/util/regexp/Base$Star;
   0      15      1    $outer       Lscala/util/regexp/Base;
   0      15      2    r       Lscala/util/regexp/Base$RegExp;


public scala.util.regexp.Base scala$util$regexp$Base$Star$$$outer();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#47; //Field scala/util/regexp/Base$RegExp.$outer:Lscala/util/regexp/Base;
   4:	areturn
  LineNumberTable: 
   line 51: 0


public boolean canEqual(java.lang.Object);
  Code:
   Stack=1, Locals=2, Args_size=2
   0:	aload_1
   1:	instanceof	#14; //class scala/util/regexp/Base$Star
   4:	ireturn
  LineNumberTable: 
   line 51: 0


public java.lang.Object productElement(int);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	iload_1
   1:	iconst_0
   2:	if_icmpne	29
   5:	iconst_1
   6:	ifeq	14
   9:	aload_0
   10:	invokevirtual	#37; //Method r:()Lscala/util/regexp/Base$RegExp;
   13:	areturn
   14:	new	#52; //class scala/MatchError
   17:	dup
   18:	iload_1
   19:	invokestatic	#58; //Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   22:	invokevirtual	#62; //Method java/lang/Object.toString:()Ljava/lang/String;
   25:	invokespecial	#65; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   28:	athrow
   29:	iconst_1
   30:	ifeq	48
   33:	new	#67; //class java/lang/IndexOutOfBoundsException
   36:	dup
   37:	iload_1
   38:	invokestatic	#58; //Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   41:	invokevirtual	#62; //Method java/lang/Object.toString:()Ljava/lang/String;
   44:	invokespecial	#68; //Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
   47:	athrow
   48:	new	#52; //class scala/MatchError
   51:	dup
   52:	iload_1
   53:	invokestatic	#58; //Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   56:	invokevirtual	#62; //Method java/lang/Object.toString:()Ljava/lang/String;
   59:	invokespecial	#65; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   62:	athrow
  LineNumberTable: 
   line 51: 0
   line 21: 5
   line 51: 9
   line 21: 29
   line 51: 33


public int productArity();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	iconst_1
   1:	ireturn
  LineNumberTable: 
   line 51: 0


public java.lang.String productPrefix();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	ldc	#73; //String Star
   2:	areturn
  LineNumberTable: 
   line 51: 0


public boolean equals(java.lang.Object);
  Code:
   Stack=3, Locals=4, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	if_acmpeq	85
   5:	aload_1
   6:	instanceof	#14; //class scala/util/regexp/Base$Star
   9:	ifeq	77
   12:	aload_1
   13:	checkcast	#14; //class scala/util/regexp/Base$Star
   16:	invokevirtual	#75; //Method scala$util$regexp$Base$Star$$$outer:()Lscala/util/regexp/Base;
   19:	aload_0
   20:	invokevirtual	#75; //Method scala$util$regexp$Base$Star$$$outer:()Lscala/util/regexp/Base;
   23:	if_acmpne	77
   26:	aload_1
   27:	checkcast	#14; //class scala/util/regexp/Base$Star
   30:	astore_2
   31:	aload_2
   32:	invokevirtual	#37; //Method r:()Lscala/util/regexp/Base$RegExp;
   35:	astore_3
   36:	aload_0
   37:	aload_3
   38:	invokespecial	#77; //Method gd1$1:(Lscala/util/regexp/Base$RegExp;)Z
   41:	ifeq	57
   44:	aload_1
   45:	checkcast	#14; //class scala/util/regexp/Base$Star
   48:	aload_0
   49:	invokeinterface	#81,  2; //InterfaceMethod scala/Equals.canEqual:(Ljava/lang/Object;)Z
   54:	goto	82
   57:	iconst_1
   58:	ifeq	65
   61:	iconst_0
   62:	goto	82
   65:	new	#52; //class scala/MatchError
   68:	dup
   69:	aload_1
   70:	invokevirtual	#62; //Method java/lang/Object.toString:()Ljava/lang/String;
   73:	invokespecial	#65; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   76:	athrow
   77:	iconst_1
   78:	ifeq	91
   81:	iconst_0
   82:	ifeq	89
   85:	iconst_1
   86:	goto	90
   89:	iconst_0
   90:	ireturn
   91:	new	#52; //class scala/MatchError
   94:	dup
   95:	aload_1
   96:	invokevirtual	#62; //Method java/lang/Object.toString:()Ljava/lang/String;
   99:	invokespecial	#65; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   102:	athrow
  LineNumberTable: 
   line 51: 0
   line 21: 57
   line 51: 65
   line 21: 77
   line 51: 82

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      103      0    this       Lscala/util/regexp/Base$Star;
   31      46      2    temp2       Lscala/util/regexp/Base$Star;
   36      41      3    temp3       Lscala/util/regexp/Base$RegExp;


public java.lang.String toString();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	getstatic	#89; //Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   3:	aload_0
   4:	invokevirtual	#93; //Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
   7:	areturn
  LineNumberTable: 
   line 51: 0


public int hashCode();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	getstatic	#89; //Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   3:	aload_0
   4:	invokevirtual	#98; //Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
   7:	ireturn
  LineNumberTable: 
   line 51: 0


public scala.util.regexp.Base$Star copy(scala.util.regexp.Base$RegExp);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#14; //class scala/util/regexp/Base$Star
   3:	dup
   4:	aload_0
   5:	invokevirtual	#75; //Method scala$util$regexp$Base$Star$$$outer:()Lscala/util/regexp/Base;
   8:	aload_1
   9:	invokespecial	#102; //Method "<init>":(Lscala/util/regexp/Base;Lscala/util/regexp/Base$RegExp;)V
   12:	areturn
  LineNumberTable: 
   line 51: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      13      0    this       Lscala/util/regexp/Base$Star;
   0      13      1    r       Lscala/util/regexp/Base$RegExp;


public final boolean isNullable();
  Code:
   Stack=3, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#105; //Field bitmap$0:I
   4:	iconst_1
   5:	iand
   6:	iconst_0
   7:	if_icmpne	41
   10:	aload_0
   11:	dup
   12:	pop
   13:	monitorenter
   14:	aload_0
   15:	getfield	#105; //Field bitmap$0:I
   18:	iconst_1
   19:	iand
   20:	iconst_0
   21:	if_icmpne	39
   24:	aload_0
   25:	iconst_1
   26:	putfield	#107; //Field isNullable:Z
   29:	aload_0
   30:	aload_0
   31:	getfield	#105; //Field bitmap$0:I
   34:	iconst_1
   35:	ior
   36:	putfield	#105; //Field bitmap$0:I
   39:	aload_0
   40:	monitorexit
   41:	aload_0
   42:	getfield	#107; //Field isNullable:Z
   45:	ireturn
   46:	aload_0
   47:	monitorexit
   48:	athrow
  Exception table:
   from   to  target type
    14    41    46   any
  LineNumberTable: 
   line 52: 0
   line 339: 6
   line 52: 10
   line 339: 20
   line 52: 24


public scala.util.regexp.Base$RegExp r();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#16; //Field r:Lscala/util/regexp/Base$RegExp;
   4:	areturn
  LineNumberTable: 
   line 51: 0


public scala.util.regexp.Base$RegExp copy$default$1();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#37; //Method r:()Lscala/util/regexp/Base$RegExp;
   4:	areturn
  LineNumberTable: 
   line 51: 0


public scala.collection.Iterator productElements();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#113; //Method scala/Product$class.productElements:(Lscala/Product;)Lscala/collection/Iterator;
   4:	areturn
  LineNumberTable: 
   line 51: 0


public scala.collection.Iterator productIterator();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#116; //Method scala/Product$class.productIterator:(Lscala/Product;)Lscala/collection/Iterator;
   4:	areturn
  LineNumberTable: 
   line 51: 0


}

