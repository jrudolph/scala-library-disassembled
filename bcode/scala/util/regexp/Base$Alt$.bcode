Compiled from "Base.scala"
public final class scala.util.regexp.Base$Alt$ extends java.lang.Object implements scala.Function1,scala.ScalaObject
  SourceFile: "Base.scala"
  Scala: length = 0x
   
  InnerClass: 
   public #87= #51 of #86; //Alt=class scala/util/regexp/Base$Alt of class scala/util/regexp/Base
   public final #90= #89 of #51; //$anonfun$1=class scala/util/regexp/Base$Alt$$anonfun$1 of class scala/util/regexp/Base$Alt
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Base.scala;
const #3 = Asciz	Scala;
const #4 = Asciz	$outer;
const #5 = Asciz	Lscala/util/regexp/Base;;
const #6 = Asciz	<init>;
const #7 = Asciz	(Lscala/util/regexp/Base;)V;
const #8 = Asciz	Code;
const #9 = Asciz	LineNumberTable;
const #10 = Asciz	java/lang/NullPointerException;
const #11 = class	#10;	//  java/lang/NullPointerException
const #12 = Asciz	()V;
const #13 = NameAndType	#6:#12;//  "<init>":()V
const #14 = Method	#11.#13;	//  java/lang/NullPointerException."<init>":()V
const #15 = Asciz	scala/util/regexp/Base$Alt$;
const #16 = class	#15;	//  scala/util/regexp/Base$Alt$
const #17 = NameAndType	#4:#5;//  $outer:Lscala/util/regexp/Base;
const #18 = Field	#16.#17;	//  scala/util/regexp/Base$Alt$.$outer:Lscala/util/regexp/Base;
const #19 = Asciz	java/lang/Object;
const #20 = class	#19;	//  java/lang/Object
const #21 = Method	#20.#13;	//  java/lang/Object."<init>":()V
const #22 = Asciz	scala/Function1$class;
const #23 = class	#22;	//  scala/Function1$class
const #24 = Asciz	$init$;
const #25 = Asciz	(Lscala/Function1;)V;
const #26 = NameAndType	#24:#25;//  $init$:(Lscala/Function1;)V
const #27 = Method	#23.#26;	//  scala/Function1$class.$init$:(Lscala/Function1;)V
const #28 = Asciz	this;
const #29 = Asciz	Lscala/util/regexp/Base$Alt$;;
const #30 = Asciz	LocalVariableTable;
const #31 = Asciz	apply;
const #32 = Asciz	(Ljava/lang/Object;)Ljava/lang/Object;;
const #33 = Asciz	scala/collection/Sequence;
const #34 = class	#33;	//  scala/collection/Sequence
const #35 = Asciz	scala/runtime/ScalaRunTime$;
const #36 = class	#35;	//  scala/runtime/ScalaRunTime$
const #37 = Asciz	MODULE$;
const #38 = Asciz	Lscala/runtime/ScalaRunTime$;;
const #39 = NameAndType	#37:#38;//  MODULE$:Lscala/runtime/ScalaRunTime$;
const #40 = Field	#36.#39;	//  scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
const #41 = Asciz	boxArray;
const #42 = Asciz	(Ljava/lang/Object;)Lscala/runtime/BoxedArray;;
const #43 = NameAndType	#41:#42;//  boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
const #44 = Method	#36.#43;	//  scala/runtime/ScalaRunTime$.boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
const #45 = Asciz	(Lscala/collection/Sequence;)Lscala/util/regexp/Base$Alt;;
const #46 = NameAndType	#31:#45;//  apply:(Lscala/collection/Sequence;)Lscala/util/regexp/Base$Alt;
const #47 = Method	#16.#46;	//  scala/util/regexp/Base$Alt$.apply:(Lscala/collection/Sequence;)Lscala/util/regexp/Base$Alt;
const #48 = Asciz	v1;
const #49 = Asciz	Ljava/lang/Object;;
const #50 = Asciz	scala/util/regexp/Base$Alt;
const #51 = class	#50;	//  scala/util/regexp/Base$Alt
const #52 = Asciz	(Lscala/util/regexp/Base;Lscala/collection/Sequence;)V;
const #53 = NameAndType	#6:#52;//  "<init>":(Lscala/util/regexp/Base;Lscala/collection/Sequence;)V
const #54 = Method	#51.#53;	//  scala/util/regexp/Base$Alt."<init>":(Lscala/util/regexp/Base;Lscala/collection/Sequence;)V
const #55 = Asciz	rs;
const #56 = Asciz	Lscala/collection/Sequence;;
const #57 = Asciz	unapplySeq;
const #58 = Asciz	(Lscala/util/regexp/Base$Alt;)Lscala/Some;;
const #59 = Asciz	scala/Some;
const #60 = class	#59;	//  scala/Some
const #61 = Asciz	()Lscala/collection/Sequence;;
const #62 = NameAndType	#55:#61;//  rs:()Lscala/collection/Sequence;
const #63 = Method	#51.#62;	//  scala/util/regexp/Base$Alt.rs:()Lscala/collection/Sequence;
const #64 = Asciz	(Ljava/lang/Object;)V;
const #65 = NameAndType	#6:#64;//  "<init>":(Ljava/lang/Object;)V
const #66 = Method	#60.#65;	//  scala/Some."<init>":(Ljava/lang/Object;)V
const #67 = Asciz	x$0;
const #68 = Asciz	Lscala/util/regexp/Base$Alt;;
const #69 = Asciz	andThen;
const #70 = Asciz	(Lscala/Function1;)Lscala/Function1;;
const #71 = Asciz	(Lscala/Function1;Lscala/Function1;)Lscala/Function1;;
const #72 = NameAndType	#69:#71;//  andThen:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
const #73 = Method	#23.#72;	//  scala/Function1$class.andThen:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
const #74 = Asciz	g;
const #75 = Asciz	Lscala/Function1;;
const #76 = Asciz	compose;
const #77 = NameAndType	#76:#71;//  compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
const #78 = Method	#23.#77;	//  scala/Function1$class.compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
const #79 = Asciz	toString;
const #80 = Asciz	()Ljava/lang/String;;
const #81 = Asciz	(Lscala/Function1;)Ljava/lang/String;;
const #82 = NameAndType	#79:#81;//  toString:(Lscala/Function1;)Ljava/lang/String;
const #83 = Method	#23.#82;	//  scala/Function1$class.toString:(Lscala/Function1;)Ljava/lang/String;
const #84 = Asciz	InnerClasses;
const #85 = Asciz	scala/util/regexp/Base;
const #86 = class	#85;	//  scala/util/regexp/Base
const #87 = Asciz	Alt;
const #88 = Asciz	scala/util/regexp/Base$Alt$$anonfun$1;
const #89 = class	#88;	//  scala/util/regexp/Base$Alt$$anonfun$1
const #90 = Asciz	$anonfun$1;
const #91 = Asciz	scala/Function1;
const #92 = class	#91;	//  scala/Function1
const #93 = Asciz	scala/ScalaObject;
const #94 = class	#93;	//  scala/ScalaObject

{
public scala.util.regexp.Base$Alt$(scala.util.regexp.Base);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_1
   1:	ifnonnull	12
   4:	new	#11; //class java/lang/NullPointerException
   7:	dup
   8:	invokespecial	#14; //Method java/lang/NullPointerException."<init>":()V
   11:	athrow
   12:	aload_0
   13:	aload_1
   14:	putfield	#18; //Field $outer:Lscala/util/regexp/Base;
   17:	aload_0
   18:	invokespecial	#21; //Method java/lang/Object."<init>":()V
   21:	aload_0
   22:	invokestatic	#27; //Method scala/Function1$class.$init$:(Lscala/Function1;)V
   25:	return
  LineNumberTable: 
   line 28: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      26      0    this       Lscala/util/regexp/Base$Alt$;
   0      26      1    $outer       Lscala/util/regexp/Base;


public java.lang.Object apply(java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=2
   0:	aload_0
   1:	getfield	#18; //Field $outer:Lscala/util/regexp/Base;
   4:	astore_2
   5:	aload_0
   6:	aload_1
   7:	instanceof	#34; //class scala/collection/Sequence
   10:	ifeq	17
   13:	aload_1
   14:	goto	24
   17:	getstatic	#40; //Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   20:	aload_1
   21:	invokevirtual	#44; //Method scala/runtime/ScalaRunTime$.boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
   24:	checkcast	#34; //class scala/collection/Sequence
   27:	invokevirtual	#47; //Method apply:(Lscala/collection/Sequence;)Lscala/util/regexp/Base$Alt;
   30:	areturn
  LineNumberTable: 
   line 28: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      31      0    this       Lscala/util/regexp/Base$Alt$;
   5      26      1    v1       Ljava/lang/Object;


public scala.util.regexp.Base$Alt apply(scala.collection.Sequence);
  Code:
   Stack=4, Locals=3, Args_size=2
   0:	aload_0
   1:	getfield	#18; //Field $outer:Lscala/util/regexp/Base;
   4:	astore_2
   5:	new	#51; //class scala/util/regexp/Base$Alt
   8:	dup
   9:	aload_0
   10:	getfield	#18; //Field $outer:Lscala/util/regexp/Base;
   13:	aload_1
   14:	invokespecial	#54; //Method scala/util/regexp/Base$Alt."<init>":(Lscala/util/regexp/Base;Lscala/collection/Sequence;)V
   17:	areturn
  LineNumberTable: 
   line 28: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      18      0    this       Lscala/util/regexp/Base$Alt$;
   5      13      1    rs       Lscala/collection/Sequence;


public scala.Some unapplySeq(scala.util.regexp.Base$Alt);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	new	#60; //class scala/Some
   3:	dup
   4:	aload_1
   5:	invokevirtual	#63; //Method scala/util/regexp/Base$Alt.rs:()Lscala/collection/Sequence;
   8:	invokespecial	#66; //Method scala/Some."<init>":(Ljava/lang/Object;)V
   11:	areturn
  LineNumberTable: 
   line 28: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      12      0    this       Lscala/util/regexp/Base$Alt$;
   0      12      1    x$0       Lscala/util/regexp/Base$Alt;


public scala.Function1 andThen(scala.Function1);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#73; //Method scala/Function1$class.andThen:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
   5:	areturn
  LineNumberTable: 
   line 28: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/util/regexp/Base$Alt$;
   0      6      1    g       Lscala/Function1;


public scala.Function1 compose(scala.Function1);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#78; //Method scala/Function1$class.compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
   5:	areturn
  LineNumberTable: 
   line 28: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/util/regexp/Base$Alt$;
   0      6      1    g       Lscala/Function1;


public java.lang.String toString();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#83; //Method scala/Function1$class.toString:(Lscala/Function1;)Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 28: 0


}

