Compiled from "WordExp.scala"
public abstract class scala.util.regexp.WordExp extends scala.util.regexp.Base implements scala.ScalaObject
  SourceFile: "WordExp.scala"
  ScalaSig: length = 0x5DC
   05 00 FFFFFF81 50 06 08 01 02 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF81 00 09 02 07
   57 6F 72 64 45 78 70 0A 02 03 04 01 06 72 65 67
   65 78 70 0A 02 05 06 01 04 75 74 69 6C 0A 01 07
   01 05 73 63 61 6C 61 03 00 13 03 00 0A 0E 10 02
   0B 0C 0D 01 02 09 02 0D 02 02 04 42 61 73 65 10
   02 0F 10 0D 01 06 09 02 11 06 02 0B 53 63 61 6C
   61 4F 62 6A 65 63 74 08 05 13 00 FFFFFF84 00 14 01 06
   3C 69 6E 69 74 3E 14 01 15 10 02 0B 00 06 08 17
   00 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF81 00 18 02 05 4C 61 62 65 6C 13 03
   16 19 0E 10 02 1A 1F 0D 01 1B 0A 02 1C 1D 01 04
   6C 61 6E 67 0A 01 1E 01 04 6A 61 76 61 09 02 20
   1B 02 06 4F 62 6A 65 63 74 08 05 13 16 FFFFFF84 00 22
   14 01 23 10 02 24 16 0D 01 00 04 08 26 00 FFFFFF84 FFFFFF80
   FFFFFF80 FFFFFF82 00 27 02 08 5F 72 65 67 65 78 70 54 11 02
   28 2B 10 02 0F 29 09 02 2A 06 02 07 4E 6F 74 68
   69 6E 67 10 02 24 2C 09 02 2D 0C 02 06 52 65 67
   45 78 70 04 08 2F 00 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF82 00 30 02 07 5F
   6C 61 62 65 6C 54 11 02 28 23 06 08 32 00 FFFFFF84 FFFFFF80
   FFFFFF80 FFFFFF80 40 33 02 06 4C 65 74 74 65 72 13 04 31 2B
   0E 34 10 02 0F 35 09 02 36 06 02 07 50 72 6F 64
   75 63 74 08 08 38 31 FFFFFF82 FFFFFFCA FFFFFF80 FFFFFF84 00 39 01 01 61
   15 01 3A 10 02 24 2E 08 08 3C 31 FFFFFF82 FFFFFF88 FFFFFFA0 FFFFFF80 04
   3A 01 02 61 20 08 05 13 31 FFFFFF84 00 3E 14 02 3F 40
   10 02 24 31 08 05 38 3D FFFFFFC0 00 3A 08 08 42 31 FFFFFF88
   FFFFFFC2 FFFFFF80 FFFFFF84 02 43 01 0A 69 73 4E 75 6C 6C 61 62 6C
   65 15 01 44 10 02 0F 45 09 02 46 06 02 07 42 6F
   6F 6C 65 61 6E 08 08 48 31 FFFFFF88 FFFFFF80 FFFFFFA0 FFFFFFA0 06 44 01
   0B 69 73 4E 75 6C 6C 61 62 6C 65 20 08 07 4A 31
   FFFFFFC0 FFFFFF80 FFFFFF84 00 4B 01 03 70 6F 73 15 01 4C 10 02 0F
   4D 09 02 4E 06 02 03 49 6E 74 08 07 50 31 FFFFFFC0 FFFFFF80
   FFFFFF84 00 51 01 07 70 6F 73 5F 24 65 71 14 02 52 55
   10 02 0F 53 09 02 54 06 02 04 55 6E 69 74 08 07
   56 4F FFFFFF81 FFFFFF80 FFFFFFC0 00 4C 01 03 78 24 31 08 06 58 31
   FFFFFFA0 FFFFFFA0 04 4C 01 04 70 6F 73 20 08 07 5A 31 FFFFFF81 FFFFFF80
   FFFFFF84 00 5B 01 04 63 6F 70 79 14 02 3F 5C 08 07 38
   59 FFFFFF90 FFFFFF80 FFFFFFC0 00 3A 08 07 5E 31 FFFFFF91 FFFFFF80 FFFFFF84 00 5F 01
   0E 63 6F 70 79 24 64 65 66 61 75 6C 74 24 31 15
   01 60 2A 02 3A 61 2B 01 62 10 02 63 68 0D 01 64
   0A 02 65 66 01 09 75 6E 63 68 65 63 6B 65 64 0A
   02 67 06 01 0A 61 6E 6E 6F 74 61 74 69 6F 6E 09
   02 69 64 02 11 75 6E 63 68 65 63 6B 65 64 56 61
   72 69 61 6E 63 65 08 08 6B 31 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF84 20 6C
   01 08 68 61 73 68 43 6F 64 65 14 01 4C 08 08 6E
   31 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF84 20 6F 01 08 74 6F 53 74 72 69 6E
   67 14 01 70 10 02 71 74 0E 02 0F 72 09 02 73 06
   01 06 50 72 65 64 65 66 09 02 75 76 02 06 53 74
   72 69 6E 67 0A 02 73 06 08 08 78 31 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF84
   20 79 01 06 65 71 75 61 6C 73 14 02 44 7A 08 07
   56 77 FFFFFF81 FFFFFF80 FFFFFFC0 00 7B 10 02 0F 7C 09 02 7D 06 02
   03 41 6E 79 08 09 7F 31 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF84 20 FFFFFF81 00 01
   0D 70 72 6F 64 75 63 74 50 72 65 66 69 78 15 02
   FFFFFF81 01 10 03 1A FFFFFF81 02 09 02 75 1B 08 09 FFFFFF81 04 31
   FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF84 20 4B 01 0C 70 72 6F 64 75 63 74 41
   72 69 74 79 08 0A FFFFFF81 06 31 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF84 20 FFFFFF81 07
   01 0E 70 72 6F 64 75 63 74 45 6C 65 6D 65 6E 74
   14 03 7B FFFFFF81 08 08 08 56 FFFFFF81 05 FFFFFF81 FFFFFF80 FFFFFFC0 00 4C 08
   0A FFFFFF81 0A 31 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF84 20 FFFFFF81 0B 01 08 63 61 6E
   45 71 75 61 6C 14 03 44 FFFFFF81 0C 08 08 56 FFFFFF81 09 FFFFFF81
   FFFFFF80 FFFFFFC0 00 7B 28 03 31 FFFFFF81 0E 10 03 0F FFFFFF81 0F 09 03
   FFFFFF81 10 06 02 0C 73 65 72 69 61 6C 69 7A 61 62 6C
   65 07 09 FFFFFF81 12 00 FFFFFF81 FFFFFF80 FFFFFF88 02 FFFFFF81 13 01 06 4C 65
   74 74 65 72 10 03 24 FFFFFF81 14 06 09 32 00 FFFFFF84 FFFFFF81 FFFFFF80
   FFFFFF88 02 FFFFFF81 15 13 06 FFFFFF81 14 19 FFFFFF81 16 0E 10 05 0F FFFFFF81
   17 3A 3F 09 03 FFFFFF81 18 06 02 09 46 75 6E 63 74 69
   6F 6E 31 08 07 13 FFFFFF81 14 FFFFFF84 00 FFFFFF81 1A 14 02 FFFFFF81 13
   08 0A FFFFFF81 1C FFFFFF81 14 FFFFFF81 FFFFFF80 FFFFFF84 40 FFFFFF81 1D 01 05 61 70
   70 6C 79 14 03 3F FFFFFF81 1E 08 06 38 FFFFFF81 1B FFFFFFC0 00 3A
   08 0A FFFFFF81 20 FFFFFF81 14 FFFFFF81 FFFFFF80 FFFFFF84 40 FFFFFF81 21 01 07 75 6E
   61 70 70 6C 79 14 04 FFFFFF81 22 FFFFFF81 25 10 04 0F FFFFFF81 23
   3A 09 03 FFFFFF81 24 06 02 04 53 6F 6D 65 08 07 FFFFFF81 26
   FFFFFF81 1F FFFFFFC0 00 3F 01 03 78 24 30 06 0A FFFFFF81 28 00 FFFFFF84
   FFFFFF80 FFFFFF80 FFFFFF80 40 FFFFFF81 29 02 08 57 69 6C 64 63 61 72 64
   13 05 FFFFFF81 27 2B 0E 34 08 07 13 FFFFFF81 27 FFFFFF84 00 FFFFFF81 2B
   14 02 FFFFFF81 2C 10 03 24 FFFFFF81 27 08 09 42 FFFFFF81 27 FFFFFF88 FFFFFFC2
   FFFFFF80 FFFFFF84 02 43 08 09 48 FFFFFF81 27 FFFFFF88 FFFFFF80 FFFFFFA0 FFFFFFA0 06 44 08
   08 4A FFFFFF81 27 FFFFFFC0 FFFFFF80 FFFFFF84 00 4B 08 09 50 FFFFFF81 27 FFFFFFC0 FFFFFF80
   FFFFFF84 00 FFFFFF81 31 14 03 52 FFFFFF81 32 08 08 56 FFFFFF81 30 FFFFFF81 FFFFFF80
   FFFFFFC0 00 4C 08 07 58 FFFFFF81 27 FFFFFFA0 FFFFFFA0 04 4C 08 09 6B FFFFFF81
   27 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF84 20 6C 08 09 6E FFFFFF81 27 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF84
   20 6F 08 0A 78 FFFFFF81 27 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF84 20 FFFFFF81 37 14 03
   44 FFFFFF81 38 08 08 56 FFFFFF81 36 FFFFFF81 FFFFFF80 FFFFFFC0 00 7B 08 0A 7F
   FFFFFF81 27 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF84 20 FFFFFF81 00 08 0A FFFFFF81 04 FFFFFF81 27 FFFFFF84
   FFFFFF80 FFFFFF80 FFFFFF84 20 4B 08 0B FFFFFF81 06 FFFFFF81 27 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF84 20
   FFFFFF81 3C 14 03 7B FFFFFF81 3D 08 08 56 FFFFFF81 3B FFFFFF81 FFFFFF80 FFFFFFC0 00
   4C 08 0B FFFFFF81 0A FFFFFF81 27 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF84 20 FFFFFF81 3F 14 03
   44 FFFFFF81 40 08 08 56 FFFFFF81 3E FFFFFF81 FFFFFF80 FFFFFFC0 00 7B 28 04 FFFFFF81
   27 FFFFFF81 0E 07 09 FFFFFF81 43 00 FFFFFF81 FFFFFF80 FFFFFF88 02 FFFFFF81 44 01 08
   57 69 6C 64 63 61 72 64 10 03 24 FFFFFF81 45 06 0A FFFFFF81
   28 00 FFFFFF84 FFFFFF81 FFFFFF80 FFFFFF88 02 FFFFFF81 46 13 06 FFFFFF81 45 19 FFFFFF81 47
   0E 10 05 0F FFFFFF81 48 FFFFFF81 2C 09 03 FFFFFF81 49 06 02 09 46
   75 6E 63 74 69 6F 6E 30 08 07 13 FFFFFF81 45 FFFFFF84 00 FFFFFF81
   4B 14 02 FFFFFF81 44 08 0A FFFFFF81 1C FFFFFF81 45 FFFFFF81 FFFFFF80 FFFFFF84 40 FFFFFF81
   2B 08 0A FFFFFF81 20 FFFFFF81 45 FFFFFF81 FFFFFF80 FFFFFF84 40 FFFFFF81 4E 14 03 44
   FFFFFF81 4F 08 08 FFFFFF81 26 FFFFFF81 4D FFFFFFC0 00 FFFFFF81 2C 
  InnerClass: 
   public abstract Label=class scala/util/regexp/WordExp$Label of class scala/util/regexp/WordExp
   public Letter=class scala/util/regexp/WordExp$Letter of class scala/util/regexp/WordExp
   public Wildcard=class scala/util/regexp/WordExp$Wildcard of class scala/util/regexp/WordExp
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	WordExp.scala;
Asciz	Letter$module;
Asciz	Lscala/util/regexp/WordExp$Letter$;;
Asciz	Wildcard$module;
Asciz	Lscala/util/regexp/WordExp$Wildcard$;;
Asciz	<init>;
Asciz	()V;
Asciz	Code;
Asciz	LineNumberTable;
Asciz	scala/util/regexp/Base;
class	scala/util/regexp/Base
NameAndType	"<init>":()V
Method	scala/util/regexp/Base."<init>":()V
Asciz	Letter;
Asciz	()Lscala/util/regexp/WordExp$Letter$;;
Asciz	scala/util/regexp/WordExp;
class	scala/util/regexp/WordExp
NameAndType	Letter$module:Lscala/util/regexp/WordExp$Letter$;
Field	scala/util/regexp/WordExp.Letter$module:Lscala/util/regexp/WordExp$Letter$;
Asciz	scala/util/regexp/WordExp$Letter$;
class	scala/util/regexp/WordExp$Letter$
Asciz	(Lscala/util/regexp/WordExp;)V;
NameAndType	"<init>":(Lscala/util/regexp/WordExp;)V
Method	scala/util/regexp/WordExp$Letter$."<init>":(Lscala/util/regexp/WordExp;)V
Asciz	Wildcard;
Asciz	()Lscala/util/regexp/WordExp$Wildcard$;;
NameAndType	Wildcard$module:Lscala/util/regexp/WordExp$Wildcard$;
Field	scala/util/regexp/WordExp.Wildcard$module:Lscala/util/regexp/WordExp$Wildcard$;
Asciz	scala/util/regexp/WordExp$Wildcard$;
class	scala/util/regexp/WordExp$Wildcard$
Method	scala/util/regexp/WordExp$Wildcard$."<init>":(Lscala/util/regexp/WordExp;)V
Asciz	ScalaSig;
Asciz	InnerClasses;
Asciz	scala/util/regexp/WordExp$Label;
class	scala/util/regexp/WordExp$Label
Asciz	Label;
Asciz	scala/util/regexp/WordExp$Letter;
class	scala/util/regexp/WordExp$Letter
Asciz	scala/util/regexp/WordExp$Wildcard;
class	scala/util/regexp/WordExp$Wildcard
Asciz	scala/ScalaObject;
class	scala/ScalaObject

{
private scala.util.regexp.WordExp$Letter$ Letter$module;
  Signature: Lscala/util/regexp/WordExp$Letter$;

private scala.util.regexp.WordExp$Wildcard$ Wildcard$module;
  Signature: Lscala/util/regexp/WordExp$Wildcard$;

public scala.util.regexp.WordExp();
  Signature: ()V
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokespecial	Method scala/util/regexp/Base."<init>":()V
	return
  Labels:

public final scala.util.regexp.WordExp$Letter$ Letter();
  Signature: ()Lscala/util/regexp/WordExp$Letter$;
  Code:
   Stack=4, Locals=1, Args_size=1
	aload_0
	getfield	Field Letter$module:Lscala/util/regexp/WordExp$Letter$;
	ifnonnull	l1 // aload_0
	aload_0
	new	class scala/util/regexp/WordExp$Letter$
	dup
	aload_0
	invokespecial	Method scala/util/regexp/WordExp$Letter$."<init>":(Lscala/util/regexp/WordExp;)V
	putfield	Field Letter$module:Lscala/util/regexp/WordExp$Letter$;
l1	aload_0
	getfield	Field Letter$module:Lscala/util/regexp/WordExp$Letter$;
	areturn
  Labels:
   	l1 = 19 // aload_0

public final scala.util.regexp.WordExp$Wildcard$ Wildcard();
  Signature: ()Lscala/util/regexp/WordExp$Wildcard$;
  Code:
   Stack=4, Locals=1, Args_size=1
	aload_0
	getfield	Field Wildcard$module:Lscala/util/regexp/WordExp$Wildcard$;
	ifnonnull	l1 // aload_0
	aload_0
	new	class scala/util/regexp/WordExp$Wildcard$
	dup
	aload_0
	invokespecial	Method scala/util/regexp/WordExp$Wildcard$."<init>":(Lscala/util/regexp/WordExp;)V
	putfield	Field Wildcard$module:Lscala/util/regexp/WordExp$Wildcard$;
l1	aload_0
	getfield	Field Wildcard$module:Lscala/util/regexp/WordExp$Wildcard$;
	areturn
  Labels:
   	l1 = 19 // aload_0

}

