Compiled from "WordExp.scala"
public abstract class scala.util.regexp.WordExp extends scala.util.regexp.Base implements scala.ScalaObject
  SourceFile: "WordExp.scala"
  ScalaSig: length = 0x588
   05 00 FFFFFF81 45 06 08 01 02 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF81 00 09 02 07
   57 6F 72 64 45 78 70 0A 02 03 04 01 06 72 65 67
   65 78 70 0A 02 05 06 01 04 75 74 69 6C 0A 01 07
   01 05 73 63 61 6C 61 03 00 13 03 00 0A 0E 10 02
   0B 0C 0D 01 02 09 02 0D 02 02 04 42 61 73 65 10
   02 0F 10 0D 01 06 09 02 11 06 02 0B 53 63 61 6C
   61 4F 62 6A 65 63 74 08 05 13 00 FFFFFF84 00 14 01 06
   3C 69 6E 69 74 3E 14 01 15 10 02 0B 00 06 08 17
   00 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF81 00 18 02 05 4C 61 62 65 6C 13 03
   16 19 0E 10 02 1A 1F 0D 01 1B 0A 02 1C 1D 01 04
   6C 61 6E 67 0A 01 1E 01 04 6A 61 76 61 09 02 20
   1B 02 06 4F 62 6A 65 63 74 08 05 13 16 FFFFFF84 00 22
   14 01 23 10 02 24 16 0D 01 00 04 08 26 00 FFFFFF84 FFFFFF80
   FFFFFF80 FFFFFF82 00 27 02 08 5F 72 65 67 65 78 70 54 11 02
   28 2B 10 02 0F 29 09 02 2A 06 02 07 4E 6F 74 68
   69 6E 67 10 02 24 2C 09 02 2D 0C 02 06 52 65 67
   45 78 70 04 08 2F 00 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF82 00 30 02 07 5F
   6C 61 62 65 6C 54 11 02 28 23 06 08 32 00 FFFFFF84 FFFFFF80
   FFFFFF80 FFFFFF80 40 33 02 06 4C 65 74 74 65 72 13 04 31 2B
   0E 34 10 02 0F 35 09 02 36 06 02 07 50 72 6F 64
   75 63 74 08 08 38 31 FFFFFF82 FFFFFFCA FFFFFF80 FFFFFF84 00 39 01 01 61
   15 01 3A 10 02 24 2E 08 08 3C 31 FFFFFF82 FFFFFF88 FFFFFFA0 FFFFFF80 04
   3A 01 02 61 20 08 05 13 31 FFFFFF84 00 3E 14 02 3F 40
   10 02 24 31 08 05 38 3D FFFFFFC0 00 3A 08 08 42 31 FFFFFF88
   FFFFFFC2 FFFFFF80 FFFFFF84 02 43 01 0A 69 73 4E 75 6C 6C 61 62 6C
   65 15 01 44 10 02 0F 45 09 02 46 06 02 07 42 6F
   6F 6C 65 61 6E 08 08 48 31 FFFFFF88 FFFFFF80 FFFFFFA0 FFFFFFA0 06 44 01
   0B 69 73 4E 75 6C 6C 61 62 6C 65 20 08 07 4A 31
   FFFFFFC0 FFFFFF80 FFFFFF84 00 4B 01 03 70 6F 73 15 01 4C 10 02 0F
   4D 09 02 4E 06 02 03 49 6E 74 08 07 50 31 FFFFFFC0 FFFFFF80
   FFFFFF84 00 51 01 07 70 6F 73 5F 24 65 71 14 02 52 55
   10 02 0F 53 09 02 54 06 02 04 55 6E 69 74 08 07
   56 4F FFFFFF81 FFFFFF80 FFFFFFC0 00 4C 01 03 78 24 31 08 06 58 31
   FFFFFFA0 FFFFFFA0 04 4C 01 04 70 6F 73 20 08 07 5A 31 FFFFFF81 FFFFFF80
   FFFFFF84 00 5B 01 04 63 6F 70 79 14 02 3F 5C 08 08 5D
   38 59 FFFFFF90 FFFFFF80 FFFFFFC0 00 3A 08 07 5E 31 FFFFFF91 FFFFFF80 FFFFFF84 00 39
   01 0E 63 6F 70 79 24 64 65 66 61 75 6C 74 24 31
   08 08 60 31 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF84 20 61 01 08 68 61 73 68
   43 6F 64 65 14 01 4C 08 08 63 31 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF84 20
   64 01 08 74 6F 53 74 72 69 6E 67 14 01 65 10 02
   66 69 0E 02 0F 67 09 02 68 06 01 06 50 72 65 64
   65 66 09 02 6A 6B 02 06 53 74 72 69 6E 67 0A 02
   68 06 08 08 6D 31 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF84 20 6E 01 06 65 71
   75 61 6C 73 14 02 44 6F 08 07 56 6C FFFFFF81 FFFFFF80 FFFFFFC0 00
   70 10 02 0F 71 09 02 72 06 02 03 41 6E 79 08 08
   74 31 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF84 20 75 01 0D 70 72 6F 64 75 63
   74 50 72 65 66 69 78 15 01 76 10 02 1A 77 09 02
   6A 1B 08 08 79 31 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF84 20 4B 01 0C 70 72
   6F 64 75 63 74 41 72 69 74 79 08 08 7B 31 FFFFFF84 FFFFFF80
   FFFFFF80 FFFFFF84 20 7C 01 0E 70 72 6F 64 75 63 74 45 6C 65
   6D 65 6E 74 14 02 70 7D 08 07 56 7A FFFFFF81 FFFFFF80 FFFFFFC0 00
   4C 08 09 7F 31 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF84 20 FFFFFF81 00 01 08 63 61
   6E 45 71 75 61 6C 14 03 44 FFFFFF81 01 08 07 56 7E FFFFFF81
   FFFFFF80 FFFFFFC0 00 70 28 03 31 FFFFFF81 03 10 03 0F FFFFFF81 04 09 03
   FFFFFF81 05 06 02 0C 73 65 72 69 61 6C 69 7A 61 62 6C
   65 07 09 FFFFFF81 07 00 FFFFFF81 FFFFFF80 FFFFFF88 02 FFFFFF81 08 01 06 4C 65
   74 74 65 72 10 03 24 FFFFFF81 09 06 09 32 00 FFFFFF84 FFFFFF81 FFFFFF80
   FFFFFF88 02 FFFFFF81 0A 13 06 FFFFFF81 09 19 FFFFFF81 0B 0E 10 05 0F FFFFFF81
   0C 3A 3F 09 03 FFFFFF81 0D 06 02 09 46 75 6E 63 74 69
   6F 6E 31 08 07 13 FFFFFF81 09 FFFFFF84 00 FFFFFF81 0F 14 02 FFFFFF81 08
   08 0A FFFFFF81 11 FFFFFF81 09 FFFFFF81 FFFFFF80 FFFFFF84 40 FFFFFF81 12 01 05 61 70
   70 6C 79 14 03 3F FFFFFF81 13 08 06 38 FFFFFF81 10 FFFFFFC0 00 3A
   08 0A FFFFFF81 15 FFFFFF81 09 FFFFFF81 FFFFFF80 FFFFFF84 40 FFFFFF81 16 01 07 75 6E
   61 70 70 6C 79 14 04 FFFFFF81 17 FFFFFF81 1A 10 04 0F FFFFFF81 18
   3A 09 03 FFFFFF81 19 06 02 04 53 6F 6D 65 08 07 FFFFFF81 1B
   FFFFFF81 14 FFFFFFC0 00 3F 01 03 78 24 30 06 0A FFFFFF81 1D 00 FFFFFF84
   FFFFFF80 FFFFFF80 FFFFFF80 40 FFFFFF81 1E 02 08 57 69 6C 64 63 61 72 64
   13 05 FFFFFF81 1C 2B 0E 34 08 07 13 FFFFFF81 1C FFFFFF84 00 FFFFFF81 20
   14 02 FFFFFF81 21 10 03 24 FFFFFF81 1C 08 09 42 FFFFFF81 1C FFFFFF88 FFFFFFC2
   FFFFFF80 FFFFFF84 02 43 08 09 48 FFFFFF81 1C FFFFFF88 FFFFFF80 FFFFFFA0 FFFFFFA0 06 44 08
   08 4A FFFFFF81 1C FFFFFFC0 FFFFFF80 FFFFFF84 00 4B 08 09 50 FFFFFF81 1C FFFFFFC0 FFFFFF80
   FFFFFF84 00 FFFFFF81 26 14 03 52 FFFFFF81 27 08 08 56 FFFFFF81 25 FFFFFF81 FFFFFF80
   FFFFFFC0 00 4C 08 07 58 FFFFFF81 1C FFFFFFA0 FFFFFFA0 04 4C 08 09 60 FFFFFF81
   1C FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF84 20 61 08 09 63 FFFFFF81 1C FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF84
   20 64 08 0A 6D FFFFFF81 1C FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF84 20 FFFFFF81 2C 14 03
   44 FFFFFF81 2D 08 08 56 FFFFFF81 2B FFFFFF81 FFFFFF80 FFFFFFC0 00 70 08 09 74
   FFFFFF81 1C FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF84 20 75 08 09 79 FFFFFF81 1C FFFFFF84 FFFFFF80 FFFFFF80
   FFFFFF84 20 4B 08 0A 7B FFFFFF81 1C FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF84 20 FFFFFF81 31 14
   03 70 FFFFFF81 32 08 08 56 FFFFFF81 30 FFFFFF81 FFFFFF80 FFFFFFC0 00 4C 08 0A
   7F FFFFFF81 1C FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF84 20 FFFFFF81 34 14 03 44 FFFFFF81 35 08
   08 56 FFFFFF81 33 FFFFFF81 FFFFFF80 FFFFFFC0 00 70 28 04 FFFFFF81 1C FFFFFF81 03 07
   09 FFFFFF81 38 00 FFFFFF81 FFFFFF80 FFFFFF88 02 FFFFFF81 39 01 08 57 69 6C 64
   63 61 72 64 10 03 24 FFFFFF81 3A 06 0A FFFFFF81 1D 00 FFFFFF84 FFFFFF81
   FFFFFF80 FFFFFF88 02 FFFFFF81 3B 13 06 FFFFFF81 3A 19 FFFFFF81 3C 0E 10 05 0F
   FFFFFF81 3D FFFFFF81 21 09 03 FFFFFF81 3E 06 02 09 46 75 6E 63 74
   69 6F 6E 30 08 07 13 FFFFFF81 3A FFFFFF84 00 FFFFFF81 40 14 02 FFFFFF81
   39 08 0A FFFFFF81 11 FFFFFF81 3A FFFFFF81 FFFFFF80 FFFFFF84 40 FFFFFF81 20 08 0A FFFFFF81
   15 FFFFFF81 3A FFFFFF81 FFFFFF80 FFFFFF84 40 FFFFFF81 43 14 03 44 FFFFFF81 44 08 08
   FFFFFF81 1B FFFFFF81 42 FFFFFFC0 00 FFFFFF81 21 
  InnerClass: 
   public abstract #37= #36 of #18; //Label=class scala/util/regexp/WordExp$Label of class scala/util/regexp/WordExp
   public #15= #39 of #18; //Letter=class scala/util/regexp/WordExp$Letter of class scala/util/regexp/WordExp
   public #26= #41 of #18; //Wildcard=class scala/util/regexp/WordExp$Wildcard of class scala/util/regexp/WordExp
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	WordExp.scala;
const #3 = Asciz	Letter$module;
const #4 = Asciz	Lscala/util/regexp/WordExp$Letter$;;
const #5 = Asciz	Wildcard$module;
const #6 = Asciz	Lscala/util/regexp/WordExp$Wildcard$;;
const #7 = Asciz	<init>;
const #8 = Asciz	()V;
const #9 = Asciz	Code;
const #10 = Asciz	LineNumberTable;
const #11 = Asciz	scala/util/regexp/Base;
const #12 = class	#11;	//  scala/util/regexp/Base
const #13 = NameAndType	#7:#8;//  "<init>":()V
const #14 = Method	#12.#13;	//  scala/util/regexp/Base."<init>":()V
const #15 = Asciz	Letter;
const #16 = Asciz	()Lscala/util/regexp/WordExp$Letter$;;
const #17 = Asciz	scala/util/regexp/WordExp;
const #18 = class	#17;	//  scala/util/regexp/WordExp
const #19 = NameAndType	#3:#4;//  Letter$module:Lscala/util/regexp/WordExp$Letter$;
const #20 = Field	#18.#19;	//  scala/util/regexp/WordExp.Letter$module:Lscala/util/regexp/WordExp$Letter$;
const #21 = Asciz	scala/util/regexp/WordExp$Letter$;
const #22 = class	#21;	//  scala/util/regexp/WordExp$Letter$
const #23 = Asciz	(Lscala/util/regexp/WordExp;)V;
const #24 = NameAndType	#7:#23;//  "<init>":(Lscala/util/regexp/WordExp;)V
const #25 = Method	#22.#24;	//  scala/util/regexp/WordExp$Letter$."<init>":(Lscala/util/regexp/WordExp;)V
const #26 = Asciz	Wildcard;
const #27 = Asciz	()Lscala/util/regexp/WordExp$Wildcard$;;
const #28 = NameAndType	#5:#6;//  Wildcard$module:Lscala/util/regexp/WordExp$Wildcard$;
const #29 = Field	#18.#28;	//  scala/util/regexp/WordExp.Wildcard$module:Lscala/util/regexp/WordExp$Wildcard$;
const #30 = Asciz	scala/util/regexp/WordExp$Wildcard$;
const #31 = class	#30;	//  scala/util/regexp/WordExp$Wildcard$
const #32 = Method	#31.#24;	//  scala/util/regexp/WordExp$Wildcard$."<init>":(Lscala/util/regexp/WordExp;)V
const #33 = Asciz	ScalaSig;
const #34 = Asciz	InnerClasses;
const #35 = Asciz	scala/util/regexp/WordExp$Label;
const #36 = class	#35;	//  scala/util/regexp/WordExp$Label
const #37 = Asciz	Label;
const #38 = Asciz	scala/util/regexp/WordExp$Letter;
const #39 = class	#38;	//  scala/util/regexp/WordExp$Letter
const #40 = Asciz	scala/util/regexp/WordExp$Wildcard;
const #41 = class	#40;	//  scala/util/regexp/WordExp$Wildcard
const #42 = Asciz	scala/ScalaObject;
const #43 = class	#42;	//  scala/ScalaObject

{
public scala.util.regexp.WordExp();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokespecial	#14; //Method scala/util/regexp/Base."<init>":()V
   4:	return
  LineNumberTable: 
   line 40: 0


public final scala.util.regexp.WordExp$Letter$ Letter();
  Code:
   Stack=4, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#20; //Field Letter$module:Lscala/util/regexp/WordExp$Letter$;
   4:	ifnonnull	19
   7:	aload_0
   8:	new	#22; //class scala/util/regexp/WordExp$Letter$
   11:	dup
   12:	aload_0
   13:	invokespecial	#25; //Method scala/util/regexp/WordExp$Letter$."<init>":(Lscala/util/regexp/WordExp;)V
   16:	putfield	#20; //Field Letter$module:Lscala/util/regexp/WordExp$Letter$;
   19:	aload_0
   20:	getfield	#20; //Field Letter$module:Lscala/util/regexp/WordExp$Letter$;
   23:	areturn
  LineNumberTable: 
   line 47: 0


public final scala.util.regexp.WordExp$Wildcard$ Wildcard();
  Code:
   Stack=4, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#29; //Field Wildcard$module:Lscala/util/regexp/WordExp$Wildcard$;
   4:	ifnonnull	19
   7:	aload_0
   8:	new	#31; //class scala/util/regexp/WordExp$Wildcard$
   11:	dup
   12:	aload_0
   13:	invokespecial	#32; //Method scala/util/regexp/WordExp$Wildcard$."<init>":(Lscala/util/regexp/WordExp;)V
   16:	putfield	#29; //Field Wildcard$module:Lscala/util/regexp/WordExp$Wildcard$;
   19:	aload_0
   20:	getfield	#29; //Field Wildcard$module:Lscala/util/regexp/WordExp$Wildcard$;
   23:	areturn
  LineNumberTable: 
   line 52: 0


}

