Compiled from "Base.scala"
public class scala.util.regexp.Base$Alt extends scala.util.regexp.Base$RegExp implements scala.ScalaObject
  SourceFile: "Base.scala"
  Scala: length = 0x
   
  InnerClass: 
   public Alt=class scala/util/regexp/Base$Alt of class scala/util/regexp/Base
   public abstract RegExp=class scala/util/regexp/Base$RegExp of class scala/util/regexp/Base
   public final $anonfun$1=class scala/util/regexp/Base$Alt$$anonfun$1 of class scala/util/regexp/Base$Alt
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	Base.scala;
Asciz	isNullable;
Asciz	Z;
Asciz	rs;
Asciz	Lscala/collection/Seq;;
Asciz	Lscala/collection/Seq<Lscala/util/regexp/Base$RegExp;>;;
Asciz	Signature;
Asciz	<init>;
Asciz	(Lscala/util/regexp/Base;Lscala/collection/Seq;)V;
Asciz	Code;
Asciz	LineNumberTable;
Asciz	scala/util/regexp/Base$Alt;
class	scala/util/regexp/Base$Alt
NameAndType	rs:Lscala/collection/Seq;
Field	scala/util/regexp/Base$Alt.rs:Lscala/collection/Seq;
Asciz	scala/util/regexp/Base$RegExp;
class	scala/util/regexp/Base$RegExp
Asciz	(Lscala/util/regexp/Base;)V;
NameAndType	"<init>":(Lscala/util/regexp/Base;)V
Method	scala/util/regexp/Base$RegExp."<init>":(Lscala/util/regexp/Base;)V
Asciz	scala/util/regexp/Base$Alt$$anonfun$1;
class	scala/util/regexp/Base$Alt$$anonfun$1
Asciz	(Lscala/util/regexp/Base$Alt;)V;
NameAndType	"<init>":(Lscala/util/regexp/Base$Alt;)V
Method	scala/util/regexp/Base$Alt$$anonfun$1."<init>":(Lscala/util/regexp/Base$Alt;)V
Asciz	scala/collection/IterableLike;
class	scala/collection/IterableLike
Asciz	exists;
Asciz	(Lscala/Function1;)Z;
NameAndType	exists:(Lscala/Function1;)Z
InterfaceMethod	scala/collection/IterableLike.exists:(Lscala/Function1;)Z
NameAndType	isNullable:Z
Field	scala/util/regexp/Base$Alt.isNullable:Z
Asciz	this;
Asciz	Lscala/util/regexp/Base$Alt;;
Asciz	$outer;
Asciz	Lscala/util/regexp/Base;;
Asciz	LocalVariableTable;
Asciz	(Lscala/util/regexp/Base;Lscala/collection/Seq<Lscala/util/regexp/Base$RegExp;>;)V;
Asciz	scala$util$regexp$Base$Alt$$$outer;
Asciz	()Lscala/util/regexp/Base;;
NameAndType	$outer:Lscala/util/regexp/Base;
Field	scala/util/regexp/Base$RegExp.$outer:Lscala/util/regexp/Base;
Asciz	()Z;
Asciz	()Lscala/collection/Seq;;
Asciz	()Lscala/collection/Seq<Lscala/util/regexp/Base$RegExp;>;;
Asciz	Scala;
Asciz	InnerClasses;
Asciz	scala/util/regexp/Base;
class	scala/util/regexp/Base
Asciz	Alt;
Asciz	RegExp;
Asciz	$anonfun$1;
Asciz	scala/ScalaObject;
class	scala/ScalaObject

{
private final boolean isNullable;
  Signature: Z

private final scala.collection.Seq rs;
  Signature: Lscala/collection/Seq;
  Signature: length = 0x2
   00 07 

public scala.util.regexp.Base$Alt(scala.util.regexp.Base, scala.collection.Seq);
  Signature: (Lscala/util/regexp/Base;Lscala/collection/Seq;)V
  Code:
   Stack=5, Locals=3, Args_size=3
	aload_0
	aload_2
	putfield	Field rs:Lscala/collection/Seq;
	aload_0
	aload_1
	invokespecial	Method scala/util/regexp/Base$RegExp."<init>":(Lscala/util/regexp/Base;)V
	aload_0
	aload_2
	new	class scala/util/regexp/Base$Alt$$anonfun$1
	dup
	aload_0
	invokespecial	Method scala/util/regexp/Base$Alt$$anonfun$1."<init>":(Lscala/util/regexp/Base$Alt;)V
	invokeinterface	InterfaceMethod scala/collection/IterableLike.exists:(Lscala/Function1;)Z
	putfield	Field isNullable:Z
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      29      0    this       Lscala/util/regexp/Base$Alt;
   0      29      1    $outer       Lscala/util/regexp/Base;
   0      29      2    rs       Lscala/collection/Seq;

  Signature: length = 0x2
   00 28 

public scala.util.regexp.Base scala$util$regexp$Base$Alt$$$outer();
  Signature: ()Lscala/util/regexp/Base;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field scala/util/regexp/Base$RegExp.$outer:Lscala/util/regexp/Base;
	areturn
  Labels:

public final boolean isNullable();
  Signature: ()Z
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field isNullable:Z
	ireturn
  Labels:

public scala.collection.Seq rs();
  Signature: ()Lscala/collection/Seq;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field rs:Lscala/collection/Seq;
	areturn
  Labels:
  Signature: length = 0x2
   00 2F 

}

