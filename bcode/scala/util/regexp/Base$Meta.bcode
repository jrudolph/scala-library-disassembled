Compiled from "Base.scala"
public class scala.util.regexp.Base$Meta extends scala.util.regexp.Base$RegExp implements scala.ScalaObject
  SourceFile: "Base.scala"
  Scala: length = 0x
   
  InnerClass: 
   public #40= #12 of #39; //Meta=class scala/util/regexp/Base$Meta of class scala/util/regexp/Base
   public abstract #41= #16 of #39; //RegExp=class scala/util/regexp/Base$RegExp of class scala/util/regexp/Base
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Base.scala;
const #3 = Asciz	isNullable;
const #4 = Asciz	Z;
const #5 = Asciz	r1;
const #6 = Asciz	Lscala/util/regexp/Base$RegExp;;
const #7 = Asciz	<init>;
const #8 = Asciz	(Lscala/util/regexp/Base;Lscala/util/regexp/Base$RegExp;)V;
const #9 = Asciz	Code;
const #10 = Asciz	LineNumberTable;
const #11 = Asciz	scala/util/regexp/Base$Meta;
const #12 = class	#11;	//  scala/util/regexp/Base$Meta
const #13 = NameAndType	#5:#6;//  r1:Lscala/util/regexp/Base$RegExp;
const #14 = Field	#12.#13;	//  scala/util/regexp/Base$Meta.r1:Lscala/util/regexp/Base$RegExp;
const #15 = Asciz	scala/util/regexp/Base$RegExp;
const #16 = class	#15;	//  scala/util/regexp/Base$RegExp
const #17 = Asciz	(Lscala/util/regexp/Base;)V;
const #18 = NameAndType	#7:#17;//  "<init>":(Lscala/util/regexp/Base;)V
const #19 = Method	#16.#18;	//  scala/util/regexp/Base$RegExp."<init>":(Lscala/util/regexp/Base;)V
const #20 = Asciz	()Z;
const #21 = NameAndType	#3:#20;//  isNullable:()Z
const #22 = Method	#16.#21;	//  scala/util/regexp/Base$RegExp.isNullable:()Z
const #23 = NameAndType	#3:#4;//  isNullable:Z
const #24 = Field	#12.#23;	//  scala/util/regexp/Base$Meta.isNullable:Z
const #25 = Asciz	this;
const #26 = Asciz	Lscala/util/regexp/Base$Meta;;
const #27 = Asciz	$outer;
const #28 = Asciz	Lscala/util/regexp/Base;;
const #29 = Asciz	LocalVariableTable;
const #30 = Asciz	scala$util$regexp$Base$Meta$$$outer;
const #31 = Asciz	()Lscala/util/regexp/Base;;
const #32 = NameAndType	#27:#28;//  $outer:Lscala/util/regexp/Base;
const #33 = Field	#16.#32;	//  scala/util/regexp/Base$RegExp.$outer:Lscala/util/regexp/Base;
const #34 = Asciz	r;
const #35 = Asciz	()Lscala/util/regexp/Base$RegExp;;
const #36 = Asciz	Scala;
const #37 = Asciz	InnerClasses;
const #38 = Asciz	scala/util/regexp/Base;
const #39 = class	#38;	//  scala/util/regexp/Base
const #40 = Asciz	Meta;
const #41 = Asciz	RegExp;
const #42 = Asciz	scala/ScalaObject;
const #43 = class	#42;	//  scala/ScalaObject

{
public scala.util.regexp.Base$Meta(scala.util.regexp.Base, scala.util.regexp.Base$RegExp);
  Code:
   Stack=2, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_2
   2:	putfield	#14; //Field r1:Lscala/util/regexp/Base$RegExp;
   5:	aload_0
   6:	aload_1
   7:	invokespecial	#19; //Method scala/util/regexp/Base$RegExp."<init>":(Lscala/util/regexp/Base;)V
   10:	aload_0
   11:	aload_2
   12:	invokevirtual	#22; //Method scala/util/regexp/Base$RegExp.isNullable:()Z
   15:	putfield	#24; //Field isNullable:Z
   18:	return
  LineNumberTable: 
   line 62: 0
   line 63: 10

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      19      0    this       Lscala/util/regexp/Base$Meta;
   0      19      1    $outer       Lscala/util/regexp/Base;
   0      19      2    r1       Lscala/util/regexp/Base$RegExp;


public scala.util.regexp.Base scala$util$regexp$Base$Meta$$$outer();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#33; //Field scala/util/regexp/Base$RegExp.$outer:Lscala/util/regexp/Base;
   4:	areturn
  LineNumberTable: 
   line 62: 0


public scala.util.regexp.Base$RegExp r();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#14; //Field r1:Lscala/util/regexp/Base$RegExp;
   4:	areturn
  LineNumberTable: 
   line 64: 0


public final boolean isNullable();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#24; //Field isNullable:Z
   4:	ireturn
  LineNumberTable: 
   line 63: 0


}

