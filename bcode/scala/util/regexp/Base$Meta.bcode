Compiled from "Base.scala"
public class scala.util.regexp.Base$Meta extends scala.util.regexp.Base$RegExp implements scala.ScalaObject
  SourceFile: "Base.scala"
  Scala: length = 0x
   
  InnerClass: 
   public Meta=class scala/util/regexp/Base$Meta of class scala/util/regexp/Base
   public abstract RegExp=class scala/util/regexp/Base$RegExp of class scala/util/regexp/Base
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	Base.scala;
Asciz	r1;
Asciz	Lscala/util/regexp/Base$RegExp;;
Asciz	isNullable;
Asciz	Z;
Asciz	()Z;
Asciz	Code;
Asciz	LineNumberTable;
Asciz	scala/util/regexp/Base$Meta;
class	scala/util/regexp/Base$Meta
NameAndType	isNullable:Z
Field	scala/util/regexp/Base$Meta.isNullable:Z
Asciz	r;
Asciz	()Lscala/util/regexp/Base$RegExp;;
NameAndType	r1:Lscala/util/regexp/Base$RegExp;
Field	scala/util/regexp/Base$Meta.r1:Lscala/util/regexp/Base$RegExp;
Asciz	scala$util$regexp$Base$Meta$$$outer;
Asciz	()Lscala/util/regexp/Base;;
Asciz	scala/util/regexp/Base$RegExp;
class	scala/util/regexp/Base$RegExp
Asciz	$outer;
Asciz	Lscala/util/regexp/Base;;
NameAndType	$outer:Lscala/util/regexp/Base;
Field	scala/util/regexp/Base$RegExp.$outer:Lscala/util/regexp/Base;
Asciz	<init>;
Asciz	(Lscala/util/regexp/Base;Lscala/util/regexp/Base$RegExp;)V;
Asciz	(Lscala/util/regexp/Base;)V;
NameAndType	"<init>":(Lscala/util/regexp/Base;)V
Method	scala/util/regexp/Base$RegExp."<init>":(Lscala/util/regexp/Base;)V
NameAndType	isNullable:()Z
Method	scala/util/regexp/Base$RegExp.isNullable:()Z
Asciz	this;
Asciz	Lscala/util/regexp/Base$Meta;;
Asciz	LocalVariableTable;
Asciz	Scala;
Asciz	InnerClasses;
Asciz	scala/util/regexp/Base;
class	scala/util/regexp/Base
Asciz	Meta;
Asciz	RegExp;
Asciz	scala/ScalaObject;
class	scala/ScalaObject

{
private final scala.util.regexp.Base$RegExp r1;
  Signature: Lscala/util/regexp/Base$RegExp;

private final boolean isNullable;
  Signature: Z

public final boolean isNullable();
  Signature: ()Z
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field isNullable:Z
	ireturn
  Labels:

public scala.util.regexp.Base$RegExp r();
  Signature: ()Lscala/util/regexp/Base$RegExp;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field r1:Lscala/util/regexp/Base$RegExp;
	areturn
  Labels:

public scala.util.regexp.Base scala$util$regexp$Base$Meta$$$outer();
  Signature: ()Lscala/util/regexp/Base;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field scala/util/regexp/Base$RegExp.$outer:Lscala/util/regexp/Base;
	areturn
  Labels:

public scala.util.regexp.Base$Meta(scala.util.regexp.Base, scala.util.regexp.Base$RegExp);
  Signature: (Lscala/util/regexp/Base;Lscala/util/regexp/Base$RegExp;)V
  Code:
   Stack=2, Locals=3, Args_size=3
	aload_0
	aload_2
	putfield	Field r1:Lscala/util/regexp/Base$RegExp;
	aload_0
	aload_1
	invokespecial	Method scala/util/regexp/Base$RegExp."<init>":(Lscala/util/regexp/Base;)V
	aload_0
	aload_2
	invokevirtual	Method scala/util/regexp/Base$RegExp.isNullable:()Z
	putfield	Field isNullable:Z
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      19      0    this       Lscala/util/regexp/Base$Meta;
   0      19      1    $outer       Lscala/util/regexp/Base;
   0      19      2    r1       Lscala/util/regexp/Base$RegExp;


}

