Compiled from "PointedHedgeExp.scala"
public final class scala.util.regexp.PointedHedgeExp$TopIter$ extends java.lang.Object implements scala.Function2,scala.ScalaObject
  SourceFile: "PointedHedgeExp.scala"
  Scala: length = 0x
   
  InnerClass: 
   public abstract #84= #34 of #83; //RegExp=class scala/util/regexp/Base$RegExp of class scala/util/regexp/Base
   public #87= #42 of #86; //TopIter=class scala/util/regexp/PointedHedgeExp$TopIter of class scala/util/regexp/PointedHedgeExp
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	PointedHedgeExp.scala;
const #3 = Asciz	Scala;
const #4 = Asciz	$outer;
const #5 = Asciz	Lscala/util/regexp/PointedHedgeExp;;
const #6 = Asciz	<init>;
const #7 = Asciz	(Lscala/util/regexp/PointedHedgeExp;)V;
const #8 = Asciz	Code;
const #9 = Asciz	LineNumberTable;
const #10 = Asciz	java/lang/NullPointerException;
const #11 = class	#10;	//  java/lang/NullPointerException
const #12 = Asciz	()V;
const #13 = NameAndType	#6:#12;//  "<init>":()V
const #14 = Method	#11.#13;	//  java/lang/NullPointerException."<init>":()V
const #15 = Asciz	scala/util/regexp/PointedHedgeExp$TopIter$;
const #16 = class	#15;	//  scala/util/regexp/PointedHedgeExp$TopIter$
const #17 = NameAndType	#4:#5;//  $outer:Lscala/util/regexp/PointedHedgeExp;
const #18 = Field	#16.#17;	//  scala/util/regexp/PointedHedgeExp$TopIter$.$outer:Lscala/util/regexp/PointedHedgeExp;
const #19 = Asciz	java/lang/Object;
const #20 = class	#19;	//  java/lang/Object
const #21 = Method	#20.#13;	//  java/lang/Object."<init>":()V
const #22 = Asciz	scala/Function2$class;
const #23 = class	#22;	//  scala/Function2$class
const #24 = Asciz	$init$;
const #25 = Asciz	(Lscala/Function2;)V;
const #26 = NameAndType	#24:#25;//  $init$:(Lscala/Function2;)V
const #27 = Method	#23.#26;	//  scala/Function2$class.$init$:(Lscala/Function2;)V
const #28 = Asciz	this;
const #29 = Asciz	Lscala/util/regexp/PointedHedgeExp$TopIter$;;
const #30 = Asciz	LocalVariableTable;
const #31 = Asciz	apply;
const #32 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;;
const #33 = Asciz	scala/util/regexp/Base$RegExp;
const #34 = class	#33;	//  scala/util/regexp/Base$RegExp
const #35 = Asciz	(Lscala/util/regexp/Base$RegExp;Lscala/util/regexp/Base$RegExp;)Lscala/util/regexp/PointedHedgeExp$TopIter;;
const #36 = NameAndType	#31:#35;//  apply:(Lscala/util/regexp/Base$RegExp;Lscala/util/regexp/Base$RegExp;)Lscala/util/regexp/PointedHedgeExp$TopIter;
const #37 = Method	#16.#36;	//  scala/util/regexp/PointedHedgeExp$TopIter$.apply:(Lscala/util/regexp/Base$RegExp;Lscala/util/regexp/Base$RegExp;)Lscala/util/regexp/PointedHedgeExp$TopIter;
const #38 = Asciz	v1;
const #39 = Asciz	Ljava/lang/Object;;
const #40 = Asciz	v2;
const #41 = Asciz	scala/util/regexp/PointedHedgeExp$TopIter;
const #42 = class	#41;	//  scala/util/regexp/PointedHedgeExp$TopIter
const #43 = Asciz	(Lscala/util/regexp/PointedHedgeExp;Lscala/util/regexp/Base$RegExp;Lscala/util/regexp/Base$RegExp;)V;
const #44 = NameAndType	#6:#43;//  "<init>":(Lscala/util/regexp/PointedHedgeExp;Lscala/util/regexp/Base$RegExp;Lscala/util/regexp/Base$RegExp;)V
const #45 = Method	#42.#44;	//  scala/util/regexp/PointedHedgeExp$TopIter."<init>":(Lscala/util/regexp/PointedHedgeExp;Lscala/util/regexp/Base$RegExp;Lscala/util/regexp/Base$RegExp;)V
const #46 = Asciz	r1;
const #47 = Asciz	Lscala/util/regexp/Base$RegExp;;
const #48 = Asciz	r2;
const #49 = Asciz	unapply;
const #50 = Asciz	(Lscala/util/regexp/PointedHedgeExp$TopIter;)Lscala/Some;;
const #51 = Asciz	scala/Some;
const #52 = class	#51;	//  scala/Some
const #53 = Asciz	scala/Tuple2;
const #54 = class	#53;	//  scala/Tuple2
const #55 = Asciz	()Lscala/util/regexp/Base$RegExp;;
const #56 = NameAndType	#46:#55;//  r1:()Lscala/util/regexp/Base$RegExp;
const #57 = Method	#42.#56;	//  scala/util/regexp/PointedHedgeExp$TopIter.r1:()Lscala/util/regexp/Base$RegExp;
const #58 = NameAndType	#48:#55;//  r2:()Lscala/util/regexp/Base$RegExp;
const #59 = Method	#42.#58;	//  scala/util/regexp/PointedHedgeExp$TopIter.r2:()Lscala/util/regexp/Base$RegExp;
const #60 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)V;
const #61 = NameAndType	#6:#60;//  "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
const #62 = Method	#54.#61;	//  scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
const #63 = Asciz	(Ljava/lang/Object;)V;
const #64 = NameAndType	#6:#63;//  "<init>":(Ljava/lang/Object;)V
const #65 = Method	#52.#64;	//  scala/Some."<init>":(Ljava/lang/Object;)V
const #66 = Asciz	x$0;
const #67 = Asciz	Lscala/util/regexp/PointedHedgeExp$TopIter;;
const #68 = Asciz	tuple;
const #69 = Asciz	()Lscala/Function1;;
const #70 = Asciz	(Lscala/Function2;)Lscala/Function1;;
const #71 = NameAndType	#68:#70;//  tuple:(Lscala/Function2;)Lscala/Function1;
const #72 = Method	#23.#71;	//  scala/Function2$class.tuple:(Lscala/Function2;)Lscala/Function1;
const #73 = Asciz	curry;
const #74 = NameAndType	#73:#70;//  curry:(Lscala/Function2;)Lscala/Function1;
const #75 = Method	#23.#74;	//  scala/Function2$class.curry:(Lscala/Function2;)Lscala/Function1;
const #76 = Asciz	toString;
const #77 = Asciz	()Ljava/lang/String;;
const #78 = Asciz	(Lscala/Function2;)Ljava/lang/String;;
const #79 = NameAndType	#76:#78;//  toString:(Lscala/Function2;)Ljava/lang/String;
const #80 = Method	#23.#79;	//  scala/Function2$class.toString:(Lscala/Function2;)Ljava/lang/String;
const #81 = Asciz	InnerClasses;
const #82 = Asciz	scala/util/regexp/Base;
const #83 = class	#82;	//  scala/util/regexp/Base
const #84 = Asciz	RegExp;
const #85 = Asciz	scala/util/regexp/PointedHedgeExp;
const #86 = class	#85;	//  scala/util/regexp/PointedHedgeExp
const #87 = Asciz	TopIter;
const #88 = Asciz	scala/Function2;
const #89 = class	#88;	//  scala/Function2
const #90 = Asciz	scala/ScalaObject;
const #91 = class	#90;	//  scala/ScalaObject

{
public scala.util.regexp.PointedHedgeExp$TopIter$(scala.util.regexp.PointedHedgeExp);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_1
   1:	ifnonnull	12
   4:	new	#11; //class java/lang/NullPointerException
   7:	dup
   8:	invokespecial	#14; //Method java/lang/NullPointerException."<init>":()V
   11:	athrow
   12:	aload_0
   13:	aload_1
   14:	putfield	#18; //Field $outer:Lscala/util/regexp/PointedHedgeExp;
   17:	aload_0
   18:	invokespecial	#21; //Method java/lang/Object."<init>":()V
   21:	aload_0
   22:	invokestatic	#27; //Method scala/Function2$class.$init$:(Lscala/Function2;)V
   25:	return
  LineNumberTable: 
   line 29: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      26      0    this       Lscala/util/regexp/PointedHedgeExp$TopIter$;
   0      26      1    $outer       Lscala/util/regexp/PointedHedgeExp;


public java.lang.Object apply(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=4, Args_size=3
   0:	aload_0
   1:	getfield	#18; //Field $outer:Lscala/util/regexp/PointedHedgeExp;
   4:	astore_3
   5:	aload_0
   6:	aload_1
   7:	checkcast	#34; //class scala/util/regexp/Base$RegExp
   10:	aload_2
   11:	checkcast	#34; //class scala/util/regexp/Base$RegExp
   14:	invokevirtual	#37; //Method apply:(Lscala/util/regexp/Base$RegExp;Lscala/util/regexp/Base$RegExp;)Lscala/util/regexp/PointedHedgeExp$TopIter;
   17:	areturn
  LineNumberTable: 
   line 29: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      18      0    this       Lscala/util/regexp/PointedHedgeExp$TopIter$;
   5      13      1    v1       Ljava/lang/Object;
   5      13      2    v2       Ljava/lang/Object;


public scala.util.regexp.PointedHedgeExp$TopIter apply(scala.util.regexp.Base$RegExp, scala.util.regexp.Base$RegExp);
  Code:
   Stack=5, Locals=4, Args_size=3
   0:	aload_0
   1:	getfield	#18; //Field $outer:Lscala/util/regexp/PointedHedgeExp;
   4:	astore_3
   5:	new	#42; //class scala/util/regexp/PointedHedgeExp$TopIter
   8:	dup
   9:	aload_0
   10:	getfield	#18; //Field $outer:Lscala/util/regexp/PointedHedgeExp;
   13:	aload_1
   14:	aload_2
   15:	invokespecial	#45; //Method scala/util/regexp/PointedHedgeExp$TopIter."<init>":(Lscala/util/regexp/PointedHedgeExp;Lscala/util/regexp/Base$RegExp;Lscala/util/regexp/Base$RegExp;)V
   18:	areturn
  LineNumberTable: 
   line 29: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      19      0    this       Lscala/util/regexp/PointedHedgeExp$TopIter$;
   5      14      1    r1       Lscala/util/regexp/Base$RegExp;
   5      14      2    r2       Lscala/util/regexp/Base$RegExp;


public scala.Some unapply(scala.util.regexp.PointedHedgeExp$TopIter);
  Code:
   Stack=6, Locals=2, Args_size=2
   0:	new	#52; //class scala/Some
   3:	dup
   4:	new	#54; //class scala/Tuple2
   7:	dup
   8:	aload_1
   9:	invokevirtual	#57; //Method scala/util/regexp/PointedHedgeExp$TopIter.r1:()Lscala/util/regexp/Base$RegExp;
   12:	aload_1
   13:	invokevirtual	#59; //Method scala/util/regexp/PointedHedgeExp$TopIter.r2:()Lscala/util/regexp/Base$RegExp;
   16:	invokespecial	#62; //Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
   19:	invokespecial	#65; //Method scala/Some."<init>":(Ljava/lang/Object;)V
   22:	areturn
  LineNumberTable: 
   line 29: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      23      0    this       Lscala/util/regexp/PointedHedgeExp$TopIter$;
   0      23      1    x$0       Lscala/util/regexp/PointedHedgeExp$TopIter;


public scala.Function1 tuple();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#72; //Method scala/Function2$class.tuple:(Lscala/Function2;)Lscala/Function1;
   4:	areturn
  LineNumberTable: 
   line 29: 0


public scala.Function1 curry();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#75; //Method scala/Function2$class.curry:(Lscala/Function2;)Lscala/Function1;
   4:	areturn
  LineNumberTable: 
   line 29: 0


public java.lang.String toString();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#80; //Method scala/Function2$class.toString:(Lscala/Function2;)Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 29: 0


}

