Compiled from "Base.scala"
public class scala.util.regexp.Base$Sequ extends scala.util.regexp.Base$RegExp implements scala.ScalaObject,scala.Product,java.io.Serializable
  SourceFile: "Base.scala"
  Scala: length = 0x
   
  InnerClass: 
   public #101= #14 of #150; //Sequ=class scala/util/regexp/Base$Sequ of class scala/util/regexp/Base
   public abstract #151= #18 of #150; //RegExp=class scala/util/regexp/Base$RegExp of class scala/util/regexp/Base
   public final #152= #42 of #14; //$anonfun$2=class scala/util/regexp/Base$Sequ$$anonfun$2 of class scala/util/regexp/Base$Sequ
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Base.scala;
const #3 = Asciz	isNullable;
const #4 = Asciz	Z;
const #5 = Asciz	rs;
const #6 = Asciz	Lscala/collection/Sequence;;
const #7 = Asciz	Lscala/collection/Sequence<Lscala/util/regexp/Base$RegExp;>;;
const #8 = Asciz	Signature;
const #9 = Asciz	<init>;
const #10 = Asciz	(Lscala/util/regexp/Base;Lscala/collection/Sequence;)V;
const #11 = Asciz	Code;
const #12 = Asciz	LineNumberTable;
const #13 = Asciz	scala/util/regexp/Base$Sequ;
const #14 = class	#13;	//  scala/util/regexp/Base$Sequ
const #15 = NameAndType	#5:#6;//  rs:Lscala/collection/Sequence;
const #16 = Field	#14.#15;	//  scala/util/regexp/Base$Sequ.rs:Lscala/collection/Sequence;
const #17 = Asciz	scala/util/regexp/Base$RegExp;
const #18 = class	#17;	//  scala/util/regexp/Base$RegExp
const #19 = Asciz	(Lscala/util/regexp/Base;)V;
const #20 = NameAndType	#9:#19;//  "<init>":(Lscala/util/regexp/Base;)V
const #21 = Method	#18.#20;	//  scala/util/regexp/Base$RegExp."<init>":(Lscala/util/regexp/Base;)V
const #22 = Asciz	scala/Product$class;
const #23 = class	#22;	//  scala/Product$class
const #24 = Asciz	$init$;
const #25 = Asciz	(Lscala/Product;)V;
const #26 = NameAndType	#24:#25;//  $init$:(Lscala/Product;)V
const #27 = Method	#23.#26;	//  scala/Product$class.$init$:(Lscala/Product;)V
const #28 = Asciz	scala/collection/generic/IterableTemplate;
const #29 = class	#28;	//  scala/collection/generic/IterableTemplate
const #30 = Asciz	isEmpty;
const #31 = Asciz	()Z;
const #32 = NameAndType	#30:#31;//  isEmpty:()Z
const #33 = InterfaceMethod	#29.#32;	//  scala/collection/generic/IterableTemplate.isEmpty:()Z
const #34 = Asciz	scala/util/regexp/SyntaxError;
const #35 = class	#34;	//  scala/util/regexp/SyntaxError
const #36 = Asciz	need at least 1 item in Sequ;
const #37 = String	#36;	//  need at least 1 item in Sequ
const #38 = Asciz	(Ljava/lang/String;)V;
const #39 = NameAndType	#9:#38;//  "<init>":(Ljava/lang/String;)V
const #40 = Method	#35.#39;	//  scala/util/regexp/SyntaxError."<init>":(Ljava/lang/String;)V
const #41 = Asciz	scala/util/regexp/Base$Sequ$$anonfun$2;
const #42 = class	#41;	//  scala/util/regexp/Base$Sequ$$anonfun$2
const #43 = Asciz	(Lscala/util/regexp/Base$Sequ;)V;
const #44 = NameAndType	#9:#43;//  "<init>":(Lscala/util/regexp/Base$Sequ;)V
const #45 = Method	#42.#44;	//  scala/util/regexp/Base$Sequ$$anonfun$2."<init>":(Lscala/util/regexp/Base$Sequ;)V
const #46 = Asciz	scala/collection/generic/TraversableTemplate;
const #47 = class	#46;	//  scala/collection/generic/TraversableTemplate
const #48 = Asciz	forall;
const #49 = Asciz	(Lscala/Function1;)Z;
const #50 = NameAndType	#48:#49;//  forall:(Lscala/Function1;)Z
const #51 = InterfaceMethod	#47.#50;	//  scala/collection/generic/TraversableTemplate.forall:(Lscala/Function1;)Z
const #52 = NameAndType	#3:#4;//  isNullable:Z
const #53 = Field	#14.#52;	//  scala/util/regexp/Base$Sequ.isNullable:Z
const #54 = Asciz	this;
const #55 = Asciz	Lscala/util/regexp/Base$Sequ;;
const #56 = Asciz	$outer;
const #57 = Asciz	Lscala/util/regexp/Base;;
const #58 = Asciz	LocalVariableTable;
const #59 = Asciz	(Lscala/util/regexp/Base;Lscala/collection/Sequence<Lscala/util/regexp/Base$RegExp;>;)V;
const #60 = Asciz	gd2$1;
const #61 = Asciz	(Lscala/collection/Sequence;)Z;
const #62 = Asciz	()Lscala/collection/Sequence;;
const #63 = NameAndType	#5:#62;//  rs:()Lscala/collection/Sequence;
const #64 = Method	#14.#63;	//  scala/util/regexp/Base$Sequ.rs:()Lscala/collection/Sequence;
const #65 = Asciz	sameElements;
const #66 = Asciz	(Lscala/collection/Iterable;)Z;
const #67 = NameAndType	#65:#66;//  sameElements:(Lscala/collection/Iterable;)Z
const #68 = InterfaceMethod	#29.#67;	//  scala/collection/generic/IterableTemplate.sameElements:(Lscala/collection/Iterable;)Z
const #69 = Asciz	scala$util$regexp$Base$Sequ$$$outer;
const #70 = Asciz	()Lscala/util/regexp/Base;;
const #71 = NameAndType	#56:#57;//  $outer:Lscala/util/regexp/Base;
const #72 = Field	#18.#71;	//  scala/util/regexp/Base$RegExp.$outer:Lscala/util/regexp/Base;
const #73 = Asciz	canEqual;
const #74 = Asciz	(Ljava/lang/Object;)Z;
const #75 = Asciz	productElement;
const #76 = Asciz	(I)Ljava/lang/Object;;
const #77 = Asciz	scala/runtime/BoxesRunTime;
const #78 = class	#77;	//  scala/runtime/BoxesRunTime
const #79 = Asciz	boxToInteger;
const #80 = Asciz	(I)Ljava/lang/Integer;;
const #81 = NameAndType	#79:#80;//  boxToInteger:(I)Ljava/lang/Integer;
const #82 = Method	#78.#81;	//  scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
const #83 = Asciz	equals;
const #84 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)Z;
const #85 = NameAndType	#83:#84;//  equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
const #86 = Method	#78.#85;	//  scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
const #87 = Asciz	java/lang/IndexOutOfBoundsException;
const #88 = class	#87;	//  java/lang/IndexOutOfBoundsException
const #89 = Asciz	java/lang/Object;
const #90 = class	#89;	//  java/lang/Object
const #91 = Asciz	toString;
const #92 = Asciz	()Ljava/lang/String;;
const #93 = NameAndType	#91:#92;//  toString:()Ljava/lang/String;
const #94 = Method	#90.#93;	//  java/lang/Object.toString:()Ljava/lang/String;
const #95 = Method	#88.#39;	//  java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
const #96 = Asciz	temp10;
const #97 = Asciz	I;
const #98 = Asciz	productArity;
const #99 = Asciz	()I;
const #100 = Asciz	productPrefix;
const #101 = Asciz	Sequ;
const #102 = String	#101;	//  Sequ
const #103 = NameAndType	#69:#70;//  scala$util$regexp$Base$Sequ$$$outer:()Lscala/util/regexp/Base;
const #104 = Method	#14.#103;	//  scala/util/regexp/Base$Sequ.scala$util$regexp$Base$Sequ$$$outer:()Lscala/util/regexp/Base;
const #105 = Asciz	scala/collection/generic/SequenceTemplate;
const #106 = class	#105;	//  scala/collection/generic/SequenceTemplate
const #107 = Asciz	lengthCompare;
const #108 = Asciz	(I)I;
const #109 = NameAndType	#107:#108;//  lengthCompare:(I)I
const #110 = InterfaceMethod	#106.#109;	//  scala/collection/generic/SequenceTemplate.lengthCompare:(I)I
const #111 = NameAndType	#60:#61;//  gd2$1:(Lscala/collection/Sequence;)Z
const #112 = Method	#14.#111;	//  scala/util/regexp/Base$Sequ.gd2$1:(Lscala/collection/Sequence;)Z
const #113 = Asciz	scala/Product;
const #114 = class	#113;	//  scala/Product
const #115 = NameAndType	#73:#74;//  canEqual:(Ljava/lang/Object;)Z
const #116 = InterfaceMethod	#114.#115;	//  scala/Product.canEqual:(Ljava/lang/Object;)Z
const #117 = Asciz	temp6;
const #118 = Asciz	Ljava/lang/Object;;
const #119 = Asciz	temp7;
const #120 = Asciz	temp8;
const #121 = Asciz	temp9;
const #122 = Asciz	rs$2;
const #123 = Asciz	scala/runtime/ScalaRunTime$;
const #124 = class	#123;	//  scala/runtime/ScalaRunTime$
const #125 = Asciz	MODULE$;
const #126 = Asciz	Lscala/runtime/ScalaRunTime$;;
const #127 = NameAndType	#125:#126;//  MODULE$:Lscala/runtime/ScalaRunTime$;
const #128 = Field	#124.#127;	//  scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
const #129 = Asciz	_toString;
const #130 = Asciz	(Lscala/Product;)Ljava/lang/String;;
const #131 = NameAndType	#129:#130;//  _toString:(Lscala/Product;)Ljava/lang/String;
const #132 = Method	#124.#131;	//  scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
const #133 = Asciz	hashCode;
const #134 = Asciz	_hashCode;
const #135 = Asciz	(Lscala/Product;)I;
const #136 = NameAndType	#134:#135;//  _hashCode:(Lscala/Product;)I
const #137 = Method	#124.#136;	//  scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
const #138 = Asciz	()Lscala/collection/Sequence<Lscala/util/regexp/Base$RegExp;>;;
const #139 = Asciz	productElements;
const #140 = Asciz	()Lscala/collection/Iterator;;
const #141 = Asciz	(Lscala/Product;)Lscala/collection/Iterator;;
const #142 = NameAndType	#139:#141;//  productElements:(Lscala/Product;)Lscala/collection/Iterator;
const #143 = Method	#23.#142;	//  scala/Product$class.productElements:(Lscala/Product;)Lscala/collection/Iterator;
const #144 = Asciz	productIterator;
const #145 = NameAndType	#144:#141;//  productIterator:(Lscala/Product;)Lscala/collection/Iterator;
const #146 = Method	#23.#145;	//  scala/Product$class.productIterator:(Lscala/Product;)Lscala/collection/Iterator;
const #147 = Asciz	Scala;
const #148 = Asciz	InnerClasses;
const #149 = Asciz	scala/util/regexp/Base;
const #150 = class	#149;	//  scala/util/regexp/Base
const #151 = Asciz	RegExp;
const #152 = Asciz	$anonfun$2;
const #153 = Asciz	scala/ScalaObject;
const #154 = class	#153;	//  scala/ScalaObject
const #155 = Asciz	java/io/Serializable;
const #156 = class	#155;	//  java/io/Serializable

{
public scala.util.regexp.Base$Sequ(scala.util.regexp.Base, scala.collection.Sequence);
  Code:
   Stack=5, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_2
   2:	putfield	#16; //Field rs:Lscala/collection/Sequence;
   5:	aload_0
   6:	aload_1
   7:	invokespecial	#21; //Method scala/util/regexp/Base$RegExp."<init>":(Lscala/util/regexp/Base;)V
   10:	aload_0
   11:	invokestatic	#27; //Method scala/Product$class.$init$:(Lscala/Product;)V
   14:	aload_2
   15:	invokeinterface	#33,  1; //InterfaceMethod scala/collection/generic/IterableTemplate.isEmpty:()Z
   20:	ifeq	33
   23:	new	#35; //class scala/util/regexp/SyntaxError
   26:	dup
   27:	ldc	#37; //String need at least 1 item in Sequ
   29:	invokespecial	#40; //Method scala/util/regexp/SyntaxError."<init>":(Ljava/lang/String;)V
   32:	athrow
   33:	aload_0
   34:	aload_2
   35:	new	#42; //class scala/util/regexp/Base$Sequ$$anonfun$2
   38:	dup
   39:	aload_0
   40:	invokespecial	#45; //Method scala/util/regexp/Base$Sequ$$anonfun$2."<init>":(Lscala/util/regexp/Base$Sequ;)V
   43:	invokeinterface	#51,  2; //InterfaceMethod scala/collection/generic/TraversableTemplate.forall:(Lscala/Function1;)Z
   48:	putfield	#53; //Field isNullable:Z
   51:	return
  LineNumberTable: 
   line 37: 0
   line 40: 14
   line 41: 23
   line 43: 33

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      52      0    this       Lscala/util/regexp/Base$Sequ;
   0      52      1    $outer       Lscala/util/regexp/Base;
   0      52      2    rs       Lscala/collection/Sequence;

  Signature: length = 0x2
   00 3B 

public scala.util.regexp.Base scala$util$regexp$Base$Sequ$$$outer();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#72; //Field scala/util/regexp/Base$RegExp.$outer:Lscala/util/regexp/Base;
   4:	areturn
  LineNumberTable: 
   line 37: 0


public boolean canEqual(java.lang.Object);
  Code:
   Stack=1, Locals=2, Args_size=2
   0:	aload_1
   1:	instanceof	#14; //class scala/util/regexp/Base$Sequ
   4:	ireturn
  LineNumberTable: 
   line 37: 0


public java.lang.Object productElement(int);
  Code:
   Stack=3, Locals=3, Args_size=2
   0:	iload_1
   1:	istore_2
   2:	iload_2
   3:	invokestatic	#82; //Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   6:	iconst_0
   7:	invokestatic	#82; //Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   10:	invokestatic	#86; //Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
   13:	ifeq	21
   16:	aload_0
   17:	invokevirtual	#64; //Method rs:()Lscala/collection/Sequence;
   20:	areturn
   21:	new	#88; //class java/lang/IndexOutOfBoundsException
   24:	dup
   25:	iload_1
   26:	invokestatic	#82; //Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   29:	invokevirtual	#94; //Method java/lang/Object.toString:()Ljava/lang/String;
   32:	invokespecial	#95; //Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
   35:	athrow
  LineNumberTable: 
   line 37: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      36      0    this       Lscala/util/regexp/Base$Sequ;
   2      34      2    temp10       I


public int productArity();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	iconst_1
   1:	ireturn
  LineNumberTable: 
   line 37: 0


public java.lang.String productPrefix();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	ldc	#102; //String Sequ
   2:	areturn
  LineNumberTable: 
   line 37: 0


public boolean equals(java.lang.Object);
  Code:
   Stack=2, Locals=7, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	if_acmpeq	93
   5:	aload_1
   6:	astore_2
   7:	aload_2
   8:	instanceof	#14; //class scala/util/regexp/Base$Sequ
   11:	ifeq	89
   14:	aload_2
   15:	checkcast	#14; //class scala/util/regexp/Base$Sequ
   18:	invokevirtual	#104; //Method scala$util$regexp$Base$Sequ$$$outer:()Lscala/util/regexp/Base;
   21:	aload_0
   22:	invokevirtual	#104; //Method scala$util$regexp$Base$Sequ$$$outer:()Lscala/util/regexp/Base;
   25:	if_acmpne	89
   28:	aload_2
   29:	checkcast	#14; //class scala/util/regexp/Base$Sequ
   32:	astore_3
   33:	aload_3
   34:	invokevirtual	#64; //Method rs:()Lscala/collection/Sequence;
   37:	astore	4
   39:	aload	4
   41:	iconst_0
   42:	invokeinterface	#110,  2; //InterfaceMethod scala/collection/generic/SequenceTemplate.lengthCompare:(I)I
   47:	iconst_0
   48:	if_icmplt	85
   51:	aload	4
   53:	astore	5
   55:	aload	5
   57:	astore	6
   59:	aload_0
   60:	aload	6
   62:	invokespecial	#112; //Method gd2$1:(Lscala/collection/Sequence;)Z
   65:	ifeq	81
   68:	aload_1
   69:	checkcast	#14; //class scala/util/regexp/Base$Sequ
   72:	aload_0
   73:	invokeinterface	#116,  2; //InterfaceMethod scala/Product.canEqual:(Ljava/lang/Object;)Z
   78:	goto	90
   81:	iconst_0
   82:	goto	90
   85:	iconst_0
   86:	goto	90
   89:	iconst_0
   90:	ifeq	97
   93:	iconst_1
   94:	goto	98
   97:	iconst_0
   98:	ireturn
  LineNumberTable: 
   line 37: 0
   line 45: 47
   line 37: 51
   line 26: 81
   line 37: 90

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      99      0    this       Lscala/util/regexp/Base$Sequ;
   7      86      2    temp6       Ljava/lang/Object;
   33      56      3    temp7       Lscala/util/regexp/Base$Sequ;
   39      50      4    temp8       Lscala/collection/Sequence;
   55      30      5    temp9       Lscala/collection/Sequence;
   59      26      6    rs$2       Lscala/collection/Sequence;


public java.lang.String toString();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	getstatic	#128; //Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   3:	aload_0
   4:	invokevirtual	#132; //Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
   7:	areturn
  LineNumberTable: 
   line 37: 0


public int hashCode();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	getstatic	#128; //Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   3:	aload_0
   4:	invokevirtual	#137; //Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
   7:	ireturn
  LineNumberTable: 
   line 37: 0


public final boolean isNullable();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#53; //Field isNullable:Z
   4:	ireturn
  LineNumberTable: 
   line 43: 0


public scala.collection.Sequence rs();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#16; //Field rs:Lscala/collection/Sequence;
   4:	areturn
  LineNumberTable: 
   line 37: 0

  Signature: length = 0x2
   00 FFFFFF8A 

public scala.collection.Iterator productElements();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#143; //Method scala/Product$class.productElements:(Lscala/Product;)Lscala/collection/Iterator;
   4:	areturn
  LineNumberTable: 
   line 37: 0


public scala.collection.Iterator productIterator();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#146; //Method scala/Product$class.productIterator:(Lscala/Product;)Lscala/collection/Iterator;
   4:	areturn
  LineNumberTable: 
   line 37: 0


}

