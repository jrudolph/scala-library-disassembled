Compiled from "Base.scala"
public abstract class scala.util.regexp.Base$RegExp extends java.lang.Object implements scala.ScalaObject
  SourceFile: "Base.scala"
  Scala: length = 0x
   
  InnerClass: 
   public abstract RegExp=class scala/util/regexp/Base$RegExp of class scala/util/regexp/Base
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	Base.scala;
Asciz	$outer;
Asciz	Lscala/util/regexp/Base;;
Asciz	<init>;
Asciz	(Lscala/util/regexp/Base;)V;
Asciz	Code;
Asciz	LineNumberTable;
Asciz	java/lang/NullPointerException;
class	java/lang/NullPointerException
Asciz	()V;
NameAndType	"<init>":()V
Method	java/lang/NullPointerException."<init>":()V
Asciz	scala/util/regexp/Base$RegExp;
class	scala/util/regexp/Base$RegExp
NameAndType	$outer:Lscala/util/regexp/Base;
Field	scala/util/regexp/Base$RegExp.$outer:Lscala/util/regexp/Base;
Asciz	java/lang/Object;
class	java/lang/Object
Method	java/lang/Object."<init>":()V
Asciz	this;
Asciz	Lscala/util/regexp/Base$RegExp;;
Asciz	LocalVariableTable;
Asciz	scala$util$regexp$Base$RegExp$$$outer;
Asciz	()Lscala/util/regexp/Base;;
Asciz	isNullable;
Asciz	()Z;
Asciz	Scala;
Asciz	InnerClasses;
Asciz	scala/util/regexp/Base;
class	scala/util/regexp/Base
Asciz	RegExp;
Asciz	scala/ScalaObject;
class	scala/ScalaObject

{
public final scala.util.regexp.Base $outer;
  Signature: Lscala/util/regexp/Base;

public scala.util.regexp.Base$RegExp(scala.util.regexp.Base);
  Signature: (Lscala/util/regexp/Base;)V
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_1
	ifnonnull	l1 // aload_0
	new	class java/lang/NullPointerException
	dup
	invokespecial	Method java/lang/NullPointerException."<init>":()V
	athrow
l1	aload_0
	aload_1
	putfield	Field $outer:Lscala/util/regexp/Base;
	aload_0
	invokespecial	Method java/lang/Object."<init>":()V
	return
  Labels:
   	l1 = 12 // aload_0
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      22      0    this       Lscala/util/regexp/Base$RegExp;
   0      22      1    $outer       Lscala/util/regexp/Base;


public scala.util.regexp.Base scala$util$regexp$Base$RegExp$$$outer();
  Signature: ()Lscala/util/regexp/Base;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field $outer:Lscala/util/regexp/Base;
	areturn
  Labels:

public abstract boolean isNullable();
  Signature: ()Z

}

