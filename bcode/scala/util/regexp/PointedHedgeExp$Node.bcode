Compiled from "PointedHedgeExp.scala"
public class scala.util.regexp.PointedHedgeExp$Node extends scala.util.regexp.Base$RegExp implements scala.ScalaObject,scala.Product,java.io.Serializable
  SourceFile: "PointedHedgeExp.scala"
  Scala: length = 0x
   
  InnerClass: 
   public abstract #134= #29 of #133; //RegExp=class scala/util/regexp/Base$RegExp of class scala/util/regexp/Base
   public #84= #16 of #136; //Node=class scala/util/regexp/PointedHedgeExp$Node of class scala/util/regexp/PointedHedgeExp
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	PointedHedgeExp.scala;
const #3 = Asciz	$outer;
const #4 = Asciz	Lscala/util/regexp/PointedHedgeExp;;
const #5 = Asciz	isNullable;
const #6 = Asciz	Z;
const #7 = Asciz	r;
const #8 = Asciz	Lscala/util/regexp/Base$RegExp;;
const #9 = Asciz	label;
const #10 = Asciz	Ljava/lang/Object;;
const #11 = Asciz	<init>;
const #12 = Asciz	(Lscala/util/regexp/PointedHedgeExp;Ljava/lang/Object;Lscala/util/regexp/Base$RegExp;)V;
const #13 = Asciz	Code;
const #14 = Asciz	LineNumberTable;
const #15 = Asciz	scala/util/regexp/PointedHedgeExp$Node;
const #16 = class	#15;	//  scala/util/regexp/PointedHedgeExp$Node
const #17 = NameAndType	#9:#10;//  label:Ljava/lang/Object;
const #18 = Field	#16.#17;	//  scala/util/regexp/PointedHedgeExp$Node.label:Ljava/lang/Object;
const #19 = NameAndType	#7:#8;//  r:Lscala/util/regexp/Base$RegExp;
const #20 = Field	#16.#19;	//  scala/util/regexp/PointedHedgeExp$Node.r:Lscala/util/regexp/Base$RegExp;
const #21 = Asciz	java/lang/NullPointerException;
const #22 = class	#21;	//  java/lang/NullPointerException
const #23 = Asciz	()V;
const #24 = NameAndType	#11:#23;//  "<init>":()V
const #25 = Method	#22.#24;	//  java/lang/NullPointerException."<init>":()V
const #26 = NameAndType	#3:#4;//  $outer:Lscala/util/regexp/PointedHedgeExp;
const #27 = Field	#16.#26;	//  scala/util/regexp/PointedHedgeExp$Node.$outer:Lscala/util/regexp/PointedHedgeExp;
const #28 = Asciz	scala/util/regexp/Base$RegExp;
const #29 = class	#28;	//  scala/util/regexp/Base$RegExp
const #30 = Asciz	(Lscala/util/regexp/Base;)V;
const #31 = NameAndType	#11:#30;//  "<init>":(Lscala/util/regexp/Base;)V
const #32 = Method	#29.#31;	//  scala/util/regexp/Base$RegExp."<init>":(Lscala/util/regexp/Base;)V
const #33 = Asciz	scala/Product$class;
const #34 = class	#33;	//  scala/Product$class
const #35 = Asciz	$init$;
const #36 = Asciz	(Lscala/Product;)V;
const #37 = NameAndType	#35:#36;//  $init$:(Lscala/Product;)V
const #38 = Method	#34.#37;	//  scala/Product$class.$init$:(Lscala/Product;)V
const #39 = Asciz	this;
const #40 = Asciz	Lscala/util/regexp/PointedHedgeExp$Node;;
const #41 = Asciz	LocalVariableTable;
const #42 = Asciz	gd1$1;
const #43 = Asciz	(Lscala/util/regexp/Base$RegExp;Ljava/lang/Object;)Z;
const #44 = Asciz	()Ljava/lang/Object;;
const #45 = NameAndType	#9:#44;//  label:()Ljava/lang/Object;
const #46 = Method	#16.#45;	//  scala/util/regexp/PointedHedgeExp$Node.label:()Ljava/lang/Object;
const #47 = Asciz	scala/runtime/BoxesRunTime;
const #48 = class	#47;	//  scala/runtime/BoxesRunTime
const #49 = Asciz	equals;
const #50 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)Z;
const #51 = NameAndType	#49:#50;//  equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
const #52 = Method	#48.#51;	//  scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
const #53 = Asciz	()Lscala/util/regexp/Base$RegExp;;
const #54 = NameAndType	#7:#53;//  r:()Lscala/util/regexp/Base$RegExp;
const #55 = Method	#16.#54;	//  scala/util/regexp/PointedHedgeExp$Node.r:()Lscala/util/regexp/Base$RegExp;
const #56 = Asciz	java/lang/Object;
const #57 = class	#56;	//  java/lang/Object
const #58 = Asciz	(Ljava/lang/Object;)Z;
const #59 = NameAndType	#49:#58;//  equals:(Ljava/lang/Object;)Z
const #60 = Method	#57.#59;	//  java/lang/Object.equals:(Ljava/lang/Object;)Z
const #61 = Asciz	scala$util$regexp$PointedHedgeExp$Node$$$outer;
const #62 = Asciz	()Lscala/util/regexp/PointedHedgeExp;;
const #63 = Asciz	canEqual;
const #64 = Asciz	productElement;
const #65 = Asciz	(I)Ljava/lang/Object;;
const #66 = Asciz	java/lang/IndexOutOfBoundsException;
const #67 = class	#66;	//  java/lang/IndexOutOfBoundsException
const #68 = Asciz	boxToInteger;
const #69 = Asciz	(I)Ljava/lang/Integer;;
const #70 = NameAndType	#68:#69;//  boxToInteger:(I)Ljava/lang/Integer;
const #71 = Method	#48.#70;	//  scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
const #72 = Asciz	toString;
const #73 = Asciz	()Ljava/lang/String;;
const #74 = NameAndType	#72:#73;//  toString:()Ljava/lang/String;
const #75 = Method	#57.#74;	//  java/lang/Object.toString:()Ljava/lang/String;
const #76 = Asciz	(Ljava/lang/String;)V;
const #77 = NameAndType	#11:#76;//  "<init>":(Ljava/lang/String;)V
const #78 = Method	#67.#77;	//  java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
const #79 = Asciz	temp5;
const #80 = Asciz	I;
const #81 = Asciz	productArity;
const #82 = Asciz	()I;
const #83 = Asciz	productPrefix;
const #84 = Asciz	Node;
const #85 = String	#84;	//  Node
const #86 = NameAndType	#61:#62;//  scala$util$regexp$PointedHedgeExp$Node$$$outer:()Lscala/util/regexp/PointedHedgeExp;
const #87 = Method	#16.#86;	//  scala/util/regexp/PointedHedgeExp$Node.scala$util$regexp$PointedHedgeExp$Node$$$outer:()Lscala/util/regexp/PointedHedgeExp;
const #88 = NameAndType	#42:#43;//  gd1$1:(Lscala/util/regexp/Base$RegExp;Ljava/lang/Object;)Z
const #89 = Method	#16.#88;	//  scala/util/regexp/PointedHedgeExp$Node.gd1$1:(Lscala/util/regexp/Base$RegExp;Ljava/lang/Object;)Z
const #90 = Asciz	scala/Product;
const #91 = class	#90;	//  scala/Product
const #92 = NameAndType	#63:#58;//  canEqual:(Ljava/lang/Object;)Z
const #93 = InterfaceMethod	#91.#92;	//  scala/Product.canEqual:(Ljava/lang/Object;)Z
const #94 = Asciz	temp1;
const #95 = Asciz	temp2;
const #96 = Asciz	temp3;
const #97 = Asciz	temp4;
const #98 = Asciz	r$1;
const #99 = Asciz	label$1;
const #100 = Asciz	scala/runtime/ScalaRunTime$;
const #101 = class	#100;	//  scala/runtime/ScalaRunTime$
const #102 = Asciz	MODULE$;
const #103 = Asciz	Lscala/runtime/ScalaRunTime$;;
const #104 = NameAndType	#102:#103;//  MODULE$:Lscala/runtime/ScalaRunTime$;
const #105 = Field	#101.#104;	//  scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
const #106 = Asciz	_toString;
const #107 = Asciz	(Lscala/Product;)Ljava/lang/String;;
const #108 = NameAndType	#106:#107;//  _toString:(Lscala/Product;)Ljava/lang/String;
const #109 = Method	#101.#108;	//  scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
const #110 = Asciz	hashCode;
const #111 = Asciz	_hashCode;
const #112 = Asciz	(Lscala/Product;)I;
const #113 = NameAndType	#111:#112;//  _hashCode:(Lscala/Product;)I
const #114 = Method	#101.#113;	//  scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
const #115 = Asciz	copy$default$1;
const #116 = Asciz	copy$default$2;
const #117 = Asciz	copy;
const #118 = Asciz	(Ljava/lang/Object;Lscala/util/regexp/Base$RegExp;)Lscala/util/regexp/PointedHedgeExp$Node;;
const #119 = NameAndType	#11:#12;//  "<init>":(Lscala/util/regexp/PointedHedgeExp;Ljava/lang/Object;Lscala/util/regexp/Base$RegExp;)V
const #120 = Method	#16.#119;	//  scala/util/regexp/PointedHedgeExp$Node."<init>":(Lscala/util/regexp/PointedHedgeExp;Ljava/lang/Object;Lscala/util/regexp/Base$RegExp;)V
const #121 = Asciz	()Z;
const #122 = Asciz	productElements;
const #123 = Asciz	()Lscala/collection/Iterator;;
const #124 = Asciz	(Lscala/Product;)Lscala/collection/Iterator;;
const #125 = NameAndType	#122:#124;//  productElements:(Lscala/Product;)Lscala/collection/Iterator;
const #126 = Method	#34.#125;	//  scala/Product$class.productElements:(Lscala/Product;)Lscala/collection/Iterator;
const #127 = Asciz	productIterator;
const #128 = NameAndType	#127:#124;//  productIterator:(Lscala/Product;)Lscala/collection/Iterator;
const #129 = Method	#34.#128;	//  scala/Product$class.productIterator:(Lscala/Product;)Lscala/collection/Iterator;
const #130 = Asciz	Scala;
const #131 = Asciz	InnerClasses;
const #132 = Asciz	scala/util/regexp/Base;
const #133 = class	#132;	//  scala/util/regexp/Base
const #134 = Asciz	RegExp;
const #135 = Asciz	scala/util/regexp/PointedHedgeExp;
const #136 = class	#135;	//  scala/util/regexp/PointedHedgeExp
const #137 = Asciz	scala/ScalaObject;
const #138 = class	#137;	//  scala/ScalaObject
const #139 = Asciz	java/io/Serializable;
const #140 = class	#139;	//  java/io/Serializable

{
public final scala.util.regexp.PointedHedgeExp $outer;

public scala.util.regexp.PointedHedgeExp$Node(scala.util.regexp.PointedHedgeExp, java.lang.Object, scala.util.regexp.Base$RegExp);
  Code:
   Stack=2, Locals=4, Args_size=4
   0:	aload_0
   1:	aload_2
   2:	putfield	#18; //Field label:Ljava/lang/Object;
   5:	aload_0
   6:	aload_3
   7:	putfield	#20; //Field r:Lscala/util/regexp/Base$RegExp;
   10:	aload_1
   11:	ifnonnull	22
   14:	new	#22; //class java/lang/NullPointerException
   17:	dup
   18:	invokespecial	#25; //Method java/lang/NullPointerException."<init>":()V
   21:	athrow
   22:	aload_0
   23:	aload_1
   24:	putfield	#27; //Field $outer:Lscala/util/regexp/PointedHedgeExp;
   27:	aload_0
   28:	aload_1
   29:	invokespecial	#32; //Method scala/util/regexp/Base$RegExp."<init>":(Lscala/util/regexp/Base;)V
   32:	aload_0
   33:	invokestatic	#38; //Method scala/Product$class.$init$:(Lscala/Product;)V
   36:	return
  LineNumberTable: 
   line 25: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      37      0    this       Lscala/util/regexp/PointedHedgeExp$Node;
   0      37      1    $outer       Lscala/util/regexp/PointedHedgeExp;
   0      37      2    label       Ljava/lang/Object;
   0      37      3    r       Lscala/util/regexp/Base$RegExp;


public scala.util.regexp.PointedHedgeExp scala$util$regexp$PointedHedgeExp$Node$$$outer();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#27; //Field $outer:Lscala/util/regexp/PointedHedgeExp;
   4:	areturn
  LineNumberTable: 
   line 25: 0


public boolean canEqual(java.lang.Object);
  Code:
   Stack=1, Locals=2, Args_size=2
   0:	aload_1
   1:	instanceof	#16; //class scala/util/regexp/PointedHedgeExp$Node
   4:	ireturn
  LineNumberTable: 
   line 25: 0


public java.lang.Object productElement(int);
  Code:
   Stack=3, Locals=3, Args_size=2
   0:	iload_1
   1:	istore_2
   2:	iload_2
   3:	tableswitch{ //0 to 1
		0: 46;
		1: 39;
		default: 24 }
   24:	new	#67; //class java/lang/IndexOutOfBoundsException
   27:	dup
   28:	iload_1
   29:	invokestatic	#71; //Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   32:	invokevirtual	#75; //Method java/lang/Object.toString:()Ljava/lang/String;
   35:	invokespecial	#78; //Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
   38:	athrow
   39:	aload_0
   40:	invokevirtual	#55; //Method r:()Lscala/util/regexp/Base$RegExp;
   43:	goto	50
   46:	aload_0
   47:	invokevirtual	#46; //Method label:()Ljava/lang/Object;
   50:	areturn
  LineNumberTable: 
   line 25: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      51      0    this       Lscala/util/regexp/PointedHedgeExp$Node;
   2      49      2    temp5       I


public int productArity();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	iconst_2
   1:	ireturn
  LineNumberTable: 
   line 25: 0


public java.lang.String productPrefix();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	ldc	#85; //String Node
   2:	areturn
  LineNumberTable: 
   line 25: 0


public boolean equals(java.lang.Object);
  Code:
   Stack=3, Locals=8, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	if_acmpeq	89
   5:	aload_1
   6:	astore_2
   7:	aload_2
   8:	instanceof	#16; //class scala/util/regexp/PointedHedgeExp$Node
   11:	ifeq	85
   14:	aload_2
   15:	checkcast	#16; //class scala/util/regexp/PointedHedgeExp$Node
   18:	invokevirtual	#87; //Method scala$util$regexp$PointedHedgeExp$Node$$$outer:()Lscala/util/regexp/PointedHedgeExp;
   21:	aload_0
   22:	invokevirtual	#87; //Method scala$util$regexp$PointedHedgeExp$Node$$$outer:()Lscala/util/regexp/PointedHedgeExp;
   25:	if_acmpne	85
   28:	aload_2
   29:	checkcast	#16; //class scala/util/regexp/PointedHedgeExp$Node
   32:	astore_3
   33:	aload_3
   34:	invokevirtual	#46; //Method label:()Ljava/lang/Object;
   37:	astore	4
   39:	aload_3
   40:	invokevirtual	#55; //Method r:()Lscala/util/regexp/Base$RegExp;
   43:	astore	5
   45:	aload	5
   47:	astore	6
   49:	aload	4
   51:	astore	7
   53:	aload_0
   54:	aload	6
   56:	aload	7
   58:	invokespecial	#89; //Method gd1$1:(Lscala/util/regexp/Base$RegExp;Ljava/lang/Object;)Z
   61:	ifeq	81
   64:	aload	5
   66:	astore	6
   68:	aload_1
   69:	checkcast	#16; //class scala/util/regexp/PointedHedgeExp$Node
   72:	aload_0
   73:	invokeinterface	#93,  2; //InterfaceMethod scala/Product.canEqual:(Ljava/lang/Object;)Z
   78:	goto	86
   81:	iconst_0
   82:	goto	86
   85:	iconst_0
   86:	ifeq	93
   89:	iconst_1
   90:	goto	94
   93:	iconst_0
   94:	ireturn
  LineNumberTable: 
   line 25: 0
   line 21: 81
   line 25: 86

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      95      0    this       Lscala/util/regexp/PointedHedgeExp$Node;
   7      82      2    temp1       Ljava/lang/Object;
   33      52      3    temp2       Lscala/util/regexp/PointedHedgeExp$Node;
   39      46      4    temp3       Ljava/lang/Object;
   45      40      5    temp4       Lscala/util/regexp/Base$RegExp;
   49      15      6    r$1       Lscala/util/regexp/Base$RegExp;
   68      10      6    r$1       Lscala/util/regexp/Base$RegExp;
   64      21      6    r$1       Lscala/util/regexp/Base$RegExp;
   53      32      7    label$1       Ljava/lang/Object;


public java.lang.String toString();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	getstatic	#105; //Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   3:	aload_0
   4:	invokevirtual	#109; //Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
   7:	areturn
  LineNumberTable: 
   line 25: 0


public int hashCode();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	getstatic	#105; //Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   3:	aload_0
   4:	invokevirtual	#114; //Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
   7:	ireturn
  LineNumberTable: 
   line 25: 0


public java.lang.Object copy$default$1();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#46; //Method label:()Ljava/lang/Object;
   4:	areturn
  LineNumberTable: 
   line 25: 0


public scala.util.regexp.Base$RegExp copy$default$2();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#55; //Method r:()Lscala/util/regexp/Base$RegExp;
   4:	areturn
  LineNumberTable: 
   line 25: 0


public scala.util.regexp.PointedHedgeExp$Node copy(java.lang.Object, scala.util.regexp.Base$RegExp);
  Code:
   Stack=5, Locals=3, Args_size=3
   0:	new	#16; //class scala/util/regexp/PointedHedgeExp$Node
   3:	dup
   4:	aload_0
   5:	invokevirtual	#87; //Method scala$util$regexp$PointedHedgeExp$Node$$$outer:()Lscala/util/regexp/PointedHedgeExp;
   8:	aload_1
   9:	aload_2
   10:	invokespecial	#120; //Method "<init>":(Lscala/util/regexp/PointedHedgeExp;Ljava/lang/Object;Lscala/util/regexp/Base$RegExp;)V
   13:	areturn
  LineNumberTable: 
   line 25: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      14      0    this       Lscala/util/regexp/PointedHedgeExp$Node;
   0      14      1    label       Ljava/lang/Object;
   0      14      2    r       Lscala/util/regexp/Base$RegExp;


public final boolean isNullable();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	iconst_0
   1:	ireturn
  LineNumberTable: 
   line 26: 0


public scala.util.regexp.Base$RegExp r();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#20; //Field r:Lscala/util/regexp/Base$RegExp;
   4:	areturn
  LineNumberTable: 
   line 25: 0


public java.lang.Object label();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#18; //Field label:Ljava/lang/Object;
   4:	areturn
  LineNumberTable: 
   line 25: 0


public scala.collection.Iterator productElements();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#126; //Method scala/Product$class.productElements:(Lscala/Product;)Lscala/collection/Iterator;
   4:	areturn
  LineNumberTable: 
   line 25: 0


public scala.collection.Iterator productIterator();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#129; //Method scala/Product$class.productIterator:(Lscala/Product;)Lscala/collection/Iterator;
   4:	areturn
  LineNumberTable: 
   line 25: 0


}

