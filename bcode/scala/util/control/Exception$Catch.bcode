Compiled from "Exception.scala"
public class scala.util.control.Exception$Catch extends java.lang.Object implements scala.util.control.Exception$Described,scala.ScalaObject
  SourceFile: "Exception.scala"
  Signature: length = 0x2
   00 FFFFFFE0 
  Scala: length = 0x
   
  InnerClass: 
   public #34= #18 of #228; //Catch=class scala/util/control/Exception$Catch of class scala/util/control/Exception
   public #229= #137 of #228; //Finally=class scala/util/control/Exception$Finally of class scala/util/control/Exception
   public abstract #232= #231 of #228; //Described=class scala/util/control/Exception$Described of class scala/util/control/Exception
   public final #233= #71 of #18; //$anon$2=class scala/util/control/Exception$Catch$$anon$2 of class scala/util/control/Exception$Catch
   public final #234= #118 of #18; //$anonfun$opt$1=class scala/util/control/Exception$Catch$$anonfun$opt$1 of class scala/util/control/Exception$Catch
   public final #235= #173 of #18; //$anonfun$apply$1=class scala/util/control/Exception$Catch$$anonfun$apply$1 of class scala/util/control/Exception$Catch
   public final #236= #100 of #18; //$anonfun$either$1=class scala/util/control/Exception$Catch$$anonfun$either$1 of class scala/util/control/Exception$Catch
   public final #237= #67 of #18; //$anonfun$toOption$1=class scala/util/control/Exception$Catch$$anonfun$toOption$1 of class scala/util/control/Exception$Catch
   public final #238= #56 of #18; //$anonfun$toEither$1=class scala/util/control/Exception$Catch$$anonfun$toEither$1 of class scala/util/control/Exception$Catch
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Exception.scala;
const #3 = Asciz	scala$util$control$Exception$Described$$_desc;
const #4 = Asciz	Ljava/lang/String;;
const #5 = Asciz	name;
const #6 = Asciz	fin;
const #7 = Asciz	Lscala/Option;;
const #8 = Asciz	Lscala/Option<Lscala/util/control/Exception$Finally;>;;
const #9 = Asciz	Signature;
const #10 = Asciz	pf;
const #11 = Asciz	Lscala/PartialFunction;;
const #12 = Asciz	Lscala/PartialFunction<Ljava/lang/Throwable;TT;>;;
const #13 = Asciz	<init>;
const #14 = Asciz	(Lscala/PartialFunction;Lscala/Option;)V;
const #15 = Asciz	Code;
const #16 = Asciz	LineNumberTable;
const #17 = Asciz	scala/util/control/Exception$Catch;
const #18 = class	#17;	//  scala/util/control/Exception$Catch
const #19 = NameAndType	#10:#11;//  pf:Lscala/PartialFunction;
const #20 = Field	#18.#19;	//  scala/util/control/Exception$Catch.pf:Lscala/PartialFunction;
const #21 = NameAndType	#6:#7;//  fin:Lscala/Option;
const #22 = Field	#18.#21;	//  scala/util/control/Exception$Catch.fin:Lscala/Option;
const #23 = Asciz	java/lang/Object;
const #24 = class	#23;	//  java/lang/Object
const #25 = Asciz	()V;
const #26 = NameAndType	#13:#25;//  "<init>":()V
const #27 = Method	#24.#26;	//  java/lang/Object."<init>":()V
const #28 = Asciz	scala/util/control/Exception$Described$class;
const #29 = class	#28;	//  scala/util/control/Exception$Described$class
const #30 = Asciz	$init$;
const #31 = Asciz	(Lscala/util/control/Exception$Described;)V;
const #32 = NameAndType	#30:#31;//  $init$:(Lscala/util/control/Exception$Described;)V
const #33 = Method	#29.#32;	//  scala/util/control/Exception$Described$class.$init$:(Lscala/util/control/Exception$Described;)V
const #34 = Asciz	Catch;
const #35 = String	#34;	//  Catch
const #36 = NameAndType	#5:#4;//  name:Ljava/lang/String;
const #37 = Field	#18.#36;	//  scala/util/control/Exception$Catch.name:Ljava/lang/String;
const #38 = Asciz	this;
const #39 = Asciz	Lscala/util/control/Exception$Catch;;
const #40 = Asciz	LocalVariableTable;
const #41 = Asciz	(Lscala/PartialFunction<Ljava/lang/Throwable;TT;>;Lscala/Option<Lscala/util/control/Exception$Finally;>;)V;
const #42 = Asciz	gd3$1;
const #43 = Asciz	(Ljava/lang/Throwable;)Z;
const #44 = Asciz	()Lscala/PartialFunction;;
const #45 = NameAndType	#10:#44;//  pf:()Lscala/PartialFunction;
const #46 = Method	#18.#45;	//  scala/util/control/Exception$Catch.pf:()Lscala/PartialFunction;
const #47 = Asciz	scala/PartialFunction;
const #48 = class	#47;	//  scala/PartialFunction
const #49 = Asciz	isDefinedAt;
const #50 = Asciz	(Ljava/lang/Object;)Z;
const #51 = NameAndType	#49:#50;//  isDefinedAt:(Ljava/lang/Object;)Z
const #52 = InterfaceMethod	#48.#51;	//  scala/PartialFunction.isDefinedAt:(Ljava/lang/Object;)Z
const #53 = Asciz	toEither;
const #54 = Asciz	()Lscala/util/control/Exception$Catch;;
const #55 = Asciz	scala/util/control/Exception$Catch$$anonfun$toEither$1;
const #56 = class	#55;	//  scala/util/control/Exception$Catch$$anonfun$toEither$1
const #57 = Asciz	(Lscala/util/control/Exception$Catch;)V;
const #58 = NameAndType	#13:#57;//  "<init>":(Lscala/util/control/Exception$Catch;)V
const #59 = Method	#56.#58;	//  scala/util/control/Exception$Catch$$anonfun$toEither$1."<init>":(Lscala/util/control/Exception$Catch;)V
const #60 = Asciz	withApply;
const #61 = Asciz	(Lscala/Function1;)Lscala/util/control/Exception$Catch;;
const #62 = NameAndType	#60:#61;//  withApply:(Lscala/Function1;)Lscala/util/control/Exception$Catch;
const #63 = Method	#18.#62;	//  scala/util/control/Exception$Catch.withApply:(Lscala/Function1;)Lscala/util/control/Exception$Catch;
const #64 = Asciz	()Lscala/util/control/Exception$Catch<Lscala/Either<Ljava/lang/Throwable;TT;>;>;;
const #65 = Asciz	toOption;
const #66 = Asciz	scala/util/control/Exception$Catch$$anonfun$toOption$1;
const #67 = class	#66;	//  scala/util/control/Exception$Catch$$anonfun$toOption$1
const #68 = Method	#67.#58;	//  scala/util/control/Exception$Catch$$anonfun$toOption$1."<init>":(Lscala/util/control/Exception$Catch;)V
const #69 = Asciz	()Lscala/util/control/Exception$Catch<Lscala/Option<TT;>;>;;
const #70 = Asciz	scala/util/control/Exception$Catch$$anon$2;
const #71 = class	#70;	//  scala/util/control/Exception$Catch$$anon$2
const #72 = Asciz	(Lscala/util/control/Exception$Catch;Lscala/Function1;)V;
const #73 = NameAndType	#13:#72;//  "<init>":(Lscala/util/control/Exception$Catch;Lscala/Function1;)V
const #74 = Method	#71.#73;	//  scala/util/control/Exception$Catch$$anon$2."<init>":(Lscala/util/control/Exception$Catch;Lscala/Function1;)V
const #75 = Asciz	scala/runtime/ScalaRunTime$;
const #76 = class	#75;	//  scala/runtime/ScalaRunTime$
const #77 = Asciz	MODULE$;
const #78 = Asciz	Lscala/runtime/ScalaRunTime$;;
const #79 = NameAndType	#77:#78;//  MODULE$:Lscala/runtime/ScalaRunTime$;
const #80 = Field	#76.#79;	//  scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
const #81 = Asciz	boxArray;
const #82 = Asciz	(Ljava/lang/Object;)Lscala/runtime/BoxedArray;;
const #83 = NameAndType	#81:#82;//  boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
const #84 = Method	#76.#83;	//  scala/runtime/ScalaRunTime$.boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
const #85 = Asciz	()Lscala/Option;;
const #86 = NameAndType	#6:#85;//  fin:()Lscala/Option;
const #87 = Method	#18.#86;	//  scala/util/control/Exception$Catch.fin:()Lscala/Option;
const #88 = NameAndType	#13:#14;//  "<init>":(Lscala/PartialFunction;Lscala/Option;)V
const #89 = Method	#18.#88;	//  scala/util/control/Exception$Catch."<init>":(Lscala/PartialFunction;Lscala/Option;)V
const #90 = Asciz	f$1;
const #91 = Asciz	Lscala/Function1;;
const #92 = Asciz	pf2;
const #93 = Asciz	Ljava/lang/Object;;
const #94 = Asciz	<U:Ljava/lang/Object;>(Lscala/Function1<Ljava/lang/Throwable;TU;>;)Lscala/util/control/Exception$Catch<TU;>;;
const #95 = Asciz	either;
const #96 = Asciz	(Lscala/Function0;)Lscala/Either;;
const #97 = NameAndType	#53:#54;//  toEither:()Lscala/util/control/Exception$Catch;
const #98 = Method	#18.#97;	//  scala/util/control/Exception$Catch.toEither:()Lscala/util/control/Exception$Catch;
const #99 = Asciz	scala/util/control/Exception$Catch$$anonfun$either$1;
const #100 = class	#99;	//  scala/util/control/Exception$Catch$$anonfun$either$1
const #101 = Asciz	(Lscala/util/control/Exception$Catch;Lscala/Function0;)V;
const #102 = NameAndType	#13:#101;//  "<init>":(Lscala/util/control/Exception$Catch;Lscala/Function0;)V
const #103 = Method	#100.#102;	//  scala/util/control/Exception$Catch$$anonfun$either$1."<init>":(Lscala/util/control/Exception$Catch;Lscala/Function0;)V
const #104 = Asciz	apply;
const #105 = Asciz	(Lscala/Function0;)Ljava/lang/Object;;
const #106 = NameAndType	#104:#105;//  apply:(Lscala/Function0;)Ljava/lang/Object;
const #107 = Method	#18.#106;	//  scala/util/control/Exception$Catch.apply:(Lscala/Function0;)Ljava/lang/Object;
const #108 = Asciz	scala/Either;
const #109 = class	#108;	//  scala/Either
const #110 = Asciz	body$2;
const #111 = Asciz	Lscala/Function0;;
const #112 = Asciz	<U:Ljava/lang/Object;>(Lscala/Function0<TU;>;)Lscala/Either<Ljava/lang/Throwable;TU;>;;
const #113 = Asciz	opt;
const #114 = Asciz	(Lscala/Function0;)Lscala/Option;;
const #115 = NameAndType	#65:#54;//  toOption:()Lscala/util/control/Exception$Catch;
const #116 = Method	#18.#115;	//  scala/util/control/Exception$Catch.toOption:()Lscala/util/control/Exception$Catch;
const #117 = Asciz	scala/util/control/Exception$Catch$$anonfun$opt$1;
const #118 = class	#117;	//  scala/util/control/Exception$Catch$$anonfun$opt$1
const #119 = Method	#118.#102;	//  scala/util/control/Exception$Catch$$anonfun$opt$1."<init>":(Lscala/util/control/Exception$Catch;Lscala/Function0;)V
const #120 = Asciz	scala/Option;
const #121 = class	#120;	//  scala/Option
const #122 = Asciz	body$1;
const #123 = Asciz	<U:Ljava/lang/Object;>(Lscala/Function0<TU;>;)Lscala/Option<TU;>;;
const #124 = Asciz	andFinally;
const #125 = Asciz	(Lscala/Function0;)Lscala/util/control/Exception$Catch;;
const #126 = Asciz	scala/None$;
const #127 = class	#126;	//  scala/None$
const #128 = Asciz	Lscala/None$;;
const #129 = NameAndType	#77:#128;//  MODULE$:Lscala/None$;
const #130 = Field	#127.#129;	//  scala/None$.MODULE$:Lscala/None$;
const #131 = Asciz	equals;
const #132 = NameAndType	#131:#50;//  equals:(Ljava/lang/Object;)Z
const #133 = Method	#24.#132;	//  java/lang/Object.equals:(Ljava/lang/Object;)Z
const #134 = Asciz	scala/Some;
const #135 = class	#134;	//  scala/Some
const #136 = Asciz	scala/util/control/Exception$Finally;
const #137 = class	#136;	//  scala/util/control/Exception$Finally
const #138 = Asciz	(Lscala/Function0;)V;
const #139 = NameAndType	#13:#138;//  "<init>":(Lscala/Function0;)V
const #140 = Method	#137.#139;	//  scala/util/control/Exception$Finally."<init>":(Lscala/Function0;)V
const #141 = Asciz	(Ljava/lang/Object;)V;
const #142 = NameAndType	#13:#141;//  "<init>":(Ljava/lang/Object;)V
const #143 = Method	#135.#142;	//  scala/Some."<init>":(Ljava/lang/Object;)V
const #144 = Asciz	x;
const #145 = Asciz	()Ljava/lang/Object;;
const #146 = NameAndType	#144:#145;//  x:()Ljava/lang/Object;
const #147 = Method	#135.#146;	//  scala/Some.x:()Ljava/lang/Object;
const #148 = Asciz	and;
const #149 = Asciz	(Lscala/Function0;)Lscala/util/control/Exception$Finally;;
const #150 = NameAndType	#148:#149;//  and:(Lscala/Function0;)Lscala/util/control/Exception$Finally;
const #151 = Method	#137.#150;	//  scala/util/control/Exception$Finally.and:(Lscala/Function0;)Lscala/util/control/Exception$Finally;
const #152 = Asciz	scala/MatchError;
const #153 = class	#152;	//  scala/MatchError
const #154 = Asciz	toString;
const #155 = Asciz	()Ljava/lang/String;;
const #156 = NameAndType	#154:#155;//  toString:()Ljava/lang/String;
const #157 = Method	#121.#156;	//  scala/Option.toString:()Ljava/lang/String;
const #158 = Asciz	(Ljava/lang/String;)V;
const #159 = NameAndType	#13:#158;//  "<init>":(Ljava/lang/String;)V
const #160 = Method	#153.#159;	//  scala/MatchError."<init>":(Ljava/lang/String;)V
const #161 = Asciz	body;
const #162 = Asciz	temp6;
const #163 = Asciz	temp8;
const #164 = Asciz	Lscala/Some;;
const #165 = Asciz	temp9;
const #166 = Asciz	Lscala/util/control/Exception$Finally;;
const #167 = Asciz	(Lscala/Function0<Ljava/lang/Object;>;)Lscala/util/control/Exception$Catch<TT;>;;
const #168 = Asciz	scala/Function0;
const #169 = class	#168;	//  scala/Function0
const #170 = NameAndType	#104:#145;//  apply:()Ljava/lang/Object;
const #171 = InterfaceMethod	#169.#170;	//  scala/Function0.apply:()Ljava/lang/Object;
const #172 = Asciz	scala/util/control/Exception$Catch$$anonfun$apply$1;
const #173 = class	#172;	//  scala/util/control/Exception$Catch$$anonfun$apply$1
const #174 = Method	#173.#58;	//  scala/util/control/Exception$Catch$$anonfun$apply$1."<init>":(Lscala/util/control/Exception$Catch;)V
const #175 = Asciz	map;
const #176 = Asciz	(Lscala/Function1;)Lscala/Option;;
const #177 = NameAndType	#175:#176;//  map:(Lscala/Function1;)Lscala/Option;
const #178 = Method	#121.#177;	//  scala/Option.map:(Lscala/Function1;)Lscala/Option;
const #179 = NameAndType	#42:#43;//  gd3$1:(Ljava/lang/Throwable;)Z
const #180 = Method	#18.#179;	//  scala/util/control/Exception$Catch.gd3$1:(Ljava/lang/Throwable;)Z
const #181 = Asciz	scala/Function1;
const #182 = class	#181;	//  scala/Function1
const #183 = Asciz	(Ljava/lang/Object;)Ljava/lang/Object;;
const #184 = NameAndType	#104:#183;//  apply:(Ljava/lang/Object;)Ljava/lang/Object;
const #185 = InterfaceMethod	#182.#184;	//  scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
const #186 = Asciz	java/lang/Throwable;
const #187 = class	#186;	//  java/lang/Throwable
const #188 = Asciz	exceptionResult1;
const #189 = Asciz	temp5;
const #190 = Asciz	Ljava/lang/Throwable;;
const #191 = Asciz	e;
const #192 = Asciz	<U:Ljava/lang/Object;>(Lscala/Function0<TU;>;)TU;;
const #193 = Asciz	or;
const #194 = Asciz	(Lscala/util/control/Exception$Catch;)Lscala/util/control/Exception$Catch;;
const #195 = Asciz	(Lscala/PartialFunction;)Lscala/util/control/Exception$Catch;;
const #196 = NameAndType	#193:#195;//  or:(Lscala/PartialFunction;)Lscala/util/control/Exception$Catch;
const #197 = Method	#18.#196;	//  scala/util/control/Exception$Catch.or:(Lscala/PartialFunction;)Lscala/util/control/Exception$Catch;
const #198 = Asciz	other;
const #199 = Asciz	<U:Ljava/lang/Object;>(Lscala/util/control/Exception$Catch<TU;>;)Lscala/util/control/Exception$Catch<TU;>;;
const #200 = Asciz	orElse;
const #201 = Asciz	(Lscala/PartialFunction;)Lscala/PartialFunction;;
const #202 = NameAndType	#200:#201;//  orElse:(Lscala/PartialFunction;)Lscala/PartialFunction;
const #203 = InterfaceMethod	#48.#202;	//  scala/PartialFunction.orElse:(Lscala/PartialFunction;)Lscala/PartialFunction;
const #204 = Asciz	<U:Ljava/lang/Object;>(Lscala/PartialFunction<Ljava/lang/Throwable;TU;>;)Lscala/util/control/Exception$Catch<TU;>;;
const #205 = Asciz	(Lscala/PartialFunction;)V;
const #206 = Asciz	(Lscala/PartialFunction<Ljava/lang/Throwable;TT;>;)V;
const #207 = Asciz	()Lscala/Option<Lscala/util/control/Exception$Finally;>;;
const #208 = Asciz	()Lscala/PartialFunction<Ljava/lang/Throwable;TT;>;;
const #209 = Asciz	(Lscala/util/control/Exception$Described;)Ljava/lang/String;;
const #210 = NameAndType	#154:#209;//  toString:(Lscala/util/control/Exception$Described;)Ljava/lang/String;
const #211 = Method	#29.#210;	//  scala/util/control/Exception$Described$class.toString:(Lscala/util/control/Exception$Described;)Ljava/lang/String;
const #212 = Asciz	withDesc;
const #213 = Asciz	(Ljava/lang/String;)Lscala/util/control/Exception$Described;;
const #214 = Asciz	(Lscala/util/control/Exception$Described;Ljava/lang/String;)Lscala/util/control/Exception$Described;;
const #215 = NameAndType	#212:#214;//  withDesc:(Lscala/util/control/Exception$Described;Ljava/lang/String;)Lscala/util/control/Exception$Described;
const #216 = Method	#29.#215;	//  scala/util/control/Exception$Described$class.withDesc:(Lscala/util/control/Exception$Described;Ljava/lang/String;)Lscala/util/control/Exception$Described;
const #217 = Asciz	s;
const #218 = Asciz	desc;
const #219 = NameAndType	#218:#209;//  desc:(Lscala/util/control/Exception$Described;)Ljava/lang/String;
const #220 = Method	#29.#219;	//  scala/util/control/Exception$Described$class.desc:(Lscala/util/control/Exception$Described;)Ljava/lang/String;
const #221 = Asciz	scala$util$control$Exception$Described$$_desc_$eq;
const #222 = NameAndType	#3:#4;//  scala$util$control$Exception$Described$$_desc:Ljava/lang/String;
const #223 = Field	#18.#222;	//  scala/util/control/Exception$Catch.scala$util$control$Exception$Described$$_desc:Ljava/lang/String;
const #224 = Asciz	<T:Ljava/lang/Object;>Ljava/lang/Object;Lscala/util/control/Exception$Described;Lscala/ScalaObject;;
const #225 = Asciz	Scala;
const #226 = Asciz	InnerClasses;
const #227 = Asciz	scala/util/control/Exception;
const #228 = class	#227;	//  scala/util/control/Exception
const #229 = Asciz	Finally;
const #230 = Asciz	scala/util/control/Exception$Described;
const #231 = class	#230;	//  scala/util/control/Exception$Described
const #232 = Asciz	Described;
const #233 = Asciz	$anon$2;
const #234 = Asciz	$anonfun$opt$1;
const #235 = Asciz	$anonfun$apply$1;
const #236 = Asciz	$anonfun$either$1;
const #237 = Asciz	$anonfun$toOption$1;
const #238 = Asciz	$anonfun$toEither$1;
const #239 = Asciz	scala/ScalaObject;
const #240 = class	#239;	//  scala/ScalaObject

{
public scala.util.control.Exception$Catch(scala.PartialFunction, scala.Option);
  Code:
   Stack=2, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	putfield	#20; //Field pf:Lscala/PartialFunction;
   5:	aload_0
   6:	aload_2
   7:	putfield	#22; //Field fin:Lscala/Option;
   10:	aload_0
   11:	invokespecial	#27; //Method java/lang/Object."<init>":()V
   14:	aload_0
   15:	invokestatic	#33; //Method scala/util/control/Exception$Described$class.$init$:(Lscala/util/control/Exception$Described;)V
   18:	aload_0
   19:	ldc	#35; //String Catch
   21:	putfield	#37; //Field name:Ljava/lang/String;
   24:	return
  LineNumberTable: 
   line 64: 0
   line 65: 5
   line 63: 10
   line 69: 18

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      25      0    this       Lscala/util/control/Exception$Catch;
   0      25      1    pf       Lscala/PartialFunction;
   0      25      2    fin       Lscala/Option;

  Signature: length = 0x2
   00 29 

public scala.util.control.Exception$Catch toEither();
  Code:
   Stack=4, Locals=1, Args_size=1
   0:	aload_0
   1:	new	#56; //class scala/util/control/Exception$Catch$$anonfun$toEither$1
   4:	dup
   5:	aload_0
   6:	invokespecial	#59; //Method scala/util/control/Exception$Catch$$anonfun$toEither$1."<init>":(Lscala/util/control/Exception$Catch;)V
   9:	invokevirtual	#63; //Method withApply:(Lscala/Function1;)Lscala/util/control/Exception$Catch;
   12:	areturn
  LineNumberTable: 
   line 111: 0

  Signature: length = 0x2
   00 40 

public scala.util.control.Exception$Catch toOption();
  Code:
   Stack=4, Locals=1, Args_size=1
   0:	aload_0
   1:	new	#67; //class scala/util/control/Exception$Catch$$anonfun$toOption$1
   4:	dup
   5:	aload_0
   6:	invokespecial	#68; //Method scala/util/control/Exception$Catch$$anonfun$toOption$1."<init>":(Lscala/util/control/Exception$Catch;)V
   9:	invokevirtual	#63; //Method withApply:(Lscala/Function1;)Lscala/util/control/Exception$Catch;
   12:	areturn
  LineNumberTable: 
   line 110: 0

  Signature: length = 0x2
   00 45 

public scala.util.control.Exception$Catch withApply(scala.Function1);
  Code:
   Stack=4, Locals=3, Args_size=2
   0:	new	#71; //class scala/util/control/Exception$Catch$$anon$2
   3:	dup
   4:	aload_0
   5:	aload_1
   6:	invokespecial	#74; //Method scala/util/control/Exception$Catch$$anon$2."<init>":(Lscala/util/control/Exception$Catch;Lscala/Function1;)V
   9:	astore_2
   10:	new	#18; //class scala/util/control/Exception$Catch
   13:	dup
   14:	aload_2
   15:	instanceof	#48; //class scala/PartialFunction
   18:	ifeq	25
   21:	aload_2
   22:	goto	32
   25:	getstatic	#80; //Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   28:	aload_2
   29:	invokevirtual	#84; //Method scala/runtime/ScalaRunTime$.boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
   32:	checkcast	#48; //class scala/PartialFunction
   35:	aload_0
   36:	invokevirtual	#87; //Method fin:()Lscala/Option;
   39:	invokespecial	#89; //Method "<init>":(Lscala/PartialFunction;Lscala/Option;)V
   42:	areturn
  LineNumberTable: 
   line 102: 0
   line 106: 10

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      43      0    this       Lscala/util/control/Exception$Catch;
   0      43      1    f$1       Lscala/Function1;
   10      32      2    pf2       Ljava/lang/Object;

  Signature: length = 0x2
   00 5E 

public scala.Either either(scala.Function0);
  Code:
   Stack=5, Locals=2, Args_size=2
   0:	aload_0
   1:	invokevirtual	#98; //Method toEither:()Lscala/util/control/Exception$Catch;
   4:	new	#100; //class scala/util/control/Exception$Catch$$anonfun$either$1
   7:	dup
   8:	aload_0
   9:	aload_1
   10:	invokespecial	#103; //Method scala/util/control/Exception$Catch$$anonfun$either$1."<init>":(Lscala/util/control/Exception$Catch;Lscala/Function0;)V
   13:	invokevirtual	#107; //Method apply:(Lscala/Function0;)Ljava/lang/Object;
   16:	checkcast	#109; //class scala/Either
   19:	areturn
  LineNumberTable: 
   line 97: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      20      0    this       Lscala/util/control/Exception$Catch;
   0      20      1    body$2       Lscala/Function0;

  Signature: length = 0x2
   00 70 

public scala.Option opt(scala.Function0);
  Code:
   Stack=5, Locals=2, Args_size=2
   0:	aload_0
   1:	invokevirtual	#116; //Method toOption:()Lscala/util/control/Exception$Catch;
   4:	new	#118; //class scala/util/control/Exception$Catch$$anonfun$opt$1
   7:	dup
   8:	aload_0
   9:	aload_1
   10:	invokespecial	#119; //Method scala/util/control/Exception$Catch$$anonfun$opt$1."<init>":(Lscala/util/control/Exception$Catch;Lscala/Function0;)V
   13:	invokevirtual	#107; //Method apply:(Lscala/Function0;)Ljava/lang/Object;
   16:	checkcast	#121; //class scala/Option
   19:	areturn
  LineNumberTable: 
   line 91: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      20      0    this       Lscala/util/control/Exception$Catch;
   0      20      1    body$1       Lscala/Function0;

  Signature: length = 0x2
   00 7B 

public scala.util.control.Exception$Catch andFinally(scala.Function0);
  Code:
   Stack=8, Locals=6, Args_size=2
   0:	aload_0
   1:	invokevirtual	#87; //Method fin:()Lscala/Option;
   4:	astore_2
   5:	getstatic	#130; //Field scala/None$.MODULE$:Lscala/None$;
   8:	aload_2
   9:	astore_3
   10:	dup
   11:	ifnonnull	22
   14:	pop
   15:	aload_3
   16:	ifnull	29
   19:	goto	65
   22:	aload_3
   23:	invokevirtual	#133; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   26:	ifeq	65
   29:	aload_2
   30:	instanceof	#127; //class scala/None$
   33:	ifeq	65
   36:	new	#18; //class scala/util/control/Exception$Catch
   39:	dup
   40:	aload_0
   41:	invokevirtual	#46; //Method pf:()Lscala/PartialFunction;
   44:	new	#135; //class scala/Some
   47:	dup
   48:	new	#137; //class scala/util/control/Exception$Finally
   51:	dup
   52:	aload_1
   53:	invokespecial	#140; //Method scala/util/control/Exception$Finally."<init>":(Lscala/Function0;)V
   56:	invokespecial	#143; //Method scala/Some."<init>":(Ljava/lang/Object;)V
   59:	invokespecial	#89; //Method "<init>":(Lscala/PartialFunction;Lscala/Option;)V
   62:	goto	112
   65:	aload_2
   66:	instanceof	#135; //class scala/Some
   69:	ifeq	113
   72:	aload_2
   73:	checkcast	#135; //class scala/Some
   76:	astore	4
   78:	aload	4
   80:	invokevirtual	#147; //Method scala/Some.x:()Ljava/lang/Object;
   83:	checkcast	#137; //class scala/util/control/Exception$Finally
   86:	astore	5
   88:	new	#18; //class scala/util/control/Exception$Catch
   91:	dup
   92:	aload_0
   93:	invokevirtual	#46; //Method pf:()Lscala/PartialFunction;
   96:	new	#135; //class scala/Some
   99:	dup
   100:	aload	5
   102:	aload_1
   103:	invokevirtual	#151; //Method scala/util/control/Exception$Finally.and:(Lscala/Function0;)Lscala/util/control/Exception$Finally;
   106:	invokespecial	#143; //Method scala/Some."<init>":(Ljava/lang/Object;)V
   109:	invokespecial	#89; //Method "<init>":(Lscala/PartialFunction;Lscala/Option;)V
   112:	areturn
   113:	new	#153; //class scala/MatchError
   116:	dup
   117:	aload_2
   118:	invokevirtual	#157; //Method scala/Option.toString:()Ljava/lang/String;
   121:	invokespecial	#160; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   124:	athrow
  LineNumberTable: 
   line 83: 0
   line 84: 36
   line 83: 65
   line 85: 88
   line 83: 112

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      125      0    this       Lscala/util/control/Exception$Catch;
   0      125      1    body       Lscala/Function0;
   5      120      2    temp6       Lscala/Option;
   78      34      4    temp8       Lscala/Some;
   88      24      5    temp9       Lscala/util/control/Exception$Finally;

  Signature: length = 0x2
   00 FFFFFFA7 

public java.lang.Object apply(scala.Function0);
  Code:
   Stack=4, Locals=7, Args_size=2
   0:	aconst_null
   1:	astore_2
   2:	aload_1
   3:	invokeinterface	#171,  1; //InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
   8:	astore_2
   9:	aload_0
   10:	invokevirtual	#87; //Method fin:()Lscala/Option;
   13:	new	#173; //class scala/util/control/Exception$Catch$$anonfun$apply$1
   16:	dup
   17:	aload_0
   18:	invokespecial	#174; //Method scala/util/control/Exception$Catch$$anonfun$apply$1."<init>":(Lscala/util/control/Exception$Catch;)V
   21:	invokevirtual	#178; //Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
   24:	pop
   25:	goto	73
   28:	astore_3
   29:	aload_3
   30:	astore	5
   32:	aload	5
   34:	astore	6
   36:	aload_0
   37:	aload	6
   39:	invokespecial	#180; //Method gd3$1:(Ljava/lang/Throwable;)Z
   42:	ifeq	75
   45:	aload_0
   46:	invokevirtual	#46; //Method pf:()Lscala/PartialFunction;
   49:	aload	5
   51:	invokeinterface	#185,  2; //InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
   56:	astore_2
   57:	aload_0
   58:	invokevirtual	#87; //Method fin:()Lscala/Option;
   61:	new	#173; //class scala/util/control/Exception$Catch$$anonfun$apply$1
   64:	dup
   65:	aload_0
   66:	invokespecial	#174; //Method scala/util/control/Exception$Catch$$anonfun$apply$1."<init>":(Lscala/util/control/Exception$Catch;)V
   69:	invokevirtual	#178; //Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
   72:	pop
   73:	aload_2
   74:	areturn
   75:	aload_3
   76:	athrow
   77:	astore	4
   79:	aload_0
   80:	invokevirtual	#87; //Method fin:()Lscala/Option;
   83:	new	#173; //class scala/util/control/Exception$Catch$$anonfun$apply$1
   86:	dup
   87:	aload_0
   88:	invokespecial	#174; //Method scala/util/control/Exception$Catch$$anonfun$apply$1."<init>":(Lscala/util/control/Exception$Catch;)V
   91:	invokevirtual	#178; //Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
   94:	pop
   95:	aload	4
   97:	athrow
  Exception table:
   from   to  target type
     2    28    28   Class java/lang/Throwable

     2    73    77   any
    75    77    77   any
  LineNumberTable: 
   line 77: 0
   line 79: 9
   line 77: 28
   line 78: 32
   line 77: 36
   line 78: 45
   line 77: 56
   line 79: 57
   line 77: 73
   line 79: 79

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      98      0    this       Lscala/util/control/Exception$Catch;
   0      98      1    body       Lscala/Function0;
   2      72      2    exceptionResult1       Ljava/lang/Object;
   75      23      2    exceptionResult1       Ljava/lang/Object;
   32      41      5    temp5       Ljava/lang/Throwable;
   75      2      5    temp5       Ljava/lang/Throwable;
   36      37      6    e       Ljava/lang/Throwable;
   75      2      6    e       Ljava/lang/Throwable;

  Signature: length = 0x2
   00 FFFFFFC0 

public scala.util.control.Exception$Catch or(scala.util.control.Exception$Catch);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokevirtual	#46; //Method pf:()Lscala/PartialFunction;
   5:	invokevirtual	#197; //Method or:(Lscala/PartialFunction;)Lscala/util/control/Exception$Catch;
   8:	areturn
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/util/control/Exception$Catch;
   0      9      1    other       Lscala/util/control/Exception$Catch;

  Signature: length = 0x2
   00 FFFFFFC7 

public scala.util.control.Exception$Catch or(scala.PartialFunction);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#18; //class scala/util/control/Exception$Catch
   3:	dup
   4:	aload_0
   5:	invokevirtual	#46; //Method pf:()Lscala/PartialFunction;
   8:	aload_1
   9:	invokeinterface	#203,  2; //InterfaceMethod scala/PartialFunction.orElse:(Lscala/PartialFunction;)Lscala/PartialFunction;
   14:	aload_0
   15:	invokevirtual	#87; //Method fin:()Lscala/Option;
   18:	invokespecial	#89; //Method "<init>":(Lscala/PartialFunction;Lscala/Option;)V
   21:	areturn
  LineNumberTable: 
   line 72: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      22      0    this       Lscala/util/control/Exception$Catch;
   0      22      1    pf2       Lscala/PartialFunction;

  Signature: length = 0x2
   00 FFFFFFCC 

public java.lang.String name();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#37; //Field name:Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 69: 0


public scala.util.control.Exception$Catch(scala.PartialFunction);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	getstatic	#130; //Field scala/None$.MODULE$:Lscala/None$;
   5:	invokespecial	#89; //Method "<init>":(Lscala/PartialFunction;Lscala/Option;)V
   8:	return
  LineNumberTable: 
   line 68: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/util/control/Exception$Catch;
   0      9      1    pf       Lscala/PartialFunction;

  Signature: length = 0x2
   00 FFFFFFCE 

public scala.Option fin();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#22; //Field fin:Lscala/Option;
   4:	areturn
  LineNumberTable: 
   line 65: 0

  Signature: length = 0x2
   00 FFFFFFCF 

public scala.PartialFunction pf();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#20; //Field pf:Lscala/PartialFunction;
   4:	areturn
  LineNumberTable: 
   line 64: 0

  Signature: length = 0x2
   00 FFFFFFD0 

public java.lang.String toString();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#211; //Method scala/util/control/Exception$Described$class.toString:(Lscala/util/control/Exception$Described;)Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 63: 0


public scala.util.control.Exception$Described withDesc(java.lang.String);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#216; //Method scala/util/control/Exception$Described$class.withDesc:(Lscala/util/control/Exception$Described;Ljava/lang/String;)Lscala/util/control/Exception$Described;
   5:	areturn
  LineNumberTable: 
   line 63: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/util/control/Exception$Catch;
   0      6      1    s       Ljava/lang/String;


public java.lang.String desc();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#220; //Method scala/util/control/Exception$Described$class.desc:(Lscala/util/control/Exception$Described;)Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 63: 0


public final void scala$util$control$Exception$Described$$_desc_$eq(java.lang.String);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	putfield	#223; //Field scala$util$control$Exception$Described$$_desc:Ljava/lang/String;
   5:	return
  LineNumberTable: 
   line 63: 0


public final java.lang.String scala$util$control$Exception$Described$$_desc();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#223; //Field scala$util$control$Exception$Described$$_desc:Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 63: 0


}

