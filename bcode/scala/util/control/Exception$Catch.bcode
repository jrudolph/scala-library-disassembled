Compiled from "Exception.scala"
public class scala.util.control.Exception$Catch extends java.lang.Object implements scala.util.control.Exception$Described,scala.ScalaObject
  SourceFile: "Exception.scala"
  Signature: length = 0x2
   00 FFFFFFD5 
  Scala: length = 0x
   
  InnerClass: 
   public #34= #18 of #217; //Catch=class scala/util/control/Exception$Catch of class scala/util/control/Exception
   public #218= #128 of #217; //Finally=class scala/util/control/Exception$Finally of class scala/util/control/Exception
   public abstract #221= #220 of #217; //Described=class scala/util/control/Exception$Described of class scala/util/control/Exception
   public final #222= #71 of #18; //$anon$2=class scala/util/control/Exception$Catch$$anon$2 of class scala/util/control/Exception$Catch
   public final #223= #108 of #18; //$anonfun$opt$1=class scala/util/control/Exception$Catch$$anonfun$opt$1 of class scala/util/control/Exception$Catch
   public final #224= #164 of #18; //$anonfun$apply$1=class scala/util/control/Exception$Catch$$anonfun$apply$1 of class scala/util/control/Exception$Catch
   public final #225= #90 of #18; //$anonfun$either$1=class scala/util/control/Exception$Catch$$anonfun$either$1 of class scala/util/control/Exception$Catch
   public final #226= #67 of #18; //$anonfun$toOption$1=class scala/util/control/Exception$Catch$$anonfun$toOption$1 of class scala/util/control/Exception$Catch
   public final #227= #56 of #18; //$anonfun$toEither$1=class scala/util/control/Exception$Catch$$anonfun$toEither$1 of class scala/util/control/Exception$Catch
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Exception.scala;
const #3 = Asciz	scala$util$control$Exception$Described$$_desc;
const #4 = Asciz	Ljava/lang/String;;
const #5 = Asciz	name;
const #6 = Asciz	fin;
const #7 = Asciz	Lscala/Option;;
const #8 = Asciz	Lscala/Option<Lscala/util/control/Exception$Finally;>;;
const #9 = Asciz	Signature;
const #10 = Asciz	pf;
const #11 = Asciz	Lscala/PartialFunction;;
const #12 = Asciz	Lscala/PartialFunction<Ljava/lang/Throwable;TT;>;;
const #13 = Asciz	<init>;
const #14 = Asciz	(Lscala/PartialFunction;Lscala/Option;)V;
const #15 = Asciz	Code;
const #16 = Asciz	LineNumberTable;
const #17 = Asciz	scala/util/control/Exception$Catch;
const #18 = class	#17;	//  scala/util/control/Exception$Catch
const #19 = NameAndType	#10:#11;//  pf:Lscala/PartialFunction;
const #20 = Field	#18.#19;	//  scala/util/control/Exception$Catch.pf:Lscala/PartialFunction;
const #21 = NameAndType	#6:#7;//  fin:Lscala/Option;
const #22 = Field	#18.#21;	//  scala/util/control/Exception$Catch.fin:Lscala/Option;
const #23 = Asciz	java/lang/Object;
const #24 = class	#23;	//  java/lang/Object
const #25 = Asciz	()V;
const #26 = NameAndType	#13:#25;//  "<init>":()V
const #27 = Method	#24.#26;	//  java/lang/Object."<init>":()V
const #28 = Asciz	scala/util/control/Exception$Described$class;
const #29 = class	#28;	//  scala/util/control/Exception$Described$class
const #30 = Asciz	$init$;
const #31 = Asciz	(Lscala/util/control/Exception$Described;)V;
const #32 = NameAndType	#30:#31;//  $init$:(Lscala/util/control/Exception$Described;)V
const #33 = Method	#29.#32;	//  scala/util/control/Exception$Described$class.$init$:(Lscala/util/control/Exception$Described;)V
const #34 = Asciz	Catch;
const #35 = String	#34;	//  Catch
const #36 = NameAndType	#5:#4;//  name:Ljava/lang/String;
const #37 = Field	#18.#36;	//  scala/util/control/Exception$Catch.name:Ljava/lang/String;
const #38 = Asciz	this;
const #39 = Asciz	Lscala/util/control/Exception$Catch;;
const #40 = Asciz	LocalVariableTable;
const #41 = Asciz	(Lscala/PartialFunction<Ljava/lang/Throwable;TT;>;Lscala/Option<Lscala/util/control/Exception$Finally;>;)V;
const #42 = Asciz	gd3$1;
const #43 = Asciz	(Ljava/lang/Throwable;)Z;
const #44 = Asciz	()Lscala/PartialFunction;;
const #45 = NameAndType	#10:#44;//  pf:()Lscala/PartialFunction;
const #46 = Method	#18.#45;	//  scala/util/control/Exception$Catch.pf:()Lscala/PartialFunction;
const #47 = Asciz	scala/PartialFunction;
const #48 = class	#47;	//  scala/PartialFunction
const #49 = Asciz	isDefinedAt;
const #50 = Asciz	(Ljava/lang/Object;)Z;
const #51 = NameAndType	#49:#50;//  isDefinedAt:(Ljava/lang/Object;)Z
const #52 = InterfaceMethod	#48.#51;	//  scala/PartialFunction.isDefinedAt:(Ljava/lang/Object;)Z
const #53 = Asciz	toEither;
const #54 = Asciz	()Lscala/util/control/Exception$Catch;;
const #55 = Asciz	scala/util/control/Exception$Catch$$anonfun$toEither$1;
const #56 = class	#55;	//  scala/util/control/Exception$Catch$$anonfun$toEither$1
const #57 = Asciz	(Lscala/util/control/Exception$Catch;)V;
const #58 = NameAndType	#13:#57;//  "<init>":(Lscala/util/control/Exception$Catch;)V
const #59 = Method	#56.#58;	//  scala/util/control/Exception$Catch$$anonfun$toEither$1."<init>":(Lscala/util/control/Exception$Catch;)V
const #60 = Asciz	withApply;
const #61 = Asciz	(Lscala/Function1;)Lscala/util/control/Exception$Catch;;
const #62 = NameAndType	#60:#61;//  withApply:(Lscala/Function1;)Lscala/util/control/Exception$Catch;
const #63 = Method	#18.#62;	//  scala/util/control/Exception$Catch.withApply:(Lscala/Function1;)Lscala/util/control/Exception$Catch;
const #64 = Asciz	()Lscala/util/control/Exception$Catch<Lscala/Either<Ljava/lang/Throwable;TT;>;>;;
const #65 = Asciz	toOption;
const #66 = Asciz	scala/util/control/Exception$Catch$$anonfun$toOption$1;
const #67 = class	#66;	//  scala/util/control/Exception$Catch$$anonfun$toOption$1
const #68 = Method	#67.#58;	//  scala/util/control/Exception$Catch$$anonfun$toOption$1."<init>":(Lscala/util/control/Exception$Catch;)V
const #69 = Asciz	()Lscala/util/control/Exception$Catch<Lscala/Option<TT;>;>;;
const #70 = Asciz	scala/util/control/Exception$Catch$$anon$2;
const #71 = class	#70;	//  scala/util/control/Exception$Catch$$anon$2
const #72 = Asciz	(Lscala/util/control/Exception$Catch;Lscala/Function1;)V;
const #73 = NameAndType	#13:#72;//  "<init>":(Lscala/util/control/Exception$Catch;Lscala/Function1;)V
const #74 = Method	#71.#73;	//  scala/util/control/Exception$Catch$$anon$2."<init>":(Lscala/util/control/Exception$Catch;Lscala/Function1;)V
const #75 = Asciz	()Lscala/Option;;
const #76 = NameAndType	#6:#75;//  fin:()Lscala/Option;
const #77 = Method	#18.#76;	//  scala/util/control/Exception$Catch.fin:()Lscala/Option;
const #78 = NameAndType	#13:#14;//  "<init>":(Lscala/PartialFunction;Lscala/Option;)V
const #79 = Method	#18.#78;	//  scala/util/control/Exception$Catch."<init>":(Lscala/PartialFunction;Lscala/Option;)V
const #80 = Asciz	f$1;
const #81 = Asciz	Lscala/Function1;;
const #82 = Asciz	pf2;
const #83 = Asciz	Ljava/lang/Object;;
const #84 = Asciz	<U:Ljava/lang/Object;>(Lscala/Function1<Ljava/lang/Throwable;TU;>;)Lscala/util/control/Exception$Catch<TU;>;;
const #85 = Asciz	either;
const #86 = Asciz	(Lscala/Function0;)Lscala/Either;;
const #87 = NameAndType	#53:#54;//  toEither:()Lscala/util/control/Exception$Catch;
const #88 = Method	#18.#87;	//  scala/util/control/Exception$Catch.toEither:()Lscala/util/control/Exception$Catch;
const #89 = Asciz	scala/util/control/Exception$Catch$$anonfun$either$1;
const #90 = class	#89;	//  scala/util/control/Exception$Catch$$anonfun$either$1
const #91 = Asciz	(Lscala/util/control/Exception$Catch;Lscala/Function0;)V;
const #92 = NameAndType	#13:#91;//  "<init>":(Lscala/util/control/Exception$Catch;Lscala/Function0;)V
const #93 = Method	#90.#92;	//  scala/util/control/Exception$Catch$$anonfun$either$1."<init>":(Lscala/util/control/Exception$Catch;Lscala/Function0;)V
const #94 = Asciz	apply;
const #95 = Asciz	(Lscala/Function0;)Ljava/lang/Object;;
const #96 = NameAndType	#94:#95;//  apply:(Lscala/Function0;)Ljava/lang/Object;
const #97 = Method	#18.#96;	//  scala/util/control/Exception$Catch.apply:(Lscala/Function0;)Ljava/lang/Object;
const #98 = Asciz	scala/Either;
const #99 = class	#98;	//  scala/Either
const #100 = Asciz	body$1;
const #101 = Asciz	Lscala/Function0;;
const #102 = Asciz	<U:Ljava/lang/Object;>(Lscala/Function0<TU;>;)Lscala/Either<Ljava/lang/Throwable;TU;>;;
const #103 = Asciz	opt;
const #104 = Asciz	(Lscala/Function0;)Lscala/Option;;
const #105 = NameAndType	#65:#54;//  toOption:()Lscala/util/control/Exception$Catch;
const #106 = Method	#18.#105;	//  scala/util/control/Exception$Catch.toOption:()Lscala/util/control/Exception$Catch;
const #107 = Asciz	scala/util/control/Exception$Catch$$anonfun$opt$1;
const #108 = class	#107;	//  scala/util/control/Exception$Catch$$anonfun$opt$1
const #109 = Method	#108.#92;	//  scala/util/control/Exception$Catch$$anonfun$opt$1."<init>":(Lscala/util/control/Exception$Catch;Lscala/Function0;)V
const #110 = Asciz	scala/Option;
const #111 = class	#110;	//  scala/Option
const #112 = Asciz	body$2;
const #113 = Asciz	<U:Ljava/lang/Object;>(Lscala/Function0<TU;>;)Lscala/Option<TU;>;;
const #114 = Asciz	andFinally;
const #115 = Asciz	(Lscala/Function0;)Lscala/util/control/Exception$Catch;;
const #116 = Asciz	scala/None$;
const #117 = class	#116;	//  scala/None$
const #118 = Asciz	MODULE$;
const #119 = Asciz	Lscala/None$;;
const #120 = NameAndType	#118:#119;//  MODULE$:Lscala/None$;
const #121 = Field	#117.#120;	//  scala/None$.MODULE$:Lscala/None$;
const #122 = Asciz	equals;
const #123 = NameAndType	#122:#50;//  equals:(Ljava/lang/Object;)Z
const #124 = Method	#24.#123;	//  java/lang/Object.equals:(Ljava/lang/Object;)Z
const #125 = Asciz	scala/Some;
const #126 = class	#125;	//  scala/Some
const #127 = Asciz	scala/util/control/Exception$Finally;
const #128 = class	#127;	//  scala/util/control/Exception$Finally
const #129 = Asciz	(Lscala/Function0;)V;
const #130 = NameAndType	#13:#129;//  "<init>":(Lscala/Function0;)V
const #131 = Method	#128.#130;	//  scala/util/control/Exception$Finally."<init>":(Lscala/Function0;)V
const #132 = Asciz	(Ljava/lang/Object;)V;
const #133 = NameAndType	#13:#132;//  "<init>":(Ljava/lang/Object;)V
const #134 = Method	#126.#133;	//  scala/Some."<init>":(Ljava/lang/Object;)V
const #135 = Asciz	scala/MatchError;
const #136 = class	#135;	//  scala/MatchError
const #137 = Asciz	toString;
const #138 = Asciz	()Ljava/lang/String;;
const #139 = NameAndType	#137:#138;//  toString:()Ljava/lang/String;
const #140 = Method	#111.#139;	//  scala/Option.toString:()Ljava/lang/String;
const #141 = Asciz	(Ljava/lang/String;)V;
const #142 = NameAndType	#13:#141;//  "<init>":(Ljava/lang/String;)V
const #143 = Method	#136.#142;	//  scala/MatchError."<init>":(Ljava/lang/String;)V
const #144 = Asciz	x;
const #145 = NameAndType	#144:#83;//  x:Ljava/lang/Object;
const #146 = Field	#126.#145;	//  scala/Some.x:Ljava/lang/Object;
const #147 = Asciz	and;
const #148 = Asciz	(Lscala/Function0;)Lscala/util/control/Exception$Finally;;
const #149 = NameAndType	#147:#148;//  and:(Lscala/Function0;)Lscala/util/control/Exception$Finally;
const #150 = Method	#128.#149;	//  scala/util/control/Exception$Finally.and:(Lscala/Function0;)Lscala/util/control/Exception$Finally;
const #151 = Asciz	body;
const #152 = Asciz	temp8;
const #153 = Asciz	Lscala/Some;;
const #154 = Asciz	temp9;
const #155 = Asciz	Lscala/util/control/Exception$Finally;;
const #156 = Asciz	temp6;
const #157 = Asciz	(Lscala/Function0<Ljava/lang/Object;>;)Lscala/util/control/Exception$Catch<TT;>;;
const #158 = Asciz	scala/Function0;
const #159 = class	#158;	//  scala/Function0
const #160 = Asciz	()Ljava/lang/Object;;
const #161 = NameAndType	#94:#160;//  apply:()Ljava/lang/Object;
const #162 = InterfaceMethod	#159.#161;	//  scala/Function0.apply:()Ljava/lang/Object;
const #163 = Asciz	scala/util/control/Exception$Catch$$anonfun$apply$1;
const #164 = class	#163;	//  scala/util/control/Exception$Catch$$anonfun$apply$1
const #165 = Method	#164.#58;	//  scala/util/control/Exception$Catch$$anonfun$apply$1."<init>":(Lscala/util/control/Exception$Catch;)V
const #166 = Asciz	map;
const #167 = Asciz	(Lscala/Function1;)Lscala/Option;;
const #168 = NameAndType	#166:#167;//  map:(Lscala/Function1;)Lscala/Option;
const #169 = Method	#111.#168;	//  scala/Option.map:(Lscala/Function1;)Lscala/Option;
const #170 = NameAndType	#42:#43;//  gd3$1:(Ljava/lang/Throwable;)Z
const #171 = Method	#18.#170;	//  scala/util/control/Exception$Catch.gd3$1:(Ljava/lang/Throwable;)Z
const #172 = Asciz	scala/Function1;
const #173 = class	#172;	//  scala/Function1
const #174 = Asciz	(Ljava/lang/Object;)Ljava/lang/Object;;
const #175 = NameAndType	#94:#174;//  apply:(Ljava/lang/Object;)Ljava/lang/Object;
const #176 = InterfaceMethod	#173.#175;	//  scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
const #177 = Asciz	java/lang/Throwable;
const #178 = class	#177;	//  java/lang/Throwable
const #179 = Method	#178.#139;	//  java/lang/Throwable.toString:()Ljava/lang/String;
const #180 = Asciz	exceptionResult1;
const #181 = Asciz	<U:Ljava/lang/Object;>(Lscala/Function0<TU;>;)TU;;
const #182 = Asciz	or;
const #183 = Asciz	(Lscala/util/control/Exception$Catch;)Lscala/util/control/Exception$Catch;;
const #184 = Asciz	(Lscala/PartialFunction;)Lscala/util/control/Exception$Catch;;
const #185 = NameAndType	#182:#184;//  or:(Lscala/PartialFunction;)Lscala/util/control/Exception$Catch;
const #186 = Method	#18.#185;	//  scala/util/control/Exception$Catch.or:(Lscala/PartialFunction;)Lscala/util/control/Exception$Catch;
const #187 = Asciz	other;
const #188 = Asciz	<U:Ljava/lang/Object;>(Lscala/util/control/Exception$Catch<TU;>;)Lscala/util/control/Exception$Catch<TU;>;;
const #189 = Asciz	orElse;
const #190 = Asciz	(Lscala/PartialFunction;)Lscala/PartialFunction;;
const #191 = NameAndType	#189:#190;//  orElse:(Lscala/PartialFunction;)Lscala/PartialFunction;
const #192 = InterfaceMethod	#48.#191;	//  scala/PartialFunction.orElse:(Lscala/PartialFunction;)Lscala/PartialFunction;
const #193 = Asciz	<U:Ljava/lang/Object;>(Lscala/PartialFunction<Ljava/lang/Throwable;TU;>;)Lscala/util/control/Exception$Catch<TU;>;;
const #194 = Asciz	(Lscala/PartialFunction;)V;
const #195 = Asciz	(Lscala/PartialFunction<Ljava/lang/Throwable;TT;>;)V;
const #196 = Asciz	()Lscala/Option<Lscala/util/control/Exception$Finally;>;;
const #197 = Asciz	()Lscala/PartialFunction<Ljava/lang/Throwable;TT;>;;
const #198 = Asciz	(Lscala/util/control/Exception$Described;)Ljava/lang/String;;
const #199 = NameAndType	#137:#198;//  toString:(Lscala/util/control/Exception$Described;)Ljava/lang/String;
const #200 = Method	#29.#199;	//  scala/util/control/Exception$Described$class.toString:(Lscala/util/control/Exception$Described;)Ljava/lang/String;
const #201 = Asciz	withDesc;
const #202 = Asciz	(Ljava/lang/String;)Lscala/util/control/Exception$Described;;
const #203 = Asciz	(Lscala/util/control/Exception$Described;Ljava/lang/String;)Lscala/util/control/Exception$Described;;
const #204 = NameAndType	#201:#203;//  withDesc:(Lscala/util/control/Exception$Described;Ljava/lang/String;)Lscala/util/control/Exception$Described;
const #205 = Method	#29.#204;	//  scala/util/control/Exception$Described$class.withDesc:(Lscala/util/control/Exception$Described;Ljava/lang/String;)Lscala/util/control/Exception$Described;
const #206 = Asciz	s;
const #207 = Asciz	desc;
const #208 = NameAndType	#207:#198;//  desc:(Lscala/util/control/Exception$Described;)Ljava/lang/String;
const #209 = Method	#29.#208;	//  scala/util/control/Exception$Described$class.desc:(Lscala/util/control/Exception$Described;)Ljava/lang/String;
const #210 = Asciz	scala$util$control$Exception$Described$$_desc_$eq;
const #211 = NameAndType	#3:#4;//  scala$util$control$Exception$Described$$_desc:Ljava/lang/String;
const #212 = Field	#18.#211;	//  scala/util/control/Exception$Catch.scala$util$control$Exception$Described$$_desc:Ljava/lang/String;
const #213 = Asciz	<T:Ljava/lang/Object;>Ljava/lang/Object;Lscala/util/control/Exception$Described;Lscala/ScalaObject;;
const #214 = Asciz	Scala;
const #215 = Asciz	InnerClasses;
const #216 = Asciz	scala/util/control/Exception;
const #217 = class	#216;	//  scala/util/control/Exception
const #218 = Asciz	Finally;
const #219 = Asciz	scala/util/control/Exception$Described;
const #220 = class	#219;	//  scala/util/control/Exception$Described
const #221 = Asciz	Described;
const #222 = Asciz	$anon$2;
const #223 = Asciz	$anonfun$opt$1;
const #224 = Asciz	$anonfun$apply$1;
const #225 = Asciz	$anonfun$either$1;
const #226 = Asciz	$anonfun$toOption$1;
const #227 = Asciz	$anonfun$toEither$1;
const #228 = Asciz	scala/ScalaObject;
const #229 = class	#228;	//  scala/ScalaObject

{
public scala.util.control.Exception$Catch(scala.PartialFunction, scala.Option);
  Code:
   Stack=2, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	putfield	#20; //Field pf:Lscala/PartialFunction;
   5:	aload_0
   6:	aload_2
   7:	putfield	#22; //Field fin:Lscala/Option;
   10:	aload_0
   11:	invokespecial	#27; //Method java/lang/Object."<init>":()V
   14:	aload_0
   15:	invokestatic	#33; //Method scala/util/control/Exception$Described$class.$init$:(Lscala/util/control/Exception$Described;)V
   18:	aload_0
   19:	ldc	#35; //String Catch
   21:	putfield	#37; //Field name:Ljava/lang/String;
   24:	return
  LineNumberTable: 
   line 66: 0
   line 67: 5
   line 65: 10
   line 71: 18

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      25      0    this       Lscala/util/control/Exception$Catch;
   0      25      1    pf       Lscala/PartialFunction;
   0      25      2    fin       Lscala/Option;

  Signature: length = 0x2
   00 29 

public scala.util.control.Exception$Catch toEither();
  Code:
   Stack=4, Locals=1, Args_size=1
   0:	aload_0
   1:	new	#56; //class scala/util/control/Exception$Catch$$anonfun$toEither$1
   4:	dup
   5:	aload_0
   6:	invokespecial	#59; //Method scala/util/control/Exception$Catch$$anonfun$toEither$1."<init>":(Lscala/util/control/Exception$Catch;)V
   9:	invokevirtual	#63; //Method withApply:(Lscala/Function1;)Lscala/util/control/Exception$Catch;
   12:	areturn
  LineNumberTable: 
   line 113: 0

  Signature: length = 0x2
   00 40 

public scala.util.control.Exception$Catch toOption();
  Code:
   Stack=4, Locals=1, Args_size=1
   0:	aload_0
   1:	new	#67; //class scala/util/control/Exception$Catch$$anonfun$toOption$1
   4:	dup
   5:	aload_0
   6:	invokespecial	#68; //Method scala/util/control/Exception$Catch$$anonfun$toOption$1."<init>":(Lscala/util/control/Exception$Catch;)V
   9:	invokevirtual	#63; //Method withApply:(Lscala/Function1;)Lscala/util/control/Exception$Catch;
   12:	areturn
  LineNumberTable: 
   line 112: 0

  Signature: length = 0x2
   00 45 

public scala.util.control.Exception$Catch withApply(scala.Function1);
  Code:
   Stack=4, Locals=3, Args_size=2
   0:	new	#71; //class scala/util/control/Exception$Catch$$anon$2
   3:	dup
   4:	aload_0
   5:	aload_1
   6:	invokespecial	#74; //Method scala/util/control/Exception$Catch$$anon$2."<init>":(Lscala/util/control/Exception$Catch;Lscala/Function1;)V
   9:	astore_2
   10:	new	#18; //class scala/util/control/Exception$Catch
   13:	dup
   14:	aload_2
   15:	checkcast	#48; //class scala/PartialFunction
   18:	aload_0
   19:	invokevirtual	#77; //Method fin:()Lscala/Option;
   22:	invokespecial	#79; //Method "<init>":(Lscala/PartialFunction;Lscala/Option;)V
   25:	areturn
  LineNumberTable: 
   line 104: 0
   line 108: 10

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      26      0    this       Lscala/util/control/Exception$Catch;
   0      26      1    f$1       Lscala/Function1;
   10      15      2    pf2       Ljava/lang/Object;

  Signature: length = 0x2
   00 54 

public scala.Either either(scala.Function0);
  Code:
   Stack=5, Locals=2, Args_size=2
   0:	aload_0
   1:	invokevirtual	#88; //Method toEither:()Lscala/util/control/Exception$Catch;
   4:	new	#90; //class scala/util/control/Exception$Catch$$anonfun$either$1
   7:	dup
   8:	aload_0
   9:	aload_1
   10:	invokespecial	#93; //Method scala/util/control/Exception$Catch$$anonfun$either$1."<init>":(Lscala/util/control/Exception$Catch;Lscala/Function0;)V
   13:	invokevirtual	#97; //Method apply:(Lscala/Function0;)Ljava/lang/Object;
   16:	checkcast	#99; //class scala/Either
   19:	areturn
  LineNumberTable: 
   line 99: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      20      0    this       Lscala/util/control/Exception$Catch;
   0      20      1    body$1       Lscala/Function0;

  Signature: length = 0x2
   00 66 

public scala.Option opt(scala.Function0);
  Code:
   Stack=5, Locals=2, Args_size=2
   0:	aload_0
   1:	invokevirtual	#106; //Method toOption:()Lscala/util/control/Exception$Catch;
   4:	new	#108; //class scala/util/control/Exception$Catch$$anonfun$opt$1
   7:	dup
   8:	aload_0
   9:	aload_1
   10:	invokespecial	#109; //Method scala/util/control/Exception$Catch$$anonfun$opt$1."<init>":(Lscala/util/control/Exception$Catch;Lscala/Function0;)V
   13:	invokevirtual	#97; //Method apply:(Lscala/Function0;)Ljava/lang/Object;
   16:	checkcast	#111; //class scala/Option
   19:	areturn
  LineNumberTable: 
   line 93: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      20      0    this       Lscala/util/control/Exception$Catch;
   0      20      1    body$2       Lscala/Function0;

  Signature: length = 0x2
   00 71 

public scala.util.control.Exception$Catch andFinally(scala.Function0);
  Code:
   Stack=8, Locals=5, Args_size=2
   0:	aload_0
   1:	invokevirtual	#77; //Method fin:()Lscala/Option;
   4:	astore	4
   6:	getstatic	#121; //Field scala/None$.MODULE$:Lscala/None$;
   9:	dup
   10:	ifnonnull	22
   13:	pop
   14:	aload	4
   16:	ifnull	30
   19:	goto	76
   22:	aload	4
   24:	invokevirtual	#124; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   27:	ifeq	76
   30:	iconst_1
   31:	ifeq	63
   34:	new	#18; //class scala/util/control/Exception$Catch
   37:	dup
   38:	aload_0
   39:	invokevirtual	#46; //Method pf:()Lscala/PartialFunction;
   42:	new	#126; //class scala/Some
   45:	dup
   46:	new	#128; //class scala/util/control/Exception$Finally
   49:	dup
   50:	aload_1
   51:	invokespecial	#131; //Method scala/util/control/Exception$Finally."<init>":(Lscala/Function0;)V
   54:	invokespecial	#134; //Method scala/Some."<init>":(Ljava/lang/Object;)V
   57:	invokespecial	#79; //Method "<init>":(Lscala/PartialFunction;Lscala/Option;)V
   60:	goto	125
   63:	new	#136; //class scala/MatchError
   66:	dup
   67:	aload	4
   69:	invokevirtual	#140; //Method scala/Option.toString:()Ljava/lang/String;
   72:	invokespecial	#143; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   75:	athrow
   76:	aload	4
   78:	instanceof	#126; //class scala/Some
   81:	ifeq	139
   84:	aload	4
   86:	checkcast	#126; //class scala/Some
   89:	astore_2
   90:	aload_2
   91:	getfield	#146; //Field scala/Some.x:Ljava/lang/Object;
   94:	checkcast	#128; //class scala/util/control/Exception$Finally
   97:	astore_3
   98:	iconst_1
   99:	ifeq	126
   102:	new	#18; //class scala/util/control/Exception$Catch
   105:	dup
   106:	aload_0
   107:	invokevirtual	#46; //Method pf:()Lscala/PartialFunction;
   110:	new	#126; //class scala/Some
   113:	dup
   114:	aload_3
   115:	aload_1
   116:	invokevirtual	#150; //Method scala/util/control/Exception$Finally.and:(Lscala/Function0;)Lscala/util/control/Exception$Finally;
   119:	invokespecial	#134; //Method scala/Some."<init>":(Ljava/lang/Object;)V
   122:	invokespecial	#79; //Method "<init>":(Lscala/PartialFunction;Lscala/Option;)V
   125:	areturn
   126:	new	#136; //class scala/MatchError
   129:	dup
   130:	aload	4
   132:	invokevirtual	#140; //Method scala/Option.toString:()Ljava/lang/String;
   135:	invokespecial	#143; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   138:	athrow
   139:	new	#136; //class scala/MatchError
   142:	dup
   143:	aload	4
   145:	invokevirtual	#140; //Method scala/Option.toString:()Ljava/lang/String;
   148:	invokespecial	#143; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   151:	athrow
  LineNumberTable: 
   line 85: 0
   line 21: 30
   line 86: 34
   line 85: 63
   line 21: 98
   line 87: 102
   line 85: 125

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      152      0    this       Lscala/util/control/Exception$Catch;
   0      152      1    body       Lscala/Function0;
   90      35      2    temp8       Lscala/Some;
   126      13      2    temp8       Lscala/Some;
   98      27      3    temp9       Lscala/util/control/Exception$Finally;
   126      13      3    temp9       Lscala/util/control/Exception$Finally;
   6      146      4    temp6       Lscala/Option;

  Signature: length = 0x2
   00 FFFFFF9D 

public java.lang.Object apply(scala.Function0);
  Code:
   Stack=4, Locals=5, Args_size=2
   0:	aload_1
   1:	invokeinterface	#162,  1; //InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
   6:	astore_2
   7:	aload_0
   8:	invokevirtual	#77; //Method fin:()Lscala/Option;
   11:	new	#164; //class scala/util/control/Exception$Catch$$anonfun$apply$1
   14:	dup
   15:	aload_0
   16:	invokespecial	#165; //Method scala/util/control/Exception$Catch$$anonfun$apply$1."<init>":(Lscala/util/control/Exception$Catch;)V
   19:	invokevirtual	#169; //Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
   22:	pop
   23:	goto	62
   26:	astore_3
   27:	aload_0
   28:	aload_3
   29:	invokespecial	#171; //Method gd3$1:(Ljava/lang/Throwable;)Z
   32:	ifeq	64
   35:	aload_0
   36:	invokevirtual	#46; //Method pf:()Lscala/PartialFunction;
   39:	aload_3
   40:	invokeinterface	#176,  2; //InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
   45:	astore_2
   46:	aload_0
   47:	invokevirtual	#77; //Method fin:()Lscala/Option;
   50:	new	#164; //class scala/util/control/Exception$Catch$$anonfun$apply$1
   53:	dup
   54:	aload_0
   55:	invokespecial	#165; //Method scala/util/control/Exception$Catch$$anonfun$apply$1."<init>":(Lscala/util/control/Exception$Catch;)V
   58:	invokevirtual	#169; //Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
   61:	pop
   62:	aload_2
   63:	areturn
   64:	iconst_1
   65:	ifeq	70
   68:	aload_3
   69:	athrow
   70:	new	#136; //class scala/MatchError
   73:	dup
   74:	aload_3
   75:	invokevirtual	#179; //Method java/lang/Throwable.toString:()Ljava/lang/String;
   78:	invokespecial	#143; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   81:	athrow
   82:	astore	4
   84:	aload_0
   85:	invokevirtual	#77; //Method fin:()Lscala/Option;
   88:	new	#164; //class scala/util/control/Exception$Catch$$anonfun$apply$1
   91:	dup
   92:	aload_0
   93:	invokespecial	#165; //Method scala/util/control/Exception$Catch$$anonfun$apply$1."<init>":(Lscala/util/control/Exception$Catch;)V
   96:	invokevirtual	#169; //Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
   99:	pop
   100:	aload	4
   102:	athrow
  Exception table:
   from   to  target type
     0     7    26   Class java/lang/Throwable

     0     7    82   any
    26    46    82   any
    64    82    82   any
  LineNumberTable: 
   line 79: 0
   line 81: 7
   line 79: 26
   line 80: 35
   line 81: 45
   line 21: 62
   line 79: 68
   line 81: 84

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      103      0    this       Lscala/util/control/Exception$Catch;
   0      103      1    body       Lscala/Function0;
   0      63      2    exceptionResult1       Ljava/lang/Object;
   64      39      2    exceptionResult1       Ljava/lang/Object;

  Signature: length = 0x2
   00 FFFFFFB5 

public scala.util.control.Exception$Catch or(scala.util.control.Exception$Catch);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokevirtual	#46; //Method pf:()Lscala/PartialFunction;
   5:	invokevirtual	#186; //Method or:(Lscala/PartialFunction;)Lscala/util/control/Exception$Catch;
   8:	areturn
  LineNumberTable: 
   line 75: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/util/control/Exception$Catch;
   0      9      1    other       Lscala/util/control/Exception$Catch;

  Signature: length = 0x2
   00 FFFFFFBC 

public scala.util.control.Exception$Catch or(scala.PartialFunction);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#18; //class scala/util/control/Exception$Catch
   3:	dup
   4:	aload_0
   5:	invokevirtual	#46; //Method pf:()Lscala/PartialFunction;
   8:	aload_1
   9:	invokeinterface	#192,  2; //InterfaceMethod scala/PartialFunction.orElse:(Lscala/PartialFunction;)Lscala/PartialFunction;
   14:	aload_0
   15:	invokevirtual	#77; //Method fin:()Lscala/Option;
   18:	invokespecial	#79; //Method "<init>":(Lscala/PartialFunction;Lscala/Option;)V
   21:	areturn
  LineNumberTable: 
   line 74: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      22      0    this       Lscala/util/control/Exception$Catch;
   0      22      1    pf2       Lscala/PartialFunction;

  Signature: length = 0x2
   00 FFFFFFC1 

public java.lang.String name();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#37; //Field name:Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 71: 0


public scala.util.control.Exception$Catch(scala.PartialFunction);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	getstatic	#121; //Field scala/None$.MODULE$:Lscala/None$;
   5:	invokespecial	#79; //Method "<init>":(Lscala/PartialFunction;Lscala/Option;)V
   8:	return
  LineNumberTable: 
   line 70: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/util/control/Exception$Catch;
   0      9      1    pf       Lscala/PartialFunction;

  Signature: length = 0x2
   00 FFFFFFC3 

public scala.Option fin();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#22; //Field fin:Lscala/Option;
   4:	areturn
  LineNumberTable: 
   line 67: 0

  Signature: length = 0x2
   00 FFFFFFC4 

public scala.PartialFunction pf();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#20; //Field pf:Lscala/PartialFunction;
   4:	areturn
  LineNumberTable: 
   line 66: 0

  Signature: length = 0x2
   00 FFFFFFC5 

public java.lang.String toString();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#200; //Method scala/util/control/Exception$Described$class.toString:(Lscala/util/control/Exception$Described;)Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 65: 0


public scala.util.control.Exception$Described withDesc(java.lang.String);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#205; //Method scala/util/control/Exception$Described$class.withDesc:(Lscala/util/control/Exception$Described;Ljava/lang/String;)Lscala/util/control/Exception$Described;
   5:	areturn
  LineNumberTable: 
   line 65: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/util/control/Exception$Catch;
   0      6      1    s       Ljava/lang/String;


public java.lang.String desc();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#209; //Method scala/util/control/Exception$Described$class.desc:(Lscala/util/control/Exception$Described;)Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 65: 0


public final void scala$util$control$Exception$Described$$_desc_$eq(java.lang.String);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	putfield	#212; //Field scala$util$control$Exception$Described$$_desc:Ljava/lang/String;
   5:	return
  LineNumberTable: 
   line 65: 0


public final java.lang.String scala$util$control$Exception$Described$$_desc();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#212; //Field scala$util$control$Exception$Described$$_desc:Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 65: 0


}

