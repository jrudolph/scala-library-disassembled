Compiled from "Exception.scala"
public final class scala.util.control.Exception$ extends java.lang.Object implements scala.ScalaObject
  SourceFile: "Exception.scala"
  Scala: length = 0x
   
  InnerClass: 
   public #207= #137 of #206; //By=class scala/util/control/Exception$By of class scala/util/control/Exception
   public #210= #209 of #206; //Try=class scala/util/control/Exception$Try of class scala/util/control/Exception
   public #211= #33 of #206; //Catch=class scala/util/control/Exception$Catch of class scala/util/control/Exception
   public #214= #213 of #206; //Finally=class scala/util/control/Exception$Finally of class scala/util/control/Exception
   public final #215= #114 of #206; //$anon$5=class scala/util/control/Exception$$anon$5 of class scala/util/control/Exception
   public final #216= #28 of #206; //$anon$3=class scala/util/control/Exception$$anon$3 of class scala/util/control/Exception
   public final #217= #85 of #206; //$anon$4=class scala/util/control/Exception$$anon$4 of class scala/util/control/Exception
   public final #218= #200 of #206; //$anon$1=class scala/util/control/Exception$$anon$1 of class scala/util/control/Exception
   public abstract #219= #43 of #206; //Described=class scala/util/control/Exception$Described of class scala/util/control/Exception
   public final #220= #148 of #206; //$anonfun$failing$1=class scala/util/control/Exception$$anonfun$failing$1 of class scala/util/control/Exception
   public final #221= #174 of #206; //$anonfun$catching$1=class scala/util/control/Exception$$anonfun$catching$1 of class scala/util/control/Exception
   public final #222= #154 of #206; //$anonfun$ignoring$1=class scala/util/control/Exception$$anonfun$ignoring$1 of class scala/util/control/Exception
   public final #223= #139 of #206; //$anonfun$handling$1=class scala/util/control/Exception$$anonfun$handling$1 of class scala/util/control/Exception
   public final #224= #107 of #206; //$anonfun$unwrapping$1=class scala/util/control/Exception$$anonfun$unwrapping$1 of class scala/util/control/Exception
   public final #225= #93 of #206; //$anonfun$scala$util$control$Exception$$wouldMatch$1=class scala/util/control/Exception$$anonfun$scala$util$control$Exception$$wouldMatch$1 of class scala/util/control/Exception
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Exception.scala;
const #3 = Asciz	Scala;
const #4 = Asciz	MODULE$;
const #5 = Asciz	Lscala/util/control/Exception$;;
const #6 = Asciz	<clinit>;
const #7 = Asciz	()V;
const #8 = Asciz	Code;
const #9 = Asciz	scala/util/control/Exception$;
const #10 = class	#9;	//  scala/util/control/Exception$
const #11 = Asciz	<init>;
const #12 = NameAndType	#11:#7;//  "<init>":()V
const #13 = Method	#10.#12;	//  scala/util/control/Exception$."<init>":()V
const #14 = Asciz	noCatch;
const #15 = Asciz	Lscala/util/control/Exception$Catch;;
const #16 = Asciz	Lscala/util/control/Exception$Catch<Lscala/runtime/Nothing$;>;;
const #17 = Asciz	Signature;
const #18 = Asciz	nothingCatcher;
const #19 = Asciz	Lscala/PartialFunction;;
const #20 = Asciz	Lscala/PartialFunction<Ljava/lang/Throwable;Lscala/runtime/Nothing$;>;;
const #21 = Asciz	LineNumberTable;
const #22 = Asciz	java/lang/Object;
const #23 = class	#22;	//  java/lang/Object
const #24 = Method	#23.#12;	//  java/lang/Object."<init>":()V
const #25 = NameAndType	#4:#5;//  MODULE$:Lscala/util/control/Exception$;
const #26 = Field	#10.#25;	//  scala/util/control/Exception$.MODULE$:Lscala/util/control/Exception$;
const #27 = Asciz	scala/util/control/Exception$$anon$3;
const #28 = class	#27;	//  scala/util/control/Exception$$anon$3
const #29 = Method	#28.#12;	//  scala/util/control/Exception$$anon$3."<init>":()V
const #30 = NameAndType	#18:#19;//  nothingCatcher:Lscala/PartialFunction;
const #31 = Field	#10.#30;	//  scala/util/control/Exception$.nothingCatcher:Lscala/PartialFunction;
const #32 = Asciz	scala/util/control/Exception$Catch;
const #33 = class	#32;	//  scala/util/control/Exception$Catch
const #34 = Asciz	()Lscala/PartialFunction;;
const #35 = NameAndType	#18:#34;//  nothingCatcher:()Lscala/PartialFunction;
const #36 = Method	#10.#35;	//  scala/util/control/Exception$.nothingCatcher:()Lscala/PartialFunction;
const #37 = Asciz	(Lscala/PartialFunction;)V;
const #38 = NameAndType	#11:#37;//  "<init>":(Lscala/PartialFunction;)V
const #39 = Method	#33.#38;	//  scala/util/control/Exception$Catch."<init>":(Lscala/PartialFunction;)V
const #40 = Asciz	<nothing>;
const #41 = String	#40;	//  <nothing>
const #42 = Asciz	scala/util/control/Exception$Described;
const #43 = class	#42;	//  scala/util/control/Exception$Described
const #44 = Asciz	withDesc;
const #45 = Asciz	(Ljava/lang/String;)Lscala/util/control/Exception$Described;;
const #46 = NameAndType	#44:#45;//  withDesc:(Ljava/lang/String;)Lscala/util/control/Exception$Described;
const #47 = InterfaceMethod	#43.#46;	//  scala/util/control/Exception$Described.withDesc:(Ljava/lang/String;)Lscala/util/control/Exception$Described;
const #48 = NameAndType	#14:#15;//  noCatch:Lscala/util/control/Exception$Catch;
const #49 = Field	#10.#48;	//  scala/util/control/Exception$.noCatch:Lscala/util/control/Exception$Catch;
const #50 = Asciz	unwrap$1;
const #51 = Asciz	(Ljava/lang/Throwable;Lscala/collection/Sequence;)Ljava/lang/Throwable;;
const #52 = Asciz	scala$util$control$Exception$$wouldMatch;
const #53 = Asciz	(Ljava/lang/Throwable;Lscala/collection/Sequence;)Z;
const #54 = NameAndType	#52:#53;//  scala$util$control$Exception$$wouldMatch:(Ljava/lang/Throwable;Lscala/collection/Sequence;)Z
const #55 = Method	#10.#54;	//  scala/util/control/Exception$.scala$util$control$Exception$$wouldMatch:(Ljava/lang/Throwable;Lscala/collection/Sequence;)Z
const #56 = Asciz	java/lang/Throwable;
const #57 = class	#56;	//  java/lang/Throwable
const #58 = Asciz	getCause;
const #59 = Asciz	()Ljava/lang/Throwable;;
const #60 = NameAndType	#58:#59;//  getCause:()Ljava/lang/Throwable;
const #61 = Method	#57.#60;	//  java/lang/Throwable.getCause:()Ljava/lang/Throwable;
const #62 = Asciz	equals;
const #63 = Asciz	(Ljava/lang/Object;)Z;
const #64 = NameAndType	#62:#63;//  equals:(Ljava/lang/Object;)Z
const #65 = Method	#23.#64;	//  java/lang/Object.equals:(Ljava/lang/Object;)Z
const #66 = Asciz	this;
const #67 = Asciz	x;
const #68 = Asciz	Ljava/lang/Throwable;;
const #69 = Asciz	LocalVariableTable;
const #70 = Asciz	fun$1;
const #71 = Asciz	(Lscala/Function1;Lscala/collection/Sequence;)Lscala/util/control/Exception$Catch;;
const #72 = Asciz	catching;
const #73 = Asciz	(Lscala/collection/Sequence;)Lscala/util/control/Exception$Catch;;
const #74 = NameAndType	#72:#73;//  catching:(Lscala/collection/Sequence;)Lscala/util/control/Exception$Catch;
const #75 = Method	#10.#74;	//  scala/util/control/Exception$.catching:(Lscala/collection/Sequence;)Lscala/util/control/Exception$Catch;
const #76 = Asciz	withApply;
const #77 = Asciz	(Lscala/Function1;)Lscala/util/control/Exception$Catch;;
const #78 = NameAndType	#76:#77;//  withApply:(Lscala/Function1;)Lscala/util/control/Exception$Catch;
const #79 = Method	#33.#78;	//  scala/util/control/Exception$Catch.withApply:(Lscala/Function1;)Lscala/util/control/Exception$Catch;
const #80 = Asciz	f;
const #81 = Asciz	Lscala/Function1;;
const #82 = Asciz	pfFromExceptions;
const #83 = Asciz	(Lscala/collection/Sequence;)Ljava/lang/Object;;
const #84 = Asciz	scala/util/control/Exception$$anon$4;
const #85 = class	#84;	//  scala/util/control/Exception$$anon$4
const #86 = Asciz	(Lscala/collection/Sequence;)V;
const #87 = NameAndType	#11:#86;//  "<init>":(Lscala/collection/Sequence;)V
const #88 = Method	#85.#87;	//  scala/util/control/Exception$$anon$4."<init>":(Lscala/collection/Sequence;)V
const #89 = Asciz	exceptions$1;
const #90 = Asciz	Lscala/collection/Sequence;;
const #91 = Asciz	(Lscala/collection/Sequence<Ljava/lang/Class<*>;>;)Ljava/lang/Object;;
const #92 = Asciz	scala/util/control/Exception$$anonfun$scala$util$control$Exception$$wouldMatch$1;
const #93 = class	#92;	//  scala/util/control/Exception$$anonfun$scala$util$control$Exception$$wouldMatch$1
const #94 = Asciz	(Ljava/lang/Throwable;)V;
const #95 = NameAndType	#11:#94;//  "<init>":(Ljava/lang/Throwable;)V
const #96 = Method	#93.#95;	//  scala/util/control/Exception$$anonfun$scala$util$control$Exception$$wouldMatch$1."<init>":(Ljava/lang/Throwable;)V
const #97 = Asciz	scala/collection/generic/TraversableTemplate;
const #98 = class	#97;	//  scala/collection/generic/TraversableTemplate
const #99 = Asciz	exists;
const #100 = Asciz	(Lscala/Function1;)Z;
const #101 = NameAndType	#99:#100;//  exists:(Lscala/Function1;)Z
const #102 = InterfaceMethod	#98.#101;	//  scala/collection/generic/TraversableTemplate.exists:(Lscala/Function1;)Z
const #103 = Asciz	x$8;
const #104 = Asciz	classes;
const #105 = Asciz	unwrapping;
const #106 = Asciz	scala/util/control/Exception$$anonfun$unwrapping$1;
const #107 = class	#106;	//  scala/util/control/Exception$$anonfun$unwrapping$1
const #108 = Method	#107.#87;	//  scala/util/control/Exception$$anonfun$unwrapping$1."<init>":(Lscala/collection/Sequence;)V
const #109 = Asciz	exceptions$3;
const #110 = Asciz	<T:Ljava/lang/Object;>(Lscala/collection/Sequence<Ljava/lang/Class<*>;>;)Lscala/util/control/Exception$Catch<TT;>;;
const #111 = Asciz	saving;
const #112 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)Lscala/util/control/Exception$Catch;;
const #113 = Asciz	scala/util/control/Exception$$anon$5;
const #114 = class	#113;	//  scala/util/control/Exception$$anon$5
const #115 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)V;
const #116 = NameAndType	#11:#115;//  "<init>":(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)V
const #117 = Method	#114.#116;	//  scala/util/control/Exception$$anon$5."<init>":(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)V
const #118 = Asciz	oldVal$1;
const #119 = Asciz	Ljava/lang/Object;;
const #120 = Asciz	newVal$1;
const #121 = Asciz	setter$1;
const #122 = Asciz	<A:Ljava/lang/Object;>(TA;TA;Lscala/Function1<TA;Ljava/lang/Object;>;)Lscala/util/control/Exception$Catch<Lscala/runtime/Nothing$;>;;
const #123 = Asciz	ultimately;
const #124 = Asciz	(Lscala/Function0;)Lscala/util/control/Exception$Catch;;
const #125 = Asciz	()Lscala/util/control/Exception$Catch;;
const #126 = NameAndType	#14:#125;//  noCatch:()Lscala/util/control/Exception$Catch;
const #127 = Method	#10.#126;	//  scala/util/control/Exception$.noCatch:()Lscala/util/control/Exception$Catch;
const #128 = Asciz	andFinally;
const #129 = NameAndType	#128:#124;//  andFinally:(Lscala/Function0;)Lscala/util/control/Exception$Catch;
const #130 = Method	#33.#129;	//  scala/util/control/Exception$Catch.andFinally:(Lscala/Function0;)Lscala/util/control/Exception$Catch;
const #131 = Asciz	body;
const #132 = Asciz	Lscala/Function0;;
const #133 = Asciz	<T:Ljava/lang/Object;>(Lscala/Function0<Ljava/lang/Object;>;)Lscala/util/control/Exception$Catch<TT;>;;
const #134 = Asciz	handling;
const #135 = Asciz	(Lscala/collection/Sequence;)Lscala/util/control/Exception$By;;
const #136 = Asciz	scala/util/control/Exception$By;
const #137 = class	#136;	//  scala/util/control/Exception$By
const #138 = Asciz	scala/util/control/Exception$$anonfun$handling$1;
const #139 = class	#138;	//  scala/util/control/Exception$$anonfun$handling$1
const #140 = Method	#139.#87;	//  scala/util/control/Exception$$anonfun$handling$1."<init>":(Lscala/collection/Sequence;)V
const #141 = Asciz	(Lscala/Function1;)V;
const #142 = NameAndType	#11:#141;//  "<init>":(Lscala/Function1;)V
const #143 = Method	#137.#142;	//  scala/util/control/Exception$By."<init>":(Lscala/Function1;)V
const #144 = Asciz	exceptions$2;
const #145 = Asciz	<T:Ljava/lang/Object;>(Lscala/collection/Sequence<Ljava/lang/Class<*>;>;)Lscala/util/control/Exception$By<Lscala/Function1<Ljava/lang/Throwable;TT;>;Lscala/util/control/Exception$Catch<TT;>;>;;
const #146 = Asciz	failing;
const #147 = Asciz	scala/util/control/Exception$$anonfun$failing$1;
const #148 = class	#147;	//  scala/util/control/Exception$$anonfun$failing$1
const #149 = Method	#148.#12;	//  scala/util/control/Exception$$anonfun$failing$1."<init>":()V
const #150 = Asciz	exceptions;
const #151 = Asciz	<T:Ljava/lang/Object;>(Lscala/collection/Sequence<Ljava/lang/Class<*>;>;)Lscala/util/control/Exception$Catch<Lscala/Option<TT;>;>;;
const #152 = Asciz	ignoring;
const #153 = Asciz	scala/util/control/Exception$$anonfun$ignoring$1;
const #154 = class	#153;	//  scala/util/control/Exception$$anonfun$ignoring$1
const #155 = Method	#154.#12;	//  scala/util/control/Exception$$anonfun$ignoring$1."<init>":()V
const #156 = Asciz	(Lscala/collection/Sequence<Ljava/lang/Class<*>;>;)Lscala/util/control/Exception$Catch<Ljava/lang/Object;>;;
const #157 = Asciz	(Lscala/PartialFunction;)Lscala/util/control/Exception$Catch;;
const #158 = Asciz	c;
const #159 = Asciz	<T:Ljava/lang/Object;>(Lscala/PartialFunction<Ljava/lang/Throwable;TT;>;)Lscala/util/control/Exception$Catch<TT;>;;
const #160 = NameAndType	#82:#83;//  pfFromExceptions:(Lscala/collection/Sequence;)Ljava/lang/Object;
const #161 = Method	#10.#160;	//  scala/util/control/Exception$.pfFromExceptions:(Lscala/collection/Sequence;)Ljava/lang/Object;
const #162 = Asciz	scala/PartialFunction;
const #163 = class	#162;	//  scala/PartialFunction
const #164 = Asciz	scala/runtime/ScalaRunTime$;
const #165 = class	#164;	//  scala/runtime/ScalaRunTime$
const #166 = Asciz	Lscala/runtime/ScalaRunTime$;;
const #167 = NameAndType	#4:#166;//  MODULE$:Lscala/runtime/ScalaRunTime$;
const #168 = Field	#165.#167;	//  scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
const #169 = Asciz	boxArray;
const #170 = Asciz	(Ljava/lang/Object;)Lscala/runtime/BoxedArray;;
const #171 = NameAndType	#169:#170;//  boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
const #172 = Method	#165.#171;	//  scala/runtime/ScalaRunTime$.boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
const #173 = Asciz	scala/util/control/Exception$$anonfun$catching$1;
const #174 = class	#173;	//  scala/util/control/Exception$$anonfun$catching$1
const #175 = Method	#174.#12;	//  scala/util/control/Exception$$anonfun$catching$1."<init>":()V
const #176 = Asciz	scala/collection/Sequence$;
const #177 = class	#176;	//  scala/collection/Sequence$
const #178 = Asciz	Lscala/collection/Sequence$;;
const #179 = NameAndType	#4:#178;//  MODULE$:Lscala/collection/Sequence$;
const #180 = Field	#177.#179;	//  scala/collection/Sequence$.MODULE$:Lscala/collection/Sequence$;
const #181 = Asciz	builderFactory;
const #182 = Asciz	()Lscala/collection/generic/BuilderFactory;;
const #183 = NameAndType	#181:#182;//  builderFactory:()Lscala/collection/generic/BuilderFactory;
const #184 = Method	#177.#183;	//  scala/collection/Sequence$.builderFactory:()Lscala/collection/generic/BuilderFactory;
const #185 = Asciz	map;
const #186 = Asciz	(Lscala/Function1;Lscala/collection/generic/BuilderFactory;)Ljava/lang/Object;;
const #187 = NameAndType	#185:#186;//  map:(Lscala/Function1;Lscala/collection/generic/BuilderFactory;)Ljava/lang/Object;
const #188 = InterfaceMethod	#98.#187;	//  scala/collection/generic/TraversableTemplate.map:(Lscala/Function1;Lscala/collection/generic/BuilderFactory;)Ljava/lang/Object;
const #189 = Asciz	, ;
const #190 = String	#189;	//  , 
const #191 = Asciz	mkString;
const #192 = Asciz	(Ljava/lang/String;)Ljava/lang/String;;
const #193 = NameAndType	#191:#192;//  mkString:(Ljava/lang/String;)Ljava/lang/String;
const #194 = InterfaceMethod	#98.#193;	//  scala/collection/generic/TraversableTemplate.mkString:(Ljava/lang/String;)Ljava/lang/String;
const #195 = Asciz	()Lscala/util/control/Exception$Catch<Lscala/runtime/Nothing$;>;;
const #196 = Asciz	()Lscala/PartialFunction<Ljava/lang/Throwable;Lscala/runtime/Nothing$;>;;
const #197 = Asciz	fromExceptionCatcher;
const #198 = Asciz	(Lscala/PartialFunction;)Lscala/PartialFunction;;
const #199 = Asciz	scala/util/control/Exception$$anon$1;
const #200 = class	#199;	//  scala/util/control/Exception$$anon$1
const #201 = Method	#200.#38;	//  scala/util/control/Exception$$anon$1."<init>":(Lscala/PartialFunction;)V
const #202 = Asciz	pf$1;
const #203 = Asciz	<T:Ljava/lang/Object;>(Lscala/PartialFunction<Ljava/lang/Exception;TT;>;)Lscala/PartialFunction<Ljava/lang/Throwable;TT;>;;
const #204 = Asciz	InnerClasses;
const #205 = Asciz	scala/util/control/Exception;
const #206 = class	#205;	//  scala/util/control/Exception
const #207 = Asciz	By;
const #208 = Asciz	scala/util/control/Exception$Try;
const #209 = class	#208;	//  scala/util/control/Exception$Try
const #210 = Asciz	Try;
const #211 = Asciz	Catch;
const #212 = Asciz	scala/util/control/Exception$Finally;
const #213 = class	#212;	//  scala/util/control/Exception$Finally
const #214 = Asciz	Finally;
const #215 = Asciz	$anon$5;
const #216 = Asciz	$anon$3;
const #217 = Asciz	$anon$4;
const #218 = Asciz	$anon$1;
const #219 = Asciz	Described;
const #220 = Asciz	$anonfun$failing$1;
const #221 = Asciz	$anonfun$catching$1;
const #222 = Asciz	$anonfun$ignoring$1;
const #223 = Asciz	$anonfun$handling$1;
const #224 = Asciz	$anonfun$unwrapping$1;
const #225 = Asciz	$anonfun$scala$util$control$Exception$$wouldMatch$1;
const #226 = Asciz	scala/ScalaObject;
const #227 = class	#226;	//  scala/ScalaObject

{
public static final scala.util.control.Exception$ MODULE$;

public static {};
  Code:
   Stack=1, Locals=0, Args_size=0
   0:	new	#10; //class scala/util/control/Exception$
   3:	invokespecial	#13; //Method "<init>":()V
   6:	return

public final java.lang.Throwable unwrap$1(java.lang.Throwable, scala.collection.Sequence);
  Code:
   Stack=3, Locals=5, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokevirtual	#55; //Method scala$util$control$Exception$$wouldMatch:(Ljava/lang/Throwable;Lscala/collection/Sequence;)Z
   6:	ifeq	36
   9:	aload_1
   10:	invokevirtual	#61; //Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;
   13:	dup
   14:	astore	4
   16:	ifnull	36
   19:	aload	4
   21:	aconst_null
   22:	invokevirtual	#65; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   25:	ifne	36
   28:	aload_1
   29:	invokevirtual	#61; //Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;
   32:	astore_1
   33:	goto	0
   36:	aload_1
   37:	areturn
  LineNumberTable: 
   line 194: 0
   line 195: 36
   line 193: 37

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      38      0    this       Lscala/util/control/Exception$;
   0      38      1    x       Ljava/lang/Throwable;


public final scala.util.control.Exception$Catch fun$1(scala.Function1, scala.collection.Sequence);
  Code:
   Stack=2, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_2
   2:	invokevirtual	#75; //Method catching:(Lscala/collection/Sequence;)Lscala/util/control/Exception$Catch;
   5:	aload_1
   6:	invokevirtual	#79; //Method scala/util/control/Exception$Catch.withApply:(Lscala/Function1;)Lscala/util/control/Exception$Catch;
   9:	areturn
  LineNumberTable: 
   line 174: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    this       Lscala/util/control/Exception$;
   0      10      1    f       Lscala/Function1;


public final boolean scala$util$control$Exception$$wouldMatch(java.lang.Throwable, scala.collection.Sequence);
  Code:
   Stack=4, Locals=3, Args_size=3
   0:	aload_2
   1:	new	#93; //class scala/util/control/Exception$$anonfun$scala$util$control$Exception$$wouldMatch$1
   4:	dup
   5:	aload_1
   6:	invokespecial	#96; //Method scala/util/control/Exception$$anonfun$scala$util$control$Exception$$wouldMatch$1."<init>":(Ljava/lang/Throwable;)V
   9:	invokeinterface	#102,  2; //InterfaceMethod scala/collection/generic/TraversableTemplate.exists:(Lscala/Function1;)Z
   14:	ireturn
  LineNumberTable: 
   line 202: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      15      0    this       Lscala/util/control/Exception$;
   0      15      1    x$8       Ljava/lang/Throwable;
   0      15      2    classes       Lscala/collection/Sequence;


public scala.util.control.Exception$Catch unwrapping(scala.collection.Sequence);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokevirtual	#75; //Method catching:(Lscala/collection/Sequence;)Lscala/util/control/Exception$Catch;
   5:	new	#107; //class scala/util/control/Exception$$anonfun$unwrapping$1
   8:	dup
   9:	aload_1
   10:	invokespecial	#108; //Method scala/util/control/Exception$$anonfun$unwrapping$1."<init>":(Lscala/collection/Sequence;)V
   13:	invokevirtual	#79; //Method scala/util/control/Exception$Catch.withApply:(Lscala/Function1;)Lscala/util/control/Exception$Catch;
   16:	areturn
  LineNumberTable: 
   line 197: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      17      0    this       Lscala/util/control/Exception$;
   0      17      1    exceptions$3       Lscala/collection/Sequence;

  Signature: length = 0x2
   00 6E 

public scala.util.control.Exception$Catch saving(java.lang.Object, java.lang.Object, scala.Function1);
  Code:
   Stack=5, Locals=4, Args_size=4
   0:	new	#114; //class scala/util/control/Exception$$anon$5
   3:	dup
   4:	aload_1
   5:	aload_2
   6:	aload_3
   7:	invokespecial	#117; //Method scala/util/control/Exception$$anon$5."<init>":(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)V
   10:	areturn
  LineNumberTable: 
   line 183: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      11      0    this       Lscala/util/control/Exception$;
   0      11      1    oldVal$1       Ljava/lang/Object;
   0      11      2    newVal$1       Ljava/lang/Object;
   0      11      3    setter$1       Lscala/Function1;

  Signature: length = 0x2
   00 7A 

public scala.util.control.Exception$Catch ultimately(scala.Function0);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	invokevirtual	#127; //Method noCatch:()Lscala/util/control/Exception$Catch;
   4:	aload_1
   5:	invokevirtual	#130; //Method scala/util/control/Exception$Catch.andFinally:(Lscala/Function0;)Lscala/util/control/Exception$Catch;
   8:	areturn
  LineNumberTable: 
   line 179: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/util/control/Exception$;
   0      9      1    body       Lscala/Function0;

  Signature: length = 0x2
   00 FFFFFF85 

public scala.util.control.Exception$By handling(scala.collection.Sequence);
  Code:
   Stack=5, Locals=2, Args_size=2
   0:	new	#137; //class scala/util/control/Exception$By
   3:	dup
   4:	new	#139; //class scala/util/control/Exception$$anonfun$handling$1
   7:	dup
   8:	aload_1
   9:	invokespecial	#140; //Method scala/util/control/Exception$$anonfun$handling$1."<init>":(Lscala/collection/Sequence;)V
   12:	invokespecial	#143; //Method scala/util/control/Exception$By."<init>":(Lscala/Function1;)V
   15:	areturn
  LineNumberTable: 
   line 175: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      16      0    this       Lscala/util/control/Exception$;
   0      16      1    exceptions$2       Lscala/collection/Sequence;

  Signature: length = 0x2
   00 FFFFFF91 

public scala.util.control.Exception$Catch failing(scala.collection.Sequence);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokevirtual	#75; //Method catching:(Lscala/collection/Sequence;)Lscala/util/control/Exception$Catch;
   5:	new	#148; //class scala/util/control/Exception$$anonfun$failing$1
   8:	dup
   9:	invokespecial	#149; //Method scala/util/control/Exception$$anonfun$failing$1."<init>":()V
   12:	invokevirtual	#79; //Method scala/util/control/Exception$Catch.withApply:(Lscala/Function1;)Lscala/util/control/Exception$Catch;
   15:	areturn
  LineNumberTable: 
   line 164: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      16      0    this       Lscala/util/control/Exception$;
   0      16      1    exceptions       Lscala/collection/Sequence;

  Signature: length = 0x2
   00 FFFFFF97 

public scala.util.control.Exception$Catch ignoring(scala.collection.Sequence);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokevirtual	#75; //Method catching:(Lscala/collection/Sequence;)Lscala/util/control/Exception$Catch;
   5:	new	#154; //class scala/util/control/Exception$$anonfun$ignoring$1
   8:	dup
   9:	invokespecial	#155; //Method scala/util/control/Exception$$anonfun$ignoring$1."<init>":()V
   12:	invokevirtual	#79; //Method scala/util/control/Exception$Catch.withApply:(Lscala/Function1;)Lscala/util/control/Exception$Catch;
   15:	areturn
  LineNumberTable: 
   line 160: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      16      0    this       Lscala/util/control/Exception$;
   0      16      1    exceptions       Lscala/collection/Sequence;

  Signature: length = 0x2
   00 FFFFFF9C 

public scala.util.control.Exception$Catch catching(scala.PartialFunction);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	new	#33; //class scala/util/control/Exception$Catch
   3:	dup
   4:	aload_1
   5:	invokespecial	#39; //Method scala/util/control/Exception$Catch."<init>":(Lscala/PartialFunction;)V
   8:	areturn
  LineNumberTable: 
   line 156: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/util/control/Exception$;
   0      9      1    c       Lscala/PartialFunction;

  Signature: length = 0x2
   00 FFFFFF9F 

public scala.util.control.Exception$Catch catching(scala.collection.Sequence);
  Code:
   Stack=4, Locals=4, Args_size=2
   0:	new	#33; //class scala/util/control/Exception$Catch
   3:	dup
   4:	aload_0
   5:	aload_1
   6:	invokespecial	#161; //Method pfFromExceptions:(Lscala/collection/Sequence;)Ljava/lang/Object;
   9:	astore_2
   10:	aload_2
   11:	instanceof	#163; //class scala/PartialFunction
   14:	ifeq	21
   17:	aload_2
   18:	goto	28
   21:	getstatic	#168; //Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   24:	aload_2
   25:	invokevirtual	#172; //Method scala/runtime/ScalaRunTime$.boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
   28:	checkcast	#163; //class scala/PartialFunction
   31:	invokespecial	#39; //Method scala/util/control/Exception$Catch."<init>":(Lscala/PartialFunction;)V
   34:	aload_1
   35:	new	#174; //class scala/util/control/Exception$$anonfun$catching$1
   38:	dup
   39:	invokespecial	#175; //Method scala/util/control/Exception$$anonfun$catching$1."<init>":()V
   42:	getstatic	#180; //Field scala/collection/Sequence$.MODULE$:Lscala/collection/Sequence$;
   45:	invokevirtual	#184; //Method scala/collection/Sequence$.builderFactory:()Lscala/collection/generic/BuilderFactory;
   48:	invokeinterface	#188,  3; //InterfaceMethod scala/collection/generic/TraversableTemplate.map:(Lscala/Function1;Lscala/collection/generic/BuilderFactory;)Ljava/lang/Object;
   53:	astore_3
   54:	aload_3
   55:	instanceof	#98; //class scala/collection/generic/TraversableTemplate
   58:	ifeq	65
   61:	aload_3
   62:	goto	72
   65:	getstatic	#168; //Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   68:	aload_3
   69:	invokevirtual	#172; //Method scala/runtime/ScalaRunTime$.boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
   72:	checkcast	#98; //class scala/collection/generic/TraversableTemplate
   75:	ldc	#190; //String , 
   77:	invokeinterface	#194,  2; //InterfaceMethod scala/collection/generic/TraversableTemplate.mkString:(Ljava/lang/String;)Ljava/lang/String;
   82:	invokeinterface	#47,  2; //InterfaceMethod scala/util/control/Exception$Described.withDesc:(Ljava/lang/String;)Lscala/util/control/Exception$Described;
   87:	checkcast	#33; //class scala/util/control/Exception$Catch
   90:	areturn
  LineNumberTable: 
   line 155: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      91      0    this       Lscala/util/control/Exception$;
   0      91      1    exceptions       Lscala/collection/Sequence;

  Signature: length = 0x2
   00 6E 

public final scala.util.control.Exception$Catch noCatch();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#49; //Field noCatch:Lscala/util/control/Exception$Catch;
   4:	areturn
  LineNumberTable: 
   line 147: 0

  Signature: length = 0x2
   00 FFFFFFC3 

public final scala.PartialFunction nothingCatcher();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#31; //Field nothingCatcher:Lscala/PartialFunction;
   4:	areturn
  LineNumberTable: 
   line 140: 0

  Signature: length = 0x2
   00 FFFFFFC4 

public scala.PartialFunction fromExceptionCatcher(scala.PartialFunction);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	new	#200; //class scala/util/control/Exception$$anon$1
   3:	dup
   4:	aload_1
   5:	invokespecial	#201; //Method scala/util/control/Exception$$anon$1."<init>":(Lscala/PartialFunction;)V
   8:	areturn
  LineNumberTable: 
   line 31: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/util/control/Exception$;
   0      9      1    pf$1       Lscala/PartialFunction;

  Signature: length = 0x2
   00 FFFFFFCB 

}

