Compiled from "Exception.scala"
public final class scala.util.control.Exception$$anon$4 extends java.lang.Object implements scala.PartialFunction
  SourceFile: "Exception.scala"
  Signature: length = 0x2
   00 57 
  Scala: length = 0x
   
  InnerClass: 
   public final #93= #10 of #92; //$anon$4=class scala/util/control/Exception$$anon$4 of class scala/util/control/Exception
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Exception.scala;
const #3 = Asciz	exceptions$1;
const #4 = Asciz	Lscala/collection/Sequence;;
const #5 = Asciz	<init>;
const #6 = Asciz	(Lscala/collection/Sequence;)V;
const #7 = Asciz	Code;
const #8 = Asciz	LineNumberTable;
const #9 = Asciz	scala/util/control/Exception$$anon$4;
const #10 = class	#9;	//  scala/util/control/Exception$$anon$4
const #11 = NameAndType	#3:#4;//  exceptions$1:Lscala/collection/Sequence;
const #12 = Field	#10.#11;	//  scala/util/control/Exception$$anon$4.exceptions$1:Lscala/collection/Sequence;
const #13 = Asciz	java/lang/Object;
const #14 = class	#13;	//  java/lang/Object
const #15 = Asciz	()V;
const #16 = NameAndType	#5:#15;//  "<init>":()V
const #17 = Method	#14.#16;	//  java/lang/Object."<init>":()V
const #18 = Asciz	scala/Function1$class;
const #19 = class	#18;	//  scala/Function1$class
const #20 = Asciz	$init$;
const #21 = Asciz	(Lscala/Function1;)V;
const #22 = NameAndType	#20:#21;//  $init$:(Lscala/Function1;)V
const #23 = Method	#19.#22;	//  scala/Function1$class.$init$:(Lscala/Function1;)V
const #24 = Asciz	scala/PartialFunction$class;
const #25 = class	#24;	//  scala/PartialFunction$class
const #26 = Asciz	(Lscala/PartialFunction;)V;
const #27 = NameAndType	#20:#26;//  $init$:(Lscala/PartialFunction;)V
const #28 = Method	#25.#27;	//  scala/PartialFunction$class.$init$:(Lscala/PartialFunction;)V
const #29 = Asciz	apply;
const #30 = Asciz	(Ljava/lang/Object;)Ljava/lang/Object;;
const #31 = Asciz	java/lang/Throwable;
const #32 = class	#31;	//  java/lang/Throwable
const #33 = Asciz	(Ljava/lang/Throwable;)Lscala/runtime/Nothing$;;
const #34 = NameAndType	#29:#33;//  apply:(Ljava/lang/Throwable;)Lscala/runtime/Nothing$;
const #35 = Method	#10.#34;	//  scala/util/control/Exception$$anon$4.apply:(Ljava/lang/Throwable;)Lscala/runtime/Nothing$;
const #36 = Asciz	this;
const #37 = Asciz	Lscala/util/control/Exception$$anon$4;;
const #38 = Asciz	v1;
const #39 = Asciz	Ljava/lang/Object;;
const #40 = Asciz	LocalVariableTable;
const #41 = Asciz	isDefinedAt;
const #42 = Asciz	(Ljava/lang/Object;)Z;
const #43 = Asciz	(Ljava/lang/Throwable;)Z;
const #44 = NameAndType	#41:#43;//  isDefinedAt:(Ljava/lang/Throwable;)Z
const #45 = Method	#10.#44;	//  scala/util/control/Exception$$anon$4.isDefinedAt:(Ljava/lang/Throwable;)Z
const #46 = Asciz	x;
const #47 = Asciz	andThen;
const #48 = Asciz	(Lscala/Function1;)Lscala/Function1;;
const #49 = Asciz	scala/PartialFunction;
const #50 = class	#49;	//  scala/PartialFunction
const #51 = Asciz	(Lscala/Function1;)Lscala/PartialFunction;;
const #52 = NameAndType	#47:#51;//  andThen:(Lscala/Function1;)Lscala/PartialFunction;
const #53 = InterfaceMethod	#50.#52;	//  scala/PartialFunction.andThen:(Lscala/Function1;)Lscala/PartialFunction;
const #54 = Asciz	g;
const #55 = Asciz	Lscala/Function1;;
const #56 = Asciz	scala/util/control/Exception$;
const #57 = class	#56;	//  scala/util/control/Exception$
const #58 = Asciz	MODULE$;
const #59 = Asciz	Lscala/util/control/Exception$;;
const #60 = NameAndType	#58:#59;//  MODULE$:Lscala/util/control/Exception$;
const #61 = Field	#57.#60;	//  scala/util/control/Exception$.MODULE$:Lscala/util/control/Exception$;
const #62 = Asciz	scala$util$control$Exception$$wouldMatch;
const #63 = Asciz	(Ljava/lang/Throwable;Lscala/collection/Sequence;)Z;
const #64 = NameAndType	#62:#63;//  scala$util$control$Exception$$wouldMatch:(Ljava/lang/Throwable;Lscala/collection/Sequence;)Z
const #65 = Method	#57.#64;	//  scala/util/control/Exception$.scala$util$control$Exception$$wouldMatch:(Ljava/lang/Throwable;Lscala/collection/Sequence;)Z
const #66 = Asciz	Ljava/lang/Throwable;;
const #67 = Asciz	compose;
const #68 = Asciz	(Lscala/Function1;Lscala/Function1;)Lscala/Function1;;
const #69 = NameAndType	#67:#68;//  compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
const #70 = Method	#19.#69;	//  scala/Function1$class.compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
const #71 = Asciz	toString;
const #72 = Asciz	()Ljava/lang/String;;
const #73 = Asciz	(Lscala/Function1;)Ljava/lang/String;;
const #74 = NameAndType	#71:#73;//  toString:(Lscala/Function1;)Ljava/lang/String;
const #75 = Method	#19.#74;	//  scala/Function1$class.toString:(Lscala/Function1;)Ljava/lang/String;
const #76 = Asciz	(Lscala/PartialFunction;Lscala/Function1;)Lscala/PartialFunction;;
const #77 = NameAndType	#47:#76;//  andThen:(Lscala/PartialFunction;Lscala/Function1;)Lscala/PartialFunction;
const #78 = Method	#25.#77;	//  scala/PartialFunction$class.andThen:(Lscala/PartialFunction;Lscala/Function1;)Lscala/PartialFunction;
const #79 = Asciz	k;
const #80 = Asciz	orElse;
const #81 = Asciz	(Lscala/PartialFunction;)Lscala/PartialFunction;;
const #82 = Asciz	(Lscala/PartialFunction;Lscala/PartialFunction;)Lscala/PartialFunction;;
const #83 = NameAndType	#80:#82;//  orElse:(Lscala/PartialFunction;Lscala/PartialFunction;)Lscala/PartialFunction;
const #84 = Method	#25.#83;	//  scala/PartialFunction$class.orElse:(Lscala/PartialFunction;Lscala/PartialFunction;)Lscala/PartialFunction;
const #85 = Asciz	that;
const #86 = Asciz	Lscala/PartialFunction;;
const #87 = Asciz	Ljava/lang/Object;Lscala/PartialFunction<Ljava/lang/Throwable;Lscala/runtime/Nothing$;>;;
const #88 = Asciz	Signature;
const #89 = Asciz	Scala;
const #90 = Asciz	InnerClasses;
const #91 = Asciz	scala/util/control/Exception;
const #92 = class	#91;	//  scala/util/control/Exception
const #93 = Asciz	$anon$4;

{
public scala.util.control.Exception$$anon$4(scala.collection.Sequence);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	putfield	#12; //Field exceptions$1:Lscala/collection/Sequence;
   5:	aload_0
   6:	invokespecial	#17; //Method java/lang/Object."<init>":()V
   9:	aload_0
   10:	invokestatic	#23; //Method scala/Function1$class.$init$:(Lscala/Function1;)V
   13:	aload_0
   14:	invokestatic	#28; //Method scala/PartialFunction$class.$init$:(Lscala/PartialFunction;)V
   17:	return
  LineNumberTable: 
   line 205: 0


public java.lang.Object apply(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	checkcast	#32; //class java/lang/Throwable
   5:	invokevirtual	#35; //Method apply:(Ljava/lang/Throwable;)Lscala/runtime/Nothing$;
   8:	athrow
  LineNumberTable: 
   line 205: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/util/control/Exception$$anon$4;
   0      9      1    v1       Ljava/lang/Object;


public boolean isDefinedAt(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	checkcast	#32; //class java/lang/Throwable
   5:	invokevirtual	#45; //Method isDefinedAt:(Ljava/lang/Throwable;)Z
   8:	ireturn
  LineNumberTable: 
   line 205: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/util/control/Exception$$anon$4;
   0      9      1    x       Ljava/lang/Object;


public scala.Function1 andThen(scala.Function1);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokeinterface	#53,  2; //InterfaceMethod scala/PartialFunction.andThen:(Lscala/Function1;)Lscala/PartialFunction;
   7:	areturn
  LineNumberTable: 
   line 205: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      8      0    this       Lscala/util/control/Exception$$anon$4;
   0      8      1    g       Lscala/Function1;


public boolean isDefinedAt(java.lang.Throwable);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	getstatic	#61; //Field scala/util/control/Exception$.MODULE$:Lscala/util/control/Exception$;
   3:	aload_1
   4:	aload_0
   5:	getfield	#12; //Field exceptions$1:Lscala/collection/Sequence;
   8:	invokevirtual	#65; //Method scala/util/control/Exception$.scala$util$control$Exception$$wouldMatch:(Ljava/lang/Throwable;Lscala/collection/Sequence;)Z
   11:	ireturn
  LineNumberTable: 
   line 207: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      12      0    this       Lscala/util/control/Exception$$anon$4;
   0      12      1    x       Ljava/lang/Throwable;


public scala.runtime.Nothing$ apply(java.lang.Throwable);
  Code:
   Stack=1, Locals=2, Args_size=2
   0:	aload_1
   1:	athrow
  LineNumberTable: 
   line 206: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      2      0    this       Lscala/util/control/Exception$$anon$4;
   0      2      1    x       Ljava/lang/Throwable;


public scala.Function1 compose(scala.Function1);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#70; //Method scala/Function1$class.compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
   5:	areturn
  LineNumberTable: 
   line 205: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/util/control/Exception$$anon$4;
   0      6      1    g       Lscala/Function1;


public java.lang.String toString();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#75; //Method scala/Function1$class.toString:(Lscala/Function1;)Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 205: 0


public scala.PartialFunction andThen(scala.Function1);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#78; //Method scala/PartialFunction$class.andThen:(Lscala/PartialFunction;Lscala/Function1;)Lscala/PartialFunction;
   5:	areturn
  LineNumberTable: 
   line 205: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/util/control/Exception$$anon$4;
   0      6      1    k       Lscala/Function1;


public scala.PartialFunction orElse(scala.PartialFunction);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#84; //Method scala/PartialFunction$class.orElse:(Lscala/PartialFunction;Lscala/PartialFunction;)Lscala/PartialFunction;
   5:	areturn
  LineNumberTable: 
   line 205: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/util/control/Exception$$anon$4;
   0      6      1    that       Lscala/PartialFunction;


}

