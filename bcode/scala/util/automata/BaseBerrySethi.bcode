Compiled from "BaseBerrySethi.scala"
public abstract class scala.util.automata.BaseBerrySethi extends java.lang.Object implements scala.ScalaObject
  SourceFile: "BaseBerrySethi.scala"
  ScalaSig: length = 0x3DB
   05 00 FFFFFF81 15 06 08 01 02 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF81 00 09 02 0E
   42 61 73 65 42 65 72 72 79 53 65 74 68 69 0A 02
   03 04 01 08 61 75 74 6F 6D 61 74 61 0A 02 05 06
   01 04 75 74 69 6C 0A 01 07 01 05 73 63 61 6C 61
   03 00 13 03 00 0A 12 10 02 0B 10 0D 01 0C 0A 02
   0D 0E 01 04 6C 61 6E 67 0A 01 0F 01 04 6A 61 76
   61 09 02 11 0C 02 06 4F 62 6A 65 63 74 10 02 13
   14 0D 01 06 09 02 15 06 02 0B 53 63 61 6C 61 4F
   62 6A 65 63 74 08 05 17 00 FFFFFF84 00 18 01 06 3C 69
   6E 69 74 3E 14 01 19 10 02 1A 00 0D 01 02 08 07
   0D 00 FFFFFFC2 FFFFFF80 FFFFFF86 00 1C 15 01 1D 10 02 1E 21 0D 01
   1F 0A 02 20 04 01 06 72 65 67 65 78 70 09 02 22
   1F 02 04 42 61 73 65 08 07 24 00 FFFFFFC0 FFFFFF80 FFFFFF84 08 25
   01 03 70 6F 73 15 01 26 10 02 13 27 09 02 28 06
   02 03 49 6E 74 08 07 2A 00 FFFFFFC0 FFFFFF80 FFFFFF84 08 2B 01 07
   70 6F 73 5F 24 65 71 14 02 2C 2F 10 02 13 2D 09
   02 2E 06 02 04 55 6E 69 74 08 07 30 29 FFFFFF81 FFFFFF80 FFFFFFC0
   00 26 01 03 78 24 31 08 06 32 00 FFFFFFA0 FFFFFFA0 04 26 01
   04 70 6F 73 20 08 07 34 00 FFFFFFC0 FFFFFF80 FFFFFF84 08 35 01 06
   66 6F 6C 6C 6F 77 15 01 36 10 04 37 3C 26 3E 0D
   01 38 0A 02 39 3A 01 07 6D 75 74 61 62 6C 65 0A
   02 3B 06 01 0A 63 6F 6C 6C 65 63 74 69 6F 6E 09
   02 3D 38 02 07 48 61 73 68 4D 61 70 10 03 3F 42
   26 0D 01 40 0A 02 41 3A 01 09 69 6D 6D 75 74 61
   62 6C 65 09 02 43 40 02 03 53 65 74 08 07 45 00
   FFFFFFC0 FFFFFF80 FFFFFF84 08 46 01 0A 66 6F 6C 6C 6F 77 5F 24 65
   71 14 02 2C 47 08 07 30 44 FFFFFF81 FFFFFF80 FFFFFFC0 00 36 08 06
   49 00 FFFFFFA0 FFFFFFA0 04 36 01 07 66 6F 6C 6C 6F 77 20 08
   07 4B 00 FFFFFFC0 FFFFFF80 FFFFFF84 08 25 01 08 66 69 6E 61 6C 54
   61 67 08 07 4D 00 FFFFFFC0 FFFFFF80 FFFFFF84 08 4E 01 0C 66 69 6E
   61 6C 54 61 67 5F 24 65 71 14 02 2C 4F 08 07 30
   4C FFFFFF81 FFFFFF80 FFFFFFC0 00 26 08 06 51 00 FFFFFFA0 FFFFFFA0 04 26 01 09
   66 69 6E 61 6C 54 61 67 20 08 07 53 00 FFFFFFC0 FFFFFF80 FFFFFF84
   08 54 01 06 66 69 6E 61 6C 73 15 01 55 10 04 3F
   56 26 26 09 02 57 40 02 03 4D 61 70 08 07 59 00
   FFFFFFC0 FFFFFF80 FFFFFF84 08 5A 01 0A 66 69 6E 61 6C 73 5F 24 65
   71 14 02 2C 5B 08 07 30 58 FFFFFF81 FFFFFF80 FFFFFFC0 00 55 08 06
   5D 00 FFFFFFA0 FFFFFFA0 04 55 01 07 66 69 6E 61 6C 73 20 08
   07 5F 00 FFFFFFC2 FFFFFF80 FFFFFF84 02 60 01 08 65 6D 70 74 79 53
   65 74 15 01 3E 08 06 62 00 FFFFFFA0 FFFFFF80 06 3E 01 09 65
   6D 70 74 79 53 65 74 20 08 05 64 00 FFFFFF84 04 65 01
   06 64 6F 43 6F 6D 70 14 03 3E 66 6D 08 05 67 63
   FFFFFFC0 00 68 01 01 72 10 02 69 6B 0E 02 6A 1B 0D 01
   00 09 02 6C 21 02 06 52 65 67 45 78 70 08 05 6E
   63 FFFFFFC0 00 6F 01 0C 63 6F 6D 70 46 75 6E 63 74 69
   6F 6E 10 04 13 70 68 3E 09 02 71 06 02 09 46 75
   6E 63 74 69 6F 6E 31 08 05 73 00 FFFFFF84 08 74 01 09
   63 6F 6D 70 46 69 72 73 74 14 02 3E 75 08 05 67
   72 FFFFFFC0 00 68 08 05 77 00 FFFFFF84 08 78 01 08 63 6F 6D
   70 4C 61 73 74 14 02 3E 79 08 05 67 76 FFFFFFC0 00 68
   08 05 7B 00 FFFFFF84 08 7C 01 0A 63 6F 6D 70 46 6F 6C
   6C 6F 77 14 02 3E 7D 08 05 7E 7A FFFFFFC0 00 7F 01 02
   72 73 10 05 FFFFFF81 00 FFFFFF81 08 68 0E 04 FFFFFF81 01 FFFFFF81 06 0E
   04 FFFFFF81 02 FFFFFF81 05 0D 02 FFFFFF81 03 0A 03 FFFFFF81 04 08 01 06
   3C 72 6F 6F 74 3E 09 01 07 09 03 FFFFFF81 07 06 01 07
   70 61 63 6B 61 67 65 09 04 FFFFFF81 09 FFFFFF81 0A 02 03 53
   65 71 0A 03 FFFFFF81 07 06 08 07 FFFFFF81 0C 00 FFFFFF84 08 FFFFFF81 0D
   01 0B 63 6F 6D 70 46 6F 6C 6C 6F 77 31 14 05 3E
   FFFFFF81 0E FFFFFF81 10 08 07 FFFFFF81 0F FFFFFF81 0B FFFFFFC0 00 3E 01 04 66
   6F 6C 31 08 06 67 FFFFFF81 0B FFFFFFC0 00 68 08 07 FFFFFF81 12 00
   FFFFFF84 08 FFFFFF81 13 01 08 74 72 61 76 65 72 73 65 14 03
   2C FFFFFF81 14 08 06 67 FFFFFF81 11 FFFFFFC0 00 68 
  InnerClass: 
   public #336= #54 of #255; //Alt=class scala/util/regexp/Base$Alt of class scala/util/regexp/Base
   public #337= #96 of #255; //Star=class scala/util/regexp/Base$Star of class scala/util/regexp/Base
   public #338= #88 of #255; //Meta=class scala/util/regexp/Base$Meta of class scala/util/regexp/Base
   public #339= #82 of #255; //Sequ=class scala/util/regexp/Base$Sequ of class scala/util/regexp/Base
   public abstract #340= #73 of #255; //RegExp=class scala/util/regexp/Base$RegExp of class scala/util/regexp/Base
   public final #343= #154 of #342; //$anon$1=class scala/Predef$$anon$1 of class scala/Predef
   public final #344= #268 of #25; //$anonfun$1=class scala/util/automata/BaseBerrySethi$$anonfun$1 of class scala/util/automata/BaseBerrySethi
   public final #345= #295 of #25; //$anonfun$doComp$3=class scala/util/automata/BaseBerrySethi$$anonfun$doComp$3 of class scala/util/automata/BaseBerrySethi
   public final #346= #245 of #25; //$anonfun$doComp$2=class scala/util/automata/BaseBerrySethi$$anonfun$doComp$2 of class scala/util/automata/BaseBerrySethi
   public final #347= #237 of #25; //$anonfun$doComp$1=class scala/util/automata/BaseBerrySethi$$anonfun$doComp$1 of class scala/util/automata/BaseBerrySethi
   public final #348= #226 of #25; //$anonfun$compLast$1=class scala/util/automata/BaseBerrySethi$$anonfun$compLast$1 of class scala/util/automata/BaseBerrySethi
   public final #349= #85 of #25; //$anonfun$traverse$2=class scala/util/automata/BaseBerrySethi$$anonfun$traverse$2 of class scala/util/automata/BaseBerrySethi
   public final #350= #60 of #25; //$anonfun$traverse$1=class scala/util/automata/BaseBerrySethi$$anonfun$traverse$1 of class scala/util/automata/BaseBerrySethi
   public final #351= #234 of #25; //$anonfun$compFirst$1=class scala/util/automata/BaseBerrySethi$$anonfun$compFirst$1 of class scala/util/automata/BaseBerrySethi
   public final #352= #209 of #25; //$anonfun$compFollow$1=class scala/util/automata/BaseBerrySethi$$anonfun$compFollow$1 of class scala/util/automata/BaseBerrySethi
   public final #353= #175 of #25; //$anonfun$compFollow1$2=class scala/util/automata/BaseBerrySethi$$anonfun$compFollow1$2 of class scala/util/automata/BaseBerrySethi
   public final #354= #131 of #25; //$anonfun$compFollow1$1=class scala/util/automata/BaseBerrySethi$$anonfun$compFollow1$1 of class scala/util/automata/BaseBerrySethi
   public #357= #141 of #356; //GenericCanBuildFrom=class scala/collection/generic/TraversableFactory$GenericCanBuildFrom of class scala/collection/generic/TraversableFactory
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	BaseBerrySethi.scala;
const #3 = Asciz	emptySet;
const #4 = Asciz	Lscala/collection/immutable/Set;;
const #5 = Asciz	Lscala/collection/immutable/Set<Ljava/lang/Integer;>;;
const #6 = Asciz	Signature;
const #7 = Asciz	finals;
const #8 = Asciz	Lscala/collection/immutable/Map;;
const #9 = Asciz	Lscala/collection/immutable/Map<Ljava/lang/Integer;Ljava/lang/Integer;>;;
const #10 = Asciz	finalTag;
const #11 = Asciz	I;
const #12 = Asciz	follow;
const #13 = Asciz	Lscala/collection/mutable/HashMap;;
const #14 = Asciz	Lscala/collection/mutable/HashMap<Ljava/lang/Integer;Lscala/collection/immutable/Set<Ljava/lang/Integer;>;>;;
const #15 = Asciz	pos;
const #16 = Asciz	<init>;
const #17 = Asciz	()V;
const #18 = Asciz	Code;
const #19 = Asciz	LineNumberTable;
const #20 = Asciz	java/lang/Object;
const #21 = class	#20;	//  java/lang/Object
const #22 = NameAndType	#16:#17;//  "<init>":()V
const #23 = Method	#21.#22;	//  java/lang/Object."<init>":()V
const #24 = Asciz	scala/util/automata/BaseBerrySethi;
const #25 = class	#24;	//  scala/util/automata/BaseBerrySethi
const #26 = NameAndType	#15:#11;//  pos:I
const #27 = Field	#25.#26;	//  scala/util/automata/BaseBerrySethi.pos:I
const #28 = Asciz	scala/collection/immutable/Set$;
const #29 = class	#28;	//  scala/collection/immutable/Set$
const #30 = Asciz	MODULE$;
const #31 = Asciz	Lscala/collection/immutable/Set$;;
const #32 = NameAndType	#30:#31;//  MODULE$:Lscala/collection/immutable/Set$;
const #33 = Field	#29.#32;	//  scala/collection/immutable/Set$.MODULE$:Lscala/collection/immutable/Set$;
const #34 = Asciz	scala/Predef$;
const #35 = class	#34;	//  scala/Predef$
const #36 = Asciz	Lscala/Predef$;;
const #37 = NameAndType	#30:#36;//  MODULE$:Lscala/Predef$;
const #38 = Field	#35.#37;	//  scala/Predef$.MODULE$:Lscala/Predef$;
const #39 = Asciz	wrapIntArray;
const #40 = Asciz	([I)Lscala/collection/mutable/WrappedArray;;
const #41 = NameAndType	#39:#40;//  wrapIntArray:([I)Lscala/collection/mutable/WrappedArray;
const #42 = Method	#35.#41;	//  scala/Predef$.wrapIntArray:([I)Lscala/collection/mutable/WrappedArray;
const #43 = Asciz	apply;
const #44 = Asciz	(Lscala/collection/Seq;)Lscala/collection/Traversable;;
const #45 = NameAndType	#43:#44;//  apply:(Lscala/collection/Seq;)Lscala/collection/Traversable;
const #46 = Method	#29.#45;	//  scala/collection/immutable/Set$.apply:(Lscala/collection/Seq;)Lscala/collection/Traversable;
const #47 = Asciz	scala/collection/immutable/Set;
const #48 = class	#47;	//  scala/collection/immutable/Set
const #49 = NameAndType	#3:#4;//  emptySet:Lscala/collection/immutable/Set;
const #50 = Field	#25.#49;	//  scala/util/automata/BaseBerrySethi.emptySet:Lscala/collection/immutable/Set;
const #51 = Asciz	traverse;
const #52 = Asciz	(Lscala/util/regexp/Base$RegExp;)V;
const #53 = Asciz	scala/util/regexp/Base$Alt;
const #54 = class	#53;	//  scala/util/regexp/Base$Alt
const #55 = Asciz	rs;
const #56 = Asciz	()Lscala/collection/Seq;;
const #57 = NameAndType	#55:#56;//  rs:()Lscala/collection/Seq;
const #58 = Method	#54.#57;	//  scala/util/regexp/Base$Alt.rs:()Lscala/collection/Seq;
const #59 = Asciz	scala/util/automata/BaseBerrySethi$$anonfun$traverse$1;
const #60 = class	#59;	//  scala/util/automata/BaseBerrySethi$$anonfun$traverse$1
const #61 = Asciz	(Lscala/util/automata/BaseBerrySethi;)V;
const #62 = NameAndType	#16:#61;//  "<init>":(Lscala/util/automata/BaseBerrySethi;)V
const #63 = Method	#60.#62;	//  scala/util/automata/BaseBerrySethi$$anonfun$traverse$1."<init>":(Lscala/util/automata/BaseBerrySethi;)V
const #64 = Asciz	scala/collection/IterableLike;
const #65 = class	#64;	//  scala/collection/IterableLike
const #66 = Asciz	foreach;
const #67 = Asciz	(Lscala/Function1;)V;
const #68 = NameAndType	#66:#67;//  foreach:(Lscala/Function1;)V
const #69 = InterfaceMethod	#65.#68;	//  scala/collection/IterableLike.foreach:(Lscala/Function1;)V
const #70 = Asciz	scala/MatchError;
const #71 = class	#70;	//  scala/MatchError
const #72 = Asciz	scala/util/regexp/Base$RegExp;
const #73 = class	#72;	//  scala/util/regexp/Base$RegExp
const #74 = Asciz	toString;
const #75 = Asciz	()Ljava/lang/String;;
const #76 = NameAndType	#74:#75;//  toString:()Ljava/lang/String;
const #77 = Method	#73.#76;	//  scala/util/regexp/Base$RegExp.toString:()Ljava/lang/String;
const #78 = Asciz	(Ljava/lang/String;)V;
const #79 = NameAndType	#16:#78;//  "<init>":(Ljava/lang/String;)V
const #80 = Method	#71.#79;	//  scala/MatchError."<init>":(Ljava/lang/String;)V
const #81 = Asciz	scala/util/regexp/Base$Sequ;
const #82 = class	#81;	//  scala/util/regexp/Base$Sequ
const #83 = Method	#82.#57;	//  scala/util/regexp/Base$Sequ.rs:()Lscala/collection/Seq;
const #84 = Asciz	scala/util/automata/BaseBerrySethi$$anonfun$traverse$2;
const #85 = class	#84;	//  scala/util/automata/BaseBerrySethi$$anonfun$traverse$2
const #86 = Method	#85.#62;	//  scala/util/automata/BaseBerrySethi$$anonfun$traverse$2."<init>":(Lscala/util/automata/BaseBerrySethi;)V
const #87 = Asciz	scala/util/regexp/Base$Meta;
const #88 = class	#87;	//  scala/util/regexp/Base$Meta
const #89 = Asciz	r;
const #90 = Asciz	()Lscala/util/regexp/Base$RegExp;;
const #91 = NameAndType	#89:#90;//  r:()Lscala/util/regexp/Base$RegExp;
const #92 = Method	#88.#91;	//  scala/util/regexp/Base$Meta.r:()Lscala/util/regexp/Base$RegExp;
const #93 = NameAndType	#51:#52;//  traverse:(Lscala/util/regexp/Base$RegExp;)V
const #94 = Method	#25.#93;	//  scala/util/automata/BaseBerrySethi.traverse:(Lscala/util/regexp/Base$RegExp;)V
const #95 = Asciz	scala/util/regexp/Base$Star;
const #96 = class	#95;	//  scala/util/regexp/Base$Star
const #97 = Method	#96.#91;	//  scala/util/regexp/Base$Star.r:()Lscala/util/regexp/Base$RegExp;
const #98 = Asciz	java/lang/IllegalArgumentException;
const #99 = class	#98;	//  java/lang/IllegalArgumentException
const #100 = Asciz	scala/collection/mutable/StringBuilder;
const #101 = class	#100;	//  scala/collection/mutable/StringBuilder
const #102 = Method	#101.#22;	//  scala/collection/mutable/StringBuilder."<init>":()V
const #103 = Asciz	unexp pattern ;
const #104 = String	#103;	//  unexp pattern 
const #105 = Asciz	append;
const #106 = Asciz	(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;;
const #107 = NameAndType	#105:#106;//  append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
const #108 = Method	#101.#107;	//  scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
const #109 = Asciz	getClass;
const #110 = Asciz	()Ljava/lang/Class;;
const #111 = NameAndType	#109:#110;//  getClass:()Ljava/lang/Class;
const #112 = Method	#73.#111;	//  scala/util/regexp/Base$RegExp.getClass:()Ljava/lang/Class;
const #113 = Method	#101.#76;	//  scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
const #114 = Method	#99.#79;	//  java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
const #115 = Asciz	this;
const #116 = Asciz	Lscala/util/automata/BaseBerrySethi;;
const #117 = Asciz	Lscala/util/regexp/Base$RegExp;;
const #118 = Asciz	temp17;
const #119 = Asciz	Lscala/util/regexp/Base$Alt;;
const #120 = Asciz	temp18;
const #121 = Asciz	Lscala/util/regexp/Base$Sequ;;
const #122 = Asciz	temp19;
const #123 = Asciz	Lscala/util/regexp/Base$Meta;;
const #124 = Asciz	temp20;
const #125 = Asciz	Lscala/util/regexp/Base$Star;;
const #126 = Asciz	temp21;
const #127 = Asciz	LocalVariableTable;
const #128 = Asciz	compFollow1;
const #129 = Asciz	(Lscala/collection/immutable/Set;Lscala/util/regexp/Base$RegExp;)Lscala/collection/immutable/Set;;
const #130 = Asciz	scala/util/automata/BaseBerrySethi$$anonfun$compFollow1$1;
const #131 = class	#130;	//  scala/util/automata/BaseBerrySethi$$anonfun$compFollow1$1
const #132 = Asciz	(Lscala/util/automata/BaseBerrySethi;Lscala/collection/immutable/Set;)V;
const #133 = NameAndType	#16:#132;//  "<init>":(Lscala/util/automata/BaseBerrySethi;Lscala/collection/immutable/Set;)V
const #134 = Method	#131.#133;	//  scala/util/automata/BaseBerrySethi$$anonfun$compFollow1$1."<init>":(Lscala/util/automata/BaseBerrySethi;Lscala/collection/immutable/Set;)V
const #135 = Asciz	scala/collection/Seq$;
const #136 = class	#135;	//  scala/collection/Seq$
const #137 = Asciz	Lscala/collection/Seq$;;
const #138 = NameAndType	#30:#137;//  MODULE$:Lscala/collection/Seq$;
const #139 = Field	#136.#138;	//  scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
const #140 = Asciz	scala/collection/generic/TraversableFactory$GenericCanBuildFrom;
const #141 = class	#140;	//  scala/collection/generic/TraversableFactory$GenericCanBuildFrom
const #142 = Asciz	(Lscala/collection/generic/TraversableFactory;)V;
const #143 = NameAndType	#16:#142;//  "<init>":(Lscala/collection/generic/TraversableFactory;)V
const #144 = Method	#141.#143;	//  scala/collection/generic/TraversableFactory$GenericCanBuildFrom."<init>":(Lscala/collection/generic/TraversableFactory;)V
const #145 = Asciz	scala/collection/SeqLike;
const #146 = class	#145;	//  scala/collection/SeqLike
const #147 = Asciz	reverseMap;
const #148 = Asciz	(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;;
const #149 = NameAndType	#147:#148;//  reverseMap:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
const #150 = InterfaceMethod	#146.#149;	//  scala/collection/SeqLike.reverseMap:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
const #151 = Asciz	scala/collection/generic/GenericTraversableTemplate;
const #152 = class	#151;	//  scala/collection/generic/GenericTraversableTemplate
const #153 = Asciz	scala/Predef$$anon$1;
const #154 = class	#153;	//  scala/Predef$$anon$1
const #155 = Method	#154.#22;	//  scala/Predef$$anon$1."<init>":()V
const #156 = Asciz	flatten;
const #157 = Asciz	(Lscala/Function1;)Lscala/collection/Traversable;;
const #158 = NameAndType	#156:#157;//  flatten:(Lscala/Function1;)Lscala/collection/Traversable;
const #159 = InterfaceMethod	#152.#158;	//  scala/collection/generic/GenericTraversableTemplate.flatten:(Lscala/Function1;)Lscala/collection/Traversable;
const #160 = Asciz	scala/collection/Seq;
const #161 = class	#160;	//  scala/collection/Seq
const #162 = NameAndType	#128:#129;//  compFollow1:(Lscala/collection/immutable/Set;Lscala/util/regexp/Base$RegExp;)Lscala/collection/immutable/Set;
const #163 = Method	#25.#162;	//  scala/util/automata/BaseBerrySethi.compFollow1:(Lscala/collection/immutable/Set;Lscala/util/regexp/Base$RegExp;)Lscala/collection/immutable/Set;
const #164 = Asciz	compFirst;
const #165 = Asciz	(Lscala/util/regexp/Base$RegExp;)Lscala/collection/immutable/Set;;
const #166 = NameAndType	#164:#165;//  compFirst:(Lscala/util/regexp/Base$RegExp;)Lscala/collection/immutable/Set;
const #167 = Method	#25.#166;	//  scala/util/automata/BaseBerrySethi.compFirst:(Lscala/util/regexp/Base$RegExp;)Lscala/collection/immutable/Set;
const #168 = Asciz	scala/collection/generic/Addable;
const #169 = class	#168;	//  scala/collection/generic/Addable
const #170 = Asciz	$plus$plus;
const #171 = Asciz	(Lscala/collection/Traversable;)Lscala/collection/generic/Addable;;
const #172 = NameAndType	#170:#171;//  $plus$plus:(Lscala/collection/Traversable;)Lscala/collection/generic/Addable;
const #173 = InterfaceMethod	#169.#172;	//  scala/collection/generic/Addable.$plus$plus:(Lscala/collection/Traversable;)Lscala/collection/generic/Addable;
const #174 = Asciz	scala/util/automata/BaseBerrySethi$$anonfun$compFollow1$2;
const #175 = class	#174;	//  scala/util/automata/BaseBerrySethi$$anonfun$compFollow1$2
const #176 = Method	#175.#62;	//  scala/util/automata/BaseBerrySethi$$anonfun$compFollow1$2."<init>":(Lscala/util/automata/BaseBerrySethi;)V
const #177 = Asciz	foldRight;
const #178 = Asciz	(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;;
const #179 = NameAndType	#177:#178;//  foldRight:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
const #180 = InterfaceMethod	#65.#179;	//  scala/collection/IterableLike.foldRight:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
const #181 = Asciz	unexpected pattern: ;
const #182 = String	#181;	//  unexpected pattern: 
const #183 = Asciz	fol1$1;
const #184 = Asciz	temp11;
const #185 = Asciz	temp12;
const #186 = Asciz	temp13;
const #187 = Asciz	temp15;
const #188 = Asciz	first;
const #189 = Asciz	(Lscala/collection/immutable/Set<Ljava/lang/Integer;>;Lscala/util/regexp/Base$RegExp;)Lscala/collection/immutable/Set<Ljava/lang/Integer;>;;
const #190 = Asciz	compFollow;
const #191 = Asciz	(Lscala/collection/Seq;)Lscala/collection/immutable/Set;;
const #192 = Asciz	()Lscala/collection/mutable/HashMap;;
const #193 = NameAndType	#12:#192;//  follow:()Lscala/collection/mutable/HashMap;
const #194 = Method	#25.#193;	//  scala/util/automata/BaseBerrySethi.follow:()Lscala/collection/mutable/HashMap;
const #195 = Asciz	scala/runtime/BoxesRunTime;
const #196 = class	#195;	//  scala/runtime/BoxesRunTime
const #197 = Asciz	boxToInteger;
const #198 = Asciz	(I)Ljava/lang/Integer;;
const #199 = NameAndType	#197:#198;//  boxToInteger:(I)Ljava/lang/Integer;
const #200 = Method	#196.#199;	//  scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
const #201 = Asciz	isEmpty;
const #202 = Asciz	()Z;
const #203 = NameAndType	#201:#202;//  isEmpty:()Z
const #204 = InterfaceMethod	#65.#203;	//  scala/collection/IterableLike.isEmpty:()Z
const #205 = Asciz	()I;
const #206 = NameAndType	#15:#205;//  pos:()I
const #207 = Method	#25.#206;	//  scala/util/automata/BaseBerrySethi.pos:()I
const #208 = Asciz	scala/util/automata/BaseBerrySethi$$anonfun$compFollow$1;
const #209 = class	#208;	//  scala/util/automata/BaseBerrySethi$$anonfun$compFollow$1
const #210 = Method	#209.#62;	//  scala/util/automata/BaseBerrySethi$$anonfun$compFollow$1."<init>":(Lscala/util/automata/BaseBerrySethi;)V
const #211 = Asciz	scala/collection/mutable/HashMap;
const #212 = class	#211;	//  scala/collection/mutable/HashMap
const #213 = Asciz	update;
const #214 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)V;
const #215 = NameAndType	#213:#214;//  update:(Ljava/lang/Object;Ljava/lang/Object;)V
const #216 = Method	#212.#215;	//  scala/collection/mutable/HashMap.update:(Ljava/lang/Object;Ljava/lang/Object;)V
const #217 = Asciz	scala/collection/MapLike;
const #218 = class	#217;	//  scala/collection/MapLike
const #219 = Asciz	(Ljava/lang/Object;)Ljava/lang/Object;;
const #220 = NameAndType	#43:#219;//  apply:(Ljava/lang/Object;)Ljava/lang/Object;
const #221 = InterfaceMethod	#218.#220;	//  scala/collection/MapLike.apply:(Ljava/lang/Object;)Ljava/lang/Object;
const #222 = Asciz	Lscala/collection/Seq;;
const #223 = Asciz	(Lscala/collection/Seq<Lscala/util/regexp/Base$RegExp;>;)Lscala/collection/immutable/Set<Ljava/lang/Integer;>;;
const #224 = Asciz	compLast;
const #225 = Asciz	scala/util/automata/BaseBerrySethi$$anonfun$compLast$1;
const #226 = class	#225;	//  scala/util/automata/BaseBerrySethi$$anonfun$compLast$1
const #227 = Method	#226.#62;	//  scala/util/automata/BaseBerrySethi$$anonfun$compLast$1."<init>":(Lscala/util/automata/BaseBerrySethi;)V
const #228 = Asciz	doComp;
const #229 = Asciz	(Lscala/util/regexp/Base$RegExp;Lscala/Function1;)Lscala/collection/immutable/Set;;
const #230 = NameAndType	#228:#229;//  doComp:(Lscala/util/regexp/Base$RegExp;Lscala/Function1;)Lscala/collection/immutable/Set;
const #231 = Method	#25.#230;	//  scala/util/automata/BaseBerrySethi.doComp:(Lscala/util/regexp/Base$RegExp;Lscala/Function1;)Lscala/collection/immutable/Set;
const #232 = Asciz	(Lscala/util/regexp/Base$RegExp;)Lscala/collection/immutable/Set<Ljava/lang/Integer;>;;
const #233 = Asciz	scala/util/automata/BaseBerrySethi$$anonfun$compFirst$1;
const #234 = class	#233;	//  scala/util/automata/BaseBerrySethi$$anonfun$compFirst$1
const #235 = Method	#234.#62;	//  scala/util/automata/BaseBerrySethi$$anonfun$compFirst$1."<init>":(Lscala/util/automata/BaseBerrySethi;)V
const #236 = Asciz	scala/util/automata/BaseBerrySethi$$anonfun$doComp$1;
const #237 = class	#236;	//  scala/util/automata/BaseBerrySethi$$anonfun$doComp$1
const #238 = Method	#237.#62;	//  scala/util/automata/BaseBerrySethi$$anonfun$doComp$1."<init>":(Lscala/util/automata/BaseBerrySethi;)V
const #239 = Asciz	scala/collection/TraversableLike;
const #240 = class	#239;	//  scala/collection/TraversableLike
const #241 = Asciz	map;
const #242 = NameAndType	#241:#148;//  map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
const #243 = InterfaceMethod	#240.#242;	//  scala/collection/TraversableLike.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
const #244 = Asciz	scala/util/automata/BaseBerrySethi$$anonfun$doComp$2;
const #245 = class	#244;	//  scala/util/automata/BaseBerrySethi$$anonfun$doComp$2
const #246 = Method	#245.#62;	//  scala/util/automata/BaseBerrySethi$$anonfun$doComp$2."<init>":(Lscala/util/automata/BaseBerrySethi;)V
const #247 = Asciz	foldLeft;
const #248 = NameAndType	#247:#178;//  foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
const #249 = InterfaceMethod	#240.#248;	//  scala/collection/TraversableLike.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
const #250 = Asciz	lang;
const #251 = Asciz	()Lscala/util/regexp/Base;;
const #252 = NameAndType	#250:#251;//  lang:()Lscala/util/regexp/Base;
const #253 = Method	#25.#252;	//  scala/util/automata/BaseBerrySethi.lang:()Lscala/util/regexp/Base;
const #254 = Asciz	scala/util/regexp/Base;
const #255 = class	#254;	//  scala/util/regexp/Base
const #256 = Asciz	Eps;
const #257 = Asciz	()Lscala/util/regexp/Base$Eps$;;
const #258 = NameAndType	#256:#257;//  Eps:()Lscala/util/regexp/Base$Eps$;
const #259 = Method	#255.#258;	//  scala/util/regexp/Base.Eps:()Lscala/util/regexp/Base$Eps$;
const #260 = Asciz	equals;
const #261 = Asciz	(Ljava/lang/Object;)Z;
const #262 = NameAndType	#260:#261;//  equals:(Ljava/lang/Object;)Z
const #263 = Method	#21.#262;	//  java/lang/Object.equals:(Ljava/lang/Object;)Z
const #264 = Asciz	scala/Function1;
const #265 = class	#264;	//  scala/Function1
const #266 = InterfaceMethod	#265.#220;	//  scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
const #267 = Asciz	scala/util/automata/BaseBerrySethi$$anonfun$1;
const #268 = class	#267;	//  scala/util/automata/BaseBerrySethi$$anonfun$1
const #269 = Method	#268.#62;	//  scala/util/automata/BaseBerrySethi$$anonfun$1."<init>":(Lscala/util/automata/BaseBerrySethi;)V
const #270 = Asciz	span;
const #271 = Asciz	(Lscala/Function1;)Lscala/Tuple2;;
const #272 = NameAndType	#270:#271;//  span:(Lscala/Function1;)Lscala/Tuple2;
const #273 = InterfaceMethod	#240.#272;	//  scala/collection/TraversableLike.span:(Lscala/Function1;)Lscala/Tuple2;
const #274 = Asciz	scala/Tuple2;
const #275 = class	#274;	//  scala/Tuple2
const #276 = Asciz	_1;
const #277 = Asciz	()Ljava/lang/Object;;
const #278 = NameAndType	#276:#277;//  _1:()Ljava/lang/Object;
const #279 = Method	#275.#278;	//  scala/Tuple2._1:()Ljava/lang/Object;
const #280 = Asciz	_2;
const #281 = NameAndType	#280:#277;//  _2:()Ljava/lang/Object;
const #282 = Method	#275.#281;	//  scala/Tuple2._2:()Ljava/lang/Object;
const #283 = NameAndType	#16:#214;//  "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
const #284 = Method	#275.#283;	//  scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
const #285 = Asciz	take;
const #286 = Asciz	(I)Ljava/lang/Object;;
const #287 = NameAndType	#285:#286;//  take:(I)Ljava/lang/Object;
const #288 = InterfaceMethod	#65.#287;	//  scala/collection/IterableLike.take:(I)Ljava/lang/Object;
const #289 = Asciz	scala/collection/Traversable;
const #290 = class	#289;	//  scala/collection/Traversable
const #291 = Asciz	(Lscala/collection/Traversable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;;
const #292 = NameAndType	#170:#291;//  $plus$plus:(Lscala/collection/Traversable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
const #293 = InterfaceMethod	#240.#292;	//  scala/collection/TraversableLike.$plus$plus:(Lscala/collection/Traversable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
const #294 = Asciz	scala/util/automata/BaseBerrySethi$$anonfun$doComp$3;
const #295 = class	#294;	//  scala/util/automata/BaseBerrySethi$$anonfun$doComp$3
const #296 = Method	#295.#62;	//  scala/util/automata/BaseBerrySethi$$anonfun$doComp$3."<init>":(Lscala/util/automata/BaseBerrySethi;)V
const #297 = Method	#275.#76;	//  scala/Tuple2.toString:()Ljava/lang/String;
const #298 = Asciz	unexpected pattern ;
const #299 = String	#298;	//  unexpected pattern 
const #300 = Asciz	compFunction;
const #301 = Asciz	Lscala/Function1;;
const #302 = Asciz	temp5;
const #303 = Asciz	temp6;
const #304 = Asciz	temp7;
const #305 = Asciz	temp2;
const #306 = Asciz	temp3;
const #307 = Asciz	l1;
const #308 = Asciz	l2;
const #309 = Asciz	temp1;
const #310 = Asciz	Lscala/Tuple2;;
const #311 = Asciz	temp8;
const #312 = Asciz	temp9;
const #313 = Asciz	(Lscala/util/regexp/Base$RegExp;Lscala/Function1<Lscala/util/regexp/Base$RegExp;Lscala/collection/immutable/Set<Ljava/lang/Integer;>;>;)Lscala/collection/immutable/Set<Ljava/lang/Integer;>;;
const #314 = Asciz	()Lscala/collection/immutable/Set;;
const #315 = Asciz	()Lscala/collection/immutable/Set<Ljava/lang/Integer;>;;
const #316 = Asciz	finals_$eq;
const #317 = Asciz	(Lscala/collection/immutable/Map;)V;
const #318 = NameAndType	#7:#8;//  finals:Lscala/collection/immutable/Map;
const #319 = Field	#25.#318;	//  scala/util/automata/BaseBerrySethi.finals:Lscala/collection/immutable/Map;
const #320 = Asciz	(Lscala/collection/immutable/Map<Ljava/lang/Integer;Ljava/lang/Integer;>;)V;
const #321 = Asciz	()Lscala/collection/immutable/Map;;
const #322 = Asciz	()Lscala/collection/immutable/Map<Ljava/lang/Integer;Ljava/lang/Integer;>;;
const #323 = Asciz	finalTag_$eq;
const #324 = Asciz	(I)V;
const #325 = NameAndType	#10:#11;//  finalTag:I
const #326 = Field	#25.#325;	//  scala/util/automata/BaseBerrySethi.finalTag:I
const #327 = Asciz	follow_$eq;
const #328 = Asciz	(Lscala/collection/mutable/HashMap;)V;
const #329 = NameAndType	#12:#13;//  follow:Lscala/collection/mutable/HashMap;
const #330 = Field	#25.#329;	//  scala/util/automata/BaseBerrySethi.follow:Lscala/collection/mutable/HashMap;
const #331 = Asciz	(Lscala/collection/mutable/HashMap<Ljava/lang/Integer;Lscala/collection/immutable/Set<Ljava/lang/Integer;>;>;)V;
const #332 = Asciz	()Lscala/collection/mutable/HashMap<Ljava/lang/Integer;Lscala/collection/immutable/Set<Ljava/lang/Integer;>;>;;
const #333 = Asciz	pos_$eq;
const #334 = Asciz	ScalaSig;
const #335 = Asciz	InnerClasses;
const #336 = Asciz	Alt;
const #337 = Asciz	Star;
const #338 = Asciz	Meta;
const #339 = Asciz	Sequ;
const #340 = Asciz	RegExp;
const #341 = Asciz	scala/Predef;
const #342 = class	#341;	//  scala/Predef
const #343 = Asciz	$anon$1;
const #344 = Asciz	$anonfun$1;
const #345 = Asciz	$anonfun$doComp$3;
const #346 = Asciz	$anonfun$doComp$2;
const #347 = Asciz	$anonfun$doComp$1;
const #348 = Asciz	$anonfun$compLast$1;
const #349 = Asciz	$anonfun$traverse$2;
const #350 = Asciz	$anonfun$traverse$1;
const #351 = Asciz	$anonfun$compFirst$1;
const #352 = Asciz	$anonfun$compFollow$1;
const #353 = Asciz	$anonfun$compFollow1$2;
const #354 = Asciz	$anonfun$compFollow1$1;
const #355 = Asciz	scala/collection/generic/TraversableFactory;
const #356 = class	#355;	//  scala/collection/generic/TraversableFactory
const #357 = Asciz	GenericCanBuildFrom;
const #358 = Asciz	scala/ScalaObject;
const #359 = class	#358;	//  scala/ScalaObject

{
public scala.util.automata.BaseBerrySethi();
  Code:
   Stack=4, Locals=1, Args_size=1
   0:	aload_0
   1:	invokespecial	#23; //Method java/lang/Object."<init>":()V
   4:	aload_0
   5:	iconst_0
   6:	putfield	#27; //Field pos:I
   9:	aload_0
   10:	getstatic	#33; //Field scala/collection/immutable/Set$.MODULE$:Lscala/collection/immutable/Set$;
   13:	getstatic	#38; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   16:	iconst_0
   17:	newarray int
   19:	invokevirtual	#42; //Method scala/Predef$.wrapIntArray:([I)Lscala/collection/mutable/WrappedArray;
   22:	invokevirtual	#46; //Method scala/collection/immutable/Set$.apply:(Lscala/collection/Seq;)Lscala/collection/Traversable;
   25:	checkcast	#48; //class scala/collection/immutable/Set
   28:	putfield	#50; //Field emptySet:Lscala/collection/immutable/Set;
   31:	return
  LineNumberTable: 
   line 27: 0
   line 31: 4
   line 42: 9


public void traverse(scala.util.regexp.Base$RegExp);
  Code:
   Stack=4, Locals=7, Args_size=2
   0:	aload_1
   1:	instanceof	#54; //class scala/util/regexp/Base$Alt
   4:	ifeq	48
   7:	aload_1
   8:	checkcast	#54; //class scala/util/regexp/Base$Alt
   11:	astore_2
   12:	iconst_1
   13:	ifeq	36
   16:	aload_2
   17:	invokevirtual	#58; //Method scala/util/regexp/Base$Alt.rs:()Lscala/collection/Seq;
   20:	new	#60; //class scala/util/automata/BaseBerrySethi$$anonfun$traverse$1
   23:	dup
   24:	aload_0
   25:	invokespecial	#63; //Method scala/util/automata/BaseBerrySethi$$anonfun$traverse$1."<init>":(Lscala/util/automata/BaseBerrySethi;)V
   28:	invokeinterface	#69,  2; //InterfaceMethod scala/collection/IterableLike.foreach:(Lscala/Function1;)V
   33:	goto	167
   36:	new	#71; //class scala/MatchError
   39:	dup
   40:	aload_1
   41:	invokevirtual	#77; //Method scala/util/regexp/Base$RegExp.toString:()Ljava/lang/String;
   44:	invokespecial	#80; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   47:	athrow
   48:	aload_1
   49:	instanceof	#82; //class scala/util/regexp/Base$Sequ
   52:	ifeq	96
   55:	aload_1
   56:	checkcast	#82; //class scala/util/regexp/Base$Sequ
   59:	astore_3
   60:	iconst_1
   61:	ifeq	84
   64:	aload_3
   65:	invokevirtual	#83; //Method scala/util/regexp/Base$Sequ.rs:()Lscala/collection/Seq;
   68:	new	#85; //class scala/util/automata/BaseBerrySethi$$anonfun$traverse$2
   71:	dup
   72:	aload_0
   73:	invokespecial	#86; //Method scala/util/automata/BaseBerrySethi$$anonfun$traverse$2."<init>":(Lscala/util/automata/BaseBerrySethi;)V
   76:	invokeinterface	#69,  2; //InterfaceMethod scala/collection/IterableLike.foreach:(Lscala/Function1;)V
   81:	goto	167
   84:	new	#71; //class scala/MatchError
   87:	dup
   88:	aload_1
   89:	invokevirtual	#77; //Method scala/util/regexp/Base$RegExp.toString:()Ljava/lang/String;
   92:	invokespecial	#80; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   95:	athrow
   96:	aload_1
   97:	instanceof	#88; //class scala/util/regexp/Base$Meta
   100:	ifeq	137
   103:	aload_1
   104:	checkcast	#88; //class scala/util/regexp/Base$Meta
   107:	astore	4
   109:	iconst_1
   110:	ifeq	125
   113:	aload_0
   114:	aload	4
   116:	invokevirtual	#92; //Method scala/util/regexp/Base$Meta.r:()Lscala/util/regexp/Base$RegExp;
   119:	invokevirtual	#94; //Method traverse:(Lscala/util/regexp/Base$RegExp;)V
   122:	goto	167
   125:	new	#71; //class scala/MatchError
   128:	dup
   129:	aload_1
   130:	invokevirtual	#77; //Method scala/util/regexp/Base$RegExp.toString:()Ljava/lang/String;
   133:	invokespecial	#80; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   136:	athrow
   137:	aload_1
   138:	instanceof	#96; //class scala/util/regexp/Base$Star
   141:	ifeq	180
   144:	aload_1
   145:	checkcast	#96; //class scala/util/regexp/Base$Star
   148:	astore	5
   150:	aload	5
   152:	invokevirtual	#97; //Method scala/util/regexp/Base$Star.r:()Lscala/util/regexp/Base$RegExp;
   155:	astore	6
   157:	iconst_1
   158:	ifeq	168
   161:	aload_0
   162:	aload	6
   164:	invokevirtual	#94; //Method traverse:(Lscala/util/regexp/Base$RegExp;)V
   167:	return
   168:	new	#71; //class scala/MatchError
   171:	dup
   172:	aload_1
   173:	invokevirtual	#77; //Method scala/util/regexp/Base$RegExp.toString:()Ljava/lang/String;
   176:	invokespecial	#80; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   179:	athrow
   180:	iconst_1
   181:	ifeq	214
   184:	new	#99; //class java/lang/IllegalArgumentException
   187:	dup
   188:	new	#101; //class scala/collection/mutable/StringBuilder
   191:	dup
   192:	invokespecial	#102; //Method scala/collection/mutable/StringBuilder."<init>":()V
   195:	ldc	#104; //String unexp pattern 
   197:	invokevirtual	#108; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   200:	aload_1
   201:	invokevirtual	#112; //Method scala/util/regexp/Base$RegExp.getClass:()Ljava/lang/Class;
   204:	invokevirtual	#108; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   207:	invokevirtual	#113; //Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
   210:	invokespecial	#114; //Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
   213:	athrow
   214:	new	#71; //class scala/MatchError
   217:	dup
   218:	aload_1
   219:	invokevirtual	#77; //Method scala/util/regexp/Base$RegExp.toString:()Ljava/lang/String;
   222:	invokespecial	#80; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   225:	athrow
  LineNumberTable: 
   line 109: 0
   line 21: 12
   line 111: 16
   line 109: 36
   line 21: 60
   line 112: 64
   line 109: 84
   line 21: 109
   line 113: 113
   line 109: 125
   line 21: 157
   line 114: 161
   line 109: 167
   line 21: 180
   line 115: 184
   line 109: 214

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      226      0    this       Lscala/util/automata/BaseBerrySethi;
   0      226      1    r       Lscala/util/regexp/Base$RegExp;
   12      36      2    temp17       Lscala/util/regexp/Base$Alt;
   60      36      3    temp18       Lscala/util/regexp/Base$Sequ;
   109      28      4    temp19       Lscala/util/regexp/Base$Meta;
   150      17      5    temp20       Lscala/util/regexp/Base$Star;
   168      12      5    temp20       Lscala/util/regexp/Base$Star;
   157      10      6    temp21       Lscala/util/regexp/Base$RegExp;
   168      12      6    temp21       Lscala/util/regexp/Base$RegExp;


public scala.collection.immutable.Set compFollow1(scala.collection.immutable.Set, scala.util.regexp.Base$RegExp);
  Code:
   Stack=6, Locals=9, Args_size=3
   0:	aload_2
   1:	instanceof	#54; //class scala/util/regexp/Base$Alt
   4:	ifeq	90
   7:	aload_2
   8:	checkcast	#54; //class scala/util/regexp/Base$Alt
   11:	astore_3
   12:	iconst_1
   13:	ifeq	78
   16:	getstatic	#33; //Field scala/collection/immutable/Set$.MODULE$:Lscala/collection/immutable/Set$;
   19:	aload_3
   20:	invokevirtual	#58; //Method scala/util/regexp/Base$Alt.rs:()Lscala/collection/Seq;
   23:	new	#131; //class scala/util/automata/BaseBerrySethi$$anonfun$compFollow1$1
   26:	dup
   27:	aload_0
   28:	aload_1
   29:	invokespecial	#134; //Method scala/util/automata/BaseBerrySethi$$anonfun$compFollow1$1."<init>":(Lscala/util/automata/BaseBerrySethi;Lscala/collection/immutable/Set;)V
   32:	getstatic	#139; //Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
   35:	astore	4
   37:	new	#141; //class scala/collection/generic/TraversableFactory$GenericCanBuildFrom
   40:	dup
   41:	aload	4
   43:	invokespecial	#144; //Method scala/collection/generic/TraversableFactory$GenericCanBuildFrom."<init>":(Lscala/collection/generic/TraversableFactory;)V
   46:	invokeinterface	#150,  3; //InterfaceMethod scala/collection/SeqLike.reverseMap:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
   51:	checkcast	#152; //class scala/collection/generic/GenericTraversableTemplate
   54:	new	#154; //class scala/Predef$$anon$1
   57:	dup
   58:	invokespecial	#155; //Method scala/Predef$$anon$1."<init>":()V
   61:	invokeinterface	#159,  2; //InterfaceMethod scala/collection/generic/GenericTraversableTemplate.flatten:(Lscala/Function1;)Lscala/collection/Traversable;
   66:	checkcast	#161; //class scala/collection/Seq
   69:	invokevirtual	#46; //Method scala/collection/immutable/Set$.apply:(Lscala/collection/Seq;)Lscala/collection/Traversable;
   72:	checkcast	#48; //class scala/collection/immutable/Set
   75:	goto	236
   78:	new	#71; //class scala/MatchError
   81:	dup
   82:	aload_2
   83:	invokevirtual	#77; //Method scala/util/regexp/Base$RegExp.toString:()Ljava/lang/String;
   86:	invokespecial	#80; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   89:	athrow
   90:	aload_2
   91:	instanceof	#88; //class scala/util/regexp/Base$Meta
   94:	ifeq	132
   97:	aload_2
   98:	checkcast	#88; //class scala/util/regexp/Base$Meta
   101:	astore	5
   103:	iconst_1
   104:	ifeq	120
   107:	aload_0
   108:	aload_1
   109:	aload	5
   111:	invokevirtual	#92; //Method scala/util/regexp/Base$Meta.r:()Lscala/util/regexp/Base$RegExp;
   114:	invokevirtual	#163; //Method compFollow1:(Lscala/collection/immutable/Set;Lscala/util/regexp/Base$RegExp;)Lscala/collection/immutable/Set;
   117:	goto	236
   120:	new	#71; //class scala/MatchError
   123:	dup
   124:	aload_2
   125:	invokevirtual	#77; //Method scala/util/regexp/Base$RegExp.toString:()Ljava/lang/String;
   128:	invokespecial	#80; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   131:	athrow
   132:	aload_2
   133:	instanceof	#96; //class scala/util/regexp/Base$Star
   136:	ifeq	191
   139:	aload_2
   140:	checkcast	#96; //class scala/util/regexp/Base$Star
   143:	astore	6
   145:	iconst_1
   146:	ifeq	179
   149:	aload_0
   150:	aload_1
   151:	aload_0
   152:	aload	6
   154:	invokevirtual	#97; //Method scala/util/regexp/Base$Star.r:()Lscala/util/regexp/Base$RegExp;
   157:	invokevirtual	#167; //Method compFirst:(Lscala/util/regexp/Base$RegExp;)Lscala/collection/immutable/Set;
   160:	invokeinterface	#173,  2; //InterfaceMethod scala/collection/generic/Addable.$plus$plus:(Lscala/collection/Traversable;)Lscala/collection/generic/Addable;
   165:	checkcast	#48; //class scala/collection/immutable/Set
   168:	aload	6
   170:	invokevirtual	#97; //Method scala/util/regexp/Base$Star.r:()Lscala/util/regexp/Base$RegExp;
   173:	invokevirtual	#163; //Method compFollow1:(Lscala/collection/immutable/Set;Lscala/util/regexp/Base$RegExp;)Lscala/collection/immutable/Set;
   176:	goto	236
   179:	new	#71; //class scala/MatchError
   182:	dup
   183:	aload_2
   184:	invokevirtual	#77; //Method scala/util/regexp/Base$RegExp.toString:()Ljava/lang/String;
   187:	invokespecial	#80; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   190:	athrow
   191:	aload_2
   192:	instanceof	#82; //class scala/util/regexp/Base$Sequ
   195:	ifeq	249
   198:	aload_2
   199:	checkcast	#82; //class scala/util/regexp/Base$Sequ
   202:	astore	7
   204:	iconst_1
   205:	ifeq	237
   208:	aload_0
   209:	getfield	#50; //Field emptySet:Lscala/collection/immutable/Set;
   212:	astore	8
   214:	aload	7
   216:	invokevirtual	#83; //Method scala/util/regexp/Base$Sequ.rs:()Lscala/collection/Seq;
   219:	aload_1
   220:	new	#175; //class scala/util/automata/BaseBerrySethi$$anonfun$compFollow1$2
   223:	dup
   224:	aload_0
   225:	invokespecial	#176; //Method scala/util/automata/BaseBerrySethi$$anonfun$compFollow1$2."<init>":(Lscala/util/automata/BaseBerrySethi;)V
   228:	invokeinterface	#180,  3; //InterfaceMethod scala/collection/IterableLike.foldRight:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
   233:	pop
   234:	aload	8
   236:	areturn
   237:	new	#71; //class scala/MatchError
   240:	dup
   241:	aload_2
   242:	invokevirtual	#77; //Method scala/util/regexp/Base$RegExp.toString:()Ljava/lang/String;
   245:	invokespecial	#80; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   248:	athrow
   249:	iconst_1
   250:	ifeq	283
   253:	new	#99; //class java/lang/IllegalArgumentException
   256:	dup
   257:	new	#101; //class scala/collection/mutable/StringBuilder
   260:	dup
   261:	invokespecial	#102; //Method scala/collection/mutable/StringBuilder."<init>":()V
   264:	ldc	#182; //String unexpected pattern: 
   266:	invokevirtual	#108; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   269:	aload_2
   270:	invokevirtual	#112; //Method scala/util/regexp/Base$RegExp.getClass:()Ljava/lang/Class;
   273:	invokevirtual	#108; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   276:	invokevirtual	#113; //Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
   279:	invokespecial	#114; //Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
   282:	athrow
   283:	new	#71; //class scala/MatchError
   286:	dup
   287:	aload_2
   288:	invokevirtual	#77; //Method scala/util/regexp/Base$RegExp.toString:()Ljava/lang/String;
   291:	invokespecial	#80; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   294:	athrow
  LineNumberTable: 
   line 88: 0
   line 21: 12
   line 89: 16
   line 88: 78
   line 21: 103
   line 90: 107
   line 88: 120
   line 21: 145
   line 91: 149
   line 88: 179
   line 21: 204
   line 93: 208
   line 94: 214
   line 100: 234
   line 88: 236
   line 21: 249
   line 101: 253
   line 88: 283

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      295      0    this       Lscala/util/automata/BaseBerrySethi;
   0      295      1    fol1$1       Lscala/collection/immutable/Set;
   0      295      2    r       Lscala/util/regexp/Base$RegExp;
   12      78      3    temp11       Lscala/util/regexp/Base$Alt;
   103      29      5    temp12       Lscala/util/regexp/Base$Meta;
   145      46      6    temp13       Lscala/util/regexp/Base$Star;
   204      32      7    temp15       Lscala/util/regexp/Base$Sequ;
   237      12      7    temp15       Lscala/util/regexp/Base$Sequ;
   214      22      8    first       Lscala/collection/immutable/Set;

  Signature: length = 0x2
   00 FFFFFFBD 

public scala.collection.immutable.Set compFollow(scala.collection.Seq);
  Code:
   Stack=9, Locals=4, Args_size=2
   0:	aload_0
   1:	invokevirtual	#194; //Method follow:()Lscala/collection/mutable/HashMap;
   4:	iconst_0
   5:	istore_2
   6:	iload_2
   7:	invokestatic	#200; //Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   10:	aload_1
   11:	invokeinterface	#204,  1; //InterfaceMethod scala/collection/IterableLike.isEmpty:()Z
   16:	ifeq	26
   19:	aload_0
   20:	getfield	#50; //Field emptySet:Lscala/collection/immutable/Set;
   23:	goto	62
   26:	aload_1
   27:	getstatic	#33; //Field scala/collection/immutable/Set$.MODULE$:Lscala/collection/immutable/Set$;
   30:	getstatic	#38; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   33:	iconst_1
   34:	newarray int
   36:	dup
   37:	iconst_0
   38:	aload_0
   39:	invokevirtual	#207; //Method pos:()I
   42:	iastore
   43:	invokevirtual	#42; //Method scala/Predef$.wrapIntArray:([I)Lscala/collection/mutable/WrappedArray;
   46:	invokevirtual	#46; //Method scala/collection/immutable/Set$.apply:(Lscala/collection/Seq;)Lscala/collection/Traversable;
   49:	new	#209; //class scala/util/automata/BaseBerrySethi$$anonfun$compFollow$1
   52:	dup
   53:	aload_0
   54:	invokespecial	#210; //Method scala/util/automata/BaseBerrySethi$$anonfun$compFollow$1."<init>":(Lscala/util/automata/BaseBerrySethi;)V
   57:	invokeinterface	#180,  3; //InterfaceMethod scala/collection/IterableLike.foldRight:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
   62:	invokevirtual	#216; //Method scala/collection/mutable/HashMap.update:(Ljava/lang/Object;Ljava/lang/Object;)V
   65:	aload_0
   66:	invokevirtual	#194; //Method follow:()Lscala/collection/mutable/HashMap;
   69:	iconst_0
   70:	istore_3
   71:	iload_3
   72:	invokestatic	#200; //Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   75:	invokeinterface	#221,  2; //InterfaceMethod scala/collection/MapLike.apply:(Ljava/lang/Object;)Ljava/lang/Object;
   80:	checkcast	#48; //class scala/collection/immutable/Set
   83:	areturn
  LineNumberTable: 
   line 69: 0
   line 70: 10
   line 71: 26
   line 69: 62
   line 78: 65

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      84      0    this       Lscala/util/automata/BaseBerrySethi;
   0      84      1    rs       Lscala/collection/Seq;

  Signature: length = 0x2
   00 FFFFFFDF 

public scala.collection.immutable.Set compLast(scala.util.regexp.Base$RegExp);
  Code:
   Stack=5, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	new	#226; //class scala/util/automata/BaseBerrySethi$$anonfun$compLast$1
   5:	dup
   6:	aload_0
   7:	invokespecial	#227; //Method scala/util/automata/BaseBerrySethi$$anonfun$compLast$1."<init>":(Lscala/util/automata/BaseBerrySethi;)V
   10:	invokespecial	#231; //Method doComp:(Lscala/util/regexp/Base$RegExp;Lscala/Function1;)Lscala/collection/immutable/Set;
   13:	areturn
  LineNumberTable: 
   line 59: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      14      0    this       Lscala/util/automata/BaseBerrySethi;
   0      14      1    r       Lscala/util/regexp/Base$RegExp;

  Signature: length = 0x2
   00 FFFFFFE8 

public scala.collection.immutable.Set compFirst(scala.util.regexp.Base$RegExp);
  Code:
   Stack=5, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	new	#234; //class scala/util/automata/BaseBerrySethi$$anonfun$compFirst$1
   5:	dup
   6:	aload_0
   7:	invokespecial	#235; //Method scala/util/automata/BaseBerrySethi$$anonfun$compFirst$1."<init>":(Lscala/util/automata/BaseBerrySethi;)V
   10:	invokespecial	#231; //Method doComp:(Lscala/util/regexp/Base$RegExp;Lscala/Function1;)Lscala/collection/immutable/Set;
   13:	areturn
  LineNumberTable: 
   line 56: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      14      0    this       Lscala/util/automata/BaseBerrySethi;
   0      14      1    r       Lscala/util/regexp/Base$RegExp;

  Signature: length = 0x2
   00 FFFFFFE8 

public final scala.collection.immutable.Set emptySet();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#50; //Field emptySet:Lscala/collection/immutable/Set;
   4:	areturn
  LineNumberTable: 
   line 42: 0

  Signature: length = 0x2
   01 3B 

public void finals_$eq(scala.collection.immutable.Map);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	putfield	#319; //Field finals:Lscala/collection/immutable/Map;
   5:	return
  LineNumberTable: 
   line 38: 0

  Signature: length = 0x2
   01 40 

public scala.collection.immutable.Map finals();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#319; //Field finals:Lscala/collection/immutable/Map;
   4:	areturn
  LineNumberTable: 
   line 38: 0

  Signature: length = 0x2
   01 42 

public void finalTag_$eq(int);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	putfield	#326; //Field finalTag:I
   5:	return
  LineNumberTable: 
   line 36: 0


public int finalTag();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#326; //Field finalTag:I
   4:	ireturn
  LineNumberTable: 
   line 36: 0


public void follow_$eq(scala.collection.mutable.HashMap);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	putfield	#330; //Field follow:Lscala/collection/mutable/HashMap;
   5:	return
  LineNumberTable: 
   line 34: 0

  Signature: length = 0x2
   01 4B 

public scala.collection.mutable.HashMap follow();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#330; //Field follow:Lscala/collection/mutable/HashMap;
   4:	areturn
  LineNumberTable: 
   line 34: 0

  Signature: length = 0x2
   01 4C 

public void pos_$eq(int);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	putfield	#27; //Field pos:I
   5:	return
  LineNumberTable: 
   line 31: 0


public int pos();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#27; //Field pos:I
   4:	ireturn
  LineNumberTable: 
   line 31: 0


public abstract scala.util.regexp.Base lang();

}

