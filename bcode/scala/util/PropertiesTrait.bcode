Compiled from "Properties.scala"
public interface scala.util.PropertiesTrait extends scala.ScalaObject
  SourceFile: "Properties.scala"
  ScalaSig: length = 0x3
   05 00 00 
  RuntimeVisibleAnnotations: length = 0xB
   00 01 00 3F 00 01 00 40 73 00 41 
  InnerClass: 
   public final $anonfun$envOrElse$1=class scala/util/PropertiesTrait$$anonfun$envOrElse$1 of class scala/util/PropertiesTrait
   public final $anonfun$scalaProps$2=class scala/util/PropertiesTrait$$anonfun$scalaProps$2 of class scala/util/PropertiesTrait
   public final $anonfun$scalaProps$1=class scala/util/PropertiesTrait$$anonfun$scalaProps$1 of class scala/util/PropertiesTrait
   public final $anonfun$propOrFalse$1=class scala/util/PropertiesTrait$$anonfun$propOrFalse$1 of class scala/util/PropertiesTrait
   public final $anonfun$isJavaAtLeast$1=class scala/util/PropertiesTrait$$anonfun$isJavaAtLeast$1 of class scala/util/PropertiesTrait
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	Properties.scala;
Asciz	scala$util$PropertiesTrait$_setter_$propFilename_$eq;
Asciz	(Ljava/lang/String;)V;
Asciz	scala$util$PropertiesTrait$_setter_$versionString_$eq;
Asciz	scala$util$PropertiesTrait$_setter_$copyrightString_$eq;
Asciz	propCategory;
Asciz	()Ljava/lang/String;;
Asciz	pickJarBasedOn;
Asciz	()Ljava/lang/Class;;
Asciz	()Ljava/lang/Class<*>;;
Asciz	Signature;
Asciz	propFilename;
Asciz	scalaProps;
Asciz	()Ljava/util/Properties;;
Asciz	propIsSet;
Asciz	(Ljava/lang/String;)Z;
Asciz	propIsSetTo;
Asciz	(Ljava/lang/String;Ljava/lang/String;)Z;
Asciz	propOrElse;
Asciz	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;;
Asciz	propOrEmpty;
Asciz	(Ljava/lang/String;)Ljava/lang/String;;
Asciz	propOrNull;
Asciz	propOrNone;
Asciz	(Ljava/lang/String;)Lscala/Option;;
Asciz	(Ljava/lang/String;)Lscala/Option<Ljava/lang/String;>;;
Asciz	propOrFalse;
Asciz	setProp;
Asciz	clearProp;
Asciz	envOrElse;
Asciz	scalaPropOrElse;
Asciz	scalaPropOrEmpty;
Asciz	versionString;
Asciz	copyrightString;
Asciz	sourceEncoding;
Asciz	encodingString;
Asciz	lineSeparator;
Asciz	javaClassPath;
Asciz	javaHome;
Asciz	javaVendor;
Asciz	javaVersion;
Asciz	javaVmInfo;
Asciz	javaVmName;
Asciz	javaVmVendor;
Asciz	javaVmVersion;
Asciz	osName;
Asciz	scalaHome;
Asciz	tmpDir;
Asciz	userDir;
Asciz	userHome;
Asciz	userName;
Asciz	isWin;
Asciz	()Z;
Asciz	isMac;
Asciz	versionMsg;
Asciz	scalaCmd;
Asciz	scalacCmd;
Asciz	isJavaAtLeast;
Asciz	main;
Asciz	([Ljava/lang/String;)V;
Asciz	ScalaSig;
Asciz	Lscala/reflect/ScalaSignature;;
Asciz	bytes;
Asciz	\rf!C\tC=&o9feRLWm+sC&$(BA)H/7\tQa]2bY2A!\tAQ\"D\n\tQ1\"mC:<'\"\t)g/Y%aa2kK$C\t!B\n-6-7b\nTWm;\tQA\rJg.;%!a\t!aI!!\tUs71\tH\raJ|oQ1uK|'/_;Aa$\t!}I!\t\rAX\rZ3g\t3ETiJLgnAAQ!\n\na]5dW*'OQ1tK|e.F(a\tASES-J!AK\rcm]:1jC\t]\"\t!B_\tqJAC\t2\tDAAO_RDN\4A!BA\r\te.o\r\"91(o9GS2,g.Y7f+IC;\t=I!OaJ|OR5mK:W.\tyR1A}\n!b]2bY&o9t+CA!D%BA\t!%IQe>XM;jKNDB\tKQgG.)s_BCI%*rk&,G\=ESNxn]3]Qu\nL\rTC$n8Aiu#O\t\tAAHY=oC6,gQ\rT\tI&o\:bY\")!C'IO]8qNV\r)^\"E+\nY#!a\"p_2,M1F\r!H]lW\rC[1,Aqe>j]*fiR{Gc+];\"),a;!)a,a;)a/7vK\")\rCCQO]8qJ,En]3e7\rCY?QCe?Q$AbYRDQA1:pa>X)9usR1\r!U!\ta[aJ|o:Ok2dGCAmA1q\"p)(o9Pe:{g.aN2E9:\tHAPaRLwN16\r!k!\tA^aJ|o:GC2X\rUo\")a;!)Cu91/;Qe>HcA|y\")a;!)aa;!)aCI1\r\3beBxs\"-~ibBAqA\nK:4xJ]#mg$R!OAAaWAiB3QC!\t!!M\r\1Qe>xJ]#mg$R!HA\n+AaWAiB3QC!\t!a!M\r\1Qe>xJ]#naRLHcA!1,aAuA\"!\t%\tOm8/[8o'RN\4\t)Asqa/:tS>t7:j]CA\tI\r|/:jO\"$8:j]Dq!!A%Q$\td_BL(/[4iiN#(/8hA!1q\tab]8ve,WI\2pI&tw\r6!\tOK:wZ5oON#(/8h\tICqiA.8f'M]1u_JDa!!\tA!6bmE.Y:t!$B!\tO\tU4\rS8nK\"1Q\ta\n!B[1wCZ+gZ8s\tICqY!.<b-8/[8o\tiCqQ!.<b-6LeNZ8\t\rE\"9)QM^1W[:W.+A)g/,n-tGm:\t\re\"95QM^1W[Z+'o]5p]\"1Qa\naa\:OC6,BBA1(AtGd\rS8nK\"1Q\ra\na^7q\t&BBA5(AvgH):\t\r5\"9!)8/:I_6,BBA9(vgh*Y7f\t)Co\nQ![:XS:,wAAA<I7/T1d\tyC9Qa/:tS>tWj]4\t\r\r\"9!8-7b6$BBAD(AtGdmY\"nI\"915!D5t4-;MKHFUCq!!%\nQ$AwKJn8\tU\"!Q.Y5o)\r9\t7\n1!M]4t!qT\nFAABeJ;
Asciz	RuntimeVisibleAnnotations;
Asciz	InnerClasses;
Asciz	scala/util/PropertiesTrait$$anonfun$envOrElse$1;
class	scala/util/PropertiesTrait$$anonfun$envOrElse$1
Asciz	scala/util/PropertiesTrait;
class	scala/util/PropertiesTrait
Asciz	$anonfun$envOrElse$1;
Asciz	scala/util/PropertiesTrait$$anonfun$scalaProps$2;
class	scala/util/PropertiesTrait$$anonfun$scalaProps$2
Asciz	$anonfun$scalaProps$2;
Asciz	scala/util/PropertiesTrait$$anonfun$scalaProps$1;
class	scala/util/PropertiesTrait$$anonfun$scalaProps$1
Asciz	$anonfun$scalaProps$1;
Asciz	scala/util/PropertiesTrait$$anonfun$propOrFalse$1;
class	scala/util/PropertiesTrait$$anonfun$propOrFalse$1
Asciz	$anonfun$propOrFalse$1;
Asciz	scala/util/PropertiesTrait$$anonfun$isJavaAtLeast$1;
class	scala/util/PropertiesTrait$$anonfun$isJavaAtLeast$1
Asciz	$anonfun$isJavaAtLeast$1;
Asciz	java/lang/Object;
class	java/lang/Object
Asciz	scala/ScalaObject;
class	scala/ScalaObject

{
public abstract void scala$util$PropertiesTrait$_setter_$propFilename_$eq(java.lang.String);
  Signature: (Ljava/lang/String;)V

public abstract void scala$util$PropertiesTrait$_setter_$versionString_$eq(java.lang.String);
  Signature: (Ljava/lang/String;)V

public abstract void scala$util$PropertiesTrait$_setter_$copyrightString_$eq(java.lang.String);
  Signature: (Ljava/lang/String;)V

public abstract java.lang.String propCategory();
  Signature: ()Ljava/lang/String;

public abstract java.lang.Class pickJarBasedOn();
  Signature: ()Ljava/lang/Class;
  Signature: length = 0x2
   00 0B 

public abstract java.lang.String propFilename();
  Signature: ()Ljava/lang/String;

public abstract java.util.Properties scalaProps();
  Signature: ()Ljava/util/Properties;

public abstract boolean propIsSet(java.lang.String);
  Signature: (Ljava/lang/String;)Z

public abstract boolean propIsSetTo(java.lang.String, java.lang.String);
  Signature: (Ljava/lang/String;Ljava/lang/String;)Z

public abstract java.lang.String propOrElse(java.lang.String, java.lang.String);
  Signature: (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

public abstract java.lang.String propOrEmpty(java.lang.String);
  Signature: (Ljava/lang/String;)Ljava/lang/String;

public abstract java.lang.String propOrNull(java.lang.String);
  Signature: (Ljava/lang/String;)Ljava/lang/String;

public abstract scala.Option propOrNone(java.lang.String);
  Signature: (Ljava/lang/String;)Lscala/Option;
  Signature: length = 0x2
   00 1B 

public abstract boolean propOrFalse(java.lang.String);
  Signature: (Ljava/lang/String;)Z

public abstract java.lang.String setProp(java.lang.String, java.lang.String);
  Signature: (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

public abstract java.lang.String clearProp(java.lang.String);
  Signature: (Ljava/lang/String;)Ljava/lang/String;

public abstract java.lang.String envOrElse(java.lang.String, java.lang.String);
  Signature: (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

public abstract java.lang.String scalaPropOrElse(java.lang.String, java.lang.String);
  Signature: (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

public abstract java.lang.String scalaPropOrEmpty(java.lang.String);
  Signature: (Ljava/lang/String;)Ljava/lang/String;

public abstract java.lang.String versionString();
  Signature: ()Ljava/lang/String;

public abstract java.lang.String copyrightString();
  Signature: ()Ljava/lang/String;

public abstract java.lang.String sourceEncoding();
  Signature: ()Ljava/lang/String;

public abstract java.lang.String encodingString();
  Signature: ()Ljava/lang/String;

public abstract java.lang.String lineSeparator();
  Signature: ()Ljava/lang/String;

public abstract java.lang.String javaClassPath();
  Signature: ()Ljava/lang/String;

public abstract java.lang.String javaHome();
  Signature: ()Ljava/lang/String;

public abstract java.lang.String javaVendor();
  Signature: ()Ljava/lang/String;

public abstract java.lang.String javaVersion();
  Signature: ()Ljava/lang/String;

public abstract java.lang.String javaVmInfo();
  Signature: ()Ljava/lang/String;

public abstract java.lang.String javaVmName();
  Signature: ()Ljava/lang/String;

public abstract java.lang.String javaVmVendor();
  Signature: ()Ljava/lang/String;

public abstract java.lang.String javaVmVersion();
  Signature: ()Ljava/lang/String;

public abstract java.lang.String osName();
  Signature: ()Ljava/lang/String;

public abstract java.lang.String scalaHome();
  Signature: ()Ljava/lang/String;

public abstract java.lang.String tmpDir();
  Signature: ()Ljava/lang/String;

public abstract java.lang.String userDir();
  Signature: ()Ljava/lang/String;

public abstract java.lang.String userHome();
  Signature: ()Ljava/lang/String;

public abstract java.lang.String userName();
  Signature: ()Ljava/lang/String;

public abstract boolean isWin();
  Signature: ()Z

public abstract boolean isMac();
  Signature: ()Z

public abstract java.lang.String versionMsg();
  Signature: ()Ljava/lang/String;

public abstract java.lang.String scalaCmd();
  Signature: ()Ljava/lang/String;

public abstract java.lang.String scalacCmd();
  Signature: ()Ljava/lang/String;

public abstract boolean isJavaAtLeast(java.lang.String);
  Signature: (Ljava/lang/String;)Z

public abstract void main(java.lang.String[]);
  Signature: ([Ljava/lang/String;)V

}

