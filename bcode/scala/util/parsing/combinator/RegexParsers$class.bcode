Compiled from "RegexParsers.scala"
public abstract class scala.util.parsing.combinator.RegexParsers$class extends java.lang.Object
  SourceFile: "RegexParsers.scala"
  Scala: length = 0x
   
  InnerClass: 
   public Match=class scala/util/matching/Regex$Match of class scala/util/matching/Regex
   public abstract Parser=class scala/util/parsing/combinator/Parsers$Parser of class scala/util/parsing/combinator/Parsers
   public abstract ParseResult=class scala/util/parsing/combinator/Parsers$ParseResult of class scala/util/parsing/combinator/Parsers
   public final $anon$2=class scala/util/parsing/combinator/RegexParsers$$anon$2 of class scala/util/parsing/combinator/RegexParsers
   public final $anon$1=class scala/util/parsing/combinator/RegexParsers$$anon$1 of class scala/util/parsing/combinator/RegexParsers
   public final $anonfun$phrase$1=class scala/util/parsing/combinator/RegexParsers$$anonfun$phrase$1 of class scala/util/parsing/combinator/RegexParsers
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	RegexParsers.scala;
Asciz	skipWhitespace;
Asciz	(Lscala/util/parsing/combinator/RegexParsers;)Z;
Asciz	Code;
Asciz	LineNumberTable;
Asciz	scala/util/parsing/combinator/RegexParsers;
class	scala/util/parsing/combinator/RegexParsers
Asciz	whiteSpace;
Asciz	()Lscala/util/matching/Regex;;
NameAndType	whiteSpace:()Lscala/util/matching/Regex;
InterfaceMethod	scala/util/parsing/combinator/RegexParsers.whiteSpace:()Lscala/util/matching/Regex;
Asciz	scala/util/matching/Regex;
class	scala/util/matching/Regex
Asciz	toString;
Asciz	()Ljava/lang/String;;
NameAndType	toString:()Ljava/lang/String;
Method	scala/util/matching/Regex.toString:()Ljava/lang/String;
Asciz	java/lang/String;
class	java/lang/String
Asciz	length;
Asciz	()I;
NameAndType	length:()I
Method	java/lang/String.length:()I
Asciz	$this;
Asciz	Lscala/util/parsing/combinator/RegexParsers;;
Asciz	LocalVariableTable;
Asciz	handleWhiteSpace;
Asciz	(Lscala/util/parsing/combinator/RegexParsers;Ljava/lang/CharSequence;I)I;
Asciz	()Z;
NameAndType	skipWhitespace:()Z
InterfaceMethod	scala/util/parsing/combinator/RegexParsers.skipWhitespace:()Z
Asciz	java/lang/CharSequence;
class	java/lang/CharSequence
InterfaceMethod	java/lang/CharSequence.length:()I
Asciz	subSequence;
Asciz	(II)Ljava/lang/CharSequence;;
NameAndType	subSequence:(II)Ljava/lang/CharSequence;
InterfaceMethod	java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;
Asciz	findPrefixMatchOf;
Asciz	(Ljava/lang/CharSequence;)Lscala/Option;;
NameAndType	findPrefixMatchOf:(Ljava/lang/CharSequence;)Lscala/Option;
Method	scala/util/matching/Regex.findPrefixMatchOf:(Ljava/lang/CharSequence;)Lscala/Option;
Asciz	scala/Some;
class	scala/Some
Asciz	x;
Asciz	Ljava/lang/Object;;
NameAndType	x:Ljava/lang/Object;
Field	scala/Some.x:Ljava/lang/Object;
Asciz	scala/util/matching/Regex$Match;
class	scala/util/matching/Regex$Match
Asciz	end;
NameAndType	end:()I
Method	scala/util/matching/Regex$Match.end:()I
Asciz	scala/None$;
class	scala/None$
Asciz	MODULE$;
Asciz	Lscala/None$;;
NameAndType	MODULE$:Lscala/None$;
Field	scala/None$.MODULE$:Lscala/None$;
Asciz	java/lang/Object;
class	java/lang/Object
Asciz	equals;
Asciz	(Ljava/lang/Object;)Z;
NameAndType	equals:(Ljava/lang/Object;)Z
Method	java/lang/Object.equals:(Ljava/lang/Object;)Z
Asciz	scala/MatchError;
class	scala/MatchError
Asciz	scala/Option;
class	scala/Option
Method	scala/Option.toString:()Ljava/lang/String;
Asciz	<init>;
Asciz	(Ljava/lang/String;)V;
NameAndType	"<init>":(Ljava/lang/String;)V
Method	scala/MatchError."<init>":(Ljava/lang/String;)V
Asciz	source;
Asciz	Ljava/lang/CharSequence;;
Asciz	offset;
Asciz	I;
Asciz	temp2;
Asciz	Lscala/Some;;
Asciz	temp3;
Asciz	Lscala/util/matching/Regex$Match;;
Asciz	temp1;
Asciz	Lscala/Option;;
Asciz	literal;
Asciz	(Lscala/util/parsing/combinator/RegexParsers;Ljava/lang/String;)Lscala/util/parsing/combinator/Parsers$Parser;;
Asciz	scala/util/parsing/combinator/RegexParsers$$anon$1;
class	scala/util/parsing/combinator/RegexParsers$$anon$1
Asciz	(Lscala/util/parsing/combinator/RegexParsers;Ljava/lang/String;)V;
NameAndType	"<init>":(Lscala/util/parsing/combinator/RegexParsers;Ljava/lang/String;)V
Method	scala/util/parsing/combinator/RegexParsers$$anon$1."<init>":(Lscala/util/parsing/combinator/RegexParsers;Ljava/lang/String;)V
Asciz	s$1;
Asciz	Ljava/lang/String;;
Asciz	regex;
Asciz	(Lscala/util/parsing/combinator/RegexParsers;Lscala/util/matching/Regex;)Lscala/util/parsing/combinator/Parsers$Parser;;
Asciz	scala/util/parsing/combinator/RegexParsers$$anon$2;
class	scala/util/parsing/combinator/RegexParsers$$anon$2
Asciz	(Lscala/util/parsing/combinator/RegexParsers;Lscala/util/matching/Regex;)V;
NameAndType	"<init>":(Lscala/util/parsing/combinator/RegexParsers;Lscala/util/matching/Regex;)V
Method	scala/util/parsing/combinator/RegexParsers$$anon$2."<init>":(Lscala/util/parsing/combinator/RegexParsers;Lscala/util/matching/Regex;)V
Asciz	r$1;
Asciz	Lscala/util/matching/Regex;;
Asciz	phrase;
Asciz	(Lscala/util/parsing/combinator/RegexParsers;Lscala/util/parsing/combinator/Parsers$Parser;)Lscala/util/parsing/combinator/Parsers$Parser;;
Asciz	scala/util/parsing/combinator/RegexParsers$$anonfun$phrase$1;
class	scala/util/parsing/combinator/RegexParsers$$anonfun$phrase$1
Asciz	(Lscala/util/parsing/combinator/RegexParsers;)V;
NameAndType	"<init>":(Lscala/util/parsing/combinator/RegexParsers;)V
Method	scala/util/parsing/combinator/RegexParsers$$anonfun$phrase$1."<init>":(Lscala/util/parsing/combinator/RegexParsers;)V
Asciz	scala/util/parsing/combinator/Parsers$Parser;
class	scala/util/parsing/combinator/Parsers$Parser
Asciz	$less$tilde;
Asciz	(Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;;
NameAndType	$less$tilde:(Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/Parsers$Parser.$less$tilde:(Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	scala$util$parsing$combinator$RegexParsers$$super$phrase;
Asciz	(Lscala/util/parsing/combinator/Parsers$Parser;)Lscala/util/parsing/combinator/Parsers$Parser;;
NameAndType	scala$util$parsing$combinator$RegexParsers$$super$phrase:(Lscala/util/parsing/combinator/Parsers$Parser;)Lscala/util/parsing/combinator/Parsers$Parser;
InterfaceMethod	scala/util/parsing/combinator/RegexParsers.scala$util$parsing$combinator$RegexParsers$$super$phrase:(Lscala/util/parsing/combinator/Parsers$Parser;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	p;
Asciz	Lscala/util/parsing/combinator/Parsers$Parser;;
Asciz	parse;
Asciz	(Lscala/util/parsing/combinator/RegexParsers;Lscala/util/parsing/combinator/Parsers$Parser;Lscala/util/parsing/input/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;;
Asciz	apply;
Asciz	(Lscala/util/parsing/input/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;;
NameAndType	apply:(Lscala/util/parsing/input/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
Method	scala/util/parsing/combinator/Parsers$Parser.apply:(Lscala/util/parsing/input/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
Asciz	in;
Asciz	Lscala/util/parsing/input/Reader;;
Asciz	(Lscala/util/parsing/combinator/RegexParsers;Lscala/util/parsing/combinator/Parsers$Parser;Ljava/lang/CharSequence;)Lscala/util/parsing/combinator/Parsers$ParseResult;;
Asciz	scala/util/parsing/input/CharSequenceReader;
class	scala/util/parsing/input/CharSequenceReader
Asciz	(Ljava/lang/CharSequence;)V;
NameAndType	"<init>":(Ljava/lang/CharSequence;)V
Method	scala/util/parsing/input/CharSequenceReader."<init>":(Ljava/lang/CharSequence;)V
Asciz	(Lscala/util/parsing/combinator/RegexParsers;Lscala/util/parsing/combinator/Parsers$Parser;Ljava/io/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;;
Asciz	scala/util/parsing/input/PagedSeqReader;
class	scala/util/parsing/input/PagedSeqReader
Asciz	scala/collection/immutable/PagedSeq$;
class	scala/collection/immutable/PagedSeq$
Asciz	Lscala/collection/immutable/PagedSeq$;;
NameAndType	MODULE$:Lscala/collection/immutable/PagedSeq$;
Field	scala/collection/immutable/PagedSeq$.MODULE$:Lscala/collection/immutable/PagedSeq$;
Asciz	fromReader;
Asciz	(Ljava/io/Reader;)Lscala/collection/immutable/PagedSeq;;
NameAndType	fromReader:(Ljava/io/Reader;)Lscala/collection/immutable/PagedSeq;
Method	scala/collection/immutable/PagedSeq$.fromReader:(Ljava/io/Reader;)Lscala/collection/immutable/PagedSeq;
Asciz	(Lscala/collection/immutable/PagedSeq;)V;
NameAndType	"<init>":(Lscala/collection/immutable/PagedSeq;)V
Method	scala/util/parsing/input/PagedSeqReader."<init>":(Lscala/collection/immutable/PagedSeq;)V
Asciz	Ljava/io/Reader;;
Asciz	parseAll;
NameAndType	phrase:(Lscala/util/parsing/combinator/Parsers$Parser;)Lscala/util/parsing/combinator/Parsers$Parser;
InterfaceMethod	scala/util/parsing/combinator/RegexParsers.phrase:(Lscala/util/parsing/combinator/Parsers$Parser;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	(Lscala/util/parsing/combinator/Parsers$Parser;Lscala/util/parsing/input/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;;
NameAndType	parse:(Lscala/util/parsing/combinator/Parsers$Parser;Lscala/util/parsing/input/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
InterfaceMethod	scala/util/parsing/combinator/RegexParsers.parse:(Lscala/util/parsing/combinator/Parsers$Parser;Lscala/util/parsing/input/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
Asciz	(Lscala/util/parsing/combinator/Parsers$Parser;Ljava/io/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;;
NameAndType	parse:(Lscala/util/parsing/combinator/Parsers$Parser;Ljava/io/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
InterfaceMethod	scala/util/parsing/combinator/RegexParsers.parse:(Lscala/util/parsing/combinator/Parsers$Parser;Ljava/io/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
Asciz	(Lscala/util/parsing/combinator/Parsers$Parser;Ljava/lang/CharSequence;)Lscala/util/parsing/combinator/Parsers$ParseResult;;
NameAndType	parse:(Lscala/util/parsing/combinator/Parsers$Parser;Ljava/lang/CharSequence;)Lscala/util/parsing/combinator/Parsers$ParseResult;
InterfaceMethod	scala/util/parsing/combinator/RegexParsers.parse:(Lscala/util/parsing/combinator/Parsers$Parser;Ljava/lang/CharSequence;)Lscala/util/parsing/combinator/Parsers$ParseResult;
Asciz	$init$;
Asciz	scala/Predef$;
class	scala/Predef$
Asciz	Lscala/Predef$;;
NameAndType	MODULE$:Lscala/Predef$;
Field	scala/Predef$.MODULE$:Lscala/Predef$;
Asciz	\s+;
String	\s+
Asciz	augmentString;
Asciz	(Ljava/lang/String;)Lscala/collection/immutable/StringOps;;
NameAndType	augmentString:(Ljava/lang/String;)Lscala/collection/immutable/StringOps;
Method	scala/Predef$.augmentString:(Ljava/lang/String;)Lscala/collection/immutable/StringOps;
Asciz	scala/collection/immutable/StringLike;
class	scala/collection/immutable/StringLike
Asciz	r;
NameAndType	r:()Lscala/util/matching/Regex;
InterfaceMethod	scala/collection/immutable/StringLike.r:()Lscala/util/matching/Regex;
Asciz	scala$util$parsing$combinator$RegexParsers$_setter_$whiteSpace_$eq;
Asciz	(Lscala/util/matching/Regex;)V;
NameAndType	scala$util$parsing$combinator$RegexParsers$_setter_$whiteSpace_$eq:(Lscala/util/matching/Regex;)V
InterfaceMethod	scala/util/parsing/combinator/RegexParsers.scala$util$parsing$combinator$RegexParsers$_setter_$whiteSpace_$eq:(Lscala/util/matching/Regex;)V
Asciz	Scala;
Asciz	InnerClasses;
Asciz	Match;
Asciz	scala/util/parsing/combinator/Parsers;
class	scala/util/parsing/combinator/Parsers
Asciz	Parser;
Asciz	scala/util/parsing/combinator/Parsers$ParseResult;
class	scala/util/parsing/combinator/Parsers$ParseResult
Asciz	ParseResult;
Asciz	$anon$2;
Asciz	$anon$1;
Asciz	$anonfun$phrase$1;
Asciz	scala/util/parsing/combinator/RegexParsers$class;
class	scala/util/parsing/combinator/RegexParsers$class

{
public static boolean skipWhitespace(scala.util.parsing.combinator.RegexParsers);
  Signature: (Lscala/util/parsing/combinator/RegexParsers;)Z
  Code:
   Stack=2, Locals=1, Args_size=1
	aload_0
	invokeinterface	InterfaceMethod scala/util/parsing/combinator/RegexParsers.whiteSpace:()Lscala/util/matching/Regex;
	invokevirtual	Method scala/util/matching/Regex.toString:()Ljava/lang/String;
	invokevirtual	Method java/lang/String.length:()I
	iconst_0
	if_icmple	l1 // iconst_0
	iconst_1
	goto	l2 // ireturn
l1	iconst_0
l2	ireturn
  Labels:
   	l1 = 20 // iconst_0
   	l2 = 21 // ireturn
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      22      0    $this       Lscala/util/parsing/combinator/RegexParsers;


public static int handleWhiteSpace(scala.util.parsing.combinator.RegexParsers, java.lang.CharSequence, int);
  Signature: (Lscala/util/parsing/combinator/RegexParsers;Ljava/lang/CharSequence;I)I
  Code:
   Stack=4, Locals=6, Args_size=3
	aload_0
	invokeinterface	InterfaceMethod scala/util/parsing/combinator/RegexParsers.skipWhitespace:()Z
	ifeq	l1 // iload_2
	aload_0
	invokeinterface	InterfaceMethod scala/util/parsing/combinator/RegexParsers.whiteSpace:()Lscala/util/matching/Regex;
	aload_1
	iload_2
	aload_1
	invokeinterface	InterfaceMethod java/lang/CharSequence.length:()I
	invokeinterface	InterfaceMethod java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;
	invokevirtual	Method scala/util/matching/Regex.findPrefixMatchOf:(Ljava/lang/CharSequence;)Lscala/Option;
	astore	5
	aload	5
	instanceof	class scala/Some
	ifeq	l2 // getstatic
	aload	5
	checkcast	class scala/Some
	astore_3
	aload_3
	getfield	Field scala/Some.x:Ljava/lang/Object;
	checkcast	class scala/util/matching/Regex$Match
	astore	4
	iload_2
	aload	4
	invokevirtual	Method scala/util/matching/Regex$Match.end:()I
	iadd
	goto	l3 // ireturn
l2	getstatic	Field scala/None$.MODULE$:Lscala/None$;
	dup
	ifnonnull	l4 // aload
	pop
	aload	5
	ifnull	l5 // iload_2
	goto	l6 // new
l4	aload	5
	invokevirtual	Method java/lang/Object.equals:(Ljava/lang/Object;)Z
	ifeq	l6 // new
l5	iload_2
	goto	l3 // ireturn
l6	new	class scala/MatchError
	dup
	aload	5
	invokevirtual	Method scala/Option.toString:()Ljava/lang/String;
	invokespecial	Method scala/MatchError."<init>":(Ljava/lang/String;)V
	athrow
l1	iload_2
l3	ireturn
  Labels:
   	l2 = 66 // getstatic
   	l4 = 82 // aload
   	l5 = 90 // iload_2
   	l6 = 94 // new
   	l1 = 107 // iload_2
   	l3 = 108 // ireturn
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      109      0    $this       Lscala/util/parsing/combinator/RegexParsers;
   0      109      1    source       Ljava/lang/CharSequence;
   0      109      2    offset       I
   47      16      3    temp2       Lscala/Some;
   56      7      4    temp3       Lscala/util/matching/Regex$Match;
   33      74      5    temp1       Lscala/Option;


public static scala.util.parsing.combinator.Parsers$Parser literal(scala.util.parsing.combinator.RegexParsers, java.lang.String);
  Signature: (Lscala/util/parsing/combinator/RegexParsers;Ljava/lang/String;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=4, Locals=2, Args_size=2
	new	class scala/util/parsing/combinator/RegexParsers$$anon$1
	dup
	aload_0
	aload_1
	invokespecial	Method scala/util/parsing/combinator/RegexParsers$$anon$1."<init>":(Lscala/util/parsing/combinator/RegexParsers;Ljava/lang/String;)V
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    $this       Lscala/util/parsing/combinator/RegexParsers;
   0      10      1    s$1       Ljava/lang/String;


public static scala.util.parsing.combinator.Parsers$Parser regex(scala.util.parsing.combinator.RegexParsers, scala.util.matching.Regex);
  Signature: (Lscala/util/parsing/combinator/RegexParsers;Lscala/util/matching/Regex;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=4, Locals=2, Args_size=2
	new	class scala/util/parsing/combinator/RegexParsers$$anon$2
	dup
	aload_0
	aload_1
	invokespecial	Method scala/util/parsing/combinator/RegexParsers$$anon$2."<init>":(Lscala/util/parsing/combinator/RegexParsers;Lscala/util/matching/Regex;)V
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    $this       Lscala/util/parsing/combinator/RegexParsers;
   0      10      1    r$1       Lscala/util/matching/Regex;


public static scala.util.parsing.combinator.Parsers$Parser phrase(scala.util.parsing.combinator.RegexParsers, scala.util.parsing.combinator.Parsers$Parser);
  Signature: (Lscala/util/parsing/combinator/RegexParsers;Lscala/util/parsing/combinator/Parsers$Parser;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=5, Locals=2, Args_size=2
	aload_0
	aload_1
	new	class scala/util/parsing/combinator/RegexParsers$$anonfun$phrase$1
	dup
	aload_0
	invokespecial	Method scala/util/parsing/combinator/RegexParsers$$anonfun$phrase$1."<init>":(Lscala/util/parsing/combinator/RegexParsers;)V
	invokevirtual	Method scala/util/parsing/combinator/Parsers$Parser.$less$tilde:(Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
	invokeinterface	InterfaceMethod scala/util/parsing/combinator/RegexParsers.scala$util$parsing$combinator$RegexParsers$$super$phrase:(Lscala/util/parsing/combinator/Parsers$Parser;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      19      0    $this       Lscala/util/parsing/combinator/RegexParsers;
   0      19      1    p       Lscala/util/parsing/combinator/Parsers$Parser;


public static scala.util.parsing.combinator.Parsers$ParseResult parse(scala.util.parsing.combinator.RegexParsers, scala.util.parsing.combinator.Parsers$Parser, scala.util.parsing.input.Reader);
  Signature: (Lscala/util/parsing/combinator/RegexParsers;Lscala/util/parsing/combinator/Parsers$Parser;Lscala/util/parsing/input/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
  Code:
   Stack=2, Locals=3, Args_size=3
	aload_1
	aload_2
	invokevirtual	Method scala/util/parsing/combinator/Parsers$Parser.apply:(Lscala/util/parsing/input/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    $this       Lscala/util/parsing/combinator/RegexParsers;
   0      6      1    p       Lscala/util/parsing/combinator/Parsers$Parser;
   0      6      2    in       Lscala/util/parsing/input/Reader;


public static scala.util.parsing.combinator.Parsers$ParseResult parse(scala.util.parsing.combinator.RegexParsers, scala.util.parsing.combinator.Parsers$Parser, java.lang.CharSequence);
  Signature: (Lscala/util/parsing/combinator/RegexParsers;Lscala/util/parsing/combinator/Parsers$Parser;Ljava/lang/CharSequence;)Lscala/util/parsing/combinator/Parsers$ParseResult;
  Code:
   Stack=4, Locals=3, Args_size=3
	aload_1
	new	class scala/util/parsing/input/CharSequenceReader
	dup
	aload_2
	invokespecial	Method scala/util/parsing/input/CharSequenceReader."<init>":(Ljava/lang/CharSequence;)V
	invokevirtual	Method scala/util/parsing/combinator/Parsers$Parser.apply:(Lscala/util/parsing/input/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      13      0    $this       Lscala/util/parsing/combinator/RegexParsers;
   0      13      1    p       Lscala/util/parsing/combinator/Parsers$Parser;
   0      13      2    in       Ljava/lang/CharSequence;


public static scala.util.parsing.combinator.Parsers$ParseResult parse(scala.util.parsing.combinator.RegexParsers, scala.util.parsing.combinator.Parsers$Parser, java.io.Reader);
  Signature: (Lscala/util/parsing/combinator/RegexParsers;Lscala/util/parsing/combinator/Parsers$Parser;Ljava/io/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
  Code:
   Stack=5, Locals=3, Args_size=3
	aload_1
	new	class scala/util/parsing/input/PagedSeqReader
	dup
	getstatic	Field scala/collection/immutable/PagedSeq$.MODULE$:Lscala/collection/immutable/PagedSeq$;
	aload_2
	invokevirtual	Method scala/collection/immutable/PagedSeq$.fromReader:(Ljava/io/Reader;)Lscala/collection/immutable/PagedSeq;
	invokespecial	Method scala/util/parsing/input/PagedSeqReader."<init>":(Lscala/collection/immutable/PagedSeq;)V
	invokevirtual	Method scala/util/parsing/combinator/Parsers$Parser.apply:(Lscala/util/parsing/input/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      19      0    $this       Lscala/util/parsing/combinator/RegexParsers;
   0      19      1    p       Lscala/util/parsing/combinator/Parsers$Parser;
   0      19      2    in       Ljava/io/Reader;


public static scala.util.parsing.combinator.Parsers$ParseResult parseAll(scala.util.parsing.combinator.RegexParsers, scala.util.parsing.combinator.Parsers$Parser, scala.util.parsing.input.Reader);
  Signature: (Lscala/util/parsing/combinator/RegexParsers;Lscala/util/parsing/combinator/Parsers$Parser;Lscala/util/parsing/input/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
  Code:
   Stack=3, Locals=3, Args_size=3
	aload_0
	aload_0
	aload_1
	invokeinterface	InterfaceMethod scala/util/parsing/combinator/RegexParsers.phrase:(Lscala/util/parsing/combinator/Parsers$Parser;)Lscala/util/parsing/combinator/Parsers$Parser;
	aload_2
	invokeinterface	InterfaceMethod scala/util/parsing/combinator/RegexParsers.parse:(Lscala/util/parsing/combinator/Parsers$Parser;Lscala/util/parsing/input/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      15      0    $this       Lscala/util/parsing/combinator/RegexParsers;
   0      15      1    p       Lscala/util/parsing/combinator/Parsers$Parser;
   0      15      2    in       Lscala/util/parsing/input/Reader;


public static scala.util.parsing.combinator.Parsers$ParseResult parseAll(scala.util.parsing.combinator.RegexParsers, scala.util.parsing.combinator.Parsers$Parser, java.io.Reader);
  Signature: (Lscala/util/parsing/combinator/RegexParsers;Lscala/util/parsing/combinator/Parsers$Parser;Ljava/io/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
  Code:
   Stack=3, Locals=3, Args_size=3
	aload_0
	aload_0
	aload_1
	invokeinterface	InterfaceMethod scala/util/parsing/combinator/RegexParsers.phrase:(Lscala/util/parsing/combinator/Parsers$Parser;)Lscala/util/parsing/combinator/Parsers$Parser;
	aload_2
	invokeinterface	InterfaceMethod scala/util/parsing/combinator/RegexParsers.parse:(Lscala/util/parsing/combinator/Parsers$Parser;Ljava/io/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      15      0    $this       Lscala/util/parsing/combinator/RegexParsers;
   0      15      1    p       Lscala/util/parsing/combinator/Parsers$Parser;
   0      15      2    in       Ljava/io/Reader;


public static scala.util.parsing.combinator.Parsers$ParseResult parseAll(scala.util.parsing.combinator.RegexParsers, scala.util.parsing.combinator.Parsers$Parser, java.lang.CharSequence);
  Signature: (Lscala/util/parsing/combinator/RegexParsers;Lscala/util/parsing/combinator/Parsers$Parser;Ljava/lang/CharSequence;)Lscala/util/parsing/combinator/Parsers$ParseResult;
  Code:
   Stack=3, Locals=3, Args_size=3
	aload_0
	aload_0
	aload_1
	invokeinterface	InterfaceMethod scala/util/parsing/combinator/RegexParsers.phrase:(Lscala/util/parsing/combinator/Parsers$Parser;)Lscala/util/parsing/combinator/Parsers$Parser;
	aload_2
	invokeinterface	InterfaceMethod scala/util/parsing/combinator/RegexParsers.parse:(Lscala/util/parsing/combinator/Parsers$Parser;Ljava/lang/CharSequence;)Lscala/util/parsing/combinator/Parsers$ParseResult;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      15      0    $this       Lscala/util/parsing/combinator/RegexParsers;
   0      15      1    p       Lscala/util/parsing/combinator/Parsers$Parser;
   0      15      2    in       Ljava/lang/CharSequence;


public static void $init$(scala.util.parsing.combinator.RegexParsers);
  Signature: (Lscala/util/parsing/combinator/RegexParsers;)V
  Code:
   Stack=3, Locals=1, Args_size=1
	aload_0
	getstatic	Field scala/Predef$.MODULE$:Lscala/Predef$;
	ldc	String \s+
	invokevirtual	Method scala/Predef$.augmentString:(Ljava/lang/String;)Lscala/collection/immutable/StringOps;
	invokeinterface	InterfaceMethod scala/collection/immutable/StringLike.r:()Lscala/util/matching/Regex;
	invokeinterface	InterfaceMethod scala/util/parsing/combinator/RegexParsers.scala$util$parsing$combinator$RegexParsers$_setter_$whiteSpace_$eq:(Lscala/util/matching/Regex;)V
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      20      0    $this       Lscala/util/parsing/combinator/RegexParsers;


}

