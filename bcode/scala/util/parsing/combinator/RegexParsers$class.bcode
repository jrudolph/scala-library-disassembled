Compiled from "RegexParsers.scala"
public abstract class scala.util.parsing.combinator.RegexParsers$class extends java.lang.Object
  SourceFile: "RegexParsers.scala"
  Scala: length = 0x
   
  InnerClass: 
   public #188= #146 of #134; //Match=class scala/util/matching/Regex$Match of class scala/util/matching/Regex
   public abstract #191= #74 of #190; //Parser=class scala/util/parsing/combinator/Parsers$Parser of class scala/util/parsing/combinator/Parsers
   public abstract #194= #193 of #190; //ParseResult=class scala/util/parsing/combinator/Parsers$ParseResult of class scala/util/parsing/combinator/Parsers
   public final #195= #108 of #26; //$anon$1=class scala/util/parsing/combinator/RegexParsers$$anon$1 of class scala/util/parsing/combinator/RegexParsers
   public final #196= #99 of #26; //$anon$2=class scala/util/parsing/combinator/RegexParsers$$anon$2 of class scala/util/parsing/combinator/RegexParsers
   public final #197= #86 of #26; //$anonfun$phrase$1=class scala/util/parsing/combinator/RegexParsers$$anonfun$phrase$1 of class scala/util/parsing/combinator/RegexParsers
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	RegexParsers.scala;
const #3 = Asciz	$init$;
const #4 = Asciz	(Lscala/util/parsing/combinator/RegexParsers;)V;
const #5 = Asciz	Code;
const #6 = Asciz	LineNumberTable;
const #7 = Asciz	scala/Predef$;
const #8 = class	#7;	//  scala/Predef$
const #9 = Asciz	MODULE$;
const #10 = Asciz	Lscala/Predef$;;
const #11 = NameAndType	#9:#10;//  MODULE$:Lscala/Predef$;
const #12 = Field	#8.#11;	//  scala/Predef$.MODULE$:Lscala/Predef$;
const #13 = Asciz	\s+;
const #14 = String	#13;	//  \s+
const #15 = Asciz	stringWrapper;
const #16 = Asciz	(Ljava/lang/String;)Lscala/runtime/RichString;;
const #17 = NameAndType	#15:#16;//  stringWrapper:(Ljava/lang/String;)Lscala/runtime/RichString;
const #18 = Method	#8.#17;	//  scala/Predef$.stringWrapper:(Ljava/lang/String;)Lscala/runtime/RichString;
const #19 = Asciz	scala/runtime/RichString;
const #20 = class	#19;	//  scala/runtime/RichString
const #21 = Asciz	r;
const #22 = Asciz	()Lscala/util/matching/Regex;;
const #23 = NameAndType	#21:#22;//  r:()Lscala/util/matching/Regex;
const #24 = Method	#20.#23;	//  scala/runtime/RichString.r:()Lscala/util/matching/Regex;
const #25 = Asciz	scala/util/parsing/combinator/RegexParsers;
const #26 = class	#25;	//  scala/util/parsing/combinator/RegexParsers
const #27 = Asciz	scala$util$parsing$combinator$RegexParsers$_setter_$whiteSpace_$eq;
const #28 = Asciz	(Lscala/util/matching/Regex;)V;
const #29 = NameAndType	#27:#28;//  scala$util$parsing$combinator$RegexParsers$_setter_$whiteSpace_$eq:(Lscala/util/matching/Regex;)V
const #30 = InterfaceMethod	#26.#29;	//  scala/util/parsing/combinator/RegexParsers.scala$util$parsing$combinator$RegexParsers$_setter_$whiteSpace_$eq:(Lscala/util/matching/Regex;)V
const #31 = Asciz	$this;
const #32 = Asciz	Lscala/util/parsing/combinator/RegexParsers;;
const #33 = Asciz	LocalVariableTable;
const #34 = Asciz	parseAll;
const #35 = Asciz	(Lscala/util/parsing/combinator/RegexParsers;Lscala/util/parsing/combinator/Parsers$Parser;Ljava/lang/CharSequence;)Lscala/util/parsing/combinator/Parsers$ParseResult;;
const #36 = Asciz	phrase;
const #37 = Asciz	(Lscala/util/parsing/combinator/Parsers$Parser;)Lscala/util/parsing/combinator/Parsers$Parser;;
const #38 = NameAndType	#36:#37;//  phrase:(Lscala/util/parsing/combinator/Parsers$Parser;)Lscala/util/parsing/combinator/Parsers$Parser;
const #39 = InterfaceMethod	#26.#38;	//  scala/util/parsing/combinator/RegexParsers.phrase:(Lscala/util/parsing/combinator/Parsers$Parser;)Lscala/util/parsing/combinator/Parsers$Parser;
const #40 = Asciz	parse;
const #41 = Asciz	(Lscala/util/parsing/combinator/Parsers$Parser;Ljava/lang/CharSequence;)Lscala/util/parsing/combinator/Parsers$ParseResult;;
const #42 = NameAndType	#40:#41;//  parse:(Lscala/util/parsing/combinator/Parsers$Parser;Ljava/lang/CharSequence;)Lscala/util/parsing/combinator/Parsers$ParseResult;
const #43 = InterfaceMethod	#26.#42;	//  scala/util/parsing/combinator/RegexParsers.parse:(Lscala/util/parsing/combinator/Parsers$Parser;Ljava/lang/CharSequence;)Lscala/util/parsing/combinator/Parsers$ParseResult;
const #44 = Asciz	p;
const #45 = Asciz	Lscala/util/parsing/combinator/Parsers$Parser;;
const #46 = Asciz	in;
const #47 = Asciz	Ljava/lang/CharSequence;;
const #48 = Asciz	(Lscala/util/parsing/combinator/RegexParsers;Lscala/util/parsing/combinator/Parsers$Parser;Ljava/io/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;;
const #49 = Asciz	(Lscala/util/parsing/combinator/Parsers$Parser;Ljava/io/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;;
const #50 = NameAndType	#40:#49;//  parse:(Lscala/util/parsing/combinator/Parsers$Parser;Ljava/io/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
const #51 = InterfaceMethod	#26.#50;	//  scala/util/parsing/combinator/RegexParsers.parse:(Lscala/util/parsing/combinator/Parsers$Parser;Ljava/io/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
const #52 = Asciz	Ljava/io/Reader;;
const #53 = Asciz	(Lscala/util/parsing/combinator/RegexParsers;Lscala/util/parsing/combinator/Parsers$Parser;Lscala/util/parsing/input/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;;
const #54 = Asciz	(Lscala/util/parsing/combinator/Parsers$Parser;Lscala/util/parsing/input/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;;
const #55 = NameAndType	#40:#54;//  parse:(Lscala/util/parsing/combinator/Parsers$Parser;Lscala/util/parsing/input/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
const #56 = InterfaceMethod	#26.#55;	//  scala/util/parsing/combinator/RegexParsers.parse:(Lscala/util/parsing/combinator/Parsers$Parser;Lscala/util/parsing/input/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
const #57 = Asciz	Lscala/util/parsing/input/Reader;;
const #58 = Asciz	scala/util/parsing/input/PagedSeqReader;
const #59 = class	#58;	//  scala/util/parsing/input/PagedSeqReader
const #60 = Asciz	scala/collection/immutable/PagedSeq$;
const #61 = class	#60;	//  scala/collection/immutable/PagedSeq$
const #62 = Asciz	Lscala/collection/immutable/PagedSeq$;;
const #63 = NameAndType	#9:#62;//  MODULE$:Lscala/collection/immutable/PagedSeq$;
const #64 = Field	#61.#63;	//  scala/collection/immutable/PagedSeq$.MODULE$:Lscala/collection/immutable/PagedSeq$;
const #65 = Asciz	fromReader;
const #66 = Asciz	(Ljava/io/Reader;)Lscala/collection/immutable/PagedSeq;;
const #67 = NameAndType	#65:#66;//  fromReader:(Ljava/io/Reader;)Lscala/collection/immutable/PagedSeq;
const #68 = Method	#61.#67;	//  scala/collection/immutable/PagedSeq$.fromReader:(Ljava/io/Reader;)Lscala/collection/immutable/PagedSeq;
const #69 = Asciz	<init>;
const #70 = Asciz	(Lscala/collection/immutable/PagedSeq;)V;
const #71 = NameAndType	#69:#70;//  "<init>":(Lscala/collection/immutable/PagedSeq;)V
const #72 = Method	#59.#71;	//  scala/util/parsing/input/PagedSeqReader."<init>":(Lscala/collection/immutable/PagedSeq;)V
const #73 = Asciz	scala/util/parsing/combinator/Parsers$Parser;
const #74 = class	#73;	//  scala/util/parsing/combinator/Parsers$Parser
const #75 = Asciz	apply;
const #76 = Asciz	(Lscala/util/parsing/input/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;;
const #77 = NameAndType	#75:#76;//  apply:(Lscala/util/parsing/input/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
const #78 = Method	#74.#77;	//  scala/util/parsing/combinator/Parsers$Parser.apply:(Lscala/util/parsing/input/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
const #79 = Asciz	scala/util/parsing/input/CharSequenceReader;
const #80 = class	#79;	//  scala/util/parsing/input/CharSequenceReader
const #81 = Asciz	(Ljava/lang/CharSequence;)V;
const #82 = NameAndType	#69:#81;//  "<init>":(Ljava/lang/CharSequence;)V
const #83 = Method	#80.#82;	//  scala/util/parsing/input/CharSequenceReader."<init>":(Ljava/lang/CharSequence;)V
const #84 = Asciz	(Lscala/util/parsing/combinator/RegexParsers;Lscala/util/parsing/combinator/Parsers$Parser;)Lscala/util/parsing/combinator/Parsers$Parser;;
const #85 = Asciz	scala/util/parsing/combinator/RegexParsers$$anonfun$phrase$1;
const #86 = class	#85;	//  scala/util/parsing/combinator/RegexParsers$$anonfun$phrase$1
const #87 = NameAndType	#69:#4;//  "<init>":(Lscala/util/parsing/combinator/RegexParsers;)V
const #88 = Method	#86.#87;	//  scala/util/parsing/combinator/RegexParsers$$anonfun$phrase$1."<init>":(Lscala/util/parsing/combinator/RegexParsers;)V
const #89 = Asciz	$less$tilde;
const #90 = Asciz	(Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;;
const #91 = NameAndType	#89:#90;//  $less$tilde:(Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
const #92 = Method	#74.#91;	//  scala/util/parsing/combinator/Parsers$Parser.$less$tilde:(Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
const #93 = Asciz	scala$util$parsing$combinator$RegexParsers$$super$phrase;
const #94 = NameAndType	#93:#37;//  scala$util$parsing$combinator$RegexParsers$$super$phrase:(Lscala/util/parsing/combinator/Parsers$Parser;)Lscala/util/parsing/combinator/Parsers$Parser;
const #95 = InterfaceMethod	#26.#94;	//  scala/util/parsing/combinator/RegexParsers.scala$util$parsing$combinator$RegexParsers$$super$phrase:(Lscala/util/parsing/combinator/Parsers$Parser;)Lscala/util/parsing/combinator/Parsers$Parser;
const #96 = Asciz	regex;
const #97 = Asciz	(Lscala/util/parsing/combinator/RegexParsers;Lscala/util/matching/Regex;)Lscala/util/parsing/combinator/Parsers$Parser;;
const #98 = Asciz	scala/util/parsing/combinator/RegexParsers$$anon$2;
const #99 = class	#98;	//  scala/util/parsing/combinator/RegexParsers$$anon$2
const #100 = Asciz	(Lscala/util/parsing/combinator/RegexParsers;Lscala/util/matching/Regex;)V;
const #101 = NameAndType	#69:#100;//  "<init>":(Lscala/util/parsing/combinator/RegexParsers;Lscala/util/matching/Regex;)V
const #102 = Method	#99.#101;	//  scala/util/parsing/combinator/RegexParsers$$anon$2."<init>":(Lscala/util/parsing/combinator/RegexParsers;Lscala/util/matching/Regex;)V
const #103 = Asciz	r$1;
const #104 = Asciz	Lscala/util/matching/Regex;;
const #105 = Asciz	literal;
const #106 = Asciz	(Lscala/util/parsing/combinator/RegexParsers;Ljava/lang/String;)Lscala/util/parsing/combinator/Parsers$Parser;;
const #107 = Asciz	scala/util/parsing/combinator/RegexParsers$$anon$1;
const #108 = class	#107;	//  scala/util/parsing/combinator/RegexParsers$$anon$1
const #109 = Asciz	(Lscala/util/parsing/combinator/RegexParsers;Ljava/lang/String;)V;
const #110 = NameAndType	#69:#109;//  "<init>":(Lscala/util/parsing/combinator/RegexParsers;Ljava/lang/String;)V
const #111 = Method	#108.#110;	//  scala/util/parsing/combinator/RegexParsers$$anon$1."<init>":(Lscala/util/parsing/combinator/RegexParsers;Ljava/lang/String;)V
const #112 = Asciz	s$1;
const #113 = Asciz	Ljava/lang/String;;
const #114 = Asciz	handleWhiteSpace;
const #115 = Asciz	(Lscala/util/parsing/combinator/RegexParsers;Ljava/lang/CharSequence;I)I;
const #116 = Asciz	skipWhitespace;
const #117 = Asciz	()Z;
const #118 = NameAndType	#116:#117;//  skipWhitespace:()Z
const #119 = InterfaceMethod	#26.#118;	//  scala/util/parsing/combinator/RegexParsers.skipWhitespace:()Z
const #120 = Asciz	whiteSpace;
const #121 = NameAndType	#120:#22;//  whiteSpace:()Lscala/util/matching/Regex;
const #122 = InterfaceMethod	#26.#121;	//  scala/util/parsing/combinator/RegexParsers.whiteSpace:()Lscala/util/matching/Regex;
const #123 = Asciz	java/lang/CharSequence;
const #124 = class	#123;	//  java/lang/CharSequence
const #125 = Asciz	length;
const #126 = Asciz	()I;
const #127 = NameAndType	#125:#126;//  length:()I
const #128 = InterfaceMethod	#124.#127;	//  java/lang/CharSequence.length:()I
const #129 = Asciz	subSequence;
const #130 = Asciz	(II)Ljava/lang/CharSequence;;
const #131 = NameAndType	#129:#130;//  subSequence:(II)Ljava/lang/CharSequence;
const #132 = InterfaceMethod	#124.#131;	//  java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;
const #133 = Asciz	scala/util/matching/Regex;
const #134 = class	#133;	//  scala/util/matching/Regex
const #135 = Asciz	findPrefixMatchOf;
const #136 = Asciz	(Ljava/lang/CharSequence;)Lscala/Option;;
const #137 = NameAndType	#135:#136;//  findPrefixMatchOf:(Ljava/lang/CharSequence;)Lscala/Option;
const #138 = Method	#134.#137;	//  scala/util/matching/Regex.findPrefixMatchOf:(Ljava/lang/CharSequence;)Lscala/Option;
const #139 = Asciz	scala/Some;
const #140 = class	#139;	//  scala/Some
const #141 = Asciz	x;
const #142 = Asciz	()Ljava/lang/Object;;
const #143 = NameAndType	#141:#142;//  x:()Ljava/lang/Object;
const #144 = Method	#140.#143;	//  scala/Some.x:()Ljava/lang/Object;
const #145 = Asciz	scala/util/matching/Regex$Match;
const #146 = class	#145;	//  scala/util/matching/Regex$Match
const #147 = Asciz	end;
const #148 = NameAndType	#147:#126;//  end:()I
const #149 = Method	#146.#148;	//  scala/util/matching/Regex$Match.end:()I
const #150 = Asciz	scala/None$;
const #151 = class	#150;	//  scala/None$
const #152 = Asciz	Lscala/None$;;
const #153 = NameAndType	#9:#152;//  MODULE$:Lscala/None$;
const #154 = Field	#151.#153;	//  scala/None$.MODULE$:Lscala/None$;
const #155 = Asciz	java/lang/Object;
const #156 = class	#155;	//  java/lang/Object
const #157 = Asciz	equals;
const #158 = Asciz	(Ljava/lang/Object;)Z;
const #159 = NameAndType	#157:#158;//  equals:(Ljava/lang/Object;)Z
const #160 = Method	#156.#159;	//  java/lang/Object.equals:(Ljava/lang/Object;)Z
const #161 = Asciz	scala/MatchError;
const #162 = class	#161;	//  scala/MatchError
const #163 = Asciz	scala/Option;
const #164 = class	#163;	//  scala/Option
const #165 = Asciz	toString;
const #166 = Asciz	()Ljava/lang/String;;
const #167 = NameAndType	#165:#166;//  toString:()Ljava/lang/String;
const #168 = Method	#164.#167;	//  scala/Option.toString:()Ljava/lang/String;
const #169 = Asciz	(Ljava/lang/String;)V;
const #170 = NameAndType	#69:#169;//  "<init>":(Ljava/lang/String;)V
const #171 = Method	#162.#170;	//  scala/MatchError."<init>":(Ljava/lang/String;)V
const #172 = Asciz	source;
const #173 = Asciz	offset;
const #174 = Asciz	I;
const #175 = Asciz	temp1;
const #176 = Asciz	Lscala/Option;;
const #177 = Asciz	temp2;
const #178 = Asciz	Lscala/Some;;
const #179 = Asciz	temp3;
const #180 = Asciz	Lscala/util/matching/Regex$Match;;
const #181 = Asciz	(Lscala/util/parsing/combinator/RegexParsers;)Z;
const #182 = Method	#134.#167;	//  scala/util/matching/Regex.toString:()Ljava/lang/String;
const #183 = Asciz	java/lang/String;
const #184 = class	#183;	//  java/lang/String
const #185 = Method	#184.#127;	//  java/lang/String.length:()I
const #186 = Asciz	Scala;
const #187 = Asciz	InnerClasses;
const #188 = Asciz	Match;
const #189 = Asciz	scala/util/parsing/combinator/Parsers;
const #190 = class	#189;	//  scala/util/parsing/combinator/Parsers
const #191 = Asciz	Parser;
const #192 = Asciz	scala/util/parsing/combinator/Parsers$ParseResult;
const #193 = class	#192;	//  scala/util/parsing/combinator/Parsers$ParseResult
const #194 = Asciz	ParseResult;
const #195 = Asciz	$anon$1;
const #196 = Asciz	$anon$2;
const #197 = Asciz	$anonfun$phrase$1;
const #198 = Asciz	scala/util/parsing/combinator/RegexParsers$class;
const #199 = class	#198;	//  scala/util/parsing/combinator/RegexParsers$class

{
public static void $init$(scala.util.parsing.combinator.RegexParsers);
  Code:
   Stack=3, Locals=1, Args_size=1
   0:	aload_0
   1:	getstatic	#12; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   4:	ldc	#14; //String \s+
   6:	invokevirtual	#18; //Method scala/Predef$.stringWrapper:(Ljava/lang/String;)Lscala/runtime/RichString;
   9:	invokevirtual	#24; //Method scala/runtime/RichString.r:()Lscala/util/matching/Regex;
   12:	invokeinterface	#30,  2; //InterfaceMethod scala/util/parsing/combinator/RegexParsers.scala$util$parsing$combinator$RegexParsers$_setter_$whiteSpace_$eq:(Lscala/util/matching/Regex;)V
   17:	return
  LineNumberTable: 
   line 22: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      18      0    $this       Lscala/util/parsing/combinator/RegexParsers;


public static scala.util.parsing.combinator.Parsers$ParseResult parseAll(scala.util.parsing.combinator.RegexParsers, scala.util.parsing.combinator.Parsers$Parser, java.lang.CharSequence);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_0
   2:	aload_1
   3:	invokeinterface	#39,  2; //InterfaceMethod scala/util/parsing/combinator/RegexParsers.phrase:(Lscala/util/parsing/combinator/Parsers$Parser;)Lscala/util/parsing/combinator/Parsers$Parser;
   8:	aload_2
   9:	invokeinterface	#43,  3; //InterfaceMethod scala/util/parsing/combinator/RegexParsers.parse:(Lscala/util/parsing/combinator/Parsers$Parser;Ljava/lang/CharSequence;)Lscala/util/parsing/combinator/Parsers$ParseResult;
   14:	areturn
  LineNumberTable: 
   line 95: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      15      0    $this       Lscala/util/parsing/combinator/RegexParsers;
   0      15      1    p       Lscala/util/parsing/combinator/Parsers$Parser;
   0      15      2    in       Ljava/lang/CharSequence;


public static scala.util.parsing.combinator.Parsers$ParseResult parseAll(scala.util.parsing.combinator.RegexParsers, scala.util.parsing.combinator.Parsers$Parser, java.io.Reader);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_0
   2:	aload_1
   3:	invokeinterface	#39,  2; //InterfaceMethod scala/util/parsing/combinator/RegexParsers.phrase:(Lscala/util/parsing/combinator/Parsers$Parser;)Lscala/util/parsing/combinator/Parsers$Parser;
   8:	aload_2
   9:	invokeinterface	#51,  3; //InterfaceMethod scala/util/parsing/combinator/RegexParsers.parse:(Lscala/util/parsing/combinator/Parsers$Parser;Ljava/io/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
   14:	areturn
  LineNumberTable: 
   line 91: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      15      0    $this       Lscala/util/parsing/combinator/RegexParsers;
   0      15      1    p       Lscala/util/parsing/combinator/Parsers$Parser;
   0      15      2    in       Ljava/io/Reader;


public static scala.util.parsing.combinator.Parsers$ParseResult parseAll(scala.util.parsing.combinator.RegexParsers, scala.util.parsing.combinator.Parsers$Parser, scala.util.parsing.input.Reader);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_0
   2:	aload_1
   3:	invokeinterface	#39,  2; //InterfaceMethod scala/util/parsing/combinator/RegexParsers.phrase:(Lscala/util/parsing/combinator/Parsers$Parser;)Lscala/util/parsing/combinator/Parsers$Parser;
   8:	aload_2
   9:	invokeinterface	#56,  3; //InterfaceMethod scala/util/parsing/combinator/RegexParsers.parse:(Lscala/util/parsing/combinator/Parsers$Parser;Lscala/util/parsing/input/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
   14:	areturn
  LineNumberTable: 
   line 87: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      15      0    $this       Lscala/util/parsing/combinator/RegexParsers;
   0      15      1    p       Lscala/util/parsing/combinator/Parsers$Parser;
   0      15      2    in       Lscala/util/parsing/input/Reader;


public static scala.util.parsing.combinator.Parsers$ParseResult parse(scala.util.parsing.combinator.RegexParsers, scala.util.parsing.combinator.Parsers$Parser, java.io.Reader);
  Code:
   Stack=5, Locals=3, Args_size=3
   0:	aload_1
   1:	new	#59; //class scala/util/parsing/input/PagedSeqReader
   4:	dup
   5:	getstatic	#64; //Field scala/collection/immutable/PagedSeq$.MODULE$:Lscala/collection/immutable/PagedSeq$;
   8:	aload_2
   9:	invokevirtual	#68; //Method scala/collection/immutable/PagedSeq$.fromReader:(Ljava/io/Reader;)Lscala/collection/immutable/PagedSeq;
   12:	invokespecial	#72; //Method scala/util/parsing/input/PagedSeqReader."<init>":(Lscala/collection/immutable/PagedSeq;)V
   15:	invokevirtual	#78; //Method scala/util/parsing/combinator/Parsers$Parser.apply:(Lscala/util/parsing/input/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
   18:	areturn
  LineNumberTable: 
   line 83: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      19      0    $this       Lscala/util/parsing/combinator/RegexParsers;
   0      19      1    p       Lscala/util/parsing/combinator/Parsers$Parser;
   0      19      2    in       Ljava/io/Reader;


public static scala.util.parsing.combinator.Parsers$ParseResult parse(scala.util.parsing.combinator.RegexParsers, scala.util.parsing.combinator.Parsers$Parser, java.lang.CharSequence);
  Code:
   Stack=4, Locals=3, Args_size=3
   0:	aload_1
   1:	new	#80; //class scala/util/parsing/input/CharSequenceReader
   4:	dup
   5:	aload_2
   6:	invokespecial	#83; //Method scala/util/parsing/input/CharSequenceReader."<init>":(Ljava/lang/CharSequence;)V
   9:	invokevirtual	#78; //Method scala/util/parsing/combinator/Parsers$Parser.apply:(Lscala/util/parsing/input/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
   12:	areturn
  LineNumberTable: 
   line 79: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      13      0    $this       Lscala/util/parsing/combinator/RegexParsers;
   0      13      1    p       Lscala/util/parsing/combinator/Parsers$Parser;
   0      13      2    in       Ljava/lang/CharSequence;


public static scala.util.parsing.combinator.Parsers$ParseResult parse(scala.util.parsing.combinator.RegexParsers, scala.util.parsing.combinator.Parsers$Parser, scala.util.parsing.input.Reader);
  Code:
   Stack=2, Locals=3, Args_size=3
   0:	aload_1
   1:	aload_2
   2:	invokevirtual	#78; //Method scala/util/parsing/combinator/Parsers$Parser.apply:(Lscala/util/parsing/input/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
   5:	areturn
  LineNumberTable: 
   line 75: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    $this       Lscala/util/parsing/combinator/RegexParsers;
   0      6      1    p       Lscala/util/parsing/combinator/Parsers$Parser;
   0      6      2    in       Lscala/util/parsing/input/Reader;


public static scala.util.parsing.combinator.Parsers$Parser phrase(scala.util.parsing.combinator.RegexParsers, scala.util.parsing.combinator.Parsers$Parser);
  Code:
   Stack=5, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	new	#86; //class scala/util/parsing/combinator/RegexParsers$$anonfun$phrase$1
   5:	dup
   6:	aload_0
   7:	invokespecial	#88; //Method scala/util/parsing/combinator/RegexParsers$$anonfun$phrase$1."<init>":(Lscala/util/parsing/combinator/RegexParsers;)V
   10:	invokevirtual	#92; //Method scala/util/parsing/combinator/Parsers$Parser.$less$tilde:(Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
   13:	invokeinterface	#95,  2; //InterfaceMethod scala/util/parsing/combinator/RegexParsers.scala$util$parsing$combinator$RegexParsers$$super$phrase:(Lscala/util/parsing/combinator/Parsers$Parser;)Lscala/util/parsing/combinator/Parsers$Parser;
   18:	areturn
  LineNumberTable: 
   line 71: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      19      0    $this       Lscala/util/parsing/combinator/RegexParsers;
   0      19      1    p       Lscala/util/parsing/combinator/Parsers$Parser;


public static scala.util.parsing.combinator.Parsers$Parser regex(scala.util.parsing.combinator.RegexParsers, scala.util.matching.Regex);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#99; //class scala/util/parsing/combinator/RegexParsers$$anon$2
   3:	dup
   4:	aload_0
   5:	aload_1
   6:	invokespecial	#102; //Method scala/util/parsing/combinator/RegexParsers$$anon$2."<init>":(Lscala/util/parsing/combinator/RegexParsers;Lscala/util/matching/Regex;)V
   9:	areturn
  LineNumberTable: 
   line 55: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    $this       Lscala/util/parsing/combinator/RegexParsers;
   0      10      1    r$1       Lscala/util/matching/Regex;


public static scala.util.parsing.combinator.Parsers$Parser literal(scala.util.parsing.combinator.RegexParsers, java.lang.String);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#108; //class scala/util/parsing/combinator/RegexParsers$$anon$1
   3:	dup
   4:	aload_0
   5:	aload_1
   6:	invokespecial	#111; //Method scala/util/parsing/combinator/RegexParsers$$anon$1."<init>":(Lscala/util/parsing/combinator/RegexParsers;Ljava/lang/String;)V
   9:	areturn
  LineNumberTable: 
   line 36: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    $this       Lscala/util/parsing/combinator/RegexParsers;
   0      10      1    s$1       Ljava/lang/String;


public static int handleWhiteSpace(scala.util.parsing.combinator.RegexParsers, java.lang.CharSequence, int);
  Code:
   Stack=4, Locals=7, Args_size=3
   0:	aload_0
   1:	invokeinterface	#119,  1; //InterfaceMethod scala/util/parsing/combinator/RegexParsers.skipWhitespace:()Z
   6:	ifeq	115
   9:	aload_0
   10:	invokeinterface	#122,  1; //InterfaceMethod scala/util/parsing/combinator/RegexParsers.whiteSpace:()Lscala/util/matching/Regex;
   15:	aload_1
   16:	iload_2
   17:	aload_1
   18:	invokeinterface	#128,  1; //InterfaceMethod java/lang/CharSequence.length:()I
   23:	invokeinterface	#132,  3; //InterfaceMethod java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;
   28:	invokevirtual	#138; //Method scala/util/matching/Regex.findPrefixMatchOf:(Ljava/lang/CharSequence;)Lscala/Option;
   31:	astore_3
   32:	aload_3
   33:	instanceof	#140; //class scala/Some
   36:	ifeq	65
   39:	aload_3
   40:	checkcast	#140; //class scala/Some
   43:	astore	4
   45:	aload	4
   47:	invokevirtual	#144; //Method scala/Some.x:()Ljava/lang/Object;
   50:	checkcast	#146; //class scala/util/matching/Regex$Match
   53:	astore	5
   55:	iload_2
   56:	aload	5
   58:	invokevirtual	#149; //Method scala/util/matching/Regex$Match.end:()I
   61:	iadd
   62:	goto	116
   65:	getstatic	#154; //Field scala/None$.MODULE$:Lscala/None$;
   68:	aload_3
   69:	astore	6
   71:	dup
   72:	ifnonnull	84
   75:	pop
   76:	aload	6
   78:	ifnull	92
   81:	goto	103
   84:	aload	6
   86:	invokevirtual	#160; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   89:	ifeq	103
   92:	aload_3
   93:	instanceof	#151; //class scala/None$
   96:	ifeq	103
   99:	iload_2
   100:	goto	116
   103:	new	#162; //class scala/MatchError
   106:	dup
   107:	aload_3
   108:	invokevirtual	#168; //Method scala/Option.toString:()Ljava/lang/String;
   111:	invokespecial	#171; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   114:	athrow
   115:	iload_2
   116:	ireturn
  LineNumberTable: 
   line 27: 0
   line 28: 9
   line 29: 55
   line 28: 65
   line 30: 99
   line 28: 103
   line 33: 115
   line 27: 116

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      117      0    $this       Lscala/util/parsing/combinator/RegexParsers;
   0      117      1    source       Ljava/lang/CharSequence;
   0      117      2    offset       I
   32      83      3    temp1       Lscala/Option;
   45      17      4    temp2       Lscala/Some;
   55      7      5    temp3       Lscala/util/matching/Regex$Match;


public static boolean skipWhitespace(scala.util.parsing.combinator.RegexParsers);
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	invokeinterface	#122,  1; //InterfaceMethod scala/util/parsing/combinator/RegexParsers.whiteSpace:()Lscala/util/matching/Regex;
   6:	invokevirtual	#182; //Method scala/util/matching/Regex.toString:()Ljava/lang/String;
   9:	invokevirtual	#185; //Method java/lang/String.length:()I
   12:	iconst_0
   13:	if_icmple	20
   16:	iconst_1
   17:	goto	21
   20:	iconst_0
   21:	ireturn
  LineNumberTable: 
   line 24: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      22      0    $this       Lscala/util/parsing/combinator/RegexParsers;


}

