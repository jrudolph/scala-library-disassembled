Compiled from "RegexTest.scala"
public final class scala.util.parsing.combinator.testing.RegexTest extends java.lang.Object
  SourceFile: "RegexTest.scala"
  ScalaSig: length = 0x3
   05 00 00 
  RuntimeVisibleAnnotations: length = 0xB
   00 01 00 FFFFFFAF 00 01 00 FFFFFFB0 73 00 FFFFFFB1 
  InnerClass: 
   public abstract Parser=class scala/util/parsing/combinator/Parsers$Parser of class scala/util/parsing/combinator/Parsers
   public abstract NoSuccess=class scala/util/parsing/combinator/Parsers$NoSuccess of class scala/util/parsing/combinator/Parsers
   public abstract OnceParser=class scala/util/parsing/combinator/Parsers$OnceParser of class scala/util/parsing/combinator/Parsers
   public abstract ParseResult=class scala/util/parsing/combinator/Parsers$ParseResult of class scala/util/parsing/combinator/Parsers
   public final $anonfun$5=class scala/util/parsing/combinator/testing/RegexTest$$anonfun$5 of class scala/util/parsing/combinator/testing/RegexTest
   public final $anonfun$4=class scala/util/parsing/combinator/testing/RegexTest$$anonfun$4 of class scala/util/parsing/combinator/testing/RegexTest
   public final $anonfun$3=class scala/util/parsing/combinator/testing/RegexTest$$anonfun$3 of class scala/util/parsing/combinator/testing/RegexTest
   public final $anonfun$2=class scala/util/parsing/combinator/testing/RegexTest$$anonfun$2 of class scala/util/parsing/combinator/testing/RegexTest
   public final $anonfun$1=class scala/util/parsing/combinator/testing/RegexTest$$anonfun$1 of class scala/util/parsing/combinator/testing/RegexTest
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	RegexTest.scala;
Asciz	mkList;
Asciz	()Lscala/Function1;;
Asciz	Code;
Asciz	scala/util/parsing/combinator/testing/RegexTest$;
class	scala/util/parsing/combinator/testing/RegexTest$
Asciz	MODULE$;
Asciz	Lscala/util/parsing/combinator/testing/RegexTest$;;
NameAndType	MODULE$:Lscala/util/parsing/combinator/testing/RegexTest$;
Field	scala/util/parsing/combinator/testing/RegexTest$.MODULE$:Lscala/util/parsing/combinator/testing/RegexTest$;
NameAndType	mkList:()Lscala/Function1;
Method	scala/util/parsing/combinator/testing/RegexTest$.mkList:()Lscala/Function1;
Asciz	positioned;
Asciz	(Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;;
NameAndType	positioned:(Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/testing/RegexTest$.positioned:(Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	guard;
NameAndType	guard:(Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/testing/RegexTest$.guard:(Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	not;
NameAndType	not:(Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/testing/RegexTest$.not:(Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	opt;
NameAndType	opt:(Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/testing/RegexTest$.opt:(Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	chainr1;
Asciz	(Lscala/Function0;Lscala/Function0;Lscala/Function2;Ljava/lang/Object;)Lscala/util/parsing/combinator/Parsers$Parser;;
NameAndType	chainr1:(Lscala/Function0;Lscala/Function0;Lscala/Function2;Ljava/lang/Object;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/testing/RegexTest$.chainr1:(Lscala/Function0;Lscala/Function0;Lscala/Function2;Ljava/lang/Object;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	chainl1;
Asciz	(Lscala/Function0;Lscala/Function0;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;;
NameAndType	chainl1:(Lscala/Function0;Lscala/Function0;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/testing/RegexTest$.chainl1:(Lscala/Function0;Lscala/Function0;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	(Lscala/Function0;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;;
NameAndType	chainl1:(Lscala/Function0;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/testing/RegexTest$.chainl1:(Lscala/Function0;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	rep1sep;
NameAndType	rep1sep:(Lscala/Function0;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/testing/RegexTest$.rep1sep:(Lscala/Function0;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	repN;
Asciz	(ILscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;;
NameAndType	repN:(ILscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/testing/RegexTest$.repN:(ILscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	rep1;
NameAndType	rep1:(Lscala/Function0;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/testing/RegexTest$.rep1:(Lscala/Function0;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
NameAndType	rep1:(Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/testing/RegexTest$.rep1:(Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	repsep;
NameAndType	repsep:(Lscala/Function0;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/testing/RegexTest$.repsep:(Lscala/Function0;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	rep;
NameAndType	rep:(Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/testing/RegexTest$.rep:(Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	log;
Asciz	(Lscala/Function0;Ljava/lang/String;)Lscala/util/parsing/combinator/Parsers$Parser;;
NameAndType	log:(Lscala/Function0;Ljava/lang/String;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/testing/RegexTest$.log:(Lscala/Function0;Ljava/lang/String;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	success;
Asciz	(Ljava/lang/Object;)Lscala/util/parsing/combinator/Parsers$Parser;;
NameAndType	success:(Ljava/lang/Object;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/testing/RegexTest$.success:(Ljava/lang/Object;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	err;
Asciz	(Ljava/lang/String;)Lscala/util/parsing/combinator/Parsers$Parser;;
NameAndType	err:(Ljava/lang/String;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/testing/RegexTest$.err:(Ljava/lang/String;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	failure;
NameAndType	failure:(Ljava/lang/String;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/testing/RegexTest$.failure:(Ljava/lang/String;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	acceptSeq;
Asciz	(Ljava/lang/Object;Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$Parser;;
NameAndType	acceptSeq:(Ljava/lang/Object;Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/testing/RegexTest$.acceptSeq:(Ljava/lang/Object;Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	acceptMatch;
Asciz	(Ljava/lang/String;Lscala/PartialFunction;)Lscala/util/parsing/combinator/Parsers$Parser;;
NameAndType	acceptMatch:(Ljava/lang/String;Lscala/PartialFunction;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/testing/RegexTest$.acceptMatch:(Ljava/lang/String;Lscala/PartialFunction;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	acceptIf;
Asciz	(Lscala/Function1;Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$Parser;;
NameAndType	acceptIf:(Lscala/Function1;Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/testing/RegexTest$.acceptIf:(Lscala/Function1;Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	accept;
NameAndType	accept:(Ljava/lang/String;Lscala/PartialFunction;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/testing/RegexTest$.accept:(Ljava/lang/String;Lscala/PartialFunction;)Lscala/util/parsing/combinator/Parsers$Parser;
NameAndType	accept:(Ljava/lang/Object;Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/testing/RegexTest$.accept:(Ljava/lang/Object;Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$Parser;
NameAndType	accept:(Ljava/lang/Object;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/testing/RegexTest$.accept:(Ljava/lang/Object;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	elem;
NameAndType	elem:(Ljava/lang/Object;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/testing/RegexTest$.elem:(Ljava/lang/Object;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	(Ljava/lang/String;Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$Parser;;
NameAndType	elem:(Ljava/lang/String;Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/testing/RegexTest$.elem:(Ljava/lang/String;Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	commit;
NameAndType	commit:(Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/testing/RegexTest$.commit:(Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	OnceParser;
Asciz	(Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$OnceParser;;
NameAndType	OnceParser:(Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$OnceParser;
Method	scala/util/parsing/combinator/testing/RegexTest$.OnceParser:(Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$OnceParser;
Asciz	Parser;
Asciz	(Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$Parser;;
NameAndType	Parser:(Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/testing/RegexTest$.Parser:(Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	lastNoSuccess_$eq;
Asciz	(Lscala/util/parsing/combinator/Parsers$NoSuccess;)V;
NameAndType	lastNoSuccess_$eq:(Lscala/util/parsing/combinator/Parsers$NoSuccess;)V
Method	scala/util/parsing/combinator/testing/RegexTest$.lastNoSuccess_$eq:(Lscala/util/parsing/combinator/Parsers$NoSuccess;)V
Asciz	lastNoSuccess;
Asciz	()Lscala/util/parsing/combinator/Parsers$NoSuccess;;
NameAndType	lastNoSuccess:()Lscala/util/parsing/combinator/Parsers$NoSuccess;
Method	scala/util/parsing/combinator/testing/RegexTest$.lastNoSuccess:()Lscala/util/parsing/combinator/Parsers$NoSuccess;
Asciz	parseAll;
Asciz	(Lscala/util/parsing/combinator/Parsers$Parser;Ljava/lang/CharSequence;)Lscala/util/parsing/combinator/Parsers$ParseResult;;
NameAndType	parseAll:(Lscala/util/parsing/combinator/Parsers$Parser;Ljava/lang/CharSequence;)Lscala/util/parsing/combinator/Parsers$ParseResult;
Method	scala/util/parsing/combinator/testing/RegexTest$.parseAll:(Lscala/util/parsing/combinator/Parsers$Parser;Ljava/lang/CharSequence;)Lscala/util/parsing/combinator/Parsers$ParseResult;
Asciz	(Lscala/util/parsing/combinator/Parsers$Parser;Ljava/io/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;;
NameAndType	parseAll:(Lscala/util/parsing/combinator/Parsers$Parser;Ljava/io/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
Method	scala/util/parsing/combinator/testing/RegexTest$.parseAll:(Lscala/util/parsing/combinator/Parsers$Parser;Ljava/io/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
Asciz	(Lscala/util/parsing/combinator/Parsers$Parser;Lscala/util/parsing/input/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;;
NameAndType	parseAll:(Lscala/util/parsing/combinator/Parsers$Parser;Lscala/util/parsing/input/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
Method	scala/util/parsing/combinator/testing/RegexTest$.parseAll:(Lscala/util/parsing/combinator/Parsers$Parser;Lscala/util/parsing/input/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
Asciz	parse;
NameAndType	parse:(Lscala/util/parsing/combinator/Parsers$Parser;Ljava/io/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
Method	scala/util/parsing/combinator/testing/RegexTest$.parse:(Lscala/util/parsing/combinator/Parsers$Parser;Ljava/io/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
NameAndType	parse:(Lscala/util/parsing/combinator/Parsers$Parser;Ljava/lang/CharSequence;)Lscala/util/parsing/combinator/Parsers$ParseResult;
Method	scala/util/parsing/combinator/testing/RegexTest$.parse:(Lscala/util/parsing/combinator/Parsers$Parser;Ljava/lang/CharSequence;)Lscala/util/parsing/combinator/Parsers$ParseResult;
NameAndType	parse:(Lscala/util/parsing/combinator/Parsers$Parser;Lscala/util/parsing/input/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
Method	scala/util/parsing/combinator/testing/RegexTest$.parse:(Lscala/util/parsing/combinator/Parsers$Parser;Lscala/util/parsing/input/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
Asciz	phrase;
Asciz	(Lscala/util/parsing/combinator/Parsers$Parser;)Lscala/util/parsing/combinator/Parsers$Parser;;
NameAndType	phrase:(Lscala/util/parsing/combinator/Parsers$Parser;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/testing/RegexTest$.phrase:(Lscala/util/parsing/combinator/Parsers$Parser;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	regex;
Asciz	(Lscala/util/matching/Regex;)Lscala/util/parsing/combinator/Parsers$Parser;;
NameAndType	regex:(Lscala/util/matching/Regex;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/testing/RegexTest$.regex:(Lscala/util/matching/Regex;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	literal;
NameAndType	literal:(Ljava/lang/String;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/testing/RegexTest$.literal:(Ljava/lang/String;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	skipWhitespace;
Asciz	()Z;
NameAndType	skipWhitespace:()Z
Method	scala/util/parsing/combinator/testing/RegexTest$.skipWhitespace:()Z
Asciz	scala$util$parsing$combinator$RegexParsers$_setter_$whiteSpace_$eq;
Asciz	(Lscala/util/matching/Regex;)V;
NameAndType	scala$util$parsing$combinator$RegexParsers$_setter_$whiteSpace_$eq:(Lscala/util/matching/Regex;)V
Method	scala/util/parsing/combinator/testing/RegexTest$.scala$util$parsing$combinator$RegexParsers$_setter_$whiteSpace_$eq:(Lscala/util/matching/Regex;)V
Asciz	scala$util$parsing$combinator$RegexParsers$$super$phrase;
NameAndType	scala$util$parsing$combinator$RegexParsers$$super$phrase:(Lscala/util/parsing/combinator/Parsers$Parser;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/testing/RegexTest$.scala$util$parsing$combinator$RegexParsers$$super$phrase:(Lscala/util/parsing/combinator/Parsers$Parser;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	main;
Asciz	([Ljava/lang/String;)V;
NameAndType	main:([Ljava/lang/String;)V
Method	scala/util/parsing/combinator/testing/RegexTest$.main:([Ljava/lang/String;)V
Asciz	parser;
Asciz	()Lscala/util/parsing/combinator/Parsers$Parser;;
NameAndType	parser:()Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/testing/RegexTest$.parser:()Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	()Lscala/util/parsing/combinator/Parsers$Parser<Lscala/collection/immutable/List<Ljava/lang/Object;>;>;;
Asciz	Signature;
Asciz	string;
NameAndType	string:()Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/testing/RegexTest$.string:()Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	()Lscala/util/parsing/combinator/Parsers$Parser<Ljava/lang/Object;>;;
Asciz	number;
NameAndType	number:()Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/testing/RegexTest$.number:()Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	ident;
NameAndType	ident:()Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/testing/RegexTest$.ident:()Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	ScalaSig;
Asciz	Lscala/reflect/ScalaSignature;;
Asciz	bytes;
Asciz	};Q!\t5\tBU3hKb$Vm;\r!a;fgRLgn\t!bY8nE&t\r^8s\t9\"AqCJN\4%QB;uS2TaCgG.Y!\tqq\"D\r!\"\"A\t\"!*fODH+Z:u'y!CMAR\"U17b]TaFU4-)\t1qJ6fGR\"aI!!I+w-=QCJXM]:}S\"\nR!aC*dC2wJ6fGRDQaI\naP5oSRtD#A\tz!!CO)Z3oiV\tE*U9jaDW1aU1sgBAM]:feN\"aH\nAR!aA!os\"1!gQ\n!\na!3f]Rb%\taJ]Vl'-:\t\rYz!)qW/2feBqOCq%tiJLgnu=M$(/8hA!9Ahb\niA9beN,'/F?!\rI#f\t\"scBA!G\tU)DD\t!E\"=e>|GOP%qICa7.Y4f\tI%JMSN$(BA$au)A}9/:tKJ\"(\tyB7bS:$\"U*}\tB*)f.;\tQkA+\txm\t?YCBA,\t%O]1z!\tIFL 5&1LC!J,G-4\nus&AB*ue&twM\;
Asciz	RuntimeVisibleAnnotations;
Asciz	InnerClasses;
Asciz	scala/util/parsing/combinator/Parsers$Parser;
class	scala/util/parsing/combinator/Parsers$Parser
Asciz	scala/util/parsing/combinator/Parsers;
class	scala/util/parsing/combinator/Parsers
Asciz	scala/util/parsing/combinator/Parsers$NoSuccess;
class	scala/util/parsing/combinator/Parsers$NoSuccess
Asciz	NoSuccess;
Asciz	scala/util/parsing/combinator/Parsers$OnceParser;
class	scala/util/parsing/combinator/Parsers$OnceParser
Asciz	scala/util/parsing/combinator/Parsers$ParseResult;
class	scala/util/parsing/combinator/Parsers$ParseResult
Asciz	ParseResult;
Asciz	scala/util/parsing/combinator/testing/RegexTest$$anonfun$5;
class	scala/util/parsing/combinator/testing/RegexTest$$anonfun$5
Asciz	scala/util/parsing/combinator/testing/RegexTest;
class	scala/util/parsing/combinator/testing/RegexTest
Asciz	$anonfun$5;
Asciz	scala/util/parsing/combinator/testing/RegexTest$$anonfun$4;
class	scala/util/parsing/combinator/testing/RegexTest$$anonfun$4
Asciz	$anonfun$4;
Asciz	scala/util/parsing/combinator/testing/RegexTest$$anonfun$3;
class	scala/util/parsing/combinator/testing/RegexTest$$anonfun$3
Asciz	$anonfun$3;
Asciz	scala/util/parsing/combinator/testing/RegexTest$$anonfun$2;
class	scala/util/parsing/combinator/testing/RegexTest$$anonfun$2
Asciz	$anonfun$2;
Asciz	scala/util/parsing/combinator/testing/RegexTest$$anonfun$1;
class	scala/util/parsing/combinator/testing/RegexTest$$anonfun$1
Asciz	$anonfun$1;
Asciz	java/lang/Object;
class	java/lang/Object

{
public static final scala.Function1 mkList();
  Signature: ()Lscala/Function1;
  Code:
   Stack=1, Locals=0, Args_size=0
	getstatic	Field scala/util/parsing/combinator/testing/RegexTest$.MODULE$:Lscala/util/parsing/combinator/testing/RegexTest$;
	invokevirtual	Method scala/util/parsing/combinator/testing/RegexTest$.mkList:()Lscala/Function1;
	areturn
  Labels:

public static final scala.util.parsing.combinator.Parsers$Parser positioned(scala.Function0);
  Signature: (Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=2, Locals=1, Args_size=1
	getstatic	Field scala/util/parsing/combinator/testing/RegexTest$.MODULE$:Lscala/util/parsing/combinator/testing/RegexTest$;
	aload_0
	invokevirtual	Method scala/util/parsing/combinator/testing/RegexTest$.positioned:(Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:

public static final scala.util.parsing.combinator.Parsers$Parser guard(scala.Function0);
  Signature: (Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=2, Locals=1, Args_size=1
	getstatic	Field scala/util/parsing/combinator/testing/RegexTest$.MODULE$:Lscala/util/parsing/combinator/testing/RegexTest$;
	aload_0
	invokevirtual	Method scala/util/parsing/combinator/testing/RegexTest$.guard:(Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:

public static final scala.util.parsing.combinator.Parsers$Parser not(scala.Function0);
  Signature: (Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=2, Locals=1, Args_size=1
	getstatic	Field scala/util/parsing/combinator/testing/RegexTest$.MODULE$:Lscala/util/parsing/combinator/testing/RegexTest$;
	aload_0
	invokevirtual	Method scala/util/parsing/combinator/testing/RegexTest$.not:(Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:

public static final scala.util.parsing.combinator.Parsers$Parser opt(scala.Function0);
  Signature: (Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=2, Locals=1, Args_size=1
	getstatic	Field scala/util/parsing/combinator/testing/RegexTest$.MODULE$:Lscala/util/parsing/combinator/testing/RegexTest$;
	aload_0
	invokevirtual	Method scala/util/parsing/combinator/testing/RegexTest$.opt:(Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:

public static final scala.util.parsing.combinator.Parsers$Parser chainr1(scala.Function0, scala.Function0, scala.Function2, java.lang.Object);
  Signature: (Lscala/Function0;Lscala/Function0;Lscala/Function2;Ljava/lang/Object;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=5, Locals=4, Args_size=4
	getstatic	Field scala/util/parsing/combinator/testing/RegexTest$.MODULE$:Lscala/util/parsing/combinator/testing/RegexTest$;
	aload_0
	aload_1
	aload_2
	aload_3
	invokevirtual	Method scala/util/parsing/combinator/testing/RegexTest$.chainr1:(Lscala/Function0;Lscala/Function0;Lscala/Function2;Ljava/lang/Object;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:

public static final scala.util.parsing.combinator.Parsers$Parser chainl1(scala.Function0, scala.Function0, scala.Function0);
  Signature: (Lscala/Function0;Lscala/Function0;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=4, Locals=3, Args_size=3
	getstatic	Field scala/util/parsing/combinator/testing/RegexTest$.MODULE$:Lscala/util/parsing/combinator/testing/RegexTest$;
	aload_0
	aload_1
	aload_2
	invokevirtual	Method scala/util/parsing/combinator/testing/RegexTest$.chainl1:(Lscala/Function0;Lscala/Function0;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:

public static final scala.util.parsing.combinator.Parsers$Parser chainl1(scala.Function0, scala.Function0);
  Signature: (Lscala/Function0;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=3, Locals=2, Args_size=2
	getstatic	Field scala/util/parsing/combinator/testing/RegexTest$.MODULE$:Lscala/util/parsing/combinator/testing/RegexTest$;
	aload_0
	aload_1
	invokevirtual	Method scala/util/parsing/combinator/testing/RegexTest$.chainl1:(Lscala/Function0;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:

public static final scala.util.parsing.combinator.Parsers$Parser rep1sep(scala.Function0, scala.Function0);
  Signature: (Lscala/Function0;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=3, Locals=2, Args_size=2
	getstatic	Field scala/util/parsing/combinator/testing/RegexTest$.MODULE$:Lscala/util/parsing/combinator/testing/RegexTest$;
	aload_0
	aload_1
	invokevirtual	Method scala/util/parsing/combinator/testing/RegexTest$.rep1sep:(Lscala/Function0;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:

public static final scala.util.parsing.combinator.Parsers$Parser repN(int, scala.Function0);
  Signature: (ILscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=3, Locals=2, Args_size=2
	getstatic	Field scala/util/parsing/combinator/testing/RegexTest$.MODULE$:Lscala/util/parsing/combinator/testing/RegexTest$;
	iload_0
	aload_1
	invokevirtual	Method scala/util/parsing/combinator/testing/RegexTest$.repN:(ILscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:

public static final scala.util.parsing.combinator.Parsers$Parser rep1(scala.Function0, scala.Function0);
  Signature: (Lscala/Function0;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=3, Locals=2, Args_size=2
	getstatic	Field scala/util/parsing/combinator/testing/RegexTest$.MODULE$:Lscala/util/parsing/combinator/testing/RegexTest$;
	aload_0
	aload_1
	invokevirtual	Method scala/util/parsing/combinator/testing/RegexTest$.rep1:(Lscala/Function0;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:

public static final scala.util.parsing.combinator.Parsers$Parser rep1(scala.Function0);
  Signature: (Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=2, Locals=1, Args_size=1
	getstatic	Field scala/util/parsing/combinator/testing/RegexTest$.MODULE$:Lscala/util/parsing/combinator/testing/RegexTest$;
	aload_0
	invokevirtual	Method scala/util/parsing/combinator/testing/RegexTest$.rep1:(Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:

public static final scala.util.parsing.combinator.Parsers$Parser repsep(scala.Function0, scala.Function0);
  Signature: (Lscala/Function0;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=3, Locals=2, Args_size=2
	getstatic	Field scala/util/parsing/combinator/testing/RegexTest$.MODULE$:Lscala/util/parsing/combinator/testing/RegexTest$;
	aload_0
	aload_1
	invokevirtual	Method scala/util/parsing/combinator/testing/RegexTest$.repsep:(Lscala/Function0;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:

public static final scala.util.parsing.combinator.Parsers$Parser rep(scala.Function0);
  Signature: (Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=2, Locals=1, Args_size=1
	getstatic	Field scala/util/parsing/combinator/testing/RegexTest$.MODULE$:Lscala/util/parsing/combinator/testing/RegexTest$;
	aload_0
	invokevirtual	Method scala/util/parsing/combinator/testing/RegexTest$.rep:(Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:

public static final scala.util.parsing.combinator.Parsers$Parser log(scala.Function0, java.lang.String);
  Signature: (Lscala/Function0;Ljava/lang/String;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=3, Locals=2, Args_size=2
	getstatic	Field scala/util/parsing/combinator/testing/RegexTest$.MODULE$:Lscala/util/parsing/combinator/testing/RegexTest$;
	aload_0
	aload_1
	invokevirtual	Method scala/util/parsing/combinator/testing/RegexTest$.log:(Lscala/Function0;Ljava/lang/String;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:

public static final scala.util.parsing.combinator.Parsers$Parser success(java.lang.Object);
  Signature: (Ljava/lang/Object;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=2, Locals=1, Args_size=1
	getstatic	Field scala/util/parsing/combinator/testing/RegexTest$.MODULE$:Lscala/util/parsing/combinator/testing/RegexTest$;
	aload_0
	invokevirtual	Method scala/util/parsing/combinator/testing/RegexTest$.success:(Ljava/lang/Object;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:

public static final scala.util.parsing.combinator.Parsers$Parser err(java.lang.String);
  Signature: (Ljava/lang/String;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=2, Locals=1, Args_size=1
	getstatic	Field scala/util/parsing/combinator/testing/RegexTest$.MODULE$:Lscala/util/parsing/combinator/testing/RegexTest$;
	aload_0
	invokevirtual	Method scala/util/parsing/combinator/testing/RegexTest$.err:(Ljava/lang/String;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:

public static final scala.util.parsing.combinator.Parsers$Parser failure(java.lang.String);
  Signature: (Ljava/lang/String;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=2, Locals=1, Args_size=1
	getstatic	Field scala/util/parsing/combinator/testing/RegexTest$.MODULE$:Lscala/util/parsing/combinator/testing/RegexTest$;
	aload_0
	invokevirtual	Method scala/util/parsing/combinator/testing/RegexTest$.failure:(Ljava/lang/String;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:

public static final scala.util.parsing.combinator.Parsers$Parser acceptSeq(java.lang.Object, scala.Function1);
  Signature: (Ljava/lang/Object;Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=3, Locals=2, Args_size=2
	getstatic	Field scala/util/parsing/combinator/testing/RegexTest$.MODULE$:Lscala/util/parsing/combinator/testing/RegexTest$;
	aload_0
	aload_1
	invokevirtual	Method scala/util/parsing/combinator/testing/RegexTest$.acceptSeq:(Ljava/lang/Object;Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:

public static final scala.util.parsing.combinator.Parsers$Parser acceptMatch(java.lang.String, scala.PartialFunction);
  Signature: (Ljava/lang/String;Lscala/PartialFunction;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=3, Locals=2, Args_size=2
	getstatic	Field scala/util/parsing/combinator/testing/RegexTest$.MODULE$:Lscala/util/parsing/combinator/testing/RegexTest$;
	aload_0
	aload_1
	invokevirtual	Method scala/util/parsing/combinator/testing/RegexTest$.acceptMatch:(Ljava/lang/String;Lscala/PartialFunction;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:

public static final scala.util.parsing.combinator.Parsers$Parser acceptIf(scala.Function1, scala.Function1);
  Signature: (Lscala/Function1;Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=3, Locals=2, Args_size=2
	getstatic	Field scala/util/parsing/combinator/testing/RegexTest$.MODULE$:Lscala/util/parsing/combinator/testing/RegexTest$;
	aload_0
	aload_1
	invokevirtual	Method scala/util/parsing/combinator/testing/RegexTest$.acceptIf:(Lscala/Function1;Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:

public static final scala.util.parsing.combinator.Parsers$Parser accept(java.lang.String, scala.PartialFunction);
  Signature: (Ljava/lang/String;Lscala/PartialFunction;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=3, Locals=2, Args_size=2
	getstatic	Field scala/util/parsing/combinator/testing/RegexTest$.MODULE$:Lscala/util/parsing/combinator/testing/RegexTest$;
	aload_0
	aload_1
	invokevirtual	Method scala/util/parsing/combinator/testing/RegexTest$.accept:(Ljava/lang/String;Lscala/PartialFunction;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:

public static final scala.util.parsing.combinator.Parsers$Parser accept(java.lang.Object, scala.Function1);
  Signature: (Ljava/lang/Object;Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=3, Locals=2, Args_size=2
	getstatic	Field scala/util/parsing/combinator/testing/RegexTest$.MODULE$:Lscala/util/parsing/combinator/testing/RegexTest$;
	aload_0
	aload_1
	invokevirtual	Method scala/util/parsing/combinator/testing/RegexTest$.accept:(Ljava/lang/Object;Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:

public static final scala.util.parsing.combinator.Parsers$Parser accept(java.lang.Object);
  Signature: (Ljava/lang/Object;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=2, Locals=1, Args_size=1
	getstatic	Field scala/util/parsing/combinator/testing/RegexTest$.MODULE$:Lscala/util/parsing/combinator/testing/RegexTest$;
	aload_0
	invokevirtual	Method scala/util/parsing/combinator/testing/RegexTest$.accept:(Ljava/lang/Object;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:

public static final scala.util.parsing.combinator.Parsers$Parser elem(java.lang.Object);
  Signature: (Ljava/lang/Object;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=2, Locals=1, Args_size=1
	getstatic	Field scala/util/parsing/combinator/testing/RegexTest$.MODULE$:Lscala/util/parsing/combinator/testing/RegexTest$;
	aload_0
	invokevirtual	Method scala/util/parsing/combinator/testing/RegexTest$.elem:(Ljava/lang/Object;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:

public static final scala.util.parsing.combinator.Parsers$Parser elem(java.lang.String, scala.Function1);
  Signature: (Ljava/lang/String;Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=3, Locals=2, Args_size=2
	getstatic	Field scala/util/parsing/combinator/testing/RegexTest$.MODULE$:Lscala/util/parsing/combinator/testing/RegexTest$;
	aload_0
	aload_1
	invokevirtual	Method scala/util/parsing/combinator/testing/RegexTest$.elem:(Ljava/lang/String;Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:

public static final scala.util.parsing.combinator.Parsers$Parser commit(scala.Function0);
  Signature: (Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=2, Locals=1, Args_size=1
	getstatic	Field scala/util/parsing/combinator/testing/RegexTest$.MODULE$:Lscala/util/parsing/combinator/testing/RegexTest$;
	aload_0
	invokevirtual	Method scala/util/parsing/combinator/testing/RegexTest$.commit:(Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:

public static final scala.util.parsing.combinator.Parsers$OnceParser OnceParser(scala.Function1);
  Signature: (Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$OnceParser;
  Code:
   Stack=2, Locals=1, Args_size=1
	getstatic	Field scala/util/parsing/combinator/testing/RegexTest$.MODULE$:Lscala/util/parsing/combinator/testing/RegexTest$;
	aload_0
	invokevirtual	Method scala/util/parsing/combinator/testing/RegexTest$.OnceParser:(Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$OnceParser;
	areturn
  Labels:

public static final scala.util.parsing.combinator.Parsers$Parser Parser(scala.Function1);
  Signature: (Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=2, Locals=1, Args_size=1
	getstatic	Field scala/util/parsing/combinator/testing/RegexTest$.MODULE$:Lscala/util/parsing/combinator/testing/RegexTest$;
	aload_0
	invokevirtual	Method scala/util/parsing/combinator/testing/RegexTest$.Parser:(Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:

public static final void lastNoSuccess_$eq(scala.util.parsing.combinator.Parsers$NoSuccess);
  Signature: (Lscala/util/parsing/combinator/Parsers$NoSuccess;)V
  Code:
   Stack=2, Locals=1, Args_size=1
	getstatic	Field scala/util/parsing/combinator/testing/RegexTest$.MODULE$:Lscala/util/parsing/combinator/testing/RegexTest$;
	aload_0
	invokevirtual	Method scala/util/parsing/combinator/testing/RegexTest$.lastNoSuccess_$eq:(Lscala/util/parsing/combinator/Parsers$NoSuccess;)V
	return
  Labels:

public static final scala.util.parsing.combinator.Parsers$NoSuccess lastNoSuccess();
  Signature: ()Lscala/util/parsing/combinator/Parsers$NoSuccess;
  Code:
   Stack=1, Locals=0, Args_size=0
	getstatic	Field scala/util/parsing/combinator/testing/RegexTest$.MODULE$:Lscala/util/parsing/combinator/testing/RegexTest$;
	invokevirtual	Method scala/util/parsing/combinator/testing/RegexTest$.lastNoSuccess:()Lscala/util/parsing/combinator/Parsers$NoSuccess;
	areturn
  Labels:

public static final scala.util.parsing.combinator.Parsers$ParseResult parseAll(scala.util.parsing.combinator.Parsers$Parser, java.lang.CharSequence);
  Signature: (Lscala/util/parsing/combinator/Parsers$Parser;Ljava/lang/CharSequence;)Lscala/util/parsing/combinator/Parsers$ParseResult;
  Code:
   Stack=3, Locals=2, Args_size=2
	getstatic	Field scala/util/parsing/combinator/testing/RegexTest$.MODULE$:Lscala/util/parsing/combinator/testing/RegexTest$;
	aload_0
	aload_1
	invokevirtual	Method scala/util/parsing/combinator/testing/RegexTest$.parseAll:(Lscala/util/parsing/combinator/Parsers$Parser;Ljava/lang/CharSequence;)Lscala/util/parsing/combinator/Parsers$ParseResult;
	areturn
  Labels:

public static final scala.util.parsing.combinator.Parsers$ParseResult parseAll(scala.util.parsing.combinator.Parsers$Parser, java.io.Reader);
  Signature: (Lscala/util/parsing/combinator/Parsers$Parser;Ljava/io/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
  Code:
   Stack=3, Locals=2, Args_size=2
	getstatic	Field scala/util/parsing/combinator/testing/RegexTest$.MODULE$:Lscala/util/parsing/combinator/testing/RegexTest$;
	aload_0
	aload_1
	invokevirtual	Method scala/util/parsing/combinator/testing/RegexTest$.parseAll:(Lscala/util/parsing/combinator/Parsers$Parser;Ljava/io/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
	areturn
  Labels:

public static final scala.util.parsing.combinator.Parsers$ParseResult parseAll(scala.util.parsing.combinator.Parsers$Parser, scala.util.parsing.input.Reader);
  Signature: (Lscala/util/parsing/combinator/Parsers$Parser;Lscala/util/parsing/input/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
  Code:
   Stack=3, Locals=2, Args_size=2
	getstatic	Field scala/util/parsing/combinator/testing/RegexTest$.MODULE$:Lscala/util/parsing/combinator/testing/RegexTest$;
	aload_0
	aload_1
	invokevirtual	Method scala/util/parsing/combinator/testing/RegexTest$.parseAll:(Lscala/util/parsing/combinator/Parsers$Parser;Lscala/util/parsing/input/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
	areturn
  Labels:

public static final scala.util.parsing.combinator.Parsers$ParseResult parse(scala.util.parsing.combinator.Parsers$Parser, java.io.Reader);
  Signature: (Lscala/util/parsing/combinator/Parsers$Parser;Ljava/io/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
  Code:
   Stack=3, Locals=2, Args_size=2
	getstatic	Field scala/util/parsing/combinator/testing/RegexTest$.MODULE$:Lscala/util/parsing/combinator/testing/RegexTest$;
	aload_0
	aload_1
	invokevirtual	Method scala/util/parsing/combinator/testing/RegexTest$.parse:(Lscala/util/parsing/combinator/Parsers$Parser;Ljava/io/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
	areturn
  Labels:

public static final scala.util.parsing.combinator.Parsers$ParseResult parse(scala.util.parsing.combinator.Parsers$Parser, java.lang.CharSequence);
  Signature: (Lscala/util/parsing/combinator/Parsers$Parser;Ljava/lang/CharSequence;)Lscala/util/parsing/combinator/Parsers$ParseResult;
  Code:
   Stack=3, Locals=2, Args_size=2
	getstatic	Field scala/util/parsing/combinator/testing/RegexTest$.MODULE$:Lscala/util/parsing/combinator/testing/RegexTest$;
	aload_0
	aload_1
	invokevirtual	Method scala/util/parsing/combinator/testing/RegexTest$.parse:(Lscala/util/parsing/combinator/Parsers$Parser;Ljava/lang/CharSequence;)Lscala/util/parsing/combinator/Parsers$ParseResult;
	areturn
  Labels:

public static final scala.util.parsing.combinator.Parsers$ParseResult parse(scala.util.parsing.combinator.Parsers$Parser, scala.util.parsing.input.Reader);
  Signature: (Lscala/util/parsing/combinator/Parsers$Parser;Lscala/util/parsing/input/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
  Code:
   Stack=3, Locals=2, Args_size=2
	getstatic	Field scala/util/parsing/combinator/testing/RegexTest$.MODULE$:Lscala/util/parsing/combinator/testing/RegexTest$;
	aload_0
	aload_1
	invokevirtual	Method scala/util/parsing/combinator/testing/RegexTest$.parse:(Lscala/util/parsing/combinator/Parsers$Parser;Lscala/util/parsing/input/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
	areturn
  Labels:

public static final scala.util.parsing.combinator.Parsers$Parser phrase(scala.util.parsing.combinator.Parsers$Parser);
  Signature: (Lscala/util/parsing/combinator/Parsers$Parser;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=2, Locals=1, Args_size=1
	getstatic	Field scala/util/parsing/combinator/testing/RegexTest$.MODULE$:Lscala/util/parsing/combinator/testing/RegexTest$;
	aload_0
	invokevirtual	Method scala/util/parsing/combinator/testing/RegexTest$.phrase:(Lscala/util/parsing/combinator/Parsers$Parser;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:

public static final scala.util.parsing.combinator.Parsers$Parser regex(scala.util.matching.Regex);
  Signature: (Lscala/util/matching/Regex;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=2, Locals=1, Args_size=1
	getstatic	Field scala/util/parsing/combinator/testing/RegexTest$.MODULE$:Lscala/util/parsing/combinator/testing/RegexTest$;
	aload_0
	invokevirtual	Method scala/util/parsing/combinator/testing/RegexTest$.regex:(Lscala/util/matching/Regex;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:

public static final scala.util.parsing.combinator.Parsers$Parser literal(java.lang.String);
  Signature: (Ljava/lang/String;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=2, Locals=1, Args_size=1
	getstatic	Field scala/util/parsing/combinator/testing/RegexTest$.MODULE$:Lscala/util/parsing/combinator/testing/RegexTest$;
	aload_0
	invokevirtual	Method scala/util/parsing/combinator/testing/RegexTest$.literal:(Ljava/lang/String;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:

public static final boolean skipWhitespace();
  Signature: ()Z
  Code:
   Stack=1, Locals=0, Args_size=0
	getstatic	Field scala/util/parsing/combinator/testing/RegexTest$.MODULE$:Lscala/util/parsing/combinator/testing/RegexTest$;
	invokevirtual	Method scala/util/parsing/combinator/testing/RegexTest$.skipWhitespace:()Z
	ireturn
  Labels:

public static final void scala$util$parsing$combinator$RegexParsers$_setter_$whiteSpace_$eq(scala.util.matching.Regex);
  Signature: (Lscala/util/matching/Regex;)V
  Code:
   Stack=2, Locals=1, Args_size=1
	getstatic	Field scala/util/parsing/combinator/testing/RegexTest$.MODULE$:Lscala/util/parsing/combinator/testing/RegexTest$;
	aload_0
	invokevirtual	Method scala/util/parsing/combinator/testing/RegexTest$.scala$util$parsing$combinator$RegexParsers$_setter_$whiteSpace_$eq:(Lscala/util/matching/Regex;)V
	return
  Labels:

public static final scala.util.parsing.combinator.Parsers$Parser scala$util$parsing$combinator$RegexParsers$$super$phrase(scala.util.parsing.combinator.Parsers$Parser);
  Signature: (Lscala/util/parsing/combinator/Parsers$Parser;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=2, Locals=1, Args_size=1
	getstatic	Field scala/util/parsing/combinator/testing/RegexTest$.MODULE$:Lscala/util/parsing/combinator/testing/RegexTest$;
	aload_0
	invokevirtual	Method scala/util/parsing/combinator/testing/RegexTest$.scala$util$parsing$combinator$RegexParsers$$super$phrase:(Lscala/util/parsing/combinator/Parsers$Parser;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:

public static final void main(java.lang.String[]);
  Signature: ([Ljava/lang/String;)V
  Code:
   Stack=2, Locals=1, Args_size=1
	getstatic	Field scala/util/parsing/combinator/testing/RegexTest$.MODULE$:Lscala/util/parsing/combinator/testing/RegexTest$;
	aload_0
	invokevirtual	Method scala/util/parsing/combinator/testing/RegexTest$.main:([Ljava/lang/String;)V
	return
  Labels:

public static final scala.util.parsing.combinator.Parsers$Parser parser();
  Signature: ()Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=1, Locals=0, Args_size=0
	getstatic	Field scala/util/parsing/combinator/testing/RegexTest$.MODULE$:Lscala/util/parsing/combinator/testing/RegexTest$;
	invokevirtual	Method scala/util/parsing/combinator/testing/RegexTest$.parser:()Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:
  Signature: length = 0x2
   00 FFFFFFA2 

public static final scala.util.parsing.combinator.Parsers$Parser string();
  Signature: ()Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=1, Locals=0, Args_size=0
	getstatic	Field scala/util/parsing/combinator/testing/RegexTest$.MODULE$:Lscala/util/parsing/combinator/testing/RegexTest$;
	invokevirtual	Method scala/util/parsing/combinator/testing/RegexTest$.string:()Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:
  Signature: length = 0x2
   00 FFFFFFA7 

public static final scala.util.parsing.combinator.Parsers$Parser number();
  Signature: ()Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=1, Locals=0, Args_size=0
	getstatic	Field scala/util/parsing/combinator/testing/RegexTest$.MODULE$:Lscala/util/parsing/combinator/testing/RegexTest$;
	invokevirtual	Method scala/util/parsing/combinator/testing/RegexTest$.number:()Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:
  Signature: length = 0x2
   00 FFFFFFA7 

public static final scala.util.parsing.combinator.Parsers$Parser ident();
  Signature: ()Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=1, Locals=0, Args_size=0
	getstatic	Field scala/util/parsing/combinator/testing/RegexTest$.MODULE$:Lscala/util/parsing/combinator/testing/RegexTest$;
	invokevirtual	Method scala/util/parsing/combinator/testing/RegexTest$.ident:()Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:
  Signature: length = 0x2
   00 FFFFFFA7 

}

