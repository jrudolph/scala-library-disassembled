Compiled from "RegexTest.scala"
public final class scala.util.parsing.combinator.testing.RegexTest$ extends java.lang.Object implements scala.util.parsing.combinator.RegexParsers,scala.ScalaObject
  SourceFile: "RegexTest.scala"
  Scala: length = 0x
   
  InnerClass: 
   public abstract Parser=class scala/util/parsing/combinator/Parsers$Parser of class scala/util/parsing/combinator/Parsers
   public abstract NoSuccess=class scala/util/parsing/combinator/Parsers$NoSuccess of class scala/util/parsing/combinator/Parsers
   public abstract OnceParser=class scala/util/parsing/combinator/Parsers$OnceParser of class scala/util/parsing/combinator/Parsers
   public abstract ParseResult=class scala/util/parsing/combinator/Parsers$ParseResult of class scala/util/parsing/combinator/Parsers
   public final $anonfun$5=class scala/util/parsing/combinator/testing/RegexTest$$anonfun$5 of class scala/util/parsing/combinator/testing/RegexTest
   public final $anonfun$4=class scala/util/parsing/combinator/testing/RegexTest$$anonfun$4 of class scala/util/parsing/combinator/testing/RegexTest
   public final $anonfun$3=class scala/util/parsing/combinator/testing/RegexTest$$anonfun$3 of class scala/util/parsing/combinator/testing/RegexTest
   public final $anonfun$2=class scala/util/parsing/combinator/testing/RegexTest$$anonfun$2 of class scala/util/parsing/combinator/testing/RegexTest
   public final $anonfun$1=class scala/util/parsing/combinator/testing/RegexTest$$anonfun$1 of class scala/util/parsing/combinator/testing/RegexTest
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	RegexTest.scala;
Asciz	MODULE$;
Asciz	Lscala/util/parsing/combinator/testing/RegexTest$;;
Asciz	<clinit>;
Asciz	()V;
Asciz	Code;
Asciz	scala/util/parsing/combinator/testing/RegexTest$;
class	scala/util/parsing/combinator/testing/RegexTest$
Asciz	<init>;
NameAndType	"<init>":()V
Method	scala/util/parsing/combinator/testing/RegexTest$."<init>":()V
Asciz	ident;
Asciz	Lscala/util/parsing/combinator/Parsers$Parser;;
Asciz	Lscala/util/parsing/combinator/Parsers$Parser<Ljava/lang/Object;>;;
Asciz	Signature;
Asciz	number;
Asciz	string;
Asciz	parser;
Asciz	Lscala/util/parsing/combinator/Parsers$Parser<Lscala/collection/immutable/List<Ljava/lang/Object;>;>;;
Asciz	whiteSpace;
Asciz	Lscala/util/matching/Regex;;
Asciz	lastNoSuccess;
Asciz	Lscala/util/parsing/combinator/Parsers$NoSuccess;;
Asciz	Success$module;
Asciz	Lscala/util/parsing/combinator/Parsers$Success$;;
Asciz	NoSuccess$module;
Asciz	Lscala/util/parsing/combinator/Parsers$NoSuccess$;;
Asciz	Failure$module;
Asciz	Lscala/util/parsing/combinator/Parsers$Failure$;;
Asciz	Error$module;
Asciz	Lscala/util/parsing/combinator/Parsers$Error$;;
Asciz	$tilde$module;
Asciz	Lscala/util/parsing/combinator/Parsers$$tilde$;;
Asciz	()Lscala/util/matching/Regex;;
Asciz	LineNumberTable;
NameAndType	whiteSpace:Lscala/util/matching/Regex;
Field	scala/util/parsing/combinator/testing/RegexTest$.whiteSpace:Lscala/util/matching/Regex;
Asciz	scala$util$parsing$combinator$RegexParsers$$super$phrase;
Asciz	(Lscala/util/parsing/combinator/Parsers$Parser;)Lscala/util/parsing/combinator/Parsers$Parser;;
Asciz	scala/util/parsing/combinator/Parsers$class;
class	scala/util/parsing/combinator/Parsers$class
Asciz	phrase;
Asciz	(Lscala/util/parsing/combinator/Parsers;Lscala/util/parsing/combinator/Parsers$Parser;)Lscala/util/parsing/combinator/Parsers$Parser;;
NameAndType	phrase:(Lscala/util/parsing/combinator/Parsers;Lscala/util/parsing/combinator/Parsers$Parser;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/Parsers$class.phrase:(Lscala/util/parsing/combinator/Parsers;Lscala/util/parsing/combinator/Parsers$Parser;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	this;
Asciz	p;
Asciz	LocalVariableTable;
Asciz	scala$util$parsing$combinator$RegexParsers$_setter_$whiteSpace_$eq;
Asciz	(Lscala/util/matching/Regex;)V;
Asciz	skipWhitespace;
Asciz	()Z;
Asciz	scala/util/parsing/combinator/RegexParsers$class;
class	scala/util/parsing/combinator/RegexParsers$class
Asciz	(Lscala/util/parsing/combinator/RegexParsers;)Z;
NameAndType	skipWhitespace:(Lscala/util/parsing/combinator/RegexParsers;)Z
Method	scala/util/parsing/combinator/RegexParsers$class.skipWhitespace:(Lscala/util/parsing/combinator/RegexParsers;)Z
Asciz	handleWhiteSpace;
Asciz	(Ljava/lang/CharSequence;I)I;
Asciz	(Lscala/util/parsing/combinator/RegexParsers;Ljava/lang/CharSequence;I)I;
NameAndType	handleWhiteSpace:(Lscala/util/parsing/combinator/RegexParsers;Ljava/lang/CharSequence;I)I
Method	scala/util/parsing/combinator/RegexParsers$class.handleWhiteSpace:(Lscala/util/parsing/combinator/RegexParsers;Ljava/lang/CharSequence;I)I
Asciz	source;
Asciz	Ljava/lang/CharSequence;;
Asciz	offset;
Asciz	I;
Asciz	literal;
Asciz	(Ljava/lang/String;)Lscala/util/parsing/combinator/Parsers$Parser;;
Asciz	(Lscala/util/parsing/combinator/RegexParsers;Ljava/lang/String;)Lscala/util/parsing/combinator/Parsers$Parser;;
NameAndType	literal:(Lscala/util/parsing/combinator/RegexParsers;Ljava/lang/String;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/RegexParsers$class.literal:(Lscala/util/parsing/combinator/RegexParsers;Ljava/lang/String;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	s;
Asciz	Ljava/lang/String;;
Asciz	regex;
Asciz	(Lscala/util/matching/Regex;)Lscala/util/parsing/combinator/Parsers$Parser;;
Asciz	(Lscala/util/parsing/combinator/RegexParsers;Lscala/util/matching/Regex;)Lscala/util/parsing/combinator/Parsers$Parser;;
NameAndType	regex:(Lscala/util/parsing/combinator/RegexParsers;Lscala/util/matching/Regex;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/RegexParsers$class.regex:(Lscala/util/parsing/combinator/RegexParsers;Lscala/util/matching/Regex;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	r;
Asciz	(Lscala/util/parsing/combinator/RegexParsers;Lscala/util/parsing/combinator/Parsers$Parser;)Lscala/util/parsing/combinator/Parsers$Parser;;
NameAndType	phrase:(Lscala/util/parsing/combinator/RegexParsers;Lscala/util/parsing/combinator/Parsers$Parser;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/RegexParsers$class.phrase:(Lscala/util/parsing/combinator/RegexParsers;Lscala/util/parsing/combinator/Parsers$Parser;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	parse;
Asciz	(Lscala/util/parsing/combinator/Parsers$Parser;Lscala/util/parsing/input/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;;
Asciz	(Lscala/util/parsing/combinator/RegexParsers;Lscala/util/parsing/combinator/Parsers$Parser;Lscala/util/parsing/input/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;;
NameAndType	parse:(Lscala/util/parsing/combinator/RegexParsers;Lscala/util/parsing/combinator/Parsers$Parser;Lscala/util/parsing/input/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
Method	scala/util/parsing/combinator/RegexParsers$class.parse:(Lscala/util/parsing/combinator/RegexParsers;Lscala/util/parsing/combinator/Parsers$Parser;Lscala/util/parsing/input/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
Asciz	in;
Asciz	Lscala/util/parsing/input/Reader;;
Asciz	(Lscala/util/parsing/combinator/Parsers$Parser;Ljava/lang/CharSequence;)Lscala/util/parsing/combinator/Parsers$ParseResult;;
Asciz	(Lscala/util/parsing/combinator/RegexParsers;Lscala/util/parsing/combinator/Parsers$Parser;Ljava/lang/CharSequence;)Lscala/util/parsing/combinator/Parsers$ParseResult;;
NameAndType	parse:(Lscala/util/parsing/combinator/RegexParsers;Lscala/util/parsing/combinator/Parsers$Parser;Ljava/lang/CharSequence;)Lscala/util/parsing/combinator/Parsers$ParseResult;
Method	scala/util/parsing/combinator/RegexParsers$class.parse:(Lscala/util/parsing/combinator/RegexParsers;Lscala/util/parsing/combinator/Parsers$Parser;Ljava/lang/CharSequence;)Lscala/util/parsing/combinator/Parsers$ParseResult;
Asciz	(Lscala/util/parsing/combinator/Parsers$Parser;Ljava/io/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;;
Asciz	(Lscala/util/parsing/combinator/RegexParsers;Lscala/util/parsing/combinator/Parsers$Parser;Ljava/io/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;;
NameAndType	parse:(Lscala/util/parsing/combinator/RegexParsers;Lscala/util/parsing/combinator/Parsers$Parser;Ljava/io/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
Method	scala/util/parsing/combinator/RegexParsers$class.parse:(Lscala/util/parsing/combinator/RegexParsers;Lscala/util/parsing/combinator/Parsers$Parser;Ljava/io/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
Asciz	Ljava/io/Reader;;
Asciz	parseAll;
NameAndType	parseAll:(Lscala/util/parsing/combinator/RegexParsers;Lscala/util/parsing/combinator/Parsers$Parser;Lscala/util/parsing/input/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
Method	scala/util/parsing/combinator/RegexParsers$class.parseAll:(Lscala/util/parsing/combinator/RegexParsers;Lscala/util/parsing/combinator/Parsers$Parser;Lscala/util/parsing/input/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
NameAndType	parseAll:(Lscala/util/parsing/combinator/RegexParsers;Lscala/util/parsing/combinator/Parsers$Parser;Ljava/io/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
Method	scala/util/parsing/combinator/RegexParsers$class.parseAll:(Lscala/util/parsing/combinator/RegexParsers;Lscala/util/parsing/combinator/Parsers$Parser;Ljava/io/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
NameAndType	parseAll:(Lscala/util/parsing/combinator/RegexParsers;Lscala/util/parsing/combinator/Parsers$Parser;Ljava/lang/CharSequence;)Lscala/util/parsing/combinator/Parsers$ParseResult;
Method	scala/util/parsing/combinator/RegexParsers$class.parseAll:(Lscala/util/parsing/combinator/RegexParsers;Lscala/util/parsing/combinator/Parsers$Parser;Ljava/lang/CharSequence;)Lscala/util/parsing/combinator/Parsers$ParseResult;
Asciz	Success;
Asciz	()Lscala/util/parsing/combinator/Parsers$Success$;;
NameAndType	Success$module:Lscala/util/parsing/combinator/Parsers$Success$;
Field	scala/util/parsing/combinator/testing/RegexTest$.Success$module:Lscala/util/parsing/combinator/Parsers$Success$;
Asciz	scala/util/parsing/combinator/Parsers$Success$;
class	scala/util/parsing/combinator/Parsers$Success$
Asciz	(Lscala/util/parsing/combinator/Parsers;)V;
NameAndType	"<init>":(Lscala/util/parsing/combinator/Parsers;)V
Method	scala/util/parsing/combinator/Parsers$Success$."<init>":(Lscala/util/parsing/combinator/Parsers;)V
Asciz	()Lscala/util/parsing/combinator/Parsers$NoSuccess;;
NameAndType	lastNoSuccess:Lscala/util/parsing/combinator/Parsers$NoSuccess;
Field	scala/util/parsing/combinator/testing/RegexTest$.lastNoSuccess:Lscala/util/parsing/combinator/Parsers$NoSuccess;
Asciz	lastNoSuccess_$eq;
Asciz	(Lscala/util/parsing/combinator/Parsers$NoSuccess;)V;
Asciz	NoSuccess;
Asciz	()Lscala/util/parsing/combinator/Parsers$NoSuccess$;;
NameAndType	NoSuccess$module:Lscala/util/parsing/combinator/Parsers$NoSuccess$;
Field	scala/util/parsing/combinator/testing/RegexTest$.NoSuccess$module:Lscala/util/parsing/combinator/Parsers$NoSuccess$;
Asciz	scala/util/parsing/combinator/Parsers$NoSuccess$;
class	scala/util/parsing/combinator/Parsers$NoSuccess$
Method	scala/util/parsing/combinator/Parsers$NoSuccess$."<init>":(Lscala/util/parsing/combinator/Parsers;)V
Asciz	Failure;
Asciz	()Lscala/util/parsing/combinator/Parsers$Failure$;;
NameAndType	Failure$module:Lscala/util/parsing/combinator/Parsers$Failure$;
Field	scala/util/parsing/combinator/testing/RegexTest$.Failure$module:Lscala/util/parsing/combinator/Parsers$Failure$;
Asciz	scala/util/parsing/combinator/Parsers$Failure$;
class	scala/util/parsing/combinator/Parsers$Failure$
Method	scala/util/parsing/combinator/Parsers$Failure$."<init>":(Lscala/util/parsing/combinator/Parsers;)V
Asciz	Error;
Asciz	()Lscala/util/parsing/combinator/Parsers$Error$;;
NameAndType	Error$module:Lscala/util/parsing/combinator/Parsers$Error$;
Field	scala/util/parsing/combinator/testing/RegexTest$.Error$module:Lscala/util/parsing/combinator/Parsers$Error$;
Asciz	scala/util/parsing/combinator/Parsers$Error$;
class	scala/util/parsing/combinator/Parsers$Error$
Method	scala/util/parsing/combinator/Parsers$Error$."<init>":(Lscala/util/parsing/combinator/Parsers;)V
Asciz	$tilde;
Asciz	()Lscala/util/parsing/combinator/Parsers$$tilde$;;
NameAndType	$tilde$module:Lscala/util/parsing/combinator/Parsers$$tilde$;
Field	scala/util/parsing/combinator/testing/RegexTest$.$tilde$module:Lscala/util/parsing/combinator/Parsers$$tilde$;
Asciz	scala/util/parsing/combinator/Parsers$$tilde$;
class	scala/util/parsing/combinator/Parsers$$tilde$
Method	scala/util/parsing/combinator/Parsers$$tilde$."<init>":(Lscala/util/parsing/combinator/Parsers;)V
Asciz	Parser;
Asciz	(Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$Parser;;
Asciz	(Lscala/util/parsing/combinator/Parsers;Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$Parser;;
NameAndType	Parser:(Lscala/util/parsing/combinator/Parsers;Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/Parsers$class.Parser:(Lscala/util/parsing/combinator/Parsers;Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	f;
Asciz	Lscala/Function1;;
Asciz	OnceParser;
Asciz	(Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$OnceParser;;
Asciz	(Lscala/util/parsing/combinator/Parsers;Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$OnceParser;;
NameAndType	OnceParser:(Lscala/util/parsing/combinator/Parsers;Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$OnceParser;
Method	scala/util/parsing/combinator/Parsers$class.OnceParser:(Lscala/util/parsing/combinator/Parsers;Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$OnceParser;
Asciz	commit;
Asciz	(Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;;
Asciz	(Lscala/util/parsing/combinator/Parsers;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;;
NameAndType	commit:(Lscala/util/parsing/combinator/Parsers;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/Parsers$class.commit:(Lscala/util/parsing/combinator/Parsers;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	Lscala/Function0;;
Asciz	elem;
Asciz	(Ljava/lang/String;Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$Parser;;
Asciz	(Lscala/util/parsing/combinator/Parsers;Ljava/lang/String;Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$Parser;;
NameAndType	elem:(Lscala/util/parsing/combinator/Parsers;Ljava/lang/String;Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/Parsers$class.elem:(Lscala/util/parsing/combinator/Parsers;Ljava/lang/String;Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	kind;
Asciz	(Ljava/lang/Object;)Lscala/util/parsing/combinator/Parsers$Parser;;
Asciz	(Lscala/util/parsing/combinator/Parsers;Ljava/lang/Object;)Lscala/util/parsing/combinator/Parsers$Parser;;
NameAndType	elem:(Lscala/util/parsing/combinator/Parsers;Ljava/lang/Object;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/Parsers$class.elem:(Lscala/util/parsing/combinator/Parsers;Ljava/lang/Object;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	e;
Asciz	Ljava/lang/Object;;
Asciz	accept;
NameAndType	accept:(Lscala/util/parsing/combinator/Parsers;Ljava/lang/Object;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/Parsers$class.accept:(Lscala/util/parsing/combinator/Parsers;Ljava/lang/Object;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	(Ljava/lang/Object;Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$Parser;;
Asciz	(Lscala/util/parsing/combinator/Parsers;Ljava/lang/Object;Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$Parser;;
NameAndType	accept:(Lscala/util/parsing/combinator/Parsers;Ljava/lang/Object;Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/Parsers$class.accept:(Lscala/util/parsing/combinator/Parsers;Ljava/lang/Object;Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	es;
Asciz	evidence$1;
Asciz	(Ljava/lang/String;Lscala/PartialFunction;)Lscala/util/parsing/combinator/Parsers$Parser;;
Asciz	(Lscala/util/parsing/combinator/Parsers;Ljava/lang/String;Lscala/PartialFunction;)Lscala/util/parsing/combinator/Parsers$Parser;;
NameAndType	accept:(Lscala/util/parsing/combinator/Parsers;Ljava/lang/String;Lscala/PartialFunction;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/Parsers$class.accept:(Lscala/util/parsing/combinator/Parsers;Ljava/lang/String;Lscala/PartialFunction;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	expected;
Asciz	Lscala/PartialFunction;;
Asciz	acceptIf;
Asciz	(Lscala/Function1;Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$Parser;;
Asciz	(Lscala/util/parsing/combinator/Parsers;Lscala/Function1;Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$Parser;;
NameAndType	acceptIf:(Lscala/util/parsing/combinator/Parsers;Lscala/Function1;Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/Parsers$class.acceptIf:(Lscala/util/parsing/combinator/Parsers;Lscala/Function1;Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	err;
Asciz	acceptMatch;
NameAndType	acceptMatch:(Lscala/util/parsing/combinator/Parsers;Ljava/lang/String;Lscala/PartialFunction;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/Parsers$class.acceptMatch:(Lscala/util/parsing/combinator/Parsers;Ljava/lang/String;Lscala/PartialFunction;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	acceptSeq;
NameAndType	acceptSeq:(Lscala/util/parsing/combinator/Parsers;Ljava/lang/Object;Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/Parsers$class.acceptSeq:(Lscala/util/parsing/combinator/Parsers;Ljava/lang/Object;Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	evidence$2;
Asciz	failure;
Asciz	(Lscala/util/parsing/combinator/Parsers;Ljava/lang/String;)Lscala/util/parsing/combinator/Parsers$Parser;;
NameAndType	failure:(Lscala/util/parsing/combinator/Parsers;Ljava/lang/String;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/Parsers$class.failure:(Lscala/util/parsing/combinator/Parsers;Ljava/lang/String;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	msg;
NameAndType	err:(Lscala/util/parsing/combinator/Parsers;Ljava/lang/String;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/Parsers$class.err:(Lscala/util/parsing/combinator/Parsers;Ljava/lang/String;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	success;
NameAndType	success:(Lscala/util/parsing/combinator/Parsers;Ljava/lang/Object;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/Parsers$class.success:(Lscala/util/parsing/combinator/Parsers;Ljava/lang/Object;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	v;
Asciz	log;
Asciz	(Lscala/Function0;Ljava/lang/String;)Lscala/util/parsing/combinator/Parsers$Parser;;
Asciz	(Lscala/util/parsing/combinator/Parsers;Lscala/Function0;Ljava/lang/String;)Lscala/util/parsing/combinator/Parsers$Parser;;
NameAndType	log:(Lscala/util/parsing/combinator/Parsers;Lscala/Function0;Ljava/lang/String;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/Parsers$class.log:(Lscala/util/parsing/combinator/Parsers;Lscala/Function0;Ljava/lang/String;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	name;
Asciz	rep;
NameAndType	rep:(Lscala/util/parsing/combinator/Parsers;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/Parsers$class.rep:(Lscala/util/parsing/combinator/Parsers;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	repsep;
Asciz	(Lscala/Function0;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;;
Asciz	(Lscala/util/parsing/combinator/Parsers;Lscala/Function0;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;;
NameAndType	repsep:(Lscala/util/parsing/combinator/Parsers;Lscala/Function0;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/Parsers$class.repsep:(Lscala/util/parsing/combinator/Parsers;Lscala/Function0;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	q;
Asciz	rep1;
NameAndType	rep1:(Lscala/util/parsing/combinator/Parsers;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/Parsers$class.rep1:(Lscala/util/parsing/combinator/Parsers;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
NameAndType	rep1:(Lscala/util/parsing/combinator/Parsers;Lscala/Function0;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/Parsers$class.rep1:(Lscala/util/parsing/combinator/Parsers;Lscala/Function0;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	first;
Asciz	repN;
Asciz	(ILscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;;
Asciz	(Lscala/util/parsing/combinator/Parsers;ILscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;;
NameAndType	repN:(Lscala/util/parsing/combinator/Parsers;ILscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/Parsers$class.repN:(Lscala/util/parsing/combinator/Parsers;ILscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	num;
Asciz	rep1sep;
NameAndType	rep1sep:(Lscala/util/parsing/combinator/Parsers;Lscala/Function0;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/Parsers$class.rep1sep:(Lscala/util/parsing/combinator/Parsers;Lscala/Function0;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	chainl1;
NameAndType	chainl1:(Lscala/util/parsing/combinator/Parsers;Lscala/Function0;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/Parsers$class.chainl1:(Lscala/util/parsing/combinator/Parsers;Lscala/Function0;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	(Lscala/Function0;Lscala/Function0;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;;
Asciz	(Lscala/util/parsing/combinator/Parsers;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;;
NameAndType	chainl1:(Lscala/util/parsing/combinator/Parsers;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/Parsers$class.chainl1:(Lscala/util/parsing/combinator/Parsers;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	chainr1;
Asciz	(Lscala/Function0;Lscala/Function0;Lscala/Function2;Ljava/lang/Object;)Lscala/util/parsing/combinator/Parsers$Parser;;
Asciz	(Lscala/util/parsing/combinator/Parsers;Lscala/Function0;Lscala/Function0;Lscala/Function2;Ljava/lang/Object;)Lscala/util/parsing/combinator/Parsers$Parser;;
NameAndType	chainr1:(Lscala/util/parsing/combinator/Parsers;Lscala/Function0;Lscala/Function0;Lscala/Function2;Ljava/lang/Object;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/Parsers$class.chainr1:(Lscala/util/parsing/combinator/Parsers;Lscala/Function0;Lscala/Function0;Lscala/Function2;Ljava/lang/Object;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	combine;
Asciz	Lscala/Function2;;
Asciz	opt;
NameAndType	opt:(Lscala/util/parsing/combinator/Parsers;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/Parsers$class.opt:(Lscala/util/parsing/combinator/Parsers;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	not;
NameAndType	not:(Lscala/util/parsing/combinator/Parsers;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/Parsers$class.not:(Lscala/util/parsing/combinator/Parsers;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	guard;
NameAndType	guard:(Lscala/util/parsing/combinator/Parsers;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/Parsers$class.guard:(Lscala/util/parsing/combinator/Parsers;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	positioned;
NameAndType	positioned:(Lscala/util/parsing/combinator/Parsers;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/Parsers$class.positioned:(Lscala/util/parsing/combinator/Parsers;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	mkList;
Asciz	()Lscala/Function1;;
Asciz	(Lscala/util/parsing/combinator/Parsers;)Lscala/Function1;;
NameAndType	mkList:(Lscala/util/parsing/combinator/Parsers;)Lscala/Function1;
Method	scala/util/parsing/combinator/Parsers$class.mkList:(Lscala/util/parsing/combinator/Parsers;)Lscala/Function1;
Asciz	()Lscala/util/parsing/combinator/Parsers$Parser;;
NameAndType	ident:Lscala/util/parsing/combinator/Parsers$Parser;
Field	scala/util/parsing/combinator/testing/RegexTest$.ident:Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	()Lscala/util/parsing/combinator/Parsers$Parser<Ljava/lang/Object;>;;
NameAndType	number:Lscala/util/parsing/combinator/Parsers$Parser;
Field	scala/util/parsing/combinator/testing/RegexTest$.number:Lscala/util/parsing/combinator/Parsers$Parser;
NameAndType	string:Lscala/util/parsing/combinator/Parsers$Parser;
Field	scala/util/parsing/combinator/testing/RegexTest$.string:Lscala/util/parsing/combinator/Parsers$Parser;
NameAndType	parser:Lscala/util/parsing/combinator/Parsers$Parser;
Field	scala/util/parsing/combinator/testing/RegexTest$.parser:Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	()Lscala/util/parsing/combinator/Parsers$Parser<Lscala/collection/immutable/List<Ljava/lang/Object;>;>;;
Asciz	main;
Asciz	([Ljava/lang/String;)V;
Asciz	scala/Predef$;
class	scala/Predef$
Asciz	Lscala/Predef$;;
NameAndType	MODULE$:Lscala/Predef$;
Field	scala/Predef$.MODULE$:Lscala/Predef$;
Asciz	[Ljava/lang/Object;;
class	"[Ljava/lang/Object;"
Asciz	refArrayOps;
Asciz	([Ljava/lang/Object;)Lscala/collection/mutable/ArrayOps;;
NameAndType	refArrayOps:([Ljava/lang/Object;)Lscala/collection/mutable/ArrayOps;
Method	scala/Predef$.refArrayOps:([Ljava/lang/Object;)Lscala/collection/mutable/ArrayOps;
Asciz	 ;
String	 
Asciz	scala/collection/TraversableOnce;
class	scala/collection/TraversableOnce
Asciz	mkString;
Asciz	(Ljava/lang/String;)Ljava/lang/String;;
NameAndType	mkString:(Ljava/lang/String;)Ljava/lang/String;
InterfaceMethod	scala/collection/TraversableOnce.mkString:(Ljava/lang/String;)Ljava/lang/String;
Asciz	scala/collection/mutable/StringBuilder;
class	scala/collection/mutable/StringBuilder
Method	scala/collection/mutable/StringBuilder."<init>":()V
Asciz	\nin : ;
String	\nin : 
Asciz	append;
Asciz	(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;;
NameAndType	append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
Method	scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
Asciz	toString;
Asciz	()Ljava/lang/String;;
NameAndType	toString:()Ljava/lang/String;
Method	scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
Asciz	println;
Asciz	(Ljava/lang/Object;)V;
NameAndType	println:(Ljava/lang/Object;)V
Method	scala/Predef$.println:(Ljava/lang/Object;)V
NameAndType	parser:()Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/testing/RegexTest$.parser:()Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	scala/util/parsing/combinator/RegexParsers;
class	scala/util/parsing/combinator/RegexParsers
NameAndType	phrase:(Lscala/util/parsing/combinator/Parsers$Parser;)Lscala/util/parsing/combinator/Parsers$Parser;
InterfaceMethod	scala/util/parsing/combinator/RegexParsers.phrase:(Lscala/util/parsing/combinator/Parsers$Parser;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	scala/util/parsing/input/CharSequenceReader;
class	scala/util/parsing/input/CharSequenceReader
Asciz	(Ljava/lang/CharSequence;)V;
NameAndType	"<init>":(Ljava/lang/CharSequence;)V
Method	scala/util/parsing/input/CharSequenceReader."<init>":(Ljava/lang/CharSequence;)V
Asciz	scala/util/parsing/combinator/Parsers$Parser;
class	scala/util/parsing/combinator/Parsers$Parser
Asciz	apply;
Asciz	(Lscala/util/parsing/input/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;;
NameAndType	apply:(Lscala/util/parsing/input/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
Method	scala/util/parsing/combinator/Parsers$Parser.apply:(Lscala/util/parsing/input/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
Asciz	args;
Asciz	[Ljava/lang/String;;
Asciz	java/lang/Object;
class	java/lang/Object
Method	java/lang/Object."<init>":()V
NameAndType	MODULE$:Lscala/util/parsing/combinator/testing/RegexTest$;
Field	scala/util/parsing/combinator/testing/RegexTest$.MODULE$:Lscala/util/parsing/combinator/testing/RegexTest$;
Asciz	$init$;
NameAndType	$init$:(Lscala/util/parsing/combinator/Parsers;)V
Method	scala/util/parsing/combinator/Parsers$class.$init$:(Lscala/util/parsing/combinator/Parsers;)V
Asciz	(Lscala/util/parsing/combinator/RegexParsers;)V;
NameAndType	$init$:(Lscala/util/parsing/combinator/RegexParsers;)V
Method	scala/util/parsing/combinator/RegexParsers$class.$init$:(Lscala/util/parsing/combinator/RegexParsers;)V
Asciz	[a-zA-Z_]\w*;
String	[a-zA-Z_]\w*
Asciz	augmentString;
Asciz	(Ljava/lang/String;)Lscala/collection/immutable/StringOps;;
NameAndType	augmentString:(Ljava/lang/String;)Lscala/collection/immutable/StringOps;
Method	scala/Predef$.augmentString:(Ljava/lang/String;)Lscala/collection/immutable/StringOps;
Asciz	scala/collection/immutable/StringLike;
class	scala/collection/immutable/StringLike
NameAndType	r:()Lscala/util/matching/Regex;
InterfaceMethod	scala/collection/immutable/StringLike.r:()Lscala/util/matching/Regex;
NameAndType	regex:(Lscala/util/matching/Regex;)Lscala/util/parsing/combinator/Parsers$Parser;
InterfaceMethod	scala/util/parsing/combinator/RegexParsers.regex:(Lscala/util/matching/Regex;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	scala/util/parsing/combinator/testing/RegexTest$$anonfun$1;
class	scala/util/parsing/combinator/testing/RegexTest$$anonfun$1
Method	scala/util/parsing/combinator/testing/RegexTest$$anonfun$1."<init>":()V
Asciz	$up$up;
NameAndType	$up$up:(Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/Parsers$Parser.$up$up:(Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	\d\d*;
String	\d\d*
Asciz	scala/util/parsing/combinator/testing/RegexTest$$anonfun$2;
class	scala/util/parsing/combinator/testing/RegexTest$$anonfun$2
Method	scala/util/parsing/combinator/testing/RegexTest$$anonfun$2."<init>":()V
Asciz	\".*\";
String	\".*\"
Asciz	scala/util/parsing/combinator/testing/RegexTest$$anonfun$3;
class	scala/util/parsing/combinator/testing/RegexTest$$anonfun$3
Method	scala/util/parsing/combinator/testing/RegexTest$$anonfun$3."<init>":()V
NameAndType	ident:()Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/testing/RegexTest$.ident:()Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	scala/util/parsing/combinator/testing/RegexTest$$anonfun$4;
class	scala/util/parsing/combinator/testing/RegexTest$$anonfun$4
Method	scala/util/parsing/combinator/testing/RegexTest$$anonfun$4."<init>":()V
Asciz	$bar;
NameAndType	$bar:(Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/Parsers$Parser.$bar:(Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	scala/util/parsing/combinator/testing/RegexTest$$anonfun$5;
class	scala/util/parsing/combinator/testing/RegexTest$$anonfun$5
Method	scala/util/parsing/combinator/testing/RegexTest$$anonfun$5."<init>":()V
Asciz	$times;
NameAndType	$times:()Lscala/util/parsing/combinator/Parsers$Parser;
Method	scala/util/parsing/combinator/Parsers$Parser.$times:()Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	Scala;
Asciz	InnerClasses;
Asciz	scala/util/parsing/combinator/Parsers;
class	scala/util/parsing/combinator/Parsers
Asciz	scala/util/parsing/combinator/Parsers$NoSuccess;
class	scala/util/parsing/combinator/Parsers$NoSuccess
Asciz	scala/util/parsing/combinator/Parsers$OnceParser;
class	scala/util/parsing/combinator/Parsers$OnceParser
Asciz	scala/util/parsing/combinator/Parsers$ParseResult;
class	scala/util/parsing/combinator/Parsers$ParseResult
Asciz	ParseResult;
Asciz	scala/util/parsing/combinator/testing/RegexTest;
class	scala/util/parsing/combinator/testing/RegexTest
Asciz	$anonfun$5;
Asciz	$anonfun$4;
Asciz	$anonfun$3;
Asciz	$anonfun$2;
Asciz	$anonfun$1;
Asciz	scala/ScalaObject;
class	scala/ScalaObject

{
public static final scala.util.parsing.combinator.testing.RegexTest$ MODULE$;
  Signature: Lscala/util/parsing/combinator/testing/RegexTest$;

private final scala.util.parsing.combinator.Parsers$Parser ident;
  Signature: Lscala/util/parsing/combinator/Parsers$Parser;
  Signature: length = 0x2
   00 0F 

private final scala.util.parsing.combinator.Parsers$Parser number;
  Signature: Lscala/util/parsing/combinator/Parsers$Parser;
  Signature: length = 0x2
   00 0F 

private final scala.util.parsing.combinator.Parsers$Parser string;
  Signature: Lscala/util/parsing/combinator/Parsers$Parser;
  Signature: length = 0x2
   00 0F 

private final scala.util.parsing.combinator.Parsers$Parser parser;
  Signature: Lscala/util/parsing/combinator/Parsers$Parser;
  Signature: length = 0x2
   00 14 

private final scala.util.matching.Regex whiteSpace;
  Signature: Lscala/util/matching/Regex;

private scala.util.parsing.combinator.Parsers$NoSuccess lastNoSuccess;
  Signature: Lscala/util/parsing/combinator/Parsers$NoSuccess;

private scala.util.parsing.combinator.Parsers$Success$ Success$module;
  Signature: Lscala/util/parsing/combinator/Parsers$Success$;

private scala.util.parsing.combinator.Parsers$NoSuccess$ NoSuccess$module;
  Signature: Lscala/util/parsing/combinator/Parsers$NoSuccess$;

private scala.util.parsing.combinator.Parsers$Failure$ Failure$module;
  Signature: Lscala/util/parsing/combinator/Parsers$Failure$;

private scala.util.parsing.combinator.Parsers$Error$ Error$module;
  Signature: Lscala/util/parsing/combinator/Parsers$Error$;

private scala.util.parsing.combinator.Parsers$$tilde$ $tilde$module;
  Signature: Lscala/util/parsing/combinator/Parsers$$tilde$;

public static {};
  Signature: ()V
  Code:
   Stack=1, Locals=0, Args_size=0
	new	class scala/util/parsing/combinator/testing/RegexTest$
	invokespecial	Method "<init>":()V
	return
  Labels:

public scala.util.matching.Regex whiteSpace();
  Signature: ()Lscala/util/matching/Regex;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field whiteSpace:Lscala/util/matching/Regex;
	areturn
  Labels:

public final scala.util.parsing.combinator.Parsers$Parser scala$util$parsing$combinator$RegexParsers$$super$phrase(scala.util.parsing.combinator.Parsers$Parser);
  Signature: (Lscala/util/parsing/combinator/Parsers$Parser;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokestatic	Method scala/util/parsing/combinator/Parsers$class.phrase:(Lscala/util/parsing/combinator/Parsers;Lscala/util/parsing/combinator/Parsers$Parser;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/util/parsing/combinator/testing/RegexTest$;
   0      6      1    p       Lscala/util/parsing/combinator/Parsers$Parser;


public void scala$util$parsing$combinator$RegexParsers$_setter_$whiteSpace_$eq(scala.util.matching.Regex);
  Signature: (Lscala/util/matching/Regex;)V
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	putfield	Field whiteSpace:Lscala/util/matching/Regex;
	return
  Labels:

public boolean skipWhitespace();
  Signature: ()Z
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokestatic	Method scala/util/parsing/combinator/RegexParsers$class.skipWhitespace:(Lscala/util/parsing/combinator/RegexParsers;)Z
	ireturn
  Labels:

public int handleWhiteSpace(java.lang.CharSequence, int);
  Signature: (Ljava/lang/CharSequence;I)I
  Code:
   Stack=3, Locals=3, Args_size=3
	aload_0
	aload_1
	iload_2
	invokestatic	Method scala/util/parsing/combinator/RegexParsers$class.handleWhiteSpace:(Lscala/util/parsing/combinator/RegexParsers;Ljava/lang/CharSequence;I)I
	ireturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/util/parsing/combinator/testing/RegexTest$;
   0      7      1    source       Ljava/lang/CharSequence;
   0      7      2    offset       I


public scala.util.parsing.combinator.Parsers$Parser literal(java.lang.String);
  Signature: (Ljava/lang/String;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokestatic	Method scala/util/parsing/combinator/RegexParsers$class.literal:(Lscala/util/parsing/combinator/RegexParsers;Ljava/lang/String;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/util/parsing/combinator/testing/RegexTest$;
   0      6      1    s       Ljava/lang/String;


public scala.util.parsing.combinator.Parsers$Parser regex(scala.util.matching.Regex);
  Signature: (Lscala/util/matching/Regex;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokestatic	Method scala/util/parsing/combinator/RegexParsers$class.regex:(Lscala/util/parsing/combinator/RegexParsers;Lscala/util/matching/Regex;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/util/parsing/combinator/testing/RegexTest$;
   0      6      1    r       Lscala/util/matching/Regex;


public scala.util.parsing.combinator.Parsers$Parser phrase(scala.util.parsing.combinator.Parsers$Parser);
  Signature: (Lscala/util/parsing/combinator/Parsers$Parser;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokestatic	Method scala/util/parsing/combinator/RegexParsers$class.phrase:(Lscala/util/parsing/combinator/RegexParsers;Lscala/util/parsing/combinator/Parsers$Parser;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/util/parsing/combinator/testing/RegexTest$;
   0      6      1    p       Lscala/util/parsing/combinator/Parsers$Parser;


public scala.util.parsing.combinator.Parsers$ParseResult parse(scala.util.parsing.combinator.Parsers$Parser, scala.util.parsing.input.Reader);
  Signature: (Lscala/util/parsing/combinator/Parsers$Parser;Lscala/util/parsing/input/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
  Code:
   Stack=3, Locals=3, Args_size=3
	aload_0
	aload_1
	aload_2
	invokestatic	Method scala/util/parsing/combinator/RegexParsers$class.parse:(Lscala/util/parsing/combinator/RegexParsers;Lscala/util/parsing/combinator/Parsers$Parser;Lscala/util/parsing/input/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/util/parsing/combinator/testing/RegexTest$;
   0      7      1    p       Lscala/util/parsing/combinator/Parsers$Parser;
   0      7      2    in       Lscala/util/parsing/input/Reader;


public scala.util.parsing.combinator.Parsers$ParseResult parse(scala.util.parsing.combinator.Parsers$Parser, java.lang.CharSequence);
  Signature: (Lscala/util/parsing/combinator/Parsers$Parser;Ljava/lang/CharSequence;)Lscala/util/parsing/combinator/Parsers$ParseResult;
  Code:
   Stack=3, Locals=3, Args_size=3
	aload_0
	aload_1
	aload_2
	invokestatic	Method scala/util/parsing/combinator/RegexParsers$class.parse:(Lscala/util/parsing/combinator/RegexParsers;Lscala/util/parsing/combinator/Parsers$Parser;Ljava/lang/CharSequence;)Lscala/util/parsing/combinator/Parsers$ParseResult;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/util/parsing/combinator/testing/RegexTest$;
   0      7      1    p       Lscala/util/parsing/combinator/Parsers$Parser;
   0      7      2    in       Ljava/lang/CharSequence;


public scala.util.parsing.combinator.Parsers$ParseResult parse(scala.util.parsing.combinator.Parsers$Parser, java.io.Reader);
  Signature: (Lscala/util/parsing/combinator/Parsers$Parser;Ljava/io/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
  Code:
   Stack=3, Locals=3, Args_size=3
	aload_0
	aload_1
	aload_2
	invokestatic	Method scala/util/parsing/combinator/RegexParsers$class.parse:(Lscala/util/parsing/combinator/RegexParsers;Lscala/util/parsing/combinator/Parsers$Parser;Ljava/io/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/util/parsing/combinator/testing/RegexTest$;
   0      7      1    p       Lscala/util/parsing/combinator/Parsers$Parser;
   0      7      2    in       Ljava/io/Reader;


public scala.util.parsing.combinator.Parsers$ParseResult parseAll(scala.util.parsing.combinator.Parsers$Parser, scala.util.parsing.input.Reader);
  Signature: (Lscala/util/parsing/combinator/Parsers$Parser;Lscala/util/parsing/input/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
  Code:
   Stack=3, Locals=3, Args_size=3
	aload_0
	aload_1
	aload_2
	invokestatic	Method scala/util/parsing/combinator/RegexParsers$class.parseAll:(Lscala/util/parsing/combinator/RegexParsers;Lscala/util/parsing/combinator/Parsers$Parser;Lscala/util/parsing/input/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/util/parsing/combinator/testing/RegexTest$;
   0      7      1    p       Lscala/util/parsing/combinator/Parsers$Parser;
   0      7      2    in       Lscala/util/parsing/input/Reader;


public scala.util.parsing.combinator.Parsers$ParseResult parseAll(scala.util.parsing.combinator.Parsers$Parser, java.io.Reader);
  Signature: (Lscala/util/parsing/combinator/Parsers$Parser;Ljava/io/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
  Code:
   Stack=3, Locals=3, Args_size=3
	aload_0
	aload_1
	aload_2
	invokestatic	Method scala/util/parsing/combinator/RegexParsers$class.parseAll:(Lscala/util/parsing/combinator/RegexParsers;Lscala/util/parsing/combinator/Parsers$Parser;Ljava/io/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/util/parsing/combinator/testing/RegexTest$;
   0      7      1    p       Lscala/util/parsing/combinator/Parsers$Parser;
   0      7      2    in       Ljava/io/Reader;


public scala.util.parsing.combinator.Parsers$ParseResult parseAll(scala.util.parsing.combinator.Parsers$Parser, java.lang.CharSequence);
  Signature: (Lscala/util/parsing/combinator/Parsers$Parser;Ljava/lang/CharSequence;)Lscala/util/parsing/combinator/Parsers$ParseResult;
  Code:
   Stack=3, Locals=3, Args_size=3
	aload_0
	aload_1
	aload_2
	invokestatic	Method scala/util/parsing/combinator/RegexParsers$class.parseAll:(Lscala/util/parsing/combinator/RegexParsers;Lscala/util/parsing/combinator/Parsers$Parser;Ljava/lang/CharSequence;)Lscala/util/parsing/combinator/Parsers$ParseResult;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/util/parsing/combinator/testing/RegexTest$;
   0      7      1    p       Lscala/util/parsing/combinator/Parsers$Parser;
   0      7      2    in       Ljava/lang/CharSequence;


public final scala.util.parsing.combinator.Parsers$Success$ Success();
  Signature: ()Lscala/util/parsing/combinator/Parsers$Success$;
  Code:
   Stack=4, Locals=1, Args_size=1
	aload_0
	getfield	Field Success$module:Lscala/util/parsing/combinator/Parsers$Success$;
	ifnonnull	l1 // aload_0
	aload_0
	new	class scala/util/parsing/combinator/Parsers$Success$
	dup
	aload_0
	invokespecial	Method scala/util/parsing/combinator/Parsers$Success$."<init>":(Lscala/util/parsing/combinator/Parsers;)V
	putfield	Field Success$module:Lscala/util/parsing/combinator/Parsers$Success$;
l1	aload_0
	getfield	Field Success$module:Lscala/util/parsing/combinator/Parsers$Success$;
	areturn
  Labels:
   	l1 = 19 // aload_0

public scala.util.parsing.combinator.Parsers$NoSuccess lastNoSuccess();
  Signature: ()Lscala/util/parsing/combinator/Parsers$NoSuccess;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field lastNoSuccess:Lscala/util/parsing/combinator/Parsers$NoSuccess;
	areturn
  Labels:

public void lastNoSuccess_$eq(scala.util.parsing.combinator.Parsers$NoSuccess);
  Signature: (Lscala/util/parsing/combinator/Parsers$NoSuccess;)V
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	putfield	Field lastNoSuccess:Lscala/util/parsing/combinator/Parsers$NoSuccess;
	return
  Labels:

public final scala.util.parsing.combinator.Parsers$NoSuccess$ NoSuccess();
  Signature: ()Lscala/util/parsing/combinator/Parsers$NoSuccess$;
  Code:
   Stack=4, Locals=1, Args_size=1
	aload_0
	getfield	Field NoSuccess$module:Lscala/util/parsing/combinator/Parsers$NoSuccess$;
	ifnonnull	l1 // aload_0
	aload_0
	new	class scala/util/parsing/combinator/Parsers$NoSuccess$
	dup
	aload_0
	invokespecial	Method scala/util/parsing/combinator/Parsers$NoSuccess$."<init>":(Lscala/util/parsing/combinator/Parsers;)V
	putfield	Field NoSuccess$module:Lscala/util/parsing/combinator/Parsers$NoSuccess$;
l1	aload_0
	getfield	Field NoSuccess$module:Lscala/util/parsing/combinator/Parsers$NoSuccess$;
	areturn
  Labels:
   	l1 = 19 // aload_0

public final scala.util.parsing.combinator.Parsers$Failure$ Failure();
  Signature: ()Lscala/util/parsing/combinator/Parsers$Failure$;
  Code:
   Stack=4, Locals=1, Args_size=1
	aload_0
	getfield	Field Failure$module:Lscala/util/parsing/combinator/Parsers$Failure$;
	ifnonnull	l1 // aload_0
	aload_0
	new	class scala/util/parsing/combinator/Parsers$Failure$
	dup
	aload_0
	invokespecial	Method scala/util/parsing/combinator/Parsers$Failure$."<init>":(Lscala/util/parsing/combinator/Parsers;)V
	putfield	Field Failure$module:Lscala/util/parsing/combinator/Parsers$Failure$;
l1	aload_0
	getfield	Field Failure$module:Lscala/util/parsing/combinator/Parsers$Failure$;
	areturn
  Labels:
   	l1 = 19 // aload_0

public final scala.util.parsing.combinator.Parsers$Error$ Error();
  Signature: ()Lscala/util/parsing/combinator/Parsers$Error$;
  Code:
   Stack=4, Locals=1, Args_size=1
	aload_0
	getfield	Field Error$module:Lscala/util/parsing/combinator/Parsers$Error$;
	ifnonnull	l1 // aload_0
	aload_0
	new	class scala/util/parsing/combinator/Parsers$Error$
	dup
	aload_0
	invokespecial	Method scala/util/parsing/combinator/Parsers$Error$."<init>":(Lscala/util/parsing/combinator/Parsers;)V
	putfield	Field Error$module:Lscala/util/parsing/combinator/Parsers$Error$;
l1	aload_0
	getfield	Field Error$module:Lscala/util/parsing/combinator/Parsers$Error$;
	areturn
  Labels:
   	l1 = 19 // aload_0

public final scala.util.parsing.combinator.Parsers$$tilde$ $tilde();
  Signature: ()Lscala/util/parsing/combinator/Parsers$$tilde$;
  Code:
   Stack=4, Locals=1, Args_size=1
	aload_0
	getfield	Field $tilde$module:Lscala/util/parsing/combinator/Parsers$$tilde$;
	ifnonnull	l1 // aload_0
	aload_0
	new	class scala/util/parsing/combinator/Parsers$$tilde$
	dup
	aload_0
	invokespecial	Method scala/util/parsing/combinator/Parsers$$tilde$."<init>":(Lscala/util/parsing/combinator/Parsers;)V
	putfield	Field $tilde$module:Lscala/util/parsing/combinator/Parsers$$tilde$;
l1	aload_0
	getfield	Field $tilde$module:Lscala/util/parsing/combinator/Parsers$$tilde$;
	areturn
  Labels:
   	l1 = 19 // aload_0

public scala.util.parsing.combinator.Parsers$Parser Parser(scala.Function1);
  Signature: (Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokestatic	Method scala/util/parsing/combinator/Parsers$class.Parser:(Lscala/util/parsing/combinator/Parsers;Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/util/parsing/combinator/testing/RegexTest$;
   0      6      1    f       Lscala/Function1;


public scala.util.parsing.combinator.Parsers$OnceParser OnceParser(scala.Function1);
  Signature: (Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$OnceParser;
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokestatic	Method scala/util/parsing/combinator/Parsers$class.OnceParser:(Lscala/util/parsing/combinator/Parsers;Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$OnceParser;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/util/parsing/combinator/testing/RegexTest$;
   0      6      1    f       Lscala/Function1;


public scala.util.parsing.combinator.Parsers$Parser commit(scala.Function0);
  Signature: (Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokestatic	Method scala/util/parsing/combinator/Parsers$class.commit:(Lscala/util/parsing/combinator/Parsers;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/util/parsing/combinator/testing/RegexTest$;
   0      6      1    p       Lscala/Function0;


public scala.util.parsing.combinator.Parsers$Parser elem(java.lang.String, scala.Function1);
  Signature: (Ljava/lang/String;Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=3, Locals=3, Args_size=3
	aload_0
	aload_1
	aload_2
	invokestatic	Method scala/util/parsing/combinator/Parsers$class.elem:(Lscala/util/parsing/combinator/Parsers;Ljava/lang/String;Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/util/parsing/combinator/testing/RegexTest$;
   0      7      1    kind       Ljava/lang/String;
   0      7      2    p       Lscala/Function1;


public scala.util.parsing.combinator.Parsers$Parser elem(java.lang.Object);
  Signature: (Ljava/lang/Object;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokestatic	Method scala/util/parsing/combinator/Parsers$class.elem:(Lscala/util/parsing/combinator/Parsers;Ljava/lang/Object;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/util/parsing/combinator/testing/RegexTest$;
   0      6      1    e       Ljava/lang/Object;


public scala.util.parsing.combinator.Parsers$Parser accept(java.lang.Object);
  Signature: (Ljava/lang/Object;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokestatic	Method scala/util/parsing/combinator/Parsers$class.accept:(Lscala/util/parsing/combinator/Parsers;Ljava/lang/Object;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/util/parsing/combinator/testing/RegexTest$;
   0      6      1    e       Ljava/lang/Object;


public scala.util.parsing.combinator.Parsers$Parser accept(java.lang.Object, scala.Function1);
  Signature: (Ljava/lang/Object;Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=3, Locals=3, Args_size=3
	aload_0
	aload_1
	aload_2
	invokestatic	Method scala/util/parsing/combinator/Parsers$class.accept:(Lscala/util/parsing/combinator/Parsers;Ljava/lang/Object;Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/util/parsing/combinator/testing/RegexTest$;
   0      7      1    es       Ljava/lang/Object;
   0      7      2    evidence$1       Lscala/Function1;


public scala.util.parsing.combinator.Parsers$Parser accept(java.lang.String, scala.PartialFunction);
  Signature: (Ljava/lang/String;Lscala/PartialFunction;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=3, Locals=3, Args_size=3
	aload_0
	aload_1
	aload_2
	invokestatic	Method scala/util/parsing/combinator/Parsers$class.accept:(Lscala/util/parsing/combinator/Parsers;Ljava/lang/String;Lscala/PartialFunction;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/util/parsing/combinator/testing/RegexTest$;
   0      7      1    expected       Ljava/lang/String;
   0      7      2    f       Lscala/PartialFunction;


public scala.util.parsing.combinator.Parsers$Parser acceptIf(scala.Function1, scala.Function1);
  Signature: (Lscala/Function1;Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=3, Locals=3, Args_size=3
	aload_0
	aload_1
	aload_2
	invokestatic	Method scala/util/parsing/combinator/Parsers$class.acceptIf:(Lscala/util/parsing/combinator/Parsers;Lscala/Function1;Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/util/parsing/combinator/testing/RegexTest$;
   0      7      1    p       Lscala/Function1;
   0      7      2    err       Lscala/Function1;


public scala.util.parsing.combinator.Parsers$Parser acceptMatch(java.lang.String, scala.PartialFunction);
  Signature: (Ljava/lang/String;Lscala/PartialFunction;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=3, Locals=3, Args_size=3
	aload_0
	aload_1
	aload_2
	invokestatic	Method scala/util/parsing/combinator/Parsers$class.acceptMatch:(Lscala/util/parsing/combinator/Parsers;Ljava/lang/String;Lscala/PartialFunction;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/util/parsing/combinator/testing/RegexTest$;
   0      7      1    expected       Ljava/lang/String;
   0      7      2    f       Lscala/PartialFunction;


public scala.util.parsing.combinator.Parsers$Parser acceptSeq(java.lang.Object, scala.Function1);
  Signature: (Ljava/lang/Object;Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=3, Locals=3, Args_size=3
	aload_0
	aload_1
	aload_2
	invokestatic	Method scala/util/parsing/combinator/Parsers$class.acceptSeq:(Lscala/util/parsing/combinator/Parsers;Ljava/lang/Object;Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/util/parsing/combinator/testing/RegexTest$;
   0      7      1    es       Ljava/lang/Object;
   0      7      2    evidence$2       Lscala/Function1;


public scala.util.parsing.combinator.Parsers$Parser failure(java.lang.String);
  Signature: (Ljava/lang/String;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokestatic	Method scala/util/parsing/combinator/Parsers$class.failure:(Lscala/util/parsing/combinator/Parsers;Ljava/lang/String;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/util/parsing/combinator/testing/RegexTest$;
   0      6      1    msg       Ljava/lang/String;


public scala.util.parsing.combinator.Parsers$Parser err(java.lang.String);
  Signature: (Ljava/lang/String;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokestatic	Method scala/util/parsing/combinator/Parsers$class.err:(Lscala/util/parsing/combinator/Parsers;Ljava/lang/String;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/util/parsing/combinator/testing/RegexTest$;
   0      6      1    msg       Ljava/lang/String;


public scala.util.parsing.combinator.Parsers$Parser success(java.lang.Object);
  Signature: (Ljava/lang/Object;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokestatic	Method scala/util/parsing/combinator/Parsers$class.success:(Lscala/util/parsing/combinator/Parsers;Ljava/lang/Object;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/util/parsing/combinator/testing/RegexTest$;
   0      6      1    v       Ljava/lang/Object;


public scala.util.parsing.combinator.Parsers$Parser log(scala.Function0, java.lang.String);
  Signature: (Lscala/Function0;Ljava/lang/String;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=3, Locals=3, Args_size=3
	aload_0
	aload_1
	aload_2
	invokestatic	Method scala/util/parsing/combinator/Parsers$class.log:(Lscala/util/parsing/combinator/Parsers;Lscala/Function0;Ljava/lang/String;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/util/parsing/combinator/testing/RegexTest$;
   0      7      1    p       Lscala/Function0;
   0      7      2    name       Ljava/lang/String;


public scala.util.parsing.combinator.Parsers$Parser rep(scala.Function0);
  Signature: (Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokestatic	Method scala/util/parsing/combinator/Parsers$class.rep:(Lscala/util/parsing/combinator/Parsers;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/util/parsing/combinator/testing/RegexTest$;
   0      6      1    p       Lscala/Function0;


public scala.util.parsing.combinator.Parsers$Parser repsep(scala.Function0, scala.Function0);
  Signature: (Lscala/Function0;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=3, Locals=3, Args_size=3
	aload_0
	aload_1
	aload_2
	invokestatic	Method scala/util/parsing/combinator/Parsers$class.repsep:(Lscala/util/parsing/combinator/Parsers;Lscala/Function0;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/util/parsing/combinator/testing/RegexTest$;
   0      7      1    p       Lscala/Function0;
   0      7      2    q       Lscala/Function0;


public scala.util.parsing.combinator.Parsers$Parser rep1(scala.Function0);
  Signature: (Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokestatic	Method scala/util/parsing/combinator/Parsers$class.rep1:(Lscala/util/parsing/combinator/Parsers;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/util/parsing/combinator/testing/RegexTest$;
   0      6      1    p       Lscala/Function0;


public scala.util.parsing.combinator.Parsers$Parser rep1(scala.Function0, scala.Function0);
  Signature: (Lscala/Function0;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=3, Locals=3, Args_size=3
	aload_0
	aload_1
	aload_2
	invokestatic	Method scala/util/parsing/combinator/Parsers$class.rep1:(Lscala/util/parsing/combinator/Parsers;Lscala/Function0;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/util/parsing/combinator/testing/RegexTest$;
   0      7      1    first       Lscala/Function0;
   0      7      2    p       Lscala/Function0;


public scala.util.parsing.combinator.Parsers$Parser repN(int, scala.Function0);
  Signature: (ILscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=3, Locals=3, Args_size=3
	aload_0
	iload_1
	aload_2
	invokestatic	Method scala/util/parsing/combinator/Parsers$class.repN:(Lscala/util/parsing/combinator/Parsers;ILscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/util/parsing/combinator/testing/RegexTest$;
   0      7      1    num       I
   0      7      2    p       Lscala/Function0;


public scala.util.parsing.combinator.Parsers$Parser rep1sep(scala.Function0, scala.Function0);
  Signature: (Lscala/Function0;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=3, Locals=3, Args_size=3
	aload_0
	aload_1
	aload_2
	invokestatic	Method scala/util/parsing/combinator/Parsers$class.rep1sep:(Lscala/util/parsing/combinator/Parsers;Lscala/Function0;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/util/parsing/combinator/testing/RegexTest$;
   0      7      1    p       Lscala/Function0;
   0      7      2    q       Lscala/Function0;


public scala.util.parsing.combinator.Parsers$Parser chainl1(scala.Function0, scala.Function0);
  Signature: (Lscala/Function0;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=3, Locals=3, Args_size=3
	aload_0
	aload_1
	aload_2
	invokestatic	Method scala/util/parsing/combinator/Parsers$class.chainl1:(Lscala/util/parsing/combinator/Parsers;Lscala/Function0;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/util/parsing/combinator/testing/RegexTest$;
   0      7      1    p       Lscala/Function0;
   0      7      2    q       Lscala/Function0;


public scala.util.parsing.combinator.Parsers$Parser chainl1(scala.Function0, scala.Function0, scala.Function0);
  Signature: (Lscala/Function0;Lscala/Function0;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=4, Locals=4, Args_size=4
	aload_0
	aload_1
	aload_2
	aload_3
	invokestatic	Method scala/util/parsing/combinator/Parsers$class.chainl1:(Lscala/util/parsing/combinator/Parsers;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      8      0    this       Lscala/util/parsing/combinator/testing/RegexTest$;
   0      8      1    first       Lscala/Function0;
   0      8      2    p       Lscala/Function0;
   0      8      3    q       Lscala/Function0;


public scala.util.parsing.combinator.Parsers$Parser chainr1(scala.Function0, scala.Function0, scala.Function2, java.lang.Object);
  Signature: (Lscala/Function0;Lscala/Function0;Lscala/Function2;Ljava/lang/Object;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=5, Locals=5, Args_size=5
	aload_0
	aload_1
	aload_2
	aload_3
	aload	4
	invokestatic	Method scala/util/parsing/combinator/Parsers$class.chainr1:(Lscala/util/parsing/combinator/Parsers;Lscala/Function0;Lscala/Function0;Lscala/Function2;Ljava/lang/Object;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    this       Lscala/util/parsing/combinator/testing/RegexTest$;
   0      10      1    p       Lscala/Function0;
   0      10      2    q       Lscala/Function0;
   0      10      3    combine       Lscala/Function2;
   0      10      4    first       Ljava/lang/Object;


public scala.util.parsing.combinator.Parsers$Parser opt(scala.Function0);
  Signature: (Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokestatic	Method scala/util/parsing/combinator/Parsers$class.opt:(Lscala/util/parsing/combinator/Parsers;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/util/parsing/combinator/testing/RegexTest$;
   0      6      1    p       Lscala/Function0;


public scala.util.parsing.combinator.Parsers$Parser not(scala.Function0);
  Signature: (Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokestatic	Method scala/util/parsing/combinator/Parsers$class.not:(Lscala/util/parsing/combinator/Parsers;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/util/parsing/combinator/testing/RegexTest$;
   0      6      1    p       Lscala/Function0;


public scala.util.parsing.combinator.Parsers$Parser guard(scala.Function0);
  Signature: (Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokestatic	Method scala/util/parsing/combinator/Parsers$class.guard:(Lscala/util/parsing/combinator/Parsers;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/util/parsing/combinator/testing/RegexTest$;
   0      6      1    p       Lscala/Function0;


public scala.util.parsing.combinator.Parsers$Parser positioned(scala.Function0);
  Signature: (Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokestatic	Method scala/util/parsing/combinator/Parsers$class.positioned:(Lscala/util/parsing/combinator/Parsers;Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/util/parsing/combinator/testing/RegexTest$;
   0      6      1    p       Lscala/Function0;


public scala.Function1 mkList();
  Signature: ()Lscala/Function1;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokestatic	Method scala/util/parsing/combinator/Parsers$class.mkList:(Lscala/util/parsing/combinator/Parsers;)Lscala/Function1;
	areturn
  Labels:

public scala.util.parsing.combinator.Parsers$Parser ident();
  Signature: ()Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field ident:Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:
  Signature: length = 0x2
   01 1A 

public scala.util.parsing.combinator.Parsers$Parser number();
  Signature: ()Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field number:Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:
  Signature: length = 0x2
   01 1A 

public scala.util.parsing.combinator.Parsers$Parser string();
  Signature: ()Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field string:Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:
  Signature: length = 0x2
   01 1A 

public scala.util.parsing.combinator.Parsers$Parser parser();
  Signature: ()Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field parser:Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:
  Signature: length = 0x2
   01 21 

public void main(java.lang.String[]);
  Signature: ([Ljava/lang/String;)V
  Code:
   Stack=5, Locals=3, Args_size=2
	getstatic	Field scala/Predef$.MODULE$:Lscala/Predef$;
	aload_1
	checkcast	class "[Ljava/lang/Object;"
	invokevirtual	Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Lscala/collection/mutable/ArrayOps;
	ldc_w	String  
	invokeinterface	InterfaceMethod scala/collection/TraversableOnce.mkString:(Ljava/lang/String;)Ljava/lang/String;
	astore_2
	getstatic	Field scala/Predef$.MODULE$:Lscala/Predef$;
	new	class scala/collection/mutable/StringBuilder
	dup
	invokespecial	Method scala/collection/mutable/StringBuilder."<init>":()V
	ldc_w	String \nin : 
	invokevirtual	Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
	aload_2
	invokevirtual	Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
	invokevirtual	Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
	invokevirtual	Method scala/Predef$.println:(Ljava/lang/Object;)V
	getstatic	Field scala/Predef$.MODULE$:Lscala/Predef$;
	aload_0
	aload_0
	invokevirtual	Method parser:()Lscala/util/parsing/combinator/Parsers$Parser;
	invokeinterface	InterfaceMethod scala/util/parsing/combinator/RegexParsers.phrase:(Lscala/util/parsing/combinator/Parsers$Parser;)Lscala/util/parsing/combinator/Parsers$Parser;
	new	class scala/util/parsing/input/CharSequenceReader
	dup
	aload_2
	invokespecial	Method scala/util/parsing/input/CharSequenceReader."<init>":(Ljava/lang/CharSequence;)V
	invokevirtual	Method scala/util/parsing/combinator/Parsers$Parser.apply:(Lscala/util/parsing/input/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
	invokevirtual	Method scala/Predef$.println:(Ljava/lang/Object;)V
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      73      0    this       Lscala/util/parsing/combinator/testing/RegexTest$;
   0      73      1    args       [Ljava/lang/String;
   19      53      2    in       Ljava/lang/String;


private scala.util.parsing.combinator.testing.RegexTest$();
  Signature: ()V
  Code:
   Stack=4, Locals=1, Args_size=1
	aload_0
	invokespecial	Method java/lang/Object."<init>":()V
	aload_0
	putstatic	Field MODULE$:Lscala/util/parsing/combinator/testing/RegexTest$;
	aload_0
	invokestatic	Method scala/util/parsing/combinator/Parsers$class.$init$:(Lscala/util/parsing/combinator/Parsers;)V
	aload_0
	invokestatic	Method scala/util/parsing/combinator/RegexParsers$class.$init$:(Lscala/util/parsing/combinator/RegexParsers;)V
	aload_0
	aload_0
	getstatic	Field scala/Predef$.MODULE$:Lscala/Predef$;
	ldc_w	String [a-zA-Z_]\w*
	invokevirtual	Method scala/Predef$.augmentString:(Ljava/lang/String;)Lscala/collection/immutable/StringOps;
	invokeinterface	InterfaceMethod scala/collection/immutable/StringLike.r:()Lscala/util/matching/Regex;
	invokeinterface	InterfaceMethod scala/util/parsing/combinator/RegexParsers.regex:(Lscala/util/matching/Regex;)Lscala/util/parsing/combinator/Parsers$Parser;
	new	class scala/util/parsing/combinator/testing/RegexTest$$anonfun$1
	dup
	invokespecial	Method scala/util/parsing/combinator/testing/RegexTest$$anonfun$1."<init>":()V
	invokevirtual	Method scala/util/parsing/combinator/Parsers$Parser.$up$up:(Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$Parser;
	putfield	Field ident:Lscala/util/parsing/combinator/Parsers$Parser;
	aload_0
	aload_0
	getstatic	Field scala/Predef$.MODULE$:Lscala/Predef$;
	ldc_w	String \d\d*
	invokevirtual	Method scala/Predef$.augmentString:(Ljava/lang/String;)Lscala/collection/immutable/StringOps;
	invokeinterface	InterfaceMethod scala/collection/immutable/StringLike.r:()Lscala/util/matching/Regex;
	invokeinterface	InterfaceMethod scala/util/parsing/combinator/RegexParsers.regex:(Lscala/util/matching/Regex;)Lscala/util/parsing/combinator/Parsers$Parser;
	new	class scala/util/parsing/combinator/testing/RegexTest$$anonfun$2
	dup
	invokespecial	Method scala/util/parsing/combinator/testing/RegexTest$$anonfun$2."<init>":()V
	invokevirtual	Method scala/util/parsing/combinator/Parsers$Parser.$up$up:(Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$Parser;
	putfield	Field number:Lscala/util/parsing/combinator/Parsers$Parser;
	aload_0
	aload_0
	getstatic	Field scala/Predef$.MODULE$:Lscala/Predef$;
	ldc_w	String \".*\"
	invokevirtual	Method scala/Predef$.augmentString:(Ljava/lang/String;)Lscala/collection/immutable/StringOps;
	invokeinterface	InterfaceMethod scala/collection/immutable/StringLike.r:()Lscala/util/matching/Regex;
	invokeinterface	InterfaceMethod scala/util/parsing/combinator/RegexParsers.regex:(Lscala/util/matching/Regex;)Lscala/util/parsing/combinator/Parsers$Parser;
	new	class scala/util/parsing/combinator/testing/RegexTest$$anonfun$3
	dup
	invokespecial	Method scala/util/parsing/combinator/testing/RegexTest$$anonfun$3."<init>":()V
	invokevirtual	Method scala/util/parsing/combinator/Parsers$Parser.$up$up:(Lscala/Function1;)Lscala/util/parsing/combinator/Parsers$Parser;
	putfield	Field string:Lscala/util/parsing/combinator/Parsers$Parser;
	aload_0
	aload_0
	invokevirtual	Method ident:()Lscala/util/parsing/combinator/Parsers$Parser;
	new	class scala/util/parsing/combinator/testing/RegexTest$$anonfun$4
	dup
	invokespecial	Method scala/util/parsing/combinator/testing/RegexTest$$anonfun$4."<init>":()V
	invokevirtual	Method scala/util/parsing/combinator/Parsers$Parser.$bar:(Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
	new	class scala/util/parsing/combinator/testing/RegexTest$$anonfun$5
	dup
	invokespecial	Method scala/util/parsing/combinator/testing/RegexTest$$anonfun$5."<init>":()V
	invokevirtual	Method scala/util/parsing/combinator/Parsers$Parser.$bar:(Lscala/Function0;)Lscala/util/parsing/combinator/Parsers$Parser;
	invokevirtual	Method scala/util/parsing/combinator/Parsers$Parser.$times:()Lscala/util/parsing/combinator/Parsers$Parser;
	putfield	Field parser:Lscala/util/parsing/combinator/Parsers$Parser;
	return
  Labels:

}

