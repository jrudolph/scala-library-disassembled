Compiled from "RegexParsers.scala"
public interface scala.util.parsing.combinator.RegexParsers extends scala.util.parsing.combinator.Parsers,scala.ScalaObject
  SourceFile: "RegexParsers.scala"
  ScalaSig: length = 0x4B8
   05 00 FFFFFF81 3B 06 08 01 02 FFFFFF84 FFFFFF90 FFFFFF80 FFFFFF81 00 0B 02 0C
   52 65 67 65 78 50 61 72 73 65 72 73 0A 02 03 04
   01 0A 63 6F 6D 62 69 6E 61 74 6F 72 0A 02 05 06
   01 07 70 61 72 73 69 6E 67 0A 02 07 08 01 04 75
   74 69 6C 0A 01 09 01 05 73 63 61 6C 61 03 00 13
   04 00 0C 14 18 10 02 0D 12 0D 01 0E 0A 02 0F 10
   01 04 6C 61 6E 67 0A 01 11 01 04 6A 61 76 61 09
   02 13 0E 02 06 4F 62 6A 65 63 74 10 02 15 16 0D
   01 02 09 02 17 02 02 07 50 61 72 73 65 72 73 10
   02 19 1A 0D 01 08 09 02 1B 08 02 0B 53 63 61 6C
   61 4F 62 6A 65 63 74 08 05 1D 00 FFFFFF84 00 1E 01 06
   24 69 6E 69 74 24 14 01 1F 10 02 19 20 09 02 21
   08 02 04 55 6E 69 74 05 08 23 00 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF80 00
   24 02 04 45 6C 65 6D 10 02 19 25 09 02 26 08 02
   04 43 68 61 72 08 07 28 00 FFFFFFC2 FFFFFF80 FFFFFF84 08 29 01 0A
   77 68 69 74 65 53 70 61 63 65 15 01 2A 10 02 2B
   2E 0D 01 2C 0A 02 2D 06 01 08 6D 61 74 63 68 69
   6E 67 09 02 2F 2C 02 05 52 65 67 65 78 08 06 31
   00 FFFFFFA0 FFFFFF80 04 2A 01 0B 77 68 69 74 65 53 70 61 63
   65 20 08 05 33 00 FFFFFF84 00 34 01 0E 73 6B 69 70 57
   68 69 74 65 73 70 61 63 65 15 01 35 10 02 19 36
   09 02 37 08 02 07 42 6F 6F 6C 65 61 6E 08 05 39
   00 FFFFFF84 08 3A 01 10 68 61 6E 64 6C 65 57 68 69 74
   65 53 70 61 63 65 14 03 3B 3E 43 10 02 19 3C 09
   02 3D 08 02 03 49 6E 74 08 05 3F 38 FFFFFFC0 00 40 01
   06 73 6F 75 72 63 65 10 02 0D 41 09 02 42 0E 02
   0C 43 68 61 72 53 65 71 75 65 6E 63 65 08 05 44
   38 FFFFFFC0 00 3B 01 06 6F 66 66 73 65 74 08 05 46 00
   FFFFFF84 01 47 01 07 6C 69 74 65 72 61 6C 14 02 48 53
   10 03 49 4A 4C 0D 01 00 09 02 4B 16 02 06 50 61
   72 73 65 72 10 02 4D 50 0E 02 19 4E 09 02 4F 08
   01 06 50 72 65 64 65 66 09 02 51 52 02 06 53 74
   72 69 6E 67 0A 02 4F 08 08 05 54 45 FFFFFFC0 00 4C 01
   01 73 08 05 56 00 FFFFFF84 01 57 01 05 72 65 67 65 78
   14 02 48 58 08 05 59 55 FFFFFFC0 00 2A 01 01 72 08 05
   5B 00 FFFFFF84 20 5C 01 06 70 68 72 61 73 65 15 02 5D
   61 14 02 5E 6A 10 03 49 4A 5F 10 02 60 61 0C 00
   04 08 62 5A FFFFFF84 FFFFFF80 FFFFFF80 FFFFFFC2 00 63 02 01 54 11 02 64
   67 10 02 19 65 09 02 66 08 02 07 4E 6F 74 68 69
   6E 67 10 02 19 68 09 02 69 08 02 03 41 6E 79 08
   05 6B 5A FFFFFFC0 00 5E 01 01 70 08 05 6D 00 FFFFFF84 00 6E
   01 05 70 61 72 73 65 15 02 6F 74 14 03 70 75 77
   10 03 49 71 73 09 02 72 16 02 0B 50 61 72 73 65
   52 65 73 75 6C 74 10 02 60 74 04 08 62 6C FFFFFF84 FFFFFF80
   FFFFFF80 FFFFFFC2 00 63 08 05 6B 6C FFFFFFC0 00 76 10 03 49 4A 73
   08 05 78 6C FFFFFFC0 00 79 01 02 69 6E 10 03 7A 7D 24
   0D 01 7B 0A 02 7C 04 01 05 69 6E 70 75 74 09 02
   7E 7B 02 06 52 65 61 64 65 72 08 06 6D 00 FFFFFF84 00
   FFFFFF81 00 15 04 FFFFFF81 01 FFFFFF81 04 14 06 FFFFFF81 02 FFFFFF81 05 FFFFFF81 07
   10 04 49 71 FFFFFF81 03 10 03 60 FFFFFF81 04 04 08 62 7F FFFFFF84
   FFFFFF80 FFFFFF80 FFFFFFC2 00 63 08 06 6B 7F FFFFFFC0 00 FFFFFF81 06 10 04 49
   4A FFFFFF81 03 08 05 78 7F FFFFFFC0 00 40 08 06 6D 00 FFFFFF84 00
   FFFFFF81 09 15 04 FFFFFF81 0A FFFFFF81 0D 14 06 FFFFFF81 0B FFFFFF81 0E FFFFFF81 10
   10 04 49 71 FFFFFF81 0C 10 03 60 FFFFFF81 0D 04 09 62 FFFFFF81 08
   FFFFFF84 FFFFFF80 FFFFFF80 FFFFFFC2 00 63 08 07 6B FFFFFF81 08 FFFFFFC0 00 FFFFFF81 0F 10
   04 49 4A FFFFFF81 0C 08 07 78 FFFFFF81 08 FFFFFFC0 00 FFFFFF81 11 10 04
   FFFFFF81 12 FFFFFF81 15 0D 02 FFFFFF81 13 0A 03 FFFFFF81 14 10 01 02 69
   6F 09 03 7E FFFFFF81 13 08 07 FFFFFF81 17 00 FFFFFF84 00 FFFFFF81 18 01
   08 70 61 72 73 65 41 6C 6C 15 04 FFFFFF81 19 FFFFFF81 1C 14
   06 FFFFFF81 1A FFFFFF81 1D FFFFFF81 1F 10 04 49 71 FFFFFF81 1B 10 03 60
   FFFFFF81 1C 04 09 62 FFFFFF81 16 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFFC2 00 63 08 07 6B
   FFFFFF81 16 FFFFFFC0 00 FFFFFF81 1E 10 04 49 4A FFFFFF81 1B 08 06 78 FFFFFF81
   16 FFFFFFC0 00 79 08 07 FFFFFF81 17 00 FFFFFF84 00 FFFFFF81 21 15 04 FFFFFF81
   22 FFFFFF81 25 14 06 FFFFFF81 23 FFFFFF81 26 FFFFFF81 28 10 04 49 71 FFFFFF81
   24 10 03 60 FFFFFF81 25 04 09 62 FFFFFF81 20 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFFC2 00
   63 08 07 6B FFFFFF81 20 FFFFFFC0 00 FFFFFF81 27 10 04 49 4A FFFFFF81 24
   08 07 78 FFFFFF81 20 FFFFFFC0 00 FFFFFF81 11 08 07 FFFFFF81 17 00 FFFFFF84 00
   FFFFFF81 2A 15 04 FFFFFF81 2B FFFFFF81 2E 14 06 FFFFFF81 2C FFFFFF81 2F FFFFFF81 31
   10 04 49 71 FFFFFF81 2D 10 03 60 FFFFFF81 2E 04 09 62 FFFFFF81 29
   FFFFFF84 FFFFFF80 FFFFFF80 FFFFFFC2 00 63 08 07 6B FFFFFF81 29 FFFFFFC0 00 FFFFFF81 30 10
   04 49 4A FFFFFF81 2D 08 06 78 FFFFFF81 29 FFFFFFC0 00 40 08 0C FFFFFF81
   33 00 FFFFFF81 FFFFFF80 FFFFFF80 FFFFFF84 04 FFFFFF81 34 FFFFFF81 3A 01 0C 73 75 70
   65 72 24 70 68 72 61 73 65 15 04 FFFFFF81 35 FFFFFF81 38 14
   04 FFFFFF81 36 FFFFFF81 39 10 04 49 4A FFFFFF81 37 10 03 60 FFFFFF81 38
   04 09 62 FFFFFF81 32 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFFC2 00 63 08 07 6B FFFFFF81 32
   FFFFFFC0 00 FFFFFF81 36 09 02 5B 16 
  InnerClass: 
   public abstract Parser=class scala/util/parsing/combinator/Parsers$Parser of class scala/util/parsing/combinator/Parsers
   public abstract ParseResult=class scala/util/parsing/combinator/Parsers$ParseResult of class scala/util/parsing/combinator/Parsers
   public final $anon$2=class scala/util/parsing/combinator/RegexParsers$$anon$2 of class scala/util/parsing/combinator/RegexParsers
   public final $anon$1=class scala/util/parsing/combinator/RegexParsers$$anon$1 of class scala/util/parsing/combinator/RegexParsers
   public final $anonfun$phrase$1=class scala/util/parsing/combinator/RegexParsers$$anonfun$phrase$1 of class scala/util/parsing/combinator/RegexParsers
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	RegexParsers.scala;
Asciz	scala$util$parsing$combinator$RegexParsers$_setter_$whiteSpace_$eq;
Asciz	(Lscala/util/matching/Regex;)V;
Asciz	scala$util$parsing$combinator$RegexParsers$$super$phrase;
Asciz	(Lscala/util/parsing/combinator/Parsers$Parser;)Lscala/util/parsing/combinator/Parsers$Parser;;
Asciz	whiteSpace;
Asciz	()Lscala/util/matching/Regex;;
Asciz	skipWhitespace;
Asciz	()Z;
Asciz	handleWhiteSpace;
Asciz	(Ljava/lang/CharSequence;I)I;
Asciz	literal;
Asciz	(Ljava/lang/String;)Lscala/util/parsing/combinator/Parsers$Parser;;
Asciz	(Ljava/lang/String;)Lscala/util/parsing/combinator/Parsers$Parser<Ljava/lang/String;>;;
Asciz	Signature;
Asciz	regex;
Asciz	(Lscala/util/matching/Regex;)Lscala/util/parsing/combinator/Parsers$Parser;;
Asciz	(Lscala/util/matching/Regex;)Lscala/util/parsing/combinator/Parsers$Parser<Ljava/lang/String;>;;
Asciz	phrase;
Asciz	<T:Ljava/lang/Object;>(Lscala/util/parsing/combinator/Parsers$Parser<TT;>;)Lscala/util/parsing/combinator/Parsers$Parser<TT;>;;
Asciz	parse;
Asciz	(Lscala/util/parsing/combinator/Parsers$Parser;Lscala/util/parsing/input/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;;
Asciz	<T:Ljava/lang/Object;>(Lscala/util/parsing/combinator/Parsers$Parser<TT;>;Lscala/util/parsing/input/Reader<Ljava/lang/Character;>;)Lscala/util/parsing/combinator/Parsers$ParseResult<TT;>;;
Asciz	(Lscala/util/parsing/combinator/Parsers$Parser;Ljava/lang/CharSequence;)Lscala/util/parsing/combinator/Parsers$ParseResult;;
Asciz	<T:Ljava/lang/Object;>(Lscala/util/parsing/combinator/Parsers$Parser<TT;>;Ljava/lang/CharSequence;)Lscala/util/parsing/combinator/Parsers$ParseResult<TT;>;;
Asciz	(Lscala/util/parsing/combinator/Parsers$Parser;Ljava/io/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;;
Asciz	<T:Ljava/lang/Object;>(Lscala/util/parsing/combinator/Parsers$Parser<TT;>;Ljava/io/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult<TT;>;;
Asciz	parseAll;
Asciz	ScalaSig;
Asciz	InnerClasses;
Asciz	scala/util/parsing/combinator/Parsers$Parser;
class	scala/util/parsing/combinator/Parsers$Parser
Asciz	scala/util/parsing/combinator/Parsers;
class	scala/util/parsing/combinator/Parsers
Asciz	Parser;
Asciz	scala/util/parsing/combinator/Parsers$ParseResult;
class	scala/util/parsing/combinator/Parsers$ParseResult
Asciz	ParseResult;
Asciz	scala/util/parsing/combinator/RegexParsers$$anon$2;
class	scala/util/parsing/combinator/RegexParsers$$anon$2
Asciz	scala/util/parsing/combinator/RegexParsers;
class	scala/util/parsing/combinator/RegexParsers
Asciz	$anon$2;
Asciz	scala/util/parsing/combinator/RegexParsers$$anon$1;
class	scala/util/parsing/combinator/RegexParsers$$anon$1
Asciz	$anon$1;
Asciz	scala/util/parsing/combinator/RegexParsers$$anonfun$phrase$1;
class	scala/util/parsing/combinator/RegexParsers$$anonfun$phrase$1
Asciz	$anonfun$phrase$1;
Asciz	java/lang/Object;
class	java/lang/Object
Asciz	scala/ScalaObject;
class	scala/ScalaObject

{
public abstract void scala$util$parsing$combinator$RegexParsers$_setter_$whiteSpace_$eq(scala.util.matching.Regex);
  Signature: (Lscala/util/matching/Regex;)V

public abstract scala.util.parsing.combinator.Parsers$Parser scala$util$parsing$combinator$RegexParsers$$super$phrase(scala.util.parsing.combinator.Parsers$Parser);
  Signature: (Lscala/util/parsing/combinator/Parsers$Parser;)Lscala/util/parsing/combinator/Parsers$Parser;

public abstract scala.util.matching.Regex whiteSpace();
  Signature: ()Lscala/util/matching/Regex;

public abstract boolean skipWhitespace();
  Signature: ()Z

public abstract int handleWhiteSpace(java.lang.CharSequence, int);
  Signature: (Ljava/lang/CharSequence;I)I

public abstract scala.util.parsing.combinator.Parsers$Parser literal(java.lang.String);
  Signature: (Ljava/lang/String;)Lscala/util/parsing/combinator/Parsers$Parser;
  Signature: length = 0x2
   00 0F 

public abstract scala.util.parsing.combinator.Parsers$Parser regex(scala.util.matching.Regex);
  Signature: (Lscala/util/matching/Regex;)Lscala/util/parsing/combinator/Parsers$Parser;
  Signature: length = 0x2
   00 13 

public abstract scala.util.parsing.combinator.Parsers$Parser phrase(scala.util.parsing.combinator.Parsers$Parser);
  Signature: (Lscala/util/parsing/combinator/Parsers$Parser;)Lscala/util/parsing/combinator/Parsers$Parser;
  Signature: length = 0x2
   00 15 

public abstract scala.util.parsing.combinator.Parsers$ParseResult parse(scala.util.parsing.combinator.Parsers$Parser, scala.util.parsing.input.Reader);
  Signature: (Lscala/util/parsing/combinator/Parsers$Parser;Lscala/util/parsing/input/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
  Signature: length = 0x2
   00 18 

public abstract scala.util.parsing.combinator.Parsers$ParseResult parse(scala.util.parsing.combinator.Parsers$Parser, java.lang.CharSequence);
  Signature: (Lscala/util/parsing/combinator/Parsers$Parser;Ljava/lang/CharSequence;)Lscala/util/parsing/combinator/Parsers$ParseResult;
  Signature: length = 0x2
   00 1A 

public abstract scala.util.parsing.combinator.Parsers$ParseResult parse(scala.util.parsing.combinator.Parsers$Parser, java.io.Reader);
  Signature: (Lscala/util/parsing/combinator/Parsers$Parser;Ljava/io/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
  Signature: length = 0x2
   00 1C 

public abstract scala.util.parsing.combinator.Parsers$ParseResult parseAll(scala.util.parsing.combinator.Parsers$Parser, scala.util.parsing.input.Reader);
  Signature: (Lscala/util/parsing/combinator/Parsers$Parser;Lscala/util/parsing/input/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
  Signature: length = 0x2
   00 18 

public abstract scala.util.parsing.combinator.Parsers$ParseResult parseAll(scala.util.parsing.combinator.Parsers$Parser, java.io.Reader);
  Signature: (Lscala/util/parsing/combinator/Parsers$Parser;Ljava/io/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
  Signature: length = 0x2
   00 1C 

public abstract scala.util.parsing.combinator.Parsers$ParseResult parseAll(scala.util.parsing.combinator.Parsers$Parser, java.lang.CharSequence);
  Signature: (Lscala/util/parsing/combinator/Parsers$Parser;Ljava/lang/CharSequence;)Lscala/util/parsing/combinator/Parsers$ParseResult;
  Signature: length = 0x2
   00 1A 

}

