Compiled from "Parsers.scala"
public final class scala.util.parsing.combinator.Parsers$$anonfun$acceptIf$1 extends scala.runtime.AbstractFunction1 implements java.io.Serializable
  SourceFile: "Parsers.scala"
  Scala: length = 0x
   
  InnerClass: 
   public #83= #69 of #82; //Failure=class scala/util/parsing/combinator/Parsers$Failure of class scala/util/parsing/combinator/Parsers
   public #84= #60 of #82; //Success=class scala/util/parsing/combinator/Parsers$Success of class scala/util/parsing/combinator/Parsers
   public abstract #87= #86 of #82; //ParseResult=class scala/util/parsing/combinator/Parsers$ParseResult of class scala/util/parsing/combinator/Parsers
   public final #88= #9 of #82; //$anonfun$acceptIf$1=class scala/util/parsing/combinator/Parsers$$anonfun$acceptIf$1 of class scala/util/parsing/combinator/Parsers
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Parsers.scala;
const #3 = Asciz	<clinit>;
const #4 = Asciz	()V;
const #5 = Asciz	Code;
const #6 = Asciz	serialVersionUID;
const #7 = Asciz	J;
const #8 = Asciz	scala/util/parsing/combinator/Parsers$$anonfun$acceptIf$1;
const #9 = class	#8;	//  scala/util/parsing/combinator/Parsers$$anonfun$acceptIf$1
const #10 = NameAndType	#6:#7;//  serialVersionUID:J
const #11 = Field	#9.#10;	//  scala/util/parsing/combinator/Parsers$$anonfun$acceptIf$1.serialVersionUID:J
const #12 = Asciz	err$1;
const #13 = Asciz	Lscala/Function1;;
const #14 = Asciz	p$11;
const #15 = Asciz	$outer;
const #16 = Asciz	Lscala/util/parsing/combinator/Parsers;;
const #17 = Asciz	<init>;
const #18 = Asciz	(Lscala/util/parsing/combinator/Parsers;Lscala/Function1;Lscala/Function1;)V;
const #19 = Asciz	LineNumberTable;
const #20 = Asciz	java/lang/NullPointerException;
const #21 = class	#20;	//  java/lang/NullPointerException
const #22 = NameAndType	#17:#4;//  "<init>":()V
const #23 = Method	#21.#22;	//  java/lang/NullPointerException."<init>":()V
const #24 = NameAndType	#15:#16;//  $outer:Lscala/util/parsing/combinator/Parsers;
const #25 = Field	#9.#24;	//  scala/util/parsing/combinator/Parsers$$anonfun$acceptIf$1.$outer:Lscala/util/parsing/combinator/Parsers;
const #26 = NameAndType	#14:#13;//  p$11:Lscala/Function1;
const #27 = Field	#9.#26;	//  scala/util/parsing/combinator/Parsers$$anonfun$acceptIf$1.p$11:Lscala/Function1;
const #28 = NameAndType	#12:#13;//  err$1:Lscala/Function1;
const #29 = Field	#9.#28;	//  scala/util/parsing/combinator/Parsers$$anonfun$acceptIf$1.err$1:Lscala/Function1;
const #30 = Asciz	scala/runtime/AbstractFunction1;
const #31 = class	#30;	//  scala/runtime/AbstractFunction1
const #32 = Method	#31.#22;	//  scala/runtime/AbstractFunction1."<init>":()V
const #33 = Asciz	this;
const #34 = Asciz	Lscala/util/parsing/combinator/Parsers$$anonfun$acceptIf$1;;
const #35 = Asciz	LocalVariableTable;
const #36 = Asciz	apply;
const #37 = Asciz	(Ljava/lang/Object;)Ljava/lang/Object;;
const #38 = Asciz	scala/util/parsing/input/Reader;
const #39 = class	#38;	//  scala/util/parsing/input/Reader
const #40 = Asciz	(Lscala/util/parsing/input/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;;
const #41 = NameAndType	#36:#40;//  apply:(Lscala/util/parsing/input/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
const #42 = Method	#9.#41;	//  scala/util/parsing/combinator/Parsers$$anonfun$acceptIf$1.apply:(Lscala/util/parsing/input/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
const #43 = Asciz	v1;
const #44 = Asciz	Ljava/lang/Object;;
const #45 = Asciz	first;
const #46 = Asciz	()Ljava/lang/Object;;
const #47 = NameAndType	#45:#46;//  first:()Ljava/lang/Object;
const #48 = Method	#39.#47;	//  scala/util/parsing/input/Reader.first:()Ljava/lang/Object;
const #49 = Asciz	scala/Function1;
const #50 = class	#49;	//  scala/Function1
const #51 = NameAndType	#36:#37;//  apply:(Ljava/lang/Object;)Ljava/lang/Object;
const #52 = InterfaceMethod	#50.#51;	//  scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
const #53 = Asciz	scala/runtime/BoxesRunTime;
const #54 = class	#53;	//  scala/runtime/BoxesRunTime
const #55 = Asciz	unboxToBoolean;
const #56 = Asciz	(Ljava/lang/Object;)Z;
const #57 = NameAndType	#55:#56;//  unboxToBoolean:(Ljava/lang/Object;)Z
const #58 = Method	#54.#57;	//  scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
const #59 = Asciz	scala/util/parsing/combinator/Parsers$Success;
const #60 = class	#59;	//  scala/util/parsing/combinator/Parsers$Success
const #61 = Asciz	rest;
const #62 = Asciz	()Lscala/util/parsing/input/Reader;;
const #63 = NameAndType	#61:#62;//  rest:()Lscala/util/parsing/input/Reader;
const #64 = Method	#39.#63;	//  scala/util/parsing/input/Reader.rest:()Lscala/util/parsing/input/Reader;
const #65 = Asciz	(Lscala/util/parsing/combinator/Parsers;Ljava/lang/Object;Lscala/util/parsing/input/Reader;)V;
const #66 = NameAndType	#17:#65;//  "<init>":(Lscala/util/parsing/combinator/Parsers;Ljava/lang/Object;Lscala/util/parsing/input/Reader;)V
const #67 = Method	#60.#66;	//  scala/util/parsing/combinator/Parsers$Success."<init>":(Lscala/util/parsing/combinator/Parsers;Ljava/lang/Object;Lscala/util/parsing/input/Reader;)V
const #68 = Asciz	scala/util/parsing/combinator/Parsers$Failure;
const #69 = class	#68;	//  scala/util/parsing/combinator/Parsers$Failure
const #70 = Asciz	java/lang/String;
const #71 = class	#70;	//  java/lang/String
const #72 = Asciz	(Lscala/util/parsing/combinator/Parsers;Ljava/lang/String;Lscala/util/parsing/input/Reader;)V;
const #73 = NameAndType	#17:#72;//  "<init>":(Lscala/util/parsing/combinator/Parsers;Ljava/lang/String;Lscala/util/parsing/input/Reader;)V
const #74 = Method	#69.#73;	//  scala/util/parsing/combinator/Parsers$Failure."<init>":(Lscala/util/parsing/combinator/Parsers;Ljava/lang/String;Lscala/util/parsing/input/Reader;)V
const #75 = Asciz	in;
const #76 = Asciz	Lscala/util/parsing/input/Reader;;
const #77 = Asciz	(Lscala/util/parsing/input/Reader<Ljava/lang/Object;>;)Lscala/util/parsing/combinator/Parsers$ParseResult<Ljava/lang/Object;>;;
const #78 = Asciz	Signature;
const #79 = Asciz	Scala;
const #80 = Asciz	InnerClasses;
const #81 = Asciz	scala/util/parsing/combinator/Parsers;
const #82 = class	#81;	//  scala/util/parsing/combinator/Parsers
const #83 = Asciz	Failure;
const #84 = Asciz	Success;
const #85 = Asciz	scala/util/parsing/combinator/Parsers$ParseResult;
const #86 = class	#85;	//  scala/util/parsing/combinator/Parsers$ParseResult
const #87 = Asciz	ParseResult;
const #88 = Asciz	$anonfun$acceptIf$1;
const #89 = Asciz	java/io/Serializable;
const #90 = class	#89;	//  java/io/Serializable

{
public static final long serialVersionUID;

public static {};
  Code:
   Stack=2, Locals=0, Args_size=0
   0:	lconst_0
   1:	putstatic	#11; //Field serialVersionUID:J
   4:	return

public scala.util.parsing.combinator.Parsers$$anonfun$acceptIf$1(scala.util.parsing.combinator.Parsers, scala.Function1, scala.Function1);
  Code:
   Stack=2, Locals=4, Args_size=4
   0:	aload_1
   1:	ifnonnull	12
   4:	new	#21; //class java/lang/NullPointerException
   7:	dup
   8:	invokespecial	#23; //Method java/lang/NullPointerException."<init>":()V
   11:	athrow
   12:	aload_0
   13:	aload_1
   14:	putfield	#25; //Field $outer:Lscala/util/parsing/combinator/Parsers;
   17:	aload_0
   18:	aload_2
   19:	putfield	#27; //Field p$11:Lscala/Function1;
   22:	aload_0
   23:	aload_3
   24:	putfield	#29; //Field err$1:Lscala/Function1;
   27:	aload_0
   28:	invokespecial	#32; //Method scala/runtime/AbstractFunction1."<init>":()V
   31:	return
  LineNumberTable: 
   line 501: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      32      0    this       Lscala/util/parsing/combinator/Parsers$$anonfun$acceptIf$1;
   0      32      1    $outer       Lscala/util/parsing/combinator/Parsers;


public final java.lang.Object apply(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	checkcast	#39; //class scala/util/parsing/input/Reader
   5:	invokevirtual	#42; //Method apply:(Lscala/util/parsing/input/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
   8:	areturn
  LineNumberTable: 
   line 501: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/util/parsing/combinator/Parsers$$anonfun$acceptIf$1;
   0      9      1    v1       Ljava/lang/Object;


public final scala.util.parsing.combinator.Parsers$ParseResult apply(scala.util.parsing.input.Reader);
  Code:
   Stack=5, Locals=2, Args_size=2
   0:	aload_0
   1:	getfield	#27; //Field p$11:Lscala/Function1;
   4:	aload_1
   5:	invokevirtual	#48; //Method scala/util/parsing/input/Reader.first:()Ljava/lang/Object;
   8:	invokeinterface	#52,  2; //InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
   13:	invokestatic	#58; //Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
   16:	ifeq	41
   19:	new	#60; //class scala/util/parsing/combinator/Parsers$Success
   22:	dup
   23:	aload_0
   24:	getfield	#25; //Field $outer:Lscala/util/parsing/combinator/Parsers;
   27:	aload_1
   28:	invokevirtual	#48; //Method scala/util/parsing/input/Reader.first:()Ljava/lang/Object;
   31:	aload_1
   32:	invokevirtual	#64; //Method scala/util/parsing/input/Reader.rest:()Lscala/util/parsing/input/Reader;
   35:	invokespecial	#67; //Method scala/util/parsing/combinator/Parsers$Success."<init>":(Lscala/util/parsing/combinator/Parsers;Ljava/lang/Object;Lscala/util/parsing/input/Reader;)V
   38:	goto	69
   41:	new	#69; //class scala/util/parsing/combinator/Parsers$Failure
   44:	dup
   45:	aload_0
   46:	getfield	#25; //Field $outer:Lscala/util/parsing/combinator/Parsers;
   49:	aload_0
   50:	getfield	#29; //Field err$1:Lscala/Function1;
   53:	aload_1
   54:	invokevirtual	#48; //Method scala/util/parsing/input/Reader.first:()Ljava/lang/Object;
   57:	invokeinterface	#52,  2; //InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
   62:	checkcast	#71; //class java/lang/String
   65:	aload_1
   66:	invokespecial	#74; //Method scala/util/parsing/combinator/Parsers$Failure."<init>":(Lscala/util/parsing/combinator/Parsers;Ljava/lang/String;Lscala/util/parsing/input/Reader;)V
   69:	areturn
  LineNumberTable: 
   line 502: 0
   line 503: 41
   line 502: 69

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      70      0    this       Lscala/util/parsing/combinator/Parsers$$anonfun$acceptIf$1;
   0      70      1    in       Lscala/util/parsing/input/Reader;

  Signature: length = 0x2
   00 4D 

}

