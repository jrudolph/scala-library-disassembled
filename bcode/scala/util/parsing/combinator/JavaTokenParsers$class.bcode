Compiled from "JavaTokenParsers.scala"
public abstract class scala.util.parsing.combinator.JavaTokenParsers$class extends java.lang.Object
  SourceFile: "JavaTokenParsers.scala"
  Scala: length = 0x
   
  InnerClass: 
   public abstract Parser=class scala/util/parsing/combinator/Parsers$Parser of class scala/util/parsing/combinator/Parsers
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	JavaTokenParsers.scala;
Asciz	ident;
Asciz	(Lscala/util/parsing/combinator/JavaTokenParsers;)Lscala/util/parsing/combinator/Parsers$Parser;;
Asciz	Code;
Asciz	LineNumberTable;
Asciz	scala/Predef$;
class	scala/Predef$
Asciz	MODULE$;
Asciz	Lscala/Predef$;;
NameAndType	MODULE$:Lscala/Predef$;
Field	scala/Predef$.MODULE$:Lscala/Predef$;
Asciz	[a-zA-Z_]\w*;
String	[a-zA-Z_]\w*
Asciz	augmentString;
Asciz	(Ljava/lang/String;)Lscala/collection/immutable/StringOps;;
NameAndType	augmentString:(Ljava/lang/String;)Lscala/collection/immutable/StringOps;
Method	scala/Predef$.augmentString:(Ljava/lang/String;)Lscala/collection/immutable/StringOps;
Asciz	scala/collection/immutable/StringLike;
class	scala/collection/immutable/StringLike
Asciz	r;
Asciz	()Lscala/util/matching/Regex;;
NameAndType	r:()Lscala/util/matching/Regex;
InterfaceMethod	scala/collection/immutable/StringLike.r:()Lscala/util/matching/Regex;
Asciz	scala/util/parsing/combinator/RegexParsers;
class	scala/util/parsing/combinator/RegexParsers
Asciz	regex;
Asciz	(Lscala/util/matching/Regex;)Lscala/util/parsing/combinator/Parsers$Parser;;
NameAndType	regex:(Lscala/util/matching/Regex;)Lscala/util/parsing/combinator/Parsers$Parser;
InterfaceMethod	scala/util/parsing/combinator/RegexParsers.regex:(Lscala/util/matching/Regex;)Lscala/util/parsing/combinator/Parsers$Parser;
Asciz	$this;
Asciz	Lscala/util/parsing/combinator/JavaTokenParsers;;
Asciz	LocalVariableTable;
Asciz	wholeNumber;
Asciz	-?\d+;
String	-?\d+
Asciz	decimalNumber;
Asciz	(\d+(\.\d*)?|\d*\.\d+);
String	(\d+(\.\d*)?|\d*\.\d+)
Asciz	stringLiteral;
Asciz	\"([^\"\p{Cntrl}\\]|\\[\\/bfnrt]|\\u[a-fA-F0-9]{4})*\";
String	\"([^\"\p{Cntrl}\\]|\\[\\/bfnrt]|\\u[a-fA-F0-9]{4})*\"
Asciz	floatingPointNumber;
Asciz	-?(\d+(\.\d*)?|\d*\.\d+)([eE][+-]?\d+)?[fFdD]?;
String	-?(\d+(\.\d*)?|\d*\.\d+)([eE][+-]?\d+)?[fFdD]?
Asciz	$init$;
Asciz	(Lscala/util/parsing/combinator/JavaTokenParsers;)V;
Asciz	Scala;
Asciz	InnerClasses;
Asciz	scala/util/parsing/combinator/Parsers$Parser;
class	scala/util/parsing/combinator/Parsers$Parser
Asciz	scala/util/parsing/combinator/Parsers;
class	scala/util/parsing/combinator/Parsers
Asciz	Parser;
Asciz	scala/util/parsing/combinator/JavaTokenParsers$class;
class	scala/util/parsing/combinator/JavaTokenParsers$class
Asciz	java/lang/Object;
class	java/lang/Object

{
public static scala.util.parsing.combinator.Parsers$Parser ident(scala.util.parsing.combinator.JavaTokenParsers);
  Signature: (Lscala/util/parsing/combinator/JavaTokenParsers;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=3, Locals=1, Args_size=1
	aload_0
	getstatic	Field scala/Predef$.MODULE$:Lscala/Predef$;
	ldc	String [a-zA-Z_]\w*
	invokevirtual	Method scala/Predef$.augmentString:(Ljava/lang/String;)Lscala/collection/immutable/StringOps;
	invokeinterface	InterfaceMethod scala/collection/immutable/StringLike.r:()Lscala/util/matching/Regex;
	invokeinterface	InterfaceMethod scala/util/parsing/combinator/RegexParsers.regex:(Lscala/util/matching/Regex;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      20      0    $this       Lscala/util/parsing/combinator/JavaTokenParsers;


public static scala.util.parsing.combinator.Parsers$Parser wholeNumber(scala.util.parsing.combinator.JavaTokenParsers);
  Signature: (Lscala/util/parsing/combinator/JavaTokenParsers;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=3, Locals=1, Args_size=1
	aload_0
	getstatic	Field scala/Predef$.MODULE$:Lscala/Predef$;
	ldc	String -?\d+
	invokevirtual	Method scala/Predef$.augmentString:(Ljava/lang/String;)Lscala/collection/immutable/StringOps;
	invokeinterface	InterfaceMethod scala/collection/immutable/StringLike.r:()Lscala/util/matching/Regex;
	invokeinterface	InterfaceMethod scala/util/parsing/combinator/RegexParsers.regex:(Lscala/util/matching/Regex;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      20      0    $this       Lscala/util/parsing/combinator/JavaTokenParsers;


public static scala.util.parsing.combinator.Parsers$Parser decimalNumber(scala.util.parsing.combinator.JavaTokenParsers);
  Signature: (Lscala/util/parsing/combinator/JavaTokenParsers;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=3, Locals=1, Args_size=1
	aload_0
	getstatic	Field scala/Predef$.MODULE$:Lscala/Predef$;
	ldc	String (\d+(\.\d*)?|\d*\.\d+)
	invokevirtual	Method scala/Predef$.augmentString:(Ljava/lang/String;)Lscala/collection/immutable/StringOps;
	invokeinterface	InterfaceMethod scala/collection/immutable/StringLike.r:()Lscala/util/matching/Regex;
	invokeinterface	InterfaceMethod scala/util/parsing/combinator/RegexParsers.regex:(Lscala/util/matching/Regex;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      20      0    $this       Lscala/util/parsing/combinator/JavaTokenParsers;


public static scala.util.parsing.combinator.Parsers$Parser stringLiteral(scala.util.parsing.combinator.JavaTokenParsers);
  Signature: (Lscala/util/parsing/combinator/JavaTokenParsers;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=3, Locals=1, Args_size=1
	aload_0
	getstatic	Field scala/Predef$.MODULE$:Lscala/Predef$;
	ldc	String \"([^\"\p{Cntrl}\\]|\\[\\/bfnrt]|\\u[a-fA-F0-9]{4})*\"
	invokevirtual	Method scala/Predef$.augmentString:(Ljava/lang/String;)Lscala/collection/immutable/StringOps;
	invokeinterface	InterfaceMethod scala/collection/immutable/StringLike.r:()Lscala/util/matching/Regex;
	invokeinterface	InterfaceMethod scala/util/parsing/combinator/RegexParsers.regex:(Lscala/util/matching/Regex;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      20      0    $this       Lscala/util/parsing/combinator/JavaTokenParsers;


public static scala.util.parsing.combinator.Parsers$Parser floatingPointNumber(scala.util.parsing.combinator.JavaTokenParsers);
  Signature: (Lscala/util/parsing/combinator/JavaTokenParsers;)Lscala/util/parsing/combinator/Parsers$Parser;
  Code:
   Stack=3, Locals=1, Args_size=1
	aload_0
	getstatic	Field scala/Predef$.MODULE$:Lscala/Predef$;
	ldc	String -?(\d+(\.\d*)?|\d*\.\d+)([eE][+-]?\d+)?[fFdD]?
	invokevirtual	Method scala/Predef$.augmentString:(Ljava/lang/String;)Lscala/collection/immutable/StringOps;
	invokeinterface	InterfaceMethod scala/collection/immutable/StringLike.r:()Lscala/util/matching/Regex;
	invokeinterface	InterfaceMethod scala/util/parsing/combinator/RegexParsers.regex:(Lscala/util/matching/Regex;)Lscala/util/parsing/combinator/Parsers$Parser;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      20      0    $this       Lscala/util/parsing/combinator/JavaTokenParsers;


public static void $init$(scala.util.parsing.combinator.JavaTokenParsers);
  Signature: (Lscala/util/parsing/combinator/JavaTokenParsers;)V
  Code:
   Stack=0, Locals=1, Args_size=1
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      1      0    $this       Lscala/util/parsing/combinator/JavaTokenParsers;


}

