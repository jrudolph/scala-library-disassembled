Compiled from "JavaTokenParsers.scala"
public abstract class scala.util.parsing.combinator.JavaTokenParsers$class extends java.lang.Object
  SourceFile: "JavaTokenParsers.scala"
  Scala: length = 0x
   
  InnerClass: 
   public abstract #54= #51 of #53; //Parser=class scala/util/parsing/combinator/Parsers$Parser of class scala/util/parsing/combinator/Parsers
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	JavaTokenParsers.scala;
const #3 = Asciz	$init$;
const #4 = Asciz	(Lscala/util/parsing/combinator/JavaTokenParsers;)V;
const #5 = Asciz	Code;
const #6 = Asciz	LineNumberTable;
const #7 = Asciz	$this;
const #8 = Asciz	Lscala/util/parsing/combinator/JavaTokenParsers;;
const #9 = Asciz	LocalVariableTable;
const #10 = Asciz	floatingPointNumber;
const #11 = Asciz	(Lscala/util/parsing/combinator/JavaTokenParsers;)Lscala/util/parsing/combinator/Parsers$Parser;;
const #12 = Asciz	scala/Predef$;
const #13 = class	#12;	//  scala/Predef$
const #14 = Asciz	MODULE$;
const #15 = Asciz	Lscala/Predef$;;
const #16 = NameAndType	#14:#15;//  MODULE$:Lscala/Predef$;
const #17 = Field	#13.#16;	//  scala/Predef$.MODULE$:Lscala/Predef$;
const #18 = Asciz	-?(\d+(\.\d*)?|\d*\.\d+)([eE][+-]?\d+)?[fFdD]?;
const #19 = String	#18;	//  -?(\d+(\.\d*)?|\d*\.\d+)([eE][+-]?\d+)?[fFdD]?
const #20 = Asciz	augmentString;
const #21 = Asciz	(Ljava/lang/String;)Lscala/collection/immutable/StringOps;;
const #22 = NameAndType	#20:#21;//  augmentString:(Ljava/lang/String;)Lscala/collection/immutable/StringOps;
const #23 = Method	#13.#22;	//  scala/Predef$.augmentString:(Ljava/lang/String;)Lscala/collection/immutable/StringOps;
const #24 = Asciz	scala/collection/immutable/StringLike;
const #25 = class	#24;	//  scala/collection/immutable/StringLike
const #26 = Asciz	r;
const #27 = Asciz	()Lscala/util/matching/Regex;;
const #28 = NameAndType	#26:#27;//  r:()Lscala/util/matching/Regex;
const #29 = InterfaceMethod	#25.#28;	//  scala/collection/immutable/StringLike.r:()Lscala/util/matching/Regex;
const #30 = Asciz	scala/util/parsing/combinator/RegexParsers;
const #31 = class	#30;	//  scala/util/parsing/combinator/RegexParsers
const #32 = Asciz	regex;
const #33 = Asciz	(Lscala/util/matching/Regex;)Lscala/util/parsing/combinator/Parsers$Parser;;
const #34 = NameAndType	#32:#33;//  regex:(Lscala/util/matching/Regex;)Lscala/util/parsing/combinator/Parsers$Parser;
const #35 = InterfaceMethod	#31.#34;	//  scala/util/parsing/combinator/RegexParsers.regex:(Lscala/util/matching/Regex;)Lscala/util/parsing/combinator/Parsers$Parser;
const #36 = Asciz	stringLiteral;
const #37 = Asciz	\"([^\"\p{Cntrl}\\]|\\[\\/bfnrt]|\\u[a-fA-F0-9]{4})*\";
const #38 = String	#37;	//  \"([^\"\p{Cntrl}\\]|\\[\\/bfnrt]|\\u[a-fA-F0-9]{4})*\"
const #39 = Asciz	decimalNumber;
const #40 = Asciz	(\d+(\.\d*)?|\d*\.\d+);
const #41 = String	#40;	//  (\d+(\.\d*)?|\d*\.\d+)
const #42 = Asciz	wholeNumber;
const #43 = Asciz	-?\d+;
const #44 = String	#43;	//  -?\d+
const #45 = Asciz	ident;
const #46 = Asciz	[a-zA-Z_]\w*;
const #47 = String	#46;	//  [a-zA-Z_]\w*
const #48 = Asciz	Scala;
const #49 = Asciz	InnerClasses;
const #50 = Asciz	scala/util/parsing/combinator/Parsers$Parser;
const #51 = class	#50;	//  scala/util/parsing/combinator/Parsers$Parser
const #52 = Asciz	scala/util/parsing/combinator/Parsers;
const #53 = class	#52;	//  scala/util/parsing/combinator/Parsers
const #54 = Asciz	Parser;
const #55 = Asciz	scala/util/parsing/combinator/JavaTokenParsers$class;
const #56 = class	#55;	//  scala/util/parsing/combinator/JavaTokenParsers$class
const #57 = Asciz	java/lang/Object;
const #58 = class	#57;	//  java/lang/Object

{
public static void $init$(scala.util.parsing.combinator.JavaTokenParsers);
  Code:
   Stack=0, Locals=1, Args_size=1
   0:	return
  LineNumberTable: 
   line 13: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      1      0    $this       Lscala/util/parsing/combinator/JavaTokenParsers;


public static scala.util.parsing.combinator.Parsers$Parser floatingPointNumber(scala.util.parsing.combinator.JavaTokenParsers);
  Code:
   Stack=3, Locals=1, Args_size=1
   0:	aload_0
   1:	getstatic	#17; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   4:	ldc	#19; //String -?(\d+(\.\d*)?|\d*\.\d+)([eE][+-]?\d+)?[fFdD]?
   6:	invokevirtual	#23; //Method scala/Predef$.augmentString:(Ljava/lang/String;)Lscala/collection/immutable/StringOps;
   9:	invokeinterface	#29,  1; //InterfaceMethod scala/collection/immutable/StringLike.r:()Lscala/util/matching/Regex;
   14:	invokeinterface	#35,  2; //InterfaceMethod scala/util/parsing/combinator/RegexParsers.regex:(Lscala/util/matching/Regex;)Lscala/util/parsing/combinator/Parsers$Parser;
   19:	areturn
  LineNumberTable: 
   line 23: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      20      0    $this       Lscala/util/parsing/combinator/JavaTokenParsers;


public static scala.util.parsing.combinator.Parsers$Parser stringLiteral(scala.util.parsing.combinator.JavaTokenParsers);
  Code:
   Stack=3, Locals=1, Args_size=1
   0:	aload_0
   1:	getstatic	#17; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   4:	ldc	#38; //String \"([^\"\p{Cntrl}\\]|\\[\\/bfnrt]|\\u[a-fA-F0-9]{4})*\"
   6:	invokevirtual	#23; //Method scala/Predef$.augmentString:(Ljava/lang/String;)Lscala/collection/immutable/StringOps;
   9:	invokeinterface	#29,  1; //InterfaceMethod scala/collection/immutable/StringLike.r:()Lscala/util/matching/Regex;
   14:	invokeinterface	#35,  2; //InterfaceMethod scala/util/parsing/combinator/RegexParsers.regex:(Lscala/util/matching/Regex;)Lscala/util/parsing/combinator/Parsers$Parser;
   19:	areturn
  LineNumberTable: 
   line 21: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      20      0    $this       Lscala/util/parsing/combinator/JavaTokenParsers;


public static scala.util.parsing.combinator.Parsers$Parser decimalNumber(scala.util.parsing.combinator.JavaTokenParsers);
  Code:
   Stack=3, Locals=1, Args_size=1
   0:	aload_0
   1:	getstatic	#17; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   4:	ldc	#41; //String (\d+(\.\d*)?|\d*\.\d+)
   6:	invokevirtual	#23; //Method scala/Predef$.augmentString:(Ljava/lang/String;)Lscala/collection/immutable/StringOps;
   9:	invokeinterface	#29,  1; //InterfaceMethod scala/collection/immutable/StringLike.r:()Lscala/util/matching/Regex;
   14:	invokeinterface	#35,  2; //InterfaceMethod scala/util/parsing/combinator/RegexParsers.regex:(Lscala/util/matching/Regex;)Lscala/util/parsing/combinator/Parsers$Parser;
   19:	areturn
  LineNumberTable: 
   line 19: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      20      0    $this       Lscala/util/parsing/combinator/JavaTokenParsers;


public static scala.util.parsing.combinator.Parsers$Parser wholeNumber(scala.util.parsing.combinator.JavaTokenParsers);
  Code:
   Stack=3, Locals=1, Args_size=1
   0:	aload_0
   1:	getstatic	#17; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   4:	ldc	#44; //String -?\d+
   6:	invokevirtual	#23; //Method scala/Predef$.augmentString:(Ljava/lang/String;)Lscala/collection/immutable/StringOps;
   9:	invokeinterface	#29,  1; //InterfaceMethod scala/collection/immutable/StringLike.r:()Lscala/util/matching/Regex;
   14:	invokeinterface	#35,  2; //InterfaceMethod scala/util/parsing/combinator/RegexParsers.regex:(Lscala/util/matching/Regex;)Lscala/util/parsing/combinator/Parsers$Parser;
   19:	areturn
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      20      0    $this       Lscala/util/parsing/combinator/JavaTokenParsers;


public static scala.util.parsing.combinator.Parsers$Parser ident(scala.util.parsing.combinator.JavaTokenParsers);
  Code:
   Stack=3, Locals=1, Args_size=1
   0:	aload_0
   1:	getstatic	#17; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   4:	ldc	#47; //String [a-zA-Z_]\w*
   6:	invokevirtual	#23; //Method scala/Predef$.augmentString:(Ljava/lang/String;)Lscala/collection/immutable/StringOps;
   9:	invokeinterface	#29,  1; //InterfaceMethod scala/collection/immutable/StringLike.r:()Lscala/util/matching/Regex;
   14:	invokeinterface	#35,  2; //InterfaceMethod scala/util/parsing/combinator/RegexParsers.regex:(Lscala/util/matching/Regex;)Lscala/util/parsing/combinator/Parsers$Parser;
   19:	areturn
  LineNumberTable: 
   line 15: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      20      0    $this       Lscala/util/parsing/combinator/JavaTokenParsers;


}

