Compiled from "StdLexical.scala"
public final class scala.util.parsing.combinator.lexical.StdLexical$$anonfun$comment$2 extends scala.runtime.AbstractFunction1 implements java.io.Serializable
  SourceFile: "StdLexical.scala"
  Scala: length = 0x
   
  InnerClass: 
   public #55= #27 of #54; //$tilde=class scala/util/parsing/combinator/Parsers$$tilde of class scala/util/parsing/combinator/Parsers
   public final #58= #9 of #57; //$anonfun$comment$2=class scala/util/parsing/combinator/lexical/StdLexical$$anonfun$comment$2 of class scala/util/parsing/combinator/lexical/StdLexical
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	StdLexical.scala;
const #3 = Asciz	<clinit>;
const #4 = Asciz	()V;
const #5 = Asciz	Code;
const #6 = Asciz	serialVersionUID;
const #7 = Asciz	J;
const #8 = Asciz	scala/util/parsing/combinator/lexical/StdLexical$$anonfun$comment$2;
const #9 = class	#8;	//  scala/util/parsing/combinator/lexical/StdLexical$$anonfun$comment$2
const #10 = NameAndType	#6:#7;//  serialVersionUID:J
const #11 = Field	#9.#10;	//  scala/util/parsing/combinator/lexical/StdLexical$$anonfun$comment$2.serialVersionUID:J
const #12 = Asciz	<init>;
const #13 = Asciz	(Lscala/util/parsing/combinator/lexical/StdLexical;)V;
const #14 = Asciz	LineNumberTable;
const #15 = Asciz	scala/runtime/AbstractFunction1;
const #16 = class	#15;	//  scala/runtime/AbstractFunction1
const #17 = NameAndType	#12:#4;//  "<init>":()V
const #18 = Method	#16.#17;	//  scala/runtime/AbstractFunction1."<init>":()V
const #19 = Asciz	this;
const #20 = Asciz	Lscala/util/parsing/combinator/lexical/StdLexical$$anonfun$comment$2;;
const #21 = Asciz	$outer;
const #22 = Asciz	Lscala/util/parsing/combinator/lexical/StdLexical;;
const #23 = Asciz	LocalVariableTable;
const #24 = Asciz	apply;
const #25 = Asciz	(Ljava/lang/Object;)Ljava/lang/Object;;
const #26 = Asciz	scala/util/parsing/combinator/Parsers$$tilde;
const #27 = class	#26;	//  scala/util/parsing/combinator/Parsers$$tilde
const #28 = Asciz	(Lscala/util/parsing/combinator/Parsers$$tilde;)C;
const #29 = NameAndType	#24:#28;//  apply:(Lscala/util/parsing/combinator/Parsers$$tilde;)C
const #30 = Method	#9.#29;	//  scala/util/parsing/combinator/lexical/StdLexical$$anonfun$comment$2.apply:(Lscala/util/parsing/combinator/Parsers$$tilde;)C
const #31 = Asciz	scala/runtime/BoxesRunTime;
const #32 = class	#31;	//  scala/runtime/BoxesRunTime
const #33 = Asciz	boxToCharacter;
const #34 = Asciz	(C)Ljava/lang/Character;;
const #35 = NameAndType	#33:#34;//  boxToCharacter:(C)Ljava/lang/Character;
const #36 = Method	#32.#35;	//  scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
const #37 = Asciz	v1;
const #38 = Asciz	Ljava/lang/Object;;
const #39 = int	32;
const #40 = Asciz	scala/MatchError;
const #41 = class	#40;	//  scala/MatchError
const #42 = Asciz	toString;
const #43 = Asciz	()Ljava/lang/String;;
const #44 = NameAndType	#42:#43;//  toString:()Ljava/lang/String;
const #45 = Method	#27.#44;	//  scala/util/parsing/combinator/Parsers$$tilde.toString:()Ljava/lang/String;
const #46 = Asciz	(Ljava/lang/String;)V;
const #47 = NameAndType	#12:#46;//  "<init>":(Ljava/lang/String;)V
const #48 = Method	#41.#47;	//  scala/MatchError."<init>":(Ljava/lang/String;)V
const #49 = Asciz	(Lscala/util/parsing/combinator/Parsers$$tilde<Ljava/lang/Character;Ljava/lang/Character;>;)C;
const #50 = Asciz	Signature;
const #51 = Asciz	Scala;
const #52 = Asciz	InnerClasses;
const #53 = Asciz	scala/util/parsing/combinator/Parsers;
const #54 = class	#53;	//  scala/util/parsing/combinator/Parsers
const #55 = Asciz	$tilde;
const #56 = Asciz	scala/util/parsing/combinator/lexical/StdLexical;
const #57 = class	#56;	//  scala/util/parsing/combinator/lexical/StdLexical
const #58 = Asciz	$anonfun$comment$2;
const #59 = Asciz	java/io/Serializable;
const #60 = class	#59;	//  java/io/Serializable

{
public static final long serialVersionUID;

public static {};
  Code:
   Stack=2, Locals=0, Args_size=0
   0:	lconst_0
   1:	putstatic	#11; //Field serialVersionUID:J
   4:	return

public scala.util.parsing.combinator.lexical.StdLexical$$anonfun$comment$2(scala.util.parsing.combinator.lexical.StdLexical);
  Code:
   Stack=1, Locals=2, Args_size=2
   0:	aload_0
   1:	invokespecial	#18; //Method scala/runtime/AbstractFunction1."<init>":()V
   4:	return
  LineNumberTable: 
   line 62: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    this       Lscala/util/parsing/combinator/lexical/StdLexical$$anonfun$comment$2;
   0      5      1    $outer       Lscala/util/parsing/combinator/lexical/StdLexical;


public final java.lang.Object apply(java.lang.Object);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	checkcast	#27; //class scala/util/parsing/combinator/Parsers$$tilde
   5:	invokevirtual	#30; //Method apply:(Lscala/util/parsing/combinator/Parsers$$tilde;)C
   8:	istore_2
   9:	iload_2
   10:	invokestatic	#36; //Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
   13:	areturn
  LineNumberTable: 
   line 62: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      14      0    this       Lscala/util/parsing/combinator/lexical/StdLexical$$anonfun$comment$2;
   0      14      1    v1       Ljava/lang/Object;


public final char apply(scala.util.parsing.combinator.Parsers$$tilde);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	iconst_1
   1:	ifeq	7
   4:	ldc	#39; //int 32
   6:	ireturn
   7:	new	#41; //class scala/MatchError
   10:	dup
   11:	aload_1
   12:	invokevirtual	#45; //Method scala/util/parsing/combinator/Parsers$$tilde.toString:()Ljava/lang/String;
   15:	invokespecial	#48; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   18:	athrow
  LineNumberTable: 
   line 21: 0
   line 62: 4

  Signature: length = 0x2
   00 31 

}

