Compiled from "StdLexical.scala"
public final class scala.util.parsing.combinator.lexical.StdLexical$$anonfun$token$4$$anonfun$apply$9 extends java.lang.Object implements scala.Function1,scala.ScalaObject,java.io.Serializable
  SourceFile: "StdLexical.scala"
  Scala: length = 0x
   
  InnerClass: 
   public #110= #38 of #109; //$tilde=class scala/util/parsing/combinator/Parsers$$tilde of class scala/util/parsing/combinator/Parsers
   public #113= #61 of #112; //StringLit=class scala/util/parsing/syntax/StdTokens$StringLit of class scala/util/parsing/syntax/StdTokens
   public final #116= #63 of #115; //$anonfun$token$4=class scala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$4 of class scala/util/parsing/combinator/lexical/StdLexical
   public final #117= #9 of #63; //$anonfun$apply$9=class scala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$4$$anonfun$apply$9 of class scala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$4
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	StdLexical.scala;
const #3 = Asciz	<clinit>;
const #4 = Asciz	()V;
const #5 = Asciz	Code;
const #6 = Asciz	serialVersionUID;
const #7 = Asciz	J;
const #8 = Asciz	scala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$4$$anonfun$apply$9;
const #9 = class	#8;	//  scala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$4$$anonfun$apply$9
const #10 = NameAndType	#6:#7;//  serialVersionUID:J
const #11 = Field	#9.#10;	//  scala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$4$$anonfun$apply$9.serialVersionUID:J
const #12 = Asciz	$outer;
const #13 = Asciz	Lscala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$4;;
const #14 = Asciz	<init>;
const #15 = Asciz	(Lscala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$4;)V;
const #16 = Asciz	LineNumberTable;
const #17 = Asciz	java/lang/NullPointerException;
const #18 = class	#17;	//  java/lang/NullPointerException
const #19 = NameAndType	#14:#4;//  "<init>":()V
const #20 = Method	#18.#19;	//  java/lang/NullPointerException."<init>":()V
const #21 = NameAndType	#12:#13;//  $outer:Lscala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$4;
const #22 = Field	#9.#21;	//  scala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$4$$anonfun$apply$9.$outer:Lscala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$4;
const #23 = Asciz	java/lang/Object;
const #24 = class	#23;	//  java/lang/Object
const #25 = Method	#24.#19;	//  java/lang/Object."<init>":()V
const #26 = Asciz	scala/Function1$class;
const #27 = class	#26;	//  scala/Function1$class
const #28 = Asciz	$init$;
const #29 = Asciz	(Lscala/Function1;)V;
const #30 = NameAndType	#28:#29;//  $init$:(Lscala/Function1;)V
const #31 = Method	#27.#30;	//  scala/Function1$class.$init$:(Lscala/Function1;)V
const #32 = Asciz	this;
const #33 = Asciz	Lscala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$4$$anonfun$apply$9;;
const #34 = Asciz	LocalVariableTable;
const #35 = Asciz	apply;
const #36 = Asciz	(Ljava/lang/Object;)Ljava/lang/Object;;
const #37 = Asciz	scala/util/parsing/combinator/Parsers$$tilde;
const #38 = class	#37;	//  scala/util/parsing/combinator/Parsers$$tilde
const #39 = Asciz	(Lscala/util/parsing/combinator/Parsers$$tilde;)Lscala/util/parsing/syntax/StdTokens$StringLit;;
const #40 = NameAndType	#35:#39;//  apply:(Lscala/util/parsing/combinator/Parsers$$tilde;)Lscala/util/parsing/syntax/StdTokens$StringLit;
const #41 = Method	#9.#40;	//  scala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$4$$anonfun$apply$9.apply:(Lscala/util/parsing/combinator/Parsers$$tilde;)Lscala/util/parsing/syntax/StdTokens$StringLit;
const #42 = Asciz	v1;
const #43 = Asciz	Ljava/lang/Object;;
const #44 = Asciz	_1;
const #45 = Asciz	()Ljava/lang/Object;;
const #46 = NameAndType	#44:#45;//  _1:()Ljava/lang/Object;
const #47 = Method	#38.#46;	//  scala/util/parsing/combinator/Parsers$$tilde._1:()Ljava/lang/Object;
const #48 = Asciz	_2;
const #49 = NameAndType	#48:#45;//  _2:()Ljava/lang/Object;
const #50 = Method	#38.#49;	//  scala/util/parsing/combinator/Parsers$$tilde._2:()Ljava/lang/Object;
const #51 = Asciz	scala/collection/immutable/List;
const #52 = class	#51;	//  scala/collection/immutable/List
const #53 = Asciz	scala/runtime/BoxesRunTime;
const #54 = class	#53;	//  scala/runtime/BoxesRunTime
const #55 = Asciz	unboxToChar;
const #56 = Asciz	(Ljava/lang/Object;)C;
const #57 = NameAndType	#55:#56;//  unboxToChar:(Ljava/lang/Object;)C
const #58 = Method	#54.#57;	//  scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
const #59 = int	39;
const #60 = Asciz	scala/util/parsing/syntax/StdTokens$StringLit;
const #61 = class	#60;	//  scala/util/parsing/syntax/StdTokens$StringLit
const #62 = Asciz	scala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$4;
const #63 = class	#62;	//  scala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$4
const #64 = Asciz	Lscala/util/parsing/combinator/lexical/StdLexical;;
const #65 = NameAndType	#12:#64;//  $outer:Lscala/util/parsing/combinator/lexical/StdLexical;
const #66 = Field	#63.#65;	//  scala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$4.$outer:Lscala/util/parsing/combinator/lexical/StdLexical;
const #67 = Asciz	;
const #68 = String	#67;	//  
const #69 = Asciz	scala/collection/TraversableLike;
const #70 = class	#69;	//  scala/collection/TraversableLike
const #71 = Asciz	mkString;
const #72 = Asciz	(Ljava/lang/String;)Ljava/lang/String;;
const #73 = NameAndType	#71:#72;//  mkString:(Ljava/lang/String;)Ljava/lang/String;
const #74 = InterfaceMethod	#70.#73;	//  scala/collection/TraversableLike.mkString:(Ljava/lang/String;)Ljava/lang/String;
const #75 = Asciz	(Lscala/util/parsing/syntax/StdTokens;Ljava/lang/String;)V;
const #76 = NameAndType	#14:#75;//  "<init>":(Lscala/util/parsing/syntax/StdTokens;Ljava/lang/String;)V
const #77 = Method	#61.#76;	//  scala/util/parsing/syntax/StdTokens$StringLit."<init>":(Lscala/util/parsing/syntax/StdTokens;Ljava/lang/String;)V
const #78 = Asciz	scala/MatchError;
const #79 = class	#78;	//  scala/MatchError
const #80 = Asciz	toString;
const #81 = Asciz	()Ljava/lang/String;;
const #82 = NameAndType	#80:#81;//  toString:()Ljava/lang/String;
const #83 = Method	#38.#82;	//  scala/util/parsing/combinator/Parsers$$tilde.toString:()Ljava/lang/String;
const #84 = Asciz	(Ljava/lang/String;)V;
const #85 = NameAndType	#14:#84;//  "<init>":(Ljava/lang/String;)V
const #86 = Method	#79.#85;	//  scala/MatchError."<init>":(Ljava/lang/String;)V
const #87 = Asciz	temp8;
const #88 = Asciz	Lscala/util/parsing/combinator/Parsers$$tilde;;
const #89 = Asciz	temp11;
const #90 = Asciz	Lscala/collection/immutable/List;;
const #91 = Asciz	(Lscala/util/parsing/combinator/Parsers$$tilde<Lscala/util/parsing/combinator/Parsers$$tilde<Ljava/lang/Character;Lscala/collection/immutable/List<Ljava/lang/Character;>;>;Ljava/lang/Character;>;)Lscala/util/parsing/syntax/StdTokens$StringLit;;
const #92 = Asciz	Signature;
const #93 = Asciz	andThen;
const #94 = Asciz	(Lscala/Function1;)Lscala/Function1;;
const #95 = Asciz	(Lscala/Function1;Lscala/Function1;)Lscala/Function1;;
const #96 = NameAndType	#93:#95;//  andThen:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
const #97 = Method	#27.#96;	//  scala/Function1$class.andThen:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
const #98 = Asciz	g;
const #99 = Asciz	Lscala/Function1;;
const #100 = Asciz	compose;
const #101 = NameAndType	#100:#95;//  compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
const #102 = Method	#27.#101;	//  scala/Function1$class.compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
const #103 = Asciz	(Lscala/Function1;)Ljava/lang/String;;
const #104 = NameAndType	#80:#103;//  toString:(Lscala/Function1;)Ljava/lang/String;
const #105 = Method	#27.#104;	//  scala/Function1$class.toString:(Lscala/Function1;)Ljava/lang/String;
const #106 = Asciz	Scala;
const #107 = Asciz	InnerClasses;
const #108 = Asciz	scala/util/parsing/combinator/Parsers;
const #109 = class	#108;	//  scala/util/parsing/combinator/Parsers
const #110 = Asciz	$tilde;
const #111 = Asciz	scala/util/parsing/syntax/StdTokens;
const #112 = class	#111;	//  scala/util/parsing/syntax/StdTokens
const #113 = Asciz	StringLit;
const #114 = Asciz	scala/util/parsing/combinator/lexical/StdLexical;
const #115 = class	#114;	//  scala/util/parsing/combinator/lexical/StdLexical
const #116 = Asciz	$anonfun$token$4;
const #117 = Asciz	$anonfun$apply$9;
const #118 = Asciz	scala/Function1;
const #119 = class	#118;	//  scala/Function1
const #120 = Asciz	scala/ScalaObject;
const #121 = class	#120;	//  scala/ScalaObject
const #122 = Asciz	java/io/Serializable;
const #123 = class	#122;	//  java/io/Serializable

{
public static final long serialVersionUID;

public static {};
  Code:
   Stack=2, Locals=0, Args_size=0
   0:	lconst_0
   1:	putstatic	#11; //Field serialVersionUID:J
   4:	return

public scala.util.parsing.combinator.lexical.StdLexical$$anonfun$token$4$$anonfun$apply$9(scala.util.parsing.combinator.lexical.StdLexical$$anonfun$token$4);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_1
   1:	ifnonnull	12
   4:	new	#18; //class java/lang/NullPointerException
   7:	dup
   8:	invokespecial	#20; //Method java/lang/NullPointerException."<init>":()V
   11:	athrow
   12:	aload_0
   13:	aload_1
   14:	putfield	#22; //Field $outer:Lscala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$4;
   17:	aload_0
   18:	invokespecial	#25; //Method java/lang/Object."<init>":()V
   21:	aload_0
   22:	invokestatic	#31; //Method scala/Function1$class.$init$:(Lscala/Function1;)V
   25:	return
  LineNumberTable: 
   line 41: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      26      0    this       Lscala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$4$$anonfun$apply$9;
   0      26      1    $outer       Lscala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$4;


public final java.lang.Object apply(java.lang.Object);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	aload_0
   1:	getfield	#22; //Field $outer:Lscala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$4;
   4:	astore_2
   5:	aload_0
   6:	aload_1
   7:	checkcast	#38; //class scala/util/parsing/combinator/Parsers$$tilde
   10:	invokevirtual	#41; //Method apply:(Lscala/util/parsing/combinator/Parsers$$tilde;)Lscala/util/parsing/syntax/StdTokens$StringLit;
   13:	areturn
  LineNumberTable: 
   line 41: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      14      0    this       Lscala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$4$$anonfun$apply$9;
   5      9      1    v1       Ljava/lang/Object;


public final scala.util.parsing.syntax.StdTokens$StringLit apply(scala.util.parsing.combinator.Parsers$$tilde);
  Code:
   Stack=5, Locals=6, Args_size=2
   0:	aload_0
   1:	getfield	#22; //Field $outer:Lscala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$4;
   4:	astore	5
   6:	aload_1
   7:	ifnull	121
   10:	aload_1
   11:	invokevirtual	#47; //Method scala/util/parsing/combinator/Parsers$$tilde._1:()Ljava/lang/Object;
   14:	checkcast	#38; //class scala/util/parsing/combinator/Parsers$$tilde
   17:	astore_2
   18:	aload_2
   19:	ifnull	109
   22:	aload_2
   23:	invokevirtual	#50; //Method scala/util/parsing/combinator/Parsers$$tilde._2:()Ljava/lang/Object;
   26:	checkcast	#52; //class scala/collection/immutable/List
   29:	astore	4
   31:	aload_2
   32:	invokevirtual	#47; //Method scala/util/parsing/combinator/Parsers$$tilde._1:()Ljava/lang/Object;
   35:	invokestatic	#58; //Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
   38:	ldc	#59; //int 39
   40:	if_icmpne	97
   43:	aload_1
   44:	invokevirtual	#50; //Method scala/util/parsing/combinator/Parsers$$tilde._2:()Ljava/lang/Object;
   47:	invokestatic	#58; //Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
   50:	ldc	#59; //int 39
   52:	if_icmpne	97
   55:	iconst_1
   56:	ifeq	85
   59:	new	#61; //class scala/util/parsing/syntax/StdTokens$StringLit
   62:	dup
   63:	aload_0
   64:	getfield	#22; //Field $outer:Lscala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$4;
   67:	astore_3
   68:	aload_3
   69:	getfield	#66; //Field scala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$4.$outer:Lscala/util/parsing/combinator/lexical/StdLexical;
   72:	aload	4
   74:	ldc	#68; //String 
   76:	invokeinterface	#74,  2; //InterfaceMethod scala/collection/TraversableLike.mkString:(Ljava/lang/String;)Ljava/lang/String;
   81:	invokespecial	#77; //Method scala/util/parsing/syntax/StdTokens$StringLit."<init>":(Lscala/util/parsing/syntax/StdTokens;Ljava/lang/String;)V
   84:	areturn
   85:	new	#79; //class scala/MatchError
   88:	dup
   89:	aload_1
   90:	invokevirtual	#83; //Method scala/util/parsing/combinator/Parsers$$tilde.toString:()Ljava/lang/String;
   93:	invokespecial	#86; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   96:	athrow
   97:	new	#79; //class scala/MatchError
   100:	dup
   101:	aload_1
   102:	invokevirtual	#83; //Method scala/util/parsing/combinator/Parsers$$tilde.toString:()Ljava/lang/String;
   105:	invokespecial	#86; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   108:	athrow
   109:	new	#79; //class scala/MatchError
   112:	dup
   113:	aload_1
   114:	invokevirtual	#83; //Method scala/util/parsing/combinator/Parsers$$tilde.toString:()Ljava/lang/String;
   117:	invokespecial	#86; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   120:	athrow
   121:	new	#79; //class scala/MatchError
   124:	dup
   125:	aload_1
   126:	invokevirtual	#83; //Method scala/util/parsing/combinator/Parsers$$tilde.toString:()Ljava/lang/String;
   129:	invokespecial	#86; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   132:	athrow
  LineNumberTable: 
   line 41: 0
   line 21: 55
   line 41: 59

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      133      0    this       Lscala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$4$$anonfun$apply$9;
   18      103      2    temp8       Lscala/util/parsing/combinator/Parsers$$tilde;
   31      78      4    temp11       Lscala/collection/immutable/List;

  Signature: length = 0x2
   00 5B 

public scala.Function1 andThen(scala.Function1);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#97; //Method scala/Function1$class.andThen:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
   5:	areturn
  LineNumberTable: 
   line 41: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$4$$anonfun$apply$9;
   0      6      1    g       Lscala/Function1;


public scala.Function1 compose(scala.Function1);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#102; //Method scala/Function1$class.compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
   5:	areturn
  LineNumberTable: 
   line 41: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$4$$anonfun$apply$9;
   0      6      1    g       Lscala/Function1;


public java.lang.String toString();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#105; //Method scala/Function1$class.toString:(Lscala/Function1;)Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 41: 0


}

