Compiled from "Lexical.scala"
public final class scala.util.parsing.combinator.lexical.Lexical$$anonfun$letter$1 extends scala.runtime.AbstractFunction1 implements java.io.Serializable
  SourceFile: "Lexical.scala"
  Scala: length = 0x
   
  InnerClass: 
   public final #61= #9 of #60; //$anonfun$letter$1=class scala/util/parsing/combinator/lexical/Lexical$$anonfun$letter$1 of class scala/util/parsing/combinator/lexical/Lexical
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Lexical.scala;
const #3 = Asciz	<clinit>;
const #4 = Asciz	()V;
const #5 = Asciz	Code;
const #6 = Asciz	serialVersionUID;
const #7 = Asciz	J;
const #8 = Asciz	scala/util/parsing/combinator/lexical/Lexical$$anonfun$letter$1;
const #9 = class	#8;	//  scala/util/parsing/combinator/lexical/Lexical$$anonfun$letter$1
const #10 = NameAndType	#6:#7;//  serialVersionUID:J
const #11 = Field	#9.#10;	//  scala/util/parsing/combinator/lexical/Lexical$$anonfun$letter$1.serialVersionUID:J
const #12 = Asciz	<init>;
const #13 = Asciz	(Lscala/util/parsing/combinator/lexical/Lexical;)V;
const #14 = Asciz	LineNumberTable;
const #15 = Asciz	scala/runtime/AbstractFunction1;
const #16 = class	#15;	//  scala/runtime/AbstractFunction1
const #17 = NameAndType	#12:#4;//  "<init>":()V
const #18 = Method	#16.#17;	//  scala/runtime/AbstractFunction1."<init>":()V
const #19 = Asciz	this;
const #20 = Asciz	Lscala/util/parsing/combinator/lexical/Lexical$$anonfun$letter$1;;
const #21 = Asciz	$outer;
const #22 = Asciz	Lscala/util/parsing/combinator/lexical/Lexical;;
const #23 = Asciz	LocalVariableTable;
const #24 = Asciz	apply;
const #25 = Asciz	(Ljava/lang/Object;)Ljava/lang/Object;;
const #26 = Asciz	scala/runtime/BoxesRunTime;
const #27 = class	#26;	//  scala/runtime/BoxesRunTime
const #28 = Asciz	unboxToChar;
const #29 = Asciz	(Ljava/lang/Object;)C;
const #30 = NameAndType	#28:#29;//  unboxToChar:(Ljava/lang/Object;)C
const #31 = Method	#27.#30;	//  scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
const #32 = Asciz	(C)Z;
const #33 = NameAndType	#24:#32;//  apply:(C)Z
const #34 = Method	#9.#33;	//  scala/util/parsing/combinator/lexical/Lexical$$anonfun$letter$1.apply:(C)Z
const #35 = Asciz	boxToBoolean;
const #36 = Asciz	(Z)Ljava/lang/Boolean;;
const #37 = NameAndType	#35:#36;//  boxToBoolean:(Z)Ljava/lang/Boolean;
const #38 = Method	#27.#37;	//  scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
const #39 = Asciz	v1;
const #40 = Asciz	Ljava/lang/Object;;
const #41 = Asciz	scala/Predef$;
const #42 = class	#41;	//  scala/Predef$
const #43 = Asciz	MODULE$;
const #44 = Asciz	Lscala/Predef$;;
const #45 = NameAndType	#43:#44;//  MODULE$:Lscala/Predef$;
const #46 = Field	#42.#45;	//  scala/Predef$.MODULE$:Lscala/Predef$;
const #47 = Asciz	charWrapper;
const #48 = Asciz	(C)Lscala/runtime/RichChar;;
const #49 = NameAndType	#47:#48;//  charWrapper:(C)Lscala/runtime/RichChar;
const #50 = Method	#42.#49;	//  scala/Predef$.charWrapper:(C)Lscala/runtime/RichChar;
const #51 = Asciz	scala/runtime/RichChar;
const #52 = class	#51;	//  scala/runtime/RichChar
const #53 = Asciz	isLetter;
const #54 = Asciz	()Z;
const #55 = NameAndType	#53:#54;//  isLetter:()Z
const #56 = Method	#52.#55;	//  scala/runtime/RichChar.isLetter:()Z
const #57 = Asciz	Scala;
const #58 = Asciz	InnerClasses;
const #59 = Asciz	scala/util/parsing/combinator/lexical/Lexical;
const #60 = class	#59;	//  scala/util/parsing/combinator/lexical/Lexical
const #61 = Asciz	$anonfun$letter$1;
const #62 = Asciz	java/io/Serializable;
const #63 = class	#62;	//  java/io/Serializable

{
public static final long serialVersionUID;

public static {};
  Code:
   Stack=2, Locals=0, Args_size=0
   0:	lconst_0
   1:	putstatic	#11; //Field serialVersionUID:J
   4:	return

public scala.util.parsing.combinator.lexical.Lexical$$anonfun$letter$1(scala.util.parsing.combinator.lexical.Lexical);
  Code:
   Stack=1, Locals=2, Args_size=2
   0:	aload_0
   1:	invokespecial	#18; //Method scala/runtime/AbstractFunction1."<init>":()V
   4:	return
  LineNumberTable: 
   line 32: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    this       Lscala/util/parsing/combinator/lexical/Lexical$$anonfun$letter$1;
   0      5      1    $outer       Lscala/util/parsing/combinator/lexical/Lexical;


public final java.lang.Object apply(java.lang.Object);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#31; //Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
   5:	invokevirtual	#34; //Method apply:(C)Z
   8:	istore_2
   9:	iload_2
   10:	invokestatic	#38; //Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
   13:	areturn
  LineNumberTable: 
   line 32: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      14      0    this       Lscala/util/parsing/combinator/lexical/Lexical$$anonfun$letter$1;
   0      14      1    v1       Ljava/lang/Object;


public final boolean apply(char);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	getstatic	#46; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   3:	iload_1
   4:	invokevirtual	#50; //Method scala/Predef$.charWrapper:(C)Lscala/runtime/RichChar;
   7:	invokevirtual	#56; //Method scala/runtime/RichChar.isLetter:()Z
   10:	ireturn
  LineNumberTable: 
   line 32: 0


}

