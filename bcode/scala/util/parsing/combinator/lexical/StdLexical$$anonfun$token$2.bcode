Compiled from "StdLexical.scala"
public final class scala.util.parsing.combinator.lexical.StdLexical$$anonfun$token$2 extends scala.runtime.AbstractFunction1 implements java.io.Serializable
  SourceFile: "StdLexical.scala"
  Scala: length = 0x
   
  InnerClass: 
   public #94= #32 of #93; //$tilde=class scala/util/parsing/combinator/Parsers$$tilde of class scala/util/parsing/combinator/Parsers
   public final #95= #9 of #70; //$anonfun$token$2=class scala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$2 of class scala/util/parsing/combinator/lexical/StdLexical
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	StdLexical.scala;
const #3 = Asciz	<clinit>;
const #4 = Asciz	()V;
const #5 = Asciz	Code;
const #6 = Asciz	serialVersionUID;
const #7 = Asciz	J;
const #8 = Asciz	scala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$2;
const #9 = class	#8;	//  scala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$2
const #10 = NameAndType	#6:#7;//  serialVersionUID:J
const #11 = Field	#9.#10;	//  scala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$2.serialVersionUID:J
const #12 = Asciz	$outer;
const #13 = Asciz	Lscala/util/parsing/combinator/lexical/StdLexical;;
const #14 = Asciz	<init>;
const #15 = Asciz	(Lscala/util/parsing/combinator/lexical/StdLexical;)V;
const #16 = Asciz	LineNumberTable;
const #17 = Asciz	java/lang/NullPointerException;
const #18 = class	#17;	//  java/lang/NullPointerException
const #19 = NameAndType	#14:#4;//  "<init>":()V
const #20 = Method	#18.#19;	//  java/lang/NullPointerException."<init>":()V
const #21 = NameAndType	#12:#13;//  $outer:Lscala/util/parsing/combinator/lexical/StdLexical;
const #22 = Field	#9.#21;	//  scala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$2.$outer:Lscala/util/parsing/combinator/lexical/StdLexical;
const #23 = Asciz	scala/runtime/AbstractFunction1;
const #24 = class	#23;	//  scala/runtime/AbstractFunction1
const #25 = Method	#24.#19;	//  scala/runtime/AbstractFunction1."<init>":()V
const #26 = Asciz	this;
const #27 = Asciz	Lscala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$2;;
const #28 = Asciz	LocalVariableTable;
const #29 = Asciz	apply;
const #30 = Asciz	(Ljava/lang/Object;)Ljava/lang/Object;;
const #31 = Asciz	scala/util/parsing/combinator/Parsers$$tilde;
const #32 = class	#31;	//  scala/util/parsing/combinator/Parsers$$tilde
const #33 = Asciz	(Lscala/util/parsing/combinator/Parsers$$tilde;)Lscala/Product;;
const #34 = NameAndType	#29:#33;//  apply:(Lscala/util/parsing/combinator/Parsers$$tilde;)Lscala/Product;
const #35 = Method	#9.#34;	//  scala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$2.apply:(Lscala/util/parsing/combinator/Parsers$$tilde;)Lscala/Product;
const #36 = Asciz	v1;
const #37 = Asciz	Ljava/lang/Object;;
const #38 = Asciz	_1;
const #39 = Asciz	()Ljava/lang/Object;;
const #40 = NameAndType	#38:#39;//  _1:()Ljava/lang/Object;
const #41 = Method	#32.#40;	//  scala/util/parsing/combinator/Parsers$$tilde._1:()Ljava/lang/Object;
const #42 = Asciz	scala/runtime/BoxesRunTime;
const #43 = class	#42;	//  scala/runtime/BoxesRunTime
const #44 = Asciz	unboxToChar;
const #45 = Asciz	(Ljava/lang/Object;)C;
const #46 = NameAndType	#44:#45;//  unboxToChar:(Ljava/lang/Object;)C
const #47 = Method	#43.#46;	//  scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
const #48 = Asciz	_2;
const #49 = NameAndType	#48:#39;//  _2:()Ljava/lang/Object;
const #50 = Method	#32.#49;	//  scala/util/parsing/combinator/Parsers$$tilde._2:()Ljava/lang/Object;
const #51 = Asciz	scala/collection/immutable/List;
const #52 = class	#51;	//  scala/collection/immutable/List
const #53 = Asciz	boxToCharacter;
const #54 = Asciz	(C)Ljava/lang/Character;;
const #55 = NameAndType	#53:#54;//  boxToCharacter:(C)Ljava/lang/Character;
const #56 = Method	#43.#55;	//  scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
const #57 = Asciz	$colon$colon;
const #58 = Asciz	(Ljava/lang/Object;)Lscala/collection/immutable/List;;
const #59 = NameAndType	#57:#58;//  $colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
const #60 = Method	#52.#59;	//  scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
const #61 = Asciz	;
const #62 = String	#61;	//  
const #63 = Asciz	scala/collection/TraversableLike;
const #64 = class	#63;	//  scala/collection/TraversableLike
const #65 = Asciz	mkString;
const #66 = Asciz	(Ljava/lang/String;)Ljava/lang/String;;
const #67 = NameAndType	#65:#66;//  mkString:(Ljava/lang/String;)Ljava/lang/String;
const #68 = InterfaceMethod	#64.#67;	//  scala/collection/TraversableLike.mkString:(Ljava/lang/String;)Ljava/lang/String;
const #69 = Asciz	scala/util/parsing/combinator/lexical/StdLexical;
const #70 = class	#69;	//  scala/util/parsing/combinator/lexical/StdLexical
const #71 = Asciz	processIdent;
const #72 = Asciz	(Ljava/lang/String;)Lscala/Product;;
const #73 = NameAndType	#71:#72;//  processIdent:(Ljava/lang/String;)Lscala/Product;
const #74 = Method	#70.#73;	//  scala/util/parsing/combinator/lexical/StdLexical.processIdent:(Ljava/lang/String;)Lscala/Product;
const #75 = Asciz	scala/MatchError;
const #76 = class	#75;	//  scala/MatchError
const #77 = Asciz	toString;
const #78 = Asciz	()Ljava/lang/String;;
const #79 = NameAndType	#77:#78;//  toString:()Ljava/lang/String;
const #80 = Method	#32.#79;	//  scala/util/parsing/combinator/Parsers$$tilde.toString:()Ljava/lang/String;
const #81 = Asciz	(Ljava/lang/String;)V;
const #82 = NameAndType	#14:#81;//  "<init>":(Ljava/lang/String;)V
const #83 = Method	#76.#82;	//  scala/MatchError."<init>":(Ljava/lang/String;)V
const #84 = Asciz	temp3;
const #85 = Asciz	Lscala/collection/immutable/List;;
const #86 = Asciz	temp2;
const #87 = Asciz	C;
const #88 = Asciz	(Lscala/util/parsing/combinator/Parsers$$tilde<Ljava/lang/Character;Lscala/collection/immutable/List<Ljava/lang/Character;>;>;)Lscala/Product;;
const #89 = Asciz	Signature;
const #90 = Asciz	Scala;
const #91 = Asciz	InnerClasses;
const #92 = Asciz	scala/util/parsing/combinator/Parsers;
const #93 = class	#92;	//  scala/util/parsing/combinator/Parsers
const #94 = Asciz	$tilde;
const #95 = Asciz	$anonfun$token$2;
const #96 = Asciz	java/io/Serializable;
const #97 = class	#96;	//  java/io/Serializable

{
public static final long serialVersionUID;

public static {};
  Code:
   Stack=2, Locals=0, Args_size=0
   0:	lconst_0
   1:	putstatic	#11; //Field serialVersionUID:J
   4:	return

public scala.util.parsing.combinator.lexical.StdLexical$$anonfun$token$2(scala.util.parsing.combinator.lexical.StdLexical);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_1
   1:	ifnonnull	12
   4:	new	#18; //class java/lang/NullPointerException
   7:	dup
   8:	invokespecial	#20; //Method java/lang/NullPointerException."<init>":()V
   11:	athrow
   12:	aload_0
   13:	aload_1
   14:	putfield	#22; //Field $outer:Lscala/util/parsing/combinator/lexical/StdLexical;
   17:	aload_0
   18:	invokespecial	#25; //Method scala/runtime/AbstractFunction1."<init>":()V
   21:	return
  LineNumberTable: 
   line 39: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      22      0    this       Lscala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$2;
   0      22      1    $outer       Lscala/util/parsing/combinator/lexical/StdLexical;


public final java.lang.Object apply(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	checkcast	#32; //class scala/util/parsing/combinator/Parsers$$tilde
   5:	invokevirtual	#35; //Method apply:(Lscala/util/parsing/combinator/Parsers$$tilde;)Lscala/Product;
   8:	areturn
  LineNumberTable: 
   line 39: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$2;
   0      9      1    v1       Ljava/lang/Object;


public final scala.Product apply(scala.util.parsing.combinator.Parsers$$tilde);
  Code:
   Stack=3, Locals=4, Args_size=2
   0:	aload_1
   1:	ifnull	59
   4:	aload_1
   5:	invokevirtual	#41; //Method scala/util/parsing/combinator/Parsers$$tilde._1:()Ljava/lang/Object;
   8:	invokestatic	#47; //Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
   11:	istore_3
   12:	aload_1
   13:	invokevirtual	#50; //Method scala/util/parsing/combinator/Parsers$$tilde._2:()Ljava/lang/Object;
   16:	checkcast	#52; //class scala/collection/immutable/List
   19:	astore_2
   20:	iconst_1
   21:	ifeq	47
   24:	aload_0
   25:	getfield	#22; //Field $outer:Lscala/util/parsing/combinator/lexical/StdLexical;
   28:	aload_2
   29:	iload_3
   30:	invokestatic	#56; //Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
   33:	invokevirtual	#60; //Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
   36:	ldc	#62; //String 
   38:	invokeinterface	#68,  2; //InterfaceMethod scala/collection/TraversableLike.mkString:(Ljava/lang/String;)Ljava/lang/String;
   43:	invokevirtual	#74; //Method scala/util/parsing/combinator/lexical/StdLexical.processIdent:(Ljava/lang/String;)Lscala/Product;
   46:	areturn
   47:	new	#76; //class scala/MatchError
   50:	dup
   51:	aload_1
   52:	invokevirtual	#80; //Method scala/util/parsing/combinator/Parsers$$tilde.toString:()Ljava/lang/String;
   55:	invokespecial	#83; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   58:	athrow
   59:	new	#76; //class scala/MatchError
   62:	dup
   63:	aload_1
   64:	invokevirtual	#80; //Method scala/util/parsing/combinator/Parsers$$tilde.toString:()Ljava/lang/String;
   67:	invokespecial	#83; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   70:	athrow
  LineNumberTable: 
   line 39: 0
   line 21: 20
   line 39: 24

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      71      0    this       Lscala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$2;
   20      39      2    temp3       Lscala/collection/immutable/List;
   12      47      3    temp2       C

  Signature: length = 0x2
   00 58 

}

