Compiled from "StdLexical.scala"
public final class scala.util.parsing.combinator.lexical.StdLexical$$anonfun$whitespace$1$$anonfun$apply$23$$anonfun$apply$25 extends scala.runtime.AbstractFunction0 implements java.io.Serializable
  SourceFile: "StdLexical.scala"
  Scala: length = 0x
   
  InnerClass: 
   public abstract #60= #59 of #49; //Parser=class scala/util/parsing/combinator/Parsers$Parser of class scala/util/parsing/combinator/Parsers
   public final #63= #41 of #62; //$anonfun$whitespace$1=class scala/util/parsing/combinator/lexical/StdLexical$$anonfun$whitespace$1 of class scala/util/parsing/combinator/lexical/StdLexical
   public final #64= #35 of #41; //$anonfun$apply$23=class scala/util/parsing/combinator/lexical/StdLexical$$anonfun$whitespace$1$$anonfun$apply$23 of class scala/util/parsing/combinator/lexical/StdLexical$$anonfun$whitespace$1
   public final #65= #9 of #35; //$anonfun$apply$25=class scala/util/parsing/combinator/lexical/StdLexical$$anonfun$whitespace$1$$anonfun$apply$23$$anonfun$apply$25 of class scala/util/parsing/combinator/lexical/StdLexical$$anonfun$whitespace$1$$anonfun$apply$23
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	StdLexical.scala;
const #3 = Asciz	<clinit>;
const #4 = Asciz	()V;
const #5 = Asciz	Code;
const #6 = Asciz	serialVersionUID;
const #7 = Asciz	J;
const #8 = Asciz	scala/util/parsing/combinator/lexical/StdLexical$$anonfun$whitespace$1$$anonfun$apply$23$$anonfun$apply$25;
const #9 = class	#8;	//  scala/util/parsing/combinator/lexical/StdLexical$$anonfun$whitespace$1$$anonfun$apply$23$$anonfun$apply$25
const #10 = NameAndType	#6:#7;//  serialVersionUID:J
const #11 = Field	#9.#10;	//  scala/util/parsing/combinator/lexical/StdLexical$$anonfun$whitespace$1$$anonfun$apply$23$$anonfun$apply$25.serialVersionUID:J
const #12 = Asciz	$outer;
const #13 = Asciz	Lscala/util/parsing/combinator/lexical/StdLexical$$anonfun$whitespace$1$$anonfun$apply$23;;
const #14 = Asciz	<init>;
const #15 = Asciz	(Lscala/util/parsing/combinator/lexical/StdLexical$$anonfun$whitespace$1$$anonfun$apply$23;)V;
const #16 = Asciz	LineNumberTable;
const #17 = Asciz	java/lang/NullPointerException;
const #18 = class	#17;	//  java/lang/NullPointerException
const #19 = NameAndType	#14:#4;//  "<init>":()V
const #20 = Method	#18.#19;	//  java/lang/NullPointerException."<init>":()V
const #21 = NameAndType	#12:#13;//  $outer:Lscala/util/parsing/combinator/lexical/StdLexical$$anonfun$whitespace$1$$anonfun$apply$23;
const #22 = Field	#9.#21;	//  scala/util/parsing/combinator/lexical/StdLexical$$anonfun$whitespace$1$$anonfun$apply$23$$anonfun$apply$25.$outer:Lscala/util/parsing/combinator/lexical/StdLexical$$anonfun$whitespace$1$$anonfun$apply$23;
const #23 = Asciz	scala/runtime/AbstractFunction0;
const #24 = class	#23;	//  scala/runtime/AbstractFunction0
const #25 = Method	#24.#19;	//  scala/runtime/AbstractFunction0."<init>":()V
const #26 = Asciz	this;
const #27 = Asciz	Lscala/util/parsing/combinator/lexical/StdLexical$$anonfun$whitespace$1$$anonfun$apply$23$$anonfun$apply$25;;
const #28 = Asciz	LocalVariableTable;
const #29 = Asciz	apply;
const #30 = Asciz	()Ljava/lang/Object;;
const #31 = Asciz	()Lscala/util/parsing/combinator/Parsers$Parser;;
const #32 = NameAndType	#29:#31;//  apply:()Lscala/util/parsing/combinator/Parsers$Parser;
const #33 = Method	#9.#32;	//  scala/util/parsing/combinator/lexical/StdLexical$$anonfun$whitespace$1$$anonfun$apply$23$$anonfun$apply$25.apply:()Lscala/util/parsing/combinator/Parsers$Parser;
const #34 = Asciz	scala/util/parsing/combinator/lexical/StdLexical$$anonfun$whitespace$1$$anonfun$apply$23;
const #35 = class	#34;	//  scala/util/parsing/combinator/lexical/StdLexical$$anonfun$whitespace$1$$anonfun$apply$23
const #36 = Asciz	scala$util$parsing$combinator$lexical$StdLexical$$anonfun$$anonfun$$$outer;
const #37 = Asciz	()Lscala/util/parsing/combinator/lexical/StdLexical$$anonfun$whitespace$1;;
const #38 = NameAndType	#36:#37;//  scala$util$parsing$combinator$lexical$StdLexical$$anonfun$$anonfun$$$outer:()Lscala/util/parsing/combinator/lexical/StdLexical$$anonfun$whitespace$1;
const #39 = Method	#35.#38;	//  scala/util/parsing/combinator/lexical/StdLexical$$anonfun$whitespace$1$$anonfun$apply$23.scala$util$parsing$combinator$lexical$StdLexical$$anonfun$$anonfun$$$outer:()Lscala/util/parsing/combinator/lexical/StdLexical$$anonfun$whitespace$1;
const #40 = Asciz	scala/util/parsing/combinator/lexical/StdLexical$$anonfun$whitespace$1;
const #41 = class	#40;	//  scala/util/parsing/combinator/lexical/StdLexical$$anonfun$whitespace$1
const #42 = Asciz	scala$util$parsing$combinator$lexical$StdLexical$$anonfun$$$outer;
const #43 = Asciz	()Lscala/util/parsing/combinator/lexical/StdLexical;;
const #44 = NameAndType	#42:#43;//  scala$util$parsing$combinator$lexical$StdLexical$$anonfun$$$outer:()Lscala/util/parsing/combinator/lexical/StdLexical;
const #45 = Method	#41.#44;	//  scala/util/parsing/combinator/lexical/StdLexical$$anonfun$whitespace$1.scala$util$parsing$combinator$lexical$StdLexical$$anonfun$$$outer:()Lscala/util/parsing/combinator/lexical/StdLexical;
const #46 = Asciz	unclosed comment;
const #47 = String	#46;	//  unclosed comment
const #48 = Asciz	scala/util/parsing/combinator/Parsers;
const #49 = class	#48;	//  scala/util/parsing/combinator/Parsers
const #50 = Asciz	failure;
const #51 = Asciz	(Ljava/lang/String;)Lscala/util/parsing/combinator/Parsers$Parser;;
const #52 = NameAndType	#50:#51;//  failure:(Ljava/lang/String;)Lscala/util/parsing/combinator/Parsers$Parser;
const #53 = InterfaceMethod	#49.#52;	//  scala/util/parsing/combinator/Parsers.failure:(Ljava/lang/String;)Lscala/util/parsing/combinator/Parsers$Parser;
const #54 = Asciz	()Lscala/util/parsing/combinator/Parsers$Parser<Lscala/runtime/Nothing$;>;;
const #55 = Asciz	Signature;
const #56 = Asciz	Scala;
const #57 = Asciz	InnerClasses;
const #58 = Asciz	scala/util/parsing/combinator/Parsers$Parser;
const #59 = class	#58;	//  scala/util/parsing/combinator/Parsers$Parser
const #60 = Asciz	Parser;
const #61 = Asciz	scala/util/parsing/combinator/lexical/StdLexical;
const #62 = class	#61;	//  scala/util/parsing/combinator/lexical/StdLexical
const #63 = Asciz	$anonfun$whitespace$1;
const #64 = Asciz	$anonfun$apply$23;
const #65 = Asciz	$anonfun$apply$25;
const #66 = Asciz	java/io/Serializable;
const #67 = class	#66;	//  java/io/Serializable

{
public static final long serialVersionUID;

public static {};
  Code:
   Stack=2, Locals=0, Args_size=0
   0:	lconst_0
   1:	putstatic	#11; //Field serialVersionUID:J
   4:	return

public scala.util.parsing.combinator.lexical.StdLexical$$anonfun$whitespace$1$$anonfun$apply$23$$anonfun$apply$25(scala.util.parsing.combinator.lexical.StdLexical$$anonfun$whitespace$1$$anonfun$apply$23);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_1
   1:	ifnonnull	12
   4:	new	#18; //class java/lang/NullPointerException
   7:	dup
   8:	invokespecial	#20; //Method java/lang/NullPointerException."<init>":()V
   11:	athrow
   12:	aload_0
   13:	aload_1
   14:	putfield	#22; //Field $outer:Lscala/util/parsing/combinator/lexical/StdLexical$$anonfun$whitespace$1$$anonfun$apply$23;
   17:	aload_0
   18:	invokespecial	#25; //Method scala/runtime/AbstractFunction0."<init>":()V
   21:	return
  LineNumberTable: 
   line 58: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      22      0    this       Lscala/util/parsing/combinator/lexical/StdLexical$$anonfun$whitespace$1$$anonfun$apply$23$$anonfun$apply$25;
   0      22      1    $outer       Lscala/util/parsing/combinator/lexical/StdLexical$$anonfun$whitespace$1$$anonfun$apply$23;


public final java.lang.Object apply();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#33; //Method apply:()Lscala/util/parsing/combinator/Parsers$Parser;
   4:	areturn
  LineNumberTable: 
   line 58: 0


public final scala.util.parsing.combinator.Parsers$Parser apply();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#22; //Field $outer:Lscala/util/parsing/combinator/lexical/StdLexical$$anonfun$whitespace$1$$anonfun$apply$23;
   4:	invokevirtual	#39; //Method scala/util/parsing/combinator/lexical/StdLexical$$anonfun$whitespace$1$$anonfun$apply$23.scala$util$parsing$combinator$lexical$StdLexical$$anonfun$$anonfun$$$outer:()Lscala/util/parsing/combinator/lexical/StdLexical$$anonfun$whitespace$1;
   7:	invokevirtual	#45; //Method scala/util/parsing/combinator/lexical/StdLexical$$anonfun$whitespace$1.scala$util$parsing$combinator$lexical$StdLexical$$anonfun$$$outer:()Lscala/util/parsing/combinator/lexical/StdLexical;
   10:	ldc	#47; //String unclosed comment
   12:	invokeinterface	#53,  2; //InterfaceMethod scala/util/parsing/combinator/Parsers.failure:(Ljava/lang/String;)Lscala/util/parsing/combinator/Parsers$Parser;
   17:	areturn
  LineNumberTable: 
   line 58: 0

  Signature: length = 0x2
   00 36 

}

