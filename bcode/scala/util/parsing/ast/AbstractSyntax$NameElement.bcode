Compiled from "AbstractSyntax.scala"
public interface scala.util.parsing.ast.AbstractSyntax$NameElement extends scala.util.parsing.ast.AbstractSyntax$Element,scala.ScalaObject
  SourceFile: "AbstractSyntax.scala"
  Scala: length = 0x
   
  InnerClass: 
   public abstract Element=class scala/util/parsing/ast/AbstractSyntax$Element of class scala/util/parsing/ast/AbstractSyntax
   public abstract NameElement=class scala/util/parsing/ast/AbstractSyntax$NameElement of class scala/util/parsing/ast/AbstractSyntax
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	AbstractSyntax.scala;
Asciz	scala$util$parsing$ast$AbstractSyntax$NameElement$$$outer;
Asciz	()Lscala/util/parsing/ast/AbstractSyntax;;
Asciz	equals;
Asciz	(Ljava/lang/Object;)Z;
Asciz	name;
Asciz	()Ljava/lang/String;;
Asciz	Scala;
Asciz	InnerClasses;
Asciz	scala/util/parsing/ast/AbstractSyntax$Element;
class	scala/util/parsing/ast/AbstractSyntax$Element
Asciz	scala/util/parsing/ast/AbstractSyntax;
class	scala/util/parsing/ast/AbstractSyntax
Asciz	Element;
Asciz	scala/util/parsing/ast/AbstractSyntax$NameElement;
class	scala/util/parsing/ast/AbstractSyntax$NameElement
Asciz	NameElement;
Asciz	java/lang/Object;
class	java/lang/Object
Asciz	scala/ScalaObject;
class	scala/ScalaObject

{
public abstract scala.util.parsing.ast.AbstractSyntax scala$util$parsing$ast$AbstractSyntax$NameElement$$$outer();
  Signature: ()Lscala/util/parsing/ast/AbstractSyntax;

public abstract boolean equals(java.lang.Object);
  Signature: (Ljava/lang/Object;)Z

public abstract java.lang.String name();
  Signature: ()Ljava/lang/String;

}

