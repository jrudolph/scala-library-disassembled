Compiled from "Binders.scala"
public abstract class scala.util.parsing.ast.Binders$class extends java.lang.Object
  SourceFile: "Binders.scala"
  Scala: length = 0x
   
  InnerClass: 
   public Scope=class scala/util/parsing/ast/Binders$Scope of class scala/util/parsing/ast/Binders
   public final $anon$4=class scala/util/parsing/ast/Binders$$anon$4 of class scala/util/parsing/ast/Binders
   public final $anon$5=class scala/util/parsing/ast/Binders$$anon$5 of class scala/util/parsing/ast/Binders
   public final $anon$6=class scala/util/parsing/ast/Binders$$anon$6 of class scala/util/parsing/ast/Binders
   public final $anon$11=class scala/util/parsing/ast/Binders$$anon$11 of class scala/util/parsing/ast/Binders
   public abstract Mappable=class scala/util/parsing/ast/Mappable$Mappable of class scala/util/parsing/ast/Mappable
   public UnderBinder=class scala/util/parsing/ast/Binders$UnderBinder of class scala/util/parsing/ast/Binders
   public abstract ReturnAndDo=class scala/util/parsing/ast/Binders$ReturnAndDo of class scala/util/parsing/ast/Binders
   public abstract NameElement=class scala/util/parsing/ast/AbstractSyntax$NameElement of class scala/util/parsing/ast/AbstractSyntax
   public final $anonfun$sequence$3=class scala/util/parsing/ast/Binders$$anonfun$sequence$3 of class scala/util/parsing/ast/Binders
   public final $anonfun$sequence$2=class scala/util/parsing/ast/Binders$$anonfun$sequence$2 of class scala/util/parsing/ast/Binders
   public final $anonfun$sequence$1=class scala/util/parsing/ast/Binders$$anonfun$sequence$1 of class scala/util/parsing/ast/Binders
   public final $anonfun$unsequence$1=class scala/util/parsing/ast/Binders$$anonfun$unsequence$1 of class scala/util/parsing/ast/Binders
   public GenericCanBuildFrom=class scala/collection/generic/TraversableFactory$GenericCanBuildFrom of class scala/collection/generic/TraversableFactory
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	Binders.scala;
Asciz	$init$;
Asciz	(Lscala/util/parsing/ast/Binders;)V;
Asciz	Code;
Asciz	LineNumberTable;
Asciz	$this;
Asciz	Lscala/util/parsing/ast/Binders;;
Asciz	LocalVariableTable;
Asciz	return_;
Asciz	(Lscala/util/parsing/ast/Binders;Ljava/lang/Object;)Lscala/util/parsing/ast/Binders$ReturnAndDo;;
Asciz	scala/util/parsing/ast/Binders$$anon$11;
class	scala/util/parsing/ast/Binders$$anon$11
Asciz	<init>;
Asciz	(Lscala/util/parsing/ast/Binders;Ljava/lang/Object;)V;
NameAndType	"<init>":(Lscala/util/parsing/ast/Binders;Ljava/lang/Object;)V
Method	scala/util/parsing/ast/Binders$$anon$11."<init>":(Lscala/util/parsing/ast/Binders;Ljava/lang/Object;)V
Asciz	result$1;
Asciz	Ljava/lang/Object;;
Asciz	unsequence;
Asciz	(Lscala/util/parsing/ast/Binders;Lscala/util/parsing/ast/Binders$UnderBinder;Lscala/Function1;)Lscala/collection/immutable/List;;
Asciz	scala/util/parsing/ast/Binders$UnderBinder;
class	scala/util/parsing/ast/Binders$UnderBinder
Asciz	scala$util$parsing$ast$Binders$$element;
Asciz	()Ljava/lang/Object;;
NameAndType	scala$util$parsing$ast$Binders$$element:()Ljava/lang/Object;
Method	scala/util/parsing/ast/Binders$UnderBinder.scala$util$parsing$ast$Binders$$element:()Ljava/lang/Object;
Asciz	scala/collection/TraversableLike;
class	scala/collection/TraversableLike
Asciz	scala/util/parsing/ast/Binders$$anonfun$unsequence$1;
class	scala/util/parsing/ast/Binders$$anonfun$unsequence$1
Asciz	(Lscala/util/parsing/ast/Binders;Lscala/util/parsing/ast/Binders$UnderBinder;Lscala/Function1;)V;
NameAndType	"<init>":(Lscala/util/parsing/ast/Binders;Lscala/util/parsing/ast/Binders$UnderBinder;Lscala/Function1;)V
Method	scala/util/parsing/ast/Binders$$anonfun$unsequence$1."<init>":(Lscala/util/parsing/ast/Binders;Lscala/util/parsing/ast/Binders$UnderBinder;Lscala/Function1;)V
Asciz	scala/collection/immutable/List$;
class	scala/collection/immutable/List$
Asciz	MODULE$;
Asciz	Lscala/collection/immutable/List$;;
NameAndType	MODULE$:Lscala/collection/immutable/List$;
Field	scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
Asciz	canBuildFrom;
Asciz	()Lscala/collection/generic/CanBuildFrom;;
NameAndType	canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
Method	scala/collection/immutable/List$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
Asciz	map;
Asciz	(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;;
NameAndType	map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
InterfaceMethod	scala/collection/TraversableLike.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
Asciz	scala/collection/immutable/List;
class	scala/collection/immutable/List
Asciz	orig$1;
Asciz	Lscala/util/parsing/ast/Binders$UnderBinder;;
Asciz	evidence$14$1;
Asciz	Lscala/Function1;;
Asciz	sequence;
Asciz	(Lscala/util/parsing/ast/Binders;Lscala/collection/immutable/List;Lscala/Function1;)Lscala/util/parsing/ast/Binders$UnderBinder;;
Asciz	scala/collection/IterableLike;
class	scala/collection/IterableLike
Asciz	isEmpty;
Asciz	()Z;
NameAndType	isEmpty:()Z
InterfaceMethod	scala/collection/IterableLike.isEmpty:()Z
Asciz	scala/util/parsing/ast/Binders;
class	scala/util/parsing/ast/Binders
Asciz	UnderBinder;
Asciz	()Lscala/util/parsing/ast/Binders$UnderBinder$;;
NameAndType	UnderBinder:()Lscala/util/parsing/ast/Binders$UnderBinder$;
InterfaceMethod	scala/util/parsing/ast/Binders.UnderBinder:()Lscala/util/parsing/ast/Binders$UnderBinder$;
Asciz	scala/collection/immutable/Nil$;
class	scala/collection/immutable/Nil$
Asciz	Lscala/collection/immutable/Nil$;;
NameAndType	MODULE$:Lscala/collection/immutable/Nil$;
Field	scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
Asciz	scala/util/parsing/ast/Binders$$anonfun$sequence$1;
class	scala/util/parsing/ast/Binders$$anonfun$sequence$1
Asciz	(Lscala/util/parsing/ast/Binders;Lscala/Function1;)V;
NameAndType	"<init>":(Lscala/util/parsing/ast/Binders;Lscala/Function1;)V
Method	scala/util/parsing/ast/Binders$$anonfun$sequence$1."<init>":(Lscala/util/parsing/ast/Binders;Lscala/Function1;)V
Asciz	scala/util/parsing/ast/Binders$UnderBinder$;
class	scala/util/parsing/ast/Binders$UnderBinder$
Asciz	$outer;
NameAndType	$outer:Lscala/util/parsing/ast/Binders;
Field	scala/util/parsing/ast/Binders$UnderBinder$.$outer:Lscala/util/parsing/ast/Binders;
Asciz	scala/util/parsing/ast/Binders$Scope;
class	scala/util/parsing/ast/Binders$Scope
NameAndType	"<init>":(Lscala/util/parsing/ast/Binders;)V
Method	scala/util/parsing/ast/Binders$Scope."<init>":(Lscala/util/parsing/ast/Binders;)V
Asciz	(Lscala/util/parsing/ast/Binders;Lscala/util/parsing/ast/Binders$Scope;Ljava/lang/Object;Lscala/Function1;)V;
NameAndType	"<init>":(Lscala/util/parsing/ast/Binders;Lscala/util/parsing/ast/Binders$Scope;Ljava/lang/Object;Lscala/Function1;)V
Method	scala/util/parsing/ast/Binders$UnderBinder."<init>":(Lscala/util/parsing/ast/Binders;Lscala/util/parsing/ast/Binders$Scope;Ljava/lang/Object;Lscala/Function1;)V
Asciz	scala/collection/LinearSeqLike;
class	scala/collection/LinearSeqLike
Asciz	apply;
Asciz	(I)Ljava/lang/Object;;
NameAndType	apply:(I)Ljava/lang/Object;
InterfaceMethod	scala/collection/LinearSeqLike.apply:(I)Ljava/lang/Object;
Asciz	scope;
Asciz	()Lscala/util/parsing/ast/Binders$Scope;;
NameAndType	scope:()Lscala/util/parsing/ast/Binders$Scope;
Method	scala/util/parsing/ast/Binders$UnderBinder.scope:()Lscala/util/parsing/ast/Binders$Scope;
Asciz	scala/util/parsing/ast/Binders$$anonfun$sequence$2;
class	scala/util/parsing/ast/Binders$$anonfun$sequence$2
Method	scala/util/parsing/ast/Binders$$anonfun$sequence$2."<init>":(Lscala/util/parsing/ast/Binders;)V
Asciz	scala/collection/generic/TraversableFactory$GenericCanBuildFrom;
class	scala/collection/generic/TraversableFactory$GenericCanBuildFrom
Asciz	(Lscala/collection/generic/TraversableFactory;)V;
NameAndType	"<init>":(Lscala/collection/generic/TraversableFactory;)V
Method	scala/collection/generic/TraversableFactory$GenericCanBuildFrom."<init>":(Lscala/collection/generic/TraversableFactory;)V
Asciz	scala/util/parsing/ast/Binders$$anonfun$sequence$3;
class	scala/util/parsing/ast/Binders$$anonfun$sequence$3
Method	scala/util/parsing/ast/Binders$$anonfun$sequence$3."<init>":(Lscala/util/parsing/ast/Binders;Lscala/Function1;)V
Asciz	orig;
Asciz	Lscala/collection/immutable/List;;
Asciz	evidence$13$1;
Asciz	NameElementIsMappable;
Asciz	(Lscala/util/parsing/ast/Binders;Lscala/util/parsing/ast/AbstractSyntax$NameElement;)Lscala/util/parsing/ast/Mappable$Mappable;;
Asciz	scala/util/parsing/ast/Binders$$anon$6;
class	scala/util/parsing/ast/Binders$$anon$6
Asciz	(Lscala/util/parsing/ast/Binders;Lscala/util/parsing/ast/AbstractSyntax$NameElement;)V;
NameAndType	"<init>":(Lscala/util/parsing/ast/Binders;Lscala/util/parsing/ast/AbstractSyntax$NameElement;)V
Method	scala/util/parsing/ast/Binders$$anon$6."<init>":(Lscala/util/parsing/ast/Binders;Lscala/util/parsing/ast/AbstractSyntax$NameElement;)V
Asciz	self$1;
Asciz	Lscala/util/parsing/ast/AbstractSyntax$NameElement;;
Asciz	ScopeIsMappable;
Asciz	(Lscala/util/parsing/ast/Binders;Lscala/util/parsing/ast/Binders$Scope;Lscala/Function1;)Lscala/util/parsing/ast/Mappable$Mappable;;
Asciz	scala/util/parsing/ast/Binders$$anon$5;
class	scala/util/parsing/ast/Binders$$anon$5
Asciz	(Lscala/util/parsing/ast/Binders;Lscala/util/parsing/ast/Binders$Scope;Lscala/Function1;)V;
NameAndType	"<init>":(Lscala/util/parsing/ast/Binders;Lscala/util/parsing/ast/Binders$Scope;Lscala/Function1;)V
Method	scala/util/parsing/ast/Binders$$anon$5."<init>":(Lscala/util/parsing/ast/Binders;Lscala/util/parsing/ast/Binders$Scope;Lscala/Function1;)V
Asciz	scope$1;
Asciz	Lscala/util/parsing/ast/Binders$Scope;;
Asciz	evidence$10$1;
Asciz	UnderBinderIsMappable;
Asciz	(Lscala/util/parsing/ast/Binders;Lscala/util/parsing/ast/Binders$UnderBinder;Lscala/Function1;Lscala/Function1;)Lscala/util/parsing/ast/Mappable$Mappable;;
Asciz	scala/util/parsing/ast/Binders$$anon$4;
class	scala/util/parsing/ast/Binders$$anon$4
Asciz	(Lscala/util/parsing/ast/Binders;Lscala/util/parsing/ast/Binders$UnderBinder;Lscala/Function1;Lscala/Function1;)V;
NameAndType	"<init>":(Lscala/util/parsing/ast/Binders;Lscala/util/parsing/ast/Binders$UnderBinder;Lscala/Function1;Lscala/Function1;)V
Method	scala/util/parsing/ast/Binders$$anon$4."<init>":(Lscala/util/parsing/ast/Binders;Lscala/util/parsing/ast/Binders$UnderBinder;Lscala/Function1;Lscala/Function1;)V
Asciz	ub$1;
Asciz	evidence$8$1;
Asciz	evidence$9$1;
Asciz	Scala;
Asciz	InnerClasses;
Asciz	Scope;
Asciz	$anon$4;
Asciz	$anon$5;
Asciz	$anon$6;
Asciz	$anon$11;
Asciz	scala/util/parsing/ast/Mappable$Mappable;
class	scala/util/parsing/ast/Mappable$Mappable
Asciz	scala/util/parsing/ast/Mappable;
class	scala/util/parsing/ast/Mappable
Asciz	Mappable;
Asciz	scala/util/parsing/ast/Binders$ReturnAndDo;
class	scala/util/parsing/ast/Binders$ReturnAndDo
Asciz	ReturnAndDo;
Asciz	scala/util/parsing/ast/AbstractSyntax$NameElement;
class	scala/util/parsing/ast/AbstractSyntax$NameElement
Asciz	scala/util/parsing/ast/AbstractSyntax;
class	scala/util/parsing/ast/AbstractSyntax
Asciz	NameElement;
Asciz	$anonfun$sequence$3;
Asciz	$anonfun$sequence$2;
Asciz	$anonfun$sequence$1;
Asciz	$anonfun$unsequence$1;
Asciz	scala/collection/generic/TraversableFactory;
class	scala/collection/generic/TraversableFactory
Asciz	GenericCanBuildFrom;
Asciz	scala/util/parsing/ast/Binders$class;
class	scala/util/parsing/ast/Binders$class
Asciz	java/lang/Object;
class	java/lang/Object

{
public static void $init$(scala.util.parsing.ast.Binders);
  Signature: (Lscala/util/parsing/ast/Binders;)V
  Code:
   Stack=0, Locals=1, Args_size=1
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      1      0    $this       Lscala/util/parsing/ast/Binders;


public static scala.util.parsing.ast.Binders$ReturnAndDo return_(scala.util.parsing.ast.Binders, java.lang.Object);
  Signature: (Lscala/util/parsing/ast/Binders;Ljava/lang/Object;)Lscala/util/parsing/ast/Binders$ReturnAndDo;
  Code:
   Stack=4, Locals=2, Args_size=2
	new	class scala/util/parsing/ast/Binders$$anon$11
	dup
	aload_0
	aload_1
	invokespecial	Method scala/util/parsing/ast/Binders$$anon$11."<init>":(Lscala/util/parsing/ast/Binders;Ljava/lang/Object;)V
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    $this       Lscala/util/parsing/ast/Binders;
   0      10      1    result$1       Ljava/lang/Object;


public static scala.collection.immutable.List unsequence(scala.util.parsing.ast.Binders, scala.util.parsing.ast.Binders$UnderBinder, scala.Function1);
  Signature: (Lscala/util/parsing/ast/Binders;Lscala/util/parsing/ast/Binders$UnderBinder;Lscala/Function1;)Lscala/collection/immutable/List;
  Code:
   Stack=6, Locals=3, Args_size=3
	aload_1
	invokevirtual	Method scala/util/parsing/ast/Binders$UnderBinder.scala$util$parsing$ast$Binders$$element:()Ljava/lang/Object;
	checkcast	class scala/collection/TraversableLike
	new	class scala/util/parsing/ast/Binders$$anonfun$unsequence$1
	dup
	aload_0
	aload_1
	aload_2
	invokespecial	Method scala/util/parsing/ast/Binders$$anonfun$unsequence$1."<init>":(Lscala/util/parsing/ast/Binders;Lscala/util/parsing/ast/Binders$UnderBinder;Lscala/Function1;)V
	getstatic	Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
	invokevirtual	Method scala/collection/immutable/List$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
	invokeinterface	InterfaceMethod scala/collection/TraversableLike.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
	checkcast	class scala/collection/immutable/List
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      32      0    $this       Lscala/util/parsing/ast/Binders;
   0      32      1    orig$1       Lscala/util/parsing/ast/Binders$UnderBinder;
   0      32      2    evidence$14$1       Lscala/Function1;


public static scala.util.parsing.ast.Binders$UnderBinder sequence(scala.util.parsing.ast.Binders, scala.collection.immutable.List, scala.Function1);
  Signature: (Lscala/util/parsing/ast/Binders;Lscala/collection/immutable/List;Lscala/Function1;)Lscala/util/parsing/ast/Binders$UnderBinder;
  Code:
   Stack=7, Locals=13, Args_size=3
	aload_1
	invokeinterface	InterfaceMethod scala/collection/IterableLike.isEmpty:()Z
	ifeq	l1 // aload_0
	aload_0
	invokeinterface	InterfaceMethod scala/util/parsing/ast/Binders.UnderBinder:()Lscala/util/parsing/ast/Binders$UnderBinder$;
	getstatic	Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
	new	class scala/util/parsing/ast/Binders$$anonfun$sequence$1
	dup
	aload_0
	aload_2
	invokespecial	Method scala/util/parsing/ast/Binders$$anonfun$sequence$1."<init>":(Lscala/util/parsing/ast/Binders;Lscala/Function1;)V
	astore	7
	astore	6
	astore_3
	aload_3
	getfield	Field scala/util/parsing/ast/Binders$UnderBinder$.$outer:Lscala/util/parsing/ast/Binders;
	invokeinterface	InterfaceMethod scala/util/parsing/ast/Binders.UnderBinder:()Lscala/util/parsing/ast/Binders$UnderBinder$;
	new	class scala/util/parsing/ast/Binders$Scope
	dup
	aload_3
	getfield	Field scala/util/parsing/ast/Binders$UnderBinder$.$outer:Lscala/util/parsing/ast/Binders;
	invokespecial	Method scala/util/parsing/ast/Binders$Scope."<init>":(Lscala/util/parsing/ast/Binders;)V
	astore	5
	astore	4
	new	class scala/util/parsing/ast/Binders$UnderBinder
	dup
	aload	4
	getfield	Field scala/util/parsing/ast/Binders$UnderBinder$.$outer:Lscala/util/parsing/ast/Binders;
	aload	5
	aload	6
	aload	7
	invokespecial	Method scala/util/parsing/ast/Binders$UnderBinder."<init>":(Lscala/util/parsing/ast/Binders;Lscala/util/parsing/ast/Binders$Scope;Ljava/lang/Object;Lscala/Function1;)V
	goto	l2 // areturn
l1	aload_0
	invokeinterface	InterfaceMethod scala/util/parsing/ast/Binders.UnderBinder:()Lscala/util/parsing/ast/Binders$UnderBinder$;
	aload_1
	iconst_0
	invokeinterface	InterfaceMethod scala/collection/LinearSeqLike.apply:(I)Ljava/lang/Object;
	checkcast	class scala/util/parsing/ast/Binders$UnderBinder
	invokevirtual	Method scala/util/parsing/ast/Binders$UnderBinder.scope:()Lscala/util/parsing/ast/Binders$Scope;
	aload_1
	new	class scala/util/parsing/ast/Binders$$anonfun$sequence$2
	dup
	aload_0
	invokespecial	Method scala/util/parsing/ast/Binders$$anonfun$sequence$2."<init>":(Lscala/util/parsing/ast/Binders;)V
	getstatic	Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
	astore	8
	new	class scala/collection/generic/TraversableFactory$GenericCanBuildFrom
	dup
	aload	8
	invokespecial	Method scala/collection/generic/TraversableFactory$GenericCanBuildFrom."<init>":(Lscala/collection/generic/TraversableFactory;)V
	invokeinterface	InterfaceMethod scala/collection/TraversableLike.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
	new	class scala/util/parsing/ast/Binders$$anonfun$sequence$3
	dup
	aload_0
	aload_2
	invokespecial	Method scala/util/parsing/ast/Binders$$anonfun$sequence$3."<init>":(Lscala/util/parsing/ast/Binders;Lscala/Function1;)V
	astore	12
	astore	11
	astore	10
	astore	9
	new	class scala/util/parsing/ast/Binders$UnderBinder
	dup
	aload	9
	getfield	Field scala/util/parsing/ast/Binders$UnderBinder$.$outer:Lscala/util/parsing/ast/Binders;
	aload	10
	aload	11
	aload	12
	invokespecial	Method scala/util/parsing/ast/Binders$UnderBinder."<init>":(Lscala/util/parsing/ast/Binders;Lscala/util/parsing/ast/Binders$Scope;Ljava/lang/Object;Lscala/Function1;)V
l2	areturn
  Labels:
   	l1 = 77 // aload_0
   	l2 = 159 // areturn
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      160      0    $this       Lscala/util/parsing/ast/Binders;
   0      160      1    orig       Lscala/collection/immutable/List;
   0      160      2    evidence$13$1       Lscala/Function1;


public static scala.util.parsing.ast.Mappable$Mappable NameElementIsMappable(scala.util.parsing.ast.Binders, scala.util.parsing.ast.AbstractSyntax$NameElement);
  Signature: (Lscala/util/parsing/ast/Binders;Lscala/util/parsing/ast/AbstractSyntax$NameElement;)Lscala/util/parsing/ast/Mappable$Mappable;
  Code:
   Stack=4, Locals=2, Args_size=2
	new	class scala/util/parsing/ast/Binders$$anon$6
	dup
	aload_0
	aload_1
	invokespecial	Method scala/util/parsing/ast/Binders$$anon$6."<init>":(Lscala/util/parsing/ast/Binders;Lscala/util/parsing/ast/AbstractSyntax$NameElement;)V
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    $this       Lscala/util/parsing/ast/Binders;
   0      10      1    self$1       Lscala/util/parsing/ast/AbstractSyntax$NameElement;


public static scala.util.parsing.ast.Mappable$Mappable ScopeIsMappable(scala.util.parsing.ast.Binders, scala.util.parsing.ast.Binders$Scope, scala.Function1);
  Signature: (Lscala/util/parsing/ast/Binders;Lscala/util/parsing/ast/Binders$Scope;Lscala/Function1;)Lscala/util/parsing/ast/Mappable$Mappable;
  Code:
   Stack=5, Locals=3, Args_size=3
	new	class scala/util/parsing/ast/Binders$$anon$5
	dup
	aload_0
	aload_1
	aload_2
	invokespecial	Method scala/util/parsing/ast/Binders$$anon$5."<init>":(Lscala/util/parsing/ast/Binders;Lscala/util/parsing/ast/Binders$Scope;Lscala/Function1;)V
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      11      0    $this       Lscala/util/parsing/ast/Binders;
   0      11      1    scope$1       Lscala/util/parsing/ast/Binders$Scope;
   0      11      2    evidence$10$1       Lscala/Function1;


public static scala.util.parsing.ast.Mappable$Mappable UnderBinderIsMappable(scala.util.parsing.ast.Binders, scala.util.parsing.ast.Binders$UnderBinder, scala.Function1, scala.Function1);
  Signature: (Lscala/util/parsing/ast/Binders;Lscala/util/parsing/ast/Binders$UnderBinder;Lscala/Function1;Lscala/Function1;)Lscala/util/parsing/ast/Mappable$Mappable;
  Code:
   Stack=6, Locals=4, Args_size=4
	new	class scala/util/parsing/ast/Binders$$anon$4
	dup
	aload_0
	aload_1
	aload_2
	aload_3
	invokespecial	Method scala/util/parsing/ast/Binders$$anon$4."<init>":(Lscala/util/parsing/ast/Binders;Lscala/util/parsing/ast/Binders$UnderBinder;Lscala/Function1;Lscala/Function1;)V
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      12      0    $this       Lscala/util/parsing/ast/Binders;
   0      12      1    ub$1       Lscala/util/parsing/ast/Binders$UnderBinder;
   0      12      2    evidence$8$1       Lscala/Function1;
   0      12      3    evidence$9$1       Lscala/Function1;


}

