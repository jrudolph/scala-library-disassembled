Compiled from "Binders.scala"
public abstract class scala.util.parsing.ast.Binders$class extends java.lang.Object
  SourceFile: "Binders.scala"
  Scala: length = 0x
   
  InnerClass: 
   public #146= #85 of #64; //Scope=class scala/util/parsing/ast/Binders$Scope of class scala/util/parsing/ast/Binders
   public final #147= #137 of #64; //$anon$4=class scala/util/parsing/ast/Binders$$anon$4 of class scala/util/parsing/ast/Binders
   public final #148= #127 of #64; //$anon$5=class scala/util/parsing/ast/Binders$$anon$5 of class scala/util/parsing/ast/Binders
   public final #149= #118 of #64; //$anon$6=class scala/util/parsing/ast/Binders$$anon$6 of class scala/util/parsing/ast/Binders
   public final #150= #13 of #64; //$anon$11=class scala/util/parsing/ast/Binders$$anon$11 of class scala/util/parsing/ast/Binders
   public abstract #155= #152 of #154; //Mappable=class scala/util/parsing/ast/Mappable$Mappable of class scala/util/parsing/ast/Mappable
   public #65= #23 of #64; //UnderBinder=class scala/util/parsing/ast/Binders$UnderBinder of class scala/util/parsing/ast/Binders
   public abstract #158= #157 of #64; //ReturnAndDo=class scala/util/parsing/ast/Binders$ReturnAndDo of class scala/util/parsing/ast/Binders
   public abstract #163= #160 of #162; //NameElement=class scala/util/parsing/ast/AbstractSyntax$NameElement of class scala/util/parsing/ast/AbstractSyntax
   public final #164= #110 of #64; //$anonfun$sequence$3=class scala/util/parsing/ast/Binders$$anonfun$sequence$3 of class scala/util/parsing/ast/Binders
   public final #165= #102 of #64; //$anonfun$sequence$2=class scala/util/parsing/ast/Binders$$anonfun$sequence$2 of class scala/util/parsing/ast/Binders
   public final #166= #75 of #64; //$anonfun$sequence$1=class scala/util/parsing/ast/Binders$$anonfun$sequence$1 of class scala/util/parsing/ast/Binders
   public final #167= #31 of #64; //$anonfun$unsequence$1=class scala/util/parsing/ast/Binders$$anonfun$unsequence$1 of class scala/util/parsing/ast/Binders
   public #170= #105 of #169; //GenericCanBuildFrom=class scala/collection/generic/TraversableFactory$GenericCanBuildFrom of class scala/collection/generic/TraversableFactory
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Binders.scala;
const #3 = Asciz	$init$;
const #4 = Asciz	(Lscala/util/parsing/ast/Binders;)V;
const #5 = Asciz	Code;
const #6 = Asciz	LineNumberTable;
const #7 = Asciz	$this;
const #8 = Asciz	Lscala/util/parsing/ast/Binders;;
const #9 = Asciz	LocalVariableTable;
const #10 = Asciz	return_;
const #11 = Asciz	(Lscala/util/parsing/ast/Binders;Ljava/lang/Object;)Lscala/util/parsing/ast/Binders$ReturnAndDo;;
const #12 = Asciz	scala/util/parsing/ast/Binders$$anon$11;
const #13 = class	#12;	//  scala/util/parsing/ast/Binders$$anon$11
const #14 = Asciz	<init>;
const #15 = Asciz	(Lscala/util/parsing/ast/Binders;Ljava/lang/Object;)V;
const #16 = NameAndType	#14:#15;//  "<init>":(Lscala/util/parsing/ast/Binders;Ljava/lang/Object;)V
const #17 = Method	#13.#16;	//  scala/util/parsing/ast/Binders$$anon$11."<init>":(Lscala/util/parsing/ast/Binders;Ljava/lang/Object;)V
const #18 = Asciz	result$1;
const #19 = Asciz	Ljava/lang/Object;;
const #20 = Asciz	unsequence;
const #21 = Asciz	(Lscala/util/parsing/ast/Binders;Lscala/util/parsing/ast/Binders$UnderBinder;Lscala/Function1;)Lscala/collection/immutable/List;;
const #22 = Asciz	scala/util/parsing/ast/Binders$UnderBinder;
const #23 = class	#22;	//  scala/util/parsing/ast/Binders$UnderBinder
const #24 = Asciz	scala$util$parsing$ast$Binders$$element;
const #25 = Asciz	()Ljava/lang/Object;;
const #26 = NameAndType	#24:#25;//  scala$util$parsing$ast$Binders$$element:()Ljava/lang/Object;
const #27 = Method	#23.#26;	//  scala/util/parsing/ast/Binders$UnderBinder.scala$util$parsing$ast$Binders$$element:()Ljava/lang/Object;
const #28 = Asciz	scala/collection/TraversableLike;
const #29 = class	#28;	//  scala/collection/TraversableLike
const #30 = Asciz	scala/util/parsing/ast/Binders$$anonfun$unsequence$1;
const #31 = class	#30;	//  scala/util/parsing/ast/Binders$$anonfun$unsequence$1
const #32 = Asciz	(Lscala/util/parsing/ast/Binders;Lscala/util/parsing/ast/Binders$UnderBinder;Lscala/Function1;)V;
const #33 = NameAndType	#14:#32;//  "<init>":(Lscala/util/parsing/ast/Binders;Lscala/util/parsing/ast/Binders$UnderBinder;Lscala/Function1;)V
const #34 = Method	#31.#33;	//  scala/util/parsing/ast/Binders$$anonfun$unsequence$1."<init>":(Lscala/util/parsing/ast/Binders;Lscala/util/parsing/ast/Binders$UnderBinder;Lscala/Function1;)V
const #35 = Asciz	scala/collection/immutable/List$;
const #36 = class	#35;	//  scala/collection/immutable/List$
const #37 = Asciz	MODULE$;
const #38 = Asciz	Lscala/collection/immutable/List$;;
const #39 = NameAndType	#37:#38;//  MODULE$:Lscala/collection/immutable/List$;
const #40 = Field	#36.#39;	//  scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
const #41 = Asciz	canBuildFrom;
const #42 = Asciz	()Lscala/collection/generic/CanBuildFrom;;
const #43 = NameAndType	#41:#42;//  canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
const #44 = Method	#36.#43;	//  scala/collection/immutable/List$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
const #45 = Asciz	map;
const #46 = Asciz	(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;;
const #47 = NameAndType	#45:#46;//  map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
const #48 = InterfaceMethod	#29.#47;	//  scala/collection/TraversableLike.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
const #49 = Asciz	scala/collection/immutable/List;
const #50 = class	#49;	//  scala/collection/immutable/List
const #51 = Asciz	orig$1;
const #52 = Asciz	Lscala/util/parsing/ast/Binders$UnderBinder;;
const #53 = Asciz	evidence$14$1;
const #54 = Asciz	Lscala/Function1;;
const #55 = Asciz	sequence;
const #56 = Asciz	(Lscala/util/parsing/ast/Binders;Lscala/collection/immutable/List;Lscala/Function1;)Lscala/util/parsing/ast/Binders$UnderBinder;;
const #57 = Asciz	scala/collection/IterableLike;
const #58 = class	#57;	//  scala/collection/IterableLike
const #59 = Asciz	isEmpty;
const #60 = Asciz	()Z;
const #61 = NameAndType	#59:#60;//  isEmpty:()Z
const #62 = InterfaceMethod	#58.#61;	//  scala/collection/IterableLike.isEmpty:()Z
const #63 = Asciz	scala/util/parsing/ast/Binders;
const #64 = class	#63;	//  scala/util/parsing/ast/Binders
const #65 = Asciz	UnderBinder;
const #66 = Asciz	()Lscala/util/parsing/ast/Binders$UnderBinder$;;
const #67 = NameAndType	#65:#66;//  UnderBinder:()Lscala/util/parsing/ast/Binders$UnderBinder$;
const #68 = InterfaceMethod	#64.#67;	//  scala/util/parsing/ast/Binders.UnderBinder:()Lscala/util/parsing/ast/Binders$UnderBinder$;
const #69 = Asciz	scala/collection/immutable/Nil$;
const #70 = class	#69;	//  scala/collection/immutable/Nil$
const #71 = Asciz	Lscala/collection/immutable/Nil$;;
const #72 = NameAndType	#37:#71;//  MODULE$:Lscala/collection/immutable/Nil$;
const #73 = Field	#70.#72;	//  scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
const #74 = Asciz	scala/util/parsing/ast/Binders$$anonfun$sequence$1;
const #75 = class	#74;	//  scala/util/parsing/ast/Binders$$anonfun$sequence$1
const #76 = Asciz	(Lscala/util/parsing/ast/Binders;Lscala/Function1;)V;
const #77 = NameAndType	#14:#76;//  "<init>":(Lscala/util/parsing/ast/Binders;Lscala/Function1;)V
const #78 = Method	#75.#77;	//  scala/util/parsing/ast/Binders$$anonfun$sequence$1."<init>":(Lscala/util/parsing/ast/Binders;Lscala/Function1;)V
const #79 = Asciz	scala/util/parsing/ast/Binders$UnderBinder$;
const #80 = class	#79;	//  scala/util/parsing/ast/Binders$UnderBinder$
const #81 = Asciz	$outer;
const #82 = NameAndType	#81:#8;//  $outer:Lscala/util/parsing/ast/Binders;
const #83 = Field	#80.#82;	//  scala/util/parsing/ast/Binders$UnderBinder$.$outer:Lscala/util/parsing/ast/Binders;
const #84 = Asciz	scala/util/parsing/ast/Binders$Scope;
const #85 = class	#84;	//  scala/util/parsing/ast/Binders$Scope
const #86 = NameAndType	#14:#4;//  "<init>":(Lscala/util/parsing/ast/Binders;)V
const #87 = Method	#85.#86;	//  scala/util/parsing/ast/Binders$Scope."<init>":(Lscala/util/parsing/ast/Binders;)V
const #88 = Asciz	(Lscala/util/parsing/ast/Binders;Lscala/util/parsing/ast/Binders$Scope;Ljava/lang/Object;Lscala/Function1;)V;
const #89 = NameAndType	#14:#88;//  "<init>":(Lscala/util/parsing/ast/Binders;Lscala/util/parsing/ast/Binders$Scope;Ljava/lang/Object;Lscala/Function1;)V
const #90 = Method	#23.#89;	//  scala/util/parsing/ast/Binders$UnderBinder."<init>":(Lscala/util/parsing/ast/Binders;Lscala/util/parsing/ast/Binders$Scope;Ljava/lang/Object;Lscala/Function1;)V
const #91 = Asciz	scala/collection/LinearSeqLike;
const #92 = class	#91;	//  scala/collection/LinearSeqLike
const #93 = Asciz	apply;
const #94 = Asciz	(I)Ljava/lang/Object;;
const #95 = NameAndType	#93:#94;//  apply:(I)Ljava/lang/Object;
const #96 = InterfaceMethod	#92.#95;	//  scala/collection/LinearSeqLike.apply:(I)Ljava/lang/Object;
const #97 = Asciz	scope;
const #98 = Asciz	()Lscala/util/parsing/ast/Binders$Scope;;
const #99 = NameAndType	#97:#98;//  scope:()Lscala/util/parsing/ast/Binders$Scope;
const #100 = Method	#23.#99;	//  scala/util/parsing/ast/Binders$UnderBinder.scope:()Lscala/util/parsing/ast/Binders$Scope;
const #101 = Asciz	scala/util/parsing/ast/Binders$$anonfun$sequence$2;
const #102 = class	#101;	//  scala/util/parsing/ast/Binders$$anonfun$sequence$2
const #103 = Method	#102.#86;	//  scala/util/parsing/ast/Binders$$anonfun$sequence$2."<init>":(Lscala/util/parsing/ast/Binders;)V
const #104 = Asciz	scala/collection/generic/TraversableFactory$GenericCanBuildFrom;
const #105 = class	#104;	//  scala/collection/generic/TraversableFactory$GenericCanBuildFrom
const #106 = Asciz	(Lscala/collection/generic/TraversableFactory;)V;
const #107 = NameAndType	#14:#106;//  "<init>":(Lscala/collection/generic/TraversableFactory;)V
const #108 = Method	#105.#107;	//  scala/collection/generic/TraversableFactory$GenericCanBuildFrom."<init>":(Lscala/collection/generic/TraversableFactory;)V
const #109 = Asciz	scala/util/parsing/ast/Binders$$anonfun$sequence$3;
const #110 = class	#109;	//  scala/util/parsing/ast/Binders$$anonfun$sequence$3
const #111 = Method	#110.#77;	//  scala/util/parsing/ast/Binders$$anonfun$sequence$3."<init>":(Lscala/util/parsing/ast/Binders;Lscala/Function1;)V
const #112 = Asciz	orig;
const #113 = Asciz	Lscala/collection/immutable/List;;
const #114 = Asciz	evidence$13$1;
const #115 = Asciz	NameElementIsMappable;
const #116 = Asciz	(Lscala/util/parsing/ast/Binders;Lscala/util/parsing/ast/AbstractSyntax$NameElement;)Lscala/util/parsing/ast/Mappable$Mappable;;
const #117 = Asciz	scala/util/parsing/ast/Binders$$anon$6;
const #118 = class	#117;	//  scala/util/parsing/ast/Binders$$anon$6
const #119 = Asciz	(Lscala/util/parsing/ast/Binders;Lscala/util/parsing/ast/AbstractSyntax$NameElement;)V;
const #120 = NameAndType	#14:#119;//  "<init>":(Lscala/util/parsing/ast/Binders;Lscala/util/parsing/ast/AbstractSyntax$NameElement;)V
const #121 = Method	#118.#120;	//  scala/util/parsing/ast/Binders$$anon$6."<init>":(Lscala/util/parsing/ast/Binders;Lscala/util/parsing/ast/AbstractSyntax$NameElement;)V
const #122 = Asciz	self$1;
const #123 = Asciz	Lscala/util/parsing/ast/AbstractSyntax$NameElement;;
const #124 = Asciz	ScopeIsMappable;
const #125 = Asciz	(Lscala/util/parsing/ast/Binders;Lscala/util/parsing/ast/Binders$Scope;Lscala/Function1;)Lscala/util/parsing/ast/Mappable$Mappable;;
const #126 = Asciz	scala/util/parsing/ast/Binders$$anon$5;
const #127 = class	#126;	//  scala/util/parsing/ast/Binders$$anon$5
const #128 = Asciz	(Lscala/util/parsing/ast/Binders;Lscala/util/parsing/ast/Binders$Scope;Lscala/Function1;)V;
const #129 = NameAndType	#14:#128;//  "<init>":(Lscala/util/parsing/ast/Binders;Lscala/util/parsing/ast/Binders$Scope;Lscala/Function1;)V
const #130 = Method	#127.#129;	//  scala/util/parsing/ast/Binders$$anon$5."<init>":(Lscala/util/parsing/ast/Binders;Lscala/util/parsing/ast/Binders$Scope;Lscala/Function1;)V
const #131 = Asciz	scope$1;
const #132 = Asciz	Lscala/util/parsing/ast/Binders$Scope;;
const #133 = Asciz	evidence$10$1;
const #134 = Asciz	UnderBinderIsMappable;
const #135 = Asciz	(Lscala/util/parsing/ast/Binders;Lscala/util/parsing/ast/Binders$UnderBinder;Lscala/Function1;Lscala/Function1;)Lscala/util/parsing/ast/Mappable$Mappable;;
const #136 = Asciz	scala/util/parsing/ast/Binders$$anon$4;
const #137 = class	#136;	//  scala/util/parsing/ast/Binders$$anon$4
const #138 = Asciz	(Lscala/util/parsing/ast/Binders;Lscala/util/parsing/ast/Binders$UnderBinder;Lscala/Function1;Lscala/Function1;)V;
const #139 = NameAndType	#14:#138;//  "<init>":(Lscala/util/parsing/ast/Binders;Lscala/util/parsing/ast/Binders$UnderBinder;Lscala/Function1;Lscala/Function1;)V
const #140 = Method	#137.#139;	//  scala/util/parsing/ast/Binders$$anon$4."<init>":(Lscala/util/parsing/ast/Binders;Lscala/util/parsing/ast/Binders$UnderBinder;Lscala/Function1;Lscala/Function1;)V
const #141 = Asciz	ub$1;
const #142 = Asciz	evidence$8$1;
const #143 = Asciz	evidence$9$1;
const #144 = Asciz	Scala;
const #145 = Asciz	InnerClasses;
const #146 = Asciz	Scope;
const #147 = Asciz	$anon$4;
const #148 = Asciz	$anon$5;
const #149 = Asciz	$anon$6;
const #150 = Asciz	$anon$11;
const #151 = Asciz	scala/util/parsing/ast/Mappable$Mappable;
const #152 = class	#151;	//  scala/util/parsing/ast/Mappable$Mappable
const #153 = Asciz	scala/util/parsing/ast/Mappable;
const #154 = class	#153;	//  scala/util/parsing/ast/Mappable
const #155 = Asciz	Mappable;
const #156 = Asciz	scala/util/parsing/ast/Binders$ReturnAndDo;
const #157 = class	#156;	//  scala/util/parsing/ast/Binders$ReturnAndDo
const #158 = Asciz	ReturnAndDo;
const #159 = Asciz	scala/util/parsing/ast/AbstractSyntax$NameElement;
const #160 = class	#159;	//  scala/util/parsing/ast/AbstractSyntax$NameElement
const #161 = Asciz	scala/util/parsing/ast/AbstractSyntax;
const #162 = class	#161;	//  scala/util/parsing/ast/AbstractSyntax
const #163 = Asciz	NameElement;
const #164 = Asciz	$anonfun$sequence$3;
const #165 = Asciz	$anonfun$sequence$2;
const #166 = Asciz	$anonfun$sequence$1;
const #167 = Asciz	$anonfun$unsequence$1;
const #168 = Asciz	scala/collection/generic/TraversableFactory;
const #169 = class	#168;	//  scala/collection/generic/TraversableFactory
const #170 = Asciz	GenericCanBuildFrom;
const #171 = Asciz	scala/util/parsing/ast/Binders$class;
const #172 = class	#171;	//  scala/util/parsing/ast/Binders$class
const #173 = Asciz	java/lang/Object;
const #174 = class	#173;	//  java/lang/Object

{
public static void $init$(scala.util.parsing.ast.Binders);
  Code:
   Stack=0, Locals=1, Args_size=1
   0:	return
  LineNumberTable: 
   line 77: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      1      0    $this       Lscala/util/parsing/ast/Binders;


public static scala.util.parsing.ast.Binders$ReturnAndDo return_(scala.util.parsing.ast.Binders, java.lang.Object);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#13; //class scala/util/parsing/ast/Binders$$anon$11
   3:	dup
   4:	aload_0
   5:	aload_1
   6:	invokespecial	#17; //Method scala/util/parsing/ast/Binders$$anon$11."<init>":(Lscala/util/parsing/ast/Binders;Ljava/lang/Object;)V
   9:	areturn
  LineNumberTable: 
   line 348: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    $this       Lscala/util/parsing/ast/Binders;
   0      10      1    result$1       Ljava/lang/Object;


public static scala.collection.immutable.List unsequence(scala.util.parsing.ast.Binders, scala.util.parsing.ast.Binders$UnderBinder, scala.Function1);
  Code:
   Stack=6, Locals=3, Args_size=3
   0:	aload_1
   1:	invokevirtual	#27; //Method scala/util/parsing/ast/Binders$UnderBinder.scala$util$parsing$ast$Binders$$element:()Ljava/lang/Object;
   4:	checkcast	#29; //class scala/collection/TraversableLike
   7:	new	#31; //class scala/util/parsing/ast/Binders$$anonfun$unsequence$1
   10:	dup
   11:	aload_0
   12:	aload_1
   13:	aload_2
   14:	invokespecial	#34; //Method scala/util/parsing/ast/Binders$$anonfun$unsequence$1."<init>":(Lscala/util/parsing/ast/Binders;Lscala/util/parsing/ast/Binders$UnderBinder;Lscala/Function1;)V
   17:	getstatic	#40; //Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
   20:	invokevirtual	#44; //Method scala/collection/immutable/List$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
   23:	invokeinterface	#48,  3; //InterfaceMethod scala/collection/TraversableLike.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
   28:	checkcast	#50; //class scala/collection/immutable/List
   31:	areturn
  LineNumberTable: 
   line 312: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      32      0    $this       Lscala/util/parsing/ast/Binders;
   0      32      1    orig$1       Lscala/util/parsing/ast/Binders$UnderBinder;
   0      32      2    evidence$14$1       Lscala/Function1;


public static scala.util.parsing.ast.Binders$UnderBinder sequence(scala.util.parsing.ast.Binders, scala.collection.immutable.List, scala.Function1);
  Code:
   Stack=7, Locals=13, Args_size=3
   0:	aload_1
   1:	invokeinterface	#62,  1; //InterfaceMethod scala/collection/IterableLike.isEmpty:()Z
   6:	ifeq	77
   9:	aload_0
   10:	invokeinterface	#68,  1; //InterfaceMethod scala/util/parsing/ast/Binders.UnderBinder:()Lscala/util/parsing/ast/Binders$UnderBinder$;
   15:	getstatic	#73; //Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
   18:	new	#75; //class scala/util/parsing/ast/Binders$$anonfun$sequence$1
   21:	dup
   22:	aload_0
   23:	aload_2
   24:	invokespecial	#78; //Method scala/util/parsing/ast/Binders$$anonfun$sequence$1."<init>":(Lscala/util/parsing/ast/Binders;Lscala/Function1;)V
   27:	astore	7
   29:	astore	6
   31:	astore_3
   32:	aload_3
   33:	getfield	#83; //Field scala/util/parsing/ast/Binders$UnderBinder$.$outer:Lscala/util/parsing/ast/Binders;
   36:	invokeinterface	#68,  1; //InterfaceMethod scala/util/parsing/ast/Binders.UnderBinder:()Lscala/util/parsing/ast/Binders$UnderBinder$;
   41:	new	#85; //class scala/util/parsing/ast/Binders$Scope
   44:	dup
   45:	aload_3
   46:	getfield	#83; //Field scala/util/parsing/ast/Binders$UnderBinder$.$outer:Lscala/util/parsing/ast/Binders;
   49:	invokespecial	#87; //Method scala/util/parsing/ast/Binders$Scope."<init>":(Lscala/util/parsing/ast/Binders;)V
   52:	astore	5
   54:	astore	4
   56:	new	#23; //class scala/util/parsing/ast/Binders$UnderBinder
   59:	dup
   60:	aload	4
   62:	getfield	#83; //Field scala/util/parsing/ast/Binders$UnderBinder$.$outer:Lscala/util/parsing/ast/Binders;
   65:	aload	5
   67:	aload	6
   69:	aload	7
   71:	invokespecial	#90; //Method scala/util/parsing/ast/Binders$UnderBinder."<init>":(Lscala/util/parsing/ast/Binders;Lscala/util/parsing/ast/Binders$Scope;Ljava/lang/Object;Lscala/Function1;)V
   74:	goto	159
   77:	aload_0
   78:	invokeinterface	#68,  1; //InterfaceMethod scala/util/parsing/ast/Binders.UnderBinder:()Lscala/util/parsing/ast/Binders$UnderBinder$;
   83:	aload_1
   84:	iconst_0
   85:	invokeinterface	#96,  2; //InterfaceMethod scala/collection/LinearSeqLike.apply:(I)Ljava/lang/Object;
   90:	checkcast	#23; //class scala/util/parsing/ast/Binders$UnderBinder
   93:	invokevirtual	#100; //Method scala/util/parsing/ast/Binders$UnderBinder.scope:()Lscala/util/parsing/ast/Binders$Scope;
   96:	aload_1
   97:	new	#102; //class scala/util/parsing/ast/Binders$$anonfun$sequence$2
   100:	dup
   101:	aload_0
   102:	invokespecial	#103; //Method scala/util/parsing/ast/Binders$$anonfun$sequence$2."<init>":(Lscala/util/parsing/ast/Binders;)V
   105:	getstatic	#40; //Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
   108:	astore	8
   110:	new	#105; //class scala/collection/generic/TraversableFactory$GenericCanBuildFrom
   113:	dup
   114:	aload	8
   116:	invokespecial	#108; //Method scala/collection/generic/TraversableFactory$GenericCanBuildFrom."<init>":(Lscala/collection/generic/TraversableFactory;)V
   119:	invokeinterface	#48,  3; //InterfaceMethod scala/collection/TraversableLike.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
   124:	new	#110; //class scala/util/parsing/ast/Binders$$anonfun$sequence$3
   127:	dup
   128:	aload_0
   129:	aload_2
   130:	invokespecial	#111; //Method scala/util/parsing/ast/Binders$$anonfun$sequence$3."<init>":(Lscala/util/parsing/ast/Binders;Lscala/Function1;)V
   133:	astore	12
   135:	astore	11
   137:	astore	10
   139:	astore	9
   141:	new	#23; //class scala/util/parsing/ast/Binders$UnderBinder
   144:	dup
   145:	aload	9
   147:	getfield	#83; //Field scala/util/parsing/ast/Binders$UnderBinder$.$outer:Lscala/util/parsing/ast/Binders;
   150:	aload	10
   152:	aload	11
   154:	aload	12
   156:	invokespecial	#90; //Method scala/util/parsing/ast/Binders$UnderBinder."<init>":(Lscala/util/parsing/ast/Binders;Lscala/util/parsing/ast/Binders$Scope;Ljava/lang/Object;Lscala/Function1;)V
   159:	areturn
  LineNumberTable: 
   line 307: 0
   line 308: 77
   line 307: 159

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      160      0    $this       Lscala/util/parsing/ast/Binders;
   0      160      1    orig       Lscala/collection/immutable/List;
   0      160      2    evidence$13$1       Lscala/Function1;


public static scala.util.parsing.ast.Mappable$Mappable NameElementIsMappable(scala.util.parsing.ast.Binders, scala.util.parsing.ast.AbstractSyntax$NameElement);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#118; //class scala/util/parsing/ast/Binders$$anon$6
   3:	dup
   4:	aload_0
   5:	aload_1
   6:	invokespecial	#121; //Method scala/util/parsing/ast/Binders$$anon$6."<init>":(Lscala/util/parsing/ast/Binders;Lscala/util/parsing/ast/AbstractSyntax$NameElement;)V
   9:	areturn
  LineNumberTable: 
   line 284: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    $this       Lscala/util/parsing/ast/Binders;
   0      10      1    self$1       Lscala/util/parsing/ast/AbstractSyntax$NameElement;


public static scala.util.parsing.ast.Mappable$Mappable ScopeIsMappable(scala.util.parsing.ast.Binders, scala.util.parsing.ast.Binders$Scope, scala.Function1);
  Code:
   Stack=5, Locals=3, Args_size=3
   0:	new	#127; //class scala/util/parsing/ast/Binders$$anon$5
   3:	dup
   4:	aload_0
   5:	aload_1
   6:	aload_2
   7:	invokespecial	#130; //Method scala/util/parsing/ast/Binders$$anon$5."<init>":(Lscala/util/parsing/ast/Binders;Lscala/util/parsing/ast/Binders$Scope;Lscala/Function1;)V
   10:	areturn
  LineNumberTable: 
   line 277: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      11      0    $this       Lscala/util/parsing/ast/Binders;
   0      11      1    scope$1       Lscala/util/parsing/ast/Binders$Scope;
   0      11      2    evidence$10$1       Lscala/Function1;


public static scala.util.parsing.ast.Mappable$Mappable UnderBinderIsMappable(scala.util.parsing.ast.Binders, scala.util.parsing.ast.Binders$UnderBinder, scala.Function1, scala.Function1);
  Code:
   Stack=6, Locals=4, Args_size=4
   0:	new	#137; //class scala/util/parsing/ast/Binders$$anon$4
   3:	dup
   4:	aload_0
   5:	aload_1
   6:	aload_2
   7:	aload_3
   8:	invokespecial	#140; //Method scala/util/parsing/ast/Binders$$anon$4."<init>":(Lscala/util/parsing/ast/Binders;Lscala/util/parsing/ast/Binders$UnderBinder;Lscala/Function1;Lscala/Function1;)V
   11:	areturn
  LineNumberTable: 
   line 272: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      12      0    $this       Lscala/util/parsing/ast/Binders;
   0      12      1    ub$1       Lscala/util/parsing/ast/Binders$UnderBinder;
   0      12      2    evidence$8$1       Lscala/Function1;
   0      12      3    evidence$9$1       Lscala/Function1;


}

