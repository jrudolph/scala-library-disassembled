Compiled from "JSON.scala"
public final class scala.util.parsing.json.JSON$ extends scala.util.parsing.json.Parser implements scala.ScalaObject
  SourceFile: "JSON.scala"
  Scala: length = 0x
   
  InnerClass: 
   public abstract #208= #189 of #174; //Parser=class scala/util/parsing/combinator/Parsers$Parser of class scala/util/parsing/combinator/Parsers
   public #209= #194 of #174; //Success=class scala/util/parsing/combinator/Parsers$Success of class scala/util/parsing/combinator/Parsers
   public #212= #180 of #211; //Scanner=class scala/util/parsing/combinator/lexical/Scanners$Scanner of class scala/util/parsing/combinator/lexical/Scanners
   public abstract #215= #214 of #174; //NoSuccess=class scala/util/parsing/combinator/Parsers$NoSuccess of class scala/util/parsing/combinator/Parsers
   public abstract #216= #199 of #174; //ParseResult=class scala/util/parsing/combinator/Parsers$ParseResult of class scala/util/parsing/combinator/Parsers
   public final #219= #102 of #218; //$anonfun$resolveType$2=class scala/util/parsing/json/JSON$$anonfun$resolveType$2 of class scala/util/parsing/json/JSON
   public final #220= #87 of #218; //$anonfun$resolveType$1=class scala/util/parsing/json/JSON$$anonfun$resolveType$1 of class scala/util/parsing/json/JSON
   public #223= #110 of #222; //GenericCanBuildFrom=class scala/collection/generic/TraversableFactory$GenericCanBuildFrom of class scala/collection/generic/TraversableFactory
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	JSON.scala;
const #3 = Asciz	Scala;
const #4 = Asciz	MODULE$;
const #5 = Asciz	Lscala/util/parsing/json/JSON$;;
const #6 = Asciz	<clinit>;
const #7 = Asciz	()V;
const #8 = Asciz	Code;
const #9 = Asciz	scala/util/parsing/json/JSON$;
const #10 = class	#9;	//  scala/util/parsing/json/JSON$
const #11 = Asciz	<init>;
const #12 = NameAndType	#11:#7;//  "<init>":()V
const #13 = Method	#10.#12;	//  scala/util/parsing/json/JSON$."<init>":()V
const #14 = Asciz	LineNumberTable;
const #15 = Asciz	scala/util/parsing/json/Parser;
const #16 = class	#15;	//  scala/util/parsing/json/Parser
const #17 = Method	#16.#12;	//  scala/util/parsing/json/Parser."<init>":()V
const #18 = NameAndType	#4:#5;//  MODULE$:Lscala/util/parsing/json/JSON$;
const #19 = Field	#10.#18;	//  scala/util/parsing/json/JSON$.MODULE$:Lscala/util/parsing/json/JSON$;
const #20 = Asciz	perThreadNumberParser;
const #21 = Asciz	()Lscala/Function1;;
const #22 = Asciz	numberParser;
const #23 = Asciz	()Ljava/lang/ThreadLocal;;
const #24 = NameAndType	#22:#23;//  numberParser:()Ljava/lang/ThreadLocal;
const #25 = Method	#10.#24;	//  scala/util/parsing/json/JSON$.numberParser:()Ljava/lang/ThreadLocal;
const #26 = Asciz	java/lang/ThreadLocal;
const #27 = class	#26;	//  java/lang/ThreadLocal
const #28 = Asciz	get;
const #29 = Asciz	()Ljava/lang/Object;;
const #30 = NameAndType	#28:#29;//  get:()Ljava/lang/Object;
const #31 = Method	#27.#30;	//  java/lang/ThreadLocal.get:()Ljava/lang/Object;
const #32 = Asciz	scala/Function1;
const #33 = class	#32;	//  scala/Function1
const #34 = Asciz	()Lscala/Function1<Ljava/lang/String;Ljava/lang/Object;>;;
const #35 = Asciz	Signature;
const #36 = Asciz	perThreadNumberParser_$eq;
const #37 = Asciz	(Lscala/Function1;)V;
const #38 = Asciz	set;
const #39 = Asciz	(Ljava/lang/Object;)V;
const #40 = NameAndType	#38:#39;//  set:(Ljava/lang/Object;)V
const #41 = Method	#27.#40;	//  java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
const #42 = Asciz	this;
const #43 = Asciz	f;
const #44 = Asciz	Lscala/Function1;;
const #45 = Asciz	LocalVariableTable;
const #46 = Asciz	(Lscala/Function1<Ljava/lang/String;Ljava/lang/Object;>;)V;
const #47 = Asciz	globalNumberParser;
const #48 = Asciz	defaultNumberParser;
const #49 = NameAndType	#48:#21;//  defaultNumberParser:()Lscala/Function1;
const #50 = Method	#10.#49;	//  scala/util/parsing/json/JSON$.defaultNumberParser:()Lscala/Function1;
const #51 = Asciz	globalNumberParser_$eq;
const #52 = Asciz	defaultNumberParser_$eq;
const #53 = NameAndType	#52:#37;//  defaultNumberParser_$eq:(Lscala/Function1;)V
const #54 = Method	#10.#53;	//  scala/util/parsing/json/JSON$.defaultNumberParser_$eq:(Lscala/Function1;)V
const #55 = Asciz	resolveType;
const #56 = Asciz	(Lscala/collection/immutable/List;)Ljava/lang/Object;;
const #57 = Asciz	scala/runtime/ObjectRef;
const #58 = class	#57;	//  scala/runtime/ObjectRef
const #59 = Asciz	scala/Predef$;
const #60 = class	#59;	//  scala/Predef$
const #61 = Asciz	Lscala/Predef$;;
const #62 = NameAndType	#4:#61;//  MODULE$:Lscala/Predef$;
const #63 = Field	#60.#62;	//  scala/Predef$.MODULE$:Lscala/Predef$;
const #64 = Asciz	Map;
const #65 = Asciz	()Lscala/collection/immutable/Map$;;
const #66 = NameAndType	#64:#65;//  Map:()Lscala/collection/immutable/Map$;
const #67 = Method	#60.#66;	//  scala/Predef$.Map:()Lscala/collection/immutable/Map$;
const #68 = Asciz	scala/Tuple2;
const #69 = class	#68;	//  scala/Tuple2
const #70 = Asciz	[Ljava/lang/Object;;
const #71 = class	#70;	//  "[Ljava/lang/Object;"
const #72 = Asciz	wrapRefArray;
const #73 = Asciz	([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;;
const #74 = NameAndType	#72:#73;//  wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
const #75 = Method	#60.#74;	//  scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
const #76 = Asciz	scala/collection/immutable/Map$;
const #77 = class	#76;	//  scala/collection/immutable/Map$
const #78 = Asciz	apply;
const #79 = Asciz	(Lscala/collection/Seq;)Lscala/collection/Map;;
const #80 = NameAndType	#78:#79;//  apply:(Lscala/collection/Seq;)Lscala/collection/Map;
const #81 = Method	#77.#80;	//  scala/collection/immutable/Map$.apply:(Lscala/collection/Seq;)Lscala/collection/Map;
const #82 = Asciz	scala/collection/immutable/Map;
const #83 = class	#82;	//  scala/collection/immutable/Map
const #84 = NameAndType	#11:#39;//  "<init>":(Ljava/lang/Object;)V
const #85 = Method	#58.#84;	//  scala/runtime/ObjectRef."<init>":(Ljava/lang/Object;)V
const #86 = Asciz	scala/util/parsing/json/JSON$$anonfun$resolveType$1;
const #87 = class	#86;	//  scala/util/parsing/json/JSON$$anonfun$resolveType$1
const #88 = Asciz	(Lscala/runtime/ObjectRef;)V;
const #89 = NameAndType	#11:#88;//  "<init>":(Lscala/runtime/ObjectRef;)V
const #90 = Method	#87.#89;	//  scala/util/parsing/json/JSON$$anonfun$resolveType$1."<init>":(Lscala/runtime/ObjectRef;)V
const #91 = Asciz	scala/collection/LinearSeqLike;
const #92 = class	#91;	//  scala/collection/LinearSeqLike
const #93 = Asciz	forall;
const #94 = Asciz	(Lscala/Function1;)Z;
const #95 = NameAndType	#93:#94;//  forall:(Lscala/Function1;)Z
const #96 = InterfaceMethod	#92.#95;	//  scala/collection/LinearSeqLike.forall:(Lscala/Function1;)Z
const #97 = Asciz	elem;
const #98 = Asciz	Ljava/lang/Object;;
const #99 = NameAndType	#97:#98;//  elem:Ljava/lang/Object;
const #100 = Field	#58.#99;	//  scala/runtime/ObjectRef.elem:Ljava/lang/Object;
const #101 = Asciz	scala/util/parsing/json/JSON$$anonfun$resolveType$2;
const #102 = class	#101;	//  scala/util/parsing/json/JSON$$anonfun$resolveType$2
const #103 = Method	#102.#12;	//  scala/util/parsing/json/JSON$$anonfun$resolveType$2."<init>":()V
const #104 = Asciz	scala/collection/immutable/List$;
const #105 = class	#104;	//  scala/collection/immutable/List$
const #106 = Asciz	Lscala/collection/immutable/List$;;
const #107 = NameAndType	#4:#106;//  MODULE$:Lscala/collection/immutable/List$;
const #108 = Field	#105.#107;	//  scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
const #109 = Asciz	scala/collection/generic/TraversableFactory$GenericCanBuildFrom;
const #110 = class	#109;	//  scala/collection/generic/TraversableFactory$GenericCanBuildFrom
const #111 = Asciz	(Lscala/collection/generic/TraversableFactory;)V;
const #112 = NameAndType	#11:#111;//  "<init>":(Lscala/collection/generic/TraversableFactory;)V
const #113 = Method	#110.#112;	//  scala/collection/generic/TraversableFactory$GenericCanBuildFrom."<init>":(Lscala/collection/generic/TraversableFactory;)V
const #114 = Asciz	scala/collection/TraversableLike;
const #115 = class	#114;	//  scala/collection/TraversableLike
const #116 = Asciz	map;
const #117 = Asciz	(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;;
const #118 = NameAndType	#116:#117;//  map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
const #119 = InterfaceMethod	#115.#118;	//  scala/collection/TraversableLike.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
const #120 = Asciz	input;
const #121 = Asciz	Lscala/collection/immutable/List;;
const #122 = Asciz	objMap$1;
const #123 = Asciz	Lscala/runtime/ObjectRef;;
const #124 = Asciz	(Lscala/collection/immutable/List<Ljava/lang/Object;>;)Ljava/lang/Object;;
const #125 = Asciz	parseFull;
const #126 = Asciz	(Ljava/lang/String;)Lscala/Option;;
const #127 = Asciz	parse;
const #128 = NameAndType	#127:#126;//  parse:(Ljava/lang/String;)Lscala/Option;
const #129 = Method	#10.#128;	//  scala/util/parsing/json/JSON$.parse:(Ljava/lang/String;)Lscala/Option;
const #130 = Asciz	scala/Some;
const #131 = class	#130;	//  scala/Some
const #132 = Asciz	x;
const #133 = NameAndType	#132:#98;//  x:Ljava/lang/Object;
const #134 = Field	#131.#133;	//  scala/Some.x:Ljava/lang/Object;
const #135 = Asciz	scala/collection/immutable/List;
const #136 = class	#135;	//  scala/collection/immutable/List
const #137 = NameAndType	#55:#56;//  resolveType:(Lscala/collection/immutable/List;)Ljava/lang/Object;
const #138 = Method	#10.#137;	//  scala/util/parsing/json/JSON$.resolveType:(Lscala/collection/immutable/List;)Ljava/lang/Object;
const #139 = Method	#131.#84;	//  scala/Some."<init>":(Ljava/lang/Object;)V
const #140 = Asciz	scala/MatchError;
const #141 = class	#140;	//  scala/MatchError
const #142 = Asciz	scala/Option;
const #143 = class	#142;	//  scala/Option
const #144 = Asciz	toString;
const #145 = Asciz	()Ljava/lang/String;;
const #146 = NameAndType	#144:#145;//  toString:()Ljava/lang/String;
const #147 = Method	#143.#146;	//  scala/Option.toString:()Ljava/lang/String;
const #148 = Asciz	(Ljava/lang/String;)V;
const #149 = NameAndType	#11:#148;//  "<init>":(Ljava/lang/String;)V
const #150 = Method	#141.#149;	//  scala/MatchError."<init>":(Ljava/lang/String;)V
const #151 = Asciz	scala/None$;
const #152 = class	#151;	//  scala/None$
const #153 = Asciz	Lscala/None$;;
const #154 = NameAndType	#4:#153;//  MODULE$:Lscala/None$;
const #155 = Field	#152.#154;	//  scala/None$.MODULE$:Lscala/None$;
const #156 = Asciz	java/lang/Object;
const #157 = class	#156;	//  java/lang/Object
const #158 = Asciz	equals;
const #159 = Asciz	(Ljava/lang/Object;)Z;
const #160 = NameAndType	#158:#159;//  equals:(Ljava/lang/Object;)Z
const #161 = Method	#157.#160;	//  java/lang/Object.equals:(Ljava/lang/Object;)Z
const #162 = Asciz	Ljava/lang/String;;
const #163 = Asciz	temp6;
const #164 = Asciz	Lscala/Some;;
const #165 = Asciz	temp7;
const #166 = Asciz	temp5;
const #167 = Asciz	Lscala/Option;;
const #168 = Asciz	(Ljava/lang/String;)Lscala/Option<Ljava/lang/Object;>;;
const #169 = Asciz	root;
const #170 = Asciz	()Lscala/util/parsing/combinator/Parsers$Parser;;
const #171 = NameAndType	#169:#170;//  root:()Lscala/util/parsing/combinator/Parsers$Parser;
const #172 = Method	#10.#171;	//  scala/util/parsing/json/JSON$.root:()Lscala/util/parsing/combinator/Parsers$Parser;
const #173 = Asciz	scala/util/parsing/combinator/Parsers;
const #174 = class	#173;	//  scala/util/parsing/combinator/Parsers
const #175 = Asciz	phrase;
const #176 = Asciz	(Lscala/util/parsing/combinator/Parsers$Parser;)Lscala/util/parsing/combinator/Parsers$Parser;;
const #177 = NameAndType	#175:#176;//  phrase:(Lscala/util/parsing/combinator/Parsers$Parser;)Lscala/util/parsing/combinator/Parsers$Parser;
const #178 = InterfaceMethod	#174.#177;	//  scala/util/parsing/combinator/Parsers.phrase:(Lscala/util/parsing/combinator/Parsers$Parser;)Lscala/util/parsing/combinator/Parsers$Parser;
const #179 = Asciz	scala/util/parsing/combinator/lexical/Scanners$Scanner;
const #180 = class	#179;	//  scala/util/parsing/combinator/lexical/Scanners$Scanner
const #181 = Asciz	lexical;
const #182 = Asciz	()Lscala/util/parsing/json/Lexer;;
const #183 = NameAndType	#181:#182;//  lexical:()Lscala/util/parsing/json/Lexer;
const #184 = Method	#10.#183;	//  scala/util/parsing/json/JSON$.lexical:()Lscala/util/parsing/json/Lexer;
const #185 = Asciz	(Lscala/util/parsing/combinator/lexical/Scanners;Ljava/lang/String;)V;
const #186 = NameAndType	#11:#185;//  "<init>":(Lscala/util/parsing/combinator/lexical/Scanners;Ljava/lang/String;)V
const #187 = Method	#180.#186;	//  scala/util/parsing/combinator/lexical/Scanners$Scanner."<init>":(Lscala/util/parsing/combinator/lexical/Scanners;Ljava/lang/String;)V
const #188 = Asciz	scala/util/parsing/combinator/Parsers$Parser;
const #189 = class	#188;	//  scala/util/parsing/combinator/Parsers$Parser
const #190 = Asciz	(Lscala/util/parsing/input/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;;
const #191 = NameAndType	#78:#190;//  apply:(Lscala/util/parsing/input/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
const #192 = Method	#189.#191;	//  scala/util/parsing/combinator/Parsers$Parser.apply:(Lscala/util/parsing/input/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
const #193 = Asciz	scala/util/parsing/combinator/Parsers$Success;
const #194 = class	#193;	//  scala/util/parsing/combinator/Parsers$Success
const #195 = Asciz	result;
const #196 = NameAndType	#195:#29;//  result:()Ljava/lang/Object;
const #197 = Method	#194.#196;	//  scala/util/parsing/combinator/Parsers$Success.result:()Ljava/lang/Object;
const #198 = Asciz	scala/util/parsing/combinator/Parsers$ParseResult;
const #199 = class	#198;	//  scala/util/parsing/combinator/Parsers$ParseResult
const #200 = Method	#199.#146;	//  scala/util/parsing/combinator/Parsers$ParseResult.toString:()Ljava/lang/String;
const #201 = Asciz	temp2;
const #202 = Asciz	Lscala/util/parsing/combinator/Parsers$Success;;
const #203 = Asciz	temp3;
const #204 = Asciz	temp1;
const #205 = Asciz	Lscala/util/parsing/combinator/Parsers$ParseResult;;
const #206 = Asciz	(Ljava/lang/String;)Lscala/Option<Lscala/collection/immutable/List<Ljava/lang/Object;>;>;;
const #207 = Asciz	InnerClasses;
const #208 = Asciz	Parser;
const #209 = Asciz	Success;
const #210 = Asciz	scala/util/parsing/combinator/lexical/Scanners;
const #211 = class	#210;	//  scala/util/parsing/combinator/lexical/Scanners
const #212 = Asciz	Scanner;
const #213 = Asciz	scala/util/parsing/combinator/Parsers$NoSuccess;
const #214 = class	#213;	//  scala/util/parsing/combinator/Parsers$NoSuccess
const #215 = Asciz	NoSuccess;
const #216 = Asciz	ParseResult;
const #217 = Asciz	scala/util/parsing/json/JSON;
const #218 = class	#217;	//  scala/util/parsing/json/JSON
const #219 = Asciz	$anonfun$resolveType$2;
const #220 = Asciz	$anonfun$resolveType$1;
const #221 = Asciz	scala/collection/generic/TraversableFactory;
const #222 = class	#221;	//  scala/collection/generic/TraversableFactory
const #223 = Asciz	GenericCanBuildFrom;
const #224 = Asciz	scala/ScalaObject;
const #225 = class	#224;	//  scala/ScalaObject

{
public static final scala.util.parsing.json.JSON$ MODULE$;

public static {};
  Code:
   Stack=1, Locals=0, Args_size=0
   0:	new	#10; //class scala/util/parsing/json/JSON$
   3:	invokespecial	#13; //Method "<init>":()V
   6:	return

public scala.Function1 perThreadNumberParser();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#25; //Method numberParser:()Ljava/lang/ThreadLocal;
   4:	invokevirtual	#31; //Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
   7:	checkcast	#33; //class scala/Function1
   10:	areturn
  LineNumberTable: 
   line 100: 0

  Signature: length = 0x2
   00 22 

public void perThreadNumberParser_$eq(scala.Function1);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	invokevirtual	#25; //Method numberParser:()Ljava/lang/ThreadLocal;
   4:	aload_1
   5:	invokevirtual	#41; //Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
   8:	return
  LineNumberTable: 
   line 99: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/util/parsing/json/JSON$;
   0      9      1    f       Lscala/Function1;

  Signature: length = 0x2
   00 2E 

public scala.Function1 globalNumberParser();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#50; //Method defaultNumberParser:()Lscala/Function1;
   4:	areturn
  LineNumberTable: 
   line 93: 0

  Signature: length = 0x2
   00 22 

public void globalNumberParser_$eq(scala.Function1);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokevirtual	#54; //Method defaultNumberParser_$eq:(Lscala/Function1;)V
   5:	return
  LineNumberTable: 
   line 92: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/util/parsing/json/JSON$;
   0      6      1    f       Lscala/Function1;

  Signature: length = 0x2
   00 2E 

public java.lang.Object resolveType(scala.collection.immutable.List);
  Code:
   Stack=5, Locals=4, Args_size=2
   0:	new	#58; //class scala/runtime/ObjectRef
   3:	dup
   4:	getstatic	#63; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   7:	invokevirtual	#67; //Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
   10:	getstatic	#63; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   13:	iconst_0
   14:	anewarray	#69; //class scala/Tuple2
   17:	checkcast	#71; //class "[Ljava/lang/Object;"
   20:	invokevirtual	#75; //Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
   23:	invokevirtual	#81; //Method scala/collection/immutable/Map$.apply:(Lscala/collection/Seq;)Lscala/collection/Map;
   26:	checkcast	#83; //class scala/collection/immutable/Map
   29:	invokespecial	#85; //Method scala/runtime/ObjectRef."<init>":(Ljava/lang/Object;)V
   32:	astore_2
   33:	aload_1
   34:	new	#87; //class scala/util/parsing/json/JSON$$anonfun$resolveType$1
   37:	dup
   38:	aload_2
   39:	invokespecial	#90; //Method scala/util/parsing/json/JSON$$anonfun$resolveType$1."<init>":(Lscala/runtime/ObjectRef;)V
   42:	invokeinterface	#96,  2; //InterfaceMethod scala/collection/LinearSeqLike.forall:(Lscala/Function1;)Z
   47:	ifeq	60
   50:	aload_2
   51:	getfield	#100; //Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
   54:	checkcast	#83; //class scala/collection/immutable/Map
   57:	goto	85
   60:	aload_1
   61:	new	#102; //class scala/util/parsing/json/JSON$$anonfun$resolveType$2
   64:	dup
   65:	invokespecial	#103; //Method scala/util/parsing/json/JSON$$anonfun$resolveType$2."<init>":()V
   68:	getstatic	#108; //Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
   71:	astore_3
   72:	new	#110; //class scala/collection/generic/TraversableFactory$GenericCanBuildFrom
   75:	dup
   76:	aload_3
   77:	invokespecial	#113; //Method scala/collection/generic/TraversableFactory$GenericCanBuildFrom."<init>":(Lscala/collection/generic/TraversableFactory;)V
   80:	invokeinterface	#119,  3; //InterfaceMethod scala/collection/TraversableLike.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
   85:	areturn
  LineNumberTable: 
   line 71: 0
   line 73: 33
   line 81: 50
   line 83: 60
   line 70: 85

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      86      0    this       Lscala/util/parsing/json/JSON$;
   0      86      1    input       Lscala/collection/immutable/List;
   33      53      2    objMap$1       Lscala/runtime/ObjectRef;

  Signature: length = 0x2
   00 7C 

public scala.Option parseFull(java.lang.String);
  Code:
   Stack=4, Locals=5, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokevirtual	#129; //Method parse:(Ljava/lang/String;)Lscala/Option;
   5:	astore	4
   7:	aload	4
   9:	instanceof	#131; //class scala/Some
   12:	ifeq	61
   15:	aload	4
   17:	checkcast	#131; //class scala/Some
   20:	astore_2
   21:	aload_2
   22:	getfield	#134; //Field scala/Some.x:Ljava/lang/Object;
   25:	checkcast	#136; //class scala/collection/immutable/List
   28:	astore_3
   29:	iconst_1
   30:	ifeq	48
   33:	new	#131; //class scala/Some
   36:	dup
   37:	aload_0
   38:	aload_3
   39:	invokevirtual	#138; //Method resolveType:(Lscala/collection/immutable/List;)Ljava/lang/Object;
   42:	invokespecial	#139; //Method scala/Some."<init>":(Ljava/lang/Object;)V
   45:	goto	92
   48:	new	#141; //class scala/MatchError
   51:	dup
   52:	aload	4
   54:	invokevirtual	#147; //Method scala/Option.toString:()Ljava/lang/String;
   57:	invokespecial	#150; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   60:	athrow
   61:	getstatic	#155; //Field scala/None$.MODULE$:Lscala/None$;
   64:	dup
   65:	ifnonnull	77
   68:	pop
   69:	aload	4
   71:	ifnull	85
   74:	goto	106
   77:	aload	4
   79:	invokevirtual	#161; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   82:	ifeq	106
   85:	iconst_1
   86:	ifeq	93
   89:	getstatic	#155; //Field scala/None$.MODULE$:Lscala/None$;
   92:	areturn
   93:	new	#141; //class scala/MatchError
   96:	dup
   97:	aload	4
   99:	invokevirtual	#147; //Method scala/Option.toString:()Ljava/lang/String;
   102:	invokespecial	#150; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   105:	athrow
   106:	new	#141; //class scala/MatchError
   109:	dup
   110:	aload	4
   112:	invokevirtual	#147; //Method scala/Option.toString:()Ljava/lang/String;
   115:	invokespecial	#150; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   118:	athrow
  LineNumberTable: 
   line 61: 0
   line 60: 15
   line 21: 29
   line 62: 33
   line 61: 48
   line 21: 85
   line 63: 89
   line 61: 92

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      119      0    this       Lscala/util/parsing/json/JSON$;
   0      119      1    input       Ljava/lang/String;
   21      40      2    temp6       Lscala/Some;
   29      32      3    temp7       Lscala/collection/immutable/List;
   7      112      4    temp5       Lscala/Option;

  Signature: length = 0x2
   00 FFFFFFA8 

public scala.Option parse(java.lang.String);
  Code:
   Stack=5, Locals=5, Args_size=2
   0:	aload_0
   1:	aload_0
   2:	invokevirtual	#172; //Method root:()Lscala/util/parsing/combinator/Parsers$Parser;
   5:	invokeinterface	#178,  2; //InterfaceMethod scala/util/parsing/combinator/Parsers.phrase:(Lscala/util/parsing/combinator/Parsers$Parser;)Lscala/util/parsing/combinator/Parsers$Parser;
   10:	new	#180; //class scala/util/parsing/combinator/lexical/Scanners$Scanner
   13:	dup
   14:	aload_0
   15:	invokevirtual	#184; //Method lexical:()Lscala/util/parsing/json/Lexer;
   18:	aload_1
   19:	invokespecial	#187; //Method scala/util/parsing/combinator/lexical/Scanners$Scanner."<init>":(Lscala/util/parsing/combinator/lexical/Scanners;Ljava/lang/String;)V
   22:	invokevirtual	#192; //Method scala/util/parsing/combinator/Parsers$Parser.apply:(Lscala/util/parsing/input/Reader;)Lscala/util/parsing/combinator/Parsers$ParseResult;
   25:	astore	4
   27:	aload	4
   29:	instanceof	#194; //class scala/util/parsing/combinator/Parsers$Success
   32:	ifeq	77
   35:	aload	4
   37:	checkcast	#194; //class scala/util/parsing/combinator/Parsers$Success
   40:	astore_2
   41:	aload_2
   42:	invokevirtual	#197; //Method scala/util/parsing/combinator/Parsers$Success.result:()Ljava/lang/Object;
   45:	checkcast	#136; //class scala/collection/immutable/List
   48:	astore_3
   49:	iconst_1
   50:	ifeq	64
   53:	new	#131; //class scala/Some
   56:	dup
   57:	aload_3
   58:	invokespecial	#139; //Method scala/Some."<init>":(Ljava/lang/Object;)V
   61:	goto	84
   64:	new	#141; //class scala/MatchError
   67:	dup
   68:	aload	4
   70:	invokevirtual	#200; //Method scala/util/parsing/combinator/Parsers$ParseResult.toString:()Ljava/lang/String;
   73:	invokespecial	#150; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   76:	athrow
   77:	iconst_1
   78:	ifeq	85
   81:	getstatic	#155; //Field scala/None$.MODULE$:Lscala/None$;
   84:	areturn
   85:	new	#141; //class scala/MatchError
   88:	dup
   89:	aload	4
   91:	invokevirtual	#200; //Method scala/util/parsing/combinator/Parsers$ParseResult.toString:()Ljava/lang/String;
   94:	invokespecial	#150; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   97:	athrow
  LineNumberTable: 
   line 47: 0
   line 46: 35
   line 21: 49
   line 48: 53
   line 47: 64
   line 21: 77
   line 49: 81
   line 47: 84

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      98      0    this       Lscala/util/parsing/json/JSON$;
   0      98      1    input       Ljava/lang/String;
   41      36      2    temp2       Lscala/util/parsing/combinator/Parsers$Success;
   49      28      3    temp3       Lscala/collection/immutable/List;
   27      71      4    temp1       Lscala/util/parsing/combinator/Parsers$ParseResult;

  Signature: length = 0x2
   00 FFFFFFCE 

}

