Compiled from "Lexer.scala"
public final class scala.util.parsing.json.Lexer$$anonfun$token$1$$anonfun$apply$2 extends java.lang.Object implements scala.Function1,scala.ScalaObject,java.io.Serializable
  SourceFile: "Lexer.scala"
  Scala: length = 0x
   
  InnerClass: 
   public #114= #33 of #113; //$tilde=class scala/util/parsing/combinator/Parsers$$tilde of class scala/util/parsing/combinator/Parsers
   public #117= #55 of #116; //ErrorToken=class scala/util/parsing/syntax/Tokens$ErrorToken of class scala/util/parsing/syntax/Tokens
   public final #120= #57 of #119; //$anonfun$token$1=class scala/util/parsing/json/Lexer$$anonfun$token$1 of class scala/util/parsing/json/Lexer
   public final #121= #15 of #57; //$anonfun$apply$2=class scala/util/parsing/json/Lexer$$anonfun$token$1$$anonfun$apply$2 of class scala/util/parsing/json/Lexer$$anonfun$token$1
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Lexer.scala;
const #3 = Asciz	$outer;
const #4 = Asciz	Lscala/util/parsing/json/Lexer$$anonfun$token$1;;
const #5 = Asciz	<init>;
const #6 = Asciz	(Lscala/util/parsing/json/Lexer$$anonfun$token$1;)V;
const #7 = Asciz	Code;
const #8 = Asciz	LineNumberTable;
const #9 = Asciz	java/lang/NullPointerException;
const #10 = class	#9;	//  java/lang/NullPointerException
const #11 = Asciz	()V;
const #12 = NameAndType	#5:#11;//  "<init>":()V
const #13 = Method	#10.#12;	//  java/lang/NullPointerException."<init>":()V
const #14 = Asciz	scala/util/parsing/json/Lexer$$anonfun$token$1$$anonfun$apply$2;
const #15 = class	#14;	//  scala/util/parsing/json/Lexer$$anonfun$token$1$$anonfun$apply$2
const #16 = NameAndType	#3:#4;//  $outer:Lscala/util/parsing/json/Lexer$$anonfun$token$1;
const #17 = Field	#15.#16;	//  scala/util/parsing/json/Lexer$$anonfun$token$1$$anonfun$apply$2.$outer:Lscala/util/parsing/json/Lexer$$anonfun$token$1;
const #18 = Asciz	java/lang/Object;
const #19 = class	#18;	//  java/lang/Object
const #20 = Method	#19.#12;	//  java/lang/Object."<init>":()V
const #21 = Asciz	scala/Function1$class;
const #22 = class	#21;	//  scala/Function1$class
const #23 = Asciz	$init$;
const #24 = Asciz	(Lscala/Function1;)V;
const #25 = NameAndType	#23:#24;//  $init$:(Lscala/Function1;)V
const #26 = Method	#22.#25;	//  scala/Function1$class.$init$:(Lscala/Function1;)V
const #27 = Asciz	this;
const #28 = Asciz	Lscala/util/parsing/json/Lexer$$anonfun$token$1$$anonfun$apply$2;;
const #29 = Asciz	LocalVariableTable;
const #30 = Asciz	apply;
const #31 = Asciz	(Ljava/lang/Object;)Ljava/lang/Object;;
const #32 = Asciz	scala/util/parsing/combinator/Parsers$$tilde;
const #33 = class	#32;	//  scala/util/parsing/combinator/Parsers$$tilde
const #34 = Asciz	(Lscala/util/parsing/combinator/Parsers$$tilde;)Lscala/util/parsing/syntax/Tokens$ErrorToken;;
const #35 = NameAndType	#30:#34;//  apply:(Lscala/util/parsing/combinator/Parsers$$tilde;)Lscala/util/parsing/syntax/Tokens$ErrorToken;
const #36 = Method	#15.#35;	//  scala/util/parsing/json/Lexer$$anonfun$token$1$$anonfun$apply$2.apply:(Lscala/util/parsing/combinator/Parsers$$tilde;)Lscala/util/parsing/syntax/Tokens$ErrorToken;
const #37 = Asciz	v1;
const #38 = Asciz	Ljava/lang/Object;;
const #39 = Asciz	_1;
const #40 = Asciz	()Ljava/lang/Object;;
const #41 = NameAndType	#39:#40;//  _1:()Ljava/lang/Object;
const #42 = Method	#33.#41;	//  scala/util/parsing/combinator/Parsers$$tilde._1:()Ljava/lang/Object;
const #43 = Asciz	java/lang/String;
const #44 = class	#43;	//  java/lang/String
const #45 = Asciz	_2;
const #46 = NameAndType	#45:#40;//  _2:()Ljava/lang/Object;
const #47 = Method	#33.#46;	//  scala/util/parsing/combinator/Parsers$$tilde._2:()Ljava/lang/Object;
const #48 = Asciz	scala/runtime/BoxesRunTime;
const #49 = class	#48;	//  scala/runtime/BoxesRunTime
const #50 = Asciz	unboxToChar;
const #51 = Asciz	(Ljava/lang/Object;)C;
const #52 = NameAndType	#50:#51;//  unboxToChar:(Ljava/lang/Object;)C
const #53 = Method	#49.#52;	//  scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
const #54 = Asciz	scala/util/parsing/syntax/Tokens$ErrorToken;
const #55 = class	#54;	//  scala/util/parsing/syntax/Tokens$ErrorToken
const #56 = Asciz	scala/util/parsing/json/Lexer$$anonfun$token$1;
const #57 = class	#56;	//  scala/util/parsing/json/Lexer$$anonfun$token$1
const #58 = Asciz	scala$util$parsing$json$Lexer$$anonfun$$$outer;
const #59 = Asciz	()Lscala/util/parsing/json/Lexer;;
const #60 = NameAndType	#58:#59;//  scala$util$parsing$json$Lexer$$anonfun$$$outer:()Lscala/util/parsing/json/Lexer;
const #61 = Method	#57.#60;	//  scala/util/parsing/json/Lexer$$anonfun$token$1.scala$util$parsing$json$Lexer$$anonfun$$$outer:()Lscala/util/parsing/json/Lexer;
const #62 = Asciz	scala/collection/mutable/StringBuilder;
const #63 = class	#62;	//  scala/collection/mutable/StringBuilder
const #64 = Method	#63.#12;	//  scala/collection/mutable/StringBuilder."<init>":()V
const #65 = Asciz	Invalid number format : ;
const #66 = String	#65;	//  Invalid number format : 
const #67 = Asciz	append;
const #68 = Asciz	(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;;
const #69 = NameAndType	#67:#68;//  append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
const #70 = Method	#63.#69;	//  scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
const #71 = Asciz	boxToCharacter;
const #72 = Asciz	(C)Ljava/lang/Character;;
const #73 = NameAndType	#71:#72;//  boxToCharacter:(C)Ljava/lang/Character;
const #74 = Method	#49.#73;	//  scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
const #75 = Asciz	toString;
const #76 = Asciz	()Ljava/lang/String;;
const #77 = NameAndType	#75:#76;//  toString:()Ljava/lang/String;
const #78 = Method	#63.#77;	//  scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
const #79 = Asciz	(Lscala/util/parsing/syntax/Tokens;Ljava/lang/String;)V;
const #80 = NameAndType	#5:#79;//  "<init>":(Lscala/util/parsing/syntax/Tokens;Ljava/lang/String;)V
const #81 = Method	#55.#80;	//  scala/util/parsing/syntax/Tokens$ErrorToken."<init>":(Lscala/util/parsing/syntax/Tokens;Ljava/lang/String;)V
const #82 = Asciz	scala/MatchError;
const #83 = class	#82;	//  scala/MatchError
const #84 = Method	#33.#77;	//  scala/util/parsing/combinator/Parsers$$tilde.toString:()Ljava/lang/String;
const #85 = Asciz	(Ljava/lang/String;)V;
const #86 = NameAndType	#5:#85;//  "<init>":(Ljava/lang/String;)V
const #87 = Method	#83.#86;	//  scala/MatchError."<init>":(Ljava/lang/String;)V
const #88 = Asciz	temp1;
const #89 = Asciz	Lscala/util/parsing/combinator/Parsers$$tilde;;
const #90 = Asciz	temp2;
const #91 = Asciz	Ljava/lang/String;;
const #92 = Asciz	temp3;
const #93 = Asciz	C;
const #94 = Asciz	l;
const #95 = Asciz	(Lscala/util/parsing/combinator/Parsers$$tilde<Ljava/lang/String;Ljava/lang/Character;>;)Lscala/util/parsing/syntax/Tokens$ErrorToken;;
const #96 = Asciz	Signature;
const #97 = Asciz	andThen;
const #98 = Asciz	(Lscala/Function1;)Lscala/Function1;;
const #99 = Asciz	(Lscala/Function1;Lscala/Function1;)Lscala/Function1;;
const #100 = NameAndType	#97:#99;//  andThen:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
const #101 = Method	#22.#100;	//  scala/Function1$class.andThen:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
const #102 = Asciz	g;
const #103 = Asciz	Lscala/Function1;;
const #104 = Asciz	compose;
const #105 = NameAndType	#104:#99;//  compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
const #106 = Method	#22.#105;	//  scala/Function1$class.compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
const #107 = Asciz	(Lscala/Function1;)Ljava/lang/String;;
const #108 = NameAndType	#75:#107;//  toString:(Lscala/Function1;)Ljava/lang/String;
const #109 = Method	#22.#108;	//  scala/Function1$class.toString:(Lscala/Function1;)Ljava/lang/String;
const #110 = Asciz	Scala;
const #111 = Asciz	InnerClasses;
const #112 = Asciz	scala/util/parsing/combinator/Parsers;
const #113 = class	#112;	//  scala/util/parsing/combinator/Parsers
const #114 = Asciz	$tilde;
const #115 = Asciz	scala/util/parsing/syntax/Tokens;
const #116 = class	#115;	//  scala/util/parsing/syntax/Tokens
const #117 = Asciz	ErrorToken;
const #118 = Asciz	scala/util/parsing/json/Lexer;
const #119 = class	#118;	//  scala/util/parsing/json/Lexer
const #120 = Asciz	$anonfun$token$1;
const #121 = Asciz	$anonfun$apply$2;
const #122 = Asciz	scala/Function1;
const #123 = class	#122;	//  scala/Function1
const #124 = Asciz	scala/ScalaObject;
const #125 = class	#124;	//  scala/ScalaObject
const #126 = Asciz	java/io/Serializable;
const #127 = class	#126;	//  java/io/Serializable

{
public scala.util.parsing.json.Lexer$$anonfun$token$1$$anonfun$apply$2(scala.util.parsing.json.Lexer$$anonfun$token$1);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_1
   1:	ifnonnull	12
   4:	new	#10; //class java/lang/NullPointerException
   7:	dup
   8:	invokespecial	#13; //Method java/lang/NullPointerException."<init>":()V
   11:	athrow
   12:	aload_0
   13:	aload_1
   14:	putfield	#17; //Field $outer:Lscala/util/parsing/json/Lexer$$anonfun$token$1;
   17:	aload_0
   18:	invokespecial	#20; //Method java/lang/Object."<init>":()V
   21:	aload_0
   22:	invokestatic	#26; //Method scala/Function1$class.$init$:(Lscala/Function1;)V
   25:	return
  LineNumberTable: 
   line 27: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      26      0    this       Lscala/util/parsing/json/Lexer$$anonfun$token$1$$anonfun$apply$2;
   0      26      1    $outer       Lscala/util/parsing/json/Lexer$$anonfun$token$1;


public final java.lang.Object apply(java.lang.Object);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	aload_0
   1:	getfield	#17; //Field $outer:Lscala/util/parsing/json/Lexer$$anonfun$token$1;
   4:	astore_2
   5:	aload_0
   6:	aload_1
   7:	checkcast	#33; //class scala/util/parsing/combinator/Parsers$$tilde
   10:	invokevirtual	#36; //Method apply:(Lscala/util/parsing/combinator/Parsers$$tilde;)Lscala/util/parsing/syntax/Tokens$ErrorToken;
   13:	areturn
  LineNumberTable: 
   line 27: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      14      0    this       Lscala/util/parsing/json/Lexer$$anonfun$token$1$$anonfun$apply$2;
   5      9      1    v1       Ljava/lang/Object;


public final scala.util.parsing.syntax.Tokens$ErrorToken apply(scala.util.parsing.combinator.Parsers$$tilde);
  Code:
   Stack=5, Locals=7, Args_size=2
   0:	aload_0
   1:	getfield	#17; //Field $outer:Lscala/util/parsing/json/Lexer$$anonfun$token$1;
   4:	astore	6
   6:	aload_1
   7:	astore_2
   8:	aload_2
   9:	ifnull	75
   12:	aload_2
   13:	invokevirtual	#42; //Method scala/util/parsing/combinator/Parsers$$tilde._1:()Ljava/lang/Object;
   16:	checkcast	#44; //class java/lang/String
   19:	astore_3
   20:	aload_2
   21:	invokevirtual	#47; //Method scala/util/parsing/combinator/Parsers$$tilde._2:()Ljava/lang/Object;
   24:	invokestatic	#53; //Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
   27:	istore	4
   29:	iload	4
   31:	istore	5
   33:	new	#55; //class scala/util/parsing/syntax/Tokens$ErrorToken
   36:	dup
   37:	aload_0
   38:	getfield	#17; //Field $outer:Lscala/util/parsing/json/Lexer$$anonfun$token$1;
   41:	invokevirtual	#61; //Method scala/util/parsing/json/Lexer$$anonfun$token$1.scala$util$parsing$json$Lexer$$anonfun$$$outer:()Lscala/util/parsing/json/Lexer;
   44:	new	#63; //class scala/collection/mutable/StringBuilder
   47:	dup
   48:	invokespecial	#64; //Method scala/collection/mutable/StringBuilder."<init>":()V
   51:	ldc	#66; //String Invalid number format : 
   53:	invokevirtual	#70; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   56:	aload_3
   57:	invokevirtual	#70; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   60:	iload	5
   62:	invokestatic	#74; //Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
   65:	invokevirtual	#70; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   68:	invokevirtual	#78; //Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
   71:	invokespecial	#81; //Method scala/util/parsing/syntax/Tokens$ErrorToken."<init>":(Lscala/util/parsing/syntax/Tokens;Ljava/lang/String;)V
   74:	areturn
   75:	new	#83; //class scala/MatchError
   78:	dup
   79:	aload_2
   80:	invokevirtual	#84; //Method scala/util/parsing/combinator/Parsers$$tilde.toString:()Ljava/lang/String;
   83:	invokespecial	#87; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   86:	athrow
  LineNumberTable: 
   line 27: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      87      0    this       Lscala/util/parsing/json/Lexer$$anonfun$token$1$$anonfun$apply$2;
   8      79      2    temp1       Lscala/util/parsing/combinator/Parsers$$tilde;
   20      54      3    temp2       Ljava/lang/String;
   29      45      4    temp3       C
   33      41      5    l       C

  Signature: length = 0x2
   00 5F 

public scala.Function1 andThen(scala.Function1);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#101; //Method scala/Function1$class.andThen:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
   5:	areturn
  LineNumberTable: 
   line 27: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/util/parsing/json/Lexer$$anonfun$token$1$$anonfun$apply$2;
   0      6      1    g       Lscala/Function1;


public scala.Function1 compose(scala.Function1);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#106; //Method scala/Function1$class.compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
   5:	areturn
  LineNumberTable: 
   line 27: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/util/parsing/json/Lexer$$anonfun$token$1$$anonfun$apply$2;
   0      6      1    g       Lscala/Function1;


public java.lang.String toString();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#109; //Method scala/Function1$class.toString:(Lscala/Function1;)Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 27: 0


}

