Compiled from "Lexer.scala"
public final class scala.util.parsing.json.Lexer$$anonfun$scala$util$parsing$json$Lexer$$unicodeBlock$4 extends scala.runtime.AbstractFunction1 implements java.io.Serializable
  SourceFile: "Lexer.scala"
  Scala: length = 0x
   
  InnerClass: 
   public #139= #27 of #138; //$tilde=class scala/util/parsing/combinator/Parsers$$tilde of class scala/util/parsing/combinator/Parsers
   public final #142= #99 of #141; //$anonfun$apply$6=class scala/Array$$anonfun$apply$6 of class scala/Array
   public final #145= #9 of #144; //$anonfun$scala$util$parsing$json$Lexer$$unicodeBlock$4=class scala/util/parsing/json/Lexer$$anonfun$scala$util$parsing$json$Lexer$$unicodeBlock$4 of class scala/util/parsing/json/Lexer
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Lexer.scala;
const #3 = Asciz	<clinit>;
const #4 = Asciz	()V;
const #5 = Asciz	Code;
const #6 = Asciz	serialVersionUID;
const #7 = Asciz	J;
const #8 = Asciz	scala/util/parsing/json/Lexer$$anonfun$scala$util$parsing$json$Lexer$$unicodeBlock$4;
const #9 = class	#8;	//  scala/util/parsing/json/Lexer$$anonfun$scala$util$parsing$json$Lexer$$unicodeBlock$4
const #10 = NameAndType	#6:#7;//  serialVersionUID:J
const #11 = Field	#9.#10;	//  scala/util/parsing/json/Lexer$$anonfun$scala$util$parsing$json$Lexer$$unicodeBlock$4.serialVersionUID:J
const #12 = Asciz	<init>;
const #13 = Asciz	(Lscala/util/parsing/json/Lexer;)V;
const #14 = Asciz	LineNumberTable;
const #15 = Asciz	scala/runtime/AbstractFunction1;
const #16 = class	#15;	//  scala/runtime/AbstractFunction1
const #17 = NameAndType	#12:#4;//  "<init>":()V
const #18 = Method	#16.#17;	//  scala/runtime/AbstractFunction1."<init>":()V
const #19 = Asciz	this;
const #20 = Asciz	Lscala/util/parsing/json/Lexer$$anonfun$scala$util$parsing$json$Lexer$$unicodeBlock$4;;
const #21 = Asciz	$outer;
const #22 = Asciz	Lscala/util/parsing/json/Lexer;;
const #23 = Asciz	LocalVariableTable;
const #24 = Asciz	apply;
const #25 = Asciz	(Ljava/lang/Object;)Ljava/lang/Object;;
const #26 = Asciz	scala/util/parsing/combinator/Parsers$$tilde;
const #27 = class	#26;	//  scala/util/parsing/combinator/Parsers$$tilde
const #28 = Asciz	(Lscala/util/parsing/combinator/Parsers$$tilde;)Ljava/lang/String;;
const #29 = NameAndType	#24:#28;//  apply:(Lscala/util/parsing/combinator/Parsers$$tilde;)Ljava/lang/String;
const #30 = Method	#9.#29;	//  scala/util/parsing/json/Lexer$$anonfun$scala$util$parsing$json$Lexer$$unicodeBlock$4.apply:(Lscala/util/parsing/combinator/Parsers$$tilde;)Ljava/lang/String;
const #31 = Asciz	v1;
const #32 = Asciz	Ljava/lang/Object;;
const #33 = Asciz	_1;
const #34 = Asciz	()Ljava/lang/Object;;
const #35 = NameAndType	#33:#34;//  _1:()Ljava/lang/Object;
const #36 = Method	#27.#35;	//  scala/util/parsing/combinator/Parsers$$tilde._1:()Ljava/lang/Object;
const #37 = Asciz	_2;
const #38 = NameAndType	#37:#34;//  _2:()Ljava/lang/Object;
const #39 = Method	#27.#38;	//  scala/util/parsing/combinator/Parsers$$tilde._2:()Ljava/lang/Object;
const #40 = Asciz	scala/runtime/BoxesRunTime;
const #41 = class	#40;	//  scala/runtime/BoxesRunTime
const #42 = Asciz	unboxToChar;
const #43 = Asciz	(Ljava/lang/Object;)C;
const #44 = NameAndType	#42:#43;//  unboxToChar:(Ljava/lang/Object;)C
const #45 = Method	#41.#44;	//  scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
const #46 = Asciz	java/lang/String;
const #47 = class	#46;	//  java/lang/String
const #48 = Asciz	scala/Predef$;
const #49 = class	#48;	//  scala/Predef$
const #50 = Asciz	MODULE$;
const #51 = Asciz	Lscala/Predef$;;
const #52 = NameAndType	#50:#51;//  MODULE$:Lscala/Predef$;
const #53 = Field	#49.#52;	//  scala/Predef$.MODULE$:Lscala/Predef$;
const #54 = Asciz	wrapCharArray;
const #55 = Asciz	([C)Lscala/collection/mutable/WrappedArray;;
const #56 = NameAndType	#54:#55;//  wrapCharArray:([C)Lscala/collection/mutable/WrappedArray;
const #57 = Method	#49.#56;	//  scala/Predef$.wrapCharArray:([C)Lscala/collection/mutable/WrappedArray;
const #58 = Asciz	scala/collection/TraversableLike;
const #59 = class	#58;	//  scala/collection/TraversableLike
const #60 = Asciz	toList;
const #61 = Asciz	()Lscala/collection/immutable/List;;
const #62 = NameAndType	#60:#61;//  toList:()Lscala/collection/immutable/List;
const #63 = InterfaceMethod	#59.#62;	//  scala/collection/TraversableLike.toList:()Lscala/collection/immutable/List;
const #64 = Asciz	;
const #65 = String	#64;	//  
const #66 = Asciz	mkString;
const #67 = Asciz	(Ljava/lang/String;)Ljava/lang/String;;
const #68 = NameAndType	#66:#67;//  mkString:(Ljava/lang/String;)Ljava/lang/String;
const #69 = InterfaceMethod	#59.#68;	//  scala/collection/TraversableLike.mkString:(Ljava/lang/String;)Ljava/lang/String;
const #70 = int	16;
const #71 = Asciz	java/lang/Integer;
const #72 = class	#71;	//  java/lang/Integer
const #73 = Asciz	parseInt;
const #74 = Asciz	(Ljava/lang/String;I)I;
const #75 = NameAndType	#73:#74;//  parseInt:(Ljava/lang/String;I)I
const #76 = Method	#72.#75;	//  java/lang/Integer.parseInt:(Ljava/lang/String;I)I
const #77 = Asciz	wrapIntArray;
const #78 = Asciz	([I)Lscala/collection/mutable/WrappedArray;;
const #79 = NameAndType	#77:#78;//  wrapIntArray:([I)Lscala/collection/mutable/WrappedArray;
const #80 = Method	#49.#79;	//  scala/Predef$.wrapIntArray:([I)Lscala/collection/mutable/WrappedArray;
const #81 = Asciz	scala/collection/SeqLike;
const #82 = class	#81;	//  scala/collection/SeqLike
const #83 = Asciz	length;
const #84 = Asciz	()I;
const #85 = NameAndType	#83:#84;//  length:()I
const #86 = InterfaceMethod	#82.#85;	//  scala/collection/SeqLike.length:()I
const #87 = Asciz	scala/runtime/IntRef;
const #88 = class	#87;	//  scala/runtime/IntRef
const #89 = Asciz	(I)V;
const #90 = NameAndType	#12:#89;//  "<init>":(I)V
const #91 = Method	#88.#90;	//  scala/runtime/IntRef."<init>":(I)V
const #92 = Asciz	scala/collection/IterableLike;
const #93 = class	#92;	//  scala/collection/IterableLike
const #94 = Asciz	iterator;
const #95 = Asciz	()Lscala/collection/Iterator;;
const #96 = NameAndType	#94:#95;//  iterator:()Lscala/collection/Iterator;
const #97 = InterfaceMethod	#93.#96;	//  scala/collection/IterableLike.iterator:()Lscala/collection/Iterator;
const #98 = Asciz	scala/Array$$anonfun$apply$6;
const #99 = class	#98;	//  scala/Array$$anonfun$apply$6
const #100 = Asciz	([ILscala/runtime/IntRef;)V;
const #101 = NameAndType	#12:#100;//  "<init>":([ILscala/runtime/IntRef;)V
const #102 = Method	#99.#101;	//  scala/Array$$anonfun$apply$6."<init>":([ILscala/runtime/IntRef;)V
const #103 = Asciz	scala/collection/Iterator;
const #104 = class	#103;	//  scala/collection/Iterator
const #105 = Asciz	foreach;
const #106 = Asciz	(Lscala/Function1;)V;
const #107 = NameAndType	#105:#106;//  foreach:(Lscala/Function1;)V
const #108 = InterfaceMethod	#104.#107;	//  scala/collection/Iterator.foreach:(Lscala/Function1;)V
const #109 = Asciz	([III)V;
const #110 = NameAndType	#12:#109;//  "<init>":([III)V
const #111 = Method	#47.#110;	//  java/lang/String."<init>":([III)V
const #112 = Asciz	scala/MatchError;
const #113 = class	#112;	//  scala/MatchError
const #114 = Asciz	toString;
const #115 = Asciz	()Ljava/lang/String;;
const #116 = NameAndType	#114:#115;//  toString:()Ljava/lang/String;
const #117 = Method	#27.#116;	//  scala/util/parsing/combinator/Parsers$$tilde.toString:()Ljava/lang/String;
const #118 = Asciz	(Ljava/lang/String;)V;
const #119 = NameAndType	#12:#118;//  "<init>":(Ljava/lang/String;)V
const #120 = Method	#113.#119;	//  scala/MatchError."<init>":(Ljava/lang/String;)V
const #121 = Asciz	temp30;
const #122 = Asciz	Lscala/util/parsing/combinator/Parsers$$tilde;;
const #123 = Asciz	temp32;
const #124 = Asciz	temp34;
const #125 = Asciz	C;
const #126 = Asciz	temp35;
const #127 = Asciz	temp33;
const #128 = Asciz	temp31;
const #129 = Asciz	i$60;
const #130 = Asciz	Lscala/runtime/IntRef;;
const #131 = Asciz	array$60;
const #132 = Asciz	[I;
const #133 = Asciz	(Lscala/util/parsing/combinator/Parsers$$tilde<Lscala/util/parsing/combinator/Parsers$$tilde<Lscala/util/parsing/combinator/Parsers$$tilde<Ljava/lang/Character;Ljava/lang/Character;>;Ljava/lang/Character;>;Ljava/lang/Character;>;)Ljava/lang/String;;
const #134 = Asciz	Signature;
const #135 = Asciz	Scala;
const #136 = Asciz	InnerClasses;
const #137 = Asciz	scala/util/parsing/combinator/Parsers;
const #138 = class	#137;	//  scala/util/parsing/combinator/Parsers
const #139 = Asciz	$tilde;
const #140 = Asciz	scala/Array;
const #141 = class	#140;	//  scala/Array
const #142 = Asciz	$anonfun$apply$6;
const #143 = Asciz	scala/util/parsing/json/Lexer;
const #144 = class	#143;	//  scala/util/parsing/json/Lexer
const #145 = Asciz	$anonfun$scala$util$parsing$json$Lexer$$unicodeBlock$4;
const #146 = Asciz	java/io/Serializable;
const #147 = class	#146;	//  java/io/Serializable

{
public static final long serialVersionUID;

public static {};
  Code:
   Stack=2, Locals=0, Args_size=0
   0:	lconst_0
   1:	putstatic	#11; //Field serialVersionUID:J
   4:	return

public scala.util.parsing.json.Lexer$$anonfun$scala$util$parsing$json$Lexer$$unicodeBlock$4(scala.util.parsing.json.Lexer);
  Code:
   Stack=1, Locals=2, Args_size=2
   0:	aload_0
   1:	invokespecial	#18; //Method scala/runtime/AbstractFunction1."<init>":()V
   4:	return
  LineNumberTable: 
   line 84: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    this       Lscala/util/parsing/json/Lexer$$anonfun$scala$util$parsing$json$Lexer$$unicodeBlock$4;
   0      5      1    $outer       Lscala/util/parsing/json/Lexer;


public final java.lang.Object apply(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	checkcast	#27; //class scala/util/parsing/combinator/Parsers$$tilde
   5:	invokevirtual	#30; //Method apply:(Lscala/util/parsing/combinator/Parsers$$tilde;)Ljava/lang/String;
   8:	areturn
  LineNumberTable: 
   line 84: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/util/parsing/json/Lexer$$anonfun$scala$util$parsing$json$Lexer$$unicodeBlock$4;
   0      9      1    v1       Ljava/lang/Object;


public final java.lang.String apply(scala.util.parsing.combinator.Parsers$$tilde);
  Code:
   Stack=7, Locals=13, Args_size=2
   0:	aload_1
   1:	ifnull	231
   4:	aload_1
   5:	invokevirtual	#36; //Method scala/util/parsing/combinator/Parsers$$tilde._1:()Ljava/lang/Object;
   8:	checkcast	#27; //class scala/util/parsing/combinator/Parsers$$tilde
   11:	astore_2
   12:	aload_1
   13:	invokevirtual	#39; //Method scala/util/parsing/combinator/Parsers$$tilde._2:()Ljava/lang/Object;
   16:	invokestatic	#45; //Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
   19:	istore	7
   21:	aload_2
   22:	ifnull	219
   25:	aload_2
   26:	invokevirtual	#36; //Method scala/util/parsing/combinator/Parsers$$tilde._1:()Ljava/lang/Object;
   29:	checkcast	#27; //class scala/util/parsing/combinator/Parsers$$tilde
   32:	astore_3
   33:	aload_2
   34:	invokevirtual	#39; //Method scala/util/parsing/combinator/Parsers$$tilde._2:()Ljava/lang/Object;
   37:	invokestatic	#45; //Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
   40:	istore	6
   42:	aload_3
   43:	ifnull	207
   46:	aload_3
   47:	invokevirtual	#36; //Method scala/util/parsing/combinator/Parsers$$tilde._1:()Ljava/lang/Object;
   50:	invokestatic	#45; //Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
   53:	istore	4
   55:	aload_3
   56:	invokevirtual	#39; //Method scala/util/parsing/combinator/Parsers$$tilde._2:()Ljava/lang/Object;
   59:	invokestatic	#45; //Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
   62:	istore	5
   64:	iconst_1
   65:	ifeq	195
   68:	new	#47; //class java/lang/String
   71:	dup
   72:	getstatic	#53; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   75:	iconst_4
   76:	newarray char
   78:	dup
   79:	iconst_0
   80:	iload	4
   82:	castore
   83:	dup
   84:	iconst_1
   85:	iload	5
   87:	castore
   88:	dup
   89:	iconst_2
   90:	iload	6
   92:	castore
   93:	dup
   94:	iconst_3
   95:	iload	7
   97:	castore
   98:	invokevirtual	#57; //Method scala/Predef$.wrapCharArray:([C)Lscala/collection/mutable/WrappedArray;
   101:	astore	8
   103:	aload	8
   105:	invokeinterface	#63,  1; //InterfaceMethod scala/collection/TraversableLike.toList:()Lscala/collection/immutable/List;
   110:	ldc	#65; //String 
   112:	invokeinterface	#69,  2; //InterfaceMethod scala/collection/TraversableLike.mkString:(Ljava/lang/String;)Ljava/lang/String;
   117:	ldc	#70; //int 16
   119:	invokestatic	#76; //Method java/lang/Integer.parseInt:(Ljava/lang/String;I)I
   122:	getstatic	#53; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   125:	iconst_0
   126:	newarray int
   128:	invokevirtual	#80; //Method scala/Predef$.wrapIntArray:([I)Lscala/collection/mutable/WrappedArray;
   131:	astore	10
   133:	istore	9
   135:	aload	10
   137:	invokeinterface	#86,  1; //InterfaceMethod scala/collection/SeqLike.length:()I
   142:	iconst_1
   143:	iadd
   144:	newarray int
   146:	astore	12
   148:	aload	12
   150:	iconst_0
   151:	iload	9
   153:	iastore
   154:	new	#88; //class scala/runtime/IntRef
   157:	dup
   158:	iconst_1
   159:	invokespecial	#91; //Method scala/runtime/IntRef."<init>":(I)V
   162:	astore	11
   164:	aload	10
   166:	invokeinterface	#97,  1; //InterfaceMethod scala/collection/IterableLike.iterator:()Lscala/collection/Iterator;
   171:	new	#99; //class scala/Array$$anonfun$apply$6
   174:	dup
   175:	aload	12
   177:	aload	11
   179:	invokespecial	#102; //Method scala/Array$$anonfun$apply$6."<init>":([ILscala/runtime/IntRef;)V
   182:	invokeinterface	#108,  2; //InterfaceMethod scala/collection/Iterator.foreach:(Lscala/Function1;)V
   187:	aload	12
   189:	iconst_0
   190:	iconst_1
   191:	invokespecial	#111; //Method java/lang/String."<init>":([III)V
   194:	areturn
   195:	new	#113; //class scala/MatchError
   198:	dup
   199:	aload_1
   200:	invokevirtual	#117; //Method scala/util/parsing/combinator/Parsers$$tilde.toString:()Ljava/lang/String;
   203:	invokespecial	#120; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   206:	athrow
   207:	new	#113; //class scala/MatchError
   210:	dup
   211:	aload_1
   212:	invokevirtual	#117; //Method scala/util/parsing/combinator/Parsers$$tilde.toString:()Ljava/lang/String;
   215:	invokespecial	#120; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   218:	athrow
   219:	new	#113; //class scala/MatchError
   222:	dup
   223:	aload_1
   224:	invokevirtual	#117; //Method scala/util/parsing/combinator/Parsers$$tilde.toString:()Ljava/lang/String;
   227:	invokespecial	#120; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   230:	athrow
   231:	new	#113; //class scala/MatchError
   234:	dup
   235:	aload_1
   236:	invokevirtual	#117; //Method scala/util/parsing/combinator/Parsers$$tilde.toString:()Ljava/lang/String;
   239:	invokespecial	#120; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   242:	athrow
  LineNumberTable: 
   line 84: 0
   line 21: 64
   line 86: 68
   line 84: 194

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      243      0    this       Lscala/util/parsing/json/Lexer$$anonfun$scala$util$parsing$json$Lexer$$unicodeBlock$4;
   12      219      2    temp30       Lscala/util/parsing/combinator/Parsers$$tilde;
   33      186      3    temp32       Lscala/util/parsing/combinator/Parsers$$tilde;
   55      152      4    temp34       C
   64      143      5    temp35       C
   42      177      6    temp33       C
   21      210      7    temp31       C
   164      25      11    i$60       Lscala/runtime/IntRef;
   148      41      12    array$60       [I

  Signature: length = 0x2
   00 FFFFFF85 

}

