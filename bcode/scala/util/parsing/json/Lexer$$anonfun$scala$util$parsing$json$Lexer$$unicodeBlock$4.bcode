Compiled from "Lexer.scala"
public final class scala.util.parsing.json.Lexer$$anonfun$scala$util$parsing$json$Lexer$$unicodeBlock$4 extends java.lang.Object implements scala.Function1,scala.ScalaObject,java.io.Serializable
  SourceFile: "Lexer.scala"
  Scala: length = 0x
   
  InnerClass: 
   public #136= #26 of #135; //$tilde=class scala/util/parsing/combinator/Parsers$$tilde of class scala/util/parsing/combinator/Parsers
   public final #139= #28 of #138; //$anonfun$scala$util$parsing$json$Lexer$$unicodeBlock$4=class scala/util/parsing/json/Lexer$$anonfun$scala$util$parsing$json$Lexer$$unicodeBlock$4 of class scala/util/parsing/json/Lexer
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Lexer.scala;
const #3 = Asciz	<init>;
const #4 = Asciz	(Lscala/util/parsing/json/Lexer;)V;
const #5 = Asciz	Code;
const #6 = Asciz	LineNumberTable;
const #7 = Asciz	java/lang/Object;
const #8 = class	#7;	//  java/lang/Object
const #9 = Asciz	()V;
const #10 = NameAndType	#3:#9;//  "<init>":()V
const #11 = Method	#8.#10;	//  java/lang/Object."<init>":()V
const #12 = Asciz	scala/Function1$class;
const #13 = class	#12;	//  scala/Function1$class
const #14 = Asciz	$init$;
const #15 = Asciz	(Lscala/Function1;)V;
const #16 = NameAndType	#14:#15;//  $init$:(Lscala/Function1;)V
const #17 = Method	#13.#16;	//  scala/Function1$class.$init$:(Lscala/Function1;)V
const #18 = Asciz	this;
const #19 = Asciz	Lscala/util/parsing/json/Lexer$$anonfun$scala$util$parsing$json$Lexer$$unicodeBlock$4;;
const #20 = Asciz	$outer;
const #21 = Asciz	Lscala/util/parsing/json/Lexer;;
const #22 = Asciz	LocalVariableTable;
const #23 = Asciz	apply;
const #24 = Asciz	(Ljava/lang/Object;)Ljava/lang/Object;;
const #25 = Asciz	scala/util/parsing/combinator/Parsers$$tilde;
const #26 = class	#25;	//  scala/util/parsing/combinator/Parsers$$tilde
const #27 = Asciz	scala/util/parsing/json/Lexer$$anonfun$scala$util$parsing$json$Lexer$$unicodeBlock$4;
const #28 = class	#27;	//  scala/util/parsing/json/Lexer$$anonfun$scala$util$parsing$json$Lexer$$unicodeBlock$4
const #29 = Asciz	(Lscala/util/parsing/combinator/Parsers$$tilde;)Ljava/lang/String;;
const #30 = NameAndType	#23:#29;//  apply:(Lscala/util/parsing/combinator/Parsers$$tilde;)Ljava/lang/String;
const #31 = Method	#28.#30;	//  scala/util/parsing/json/Lexer$$anonfun$scala$util$parsing$json$Lexer$$unicodeBlock$4.apply:(Lscala/util/parsing/combinator/Parsers$$tilde;)Ljava/lang/String;
const #32 = Asciz	v1;
const #33 = Asciz	Ljava/lang/Object;;
const #34 = Asciz	_1;
const #35 = Asciz	()Ljava/lang/Object;;
const #36 = NameAndType	#34:#35;//  _1:()Ljava/lang/Object;
const #37 = Method	#26.#36;	//  scala/util/parsing/combinator/Parsers$$tilde._1:()Ljava/lang/Object;
const #38 = Asciz	_2;
const #39 = NameAndType	#38:#35;//  _2:()Ljava/lang/Object;
const #40 = Method	#26.#39;	//  scala/util/parsing/combinator/Parsers$$tilde._2:()Ljava/lang/Object;
const #41 = Asciz	scala/runtime/BoxesRunTime;
const #42 = class	#41;	//  scala/runtime/BoxesRunTime
const #43 = Asciz	unboxToChar;
const #44 = Asciz	(Ljava/lang/Object;)C;
const #45 = NameAndType	#43:#44;//  unboxToChar:(Ljava/lang/Object;)C
const #46 = Method	#42.#45;	//  scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
const #47 = Asciz	java/lang/String;
const #48 = class	#47;	//  java/lang/String
const #49 = Asciz	scala/io/UTF8Codec$;
const #50 = class	#49;	//  scala/io/UTF8Codec$
const #51 = Asciz	MODULE$;
const #52 = Asciz	Lscala/io/UTF8Codec$;;
const #53 = NameAndType	#51:#52;//  MODULE$:Lscala/io/UTF8Codec$;
const #54 = Field	#50.#53;	//  scala/io/UTF8Codec$.MODULE$:Lscala/io/UTF8Codec$;
const #55 = Asciz	scala/collection/immutable/List$;
const #56 = class	#55;	//  scala/collection/immutable/List$
const #57 = Asciz	Lscala/collection/immutable/List$;;
const #58 = NameAndType	#51:#57;//  MODULE$:Lscala/collection/immutable/List$;
const #59 = Field	#56.#58;	//  scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
const #60 = Asciz	scala/runtime/ScalaRunTime$;
const #61 = class	#60;	//  scala/runtime/ScalaRunTime$
const #62 = Asciz	Lscala/runtime/ScalaRunTime$;;
const #63 = NameAndType	#51:#62;//  MODULE$:Lscala/runtime/ScalaRunTime$;
const #64 = Field	#61.#63;	//  scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
const #65 = Asciz	boxArray;
const #66 = Asciz	(Ljava/lang/Object;)Lscala/runtime/BoxedArray;;
const #67 = NameAndType	#65:#66;//  boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
const #68 = Method	#61.#67;	//  scala/runtime/ScalaRunTime$.boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
const #69 = Asciz	(Lscala/collection/Sequence;)Lscala/collection/immutable/List;;
const #70 = NameAndType	#23:#69;//  apply:(Lscala/collection/Sequence;)Lscala/collection/immutable/List;
const #71 = Method	#56.#70;	//  scala/collection/immutable/List$.apply:(Lscala/collection/Sequence;)Lscala/collection/immutable/List;
const #72 = Asciz	;
const #73 = String	#72;	//  
const #74 = Asciz	scala/collection/generic/TraversableTemplate;
const #75 = class	#74;	//  scala/collection/generic/TraversableTemplate
const #76 = Asciz	mkString;
const #77 = Asciz	(Ljava/lang/String;)Ljava/lang/String;;
const #78 = NameAndType	#76:#77;//  mkString:(Ljava/lang/String;)Ljava/lang/String;
const #79 = InterfaceMethod	#75.#78;	//  scala/collection/generic/TraversableTemplate.mkString:(Ljava/lang/String;)Ljava/lang/String;
const #80 = int	16;
const #81 = Asciz	java/lang/Integer;
const #82 = class	#81;	//  java/lang/Integer
const #83 = Asciz	parseInt;
const #84 = Asciz	(Ljava/lang/String;I)I;
const #85 = NameAndType	#83:#84;//  parseInt:(Ljava/lang/String;I)I
const #86 = Method	#82.#85;	//  java/lang/Integer.parseInt:(Ljava/lang/String;I)I
const #87 = Asciz	encode;
const #88 = Asciz	(I)[B;
const #89 = NameAndType	#87:#88;//  encode:(I)[B
const #90 = Method	#50.#89;	//  scala/io/UTF8Codec$.encode:(I)[B
const #91 = Asciz	UTF-8;
const #92 = String	#91;	//  UTF-8
const #93 = Asciz	([BLjava/lang/String;)V;
const #94 = NameAndType	#3:#93;//  "<init>":([BLjava/lang/String;)V
const #95 = Method	#48.#94;	//  java/lang/String."<init>":([BLjava/lang/String;)V
const #96 = Asciz	scala/MatchError;
const #97 = class	#96;	//  scala/MatchError
const #98 = Asciz	toString;
const #99 = Asciz	()Ljava/lang/String;;
const #100 = NameAndType	#98:#99;//  toString:()Ljava/lang/String;
const #101 = Method	#26.#100;	//  scala/util/parsing/combinator/Parsers$$tilde.toString:()Ljava/lang/String;
const #102 = Asciz	(Ljava/lang/String;)V;
const #103 = NameAndType	#3:#102;//  "<init>":(Ljava/lang/String;)V
const #104 = Method	#97.#103;	//  scala/MatchError."<init>":(Ljava/lang/String;)V
const #105 = Asciz	temp29;
const #106 = Asciz	Lscala/util/parsing/combinator/Parsers$$tilde;;
const #107 = Asciz	temp30;
const #108 = Asciz	temp31;
const #109 = Asciz	C;
const #110 = Asciz	temp32;
const #111 = Asciz	temp33;
const #112 = Asciz	temp34;
const #113 = Asciz	temp35;
const #114 = Asciz	d;
const #115 = Asciz	c;
const #116 = Asciz	b;
const #117 = Asciz	(Lscala/util/parsing/combinator/Parsers$$tilde<Lscala/util/parsing/combinator/Parsers$$tilde<Lscala/util/parsing/combinator/Parsers$$tilde<Ljava/lang/Character;Ljava/lang/Character;>;Ljava/lang/Character;>;Ljava/lang/Character;>;)Ljava/lang/String;;
const #118 = Asciz	Signature;
const #119 = Asciz	andThen;
const #120 = Asciz	(Lscala/Function1;)Lscala/Function1;;
const #121 = Asciz	(Lscala/Function1;Lscala/Function1;)Lscala/Function1;;
const #122 = NameAndType	#119:#121;//  andThen:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
const #123 = Method	#13.#122;	//  scala/Function1$class.andThen:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
const #124 = Asciz	g;
const #125 = Asciz	Lscala/Function1;;
const #126 = Asciz	compose;
const #127 = NameAndType	#126:#121;//  compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
const #128 = Method	#13.#127;	//  scala/Function1$class.compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
const #129 = Asciz	(Lscala/Function1;)Ljava/lang/String;;
const #130 = NameAndType	#98:#129;//  toString:(Lscala/Function1;)Ljava/lang/String;
const #131 = Method	#13.#130;	//  scala/Function1$class.toString:(Lscala/Function1;)Ljava/lang/String;
const #132 = Asciz	Scala;
const #133 = Asciz	InnerClasses;
const #134 = Asciz	scala/util/parsing/combinator/Parsers;
const #135 = class	#134;	//  scala/util/parsing/combinator/Parsers
const #136 = Asciz	$tilde;
const #137 = Asciz	scala/util/parsing/json/Lexer;
const #138 = class	#137;	//  scala/util/parsing/json/Lexer
const #139 = Asciz	$anonfun$scala$util$parsing$json$Lexer$$unicodeBlock$4;
const #140 = Asciz	scala/Function1;
const #141 = class	#140;	//  scala/Function1
const #142 = Asciz	scala/ScalaObject;
const #143 = class	#142;	//  scala/ScalaObject
const #144 = Asciz	java/io/Serializable;
const #145 = class	#144;	//  java/io/Serializable

{
public scala.util.parsing.json.Lexer$$anonfun$scala$util$parsing$json$Lexer$$unicodeBlock$4(scala.util.parsing.json.Lexer);
  Code:
   Stack=1, Locals=2, Args_size=2
   0:	aload_0
   1:	invokespecial	#11; //Method java/lang/Object."<init>":()V
   4:	aload_0
   5:	invokestatic	#17; //Method scala/Function1$class.$init$:(Lscala/Function1;)V
   8:	return
  LineNumberTable: 
   line 84: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/util/parsing/json/Lexer$$anonfun$scala$util$parsing$json$Lexer$$unicodeBlock$4;
   0      9      1    $outer       Lscala/util/parsing/json/Lexer;


public final java.lang.Object apply(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	checkcast	#26; //class scala/util/parsing/combinator/Parsers$$tilde
   5:	invokevirtual	#31; //Method apply:(Lscala/util/parsing/combinator/Parsers$$tilde;)Ljava/lang/String;
   8:	areturn
  LineNumberTable: 
   line 84: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/util/parsing/json/Lexer$$anonfun$scala$util$parsing$json$Lexer$$unicodeBlock$4;
   0      9      1    v1       Ljava/lang/Object;


public final java.lang.String apply(scala.util.parsing.combinator.Parsers$$tilde);
  Code:
   Stack=9, Locals=12, Args_size=2
   0:	aload_1
   1:	astore_2
   2:	aload_2
   3:	ifnull	169
   6:	aload_2
   7:	invokevirtual	#37; //Method scala/util/parsing/combinator/Parsers$$tilde._1:()Ljava/lang/Object;
   10:	checkcast	#26; //class scala/util/parsing/combinator/Parsers$$tilde
   13:	astore_3
   14:	aload_2
   15:	invokevirtual	#40; //Method scala/util/parsing/combinator/Parsers$$tilde._2:()Ljava/lang/Object;
   18:	invokestatic	#46; //Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
   21:	istore	4
   23:	aload_3
   24:	ifnull	157
   27:	aload_3
   28:	invokevirtual	#37; //Method scala/util/parsing/combinator/Parsers$$tilde._1:()Ljava/lang/Object;
   31:	checkcast	#26; //class scala/util/parsing/combinator/Parsers$$tilde
   34:	astore	5
   36:	aload_3
   37:	invokevirtual	#40; //Method scala/util/parsing/combinator/Parsers$$tilde._2:()Ljava/lang/Object;
   40:	invokestatic	#46; //Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
   43:	istore	6
   45:	aload	5
   47:	ifnull	145
   50:	aload	5
   52:	invokevirtual	#37; //Method scala/util/parsing/combinator/Parsers$$tilde._1:()Ljava/lang/Object;
   55:	invokestatic	#46; //Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
   58:	istore	7
   60:	aload	5
   62:	invokevirtual	#40; //Method scala/util/parsing/combinator/Parsers$$tilde._2:()Ljava/lang/Object;
   65:	invokestatic	#46; //Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
   68:	istore	8
   70:	iload	4
   72:	istore	9
   74:	iload	6
   76:	istore	10
   78:	iload	8
   80:	istore	11
   82:	new	#48; //class java/lang/String
   85:	dup
   86:	getstatic	#54; //Field scala/io/UTF8Codec$.MODULE$:Lscala/io/UTF8Codec$;
   89:	getstatic	#59; //Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
   92:	getstatic	#64; //Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   95:	iconst_4
   96:	newarray char
   98:	dup
   99:	iconst_0
   100:	iload	7
   102:	castore
   103:	dup
   104:	iconst_1
   105:	iload	11
   107:	castore
   108:	dup
   109:	iconst_2
   110:	iload	10
   112:	castore
   113:	dup
   114:	iconst_3
   115:	iload	9
   117:	castore
   118:	invokevirtual	#68; //Method scala/runtime/ScalaRunTime$.boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
   121:	invokevirtual	#71; //Method scala/collection/immutable/List$.apply:(Lscala/collection/Sequence;)Lscala/collection/immutable/List;
   124:	ldc	#73; //String 
   126:	invokeinterface	#79,  2; //InterfaceMethod scala/collection/generic/TraversableTemplate.mkString:(Ljava/lang/String;)Ljava/lang/String;
   131:	ldc	#80; //int 16
   133:	invokestatic	#86; //Method java/lang/Integer.parseInt:(Ljava/lang/String;I)I
   136:	invokevirtual	#90; //Method scala/io/UTF8Codec$.encode:(I)[B
   139:	ldc	#92; //String UTF-8
   141:	invokespecial	#95; //Method java/lang/String."<init>":([BLjava/lang/String;)V
   144:	areturn
   145:	new	#97; //class scala/MatchError
   148:	dup
   149:	aload_2
   150:	invokevirtual	#101; //Method scala/util/parsing/combinator/Parsers$$tilde.toString:()Ljava/lang/String;
   153:	invokespecial	#104; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   156:	athrow
   157:	new	#97; //class scala/MatchError
   160:	dup
   161:	aload_2
   162:	invokevirtual	#101; //Method scala/util/parsing/combinator/Parsers$$tilde.toString:()Ljava/lang/String;
   165:	invokespecial	#104; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   168:	athrow
   169:	new	#97; //class scala/MatchError
   172:	dup
   173:	aload_2
   174:	invokevirtual	#101; //Method scala/util/parsing/combinator/Parsers$$tilde.toString:()Ljava/lang/String;
   177:	invokespecial	#104; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   180:	athrow
  LineNumberTable: 
   line 84: 0
   line 85: 70
   line 86: 82
   line 85: 100
   line 86: 103
   line 84: 144

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      181      0    this       Lscala/util/parsing/json/Lexer$$anonfun$scala$util$parsing$json$Lexer$$unicodeBlock$4;
   2      179      2    temp29       Lscala/util/parsing/combinator/Parsers$$tilde;
   14      130      3    temp30       Lscala/util/parsing/combinator/Parsers$$tilde;
   145      24      3    temp30       Lscala/util/parsing/combinator/Parsers$$tilde;
   23      121      4    temp31       C
   145      24      4    temp31       C
   36      108      5    temp32       Lscala/util/parsing/combinator/Parsers$$tilde;
   145      12      5    temp32       Lscala/util/parsing/combinator/Parsers$$tilde;
   45      99      6    temp33       C
   145      12      6    temp33       C
   60      84      7    temp34       C
   70      74      8    temp35       C
   74      70      9    d       C
   78      66      10    c       C
   82      62      11    b       C

  Signature: length = 0x2
   00 75 

public scala.Function1 andThen(scala.Function1);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#123; //Method scala/Function1$class.andThen:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
   5:	areturn
  LineNumberTable: 
   line 84: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/util/parsing/json/Lexer$$anonfun$scala$util$parsing$json$Lexer$$unicodeBlock$4;
   0      6      1    g       Lscala/Function1;


public scala.Function1 compose(scala.Function1);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#128; //Method scala/Function1$class.compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
   5:	areturn
  LineNumberTable: 
   line 84: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/util/parsing/json/Lexer$$anonfun$scala$util$parsing$json$Lexer$$unicodeBlock$4;
   0      6      1    g       Lscala/Function1;


public java.lang.String toString();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#131; //Method scala/Function1$class.toString:(Lscala/Function1;)Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 84: 0


}

