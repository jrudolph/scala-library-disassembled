Compiled from "Regex.scala"
public final class scala.util.matching.Regex$Groups$ extends java.lang.Object implements scala.ScalaObject
  SourceFile: "Regex.scala"
  Scala: length = 0x
   
  InnerClass: 
   public Match=class scala/util/matching/Regex$Match of class scala/util/matching/Regex
   public final $anon$1=class scala/collection/immutable/Range$$anon$1 of class scala/collection/immutable/Range
   public Inclusive=class scala/collection/immutable/Range$Inclusive of class scala/collection/immutable/Range
   public final $anonfun$unapplySeq$2=class scala/util/matching/Regex$Groups$$anonfun$unapplySeq$2 of class scala/util/matching/Regex$Groups$
   public GenericCanBuildFrom=class scala/collection/generic/TraversableFactory$GenericCanBuildFrom of class scala/collection/generic/TraversableFactory
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	Regex.scala;
Asciz	Scala;
Asciz	MODULE$;
Asciz	Lscala/util/matching/Regex$Groups$;;
Asciz	<clinit>;
Asciz	()V;
Asciz	Code;
Asciz	scala/util/matching/Regex$Groups$;
class	scala/util/matching/Regex$Groups$
Asciz	<init>;
NameAndType	"<init>":()V
Method	scala/util/matching/Regex$Groups$."<init>":()V
Asciz	LineNumberTable;
Asciz	java/lang/Object;
class	java/lang/Object
Method	java/lang/Object."<init>":()V
NameAndType	MODULE$:Lscala/util/matching/Regex$Groups$;
Field	scala/util/matching/Regex$Groups$.MODULE$:Lscala/util/matching/Regex$Groups$;
Asciz	unapplySeq;
Asciz	(Lscala/util/matching/Regex$Match;)Lscala/Option;;
Asciz	scala/util/matching/Regex$Match;
class	scala/util/matching/Regex$Match
Asciz	groupCount;
Asciz	()I;
NameAndType	groupCount:()I
Method	scala/util/matching/Regex$Match.groupCount:()I
Asciz	scala/Some;
class	scala/Some
Asciz	scala/collection/immutable/Range$$anon$1;
class	scala/collection/immutable/Range$$anon$1
Asciz	(II)V;
NameAndType	"<init>":(II)V
Method	scala/collection/immutable/Range$$anon$1."<init>":(II)V
Asciz	scala/util/matching/Regex$Groups$$anonfun$unapplySeq$2;
class	scala/util/matching/Regex$Groups$$anonfun$unapplySeq$2
Asciz	(Lscala/util/matching/Regex$Match;)V;
NameAndType	"<init>":(Lscala/util/matching/Regex$Match;)V
Method	scala/util/matching/Regex$Groups$$anonfun$unapplySeq$2."<init>":(Lscala/util/matching/Regex$Match;)V
Asciz	scala/collection/immutable/IndexedSeq$;
class	scala/collection/immutable/IndexedSeq$
Asciz	Lscala/collection/immutable/IndexedSeq$;;
NameAndType	MODULE$:Lscala/collection/immutable/IndexedSeq$;
Field	scala/collection/immutable/IndexedSeq$.MODULE$:Lscala/collection/immutable/IndexedSeq$;
Asciz	scala/collection/generic/TraversableFactory$GenericCanBuildFrom;
class	scala/collection/generic/TraversableFactory$GenericCanBuildFrom
Asciz	(Lscala/collection/generic/TraversableFactory;)V;
NameAndType	"<init>":(Lscala/collection/generic/TraversableFactory;)V
Method	scala/collection/generic/TraversableFactory$GenericCanBuildFrom."<init>":(Lscala/collection/generic/TraversableFactory;)V
Asciz	scala/collection/TraversableLike;
class	scala/collection/TraversableLike
Asciz	map;
Asciz	(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;;
NameAndType	map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
InterfaceMethod	scala/collection/TraversableLike.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
Asciz	(Ljava/lang/Object;)V;
NameAndType	"<init>":(Ljava/lang/Object;)V
Method	scala/Some."<init>":(Ljava/lang/Object;)V
Asciz	scala/None$;
class	scala/None$
Asciz	Lscala/None$;;
NameAndType	MODULE$:Lscala/None$;
Field	scala/None$.MODULE$:Lscala/None$;
Asciz	this;
Asciz	m$2;
Asciz	Lscala/util/matching/Regex$Match;;
Asciz	LocalVariableTable;
Asciz	(Lscala/util/matching/Regex$Match;)Lscala/Option<Lscala/collection/Seq<Ljava/lang/String;>;>;;
Asciz	Signature;
Asciz	InnerClasses;
Asciz	scala/util/matching/Regex;
class	scala/util/matching/Regex
Asciz	Match;
Asciz	scala/collection/immutable/Range;
class	scala/collection/immutable/Range
Asciz	$anon$1;
Asciz	scala/collection/immutable/Range$Inclusive;
class	scala/collection/immutable/Range$Inclusive
Asciz	Inclusive;
Asciz	$anonfun$unapplySeq$2;
Asciz	scala/collection/generic/TraversableFactory;
class	scala/collection/generic/TraversableFactory
Asciz	GenericCanBuildFrom;
Asciz	scala/ScalaObject;
class	scala/ScalaObject

{
public static final scala.util.matching.Regex$Groups$ MODULE$;
  Signature: Lscala/util/matching/Regex$Groups$;

public static {};
  Signature: ()V
  Code:
   Stack=1, Locals=0, Args_size=0
	new	class scala/util/matching/Regex$Groups$
	invokespecial	Method "<init>":()V
	return
  Labels:

public scala.util.matching.Regex$Groups$();
  Signature: ()V
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokespecial	Method java/lang/Object."<init>":()V
	aload_0
	putstatic	Field MODULE$:Lscala/util/matching/Regex$Groups$;
	return
  Labels:

public scala.Option unapplySeq(scala.util.matching.Regex$Match);
  Signature: (Lscala/util/matching/Regex$Match;)Lscala/Option;
  Code:
   Stack=7, Locals=5, Args_size=2
	aload_1
	invokevirtual	Method scala/util/matching/Regex$Match.groupCount:()I
	iconst_0
	if_icmple	l1 // getstatic
	new	class scala/Some
	dup
	aload_1
	invokevirtual	Method scala/util/matching/Regex$Match.groupCount:()I
	istore_3
	iconst_1
	istore_2
	new	class scala/collection/immutable/Range$$anon$1
	dup
	iload_2
	iload_3
	invokespecial	Method scala/collection/immutable/Range$$anon$1."<init>":(II)V
	new	class scala/util/matching/Regex$Groups$$anonfun$unapplySeq$2
	dup
	aload_1
	invokespecial	Method scala/util/matching/Regex$Groups$$anonfun$unapplySeq$2."<init>":(Lscala/util/matching/Regex$Match;)V
	getstatic	Field scala/collection/immutable/IndexedSeq$.MODULE$:Lscala/collection/immutable/IndexedSeq$;
	astore	4
	new	class scala/collection/generic/TraversableFactory$GenericCanBuildFrom
	dup
	aload	4
	invokespecial	Method scala/collection/generic/TraversableFactory$GenericCanBuildFrom."<init>":(Lscala/collection/generic/TraversableFactory;)V
	invokeinterface	InterfaceMethod scala/collection/TraversableLike.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
	invokespecial	Method scala/Some."<init>":(Ljava/lang/Object;)V
	goto	l2 // areturn
l1	getstatic	Field scala/None$.MODULE$:Lscala/None$;
l2	areturn
  Labels:
   	l1 = 61 // getstatic
   	l2 = 64 // areturn
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      65      0    this       Lscala/util/matching/Regex$Groups$;
   0      65      1    m$2       Lscala/util/matching/Regex$Match;

  Signature: length = 0x2
   00 44 

}

