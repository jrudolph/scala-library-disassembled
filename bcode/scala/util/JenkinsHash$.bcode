Compiled from "JenkinsHash.scala"
public final class scala.util.JenkinsHash$ extends java.lang.Object implements scala.ScalaObject
  SourceFile: "JenkinsHash.scala"
  Scala: length = 0x
   
  InnerClass: 
   public final #427= #255 of #426; //$anon$1=class scala/Predef$$anon$1 of class scala/Predef
   public #432= #429 of #431; //Inclusive=class scala/collection/immutable/Range$Inclusive of class scala/collection/immutable/Range
   public final #435= #106 of #434; //$anonfun$3=class scala/util/JenkinsHash$$anonfun$3 of class scala/util/JenkinsHash
   public final #436= #216 of #434; //$anonfun$2=class scala/util/JenkinsHash$$anonfun$2 of class scala/util/JenkinsHash
   public final #437= #250 of #434; //$anonfun$1=class scala/util/JenkinsHash$$anonfun$1 of class scala/util/JenkinsHash
   public final #438= #226 of #434; //$anonfun$hashAnyValSeq$1=class scala/util/JenkinsHash$$anonfun$hashAnyValSeq$1 of class scala/util/JenkinsHash
   public final #439= #178 of #434; //$anonfun$fourByteToLong$1=class scala/util/JenkinsHash$$anonfun$fourByteToLong$1 of class scala/util/JenkinsHash
   public #442= #114 of #441; //GenericCanBuildFrom=class scala/collection/generic/TraversableFactory$GenericCanBuildFrom of class scala/collection/generic/TraversableFactory
   public final #443= #269 of #434; //$anonfun$partitionValuesAndRefs$2=class scala/util/JenkinsHash$$anonfun$partitionValuesAndRefs$2 of class scala/util/JenkinsHash
   public final #444= #262 of #434; //$anonfun$partitionValuesAndRefs$1=class scala/util/JenkinsHash$$anonfun$partitionValuesAndRefs$1 of class scala/util/JenkinsHash
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	JenkinsHash.scala;
const #3 = Asciz	Scala;
const #4 = Asciz	MODULE$;
const #5 = Asciz	Lscala/util/JenkinsHash$;;
const #6 = Asciz	<clinit>;
const #7 = Asciz	()V;
const #8 = Asciz	Code;
const #9 = Asciz	scala/util/JenkinsHash$;
const #10 = class	#9;	//  scala/util/JenkinsHash$
const #11 = Asciz	<init>;
const #12 = NameAndType	#11:#7;//  "<init>":()V
const #13 = Method	#10.#12;	//  scala/util/JenkinsHash$."<init>":()V
const #14 = Asciz	MAX_VALUE;
const #15 = Asciz	J;
const #16 = Asciz	LineNumberTable;
const #17 = Asciz	java/lang/Object;
const #18 = class	#17;	//  java/lang/Object
const #19 = Method	#18.#12;	//  java/lang/Object."<init>":()V
const #20 = NameAndType	#4:#5;//  MODULE$:Lscala/util/JenkinsHash$;
const #21 = Field	#10.#20;	//  scala/util/JenkinsHash$.MODULE$:Lscala/util/JenkinsHash$;
const #22 = Asciz	mixTwelve$1;
const #23 = Asciz	(I[BLscala/runtime/LongRef;Lscala/runtime/LongRef;Lscala/runtime/LongRef;)J;
const #24 = Asciz	scala/runtime/LongRef;
const #25 = class	#24;	//  scala/runtime/LongRef
const #26 = Asciz	elem;
const #27 = NameAndType	#26:#15;//  elem:J
const #28 = Field	#25.#27;	//  scala/runtime/LongRef.elem:J
const #29 = Asciz	fourByteToLong;
const #30 = Asciz	([BI)J;
const #31 = NameAndType	#29:#30;//  fourByteToLong:([BI)J
const #32 = Method	#10.#31;	//  scala/util/JenkinsHash$.fourByteToLong:([BI)J
const #33 = Asciz	add;
const #34 = Asciz	(JJ)J;
const #35 = NameAndType	#33:#34;//  add:(JJ)J
const #36 = Method	#10.#35;	//  scala/util/JenkinsHash$.add:(JJ)J
const #37 = int	8;
const #38 = Asciz	hashMix$1;
const #39 = Asciz	(Lscala/runtime/LongRef;Lscala/runtime/LongRef;Lscala/runtime/LongRef;)J;
const #40 = NameAndType	#38:#39;//  hashMix$1:(Lscala/runtime/LongRef;Lscala/runtime/LongRef;Lscala/runtime/LongRef;)J
const #41 = Method	#10.#40;	//  scala/util/JenkinsHash$.hashMix$1:(Lscala/runtime/LongRef;Lscala/runtime/LongRef;Lscala/runtime/LongRef;)J
const #42 = Asciz	this;
const #43 = Asciz	pos;
const #44 = Asciz	I;
const #45 = Asciz	LocalVariableTable;
const #46 = Asciz	subtract;
const #47 = NameAndType	#46:#34;//  subtract:(JJ)J
const #48 = Method	#10.#47;	//  scala/util/JenkinsHash$.subtract:(JJ)J
const #49 = int	13;
const #50 = Asciz	xor;
const #51 = NameAndType	#50:#34;//  xor:(JJ)J
const #52 = Method	#10.#51;	//  scala/util/JenkinsHash$.xor:(JJ)J
const #53 = Asciz	leftShift;
const #54 = Asciz	(JI)J;
const #55 = NameAndType	#53:#54;//  leftShift:(JI)J
const #56 = Method	#10.#55;	//  scala/util/JenkinsHash$.leftShift:(JI)J
const #57 = int	12;
const #58 = int	16;
const #59 = int	10;
const #60 = int	15;
const #61 = Asciz	hash;
const #62 = Asciz	([BJ)J;
const #63 = long	2654435769l;
const #65 = Asciz	(J)V;
const #66 = NameAndType	#11:#65;//  "<init>":(J)V
const #67 = Method	#25.#66;	//  scala/runtime/LongRef."<init>":(J)V
const #68 = NameAndType	#22:#23;//  mixTwelve$1:(I[BLscala/runtime/LongRef;Lscala/runtime/LongRef;Lscala/runtime/LongRef;)J
const #69 = Method	#10.#68;	//  scala/util/JenkinsHash$.mixTwelve$1:(I[BLscala/runtime/LongRef;Lscala/runtime/LongRef;Lscala/runtime/LongRef;)J
const #70 = Asciz	scala$util$JenkinsHash$$byteToLong;
const #71 = Asciz	(B)J;
const #72 = NameAndType	#70:#71;//  scala$util$JenkinsHash$$byteToLong:(B)J
const #73 = Method	#10.#72;	//  scala/util/JenkinsHash$.scala$util$JenkinsHash$$byteToLong:(B)J
const #74 = int	24;
const #75 = int	9;
const #76 = int	7;
const #77 = int	6;
const #78 = Asciz	buffer$1;
const #79 = Asciz	[B;
const #80 = Asciz	initialValue;
const #81 = Asciz	a$1;
const #82 = Asciz	Lscala/runtime/LongRef;;
const #83 = Asciz	b$1;
const #84 = Asciz	c$1;
const #85 = Asciz	hashSeq;
const #86 = Asciz	(Lscala/collection/Seq;)I;
const #87 = Asciz	partitionValuesAndRefs;
const #88 = Asciz	(Lscala/collection/Seq;)Lscala/Tuple2;;
const #89 = NameAndType	#87:#88;//  partitionValuesAndRefs:(Lscala/collection/Seq;)Lscala/Tuple2;
const #90 = Method	#10.#89;	//  scala/util/JenkinsHash$.partitionValuesAndRefs:(Lscala/collection/Seq;)Lscala/Tuple2;
const #91 = Asciz	scala/Tuple2;
const #92 = class	#91;	//  scala/Tuple2
const #93 = Asciz	_1;
const #94 = Asciz	()Ljava/lang/Object;;
const #95 = NameAndType	#93:#94;//  _1:()Ljava/lang/Object;
const #96 = Method	#92.#95;	//  scala/Tuple2._1:()Ljava/lang/Object;
const #97 = Asciz	scala/collection/Seq;
const #98 = class	#97;	//  scala/collection/Seq
const #99 = Asciz	_2;
const #100 = NameAndType	#99:#94;//  _2:()Ljava/lang/Object;
const #101 = Method	#92.#100;	//  scala/Tuple2._2:()Ljava/lang/Object;
const #102 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)V;
const #103 = NameAndType	#11:#102;//  "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
const #104 = Method	#92.#103;	//  scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
const #105 = Asciz	scala/util/JenkinsHash$$anonfun$3;
const #106 = class	#105;	//  scala/util/JenkinsHash$$anonfun$3
const #107 = Method	#106.#12;	//  scala/util/JenkinsHash$$anonfun$3."<init>":()V
const #108 = Asciz	scala/collection/Seq$;
const #109 = class	#108;	//  scala/collection/Seq$
const #110 = Asciz	Lscala/collection/Seq$;;
const #111 = NameAndType	#4:#110;//  MODULE$:Lscala/collection/Seq$;
const #112 = Field	#109.#111;	//  scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
const #113 = Asciz	scala/collection/generic/TraversableFactory$GenericCanBuildFrom;
const #114 = class	#113;	//  scala/collection/generic/TraversableFactory$GenericCanBuildFrom
const #115 = Asciz	(Lscala/collection/generic/TraversableFactory;)V;
const #116 = NameAndType	#11:#115;//  "<init>":(Lscala/collection/generic/TraversableFactory;)V
const #117 = Method	#114.#116;	//  scala/collection/generic/TraversableFactory$GenericCanBuildFrom."<init>":(Lscala/collection/generic/TraversableFactory;)V
const #118 = Asciz	scala/collection/TraversableLike;
const #119 = class	#118;	//  scala/collection/TraversableLike
const #120 = Asciz	map;
const #121 = Asciz	(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;;
const #122 = NameAndType	#120:#121;//  map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
const #123 = InterfaceMethod	#119.#122;	//  scala/collection/TraversableLike.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
const #124 = Asciz	scala/math/Numeric$IntIsIntegral$;
const #125 = class	#124;	//  scala/math/Numeric$IntIsIntegral$
const #126 = Asciz	Lscala/math/Numeric$IntIsIntegral$;;
const #127 = NameAndType	#4:#126;//  MODULE$:Lscala/math/Numeric$IntIsIntegral$;
const #128 = Field	#125.#127;	//  scala/math/Numeric$IntIsIntegral$.MODULE$:Lscala/math/Numeric$IntIsIntegral$;
const #129 = Asciz	sum;
const #130 = Asciz	(Lscala/math/Numeric;)Ljava/lang/Object;;
const #131 = NameAndType	#129:#130;//  sum:(Lscala/math/Numeric;)Ljava/lang/Object;
const #132 = InterfaceMethod	#119.#131;	//  scala/collection/TraversableLike.sum:(Lscala/math/Numeric;)Ljava/lang/Object;
const #133 = Asciz	scala/runtime/BoxesRunTime;
const #134 = class	#133;	//  scala/runtime/BoxesRunTime
const #135 = Asciz	unboxToInt;
const #136 = Asciz	(Ljava/lang/Object;)I;
const #137 = NameAndType	#135:#136;//  unboxToInt:(Ljava/lang/Object;)I
const #138 = Method	#134.#137;	//  scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
const #139 = Asciz	hashAnyValSeq;
const #140 = NameAndType	#139:#86;//  hashAnyValSeq:(Lscala/collection/Seq;)I
const #141 = Method	#10.#140;	//  scala/util/JenkinsHash$.hashAnyValSeq:(Lscala/collection/Seq;)I
const #142 = Asciz	scala/MatchError;
const #143 = class	#142;	//  scala/MatchError
const #144 = Asciz	toString;
const #145 = Asciz	()Ljava/lang/String;;
const #146 = NameAndType	#144:#145;//  toString:()Ljava/lang/String;
const #147 = Method	#92.#146;	//  scala/Tuple2.toString:()Ljava/lang/String;
const #148 = Asciz	(Ljava/lang/String;)V;
const #149 = NameAndType	#11:#148;//  "<init>":(Ljava/lang/String;)V
const #150 = Method	#143.#149;	//  scala/MatchError."<init>":(Ljava/lang/String;)V
const #151 = Asciz	xs;
const #152 = Asciz	Lscala/collection/Seq;;
const #153 = Asciz	temp36;
const #154 = Asciz	temp37;
const #155 = Asciz	refs;
const #156 = Asciz	values;
const #157 = Asciz	refsSum;
const #158 = Asciz	temp35;
const #159 = Asciz	Lscala/Tuple2;;
const #160 = Asciz	(Lscala/collection/Seq<Ljava/lang/Object;>;)I;
const #161 = Asciz	Signature;
const #162 = Asciz	scala/Predef$;
const #163 = class	#162;	//  scala/Predef$
const #164 = Asciz	Lscala/Predef$;;
const #165 = NameAndType	#4:#164;//  MODULE$:Lscala/Predef$;
const #166 = Field	#163.#165;	//  scala/Predef$.MODULE$:Lscala/Predef$;
const #167 = Asciz	intWrapper;
const #168 = Asciz	(I)Lscala/runtime/RichInt;;
const #169 = NameAndType	#167:#168;//  intWrapper:(I)Lscala/runtime/RichInt;
const #170 = Method	#163.#169;	//  scala/Predef$.intWrapper:(I)Lscala/runtime/RichInt;
const #171 = Asciz	scala/runtime/RichInt;
const #172 = class	#171;	//  scala/runtime/RichInt
const #173 = Asciz	to;
const #174 = Asciz	(I)Lscala/collection/immutable/Range$Inclusive;;
const #175 = NameAndType	#173:#174;//  to:(I)Lscala/collection/immutable/Range$Inclusive;
const #176 = Method	#172.#175;	//  scala/runtime/RichInt.to:(I)Lscala/collection/immutable/Range$Inclusive;
const #177 = Asciz	scala/util/JenkinsHash$$anonfun$fourByteToLong$1;
const #178 = class	#177;	//  scala/util/JenkinsHash$$anonfun$fourByteToLong$1
const #179 = Asciz	([BI)V;
const #180 = NameAndType	#11:#179;//  "<init>":([BI)V
const #181 = Method	#178.#180;	//  scala/util/JenkinsHash$$anonfun$fourByteToLong$1."<init>":([BI)V
const #182 = Asciz	scala/collection/immutable/IndexedSeq$;
const #183 = class	#182;	//  scala/collection/immutable/IndexedSeq$
const #184 = Asciz	Lscala/collection/immutable/IndexedSeq$;;
const #185 = NameAndType	#4:#184;//  MODULE$:Lscala/collection/immutable/IndexedSeq$;
const #186 = Field	#183.#185;	//  scala/collection/immutable/IndexedSeq$.MODULE$:Lscala/collection/immutable/IndexedSeq$;
const #187 = Asciz	canBuildFrom;
const #188 = Asciz	()Lscala/collection/generic/CanBuildFrom;;
const #189 = NameAndType	#187:#188;//  canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
const #190 = Method	#183.#189;	//  scala/collection/immutable/IndexedSeq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
const #191 = Asciz	scala/math/Numeric$LongIsIntegral$;
const #192 = class	#191;	//  scala/math/Numeric$LongIsIntegral$
const #193 = Asciz	Lscala/math/Numeric$LongIsIntegral$;;
const #194 = NameAndType	#4:#193;//  MODULE$:Lscala/math/Numeric$LongIsIntegral$;
const #195 = Field	#192.#194;	//  scala/math/Numeric$LongIsIntegral$.MODULE$:Lscala/math/Numeric$LongIsIntegral$;
const #196 = Asciz	unboxToLong;
const #197 = Asciz	(Ljava/lang/Object;)J;
const #198 = NameAndType	#196:#197;//  unboxToLong:(Ljava/lang/Object;)J
const #199 = Method	#134.#198;	//  scala/runtime/BoxesRunTime.unboxToLong:(Ljava/lang/Object;)J
const #200 = Asciz	bytes$1;
const #201 = Asciz	offset$1;
const #202 = long	4294967295l;
const #204 = Asciz	x;
const #205 = Asciz	shift;
const #206 = Asciz	x1;
const #207 = Asciz	x2;
const #208 = int	127;
const #209 = int	128;
const #210 = long	128l;
const #212 = Asciz	b;
const #213 = Asciz	B;
const #214 = Asciz	res;
const #215 = Asciz	scala/util/JenkinsHash$$anonfun$2;
const #216 = class	#215;	//  scala/util/JenkinsHash$$anonfun$2
const #217 = Method	#216.#12;	//  scala/util/JenkinsHash$$anonfun$2."<init>":()V
const #218 = Method	#109.#189;	//  scala/collection/Seq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
const #219 = Asciz	java/nio/ByteBuffer;
const #220 = class	#219;	//  java/nio/ByteBuffer
const #221 = Asciz	wrap;
const #222 = Asciz	([B)Ljava/nio/ByteBuffer;;
const #223 = NameAndType	#221:#222;//  wrap:([B)Ljava/nio/ByteBuffer;
const #224 = Method	#220.#223;	//  java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
const #225 = Asciz	scala/util/JenkinsHash$$anonfun$hashAnyValSeq$1;
const #226 = class	#225;	//  scala/util/JenkinsHash$$anonfun$hashAnyValSeq$1
const #227 = Asciz	(Ljava/nio/ByteBuffer;)V;
const #228 = NameAndType	#11:#227;//  "<init>":(Ljava/nio/ByteBuffer;)V
const #229 = Method	#226.#228;	//  scala/util/JenkinsHash$$anonfun$hashAnyValSeq$1."<init>":(Ljava/nio/ByteBuffer;)V
const #230 = Asciz	scala/collection/IterableLike;
const #231 = class	#230;	//  scala/collection/IterableLike
const #232 = Asciz	foreach;
const #233 = Asciz	(Lscala/Function1;)V;
const #234 = NameAndType	#232:#233;//  foreach:(Lscala/Function1;)V
const #235 = InterfaceMethod	#231.#234;	//  scala/collection/IterableLike.foreach:(Lscala/Function1;)V
const #236 = Asciz	array;
const #237 = Asciz	()[B;
const #238 = NameAndType	#236:#237;//  array:()[B
const #239 = Method	#220.#238;	//  java/nio/ByteBuffer.array:()[B
const #240 = Asciz	hash$default$2;
const #241 = Asciz	()J;
const #242 = NameAndType	#240:#241;//  hash$default$2:()J
const #243 = Method	#10.#242;	//  scala/util/JenkinsHash$.hash$default$2:()J
const #244 = NameAndType	#61:#62;//  hash:([BJ)J
const #245 = Method	#10.#244;	//  scala/util/JenkinsHash$.hash:([BJ)J
const #246 = Asciz	arr;
const #247 = Asciz	bb$1;
const #248 = Asciz	Ljava/nio/ByteBuffer;;
const #249 = Asciz	scala/util/JenkinsHash$$anonfun$1;
const #250 = class	#249;	//  scala/util/JenkinsHash$$anonfun$1
const #251 = Method	#250.#12;	//  scala/util/JenkinsHash$$anonfun$1."<init>":()V
const #252 = Asciz	scala/collection/generic/GenericTraversableTemplate;
const #253 = class	#252;	//  scala/collection/generic/GenericTraversableTemplate
const #254 = Asciz	scala/Predef$$anon$1;
const #255 = class	#254;	//  scala/Predef$$anon$1
const #256 = Method	#255.#12;	//  scala/Predef$$anon$1."<init>":()V
const #257 = Asciz	unzip;
const #258 = Asciz	(Lscala/Function1;)Lscala/Tuple2;;
const #259 = NameAndType	#257:#258;//  unzip:(Lscala/Function1;)Lscala/Tuple2;
const #260 = InterfaceMethod	#253.#259;	//  scala/collection/generic/GenericTraversableTemplate.unzip:(Lscala/Function1;)Lscala/Tuple2;
const #261 = Asciz	scala/util/JenkinsHash$$anonfun$partitionValuesAndRefs$1;
const #262 = class	#261;	//  scala/util/JenkinsHash$$anonfun$partitionValuesAndRefs$1
const #263 = Method	#262.#12;	//  scala/util/JenkinsHash$$anonfun$partitionValuesAndRefs$1."<init>":()V
const #264 = Asciz	flatten;
const #265 = Asciz	(Lscala/Function1;)Lscala/collection/Traversable;;
const #266 = NameAndType	#264:#265;//  flatten:(Lscala/Function1;)Lscala/collection/Traversable;
const #267 = InterfaceMethod	#253.#266;	//  scala/collection/generic/GenericTraversableTemplate.flatten:(Lscala/Function1;)Lscala/collection/Traversable;
const #268 = Asciz	scala/util/JenkinsHash$$anonfun$partitionValuesAndRefs$2;
const #269 = class	#268;	//  scala/util/JenkinsHash$$anonfun$partitionValuesAndRefs$2
const #270 = Method	#269.#12;	//  scala/util/JenkinsHash$$anonfun$partitionValuesAndRefs$2."<init>":()V
const #271 = Asciz	temp33;
const #272 = Asciz	temp34;
const #273 = Asciz	avs;
const #274 = Asciz	ars;
const #275 = Asciz	temp32;
const #276 = Asciz	(Lscala/collection/Seq<Ljava/lang/Object;>;)Lscala/Tuple2<Lscala/collection/Seq<Ljava/lang/Object;>;Lscala/collection/Seq<Ljava/lang/Object;>;>;;
const #277 = Asciz	scala$util$JenkinsHash$$classifyAny;
const #278 = Asciz	(Ljava/lang/Object;)Lscala/Tuple2;;
const #279 = Asciz	java/lang/Byte;
const #280 = class	#279;	//  java/lang/Byte
const #281 = Asciz	unboxToByte;
const #282 = Asciz	(Ljava/lang/Object;)B;
const #283 = NameAndType	#281:#282;//  unboxToByte:(Ljava/lang/Object;)B
const #284 = Method	#134.#283;	//  scala/runtime/BoxesRunTime.unboxToByte:(Ljava/lang/Object;)B
const #285 = Asciz	scala/Some;
const #286 = class	#285;	//  scala/Some
const #287 = Asciz	boxToByte;
const #288 = Asciz	(B)Ljava/lang/Byte;;
const #289 = NameAndType	#287:#288;//  boxToByte:(B)Ljava/lang/Byte;
const #290 = Method	#134.#289;	//  scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
const #291 = Asciz	(Ljava/lang/Object;)V;
const #292 = NameAndType	#11:#291;//  "<init>":(Ljava/lang/Object;)V
const #293 = Method	#286.#292;	//  scala/Some."<init>":(Ljava/lang/Object;)V
const #294 = Asciz	scala/None$;
const #295 = class	#294;	//  scala/None$
const #296 = Asciz	Lscala/None$;;
const #297 = NameAndType	#4:#296;//  MODULE$:Lscala/None$;
const #298 = Field	#295.#297;	//  scala/None$.MODULE$:Lscala/None$;
const #299 = Method	#18.#146;	//  java/lang/Object.toString:()Ljava/lang/String;
const #300 = Asciz	java/lang/Short;
const #301 = class	#300;	//  java/lang/Short
const #302 = Asciz	unboxToShort;
const #303 = Asciz	(Ljava/lang/Object;)S;
const #304 = NameAndType	#302:#303;//  unboxToShort:(Ljava/lang/Object;)S
const #305 = Method	#134.#304;	//  scala/runtime/BoxesRunTime.unboxToShort:(Ljava/lang/Object;)S
const #306 = Asciz	boxToShort;
const #307 = Asciz	(S)Ljava/lang/Short;;
const #308 = NameAndType	#306:#307;//  boxToShort:(S)Ljava/lang/Short;
const #309 = Method	#134.#308;	//  scala/runtime/BoxesRunTime.boxToShort:(S)Ljava/lang/Short;
const #310 = Asciz	java/lang/Integer;
const #311 = class	#310;	//  java/lang/Integer
const #312 = Asciz	boxToInteger;
const #313 = Asciz	(I)Ljava/lang/Integer;;
const #314 = NameAndType	#312:#313;//  boxToInteger:(I)Ljava/lang/Integer;
const #315 = Method	#134.#314;	//  scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
const #316 = Asciz	java/lang/Long;
const #317 = class	#316;	//  java/lang/Long
const #318 = Asciz	boxToLong;
const #319 = Asciz	(J)Ljava/lang/Long;;
const #320 = NameAndType	#318:#319;//  boxToLong:(J)Ljava/lang/Long;
const #321 = Method	#134.#320;	//  scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
const #322 = Asciz	java/lang/Float;
const #323 = class	#322;	//  java/lang/Float
const #324 = Asciz	unboxToFloat;
const #325 = Asciz	(Ljava/lang/Object;)F;
const #326 = NameAndType	#324:#325;//  unboxToFloat:(Ljava/lang/Object;)F
const #327 = Method	#134.#326;	//  scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
const #328 = Asciz	boxToFloat;
const #329 = Asciz	(F)Ljava/lang/Float;;
const #330 = NameAndType	#328:#329;//  boxToFloat:(F)Ljava/lang/Float;
const #331 = Method	#134.#330;	//  scala/runtime/BoxesRunTime.boxToFloat:(F)Ljava/lang/Float;
const #332 = Asciz	java/lang/Double;
const #333 = class	#332;	//  java/lang/Double
const #334 = Asciz	unboxToDouble;
const #335 = Asciz	(Ljava/lang/Object;)D;
const #336 = NameAndType	#334:#335;//  unboxToDouble:(Ljava/lang/Object;)D
const #337 = Method	#134.#336;	//  scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
const #338 = Asciz	boxToDouble;
const #339 = Asciz	(D)Ljava/lang/Double;;
const #340 = NameAndType	#338:#339;//  boxToDouble:(D)Ljava/lang/Double;
const #341 = Method	#134.#340;	//  scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
const #342 = Asciz	java/lang/Boolean;
const #343 = class	#342;	//  java/lang/Boolean
const #344 = Asciz	unboxToBoolean;
const #345 = Asciz	(Ljava/lang/Object;)Z;
const #346 = NameAndType	#344:#345;//  unboxToBoolean:(Ljava/lang/Object;)Z
const #347 = Method	#134.#346;	//  scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
const #348 = Asciz	boxToBoolean;
const #349 = Asciz	(Z)Ljava/lang/Boolean;;
const #350 = NameAndType	#348:#349;//  boxToBoolean:(Z)Ljava/lang/Boolean;
const #351 = Method	#134.#350;	//  scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
const #352 = Asciz	java/lang/Character;
const #353 = class	#352;	//  java/lang/Character
const #354 = Asciz	unboxToChar;
const #355 = Asciz	(Ljava/lang/Object;)C;
const #356 = NameAndType	#354:#355;//  unboxToChar:(Ljava/lang/Object;)C
const #357 = Method	#134.#356;	//  scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
const #358 = Asciz	boxToCharacter;
const #359 = Asciz	(C)Ljava/lang/Character;;
const #360 = NameAndType	#358:#359;//  boxToCharacter:(C)Ljava/lang/Character;
const #361 = Method	#134.#360;	//  scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
const #362 = Asciz	scala/runtime/BoxedUnit;
const #363 = class	#362;	//  scala/runtime/BoxedUnit
const #364 = Asciz	Ljava/lang/Object;;
const #365 = Asciz	temp22;
const #366 = Asciz	temp23;
const #367 = Asciz	S;
const #368 = Asciz	temp24;
const #369 = Asciz	temp25;
const #370 = Asciz	temp26;
const #371 = Asciz	F;
const #372 = Asciz	temp27;
const #373 = Asciz	D;
const #374 = Asciz	temp28;
const #375 = Asciz	Z;
const #376 = Asciz	temp29;
const #377 = Asciz	C;
const #378 = Asciz	temp30;
const #379 = Asciz	Lscala/runtime/BoxedUnit;;
const #380 = Asciz	scala$util$JenkinsHash$$putAnyVal;
const #381 = Asciz	(Ljava/nio/ByteBuffer;Ljava/lang/Object;)Ljava/lang/Object;;
const #382 = Asciz	put;
const #383 = Asciz	(B)Ljava/nio/ByteBuffer;;
const #384 = NameAndType	#382:#383;//  put:(B)Ljava/nio/ByteBuffer;
const #385 = Method	#220.#384;	//  java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
const #386 = Asciz	putShort;
const #387 = Asciz	(S)Ljava/nio/ByteBuffer;;
const #388 = NameAndType	#386:#387;//  putShort:(S)Ljava/nio/ByteBuffer;
const #389 = Method	#220.#388;	//  java/nio/ByteBuffer.putShort:(S)Ljava/nio/ByteBuffer;
const #390 = Asciz	putInt;
const #391 = Asciz	(I)Ljava/nio/ByteBuffer;;
const #392 = NameAndType	#390:#391;//  putInt:(I)Ljava/nio/ByteBuffer;
const #393 = Method	#220.#392;	//  java/nio/ByteBuffer.putInt:(I)Ljava/nio/ByteBuffer;
const #394 = Asciz	putLong;
const #395 = Asciz	(J)Ljava/nio/ByteBuffer;;
const #396 = NameAndType	#394:#395;//  putLong:(J)Ljava/nio/ByteBuffer;
const #397 = Method	#220.#396;	//  java/nio/ByteBuffer.putLong:(J)Ljava/nio/ByteBuffer;
const #398 = Asciz	putFloat;
const #399 = Asciz	(F)Ljava/nio/ByteBuffer;;
const #400 = NameAndType	#398:#399;//  putFloat:(F)Ljava/nio/ByteBuffer;
const #401 = Method	#220.#400;	//  java/nio/ByteBuffer.putFloat:(F)Ljava/nio/ByteBuffer;
const #402 = Asciz	putDouble;
const #403 = Asciz	(D)Ljava/nio/ByteBuffer;;
const #404 = NameAndType	#402:#403;//  putDouble:(D)Ljava/nio/ByteBuffer;
const #405 = Method	#220.#404;	//  java/nio/ByteBuffer.putDouble:(D)Ljava/nio/ByteBuffer;
const #406 = Asciz	putChar;
const #407 = Asciz	(C)Ljava/nio/ByteBuffer;;
const #408 = NameAndType	#406:#407;//  putChar:(C)Ljava/nio/ByteBuffer;
const #409 = Method	#220.#408;	//  java/nio/ByteBuffer.putChar:(C)Ljava/nio/ByteBuffer;
const #410 = Asciz	UNIT;
const #411 = NameAndType	#410:#379;//  UNIT:Lscala/runtime/BoxedUnit;
const #412 = Field	#363.#411;	//  scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
const #413 = Asciz	bb;
const #414 = Asciz	v;
const #415 = Asciz	temp12;
const #416 = Asciz	temp13;
const #417 = Asciz	temp14;
const #418 = Asciz	temp15;
const #419 = Asciz	temp16;
const #420 = Asciz	temp17;
const #421 = Asciz	temp18;
const #422 = Asciz	temp19;
const #423 = Asciz	scala$util$JenkinsHash$$bytesProvided;
const #424 = Asciz	InnerClasses;
const #425 = Asciz	scala/Predef;
const #426 = class	#425;	//  scala/Predef
const #427 = Asciz	$anon$1;
const #428 = Asciz	scala/collection/immutable/Range$Inclusive;
const #429 = class	#428;	//  scala/collection/immutable/Range$Inclusive
const #430 = Asciz	scala/collection/immutable/Range;
const #431 = class	#430;	//  scala/collection/immutable/Range
const #432 = Asciz	Inclusive;
const #433 = Asciz	scala/util/JenkinsHash;
const #434 = class	#433;	//  scala/util/JenkinsHash
const #435 = Asciz	$anonfun$3;
const #436 = Asciz	$anonfun$2;
const #437 = Asciz	$anonfun$1;
const #438 = Asciz	$anonfun$hashAnyValSeq$1;
const #439 = Asciz	$anonfun$fourByteToLong$1;
const #440 = Asciz	scala/collection/generic/TraversableFactory;
const #441 = class	#440;	//  scala/collection/generic/TraversableFactory
const #442 = Asciz	GenericCanBuildFrom;
const #443 = Asciz	$anonfun$partitionValuesAndRefs$2;
const #444 = Asciz	$anonfun$partitionValuesAndRefs$1;
const #445 = Asciz	scala/ScalaObject;
const #446 = class	#445;	//  scala/ScalaObject

{
public static final scala.util.JenkinsHash$ MODULE$;

public static {};
  Code:
   Stack=1, Locals=0, Args_size=0
   0:	new	#10; //class scala/util/JenkinsHash$
   3:	invokespecial	#13; //Method "<init>":()V
   6:	return

public long hash(byte[], long);
  Code:
   Stack=8, Locals=8, Args_size=3
   0:	new	#25; //class scala/runtime/LongRef
   3:	dup
   4:	ldc2_w	#63; //long 2654435769l
   7:	invokespecial	#67; //Method scala/runtime/LongRef."<init>":(J)V
   10:	astore	4
   12:	new	#25; //class scala/runtime/LongRef
   15:	dup
   16:	ldc2_w	#63; //long 2654435769l
   19:	invokespecial	#67; //Method scala/runtime/LongRef."<init>":(J)V
   22:	astore	5
   24:	new	#25; //class scala/runtime/LongRef
   27:	dup
   28:	lload_2
   29:	invokespecial	#67; //Method scala/runtime/LongRef."<init>":(J)V
   32:	astore	6
   34:	aload_1
   35:	arraylength
   36:	istore	7
   38:	iload	7
   40:	ldc	#57; //int 12
   42:	if_icmplt	69
   45:	iload	7
   47:	ldc	#57; //int 12
   49:	isub
   50:	istore	7
   52:	aload_0
   53:	iload	7
   55:	aload_1
   56:	aload	4
   58:	aload	5
   60:	aload	6
   62:	invokespecial	#69; //Method mixTwelve$1:(I[BLscala/runtime/LongRef;Lscala/runtime/LongRef;Lscala/runtime/LongRef;)J
   65:	pop2
   66:	goto	38
   69:	aload	6
   71:	aload	6
   73:	getfield	#28; //Field scala/runtime/LongRef.elem:J
   76:	aload_1
   77:	arraylength
   78:	i2l
   79:	ladd
   80:	putfield	#28; //Field scala/runtime/LongRef.elem:J
   83:	iload	7
   85:	ldc	#59; //int 10
   87:	if_icmple	118
   90:	aload	6
   92:	aload_0
   93:	aload	6
   95:	getfield	#28; //Field scala/runtime/LongRef.elem:J
   98:	aload_0
   99:	aload_0
   100:	aload_1
   101:	ldc	#59; //int 10
   103:	baload
   104:	invokevirtual	#73; //Method scala$util$JenkinsHash$$byteToLong:(B)J
   107:	ldc	#74; //int 24
   109:	invokespecial	#56; //Method leftShift:(JI)J
   112:	invokespecial	#36; //Method add:(JJ)J
   115:	putfield	#28; //Field scala/runtime/LongRef.elem:J
   118:	iload	7
   120:	ldc	#75; //int 9
   122:	if_icmple	153
   125:	aload	6
   127:	aload_0
   128:	aload	6
   130:	getfield	#28; //Field scala/runtime/LongRef.elem:J
   133:	aload_0
   134:	aload_0
   135:	aload_1
   136:	ldc	#75; //int 9
   138:	baload
   139:	invokevirtual	#73; //Method scala$util$JenkinsHash$$byteToLong:(B)J
   142:	ldc	#58; //int 16
   144:	invokespecial	#56; //Method leftShift:(JI)J
   147:	invokespecial	#36; //Method add:(JJ)J
   150:	putfield	#28; //Field scala/runtime/LongRef.elem:J
   153:	iload	7
   155:	ldc	#37; //int 8
   157:	if_icmple	188
   160:	aload	6
   162:	aload_0
   163:	aload	6
   165:	getfield	#28; //Field scala/runtime/LongRef.elem:J
   168:	aload_0
   169:	aload_0
   170:	aload_1
   171:	ldc	#37; //int 8
   173:	baload
   174:	invokevirtual	#73; //Method scala$util$JenkinsHash$$byteToLong:(B)J
   177:	ldc	#37; //int 8
   179:	invokespecial	#56; //Method leftShift:(JI)J
   182:	invokespecial	#36; //Method add:(JJ)J
   185:	putfield	#28; //Field scala/runtime/LongRef.elem:J
   188:	iload	7
   190:	ldc	#76; //int 7
   192:	if_icmple	223
   195:	aload	5
   197:	aload_0
   198:	aload	5
   200:	getfield	#28; //Field scala/runtime/LongRef.elem:J
   203:	aload_0
   204:	aload_0
   205:	aload_1
   206:	ldc	#76; //int 7
   208:	baload
   209:	invokevirtual	#73; //Method scala$util$JenkinsHash$$byteToLong:(B)J
   212:	ldc	#74; //int 24
   214:	invokespecial	#56; //Method leftShift:(JI)J
   217:	invokespecial	#36; //Method add:(JJ)J
   220:	putfield	#28; //Field scala/runtime/LongRef.elem:J
   223:	iload	7
   225:	ldc	#77; //int 6
   227:	if_icmple	258
   230:	aload	5
   232:	aload_0
   233:	aload	5
   235:	getfield	#28; //Field scala/runtime/LongRef.elem:J
   238:	aload_0
   239:	aload_0
   240:	aload_1
   241:	ldc	#77; //int 6
   243:	baload
   244:	invokevirtual	#73; //Method scala$util$JenkinsHash$$byteToLong:(B)J
   247:	ldc	#58; //int 16
   249:	invokespecial	#56; //Method leftShift:(JI)J
   252:	invokespecial	#36; //Method add:(JJ)J
   255:	putfield	#28; //Field scala/runtime/LongRef.elem:J
   258:	iload	7
   260:	iconst_5
   261:	if_icmple	291
   264:	aload	5
   266:	aload_0
   267:	aload	5
   269:	getfield	#28; //Field scala/runtime/LongRef.elem:J
   272:	aload_0
   273:	aload_0
   274:	aload_1
   275:	iconst_5
   276:	baload
   277:	invokevirtual	#73; //Method scala$util$JenkinsHash$$byteToLong:(B)J
   280:	ldc	#37; //int 8
   282:	invokespecial	#56; //Method leftShift:(JI)J
   285:	invokespecial	#36; //Method add:(JJ)J
   288:	putfield	#28; //Field scala/runtime/LongRef.elem:J
   291:	iload	7
   293:	iconst_4
   294:	if_icmple	318
   297:	aload	5
   299:	aload_0
   300:	aload	5
   302:	getfield	#28; //Field scala/runtime/LongRef.elem:J
   305:	aload_0
   306:	aload_1
   307:	iconst_4
   308:	baload
   309:	invokevirtual	#73; //Method scala$util$JenkinsHash$$byteToLong:(B)J
   312:	invokespecial	#36; //Method add:(JJ)J
   315:	putfield	#28; //Field scala/runtime/LongRef.elem:J
   318:	iload	7
   320:	iconst_3
   321:	if_icmple	351
   324:	aload	4
   326:	aload_0
   327:	aload	4
   329:	getfield	#28; //Field scala/runtime/LongRef.elem:J
   332:	aload_0
   333:	aload_0
   334:	aload_1
   335:	iconst_3
   336:	baload
   337:	invokevirtual	#73; //Method scala$util$JenkinsHash$$byteToLong:(B)J
   340:	ldc	#74; //int 24
   342:	invokespecial	#56; //Method leftShift:(JI)J
   345:	invokespecial	#36; //Method add:(JJ)J
   348:	putfield	#28; //Field scala/runtime/LongRef.elem:J
   351:	iload	7
   353:	iconst_2
   354:	if_icmple	384
   357:	aload	4
   359:	aload_0
   360:	aload	4
   362:	getfield	#28; //Field scala/runtime/LongRef.elem:J
   365:	aload_0
   366:	aload_0
   367:	aload_1
   368:	iconst_2
   369:	baload
   370:	invokevirtual	#73; //Method scala$util$JenkinsHash$$byteToLong:(B)J
   373:	ldc	#58; //int 16
   375:	invokespecial	#56; //Method leftShift:(JI)J
   378:	invokespecial	#36; //Method add:(JJ)J
   381:	putfield	#28; //Field scala/runtime/LongRef.elem:J
   384:	iload	7
   386:	iconst_1
   387:	if_icmple	417
   390:	aload	4
   392:	aload_0
   393:	aload	4
   395:	getfield	#28; //Field scala/runtime/LongRef.elem:J
   398:	aload_0
   399:	aload_0
   400:	aload_1
   401:	iconst_1
   402:	baload
   403:	invokevirtual	#73; //Method scala$util$JenkinsHash$$byteToLong:(B)J
   406:	ldc	#37; //int 8
   408:	invokespecial	#56; //Method leftShift:(JI)J
   411:	invokespecial	#36; //Method add:(JJ)J
   414:	putfield	#28; //Field scala/runtime/LongRef.elem:J
   417:	iload	7
   419:	iconst_0
   420:	if_icmple	444
   423:	aload	4
   425:	aload_0
   426:	aload	4
   428:	getfield	#28; //Field scala/runtime/LongRef.elem:J
   431:	aload_0
   432:	aload_1
   433:	iconst_0
   434:	baload
   435:	invokevirtual	#73; //Method scala$util$JenkinsHash$$byteToLong:(B)J
   438:	invokespecial	#36; //Method add:(JJ)J
   441:	putfield	#28; //Field scala/runtime/LongRef.elem:J
   444:	aload_0
   445:	aload	4
   447:	aload	5
   449:	aload	6
   451:	invokespecial	#41; //Method hashMix$1:(Lscala/runtime/LongRef;Lscala/runtime/LongRef;Lscala/runtime/LongRef;)J
   454:	lreturn
  LineNumberTable: 
   line 143: 0
   line 144: 24
   line 168: 34
   line 169: 38
   line 170: 45
   line 171: 52
   line 173: 69
   line 176: 83
   line 177: 118
   line 178: 153
   line 179: 188
   line 180: 223
   line 181: 258
   line 182: 291
   line 183: 318
   line 184: 351
   line 185: 384
   line 186: 417
   line 189: 444

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      455      0    this       Lscala/util/JenkinsHash$;
   0      455      1    buffer$1       [B
   0      455      2    initialValue       J
   12      442      4    a$1       Lscala/runtime/LongRef;
   24      430      5    b$1       Lscala/runtime/LongRef;
   34      420      6    c$1       Lscala/runtime/LongRef;
   38      416      7    pos       I


public int hashSeq(scala.collection.Seq);
  Code:
   Stack=5, Locals=10, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokespecial	#90; //Method partitionValuesAndRefs:(Lscala/collection/Seq;)Lscala/Tuple2;
   5:	astore	9
   7:	aload	9
   9:	ifnull	132
   12:	aload	9
   14:	invokevirtual	#96; //Method scala/Tuple2._1:()Ljava/lang/Object;
   17:	checkcast	#98; //class scala/collection/Seq
   20:	astore_2
   21:	aload	9
   23:	invokevirtual	#101; //Method scala/Tuple2._2:()Ljava/lang/Object;
   26:	checkcast	#98; //class scala/collection/Seq
   29:	astore_3
   30:	iconst_1
   31:	ifeq	119
   34:	new	#92; //class scala/Tuple2
   37:	dup
   38:	aload_2
   39:	aload_3
   40:	invokespecial	#104; //Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
   43:	astore	4
   45:	aload	4
   47:	invokevirtual	#96; //Method scala/Tuple2._1:()Ljava/lang/Object;
   50:	checkcast	#98; //class scala/collection/Seq
   53:	astore	7
   55:	aload	4
   57:	invokevirtual	#101; //Method scala/Tuple2._2:()Ljava/lang/Object;
   60:	checkcast	#98; //class scala/collection/Seq
   63:	astore	5
   65:	aload	5
   67:	new	#106; //class scala/util/JenkinsHash$$anonfun$3
   70:	dup
   71:	invokespecial	#107; //Method scala/util/JenkinsHash$$anonfun$3."<init>":()V
   74:	getstatic	#112; //Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
   77:	astore	6
   79:	new	#114; //class scala/collection/generic/TraversableFactory$GenericCanBuildFrom
   82:	dup
   83:	aload	6
   85:	invokespecial	#117; //Method scala/collection/generic/TraversableFactory$GenericCanBuildFrom."<init>":(Lscala/collection/generic/TraversableFactory;)V
   88:	invokeinterface	#123,  3; //InterfaceMethod scala/collection/TraversableLike.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
   93:	checkcast	#119; //class scala/collection/TraversableLike
   96:	getstatic	#128; //Field scala/math/Numeric$IntIsIntegral$.MODULE$:Lscala/math/Numeric$IntIsIntegral$;
   99:	invokeinterface	#132,  2; //InterfaceMethod scala/collection/TraversableLike.sum:(Lscala/math/Numeric;)Ljava/lang/Object;
   104:	invokestatic	#138; //Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
   107:	istore	8
   109:	aload_0
   110:	aload	7
   112:	invokespecial	#141; //Method hashAnyValSeq:(Lscala/collection/Seq;)I
   115:	iload	8
   117:	iadd
   118:	ireturn
   119:	new	#143; //class scala/MatchError
   122:	dup
   123:	aload	9
   125:	invokevirtual	#147; //Method scala/Tuple2.toString:()Ljava/lang/String;
   128:	invokespecial	#150; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   131:	athrow
   132:	new	#143; //class scala/MatchError
   135:	dup
   136:	aload	9
   138:	invokevirtual	#147; //Method scala/Tuple2.toString:()Ljava/lang/String;
   141:	invokespecial	#150; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   144:	athrow
  LineNumberTable: 
   line 126: 0
   line 21: 30
   line 126: 34
   line 127: 65
   line 129: 109
   line 126: 119

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      145      0    this       Lscala/util/JenkinsHash$;
   0      145      1    xs       Lscala/collection/Seq;
   21      111      2    temp36       Lscala/collection/Seq;
   30      102      3    temp37       Lscala/collection/Seq;
   65      53      5    refs       Lscala/collection/Seq;
   55      63      7    values       Lscala/collection/Seq;
   109      9      8    refsSum       I
   7      138      9    temp35       Lscala/Tuple2;

  Signature: length = 0x2
   00 FFFFFFA0 

public final long scala$util$JenkinsHash$$byteToLong(byte);
  Code:
   Stack=4, Locals=3, Args_size=2
   0:	iload_1
   1:	ldc	#208; //int 127
   3:	iand
   4:	istore_2
   5:	iload_1
   6:	ldc	#209; //int 128
   8:	iand
   9:	i2l
   10:	lconst_0
   11:	lcmp
   12:	ifeq	24
   15:	iload_2
   16:	i2l
   17:	ldc2_w	#210; //long 128l
   20:	ladd
   21:	goto	26
   24:	iload_2
   25:	i2l
   26:	lreturn
  LineNumberTable: 
   line 88: 0
   line 89: 5
   line 90: 24
   line 87: 26

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      27      0    this       Lscala/util/JenkinsHash$;
   0      27      1    b       B
   5      22      2    res       I


public final scala.Tuple2 scala$util$JenkinsHash$$classifyAny(java.lang.Object);
  Code:
   Stack=6, Locals=13, Args_size=2
   0:	aload_1
   1:	instanceof	#280; //class java/lang/Byte
   4:	ifeq	52
   7:	aload_1
   8:	invokestatic	#284; //Method scala/runtime/BoxesRunTime.unboxToByte:(Ljava/lang/Object;)B
   11:	istore_2
   12:	iconst_1
   13:	ifeq	40
   16:	new	#92; //class scala/Tuple2
   19:	dup
   20:	new	#286; //class scala/Some
   23:	dup
   24:	iload_2
   25:	invokestatic	#290; //Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
   28:	invokespecial	#293; //Method scala/Some."<init>":(Ljava/lang/Object;)V
   31:	getstatic	#298; //Field scala/None$.MODULE$:Lscala/None$;
   34:	invokespecial	#104; //Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
   37:	goto	508
   40:	new	#143; //class scala/MatchError
   43:	dup
   44:	aload_1
   45:	invokevirtual	#299; //Method java/lang/Object.toString:()Ljava/lang/String;
   48:	invokespecial	#150; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   51:	athrow
   52:	aload_1
   53:	instanceof	#301; //class java/lang/Short
   56:	ifeq	104
   59:	aload_1
   60:	invokestatic	#305; //Method scala/runtime/BoxesRunTime.unboxToShort:(Ljava/lang/Object;)S
   63:	istore_3
   64:	iconst_1
   65:	ifeq	92
   68:	new	#92; //class scala/Tuple2
   71:	dup
   72:	new	#286; //class scala/Some
   75:	dup
   76:	iload_3
   77:	invokestatic	#309; //Method scala/runtime/BoxesRunTime.boxToShort:(S)Ljava/lang/Short;
   80:	invokespecial	#293; //Method scala/Some."<init>":(Ljava/lang/Object;)V
   83:	getstatic	#298; //Field scala/None$.MODULE$:Lscala/None$;
   86:	invokespecial	#104; //Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
   89:	goto	508
   92:	new	#143; //class scala/MatchError
   95:	dup
   96:	aload_1
   97:	invokevirtual	#299; //Method java/lang/Object.toString:()Ljava/lang/String;
   100:	invokespecial	#150; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   103:	athrow
   104:	aload_1
   105:	instanceof	#311; //class java/lang/Integer
   108:	ifeq	158
   111:	aload_1
   112:	invokestatic	#138; //Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
   115:	istore	4
   117:	iconst_1
   118:	ifeq	146
   121:	new	#92; //class scala/Tuple2
   124:	dup
   125:	new	#286; //class scala/Some
   128:	dup
   129:	iload	4
   131:	invokestatic	#315; //Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   134:	invokespecial	#293; //Method scala/Some."<init>":(Ljava/lang/Object;)V
   137:	getstatic	#298; //Field scala/None$.MODULE$:Lscala/None$;
   140:	invokespecial	#104; //Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
   143:	goto	508
   146:	new	#143; //class scala/MatchError
   149:	dup
   150:	aload_1
   151:	invokevirtual	#299; //Method java/lang/Object.toString:()Ljava/lang/String;
   154:	invokespecial	#150; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   157:	athrow
   158:	aload_1
   159:	instanceof	#317; //class java/lang/Long
   162:	ifeq	212
   165:	aload_1
   166:	invokestatic	#199; //Method scala/runtime/BoxesRunTime.unboxToLong:(Ljava/lang/Object;)J
   169:	lstore	5
   171:	iconst_1
   172:	ifeq	200
   175:	new	#92; //class scala/Tuple2
   178:	dup
   179:	new	#286; //class scala/Some
   182:	dup
   183:	lload	5
   185:	invokestatic	#321; //Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
   188:	invokespecial	#293; //Method scala/Some."<init>":(Ljava/lang/Object;)V
   191:	getstatic	#298; //Field scala/None$.MODULE$:Lscala/None$;
   194:	invokespecial	#104; //Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
   197:	goto	508
   200:	new	#143; //class scala/MatchError
   203:	dup
   204:	aload_1
   205:	invokevirtual	#299; //Method java/lang/Object.toString:()Ljava/lang/String;
   208:	invokespecial	#150; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   211:	athrow
   212:	aload_1
   213:	instanceof	#323; //class java/lang/Float
   216:	ifeq	266
   219:	aload_1
   220:	invokestatic	#327; //Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
   223:	fstore	7
   225:	iconst_1
   226:	ifeq	254
   229:	new	#92; //class scala/Tuple2
   232:	dup
   233:	new	#286; //class scala/Some
   236:	dup
   237:	fload	7
   239:	invokestatic	#331; //Method scala/runtime/BoxesRunTime.boxToFloat:(F)Ljava/lang/Float;
   242:	invokespecial	#293; //Method scala/Some."<init>":(Ljava/lang/Object;)V
   245:	getstatic	#298; //Field scala/None$.MODULE$:Lscala/None$;
   248:	invokespecial	#104; //Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
   251:	goto	508
   254:	new	#143; //class scala/MatchError
   257:	dup
   258:	aload_1
   259:	invokevirtual	#299; //Method java/lang/Object.toString:()Ljava/lang/String;
   262:	invokespecial	#150; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   265:	athrow
   266:	aload_1
   267:	instanceof	#333; //class java/lang/Double
   270:	ifeq	320
   273:	aload_1
   274:	invokestatic	#337; //Method scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
   277:	dstore	8
   279:	iconst_1
   280:	ifeq	308
   283:	new	#92; //class scala/Tuple2
   286:	dup
   287:	new	#286; //class scala/Some
   290:	dup
   291:	dload	8
   293:	invokestatic	#341; //Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
   296:	invokespecial	#293; //Method scala/Some."<init>":(Ljava/lang/Object;)V
   299:	getstatic	#298; //Field scala/None$.MODULE$:Lscala/None$;
   302:	invokespecial	#104; //Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
   305:	goto	508
   308:	new	#143; //class scala/MatchError
   311:	dup
   312:	aload_1
   313:	invokevirtual	#299; //Method java/lang/Object.toString:()Ljava/lang/String;
   316:	invokespecial	#150; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   319:	athrow
   320:	aload_1
   321:	instanceof	#343; //class java/lang/Boolean
   324:	ifeq	374
   327:	aload_1
   328:	invokestatic	#347; //Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
   331:	istore	10
   333:	iconst_1
   334:	ifeq	362
   337:	new	#92; //class scala/Tuple2
   340:	dup
   341:	new	#286; //class scala/Some
   344:	dup
   345:	iload	10
   347:	invokestatic	#351; //Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
   350:	invokespecial	#293; //Method scala/Some."<init>":(Ljava/lang/Object;)V
   353:	getstatic	#298; //Field scala/None$.MODULE$:Lscala/None$;
   356:	invokespecial	#104; //Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
   359:	goto	508
   362:	new	#143; //class scala/MatchError
   365:	dup
   366:	aload_1
   367:	invokevirtual	#299; //Method java/lang/Object.toString:()Ljava/lang/String;
   370:	invokespecial	#150; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   373:	athrow
   374:	aload_1
   375:	instanceof	#353; //class java/lang/Character
   378:	ifeq	428
   381:	aload_1
   382:	invokestatic	#357; //Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
   385:	istore	11
   387:	iconst_1
   388:	ifeq	416
   391:	new	#92; //class scala/Tuple2
   394:	dup
   395:	new	#286; //class scala/Some
   398:	dup
   399:	iload	11
   401:	invokestatic	#361; //Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
   404:	invokespecial	#293; //Method scala/Some."<init>":(Ljava/lang/Object;)V
   407:	getstatic	#298; //Field scala/None$.MODULE$:Lscala/None$;
   410:	invokespecial	#104; //Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
   413:	goto	508
   416:	new	#143; //class scala/MatchError
   419:	dup
   420:	aload_1
   421:	invokevirtual	#299; //Method java/lang/Object.toString:()Ljava/lang/String;
   424:	invokespecial	#150; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   427:	athrow
   428:	aload_1
   429:	instanceof	#363; //class scala/runtime/BoxedUnit
   432:	ifeq	479
   435:	aload_1
   436:	checkcast	#363; //class scala/runtime/BoxedUnit
   439:	astore	12
   441:	iconst_1
   442:	ifeq	467
   445:	new	#92; //class scala/Tuple2
   448:	dup
   449:	new	#286; //class scala/Some
   452:	dup
   453:	aload	12
   455:	invokespecial	#293; //Method scala/Some."<init>":(Ljava/lang/Object;)V
   458:	getstatic	#298; //Field scala/None$.MODULE$:Lscala/None$;
   461:	invokespecial	#104; //Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
   464:	goto	508
   467:	new	#143; //class scala/MatchError
   470:	dup
   471:	aload_1
   472:	invokevirtual	#299; //Method java/lang/Object.toString:()Ljava/lang/String;
   475:	invokespecial	#150; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   478:	athrow
   479:	aload_1
   480:	instanceof	#18; //class java/lang/Object
   483:	ifeq	521
   486:	iconst_1
   487:	ifeq	509
   490:	new	#92; //class scala/Tuple2
   493:	dup
   494:	getstatic	#298; //Field scala/None$.MODULE$:Lscala/None$;
   497:	new	#286; //class scala/Some
   500:	dup
   501:	aload_1
   502:	invokespecial	#293; //Method scala/Some."<init>":(Ljava/lang/Object;)V
   505:	invokespecial	#104; //Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
   508:	areturn
   509:	new	#143; //class scala/MatchError
   512:	dup
   513:	aload_1
   514:	invokevirtual	#299; //Method java/lang/Object.toString:()Ljava/lang/String;
   517:	invokespecial	#150; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   520:	athrow
   521:	new	#143; //class scala/MatchError
   524:	dup
   525:	aload_1
   526:	invokevirtual	#299; //Method java/lang/Object.toString:()Ljava/lang/String;
   529:	invokespecial	#150; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   532:	athrow
  LineNumberTable: 
   line 57: 0
   line 21: 12
   line 58: 16
   line 57: 40
   line 21: 64
   line 59: 68
   line 57: 92
   line 21: 117
   line 60: 121
   line 57: 146
   line 21: 171
   line 61: 175
   line 57: 200
   line 21: 225
   line 62: 229
   line 57: 254
   line 21: 279
   line 63: 283
   line 57: 308
   line 21: 333
   line 64: 337
   line 57: 362
   line 21: 387
   line 65: 391
   line 57: 416
   line 21: 441
   line 66: 445
   line 57: 467
   line 21: 486
   line 67: 490
   line 57: 508

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      533      0    this       Lscala/util/JenkinsHash$;
   0      533      1    x       Ljava/lang/Object;
   12      40      2    temp22       B
   64      40      3    temp23       S
   117      41      4    temp24       I
   171      41      5    temp25       J
   225      41      7    temp26       F
   279      41      8    temp27       D
   333      41      10    temp28       Z
   387      41      11    temp29       C
   441      38      12    temp30       Lscala/runtime/BoxedUnit;


public final java.lang.Object scala$util$JenkinsHash$$putAnyVal(java.nio.ByteBuffer, java.lang.Object);
  Code:
   Stack=3, Locals=13, Args_size=3
   0:	aload_2
   1:	instanceof	#280; //class java/lang/Byte
   4:	ifeq	36
   7:	aload_2
   8:	invokestatic	#284; //Method scala/runtime/BoxesRunTime.unboxToByte:(Ljava/lang/Object;)B
   11:	istore_3
   12:	iconst_1
   13:	ifeq	24
   16:	aload_1
   17:	iload_3
   18:	invokevirtual	#385; //Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
   21:	goto	326
   24:	new	#143; //class scala/MatchError
   27:	dup
   28:	aload_2
   29:	invokevirtual	#299; //Method java/lang/Object.toString:()Ljava/lang/String;
   32:	invokespecial	#150; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   35:	athrow
   36:	aload_2
   37:	instanceof	#301; //class java/lang/Short
   40:	ifeq	74
   43:	aload_2
   44:	invokestatic	#305; //Method scala/runtime/BoxesRunTime.unboxToShort:(Ljava/lang/Object;)S
   47:	istore	4
   49:	iconst_1
   50:	ifeq	62
   53:	aload_1
   54:	iload	4
   56:	invokevirtual	#389; //Method java/nio/ByteBuffer.putShort:(S)Ljava/nio/ByteBuffer;
   59:	goto	326
   62:	new	#143; //class scala/MatchError
   65:	dup
   66:	aload_2
   67:	invokevirtual	#299; //Method java/lang/Object.toString:()Ljava/lang/String;
   70:	invokespecial	#150; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   73:	athrow
   74:	aload_2
   75:	instanceof	#311; //class java/lang/Integer
   78:	ifeq	112
   81:	aload_2
   82:	invokestatic	#138; //Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
   85:	istore	5
   87:	iconst_1
   88:	ifeq	100
   91:	aload_1
   92:	iload	5
   94:	invokevirtual	#393; //Method java/nio/ByteBuffer.putInt:(I)Ljava/nio/ByteBuffer;
   97:	goto	326
   100:	new	#143; //class scala/MatchError
   103:	dup
   104:	aload_2
   105:	invokevirtual	#299; //Method java/lang/Object.toString:()Ljava/lang/String;
   108:	invokespecial	#150; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   111:	athrow
   112:	aload_2
   113:	instanceof	#317; //class java/lang/Long
   116:	ifeq	150
   119:	aload_2
   120:	invokestatic	#199; //Method scala/runtime/BoxesRunTime.unboxToLong:(Ljava/lang/Object;)J
   123:	lstore	6
   125:	iconst_1
   126:	ifeq	138
   129:	aload_1
   130:	lload	6
   132:	invokevirtual	#397; //Method java/nio/ByteBuffer.putLong:(J)Ljava/nio/ByteBuffer;
   135:	goto	326
   138:	new	#143; //class scala/MatchError
   141:	dup
   142:	aload_2
   143:	invokevirtual	#299; //Method java/lang/Object.toString:()Ljava/lang/String;
   146:	invokespecial	#150; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   149:	athrow
   150:	aload_2
   151:	instanceof	#323; //class java/lang/Float
   154:	ifeq	188
   157:	aload_2
   158:	invokestatic	#327; //Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
   161:	fstore	8
   163:	iconst_1
   164:	ifeq	176
   167:	aload_1
   168:	fload	8
   170:	invokevirtual	#401; //Method java/nio/ByteBuffer.putFloat:(F)Ljava/nio/ByteBuffer;
   173:	goto	326
   176:	new	#143; //class scala/MatchError
   179:	dup
   180:	aload_2
   181:	invokevirtual	#299; //Method java/lang/Object.toString:()Ljava/lang/String;
   184:	invokespecial	#150; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   187:	athrow
   188:	aload_2
   189:	instanceof	#333; //class java/lang/Double
   192:	ifeq	226
   195:	aload_2
   196:	invokestatic	#337; //Method scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
   199:	dstore	9
   201:	iconst_1
   202:	ifeq	214
   205:	aload_1
   206:	dload	9
   208:	invokevirtual	#405; //Method java/nio/ByteBuffer.putDouble:(D)Ljava/nio/ByteBuffer;
   211:	goto	326
   214:	new	#143; //class scala/MatchError
   217:	dup
   218:	aload_2
   219:	invokevirtual	#299; //Method java/lang/Object.toString:()Ljava/lang/String;
   222:	invokespecial	#150; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   225:	athrow
   226:	aload_2
   227:	instanceof	#343; //class java/lang/Boolean
   230:	ifeq	274
   233:	aload_2
   234:	invokestatic	#347; //Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
   237:	istore	11
   239:	iconst_1
   240:	ifeq	262
   243:	aload_1
   244:	iload	11
   246:	ifeq	254
   249:	bipush	127
   251:	goto	256
   254:	bipush	-128
   256:	invokevirtual	#385; //Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
   259:	goto	326
   262:	new	#143; //class scala/MatchError
   265:	dup
   266:	aload_2
   267:	invokevirtual	#299; //Method java/lang/Object.toString:()Ljava/lang/String;
   270:	invokespecial	#150; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   273:	athrow
   274:	aload_2
   275:	instanceof	#353; //class java/lang/Character
   278:	ifeq	312
   281:	aload_2
   282:	invokestatic	#357; //Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
   285:	istore	12
   287:	iconst_1
   288:	ifeq	300
   291:	aload_1
   292:	iload	12
   294:	invokevirtual	#409; //Method java/nio/ByteBuffer.putChar:(C)Ljava/nio/ByteBuffer;
   297:	goto	326
   300:	new	#143; //class scala/MatchError
   303:	dup
   304:	aload_2
   305:	invokevirtual	#299; //Method java/lang/Object.toString:()Ljava/lang/String;
   308:	invokespecial	#150; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   311:	athrow
   312:	aload_2
   313:	instanceof	#363; //class scala/runtime/BoxedUnit
   316:	ifeq	339
   319:	iconst_1
   320:	ifeq	327
   323:	getstatic	#412; //Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
   326:	areturn
   327:	new	#143; //class scala/MatchError
   330:	dup
   331:	aload_2
   332:	invokevirtual	#299; //Method java/lang/Object.toString:()Ljava/lang/String;
   335:	invokespecial	#150; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   338:	athrow
   339:	new	#143; //class scala/MatchError
   342:	dup
   343:	aload_2
   344:	invokevirtual	#299; //Method java/lang/Object.toString:()Ljava/lang/String;
   347:	invokespecial	#150; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   350:	athrow
  LineNumberTable: 
   line 42: 0
   line 21: 12
   line 43: 16
   line 42: 24
   line 21: 49
   line 44: 53
   line 42: 62
   line 21: 87
   line 45: 91
   line 42: 100
   line 21: 125
   line 46: 129
   line 42: 138
   line 21: 163
   line 47: 167
   line 42: 176
   line 21: 201
   line 48: 205
   line 42: 214
   line 21: 239
   line 49: 243
   line 42: 262
   line 21: 287
   line 50: 291
   line 42: 300
   line 21: 319
   line 51: 323
   line 42: 326

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      351      0    this       Lscala/util/JenkinsHash$;
   0      351      1    bb       Ljava/nio/ByteBuffer;
   0      351      2    v       Ljava/lang/Object;
   12      24      3    temp12       B
   49      25      4    temp13       S
   87      25      5    temp14       I
   125      25      6    temp15       J
   163      25      8    temp16       F
   201      25      9    temp17       D
   239      35      11    temp18       Z
   287      25      12    temp19       C


public final int scala$util$JenkinsHash$$bytesProvided(java.lang.Object);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	aload_1
   1:	instanceof	#280; //class java/lang/Byte
   4:	ifeq	27
   7:	iconst_1
   8:	ifeq	15
   11:	iconst_1
   12:	goto	250
   15:	new	#143; //class scala/MatchError
   18:	dup
   19:	aload_1
   20:	invokevirtual	#299; //Method java/lang/Object.toString:()Ljava/lang/String;
   23:	invokespecial	#150; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   26:	athrow
   27:	aload_1
   28:	instanceof	#301; //class java/lang/Short
   31:	ifeq	54
   34:	iconst_1
   35:	ifeq	42
   38:	iconst_2
   39:	goto	250
   42:	new	#143; //class scala/MatchError
   45:	dup
   46:	aload_1
   47:	invokevirtual	#299; //Method java/lang/Object.toString:()Ljava/lang/String;
   50:	invokespecial	#150; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   53:	athrow
   54:	aload_1
   55:	instanceof	#311; //class java/lang/Integer
   58:	ifeq	81
   61:	iconst_1
   62:	ifeq	69
   65:	iconst_4
   66:	goto	250
   69:	new	#143; //class scala/MatchError
   72:	dup
   73:	aload_1
   74:	invokevirtual	#299; //Method java/lang/Object.toString:()Ljava/lang/String;
   77:	invokespecial	#150; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   80:	athrow
   81:	aload_1
   82:	instanceof	#317; //class java/lang/Long
   85:	ifeq	109
   88:	iconst_1
   89:	ifeq	97
   92:	ldc	#37; //int 8
   94:	goto	250
   97:	new	#143; //class scala/MatchError
   100:	dup
   101:	aload_1
   102:	invokevirtual	#299; //Method java/lang/Object.toString:()Ljava/lang/String;
   105:	invokespecial	#150; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   108:	athrow
   109:	aload_1
   110:	instanceof	#323; //class java/lang/Float
   113:	ifeq	136
   116:	iconst_1
   117:	ifeq	124
   120:	iconst_4
   121:	goto	250
   124:	new	#143; //class scala/MatchError
   127:	dup
   128:	aload_1
   129:	invokevirtual	#299; //Method java/lang/Object.toString:()Ljava/lang/String;
   132:	invokespecial	#150; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   135:	athrow
   136:	aload_1
   137:	instanceof	#333; //class java/lang/Double
   140:	ifeq	164
   143:	iconst_1
   144:	ifeq	152
   147:	ldc	#37; //int 8
   149:	goto	250
   152:	new	#143; //class scala/MatchError
   155:	dup
   156:	aload_1
   157:	invokevirtual	#299; //Method java/lang/Object.toString:()Ljava/lang/String;
   160:	invokespecial	#150; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   163:	athrow
   164:	aload_1
   165:	instanceof	#343; //class java/lang/Boolean
   168:	ifeq	191
   171:	iconst_1
   172:	ifeq	179
   175:	iconst_1
   176:	goto	250
   179:	new	#143; //class scala/MatchError
   182:	dup
   183:	aload_1
   184:	invokevirtual	#299; //Method java/lang/Object.toString:()Ljava/lang/String;
   187:	invokespecial	#150; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   190:	athrow
   191:	aload_1
   192:	instanceof	#353; //class java/lang/Character
   195:	ifeq	218
   198:	iconst_1
   199:	ifeq	206
   202:	iconst_2
   203:	goto	250
   206:	new	#143; //class scala/MatchError
   209:	dup
   210:	aload_1
   211:	invokevirtual	#299; //Method java/lang/Object.toString:()Ljava/lang/String;
   214:	invokespecial	#150; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   217:	athrow
   218:	aload_1
   219:	instanceof	#363; //class scala/runtime/BoxedUnit
   222:	ifeq	245
   225:	iconst_1
   226:	ifeq	233
   229:	iconst_0
   230:	goto	250
   233:	new	#143; //class scala/MatchError
   236:	dup
   237:	aload_1
   238:	invokevirtual	#299; //Method java/lang/Object.toString:()Ljava/lang/String;
   241:	invokespecial	#150; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   244:	athrow
   245:	iconst_1
   246:	ifeq	251
   249:	iconst_4
   250:	ireturn
   251:	new	#143; //class scala/MatchError
   254:	dup
   255:	aload_1
   256:	invokevirtual	#299; //Method java/lang/Object.toString:()Ljava/lang/String;
   259:	invokespecial	#150; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   262:	athrow
  LineNumberTable: 
   line 29: 0
   line 21: 7
   line 30: 11
   line 29: 15
   line 21: 34
   line 31: 38
   line 29: 42
   line 21: 61
   line 32: 65
   line 29: 69
   line 21: 88
   line 33: 92
   line 29: 97
   line 21: 116
   line 34: 120
   line 29: 124
   line 21: 143
   line 35: 147
   line 29: 152
   line 21: 171
   line 36: 175
   line 29: 179
   line 21: 198
   line 37: 202
   line 29: 206
   line 21: 225
   line 38: 229
   line 29: 233
   line 21: 245
   line 39: 249
   line 29: 250

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      263      0    this       Lscala/util/JenkinsHash$;
   0      263      1    v       Ljava/lang/Object;


public final long MAX_VALUE();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	ldc2_w	#202; //long 4294967295l
   3:	lreturn
  LineNumberTable: 
   line 27: 0


public long hash$default$2();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	lconst_0
   1:	lreturn
  LineNumberTable: 
   line 142: 0


}

