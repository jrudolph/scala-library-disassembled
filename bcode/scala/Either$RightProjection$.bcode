Compiled from "Either.scala"
public final class scala.Either$RightProjection$ extends java.lang.Object implements scala.ScalaObject
  SourceFile: "Either.scala"
  Scala: length = 0x
   
  InnerClass: 
   public final #46= #23 of #45; //RightProjection=class scala/Either$RightProjection of class scala/Either
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Either.scala;
const #3 = Asciz	Scala;
const #4 = Asciz	MODULE$;
const #5 = Asciz	Lscala/Either$RightProjection$;;
const #6 = Asciz	<clinit>;
const #7 = Asciz	()V;
const #8 = Asciz	Code;
const #9 = Asciz	scala/Either$RightProjection$;
const #10 = class	#9;	//  scala/Either$RightProjection$
const #11 = Asciz	<init>;
const #12 = NameAndType	#11:#7;//  "<init>":()V
const #13 = Method	#10.#12;	//  scala/Either$RightProjection$."<init>":()V
const #14 = Asciz	LineNumberTable;
const #15 = Asciz	java/lang/Object;
const #16 = class	#15;	//  java/lang/Object
const #17 = Method	#16.#12;	//  java/lang/Object."<init>":()V
const #18 = NameAndType	#4:#5;//  MODULE$:Lscala/Either$RightProjection$;
const #19 = Field	#10.#18;	//  scala/Either$RightProjection$.MODULE$:Lscala/Either$RightProjection$;
const #20 = Asciz	apply;
const #21 = Asciz	(Lscala/Either;)Lscala/Either$RightProjection;;
const #22 = Asciz	scala/Either$RightProjection;
const #23 = class	#22;	//  scala/Either$RightProjection
const #24 = Asciz	(Lscala/Either;)V;
const #25 = NameAndType	#11:#24;//  "<init>":(Lscala/Either;)V
const #26 = Method	#23.#25;	//  scala/Either$RightProjection."<init>":(Lscala/Either;)V
const #27 = Asciz	this;
const #28 = Asciz	e;
const #29 = Asciz	Lscala/Either;;
const #30 = Asciz	LocalVariableTable;
const #31 = Asciz	unapply;
const #32 = Asciz	(Lscala/Either$RightProjection;)Lscala/Some;;
const #33 = Asciz	scala/Some;
const #34 = class	#33;	//  scala/Some
const #35 = Asciz	()Lscala/Either;;
const #36 = NameAndType	#28:#35;//  e:()Lscala/Either;
const #37 = Method	#23.#36;	//  scala/Either$RightProjection.e:()Lscala/Either;
const #38 = Asciz	(Ljava/lang/Object;)V;
const #39 = NameAndType	#11:#38;//  "<init>":(Ljava/lang/Object;)V
const #40 = Method	#34.#39;	//  scala/Some."<init>":(Ljava/lang/Object;)V
const #41 = Asciz	x$0;
const #42 = Asciz	Lscala/Either$RightProjection;;
const #43 = Asciz	InnerClasses;
const #44 = Asciz	scala/Either;
const #45 = class	#44;	//  scala/Either
const #46 = Asciz	RightProjection;
const #47 = Asciz	scala/ScalaObject;
const #48 = class	#47;	//  scala/ScalaObject

{
public static final scala.Either$RightProjection$ MODULE$;

public static {};
  Code:
   Stack=1, Locals=0, Args_size=0
   0:	new	#10; //class scala/Either$RightProjection$
   3:	invokespecial	#13; //Method "<init>":()V
   6:	return

public scala.Either$RightProjection$();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokespecial	#17; //Method java/lang/Object."<init>":()V
   4:	aload_0
   5:	putstatic	#19; //Field MODULE$:Lscala/Either$RightProjection$;
   8:	return
  LineNumberTable: 
   line 220: 0


public scala.Either$RightProjection apply(scala.Either);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	new	#23; //class scala/Either$RightProjection
   3:	dup
   4:	aload_1
   5:	invokespecial	#26; //Method scala/Either$RightProjection."<init>":(Lscala/Either;)V
   8:	areturn
  LineNumberTable: 
   line 220: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/Either$RightProjection$;
   0      9      1    e       Lscala/Either;


public scala.Some unapply(scala.Either$RightProjection);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	new	#34; //class scala/Some
   3:	dup
   4:	aload_1
   5:	invokevirtual	#37; //Method scala/Either$RightProjection.e:()Lscala/Either;
   8:	invokespecial	#40; //Method scala/Some."<init>":(Ljava/lang/Object;)V
   11:	areturn
  LineNumberTable: 
   line 220: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      12      0    this       Lscala/Either$RightProjection$;
   0      12      1    x$0       Lscala/Either$RightProjection;


}

