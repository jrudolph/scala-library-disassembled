Compiled from "Invocation.scala"
public class scala.reflect.Invocation$RichSymbol extends java.lang.Object implements scala.ScalaObject
  SourceFile: "Invocation.scala"
  Scala: length = 0x
   
  InnerClass: 
   public #36= #10 of #35; //RichSymbol=class scala/reflect/Invocation$RichSymbol of class scala/reflect/Invocation
   public #37= #24 of #35; //SymbolWithArguments=class scala/reflect/Invocation$SymbolWithArguments of class scala/reflect/Invocation
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Invocation.scala;
const #3 = Asciz	sym;
const #4 = Asciz	Lscala/Symbol;;
const #5 = Asciz	<init>;
const #6 = Asciz	(Lscala/Symbol;)V;
const #7 = Asciz	Code;
const #8 = Asciz	LineNumberTable;
const #9 = Asciz	scala/reflect/Invocation$RichSymbol;
const #10 = class	#9;	//  scala/reflect/Invocation$RichSymbol
const #11 = NameAndType	#3:#4;//  sym:Lscala/Symbol;
const #12 = Field	#10.#11;	//  scala/reflect/Invocation$RichSymbol.sym:Lscala/Symbol;
const #13 = Asciz	java/lang/Object;
const #14 = class	#13;	//  java/lang/Object
const #15 = Asciz	()V;
const #16 = NameAndType	#5:#15;//  "<init>":()V
const #17 = Method	#14.#16;	//  java/lang/Object."<init>":()V
const #18 = Asciz	this;
const #19 = Asciz	Lscala/reflect/Invocation$RichSymbol;;
const #20 = Asciz	LocalVariableTable;
const #21 = Asciz	apply;
const #22 = Asciz	(Lscala/collection/Sequence;)Lscala/reflect/Invocation$SymbolWithArguments;;
const #23 = Asciz	scala/reflect/Invocation$SymbolWithArguments;
const #24 = class	#23;	//  scala/reflect/Invocation$SymbolWithArguments
const #25 = Asciz	(Lscala/Symbol;Lscala/collection/Sequence;)V;
const #26 = NameAndType	#5:#25;//  "<init>":(Lscala/Symbol;Lscala/collection/Sequence;)V
const #27 = Method	#24.#26;	//  scala/reflect/Invocation$SymbolWithArguments."<init>":(Lscala/Symbol;Lscala/collection/Sequence;)V
const #28 = Asciz	args;
const #29 = Asciz	Lscala/collection/Sequence;;
const #30 = Asciz	(Lscala/collection/Sequence<Lscala/reflect/Invocation$PrimitivePreserver<*>;>;)Lscala/reflect/Invocation$SymbolWithArguments;;
const #31 = Asciz	Signature;
const #32 = Asciz	Scala;
const #33 = Asciz	InnerClasses;
const #34 = Asciz	scala/reflect/Invocation;
const #35 = class	#34;	//  scala/reflect/Invocation
const #36 = Asciz	RichSymbol;
const #37 = Asciz	SymbolWithArguments;
const #38 = Asciz	scala/ScalaObject;
const #39 = class	#38;	//  scala/ScalaObject

{
public scala.reflect.Invocation$RichSymbol(scala.Symbol);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	putfield	#12; //Field sym:Lscala/Symbol;
   5:	aload_0
   6:	invokespecial	#17; //Method java/lang/Object."<init>":()V
   9:	return
  LineNumberTable: 
   line 93: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    this       Lscala/reflect/Invocation$RichSymbol;
   0      10      1    sym       Lscala/Symbol;


public scala.reflect.Invocation$SymbolWithArguments apply(scala.collection.Sequence);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#24; //class scala/reflect/Invocation$SymbolWithArguments
   3:	dup
   4:	aload_0
   5:	getfield	#12; //Field sym:Lscala/Symbol;
   8:	aload_1
   9:	invokespecial	#27; //Method scala/reflect/Invocation$SymbolWithArguments."<init>":(Lscala/Symbol;Lscala/collection/Sequence;)V
   12:	areturn
  LineNumberTable: 
   line 95: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      13      0    this       Lscala/reflect/Invocation$RichSymbol;
   0      13      1    args       Lscala/collection/Sequence;

  Signature: length = 0x2
   00 1E 

}

