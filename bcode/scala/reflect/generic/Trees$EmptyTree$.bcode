Compiled from "Trees.scala"
public final class scala.reflect.generic.Trees$EmptyTree$ extends scala.reflect.generic.Trees$Tree implements scala.reflect.generic.Trees$TermTree,scala.ScalaObject,scala.Product,java.io.Serializable
  SourceFile: "Trees.scala"
  Scala: length = 0x
   
  InnerClass: 
   public abstract Tree=class scala/reflect/generic/Trees$Tree of class scala/reflect/generic/Trees
   public abstract AbsType=class scala/reflect/generic/Types$AbsType of class scala/reflect/generic/Types
   public abstract TermTree=class scala/reflect/generic/Trees$TermTree of class scala/reflect/generic/Trees
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	Trees.scala;
Asciz	Scala;
Asciz	tpe_$eq;
Asciz	(Lscala/reflect/generic/Types$AbsType;)V;
Asciz	Code;
Asciz	LineNumberTable;
Asciz	scala/reflect/generic/Trees$Tree;
class	scala/reflect/generic/Trees$Tree
Asciz	$outer;
Asciz	Lscala/reflect/generic/Universe;;
NameAndType	$outer:Lscala/reflect/generic/Universe;
Field	scala/reflect/generic/Trees$Tree.$outer:Lscala/reflect/generic/Universe;
Asciz	scala/reflect/generic/Types;
class	scala/reflect/generic/Types
Asciz	NoType;
Asciz	()Lscala/reflect/generic/Types$AbsType;;
NameAndType	NoType:()Lscala/reflect/generic/Types$AbsType;
InterfaceMethod	scala/reflect/generic/Types.NoType:()Lscala/reflect/generic/Types$AbsType;
Asciz	java/lang/Object;
class	java/lang/Object
Asciz	equals;
Asciz	(Ljava/lang/Object;)Z;
NameAndType	equals:(Ljava/lang/Object;)Z
Method	java/lang/Object.equals:(Ljava/lang/Object;)Z
Asciz	java/lang/UnsupportedOperationException;
class	java/lang/UnsupportedOperationException
Asciz	scala/collection/mutable/StringBuilder;
class	scala/collection/mutable/StringBuilder
Asciz	<init>;
Asciz	()V;
NameAndType	"<init>":()V
Method	scala/collection/mutable/StringBuilder."<init>":()V
Asciz	tpe_=(;
String	tpe_=(
Asciz	append;
Asciz	(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;;
NameAndType	append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
Method	scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
Asciz	) inapplicable for <empty>;
String	) inapplicable for <empty>
Asciz	toString;
Asciz	()Ljava/lang/String;;
NameAndType	toString:()Ljava/lang/String;
Method	scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
Asciz	(Ljava/lang/String;)V;
NameAndType	"<init>":(Ljava/lang/String;)V
Method	java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
Asciz	this;
Asciz	Lscala/reflect/generic/Trees$EmptyTree$;;
Asciz	t;
Asciz	Lscala/reflect/generic/Types$AbsType;;
Asciz	LocalVariableTable;
Asciz	isEmpty;
Asciz	()Z;
Asciz	productPrefix;
Asciz	EmptyTree;
String	EmptyTree
Asciz	productArity;
Asciz	()I;
Asciz	productElement;
Asciz	(I)Ljava/lang/Object;;
Asciz	java/lang/IndexOutOfBoundsException;
class	java/lang/IndexOutOfBoundsException
Asciz	scala/runtime/BoxesRunTime;
class	scala/runtime/BoxesRunTime
Asciz	boxToInteger;
Asciz	(I)Ljava/lang/Integer;;
NameAndType	boxToInteger:(I)Ljava/lang/Integer;
Method	scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
Method	java/lang/Object.toString:()Ljava/lang/String;
Method	java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
Asciz	canEqual;
Asciz	scala/reflect/generic/Trees$EmptyTree$;
class	scala/reflect/generic/Trees$EmptyTree$
Asciz	readResolve;
Asciz	()Ljava/lang/Object;;
Asciz	scala$reflect$generic$Trees$EmptyTree$$$outer;
Asciz	()Lscala/reflect/generic/Universe;;
NameAndType	scala$reflect$generic$Trees$EmptyTree$$$outer:()Lscala/reflect/generic/Universe;
Method	scala/reflect/generic/Trees$EmptyTree$.scala$reflect$generic$Trees$EmptyTree$$$outer:()Lscala/reflect/generic/Universe;
Asciz	scala/reflect/generic/Trees;
class	scala/reflect/generic/Trees
Asciz	()Lscala/reflect/generic/Trees$EmptyTree$;;
NameAndType	EmptyTree:()Lscala/reflect/generic/Trees$EmptyTree$;
InterfaceMethod	scala/reflect/generic/Trees.EmptyTree:()Lscala/reflect/generic/Trees$EmptyTree$;
Asciz	(Lscala/reflect/generic/Universe;)V;
NameAndType	"<init>":(Lscala/reflect/generic/Universe;)V
Method	scala/reflect/generic/Trees$Tree."<init>":(Lscala/reflect/generic/Universe;)V
NameAndType	tpe_$eq:(Lscala/reflect/generic/Types$AbsType;)V
Method	scala/reflect/generic/Trees$Tree.tpe_$eq:(Lscala/reflect/generic/Types$AbsType;)V
Asciz	InnerClasses;
Asciz	Tree;
Asciz	scala/reflect/generic/Types$AbsType;
class	scala/reflect/generic/Types$AbsType
Asciz	AbsType;
Asciz	scala/reflect/generic/Trees$TermTree;
class	scala/reflect/generic/Trees$TermTree
Asciz	TermTree;
Asciz	scala/ScalaObject;
class	scala/ScalaObject
Asciz	scala/Product;
class	scala/Product
Asciz	java/io/Serializable;
class	java/io/Serializable

{
public void tpe_$eq(scala.reflect.generic.Types$AbsType);
  Signature: (Lscala/reflect/generic/Types$AbsType;)V
  Code:
   Stack=4, Locals=3, Args_size=2
	aload_1
	aload_0
	getfield	Field scala/reflect/generic/Trees$Tree.$outer:Lscala/reflect/generic/Universe;
	invokeinterface	InterfaceMethod scala/reflect/generic/Types.NoType:()Lscala/reflect/generic/Types$AbsType;
	astore_2
	dup
	ifnonnull	l1 // aload_2
	pop
	aload_2
	ifnull	l2 // return
	goto	l3 // new
l1	aload_2
	invokevirtual	Method java/lang/Object.equals:(Ljava/lang/Object;)Z
	ifeq	l3 // new
l2	return
l3	new	class java/lang/UnsupportedOperationException
	dup
	new	class scala/collection/mutable/StringBuilder
	dup
	invokespecial	Method scala/collection/mutable/StringBuilder."<init>":()V
	ldc	String tpe_=(
	invokevirtual	Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
	aload_1
	invokevirtual	Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
	ldc	String ) inapplicable for <empty>
	invokevirtual	Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
	invokevirtual	Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
	invokespecial	Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
	athrow
  Labels:
   	l1 = 23 // aload_2
   	l2 = 30 // return
   	l3 = 31 // new
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      63      0    this       Lscala/reflect/generic/Trees$EmptyTree$;
   0      63      1    t       Lscala/reflect/generic/Types$AbsType;


public boolean isEmpty();
  Signature: ()Z
  Code:
   Stack=1, Locals=1, Args_size=1
	iconst_1
	ireturn
  Labels:

public java.lang.String productPrefix();
  Signature: ()Ljava/lang/String;
  Code:
   Stack=1, Locals=1, Args_size=1
	ldc	String EmptyTree
	areturn
  Labels:

public int productArity();
  Signature: ()I
  Code:
   Stack=1, Locals=1, Args_size=1
	iconst_0
	ireturn
  Labels:

public java.lang.Object productElement(int);
  Signature: (I)Ljava/lang/Object;
  Code:
   Stack=3, Locals=2, Args_size=2
	new	class java/lang/IndexOutOfBoundsException
	dup
	iload_1
	invokestatic	Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
	invokevirtual	Method java/lang/Object.toString:()Ljava/lang/String;
	invokespecial	Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
	athrow
  Labels:

public boolean canEqual(java.lang.Object);
  Signature: (Ljava/lang/Object;)Z
  Code:
   Stack=1, Locals=2, Args_size=2
	aload_1
	instanceof	class scala/reflect/generic/Trees$EmptyTree$
	ireturn
  Labels:

public java.lang.Object readResolve();
  Signature: ()Ljava/lang/Object;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokevirtual	Method scala$reflect$generic$Trees$EmptyTree$$$outer:()Lscala/reflect/generic/Universe;
	invokeinterface	InterfaceMethod scala/reflect/generic/Trees.EmptyTree:()Lscala/reflect/generic/Trees$EmptyTree$;
	areturn
  Labels:

public scala.reflect.generic.Universe scala$reflect$generic$Trees$EmptyTree$$$outer();
  Signature: ()Lscala/reflect/generic/Universe;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field scala/reflect/generic/Trees$Tree.$outer:Lscala/reflect/generic/Universe;
	areturn
  Labels:

public scala.reflect.generic.Trees$EmptyTree$(scala.reflect.generic.Universe);
  Signature: (Lscala/reflect/generic/Universe;)V
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokespecial	Method scala/reflect/generic/Trees$Tree."<init>":(Lscala/reflect/generic/Universe;)V
	aload_0
	aload_1
	invokeinterface	InterfaceMethod scala/reflect/generic/Types.NoType:()Lscala/reflect/generic/Types$AbsType;
	invokespecial	Method scala/reflect/generic/Trees$Tree.tpe_$eq:(Lscala/reflect/generic/Types$AbsType;)V
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      16      0    this       Lscala/reflect/generic/Trees$EmptyTree$;
   0      16      1    $outer       Lscala/reflect/generic/Universe;


}

