Compiled from "Trees.scala"
public abstract class scala.reflect.generic.Trees$GenericApply extends scala.reflect.generic.Trees$Tree implements scala.reflect.generic.Trees$TermTree,scala.ScalaObject
  SourceFile: "Trees.scala"
  Scala: length = 0x
   
  InnerClass: 
   public abstract Tree=class scala/reflect/generic/Trees$Tree of class scala/reflect/generic/Trees
   public abstract TermTree=class scala/reflect/generic/Trees$TermTree of class scala/reflect/generic/Trees
   public abstract GenericApply=class scala/reflect/generic/Trees$GenericApply of class scala/reflect/generic/Trees
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	Trees.scala;
Asciz	fun;
Asciz	()Lscala/reflect/generic/Trees$Tree;;
Asciz	args;
Asciz	()Lscala/collection/immutable/List;;
Asciz	()Lscala/collection/immutable/List<Lscala/reflect/generic/Trees$Tree;>;;
Asciz	Signature;
Asciz	scala$reflect$generic$Trees$GenericApply$$$outer;
Asciz	()Lscala/reflect/generic/Universe;;
Asciz	Code;
Asciz	LineNumberTable;
Asciz	scala/reflect/generic/Trees$Tree;
class	scala/reflect/generic/Trees$Tree
Asciz	$outer;
Asciz	Lscala/reflect/generic/Universe;;
NameAndType	$outer:Lscala/reflect/generic/Universe;
Field	scala/reflect/generic/Trees$Tree.$outer:Lscala/reflect/generic/Universe;
Asciz	<init>;
Asciz	(Lscala/reflect/generic/Universe;)V;
NameAndType	"<init>":(Lscala/reflect/generic/Universe;)V
Method	scala/reflect/generic/Trees$Tree."<init>":(Lscala/reflect/generic/Universe;)V
Asciz	this;
Asciz	Lscala/reflect/generic/Trees$GenericApply;;
Asciz	LocalVariableTable;
Asciz	Scala;
Asciz	InnerClasses;
Asciz	scala/reflect/generic/Trees;
class	scala/reflect/generic/Trees
Asciz	Tree;
Asciz	scala/reflect/generic/Trees$TermTree;
class	scala/reflect/generic/Trees$TermTree
Asciz	TermTree;
Asciz	scala/reflect/generic/Trees$GenericApply;
class	scala/reflect/generic/Trees$GenericApply
Asciz	GenericApply;
Asciz	scala/ScalaObject;
class	scala/ScalaObject

{
public abstract scala.reflect.generic.Trees$Tree fun();
  Signature: ()Lscala/reflect/generic/Trees$Tree;

public abstract scala.collection.immutable.List args();
  Signature: ()Lscala/collection/immutable/List;
  Signature: length = 0x2
   00 07 

public scala.reflect.generic.Universe scala$reflect$generic$Trees$GenericApply$$$outer();
  Signature: ()Lscala/reflect/generic/Universe;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field scala/reflect/generic/Trees$Tree.$outer:Lscala/reflect/generic/Universe;
	areturn
  Labels:

public scala.reflect.generic.Trees$GenericApply(scala.reflect.generic.Universe);
  Signature: (Lscala/reflect/generic/Universe;)V
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokespecial	Method scala/reflect/generic/Trees$Tree."<init>":(Lscala/reflect/generic/Universe;)V
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/reflect/generic/Trees$GenericApply;
   0      6      1    $outer       Lscala/reflect/generic/Universe;


}

