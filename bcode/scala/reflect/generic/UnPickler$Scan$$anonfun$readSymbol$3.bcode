Compiled from "UnPickler.scala"
public final class scala.reflect.generic.UnPickler$Scan$$anonfun$readSymbol$3 extends scala.runtime.AbstractFunction0 implements java.io.Serializable
  SourceFile: "UnPickler.scala"
  Scala: length = 0x
   
  InnerClass: 
   public abstract Scan=class scala/reflect/generic/UnPickler$Scan of class scala/reflect/generic/UnPickler
   public abstract AbsSymbol=class scala/reflect/generic/Symbols$AbsSymbol of class scala/reflect/generic/Symbols
   public final $anonfun$readSymbol$3=class scala/reflect/generic/UnPickler$Scan$$anonfun$readSymbol$3 of class scala/reflect/generic/UnPickler$Scan
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	UnPickler.scala;
Asciz	<clinit>;
Asciz	()V;
Asciz	Code;
Asciz	serialVersionUID;
Asciz	J;
Asciz	scala/reflect/generic/UnPickler$Scan$$anonfun$readSymbol$3;
class	scala/reflect/generic/UnPickler$Scan$$anonfun$readSymbol$3
NameAndType	serialVersionUID:J
Field	scala/reflect/generic/UnPickler$Scan$$anonfun$readSymbol$3.serialVersionUID:J
Asciz	sym$1;
Asciz	Lscala/runtime/ObjectRef;;
Asciz	apply;
Asciz	()Lscala/reflect/generic/Symbols$AbsSymbol;;
Asciz	LineNumberTable;
NameAndType	sym$1:Lscala/runtime/ObjectRef;
Field	scala/reflect/generic/UnPickler$Scan$$anonfun$readSymbol$3.sym$1:Lscala/runtime/ObjectRef;
Asciz	scala/runtime/ObjectRef;
class	scala/runtime/ObjectRef
Asciz	elem;
Asciz	Ljava/lang/Object;;
NameAndType	elem:Ljava/lang/Object;
Field	scala/runtime/ObjectRef.elem:Ljava/lang/Object;
Asciz	scala/reflect/generic/Symbols$AbsSymbol;
class	scala/reflect/generic/Symbols$AbsSymbol
Asciz	()Ljava/lang/Object;;
NameAndType	apply:()Lscala/reflect/generic/Symbols$AbsSymbol;
Method	scala/reflect/generic/UnPickler$Scan$$anonfun$readSymbol$3.apply:()Lscala/reflect/generic/Symbols$AbsSymbol;
Asciz	<init>;
Asciz	(Lscala/reflect/generic/UnPickler$Scan;Lscala/runtime/ObjectRef;)V;
Asciz	scala/runtime/AbstractFunction0;
class	scala/runtime/AbstractFunction0
NameAndType	"<init>":()V
Method	scala/runtime/AbstractFunction0."<init>":()V
Asciz	this;
Asciz	Lscala/reflect/generic/UnPickler$Scan$$anonfun$readSymbol$3;;
Asciz	$outer;
Asciz	Lscala/reflect/generic/UnPickler$Scan;;
Asciz	LocalVariableTable;
Asciz	Scala;
Asciz	InnerClasses;
Asciz	scala/reflect/generic/UnPickler$Scan;
class	scala/reflect/generic/UnPickler$Scan
Asciz	scala/reflect/generic/UnPickler;
class	scala/reflect/generic/UnPickler
Asciz	Scan;
Asciz	scala/reflect/generic/Symbols;
class	scala/reflect/generic/Symbols
Asciz	AbsSymbol;
Asciz	$anonfun$readSymbol$3;
Asciz	java/io/Serializable;
class	java/io/Serializable

{
public static final long serialVersionUID;
  Signature: J

private final scala.runtime.ObjectRef sym$1;
  Signature: Lscala/runtime/ObjectRef;

public static {};
  Signature: ()V
  Code:
   Stack=2, Locals=0, Args_size=0
	lconst_0
	putstatic	Field serialVersionUID:J
	return
  Labels:

public final scala.reflect.generic.Symbols$AbsSymbol apply();
  Signature: ()Lscala/reflect/generic/Symbols$AbsSymbol;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field sym$1:Lscala/runtime/ObjectRef;
	getfield	Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
	checkcast	class scala/reflect/generic/Symbols$AbsSymbol
	areturn
  Labels:

public final java.lang.Object apply();
  Signature: ()Ljava/lang/Object;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokevirtual	Method apply:()Lscala/reflect/generic/Symbols$AbsSymbol;
	areturn
  Labels:

public scala.reflect.generic.UnPickler$Scan$$anonfun$readSymbol$3(scala.reflect.generic.UnPickler$Scan, scala.runtime.ObjectRef);
  Signature: (Lscala/reflect/generic/UnPickler$Scan;Lscala/runtime/ObjectRef;)V
  Code:
   Stack=2, Locals=3, Args_size=3
	aload_0
	aload_2
	putfield	Field sym$1:Lscala/runtime/ObjectRef;
	aload_0
	invokespecial	Method scala/runtime/AbstractFunction0."<init>":()V
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    this       Lscala/reflect/generic/UnPickler$Scan$$anonfun$readSymbol$3;
   0      10      1    $outer       Lscala/reflect/generic/UnPickler$Scan;


}

