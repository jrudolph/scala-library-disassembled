Compiled from "Trees.scala"
public final class scala.reflect.generic.Trees$Traverser$$anonfun$traverseStats$1 extends scala.runtime.AbstractFunction1 implements java.io.Serializable
  SourceFile: "Trees.scala"
  Scala: length = 0x
   
  InnerClass: 
   public abstract Tree=class scala/reflect/generic/Trees$Tree of class scala/reflect/generic/Trees
   public Traverser=class scala/reflect/generic/Trees$Traverser of class scala/reflect/generic/Trees
   public abstract AbsSymbol=class scala/reflect/generic/Symbols$AbsSymbol of class scala/reflect/generic/Symbols
   public final $anonfun$traverseStats$1=class scala/reflect/generic/Trees$Traverser$$anonfun$traverseStats$1 of class scala/reflect/generic/Trees$Traverser
   public final $anonfun$apply$1=class scala/reflect/generic/Trees$Traverser$$anonfun$traverseStats$1$$anonfun$apply$1 of class scala/reflect/generic/Trees$Traverser$$anonfun$traverseStats$1
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	Trees.scala;
Asciz	<clinit>;
Asciz	()V;
Asciz	Code;
Asciz	serialVersionUID;
Asciz	J;
Asciz	scala/reflect/generic/Trees$Traverser$$anonfun$traverseStats$1;
class	scala/reflect/generic/Trees$Traverser$$anonfun$traverseStats$1
NameAndType	serialVersionUID:J
Field	scala/reflect/generic/Trees$Traverser$$anonfun$traverseStats$1.serialVersionUID:J
Asciz	$outer;
Asciz	Lscala/reflect/generic/Trees$Traverser;;
Asciz	exprOwner$1;
Asciz	Lscala/reflect/generic/Symbols$AbsSymbol;;
Asciz	apply;
Asciz	(Lscala/reflect/generic/Trees$Tree;)V;
Asciz	LineNumberTable;
NameAndType	exprOwner$1:Lscala/reflect/generic/Symbols$AbsSymbol;
Field	scala/reflect/generic/Trees$Traverser$$anonfun$traverseStats$1.exprOwner$1:Lscala/reflect/generic/Symbols$AbsSymbol;
NameAndType	$outer:Lscala/reflect/generic/Trees$Traverser;
Field	scala/reflect/generic/Trees$Traverser$$anonfun$traverseStats$1.$outer:Lscala/reflect/generic/Trees$Traverser;
Asciz	scala/reflect/generic/Trees$Traverser;
class	scala/reflect/generic/Trees$Traverser
Asciz	currentOwner;
Asciz	()Lscala/reflect/generic/Symbols$AbsSymbol;;
NameAndType	currentOwner:()Lscala/reflect/generic/Symbols$AbsSymbol;
Method	scala/reflect/generic/Trees$Traverser.currentOwner:()Lscala/reflect/generic/Symbols$AbsSymbol;
Asciz	java/lang/Object;
class	java/lang/Object
Asciz	equals;
Asciz	(Ljava/lang/Object;)Z;
NameAndType	equals:(Ljava/lang/Object;)Z
Method	java/lang/Object.equals:(Ljava/lang/Object;)Z
Asciz	traverse;
NameAndType	traverse:(Lscala/reflect/generic/Trees$Tree;)V
Method	scala/reflect/generic/Trees$Traverser.traverse:(Lscala/reflect/generic/Trees$Tree;)V
Asciz	scala/reflect/generic/Trees$Traverser$$anonfun$traverseStats$1$$anonfun$apply$1;
class	scala/reflect/generic/Trees$Traverser$$anonfun$traverseStats$1$$anonfun$apply$1
Asciz	<init>;
Asciz	(Lscala/reflect/generic/Trees$Traverser$$anonfun$traverseStats$1;Lscala/reflect/generic/Trees$Tree;)V;
NameAndType	"<init>":(Lscala/reflect/generic/Trees$Traverser$$anonfun$traverseStats$1;Lscala/reflect/generic/Trees$Tree;)V
Method	scala/reflect/generic/Trees$Traverser$$anonfun$traverseStats$1$$anonfun$apply$1."<init>":(Lscala/reflect/generic/Trees$Traverser$$anonfun$traverseStats$1;Lscala/reflect/generic/Trees$Tree;)V
Asciz	atOwner;
Asciz	(Lscala/reflect/generic/Symbols$AbsSymbol;Lscala/Function0;)V;
NameAndType	atOwner:(Lscala/reflect/generic/Symbols$AbsSymbol;Lscala/Function0;)V
Method	scala/reflect/generic/Trees$Traverser.atOwner:(Lscala/reflect/generic/Symbols$AbsSymbol;Lscala/Function0;)V
Asciz	this;
Asciz	Lscala/reflect/generic/Trees$Traverser$$anonfun$traverseStats$1;;
Asciz	stat$1;
Asciz	Lscala/reflect/generic/Trees$Tree;;
Asciz	LocalVariableTable;
Asciz	scala$reflect$generic$Trees$Traverser$$anonfun$$$outer;
Asciz	()Lscala/reflect/generic/Trees$Traverser;;
Asciz	(Ljava/lang/Object;)Ljava/lang/Object;;
Asciz	scala/reflect/generic/Trees$Tree;
class	scala/reflect/generic/Trees$Tree
NameAndType	apply:(Lscala/reflect/generic/Trees$Tree;)V
Method	scala/reflect/generic/Trees$Traverser$$anonfun$traverseStats$1.apply:(Lscala/reflect/generic/Trees$Tree;)V
Asciz	scala/runtime/BoxedUnit;
class	scala/runtime/BoxedUnit
Asciz	UNIT;
Asciz	Lscala/runtime/BoxedUnit;;
NameAndType	UNIT:Lscala/runtime/BoxedUnit;
Field	scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
Asciz	v1;
Asciz	Ljava/lang/Object;;
Asciz	(Lscala/reflect/generic/Trees$Traverser;Lscala/reflect/generic/Symbols$AbsSymbol;)V;
Asciz	java/lang/NullPointerException;
class	java/lang/NullPointerException
NameAndType	"<init>":()V
Method	java/lang/NullPointerException."<init>":()V
Asciz	scala/runtime/AbstractFunction1;
class	scala/runtime/AbstractFunction1
Method	scala/runtime/AbstractFunction1."<init>":()V
Asciz	Scala;
Asciz	InnerClasses;
Asciz	scala/reflect/generic/Trees;
class	scala/reflect/generic/Trees
Asciz	Tree;
Asciz	Traverser;
Asciz	scala/reflect/generic/Symbols$AbsSymbol;
class	scala/reflect/generic/Symbols$AbsSymbol
Asciz	scala/reflect/generic/Symbols;
class	scala/reflect/generic/Symbols
Asciz	AbsSymbol;
Asciz	$anonfun$traverseStats$1;
Asciz	$anonfun$apply$1;
Asciz	java/io/Serializable;
class	java/io/Serializable

{
public static final long serialVersionUID;
  Signature: J

public final scala.reflect.generic.Trees$Traverser $outer;
  Signature: Lscala/reflect/generic/Trees$Traverser;

public final scala.reflect.generic.Symbols$AbsSymbol exprOwner$1;
  Signature: Lscala/reflect/generic/Symbols$AbsSymbol;

public static {};
  Signature: ()V
  Code:
   Stack=2, Locals=0, Args_size=0
	lconst_0
	putstatic	Field serialVersionUID:J
	return
  Labels:

public final void apply(scala.reflect.generic.Trees$Tree);
  Signature: (Lscala/reflect/generic/Trees$Tree;)V
  Code:
   Stack=6, Locals=3, Args_size=2
	aload_0
	getfield	Field exprOwner$1:Lscala/reflect/generic/Symbols$AbsSymbol;
	aload_0
	getfield	Field $outer:Lscala/reflect/generic/Trees$Traverser;
	invokevirtual	Method scala/reflect/generic/Trees$Traverser.currentOwner:()Lscala/reflect/generic/Symbols$AbsSymbol;
	astore_2
	dup
	ifnonnull	l1 // aload_2
	pop
	aload_2
	ifnull	l2 // aload_0
	goto	l3 // aload_0
l1	aload_2
	invokevirtual	Method java/lang/Object.equals:(Ljava/lang/Object;)Z
	ifeq	l3 // aload_0
l2	aload_0
	getfield	Field $outer:Lscala/reflect/generic/Trees$Traverser;
	aload_1
	invokevirtual	Method scala/reflect/generic/Trees$Traverser.traverse:(Lscala/reflect/generic/Trees$Tree;)V
	goto	l4 // return
l3	aload_0
	getfield	Field $outer:Lscala/reflect/generic/Trees$Traverser;
	aload_0
	getfield	Field exprOwner$1:Lscala/reflect/generic/Symbols$AbsSymbol;
	new	class scala/reflect/generic/Trees$Traverser$$anonfun$traverseStats$1$$anonfun$apply$1
	dup
	aload_0
	aload_1
	invokespecial	Method scala/reflect/generic/Trees$Traverser$$anonfun$traverseStats$1$$anonfun$apply$1."<init>":(Lscala/reflect/generic/Trees$Traverser$$anonfun$traverseStats$1;Lscala/reflect/generic/Trees$Tree;)V
	invokevirtual	Method scala/reflect/generic/Trees$Traverser.atOwner:(Lscala/reflect/generic/Symbols$AbsSymbol;Lscala/Function0;)V
l4	return
  Labels:
   	l1 = 24 // aload_2
   	l2 = 31 // aload_0
   	l3 = 42 // aload_0
   	l4 = 62 // return
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      63      0    this       Lscala/reflect/generic/Trees$Traverser$$anonfun$traverseStats$1;
   0      63      1    stat$1       Lscala/reflect/generic/Trees$Tree;


public scala.reflect.generic.Trees$Traverser scala$reflect$generic$Trees$Traverser$$anonfun$$$outer();
  Signature: ()Lscala/reflect/generic/Trees$Traverser;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field $outer:Lscala/reflect/generic/Trees$Traverser;
	areturn
  Labels:

public final java.lang.Object apply(java.lang.Object);
  Signature: (Ljava/lang/Object;)Ljava/lang/Object;
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	checkcast	class scala/reflect/generic/Trees$Tree
	invokevirtual	Method apply:(Lscala/reflect/generic/Trees$Tree;)V
	getstatic	Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      12      0    this       Lscala/reflect/generic/Trees$Traverser$$anonfun$traverseStats$1;
   0      12      1    v1       Ljava/lang/Object;


public scala.reflect.generic.Trees$Traverser$$anonfun$traverseStats$1(scala.reflect.generic.Trees$Traverser, scala.reflect.generic.Symbols$AbsSymbol);
  Signature: (Lscala/reflect/generic/Trees$Traverser;Lscala/reflect/generic/Symbols$AbsSymbol;)V
  Code:
   Stack=2, Locals=3, Args_size=3
	aload_1
	ifnonnull	l1 // aload_0
	new	class java/lang/NullPointerException
	dup
	invokespecial	Method java/lang/NullPointerException."<init>":()V
	athrow
l1	aload_0
	aload_1
	putfield	Field $outer:Lscala/reflect/generic/Trees$Traverser;
	aload_0
	aload_2
	putfield	Field exprOwner$1:Lscala/reflect/generic/Symbols$AbsSymbol;
	aload_0
	invokespecial	Method scala/runtime/AbstractFunction1."<init>":()V
	return
  Labels:
   	l1 = 12 // aload_0
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      27      0    this       Lscala/reflect/generic/Trees$Traverser$$anonfun$traverseStats$1;
   0      27      1    $outer       Lscala/reflect/generic/Trees$Traverser;


}

