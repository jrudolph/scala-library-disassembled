Compiled from "RichClass.scala"
public class scala.reflect.RichClass$ReflectiveCall extends java.lang.Object implements scala.ScalaObject
  SourceFile: "RichClass.scala"
  Signature: length = 0x2
   00 79 
  Scala: length = 0x
   
  InnerClass: 
   public #124= #16 of #104; //ReflectiveCall=class scala/reflect/RichClass$ReflectiveCall of class scala/reflect/RichClass
   public final #125= #40 of #16; //$anonfun$1=class scala/reflect/RichClass$ReflectiveCall$$anonfun$1 of class scala/reflect/RichClass$ReflectiveCall
   public final #126= #110 of #16; //$anonfun$methodForArgs$1=class scala/reflect/RichClass$ReflectiveCall$$anonfun$methodForArgs$1 of class scala/reflect/RichClass$ReflectiveCall
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	RichClass.scala;
const #3 = Asciz	$outer;
const #4 = Asciz	Lscala/reflect/RichClass;;
const #5 = Asciz	name;
const #6 = Asciz	Ljava/lang/String;;
const #7 = Asciz	obj;
const #8 = Asciz	Ljava/lang/Object;;
const #9 = Asciz	TT;;
const #10 = Asciz	Signature;
const #11 = Asciz	<init>;
const #12 = Asciz	(Lscala/reflect/RichClass;Ljava/lang/Object;Ljava/lang/String;)V;
const #13 = Asciz	Code;
const #14 = Asciz	LineNumberTable;
const #15 = Asciz	scala/reflect/RichClass$ReflectiveCall;
const #16 = class	#15;	//  scala/reflect/RichClass$ReflectiveCall
const #17 = NameAndType	#7:#8;//  obj:Ljava/lang/Object;
const #18 = Field	#16.#17;	//  scala/reflect/RichClass$ReflectiveCall.obj:Ljava/lang/Object;
const #19 = NameAndType	#5:#6;//  name:Ljava/lang/String;
const #20 = Field	#16.#19;	//  scala/reflect/RichClass$ReflectiveCall.name:Ljava/lang/String;
const #21 = Asciz	java/lang/NullPointerException;
const #22 = class	#21;	//  java/lang/NullPointerException
const #23 = Asciz	()V;
const #24 = NameAndType	#11:#23;//  "<init>":()V
const #25 = Method	#22.#24;	//  java/lang/NullPointerException."<init>":()V
const #26 = NameAndType	#3:#4;//  $outer:Lscala/reflect/RichClass;
const #27 = Field	#16.#26;	//  scala/reflect/RichClass$ReflectiveCall.$outer:Lscala/reflect/RichClass;
const #28 = Asciz	java/lang/Object;
const #29 = class	#28;	//  java/lang/Object
const #30 = Method	#29.#24;	//  java/lang/Object."<init>":()V
const #31 = Asciz	this;
const #32 = Asciz	Lscala/reflect/RichClass$ReflectiveCall;;
const #33 = Asciz	LocalVariableTable;
const #34 = Asciz	(Lscala/reflect/RichClass<TT;>;TT;Ljava/lang/String;)V;
const #35 = Asciz	scala$reflect$RichClass$ReflectiveCall$$$outer;
const #36 = Asciz	()Lscala/reflect/RichClass;;
const #37 = Asciz	apply;
const #38 = Asciz	(Lscala/collection/Sequence;)Ljava/lang/Object;;
const #39 = Asciz	scala/reflect/RichClass$ReflectiveCall$$anonfun$1;
const #40 = class	#39;	//  scala/reflect/RichClass$ReflectiveCall$$anonfun$1
const #41 = Asciz	(Lscala/reflect/RichClass$ReflectiveCall;)V;
const #42 = NameAndType	#11:#41;//  "<init>":(Lscala/reflect/RichClass$ReflectiveCall;)V
const #43 = Method	#40.#42;	//  scala/reflect/RichClass$ReflectiveCall$$anonfun$1."<init>":(Lscala/reflect/RichClass$ReflectiveCall;)V
const #44 = Asciz	scala/collection/Sequence$;
const #45 = class	#44;	//  scala/collection/Sequence$
const #46 = Asciz	MODULE$;
const #47 = Asciz	Lscala/collection/Sequence$;;
const #48 = NameAndType	#46:#47;//  MODULE$:Lscala/collection/Sequence$;
const #49 = Field	#45.#48;	//  scala/collection/Sequence$.MODULE$:Lscala/collection/Sequence$;
const #50 = Asciz	builderFactory;
const #51 = Asciz	()Lscala/collection/generic/BuilderFactory;;
const #52 = NameAndType	#50:#51;//  builderFactory:()Lscala/collection/generic/BuilderFactory;
const #53 = Method	#45.#52;	//  scala/collection/Sequence$.builderFactory:()Lscala/collection/generic/BuilderFactory;
const #54 = Asciz	scala/collection/generic/TraversableTemplate;
const #55 = class	#54;	//  scala/collection/generic/TraversableTemplate
const #56 = Asciz	map;
const #57 = Asciz	(Lscala/Function1;Lscala/collection/generic/BuilderFactory;)Ljava/lang/Object;;
const #58 = NameAndType	#56:#57;//  map:(Lscala/Function1;Lscala/collection/generic/BuilderFactory;)Ljava/lang/Object;
const #59 = InterfaceMethod	#55.#58;	//  scala/collection/generic/TraversableTemplate.map:(Lscala/Function1;Lscala/collection/generic/BuilderFactory;)Ljava/lang/Object;
const #60 = Asciz	scala/collection/Sequence;
const #61 = class	#60;	//  scala/collection/Sequence
const #62 = Asciz	scala/runtime/ScalaRunTime$;
const #63 = class	#62;	//  scala/runtime/ScalaRunTime$
const #64 = Asciz	Lscala/runtime/ScalaRunTime$;;
const #65 = NameAndType	#46:#64;//  MODULE$:Lscala/runtime/ScalaRunTime$;
const #66 = Field	#63.#65;	//  scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
const #67 = Asciz	boxArray;
const #68 = Asciz	(Ljava/lang/Object;)Lscala/runtime/BoxedArray;;
const #69 = NameAndType	#67:#68;//  boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
const #70 = Method	#63.#69;	//  scala/runtime/ScalaRunTime$.boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
const #71 = Asciz	methodForArgs;
const #72 = Asciz	(Lscala/collection/Sequence;)Ljava/lang/reflect/Method;;
const #73 = NameAndType	#71:#72;//  methodForArgs:(Lscala/collection/Sequence;)Ljava/lang/reflect/Method;
const #74 = Method	#16.#73;	//  scala/reflect/RichClass$ReflectiveCall.methodForArgs:(Lscala/collection/Sequence;)Ljava/lang/reflect/Method;
const #75 = Asciz	toArray;
const #76 = Asciz	()Lscala/runtime/BoxedArray;;
const #77 = NameAndType	#75:#76;//  toArray:()Lscala/runtime/BoxedArray;
const #78 = InterfaceMethod	#55.#77;	//  scala/collection/generic/TraversableTemplate.toArray:()Lscala/runtime/BoxedArray;
const #79 = Asciz	arrayValue;
const #80 = Asciz	(Lscala/runtime/BoxedArray;Ljava/lang/Class;)Ljava/lang/Object;;
const #81 = NameAndType	#79:#80;//  arrayValue:(Lscala/runtime/BoxedArray;Ljava/lang/Class;)Ljava/lang/Object;
const #82 = Method	#63.#81;	//  scala/runtime/ScalaRunTime$.arrayValue:(Lscala/runtime/BoxedArray;Ljava/lang/Class;)Ljava/lang/Object;
const #83 = Asciz	scala/runtime/BoxedArray;
const #84 = class	#83;	//  scala/runtime/BoxedArray
const #85 = Asciz	[Ljava/lang/Object;;
const #86 = class	#85;	//  "[Ljava/lang/Object;"
const #87 = Asciz	java/lang/reflect/Method;
const #88 = class	#87;	//  java/lang/reflect/Method
const #89 = Asciz	invoke;
const #90 = Asciz	(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;;
const #91 = NameAndType	#89:#90;//  invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
const #92 = Method	#88.#91;	//  java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
const #93 = Asciz	args;
const #94 = Asciz	Lscala/collection/Sequence;;
const #95 = Asciz	ps;
const #96 = Asciz	m;
const #97 = Asciz	Ljava/lang/reflect/Method;;
const #98 = Asciz	(Lscala/collection/Sequence<Ljava/lang/Object;>;)TU;;
const #99 = Asciz	isErroneous;
const #100 = Asciz	()Z;
const #101 = NameAndType	#35:#36;//  scala$reflect$RichClass$ReflectiveCall$$$outer:()Lscala/reflect/RichClass;
const #102 = Method	#16.#101;	//  scala/reflect/RichClass$ReflectiveCall.scala$reflect$RichClass$ReflectiveCall$$$outer:()Lscala/reflect/RichClass;
const #103 = Asciz	scala/reflect/RichClass;
const #104 = class	#103;	//  scala/reflect/RichClass
const #105 = Asciz	self;
const #106 = Asciz	()Ljava/lang/Class;;
const #107 = NameAndType	#105:#106;//  self:()Ljava/lang/Class;
const #108 = Method	#104.#107;	//  scala/reflect/RichClass.self:()Ljava/lang/Class;
const #109 = Asciz	scala/reflect/RichClass$ReflectiveCall$$anonfun$methodForArgs$1;
const #110 = class	#109;	//  scala/reflect/RichClass$ReflectiveCall$$anonfun$methodForArgs$1
const #111 = Method	#110.#42;	//  scala/reflect/RichClass$ReflectiveCall$$anonfun$methodForArgs$1."<init>":(Lscala/reflect/RichClass$ReflectiveCall;)V
const #112 = Asciz	java/lang/Class;
const #113 = class	#112;	//  java/lang/Class
const #114 = Asciz	[Ljava/lang/Class;;
const #115 = class	#114;	//  "[Ljava/lang/Class;"
const #116 = Asciz	getMethod;
const #117 = Asciz	(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;;
const #118 = NameAndType	#116:#117;//  getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
const #119 = Method	#113.#118;	//  java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
const #120 = Asciz	(Lscala/collection/Sequence<Ljava/lang/Object;>;)Ljava/lang/reflect/Method;;
const #121 = Asciz	<U:Ljava/lang/Object;>Ljava/lang/Object;Lscala/ScalaObject;;
const #122 = Asciz	Scala;
const #123 = Asciz	InnerClasses;
const #124 = Asciz	ReflectiveCall;
const #125 = Asciz	$anonfun$1;
const #126 = Asciz	$anonfun$methodForArgs$1;
const #127 = Asciz	scala/ScalaObject;
const #128 = class	#127;	//  scala/ScalaObject

{
public final scala.reflect.RichClass $outer;

public scala.reflect.RichClass$ReflectiveCall(scala.reflect.RichClass, java.lang.Object, java.lang.String);
  Code:
   Stack=2, Locals=4, Args_size=4
   0:	aload_0
   1:	aload_2
   2:	putfield	#18; //Field obj:Ljava/lang/Object;
   5:	aload_0
   6:	aload_3
   7:	putfield	#20; //Field name:Ljava/lang/String;
   10:	aload_1
   11:	ifnonnull	22
   14:	new	#22; //class java/lang/NullPointerException
   17:	dup
   18:	invokespecial	#25; //Method java/lang/NullPointerException."<init>":()V
   21:	athrow
   22:	aload_0
   23:	aload_1
   24:	putfield	#27; //Field $outer:Lscala/reflect/RichClass;
   27:	aload_0
   28:	invokespecial	#30; //Method java/lang/Object."<init>":()V
   31:	return
  LineNumberTable: 
   line 69: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      32      0    this       Lscala/reflect/RichClass$ReflectiveCall;
   0      32      1    $outer       Lscala/reflect/RichClass;
   0      32      2    obj       Ljava/lang/Object;
   0      32      3    name       Ljava/lang/String;

  Signature: length = 0x2
   00 22 

public scala.reflect.RichClass scala$reflect$RichClass$ReflectiveCall$$$outer();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#27; //Field $outer:Lscala/reflect/RichClass;
   4:	areturn
  LineNumberTable: 
   line 69: 0


public java.lang.Object apply(scala.collection.Sequence);
  Code:
   Stack=5, Locals=6, Args_size=2
   0:	aload_1
   1:	new	#40; //class scala/reflect/RichClass$ReflectiveCall$$anonfun$1
   4:	dup
   5:	aload_0
   6:	invokespecial	#43; //Method scala/reflect/RichClass$ReflectiveCall$$anonfun$1."<init>":(Lscala/reflect/RichClass$ReflectiveCall;)V
   9:	getstatic	#49; //Field scala/collection/Sequence$.MODULE$:Lscala/collection/Sequence$;
   12:	invokevirtual	#53; //Method scala/collection/Sequence$.builderFactory:()Lscala/collection/generic/BuilderFactory;
   15:	invokeinterface	#59,  3; //InterfaceMethod scala/collection/generic/TraversableTemplate.map:(Lscala/Function1;Lscala/collection/generic/BuilderFactory;)Ljava/lang/Object;
   20:	astore_3
   21:	aload_3
   22:	instanceof	#61; //class scala/collection/Sequence
   25:	ifeq	32
   28:	aload_3
   29:	goto	39
   32:	getstatic	#66; //Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   35:	aload_3
   36:	invokevirtual	#70; //Method scala/runtime/ScalaRunTime$.boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
   39:	checkcast	#61; //class scala/collection/Sequence
   42:	astore_2
   43:	aload_0
   44:	aload_2
   45:	invokevirtual	#74; //Method methodForArgs:(Lscala/collection/Sequence;)Ljava/lang/reflect/Method;
   48:	astore	4
   50:	aload	4
   52:	aload_0
   53:	getfield	#18; //Field obj:Ljava/lang/Object;
   56:	getstatic	#66; //Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   59:	aload_2
   60:	invokeinterface	#78,  1; //InterfaceMethod scala/collection/generic/TraversableTemplate.toArray:()Lscala/runtime/BoxedArray;
   65:	ldc	#29; //class java/lang/Object
   67:	invokevirtual	#82; //Method scala/runtime/ScalaRunTime$.arrayValue:(Lscala/runtime/BoxedArray;Ljava/lang/Class;)Ljava/lang/Object;
   70:	astore	5
   72:	aload	5
   74:	instanceof	#84; //class scala/runtime/BoxedArray
   77:	ifeq	96
   80:	getstatic	#66; //Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   83:	aload	5
   85:	checkcast	#84; //class scala/runtime/BoxedArray
   88:	ldc	#29; //class java/lang/Object
   90:	invokevirtual	#82; //Method scala/runtime/ScalaRunTime$.arrayValue:(Lscala/runtime/BoxedArray;Ljava/lang/Class;)Ljava/lang/Object;
   93:	goto	98
   96:	aload	5
   98:	checkcast	#86; //class "[Ljava/lang/Object;"
   101:	invokevirtual	#92; //Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
   104:	areturn
  LineNumberTable: 
   line 73: 0
   line 74: 43
   line 75: 50

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      105      0    this       Lscala/reflect/RichClass$ReflectiveCall;
   0      105      1    args       Lscala/collection/Sequence;
   43      61      2    ps       Lscala/collection/Sequence;
   50      54      4    m       Ljava/lang/reflect/Method;

  Signature: length = 0x2
   00 62 

public boolean isErroneous();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	iconst_0
   1:	ireturn
  LineNumberTable: 
   line 71: 0


public java.lang.reflect.Method methodForArgs(scala.collection.Sequence);
  Code:
   Stack=7, Locals=4, Args_size=2
   0:	aload_0
   1:	invokevirtual	#102; //Method scala$reflect$RichClass$ReflectiveCall$$$outer:()Lscala/reflect/RichClass;
   4:	invokevirtual	#108; //Method scala/reflect/RichClass.self:()Ljava/lang/Class;
   7:	aload_0
   8:	getfield	#20; //Field name:Ljava/lang/String;
   11:	getstatic	#66; //Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   14:	aload_1
   15:	new	#110; //class scala/reflect/RichClass$ReflectiveCall$$anonfun$methodForArgs$1
   18:	dup
   19:	aload_0
   20:	invokespecial	#111; //Method scala/reflect/RichClass$ReflectiveCall$$anonfun$methodForArgs$1."<init>":(Lscala/reflect/RichClass$ReflectiveCall;)V
   23:	getstatic	#49; //Field scala/collection/Sequence$.MODULE$:Lscala/collection/Sequence$;
   26:	invokevirtual	#53; //Method scala/collection/Sequence$.builderFactory:()Lscala/collection/generic/BuilderFactory;
   29:	invokeinterface	#59,  3; //InterfaceMethod scala/collection/generic/TraversableTemplate.map:(Lscala/Function1;Lscala/collection/generic/BuilderFactory;)Ljava/lang/Object;
   34:	astore_3
   35:	aload_3
   36:	instanceof	#55; //class scala/collection/generic/TraversableTemplate
   39:	ifeq	46
   42:	aload_3
   43:	goto	53
   46:	getstatic	#66; //Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   49:	aload_3
   50:	invokevirtual	#70; //Method scala/runtime/ScalaRunTime$.boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
   53:	checkcast	#55; //class scala/collection/generic/TraversableTemplate
   56:	invokeinterface	#78,  1; //InterfaceMethod scala/collection/generic/TraversableTemplate.toArray:()Lscala/runtime/BoxedArray;
   61:	ldc	#113; //class java/lang/Class
   63:	invokevirtual	#82; //Method scala/runtime/ScalaRunTime$.arrayValue:(Lscala/runtime/BoxedArray;Ljava/lang/Class;)Ljava/lang/Object;
   66:	astore_2
   67:	aload_2
   68:	instanceof	#84; //class scala/runtime/BoxedArray
   71:	ifeq	89
   74:	getstatic	#66; //Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   77:	aload_2
   78:	checkcast	#84; //class scala/runtime/BoxedArray
   81:	ldc	#113; //class java/lang/Class
   83:	invokevirtual	#82; //Method scala/runtime/ScalaRunTime$.arrayValue:(Lscala/runtime/BoxedArray;Ljava/lang/Class;)Ljava/lang/Object;
   86:	goto	90
   89:	aload_2
   90:	checkcast	#115; //class "[Ljava/lang/Class;"
   93:	invokevirtual	#119; //Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
   96:	areturn
  LineNumberTable: 
   line 70: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      97      0    this       Lscala/reflect/RichClass$ReflectiveCall;
   0      97      1    args       Lscala/collection/Sequence;

  Signature: length = 0x2
   00 78 

}

