Compiled from "Manifest.scala"
public abstract class scala.reflect.Manifest$class extends java.lang.Object
  SourceFile: "Manifest.scala"
  Scala: length = 0x
   
  InnerClass: 
   public final #117= #70 of #97; //$anonfun$subtype$1$1=class scala/reflect/Manifest$$anonfun$subtype$1$1 of class scala/reflect/Manifest
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Manifest.scala;
const #3 = Asciz	$init$;
const #4 = Asciz	(Lscala/reflect/Manifest;)V;
const #5 = Asciz	Code;
const #6 = Asciz	LineNumberTable;
const #7 = Asciz	$this;
const #8 = Asciz	Lscala/reflect/Manifest;;
const #9 = Asciz	LocalVariableTable;
const #10 = Asciz	subtype$1;
const #11 = Asciz	(Lscala/reflect/Manifest;Ljava/lang/Class;Ljava/lang/Class;)Z;
const #12 = Asciz	java/lang/Class;
const #13 = class	#12;	//  java/lang/Class
const #14 = Asciz	getSuperclass;
const #15 = Asciz	()Ljava/lang/Class;;
const #16 = NameAndType	#14:#15;//  getSuperclass:()Ljava/lang/Class;
const #17 = Method	#13.#16;	//  java/lang/Class.getSuperclass:()Ljava/lang/Class;
const #18 = Asciz	scala/runtime/ScalaRunTime$;
const #19 = class	#18;	//  scala/runtime/ScalaRunTime$
const #20 = Asciz	MODULE$;
const #21 = Asciz	Lscala/runtime/ScalaRunTime$;;
const #22 = NameAndType	#20:#21;//  MODULE$:Lscala/runtime/ScalaRunTime$;
const #23 = Field	#19.#22;	//  scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
const #24 = Asciz	getInterfaces;
const #25 = Asciz	()[Ljava/lang/Class;;
const #26 = NameAndType	#24:#25;//  getInterfaces:()[Ljava/lang/Class;
const #27 = Method	#13.#26;	//  java/lang/Class.getInterfaces:()[Ljava/lang/Class;
const #28 = Asciz	boxArray;
const #29 = Asciz	(Ljava/lang/Object;)Lscala/runtime/BoxedArray;;
const #30 = NameAndType	#28:#29;//  boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
const #31 = Method	#19.#30;	//  scala/runtime/ScalaRunTime$.boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
const #32 = Asciz	scala/collection/generic/TraversableTemplate;
const #33 = class	#32;	//  scala/collection/generic/TraversableTemplate
const #34 = Asciz	toList;
const #35 = Asciz	()Lscala/collection/immutable/List;;
const #36 = NameAndType	#34:#35;//  toList:()Lscala/collection/immutable/List;
const #37 = InterfaceMethod	#33.#36;	//  scala/collection/generic/TraversableTemplate.toList:()Lscala/collection/immutable/List;
const #38 = Asciz	java/lang/Object;
const #39 = class	#38;	//  java/lang/Object
const #40 = Asciz	equals;
const #41 = Asciz	(Ljava/lang/Object;)Z;
const #42 = NameAndType	#40:#41;//  equals:(Ljava/lang/Object;)Z
const #43 = Method	#39.#42;	//  java/lang/Object.equals:(Ljava/lang/Object;)Z
const #44 = Asciz	scala/collection/immutable/Nil$;
const #45 = class	#44;	//  scala/collection/immutable/Nil$
const #46 = Asciz	Lscala/collection/immutable/Nil$;;
const #47 = NameAndType	#20:#46;//  MODULE$:Lscala/collection/immutable/Nil$;
const #48 = Field	#45.#47;	//  scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
const #49 = Asciz	scala/collection/immutable/List$;
const #50 = class	#49;	//  scala/collection/immutable/List$
const #51 = Asciz	Lscala/collection/immutable/List$;;
const #52 = NameAndType	#20:#51;//  MODULE$:Lscala/collection/immutable/List$;
const #53 = Field	#50.#52;	//  scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
const #54 = Asciz	apply;
const #55 = Asciz	(Lscala/collection/Sequence;)Lscala/collection/immutable/List;;
const #56 = NameAndType	#54:#55;//  apply:(Lscala/collection/Sequence;)Lscala/collection/immutable/List;
const #57 = Method	#50.#56;	//  scala/collection/immutable/List$.apply:(Lscala/collection/Sequence;)Lscala/collection/immutable/List;
const #58 = Asciz	scala/collection/immutable/List;
const #59 = class	#58;	//  scala/collection/immutable/List
const #60 = Asciz	$colon$colon$colon;
const #61 = Asciz	(Lscala/collection/immutable/List;)Lscala/collection/immutable/List;;
const #62 = NameAndType	#60:#61;//  $colon$colon$colon:(Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
const #63 = Method	#59.#62;	//  scala/collection/immutable/List.$colon$colon$colon:(Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
const #64 = Asciz	scala/collection/generic/SequenceTemplate;
const #65 = class	#64;	//  scala/collection/generic/SequenceTemplate
const #66 = Asciz	contains;
const #67 = NameAndType	#66:#41;//  contains:(Ljava/lang/Object;)Z
const #68 = InterfaceMethod	#65.#67;	//  scala/collection/generic/SequenceTemplate.contains:(Ljava/lang/Object;)Z
const #69 = Asciz	scala/reflect/Manifest$$anonfun$subtype$1$1;
const #70 = class	#69;	//  scala/reflect/Manifest$$anonfun$subtype$1$1
const #71 = Asciz	<init>;
const #72 = Asciz	(Lscala/reflect/Manifest;Ljava/lang/Class;)V;
const #73 = NameAndType	#71:#72;//  "<init>":(Lscala/reflect/Manifest;Ljava/lang/Class;)V
const #74 = Method	#70.#73;	//  scala/reflect/Manifest$$anonfun$subtype$1$1."<init>":(Lscala/reflect/Manifest;Ljava/lang/Class;)V
const #75 = Asciz	scala/collection/generic/LinearSequenceTemplate;
const #76 = class	#75;	//  scala/collection/generic/LinearSequenceTemplate
const #77 = Asciz	exists;
const #78 = Asciz	(Lscala/Function1;)Z;
const #79 = NameAndType	#77:#78;//  exists:(Lscala/Function1;)Z
const #80 = InterfaceMethod	#76.#79;	//  scala/collection/generic/LinearSequenceTemplate.exists:(Lscala/Function1;)Z
const #81 = Asciz	sub;
const #82 = Asciz	Ljava/lang/Class;;
const #83 = Asciz	sup$1;
const #84 = Asciz	subSuperClass;
const #85 = Asciz	subSuperInterfaces;
const #86 = Asciz	Lscala/collection/immutable/List;;
const #87 = Asciz	subSuper;
const #88 = Asciz	typeArguments;
const #89 = Asciz	(Lscala/reflect/Manifest;)Lscala/Option;;
const #90 = Asciz	scala/None$;
const #91 = class	#90;	//  scala/None$
const #92 = Asciz	Lscala/None$;;
const #93 = NameAndType	#20:#92;//  MODULE$:Lscala/None$;
const #94 = Field	#91.#93;	//  scala/None$.MODULE$:Lscala/None$;
const #95 = Asciz	(Lscala/reflect/Manifest;Ljava/lang/Object;)Z;
const #96 = Asciz	scala/reflect/Manifest;
const #97 = class	#96;	//  scala/reflect/Manifest
const #98 = Asciz	erasure;
const #99 = NameAndType	#98:#15;//  erasure:()Ljava/lang/Class;
const #100 = InterfaceMethod	#97.#99;	//  scala/reflect/Manifest.erasure:()Ljava/lang/Class;
const #101 = Asciz	that;
const #102 = Asciz	Ljava/lang/Object;;
const #103 = Asciz	temp1;
const #104 = Asciz	temp2;
const #105 = Asciz	$greater$colon$greater;
const #106 = Asciz	(Lscala/reflect/Manifest;Lscala/reflect/Manifest;)Z;
const #107 = Asciz	$less$colon$less;
const #108 = Asciz	(Lscala/reflect/Manifest;)Z;
const #109 = NameAndType	#107:#108;//  $less$colon$less:(Lscala/reflect/Manifest;)Z
const #110 = InterfaceMethod	#97.#109;	//  scala/reflect/Manifest.$less$colon$less:(Lscala/reflect/Manifest;)Z
const #111 = Asciz	scala/reflect/Manifest$class;
const #112 = class	#111;	//  scala/reflect/Manifest$class
const #113 = NameAndType	#10:#11;//  subtype$1:(Lscala/reflect/Manifest;Ljava/lang/Class;Ljava/lang/Class;)Z
const #114 = Method	#112.#113;	//  scala/reflect/Manifest$class.subtype$1:(Lscala/reflect/Manifest;Ljava/lang/Class;Ljava/lang/Class;)Z
const #115 = Asciz	Scala;
const #116 = Asciz	InnerClasses;
const #117 = Asciz	$anonfun$subtype$1$1;

{
public static void $init$(scala.reflect.Manifest);
  Code:
   Stack=0, Locals=1, Args_size=1
   0:	return
  LineNumberTable: 
   line 26: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      1      0    $this       Lscala/reflect/Manifest;


public static final boolean subtype$1(scala.reflect.Manifest, java.lang.Class, java.lang.Class);
  Code:
   Stack=6, Locals=8, Args_size=3
   0:	aload_1
   1:	invokevirtual	#17; //Method java/lang/Class.getSuperclass:()Ljava/lang/Class;
   4:	astore_3
   5:	getstatic	#23; //Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   8:	aload_1
   9:	invokevirtual	#27; //Method java/lang/Class.getInterfaces:()[Ljava/lang/Class;
   12:	invokevirtual	#31; //Method scala/runtime/ScalaRunTime$.boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
   15:	invokeinterface	#37,  1; //InterfaceMethod scala/collection/generic/TraversableTemplate.toList:()Lscala/collection/immutable/List;
   20:	astore	4
   22:	aload_3
   23:	dup
   24:	astore	7
   26:	ifnull	38
   29:	aload	7
   31:	aconst_null
   32:	invokevirtual	#43; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   35:	ifeq	44
   38:	getstatic	#48; //Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
   41:	goto	64
   44:	getstatic	#53; //Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
   47:	getstatic	#23; //Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   50:	iconst_1
   51:	anewarray	#13; //class java/lang/Class
   54:	dup
   55:	iconst_0
   56:	aload_3
   57:	aastore
   58:	invokevirtual	#31; //Method scala/runtime/ScalaRunTime$.boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
   61:	invokevirtual	#57; //Method scala/collection/immutable/List$.apply:(Lscala/collection/Sequence;)Lscala/collection/immutable/List;
   64:	astore	6
   66:	aload	4
   68:	aload	6
   70:	invokevirtual	#63; //Method scala/collection/immutable/List.$colon$colon$colon:(Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
   73:	astore	5
   75:	aload	5
   77:	aload_2
   78:	invokeinterface	#68,  2; //InterfaceMethod scala/collection/generic/SequenceTemplate.contains:(Ljava/lang/Object;)Z
   83:	ifne	105
   86:	aload	5
   88:	new	#70; //class scala/reflect/Manifest$$anonfun$subtype$1$1
   91:	dup
   92:	aload_0
   93:	aload_2
   94:	invokespecial	#74; //Method scala/reflect/Manifest$$anonfun$subtype$1$1."<init>":(Lscala/reflect/Manifest;Ljava/lang/Class;)V
   97:	invokeinterface	#80,  2; //InterfaceMethod scala/collection/generic/LinearSequenceTemplate.exists:(Lscala/Function1;)Z
   102:	ifeq	109
   105:	iconst_1
   106:	goto	110
   109:	iconst_0
   110:	ireturn
  LineNumberTable: 
   line 38: 0
   line 39: 5
   line 41: 22
   line 40: 73
   line 42: 75
   line 37: 110

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      111      0    $this       Lscala/reflect/Manifest;
   0      111      1    sub       Ljava/lang/Class;
   0      111      2    sup$1       Ljava/lang/Class;
   5      106      3    subSuperClass       Ljava/lang/Class;
   22      89      4    subSuperInterfaces       Lscala/collection/immutable/List;
   75      36      5    subSuper       Lscala/collection/immutable/List;


public static scala.Option typeArguments(scala.reflect.Manifest);
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	getstatic	#94; //Field scala/None$.MODULE$:Lscala/None$;
   3:	areturn
  LineNumberTable: 
   line 63: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      4      0    $this       Lscala/reflect/Manifest;


public static boolean equals(scala.reflect.Manifest, java.lang.Object);
  Code:
   Stack=2, Locals=5, Args_size=2
   0:	aload_1
   1:	astore_2
   2:	aload_2
   3:	instanceof	#97; //class scala/reflect/Manifest
   6:	ifeq	57
   9:	aload_2
   10:	checkcast	#97; //class scala/reflect/Manifest
   13:	astore_3
   14:	aload_0
   15:	invokeinterface	#100,  1; //InterfaceMethod scala/reflect/Manifest.erasure:()Ljava/lang/Class;
   20:	aload_3
   21:	invokeinterface	#100,  1; //InterfaceMethod scala/reflect/Manifest.erasure:()Ljava/lang/Class;
   26:	astore	4
   28:	dup
   29:	ifnonnull	41
   32:	pop
   33:	aload	4
   35:	ifnull	49
   38:	goto	53
   41:	aload	4
   43:	invokevirtual	#43; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   46:	ifeq	53
   49:	iconst_1
   50:	goto	58
   53:	iconst_0
   54:	goto	58
   57:	iconst_0
   58:	ireturn
  LineNumberTable: 
   line 58: 0
   line 59: 14
   line 60: 57
   line 58: 58

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      59      0    $this       Lscala/reflect/Manifest;
   0      59      1    that       Ljava/lang/Object;
   2      57      2    temp1       Ljava/lang/Object;
   14      43      3    temp2       Lscala/reflect/Manifest;


public static boolean $greater$colon$greater(scala.reflect.Manifest, scala.reflect.Manifest);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_1
   1:	aload_0
   2:	invokeinterface	#110,  2; //InterfaceMethod scala/reflect/Manifest.$less$colon$less:(Lscala/reflect/Manifest;)Z
   7:	ireturn
  LineNumberTable: 
   line 52: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      8      0    $this       Lscala/reflect/Manifest;
   0      8      1    that       Lscala/reflect/Manifest;


public static boolean $less$colon$less(scala.reflect.Manifest, scala.reflect.Manifest);
  Code:
   Stack=3, Locals=3, Args_size=2
   0:	aload_0
   1:	invokeinterface	#100,  1; //InterfaceMethod scala/reflect/Manifest.erasure:()Ljava/lang/Class;
   6:	aload_1
   7:	invokeinterface	#100,  1; //InterfaceMethod scala/reflect/Manifest.erasure:()Ljava/lang/Class;
   12:	astore_2
   13:	dup
   14:	ifnonnull	25
   17:	pop
   18:	aload_2
   19:	ifnull	51
   22:	goto	32
   25:	aload_2
   26:	invokevirtual	#43; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   29:	ifne	51
   32:	aload_0
   33:	aload_0
   34:	invokeinterface	#100,  1; //InterfaceMethod scala/reflect/Manifest.erasure:()Ljava/lang/Class;
   39:	aload_1
   40:	invokeinterface	#100,  1; //InterfaceMethod scala/reflect/Manifest.erasure:()Ljava/lang/Class;
   45:	invokestatic	#114; //Method subtype$1:(Lscala/reflect/Manifest;Ljava/lang/Class;Ljava/lang/Class;)Z
   48:	ifeq	55
   51:	iconst_1
   52:	goto	56
   55:	iconst_0
   56:	ireturn
  LineNumberTable: 
   line 44: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      57      0    $this       Lscala/reflect/Manifest;
   0      57      1    that       Lscala/reflect/Manifest;


}

