Compiled from "Manifest.scala"
public final class scala.reflect.Manifest$$anon$5 extends java.lang.Object implements scala.reflect.Manifest
  SourceFile: "Manifest.scala"
  Signature: length = 0x2
   00 7D 
  Scala: length = 0x
   
  InnerClass: 
   public final #130= #21 of #129; //$anon$5=class scala/reflect/Manifest$$anon$5 of class scala/reflect/Manifest
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Manifest.scala;
const #3 = Asciz	bitmap$0;
const #4 = Asciz	I;
const #5 = Asciz	prefix$2;
const #6 = Asciz	Lscala/reflect/Manifest;;
const #7 = Asciz	toString;
const #8 = Asciz	Ljava/lang/String;;
const #9 = Asciz	typeArguments;
const #10 = Asciz	Lscala/Some;;
const #11 = Asciz	Lscala/Some<Lscala/collection/immutable/List<Lscala/reflect/Manifest<*>;>;>;;
const #12 = Asciz	Signature;
const #13 = Asciz	erasure;
const #14 = Asciz	Ljava/lang/Class;;
const #15 = Asciz	Ljava/lang/Class<*>;;
const #16 = Asciz	<init>;
const #17 = Asciz	(Lscala/reflect/Manifest;Ljava/lang/Class;Lscala/collection/Sequence;)V;
const #18 = Asciz	Code;
const #19 = Asciz	LineNumberTable;
const #20 = Asciz	scala/reflect/Manifest$$anon$5;
const #21 = class	#20;	//  scala/reflect/Manifest$$anon$5
const #22 = NameAndType	#5:#6;//  prefix$2:Lscala/reflect/Manifest;
const #23 = Field	#21.#22;	//  scala/reflect/Manifest$$anon$5.prefix$2:Lscala/reflect/Manifest;
const #24 = Asciz	java/lang/Object;
const #25 = class	#24;	//  java/lang/Object
const #26 = Asciz	()V;
const #27 = NameAndType	#16:#26;//  "<init>":()V
const #28 = Method	#25.#27;	//  java/lang/Object."<init>":()V
const #29 = Asciz	scala/reflect/Manifest$class;
const #30 = class	#29;	//  scala/reflect/Manifest$class
const #31 = Asciz	$init$;
const #32 = Asciz	(Lscala/reflect/Manifest;)V;
const #33 = NameAndType	#31:#32;//  $init$:(Lscala/reflect/Manifest;)V
const #34 = Method	#30.#33;	//  scala/reflect/Manifest$class.$init$:(Lscala/reflect/Manifest;)V
const #35 = NameAndType	#13:#14;//  erasure:Ljava/lang/Class;
const #36 = Field	#21.#35;	//  scala/reflect/Manifest$$anon$5.erasure:Ljava/lang/Class;
const #37 = Asciz	scala/Some;
const #38 = class	#37;	//  scala/Some
const #39 = Asciz	scala/collection/generic/TraversableTemplate;
const #40 = class	#39;	//  scala/collection/generic/TraversableTemplate
const #41 = Asciz	toList;
const #42 = Asciz	()Lscala/collection/immutable/List;;
const #43 = NameAndType	#41:#42;//  toList:()Lscala/collection/immutable/List;
const #44 = InterfaceMethod	#40.#43;	//  scala/collection/generic/TraversableTemplate.toList:()Lscala/collection/immutable/List;
const #45 = Asciz	(Ljava/lang/Object;)V;
const #46 = NameAndType	#16:#45;//  "<init>":(Ljava/lang/Object;)V
const #47 = Method	#38.#46;	//  scala/Some."<init>":(Ljava/lang/Object;)V
const #48 = NameAndType	#9:#10;//  typeArguments:Lscala/Some;
const #49 = Field	#21.#48;	//  scala/reflect/Manifest$$anon$5.typeArguments:Lscala/Some;
const #50 = Asciz	()Lscala/Option;;
const #51 = Asciz	()Lscala/Some;;
const #52 = NameAndType	#9:#51;//  typeArguments:()Lscala/Some;
const #53 = Method	#21.#52;	//  scala/reflect/Manifest$$anon$5.typeArguments:()Lscala/Some;
const #54 = Asciz	()Ljava/lang/String;;
const #55 = NameAndType	#3:#4;//  bitmap$0:I
const #56 = Field	#21.#55;	//  scala/reflect/Manifest$$anon$5.bitmap$0:I
const #57 = Asciz	scala/collection/mutable/StringBuilder;
const #58 = class	#57;	//  scala/collection/mutable/StringBuilder
const #59 = Method	#58.#27;	//  scala/collection/mutable/StringBuilder."<init>":()V
const #60 = NameAndType	#7:#54;//  toString:()Ljava/lang/String;
const #61 = Method	#25.#60;	//  java/lang/Object.toString:()Ljava/lang/String;
const #62 = Asciz	append;
const #63 = Asciz	(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;;
const #64 = NameAndType	#62:#63;//  append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
const #65 = Method	#58.#64;	//  scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
const #66 = Asciz	#;
const #67 = String	#66;	//  #
const #68 = Asciz	()Ljava/lang/Class;;
const #69 = NameAndType	#13:#68;//  erasure:()Ljava/lang/Class;
const #70 = Method	#21.#69;	//  scala/reflect/Manifest$$anon$5.erasure:()Ljava/lang/Class;
const #71 = Asciz	java/lang/Class;
const #72 = class	#71;	//  java/lang/Class
const #73 = Asciz	getName;
const #74 = NameAndType	#73:#54;//  getName:()Ljava/lang/String;
const #75 = Method	#72.#74;	//  java/lang/Class.getName:()Ljava/lang/String;
const #76 = Asciz	scala/Option$;
const #77 = class	#76;	//  scala/Option$
const #78 = Asciz	MODULE$;
const #79 = Asciz	Lscala/Option$;;
const #80 = NameAndType	#78:#79;//  MODULE$:Lscala/Option$;
const #81 = Field	#77.#80;	//  scala/Option$.MODULE$:Lscala/Option$;
const #82 = Asciz	option2Iterable;
const #83 = Asciz	(Lscala/Option;)Lscala/collection/Iterable;;
const #84 = NameAndType	#82:#83;//  option2Iterable:(Lscala/Option;)Lscala/collection/Iterable;
const #85 = Method	#77.#84;	//  scala/Option$.option2Iterable:(Lscala/Option;)Lscala/collection/Iterable;
const #86 = Asciz	[;
const #87 = String	#86;	//  [
const #88 = Asciz	, ;
const #89 = String	#88;	//  , 
const #90 = Asciz	];
const #91 = String	#90;	//  ]
const #92 = Asciz	mkString;
const #93 = Asciz	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;;
const #94 = NameAndType	#92:#93;//  mkString:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
const #95 = InterfaceMethod	#40.#94;	//  scala/collection/generic/TraversableTemplate.mkString:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
const #96 = Method	#58.#60;	//  scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
const #97 = NameAndType	#7:#8;//  toString:Ljava/lang/String;
const #98 = Field	#21.#97;	//  scala/reflect/Manifest$$anon$5.toString:Ljava/lang/String;
const #99 = Asciz	scala/runtime/BoxedUnit;
const #100 = class	#99;	//  scala/runtime/BoxedUnit
const #101 = Asciz	UNIT;
const #102 = Asciz	Lscala/runtime/BoxedUnit;;
const #103 = NameAndType	#101:#102;//  UNIT:Lscala/runtime/BoxedUnit;
const #104 = Field	#100.#103;	//  scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
const #105 = Asciz	()Lscala/Some<Lscala/collection/immutable/List<Lscala/reflect/Manifest<*>;>;>;;
const #106 = Asciz	()Ljava/lang/Class<*>;;
const #107 = Asciz	equals;
const #108 = Asciz	(Ljava/lang/Object;)Z;
const #109 = Asciz	(Lscala/reflect/Manifest;Ljava/lang/Object;)Z;
const #110 = NameAndType	#107:#109;//  equals:(Lscala/reflect/Manifest;Ljava/lang/Object;)Z
const #111 = Method	#30.#110;	//  scala/reflect/Manifest$class.equals:(Lscala/reflect/Manifest;Ljava/lang/Object;)Z
const #112 = Asciz	this;
const #113 = Asciz	Lscala/reflect/Manifest$$anon$5;;
const #114 = Asciz	that;
const #115 = Asciz	Ljava/lang/Object;;
const #116 = Asciz	LocalVariableTable;
const #117 = Asciz	$greater$colon$greater;
const #118 = Asciz	(Lscala/reflect/Manifest;)Z;
const #119 = Asciz	(Lscala/reflect/Manifest;Lscala/reflect/Manifest;)Z;
const #120 = NameAndType	#117:#119;//  $greater$colon$greater:(Lscala/reflect/Manifest;Lscala/reflect/Manifest;)Z
const #121 = Method	#30.#120;	//  scala/reflect/Manifest$class.$greater$colon$greater:(Lscala/reflect/Manifest;Lscala/reflect/Manifest;)Z
const #122 = Asciz	$less$colon$less;
const #123 = NameAndType	#122:#119;//  $less$colon$less:(Lscala/reflect/Manifest;Lscala/reflect/Manifest;)Z
const #124 = Method	#30.#123;	//  scala/reflect/Manifest$class.$less$colon$less:(Lscala/reflect/Manifest;Lscala/reflect/Manifest;)Z
const #125 = Asciz	Ljava/lang/Object;Lscala/reflect/Manifest<TT;>;;
const #126 = Asciz	Scala;
const #127 = Asciz	InnerClasses;
const #128 = Asciz	scala/reflect/Manifest;
const #129 = class	#128;	//  scala/reflect/Manifest
const #130 = Asciz	$anon$5;

{
public volatile int bitmap$0;

public scala.reflect.Manifest$$anon$5(scala.reflect.Manifest, java.lang.Class, scala.collection.Sequence);
  Code:
   Stack=4, Locals=4, Args_size=4
   0:	aload_0
   1:	aload_1
   2:	putfield	#23; //Field prefix$2:Lscala/reflect/Manifest;
   5:	aload_0
   6:	invokespecial	#28; //Method java/lang/Object."<init>":()V
   9:	aload_0
   10:	invokestatic	#34; //Method scala/reflect/Manifest$class.$init$:(Lscala/reflect/Manifest;)V
   13:	aload_0
   14:	aload_2
   15:	putfield	#36; //Field erasure:Ljava/lang/Class;
   18:	aload_0
   19:	new	#38; //class scala/Some
   22:	dup
   23:	aload_3
   24:	invokeinterface	#44,  1; //InterfaceMethod scala/collection/generic/TraversableTemplate.toList:()Lscala/collection/immutable/List;
   29:	invokespecial	#47; //Method scala/Some."<init>":(Ljava/lang/Object;)V
   32:	putfield	#49; //Field typeArguments:Lscala/Some;
   35:	return
  LineNumberTable: 
   line 126: 0
   line 127: 13
   line 128: 18


public scala.Option typeArguments();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#53; //Method typeArguments:()Lscala/Some;
   4:	areturn
  LineNumberTable: 
   line 126: 0


public java.lang.String toString();
  Code:
   Stack=6, Locals=2, Args_size=1
   0:	aload_0
   1:	getfield	#56; //Field bitmap$0:I
   4:	iconst_1
   5:	iand
   6:	iconst_0
   7:	if_icmpne	103
   10:	aload_0
   11:	dup
   12:	astore_1
   13:	monitorenter
   14:	aload_0
   15:	getfield	#56; //Field bitmap$0:I
   18:	iconst_1
   19:	iand
   20:	iconst_0
   21:	if_icmpne	97
   24:	aload_0
   25:	new	#58; //class scala/collection/mutable/StringBuilder
   28:	dup
   29:	invokespecial	#59; //Method scala/collection/mutable/StringBuilder."<init>":()V
   32:	aload_0
   33:	getfield	#23; //Field prefix$2:Lscala/reflect/Manifest;
   36:	invokevirtual	#61; //Method java/lang/Object.toString:()Ljava/lang/String;
   39:	invokevirtual	#65; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   42:	ldc	#67; //String #
   44:	invokevirtual	#65; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   47:	aload_0
   48:	invokevirtual	#70; //Method erasure:()Ljava/lang/Class;
   51:	invokevirtual	#75; //Method java/lang/Class.getName:()Ljava/lang/String;
   54:	invokevirtual	#65; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   57:	getstatic	#81; //Field scala/Option$.MODULE$:Lscala/Option$;
   60:	aload_0
   61:	invokevirtual	#53; //Method typeArguments:()Lscala/Some;
   64:	invokevirtual	#85; //Method scala/Option$.option2Iterable:(Lscala/Option;)Lscala/collection/Iterable;
   67:	ldc	#87; //String [
   69:	ldc	#89; //String , 
   71:	ldc	#91; //String ]
   73:	invokeinterface	#95,  4; //InterfaceMethod scala/collection/generic/TraversableTemplate.mkString:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
   78:	invokevirtual	#65; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   81:	invokevirtual	#96; //Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
   84:	putfield	#98; //Field toString:Ljava/lang/String;
   87:	aload_0
   88:	aload_0
   89:	getfield	#56; //Field bitmap$0:I
   92:	iconst_1
   93:	ior
   94:	putfield	#56; //Field bitmap$0:I
   97:	getstatic	#104; //Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
   100:	pop
   101:	aload_1
   102:	monitorexit
   103:	aload_0
   104:	getfield	#98; //Field toString:Ljava/lang/String;
   107:	areturn
   108:	aload_1
   109:	monitorexit
   110:	athrow
  Exception table:
   from   to  target type
    14   103   108   any
  LineNumberTable: 
   line 129: 0
   line 28: 6
   line 129: 10
   line 28: 20
   line 129: 24
   line 130: 25
   line 129: 84


public scala.Some typeArguments();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#49; //Field typeArguments:Lscala/Some;
   4:	areturn
  LineNumberTable: 
   line 128: 0

  Signature: length = 0x2
   00 69 

public java.lang.Class erasure();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#36; //Field erasure:Ljava/lang/Class;
   4:	areturn
  LineNumberTable: 
   line 127: 0

  Signature: length = 0x2
   00 6A 

public boolean equals(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#111; //Method scala/reflect/Manifest$class.equals:(Lscala/reflect/Manifest;Ljava/lang/Object;)Z
   5:	ireturn
  LineNumberTable: 
   line 126: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/reflect/Manifest$$anon$5;
   0      6      1    that       Ljava/lang/Object;


public boolean $greater$colon$greater(scala.reflect.Manifest);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#121; //Method scala/reflect/Manifest$class.$greater$colon$greater:(Lscala/reflect/Manifest;Lscala/reflect/Manifest;)Z
   5:	ireturn
  LineNumberTable: 
   line 126: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/reflect/Manifest$$anon$5;
   0      6      1    that       Lscala/reflect/Manifest;


public boolean $less$colon$less(scala.reflect.Manifest);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#124; //Method scala/reflect/Manifest$class.$less$colon$less:(Lscala/reflect/Manifest;Lscala/reflect/Manifest;)Z
   5:	ireturn
  LineNumberTable: 
   line 126: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/reflect/Manifest$$anon$5;
   0      6      1    that       Lscala/reflect/Manifest;


}

