Compiled from "Manifest.scala"
public final class scala.reflect.Manifest$$anon$7 extends java.lang.Object implements scala.reflect.Manifest
  SourceFile: "Manifest.scala"
  Signature: length = 0x2
   00 FFFFFF80 
  Scala: length = 0x
   
  InnerClass: 
   public final #131= #23 of #104; //$anon$7=class scala/reflect/Manifest$$anon$7 of class scala/reflect/Manifest
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Manifest.scala;
const #3 = Asciz	bitmap$0;
const #4 = Asciz	I;
const #5 = Asciz	upperBound$2;
const #6 = Asciz	Lscala/reflect/Manifest;;
const #7 = Asciz	name$2;
const #8 = Asciz	Ljava/lang/String;;
const #9 = Asciz	prefix$4;
const #10 = Asciz	toString;
const #11 = Asciz	typeArguments;
const #12 = Asciz	Lscala/Some;;
const #13 = Asciz	Lscala/Some<Lscala/collection/immutable/List<Lscala/reflect/Manifest<*>;>;>;;
const #14 = Asciz	Signature;
const #15 = Asciz	erasure;
const #16 = Asciz	Ljava/lang/Class;;
const #17 = Asciz	Ljava/lang/Class<*>;;
const #18 = Asciz	<init>;
const #19 = Asciz	(Lscala/reflect/Manifest;Ljava/lang/String;Lscala/reflect/Manifest;Lscala/collection/Sequence;)V;
const #20 = Asciz	Code;
const #21 = Asciz	LineNumberTable;
const #22 = Asciz	scala/reflect/Manifest$$anon$7;
const #23 = class	#22;	//  scala/reflect/Manifest$$anon$7
const #24 = NameAndType	#9:#6;//  prefix$4:Lscala/reflect/Manifest;
const #25 = Field	#23.#24;	//  scala/reflect/Manifest$$anon$7.prefix$4:Lscala/reflect/Manifest;
const #26 = NameAndType	#7:#8;//  name$2:Ljava/lang/String;
const #27 = Field	#23.#26;	//  scala/reflect/Manifest$$anon$7.name$2:Ljava/lang/String;
const #28 = NameAndType	#5:#6;//  upperBound$2:Lscala/reflect/Manifest;
const #29 = Field	#23.#28;	//  scala/reflect/Manifest$$anon$7.upperBound$2:Lscala/reflect/Manifest;
const #30 = Asciz	java/lang/Object;
const #31 = class	#30;	//  java/lang/Object
const #32 = Asciz	()V;
const #33 = NameAndType	#18:#32;//  "<init>":()V
const #34 = Method	#31.#33;	//  java/lang/Object."<init>":()V
const #35 = Asciz	scala/reflect/Manifest$class;
const #36 = class	#35;	//  scala/reflect/Manifest$class
const #37 = Asciz	$init$;
const #38 = Asciz	(Lscala/reflect/Manifest;)V;
const #39 = NameAndType	#37:#38;//  $init$:(Lscala/reflect/Manifest;)V
const #40 = Method	#36.#39;	//  scala/reflect/Manifest$class.$init$:(Lscala/reflect/Manifest;)V
const #41 = Asciz	scala/Some;
const #42 = class	#41;	//  scala/Some
const #43 = Asciz	scala/collection/generic/TraversableTemplate;
const #44 = class	#43;	//  scala/collection/generic/TraversableTemplate
const #45 = Asciz	toList;
const #46 = Asciz	()Lscala/collection/immutable/List;;
const #47 = NameAndType	#45:#46;//  toList:()Lscala/collection/immutable/List;
const #48 = InterfaceMethod	#44.#47;	//  scala/collection/generic/TraversableTemplate.toList:()Lscala/collection/immutable/List;
const #49 = Asciz	(Ljava/lang/Object;)V;
const #50 = NameAndType	#18:#49;//  "<init>":(Ljava/lang/Object;)V
const #51 = Method	#42.#50;	//  scala/Some."<init>":(Ljava/lang/Object;)V
const #52 = NameAndType	#11:#12;//  typeArguments:Lscala/Some;
const #53 = Field	#23.#52;	//  scala/reflect/Manifest$$anon$7.typeArguments:Lscala/Some;
const #54 = Asciz	()Lscala/Option;;
const #55 = Asciz	()Lscala/Some;;
const #56 = NameAndType	#11:#55;//  typeArguments:()Lscala/Some;
const #57 = Method	#23.#56;	//  scala/reflect/Manifest$$anon$7.typeArguments:()Lscala/Some;
const #58 = Asciz	()Ljava/lang/String;;
const #59 = NameAndType	#3:#4;//  bitmap$0:I
const #60 = Field	#23.#59;	//  scala/reflect/Manifest$$anon$7.bitmap$0:I
const #61 = Asciz	scala/collection/mutable/StringBuilder;
const #62 = class	#61;	//  scala/collection/mutable/StringBuilder
const #63 = Method	#62.#33;	//  scala/collection/mutable/StringBuilder."<init>":()V
const #64 = NameAndType	#10:#58;//  toString:()Ljava/lang/String;
const #65 = Method	#31.#64;	//  java/lang/Object.toString:()Ljava/lang/String;
const #66 = Asciz	append;
const #67 = Asciz	(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;;
const #68 = NameAndType	#66:#67;//  append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
const #69 = Method	#62.#68;	//  scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
const #70 = Asciz	#;
const #71 = String	#70;	//  #
const #72 = Asciz	scala/Option$;
const #73 = class	#72;	//  scala/Option$
const #74 = Asciz	MODULE$;
const #75 = Asciz	Lscala/Option$;;
const #76 = NameAndType	#74:#75;//  MODULE$:Lscala/Option$;
const #77 = Field	#73.#76;	//  scala/Option$.MODULE$:Lscala/Option$;
const #78 = Asciz	option2Iterable;
const #79 = Asciz	(Lscala/Option;)Lscala/collection/Iterable;;
const #80 = NameAndType	#78:#79;//  option2Iterable:(Lscala/Option;)Lscala/collection/Iterable;
const #81 = Method	#73.#80;	//  scala/Option$.option2Iterable:(Lscala/Option;)Lscala/collection/Iterable;
const #82 = Asciz	[;
const #83 = String	#82;	//  [
const #84 = Asciz	, ;
const #85 = String	#84;	//  , 
const #86 = Asciz	];
const #87 = String	#86;	//  ]
const #88 = Asciz	mkString;
const #89 = Asciz	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;;
const #90 = NameAndType	#88:#89;//  mkString:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
const #91 = InterfaceMethod	#44.#90;	//  scala/collection/generic/TraversableTemplate.mkString:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
const #92 = Method	#62.#64;	//  scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
const #93 = NameAndType	#10:#8;//  toString:Ljava/lang/String;
const #94 = Field	#23.#93;	//  scala/reflect/Manifest$$anon$7.toString:Ljava/lang/String;
const #95 = Asciz	scala/runtime/BoxedUnit;
const #96 = class	#95;	//  scala/runtime/BoxedUnit
const #97 = Asciz	UNIT;
const #98 = Asciz	Lscala/runtime/BoxedUnit;;
const #99 = NameAndType	#97:#98;//  UNIT:Lscala/runtime/BoxedUnit;
const #100 = Field	#96.#99;	//  scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
const #101 = Asciz	()Lscala/Some<Lscala/collection/immutable/List<Lscala/reflect/Manifest<*>;>;>;;
const #102 = Asciz	()Ljava/lang/Class;;
const #103 = Asciz	scala/reflect/Manifest;
const #104 = class	#103;	//  scala/reflect/Manifest
const #105 = NameAndType	#15:#102;//  erasure:()Ljava/lang/Class;
const #106 = InterfaceMethod	#104.#105;	//  scala/reflect/Manifest.erasure:()Ljava/lang/Class;
const #107 = NameAndType	#15:#16;//  erasure:Ljava/lang/Class;
const #108 = Field	#23.#107;	//  scala/reflect/Manifest$$anon$7.erasure:Ljava/lang/Class;
const #109 = Asciz	()Ljava/lang/Class<*>;;
const #110 = Asciz	equals;
const #111 = Asciz	(Ljava/lang/Object;)Z;
const #112 = Asciz	(Lscala/reflect/Manifest;Ljava/lang/Object;)Z;
const #113 = NameAndType	#110:#112;//  equals:(Lscala/reflect/Manifest;Ljava/lang/Object;)Z
const #114 = Method	#36.#113;	//  scala/reflect/Manifest$class.equals:(Lscala/reflect/Manifest;Ljava/lang/Object;)Z
const #115 = Asciz	this;
const #116 = Asciz	Lscala/reflect/Manifest$$anon$7;;
const #117 = Asciz	that;
const #118 = Asciz	Ljava/lang/Object;;
const #119 = Asciz	LocalVariableTable;
const #120 = Asciz	$greater$colon$greater;
const #121 = Asciz	(Lscala/reflect/Manifest;)Z;
const #122 = Asciz	(Lscala/reflect/Manifest;Lscala/reflect/Manifest;)Z;
const #123 = NameAndType	#120:#122;//  $greater$colon$greater:(Lscala/reflect/Manifest;Lscala/reflect/Manifest;)Z
const #124 = Method	#36.#123;	//  scala/reflect/Manifest$class.$greater$colon$greater:(Lscala/reflect/Manifest;Lscala/reflect/Manifest;)Z
const #125 = Asciz	$less$colon$less;
const #126 = NameAndType	#125:#122;//  $less$colon$less:(Lscala/reflect/Manifest;Lscala/reflect/Manifest;)Z
const #127 = Method	#36.#126;	//  scala/reflect/Manifest$class.$less$colon$less:(Lscala/reflect/Manifest;Lscala/reflect/Manifest;)Z
const #128 = Asciz	Ljava/lang/Object;Lscala/reflect/Manifest<TT;>;;
const #129 = Asciz	Scala;
const #130 = Asciz	InnerClasses;
const #131 = Asciz	$anon$7;

{
public volatile int bitmap$0;

public scala.reflect.Manifest$$anon$7(scala.reflect.Manifest, java.lang.String, scala.reflect.Manifest, scala.collection.Sequence);
  Code:
   Stack=4, Locals=5, Args_size=5
   0:	aload_0
   1:	aload_1
   2:	putfield	#25; //Field prefix$4:Lscala/reflect/Manifest;
   5:	aload_0
   6:	aload_2
   7:	putfield	#27; //Field name$2:Ljava/lang/String;
   10:	aload_0
   11:	aload_3
   12:	putfield	#29; //Field upperBound$2:Lscala/reflect/Manifest;
   15:	aload_0
   16:	invokespecial	#34; //Method java/lang/Object."<init>":()V
   19:	aload_0
   20:	invokestatic	#40; //Method scala/reflect/Manifest$class.$init$:(Lscala/reflect/Manifest;)V
   23:	aload_0
   24:	new	#42; //class scala/Some
   27:	dup
   28:	aload	4
   30:	invokeinterface	#48,  1; //InterfaceMethod scala/collection/generic/TraversableTemplate.toList:()Lscala/collection/immutable/List;
   35:	invokespecial	#51; //Method scala/Some."<init>":(Ljava/lang/Object;)V
   38:	putfield	#53; //Field typeArguments:Lscala/Some;
   41:	return
  LineNumberTable: 
   line 144: 0
   line 146: 23


public scala.Option typeArguments();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#57; //Method typeArguments:()Lscala/Some;
   4:	areturn
  LineNumberTable: 
   line 144: 0


public java.lang.String toString();
  Code:
   Stack=6, Locals=2, Args_size=1
   0:	aload_0
   1:	getfield	#60; //Field bitmap$0:I
   4:	iconst_4
   5:	iand
   6:	iconst_0
   7:	if_icmpne	100
   10:	aload_0
   11:	dup
   12:	astore_1
   13:	monitorenter
   14:	aload_0
   15:	getfield	#60; //Field bitmap$0:I
   18:	iconst_4
   19:	iand
   20:	iconst_0
   21:	if_icmpne	94
   24:	aload_0
   25:	new	#62; //class scala/collection/mutable/StringBuilder
   28:	dup
   29:	invokespecial	#63; //Method scala/collection/mutable/StringBuilder."<init>":()V
   32:	aload_0
   33:	getfield	#25; //Field prefix$4:Lscala/reflect/Manifest;
   36:	invokevirtual	#65; //Method java/lang/Object.toString:()Ljava/lang/String;
   39:	invokevirtual	#69; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   42:	ldc	#71; //String #
   44:	invokevirtual	#69; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   47:	aload_0
   48:	getfield	#27; //Field name$2:Ljava/lang/String;
   51:	invokevirtual	#69; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   54:	getstatic	#77; //Field scala/Option$.MODULE$:Lscala/Option$;
   57:	aload_0
   58:	invokevirtual	#57; //Method typeArguments:()Lscala/Some;
   61:	invokevirtual	#81; //Method scala/Option$.option2Iterable:(Lscala/Option;)Lscala/collection/Iterable;
   64:	ldc	#83; //String [
   66:	ldc	#85; //String , 
   68:	ldc	#87; //String ]
   70:	invokeinterface	#91,  4; //InterfaceMethod scala/collection/generic/TraversableTemplate.mkString:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
   75:	invokevirtual	#69; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   78:	invokevirtual	#92; //Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
   81:	putfield	#94; //Field toString:Ljava/lang/String;
   84:	aload_0
   85:	aload_0
   86:	getfield	#60; //Field bitmap$0:I
   89:	iconst_4
   90:	ior
   91:	putfield	#60; //Field bitmap$0:I
   94:	getstatic	#100; //Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
   97:	pop
   98:	aload_1
   99:	monitorexit
   100:	aload_0
   101:	getfield	#94; //Field toString:Ljava/lang/String;
   104:	areturn
   105:	aload_1
   106:	monitorexit
   107:	athrow
  Exception table:
   from   to  target type
    14   100   105   any
  LineNumberTable: 
   line 147: 0
   line 28: 6
   line 147: 10
   line 28: 20
   line 147: 24
   line 148: 25
   line 147: 81


public scala.Some typeArguments();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#53; //Field typeArguments:Lscala/Some;
   4:	areturn
  LineNumberTable: 
   line 146: 0

  Signature: length = 0x2
   00 65 

public java.lang.Class erasure();
  Code:
   Stack=3, Locals=2, Args_size=1
   0:	aload_0
   1:	getfield	#60; //Field bitmap$0:I
   4:	iconst_1
   5:	iand
   6:	iconst_0
   7:	if_icmpne	53
   10:	aload_0
   11:	dup
   12:	astore_1
   13:	monitorenter
   14:	aload_0
   15:	getfield	#60; //Field bitmap$0:I
   18:	iconst_1
   19:	iand
   20:	iconst_0
   21:	if_icmpne	47
   24:	aload_0
   25:	aload_0
   26:	getfield	#29; //Field upperBound$2:Lscala/reflect/Manifest;
   29:	invokeinterface	#106,  1; //InterfaceMethod scala/reflect/Manifest.erasure:()Ljava/lang/Class;
   34:	putfield	#108; //Field erasure:Ljava/lang/Class;
   37:	aload_0
   38:	aload_0
   39:	getfield	#60; //Field bitmap$0:I
   42:	iconst_1
   43:	ior
   44:	putfield	#60; //Field bitmap$0:I
   47:	getstatic	#100; //Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
   50:	pop
   51:	aload_1
   52:	monitorexit
   53:	aload_0
   54:	getfield	#108; //Field erasure:Ljava/lang/Class;
   57:	areturn
   58:	aload_1
   59:	monitorexit
   60:	athrow
  Exception table:
   from   to  target type
    14    53    58   any
  LineNumberTable: 
   line 145: 0
   line 28: 6
   line 145: 10
   line 28: 20
   line 145: 24

  Signature: length = 0x2
   00 6D 

public boolean equals(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#114; //Method scala/reflect/Manifest$class.equals:(Lscala/reflect/Manifest;Ljava/lang/Object;)Z
   5:	ireturn
  LineNumberTable: 
   line 144: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/reflect/Manifest$$anon$7;
   0      6      1    that       Ljava/lang/Object;


public boolean $greater$colon$greater(scala.reflect.Manifest);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#124; //Method scala/reflect/Manifest$class.$greater$colon$greater:(Lscala/reflect/Manifest;Lscala/reflect/Manifest;)Z
   5:	ireturn
  LineNumberTable: 
   line 144: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/reflect/Manifest$$anon$7;
   0      6      1    that       Lscala/reflect/Manifest;


public boolean $less$colon$less(scala.reflect.Manifest);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#127; //Method scala/reflect/Manifest$class.$less$colon$less:(Lscala/reflect/Manifest;Lscala/reflect/Manifest;)Z
   5:	ireturn
  LineNumberTable: 
   line 144: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/reflect/Manifest$$anon$7;
   0      6      1    that       Lscala/reflect/Manifest;


}

