Compiled from "Manifest.scala"
public final class scala.reflect.Manifest$$anon$4 extends java.lang.Object implements scala.reflect.Manifest
  SourceFile: "Manifest.scala"
  Signature: length = 0x2
   00 59 
  Scala: length = 0x
   
  InnerClass: 
   public final #94= #18 of #93; //$anon$4=class scala/reflect/Manifest$$anon$4 of class scala/reflect/Manifest
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Manifest.scala;
const #3 = Asciz	bitmap$0;
const #4 = Asciz	I;
const #5 = Asciz	prefix$1;
const #6 = Asciz	Lscala/reflect/Manifest;;
const #7 = Asciz	toString;
const #8 = Asciz	Ljava/lang/String;;
const #9 = Asciz	erasure;
const #10 = Asciz	Ljava/lang/Class;;
const #11 = Asciz	Ljava/lang/Class<*>;;
const #12 = Asciz	Signature;
const #13 = Asciz	<init>;
const #14 = Asciz	(Lscala/reflect/Manifest;Ljava/lang/Class;)V;
const #15 = Asciz	Code;
const #16 = Asciz	LineNumberTable;
const #17 = Asciz	scala/reflect/Manifest$$anon$4;
const #18 = class	#17;	//  scala/reflect/Manifest$$anon$4
const #19 = NameAndType	#5:#6;//  prefix$1:Lscala/reflect/Manifest;
const #20 = Field	#18.#19;	//  scala/reflect/Manifest$$anon$4.prefix$1:Lscala/reflect/Manifest;
const #21 = Asciz	java/lang/Object;
const #22 = class	#21;	//  java/lang/Object
const #23 = Asciz	()V;
const #24 = NameAndType	#13:#23;//  "<init>":()V
const #25 = Method	#22.#24;	//  java/lang/Object."<init>":()V
const #26 = Asciz	scala/reflect/Manifest$class;
const #27 = class	#26;	//  scala/reflect/Manifest$class
const #28 = Asciz	$init$;
const #29 = Asciz	(Lscala/reflect/Manifest;)V;
const #30 = NameAndType	#28:#29;//  $init$:(Lscala/reflect/Manifest;)V
const #31 = Method	#27.#30;	//  scala/reflect/Manifest$class.$init$:(Lscala/reflect/Manifest;)V
const #32 = NameAndType	#9:#10;//  erasure:Ljava/lang/Class;
const #33 = Field	#18.#32;	//  scala/reflect/Manifest$$anon$4.erasure:Ljava/lang/Class;
const #34 = Asciz	()Ljava/lang/String;;
const #35 = NameAndType	#3:#4;//  bitmap$0:I
const #36 = Field	#18.#35;	//  scala/reflect/Manifest$$anon$4.bitmap$0:I
const #37 = Asciz	scala/collection/mutable/StringBuilder;
const #38 = class	#37;	//  scala/collection/mutable/StringBuilder
const #39 = Method	#38.#24;	//  scala/collection/mutable/StringBuilder."<init>":()V
const #40 = NameAndType	#7:#34;//  toString:()Ljava/lang/String;
const #41 = Method	#22.#40;	//  java/lang/Object.toString:()Ljava/lang/String;
const #42 = Asciz	append;
const #43 = Asciz	(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;;
const #44 = NameAndType	#42:#43;//  append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
const #45 = Method	#38.#44;	//  scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
const #46 = Asciz	#;
const #47 = String	#46;	//  #
const #48 = Asciz	()Ljava/lang/Class;;
const #49 = NameAndType	#9:#48;//  erasure:()Ljava/lang/Class;
const #50 = Method	#18.#49;	//  scala/reflect/Manifest$$anon$4.erasure:()Ljava/lang/Class;
const #51 = Asciz	java/lang/Class;
const #52 = class	#51;	//  java/lang/Class
const #53 = Asciz	getName;
const #54 = NameAndType	#53:#34;//  getName:()Ljava/lang/String;
const #55 = Method	#52.#54;	//  java/lang/Class.getName:()Ljava/lang/String;
const #56 = Method	#38.#40;	//  scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
const #57 = NameAndType	#7:#8;//  toString:Ljava/lang/String;
const #58 = Field	#18.#57;	//  scala/reflect/Manifest$$anon$4.toString:Ljava/lang/String;
const #59 = Asciz	scala/runtime/BoxedUnit;
const #60 = class	#59;	//  scala/runtime/BoxedUnit
const #61 = Asciz	UNIT;
const #62 = Asciz	Lscala/runtime/BoxedUnit;;
const #63 = NameAndType	#61:#62;//  UNIT:Lscala/runtime/BoxedUnit;
const #64 = Field	#60.#63;	//  scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
const #65 = Asciz	()Ljava/lang/Class<*>;;
const #66 = Asciz	typeArguments;
const #67 = Asciz	()Lscala/Option;;
const #68 = Asciz	(Lscala/reflect/Manifest;)Lscala/Option;;
const #69 = NameAndType	#66:#68;//  typeArguments:(Lscala/reflect/Manifest;)Lscala/Option;
const #70 = Method	#27.#69;	//  scala/reflect/Manifest$class.typeArguments:(Lscala/reflect/Manifest;)Lscala/Option;
const #71 = Asciz	equals;
const #72 = Asciz	(Ljava/lang/Object;)Z;
const #73 = Asciz	(Lscala/reflect/Manifest;Ljava/lang/Object;)Z;
const #74 = NameAndType	#71:#73;//  equals:(Lscala/reflect/Manifest;Ljava/lang/Object;)Z
const #75 = Method	#27.#74;	//  scala/reflect/Manifest$class.equals:(Lscala/reflect/Manifest;Ljava/lang/Object;)Z
const #76 = Asciz	this;
const #77 = Asciz	Lscala/reflect/Manifest$$anon$4;;
const #78 = Asciz	that;
const #79 = Asciz	Ljava/lang/Object;;
const #80 = Asciz	LocalVariableTable;
const #81 = Asciz	$greater$colon$greater;
const #82 = Asciz	(Lscala/reflect/Manifest;)Z;
const #83 = Asciz	(Lscala/reflect/Manifest;Lscala/reflect/Manifest;)Z;
const #84 = NameAndType	#81:#83;//  $greater$colon$greater:(Lscala/reflect/Manifest;Lscala/reflect/Manifest;)Z
const #85 = Method	#27.#84;	//  scala/reflect/Manifest$class.$greater$colon$greater:(Lscala/reflect/Manifest;Lscala/reflect/Manifest;)Z
const #86 = Asciz	$less$colon$less;
const #87 = NameAndType	#86:#83;//  $less$colon$less:(Lscala/reflect/Manifest;Lscala/reflect/Manifest;)Z
const #88 = Method	#27.#87;	//  scala/reflect/Manifest$class.$less$colon$less:(Lscala/reflect/Manifest;Lscala/reflect/Manifest;)Z
const #89 = Asciz	Ljava/lang/Object;Lscala/reflect/Manifest<TT;>;;
const #90 = Asciz	Scala;
const #91 = Asciz	InnerClasses;
const #92 = Asciz	scala/reflect/Manifest;
const #93 = class	#92;	//  scala/reflect/Manifest
const #94 = Asciz	$anon$4;

{
public volatile int bitmap$0;

public scala.reflect.Manifest$$anon$4(scala.reflect.Manifest, java.lang.Class);
  Code:
   Stack=2, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	putfield	#20; //Field prefix$1:Lscala/reflect/Manifest;
   5:	aload_0
   6:	invokespecial	#25; //Method java/lang/Object."<init>":()V
   9:	aload_0
   10:	invokestatic	#31; //Method scala/reflect/Manifest$class.$init$:(Lscala/reflect/Manifest;)V
   13:	aload_0
   14:	aload_2
   15:	putfield	#33; //Field erasure:Ljava/lang/Class;
   18:	return
  LineNumberTable: 
   line 119: 0
   line 120: 13


public java.lang.String toString();
  Code:
   Stack=3, Locals=2, Args_size=1
   0:	aload_0
   1:	getfield	#36; //Field bitmap$0:I
   4:	iconst_1
   5:	iand
   6:	iconst_0
   7:	if_icmpne	79
   10:	aload_0
   11:	dup
   12:	astore_1
   13:	monitorenter
   14:	aload_0
   15:	getfield	#36; //Field bitmap$0:I
   18:	iconst_1
   19:	iand
   20:	iconst_0
   21:	if_icmpne	73
   24:	aload_0
   25:	new	#38; //class scala/collection/mutable/StringBuilder
   28:	dup
   29:	invokespecial	#39; //Method scala/collection/mutable/StringBuilder."<init>":()V
   32:	aload_0
   33:	getfield	#20; //Field prefix$1:Lscala/reflect/Manifest;
   36:	invokevirtual	#41; //Method java/lang/Object.toString:()Ljava/lang/String;
   39:	invokevirtual	#45; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   42:	ldc	#47; //String #
   44:	invokevirtual	#45; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   47:	aload_0
   48:	invokevirtual	#50; //Method erasure:()Ljava/lang/Class;
   51:	invokevirtual	#55; //Method java/lang/Class.getName:()Ljava/lang/String;
   54:	invokevirtual	#45; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   57:	invokevirtual	#56; //Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
   60:	putfield	#58; //Field toString:Ljava/lang/String;
   63:	aload_0
   64:	aload_0
   65:	getfield	#36; //Field bitmap$0:I
   68:	iconst_1
   69:	ior
   70:	putfield	#36; //Field bitmap$0:I
   73:	getstatic	#64; //Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
   76:	pop
   77:	aload_1
   78:	monitorexit
   79:	aload_0
   80:	getfield	#58; //Field toString:Ljava/lang/String;
   83:	areturn
   84:	aload_1
   85:	monitorexit
   86:	athrow
  Exception table:
   from   to  target type
    14    79    84   any
  LineNumberTable: 
   line 121: 0
   line 28: 6
   line 121: 10
   line 28: 20
   line 121: 24


public java.lang.Class erasure();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#33; //Field erasure:Ljava/lang/Class;
   4:	areturn
  LineNumberTable: 
   line 120: 0

  Signature: length = 0x2
   00 41 

public scala.Option typeArguments();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#70; //Method scala/reflect/Manifest$class.typeArguments:(Lscala/reflect/Manifest;)Lscala/Option;
   4:	areturn
  LineNumberTable: 
   line 119: 0


public boolean equals(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#75; //Method scala/reflect/Manifest$class.equals:(Lscala/reflect/Manifest;Ljava/lang/Object;)Z
   5:	ireturn
  LineNumberTable: 
   line 119: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/reflect/Manifest$$anon$4;
   0      6      1    that       Ljava/lang/Object;


public boolean $greater$colon$greater(scala.reflect.Manifest);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#85; //Method scala/reflect/Manifest$class.$greater$colon$greater:(Lscala/reflect/Manifest;Lscala/reflect/Manifest;)Z
   5:	ireturn
  LineNumberTable: 
   line 119: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/reflect/Manifest$$anon$4;
   0      6      1    that       Lscala/reflect/Manifest;


public boolean $less$colon$less(scala.reflect.Manifest);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#88; //Method scala/reflect/Manifest$class.$less$colon$less:(Lscala/reflect/Manifest;Lscala/reflect/Manifest;)Z
   5:	ireturn
  LineNumberTable: 
   line 119: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/reflect/Manifest$$anon$4;
   0      6      1    that       Lscala/reflect/Manifest;


}

