Compiled from "Manifest.scala"
public final class scala.reflect.Manifest$$anon$1 extends java.lang.Object implements scala.reflect.Manifest
  SourceFile: "Manifest.scala"
  Signature: length = 0x2
   00 63 
  Scala: length = 0x
   
  InnerClass: 
   public final #104= #18 of #103; //$anon$1=class scala/reflect/Manifest$$anon$1 of class scala/reflect/Manifest
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Manifest.scala;
const #3 = Asciz	bitmap$0;
const #4 = Asciz	I;
const #5 = Asciz	value$1;
const #6 = Asciz	Ljava/lang/Object;;
const #7 = Asciz	toString;
const #8 = Asciz	Ljava/lang/String;;
const #9 = Asciz	erasure;
const #10 = Asciz	Ljava/lang/Class;;
const #11 = Asciz	Ljava/lang/Class<*>;;
const #12 = Asciz	Signature;
const #13 = Asciz	<init>;
const #14 = Asciz	(Ljava/lang/Object;)V;
const #15 = Asciz	Code;
const #16 = Asciz	LineNumberTable;
const #17 = Asciz	scala/reflect/Manifest$$anon$1;
const #18 = class	#17;	//  scala/reflect/Manifest$$anon$1
const #19 = NameAndType	#5:#6;//  value$1:Ljava/lang/Object;
const #20 = Field	#18.#19;	//  scala/reflect/Manifest$$anon$1.value$1:Ljava/lang/Object;
const #21 = Asciz	java/lang/Object;
const #22 = class	#21;	//  java/lang/Object
const #23 = Asciz	()V;
const #24 = NameAndType	#13:#23;//  "<init>":()V
const #25 = Method	#22.#24;	//  java/lang/Object."<init>":()V
const #26 = Asciz	scala/reflect/Manifest$class;
const #27 = class	#26;	//  scala/reflect/Manifest$class
const #28 = Asciz	$init$;
const #29 = Asciz	(Lscala/reflect/Manifest;)V;
const #30 = NameAndType	#28:#29;//  $init$:(Lscala/reflect/Manifest;)V
const #31 = Method	#27.#30;	//  scala/reflect/Manifest$class.$init$:(Lscala/reflect/Manifest;)V
const #32 = Asciz	()Ljava/lang/String;;
const #33 = NameAndType	#3:#4;//  bitmap$0:I
const #34 = Field	#18.#33;	//  scala/reflect/Manifest$$anon$1.bitmap$0:I
const #35 = Asciz	scala/collection/mutable/StringBuilder;
const #36 = class	#35;	//  scala/collection/mutable/StringBuilder
const #37 = Method	#36.#24;	//  scala/collection/mutable/StringBuilder."<init>":()V
const #38 = NameAndType	#7:#32;//  toString:()Ljava/lang/String;
const #39 = Method	#22.#38;	//  java/lang/Object.toString:()Ljava/lang/String;
const #40 = Asciz	append;
const #41 = Asciz	(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;;
const #42 = NameAndType	#40:#41;//  append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
const #43 = Method	#36.#42;	//  scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
const #44 = Asciz	.type;
const #45 = String	#44;	//  .type
const #46 = Method	#36.#38;	//  scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
const #47 = NameAndType	#7:#8;//  toString:Ljava/lang/String;
const #48 = Field	#18.#47;	//  scala/reflect/Manifest$$anon$1.toString:Ljava/lang/String;
const #49 = Asciz	scala/runtime/BoxedUnit;
const #50 = class	#49;	//  scala/runtime/BoxedUnit
const #51 = Asciz	UNIT;
const #52 = Asciz	Lscala/runtime/BoxedUnit;;
const #53 = NameAndType	#51:#52;//  UNIT:Lscala/runtime/BoxedUnit;
const #54 = Field	#50.#53;	//  scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
const #55 = Asciz	()Ljava/lang/Class;;
const #56 = Asciz	getClass;
const #57 = NameAndType	#56:#55;//  getClass:()Ljava/lang/Class;
const #58 = Method	#22.#57;	//  java/lang/Object.getClass:()Ljava/lang/Class;
const #59 = NameAndType	#9:#10;//  erasure:Ljava/lang/Class;
const #60 = Field	#18.#59;	//  scala/reflect/Manifest$$anon$1.erasure:Ljava/lang/Class;
const #61 = Asciz	scala/Predef$;
const #62 = class	#61;	//  scala/Predef$
const #63 = Asciz	MODULE$;
const #64 = Asciz	Lscala/Predef$;;
const #65 = NameAndType	#63:#64;//  MODULE$:Lscala/Predef$;
const #66 = Field	#62.#65;	//  scala/Predef$.MODULE$:Lscala/Predef$;
const #67 = Asciz	There is no singleton type for AnyVal values;
const #68 = String	#67;	//  There is no singleton type for AnyVal values
const #69 = Asciz	error;
const #70 = Asciz	(Ljava/lang/String;)Lscala/runtime/Nothing$;;
const #71 = NameAndType	#69:#70;//  error:(Ljava/lang/String;)Lscala/runtime/Nothing$;
const #72 = Method	#62.#71;	//  scala/Predef$.error:(Ljava/lang/String;)Lscala/runtime/Nothing$;
const #73 = Asciz	this;
const #74 = Asciz	Lscala/reflect/Manifest$$anon$1;;
const #75 = Asciz	temp3;
const #76 = Asciz	temp4;
const #77 = Asciz	LocalVariableTable;
const #78 = Asciz	()Ljava/lang/Class<*>;;
const #79 = Asciz	typeArguments;
const #80 = Asciz	()Lscala/Option;;
const #81 = Asciz	(Lscala/reflect/Manifest;)Lscala/Option;;
const #82 = NameAndType	#79:#81;//  typeArguments:(Lscala/reflect/Manifest;)Lscala/Option;
const #83 = Method	#27.#82;	//  scala/reflect/Manifest$class.typeArguments:(Lscala/reflect/Manifest;)Lscala/Option;
const #84 = Asciz	equals;
const #85 = Asciz	(Ljava/lang/Object;)Z;
const #86 = Asciz	(Lscala/reflect/Manifest;Ljava/lang/Object;)Z;
const #87 = NameAndType	#84:#86;//  equals:(Lscala/reflect/Manifest;Ljava/lang/Object;)Z
const #88 = Method	#27.#87;	//  scala/reflect/Manifest$class.equals:(Lscala/reflect/Manifest;Ljava/lang/Object;)Z
const #89 = Asciz	that;
const #90 = Asciz	$greater$colon$greater;
const #91 = Asciz	(Lscala/reflect/Manifest;)Z;
const #92 = Asciz	(Lscala/reflect/Manifest;Lscala/reflect/Manifest;)Z;
const #93 = NameAndType	#90:#92;//  $greater$colon$greater:(Lscala/reflect/Manifest;Lscala/reflect/Manifest;)Z
const #94 = Method	#27.#93;	//  scala/reflect/Manifest$class.$greater$colon$greater:(Lscala/reflect/Manifest;Lscala/reflect/Manifest;)Z
const #95 = Asciz	Lscala/reflect/Manifest;;
const #96 = Asciz	$less$colon$less;
const #97 = NameAndType	#96:#92;//  $less$colon$less:(Lscala/reflect/Manifest;Lscala/reflect/Manifest;)Z
const #98 = Method	#27.#97;	//  scala/reflect/Manifest$class.$less$colon$less:(Lscala/reflect/Manifest;Lscala/reflect/Manifest;)Z
const #99 = Asciz	Ljava/lang/Object;Lscala/reflect/Manifest<TT;>;;
const #100 = Asciz	Scala;
const #101 = Asciz	InnerClasses;
const #102 = Asciz	scala/reflect/Manifest;
const #103 = class	#102;	//  scala/reflect/Manifest
const #104 = Asciz	$anon$1;

{
public volatile int bitmap$0;

public scala.reflect.Manifest$$anon$1(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	putfield	#20; //Field value$1:Ljava/lang/Object;
   5:	aload_0
   6:	invokespecial	#25; //Method java/lang/Object."<init>":()V
   9:	aload_0
   10:	invokestatic	#31; //Method scala/reflect/Manifest$class.$init$:(Lscala/reflect/Manifest;)V
   13:	return
  LineNumberTable: 
   line 81: 0


public java.lang.String toString();
  Code:
   Stack=3, Locals=2, Args_size=1
   0:	aload_0
   1:	getfield	#34; //Field bitmap$0:I
   4:	iconst_4
   5:	iand
   6:	iconst_0
   7:	if_icmpne	69
   10:	aload_0
   11:	dup
   12:	astore_1
   13:	monitorenter
   14:	aload_0
   15:	getfield	#34; //Field bitmap$0:I
   18:	iconst_4
   19:	iand
   20:	iconst_0
   21:	if_icmpne	63
   24:	aload_0
   25:	new	#36; //class scala/collection/mutable/StringBuilder
   28:	dup
   29:	invokespecial	#37; //Method scala/collection/mutable/StringBuilder."<init>":()V
   32:	aload_0
   33:	getfield	#20; //Field value$1:Ljava/lang/Object;
   36:	invokevirtual	#39; //Method java/lang/Object.toString:()Ljava/lang/String;
   39:	invokevirtual	#43; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   42:	ldc	#45; //String .type
   44:	invokevirtual	#43; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   47:	invokevirtual	#46; //Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
   50:	putfield	#48; //Field toString:Ljava/lang/String;
   53:	aload_0
   54:	aload_0
   55:	getfield	#34; //Field bitmap$0:I
   58:	iconst_4
   59:	ior
   60:	putfield	#34; //Field bitmap$0:I
   63:	getstatic	#54; //Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
   66:	pop
   67:	aload_1
   68:	monitorexit
   69:	aload_0
   70:	getfield	#48; //Field toString:Ljava/lang/String;
   73:	areturn
   74:	aload_1
   75:	monitorexit
   76:	athrow
  Exception table:
   from   to  target type
    14    69    74   any
  LineNumberTable: 
   line 87: 0
   line 28: 6
   line 87: 10
   line 28: 20
   line 87: 24


public java.lang.Class erasure();
  Code:
   Stack=3, Locals=4, Args_size=1
   0:	aload_0
   1:	getfield	#34; //Field bitmap$0:I
   4:	iconst_1
   5:	iand
   6:	iconst_0
   7:	if_icmpne	74
   10:	aload_0
   11:	dup
   12:	astore_1
   13:	monitorenter
   14:	aload_0
   15:	getfield	#34; //Field bitmap$0:I
   18:	iconst_1
   19:	iand
   20:	iconst_0
   21:	if_icmpne	68
   24:	aload_0
   25:	aload_0
   26:	getfield	#20; //Field value$1:Ljava/lang/Object;
   29:	astore_2
   30:	aload_2
   31:	instanceof	#22; //class java/lang/Object
   34:	ifeq	59
   37:	aload_2
   38:	astore_3
   39:	aload_3
   40:	invokevirtual	#58; //Method java/lang/Object.getClass:()Ljava/lang/Class;
   43:	putfield	#60; //Field erasure:Ljava/lang/Class;
   46:	aload_0
   47:	aload_0
   48:	getfield	#34; //Field bitmap$0:I
   51:	iconst_1
   52:	ior
   53:	putfield	#34; //Field bitmap$0:I
   56:	goto	68
   59:	getstatic	#66; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   62:	ldc	#68; //String There is no singleton type for AnyVal values
   64:	invokevirtual	#72; //Method scala/Predef$.error:(Ljava/lang/String;)Lscala/runtime/Nothing$;
   67:	athrow
   68:	getstatic	#54; //Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
   71:	pop
   72:	aload_1
   73:	monitorexit
   74:	aload_0
   75:	getfield	#60; //Field erasure:Ljava/lang/Class;
   78:	areturn
   79:	aload_1
   80:	monitorexit
   81:	athrow
  Exception table:
   from   to  target type
    14    74    79   any
  LineNumberTable: 
   line 82: 0
   line 28: 6
   line 82: 10
   line 28: 20
   line 82: 24
   line 83: 25
   line 84: 39
   line 82: 43
   line 85: 59
   line 82: 68

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      82      0    this       Lscala/reflect/Manifest$$anon$1;
   30      38      2    temp3       Ljava/lang/Object;
   39      4      3    temp4       Ljava/lang/Object;

  Signature: length = 0x2
   00 4E 

public scala.Option typeArguments();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#83; //Method scala/reflect/Manifest$class.typeArguments:(Lscala/reflect/Manifest;)Lscala/Option;
   4:	areturn
  LineNumberTable: 
   line 81: 0


public boolean equals(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#88; //Method scala/reflect/Manifest$class.equals:(Lscala/reflect/Manifest;Ljava/lang/Object;)Z
   5:	ireturn
  LineNumberTable: 
   line 81: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/reflect/Manifest$$anon$1;
   0      6      1    that       Ljava/lang/Object;


public boolean $greater$colon$greater(scala.reflect.Manifest);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#94; //Method scala/reflect/Manifest$class.$greater$colon$greater:(Lscala/reflect/Manifest;Lscala/reflect/Manifest;)Z
   5:	ireturn
  LineNumberTable: 
   line 81: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/reflect/Manifest$$anon$1;
   0      6      1    that       Lscala/reflect/Manifest;


public boolean $less$colon$less(scala.reflect.Manifest);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#98; //Method scala/reflect/Manifest$class.$less$colon$less:(Lscala/reflect/Manifest;Lscala/reflect/Manifest;)Z
   5:	ireturn
  LineNumberTable: 
   line 81: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/reflect/Manifest$$anon$1;
   0      6      1    that       Lscala/reflect/Manifest;


}

