Compiled from "Invocation.scala"
public final class scala.reflect.Invocation$ extends java.lang.Object implements scala.ScalaObject
  SourceFile: "Invocation.scala"
  Scala: length = 0x
   
  InnerClass: 
   public #102= #81 of #101; //RichSymbol=class scala/reflect/Invocation$RichSymbol of class scala/reflect/Invocation
   public #103= #90 of #101; //PreservedAnyVal=class scala/reflect/Invocation$PreservedAnyVal of class scala/reflect/Invocation
   public #104= #96 of #101; //PreservedAnyRef=class scala/reflect/Invocation$PreservedAnyRef of class scala/reflect/Invocation
   public abstract #107= #106 of #101; //PrimitivePreserver=class scala/reflect/Invocation$PrimitivePreserver of class scala/reflect/Invocation
   public #108= #73 of #101; //ReflectionOperators=class scala/reflect/Invocation$ReflectionOperators of class scala/reflect/Invocation
   public #111= #110 of #101; //SymbolWithArguments=class scala/reflect/Invocation$SymbolWithArguments of class scala/reflect/Invocation
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Invocation.scala;
const #3 = Asciz	Scala;
const #4 = Asciz	MODULE$;
const #5 = Asciz	Lscala/reflect/Invocation$;;
const #6 = Asciz	<clinit>;
const #7 = Asciz	()V;
const #8 = Asciz	Code;
const #9 = Asciz	scala/reflect/Invocation$;
const #10 = class	#9;	//  scala/reflect/Invocation$
const #11 = Asciz	<init>;
const #12 = NameAndType	#11:#7;//  "<init>":()V
const #13 = Method	#10.#12;	//  scala/reflect/Invocation$."<init>":()V
const #14 = Asciz	LineNumberTable;
const #15 = Asciz	java/lang/Object;
const #16 = class	#15;	//  java/lang/Object
const #17 = Method	#16.#12;	//  java/lang/Object."<init>":()V
const #18 = NameAndType	#4:#5;//  MODULE$:Lscala/reflect/Invocation$;
const #19 = Field	#10.#18;	//  scala/reflect/Invocation$.MODULE$:Lscala/reflect/Invocation$;
const #20 = Asciz	getAnyValClass;
const #21 = Asciz	(Ljava/lang/Object;)Ljava/lang/Class;;
const #22 = Asciz	java/lang/Byte;
const #23 = class	#22;	//  java/lang/Byte
const #24 = Asciz	TYPE;
const #25 = Asciz	Ljava/lang/Class;;
const #26 = NameAndType	#24:#25;//  TYPE:Ljava/lang/Class;
const #27 = Field	#23.#26;	//  java/lang/Byte.TYPE:Ljava/lang/Class;
const #28 = Asciz	java/lang/Short;
const #29 = class	#28;	//  java/lang/Short
const #30 = Field	#29.#26;	//  java/lang/Short.TYPE:Ljava/lang/Class;
const #31 = Asciz	java/lang/Integer;
const #32 = class	#31;	//  java/lang/Integer
const #33 = Field	#32.#26;	//  java/lang/Integer.TYPE:Ljava/lang/Class;
const #34 = Asciz	java/lang/Long;
const #35 = class	#34;	//  java/lang/Long
const #36 = Field	#35.#26;	//  java/lang/Long.TYPE:Ljava/lang/Class;
const #37 = Asciz	java/lang/Float;
const #38 = class	#37;	//  java/lang/Float
const #39 = Field	#38.#26;	//  java/lang/Float.TYPE:Ljava/lang/Class;
const #40 = Asciz	java/lang/Double;
const #41 = class	#40;	//  java/lang/Double
const #42 = Field	#41.#26;	//  java/lang/Double.TYPE:Ljava/lang/Class;
const #43 = Asciz	java/lang/Character;
const #44 = class	#43;	//  java/lang/Character
const #45 = Field	#44.#26;	//  java/lang/Character.TYPE:Ljava/lang/Class;
const #46 = Asciz	java/lang/Boolean;
const #47 = class	#46;	//  java/lang/Boolean
const #48 = Field	#47.#26;	//  java/lang/Boolean.TYPE:Ljava/lang/Class;
const #49 = Asciz	scala/runtime/BoxedUnit;
const #50 = class	#49;	//  scala/runtime/BoxedUnit
const #51 = Asciz	java/lang/Void;
const #52 = class	#51;	//  java/lang/Void
const #53 = Field	#52.#26;	//  java/lang/Void.TYPE:Ljava/lang/Class;
const #54 = Asciz	scala/MatchError;
const #55 = class	#54;	//  scala/MatchError
const #56 = Asciz	toString;
const #57 = Asciz	()Ljava/lang/String;;
const #58 = NameAndType	#56:#57;//  toString:()Ljava/lang/String;
const #59 = Method	#16.#58;	//  java/lang/Object.toString:()Ljava/lang/String;
const #60 = Asciz	(Ljava/lang/String;)V;
const #61 = NameAndType	#11:#60;//  "<init>":(Ljava/lang/String;)V
const #62 = Method	#55.#61;	//  scala/MatchError."<init>":(Ljava/lang/String;)V
const #63 = Asciz	this;
const #64 = Asciz	x;
const #65 = Asciz	Ljava/lang/Object;;
const #66 = Asciz	temp13;
const #67 = Asciz	LocalVariableTable;
const #68 = Asciz	(Ljava/lang/Object;)Ljava/lang/Class<*>;;
const #69 = Asciz	Signature;
const #70 = Asciz	makeReflectionOperators;
const #71 = Asciz	(Ljava/lang/Object;)Lscala/reflect/Invocation$ReflectionOperators;;
const #72 = Asciz	scala/reflect/Invocation$ReflectionOperators;
const #73 = class	#72;	//  scala/reflect/Invocation$ReflectionOperators
const #74 = Asciz	(Ljava/lang/Object;)V;
const #75 = NameAndType	#11:#74;//  "<init>":(Ljava/lang/Object;)V
const #76 = Method	#73.#75;	//  scala/reflect/Invocation$ReflectionOperators."<init>":(Ljava/lang/Object;)V
const #77 = Asciz	<T:Ljava/lang/Object;>(TT;)Lscala/reflect/Invocation$ReflectionOperators<TT;>;;
const #78 = Asciz	makeRichSymbol;
const #79 = Asciz	(Lscala/Symbol;)Lscala/reflect/Invocation$RichSymbol;;
const #80 = Asciz	scala/reflect/Invocation$RichSymbol;
const #81 = class	#80;	//  scala/reflect/Invocation$RichSymbol
const #82 = Asciz	(Lscala/Symbol;)V;
const #83 = NameAndType	#11:#82;//  "<init>":(Lscala/Symbol;)V
const #84 = Method	#81.#83;	//  scala/reflect/Invocation$RichSymbol."<init>":(Lscala/Symbol;)V
const #85 = Asciz	sym;
const #86 = Asciz	Lscala/Symbol;;
const #87 = Asciz	makePreservedAnyVal;
const #88 = Asciz	(Ljava/lang/Object;)Lscala/reflect/Invocation$PreservedAnyVal;;
const #89 = Asciz	scala/reflect/Invocation$PreservedAnyVal;
const #90 = class	#89;	//  scala/reflect/Invocation$PreservedAnyVal
const #91 = Method	#90.#75;	//  scala/reflect/Invocation$PreservedAnyVal."<init>":(Ljava/lang/Object;)V
const #92 = Asciz	<T:Ljava/lang/Object;>(TT;)Lscala/reflect/Invocation$PreservedAnyVal<TT;>;;
const #93 = Asciz	makePreservedAnyRef;
const #94 = Asciz	(Ljava/lang/Object;)Lscala/reflect/Invocation$PreservedAnyRef;;
const #95 = Asciz	scala/reflect/Invocation$PreservedAnyRef;
const #96 = class	#95;	//  scala/reflect/Invocation$PreservedAnyRef
const #97 = Method	#96.#75;	//  scala/reflect/Invocation$PreservedAnyRef."<init>":(Ljava/lang/Object;)V
const #98 = Asciz	<T:Ljava/lang/Object;>(TT;)Lscala/reflect/Invocation$PreservedAnyRef<TT;>;;
const #99 = Asciz	InnerClasses;
const #100 = Asciz	scala/reflect/Invocation;
const #101 = class	#100;	//  scala/reflect/Invocation
const #102 = Asciz	RichSymbol;
const #103 = Asciz	PreservedAnyVal;
const #104 = Asciz	PreservedAnyRef;
const #105 = Asciz	scala/reflect/Invocation$PrimitivePreserver;
const #106 = class	#105;	//  scala/reflect/Invocation$PrimitivePreserver
const #107 = Asciz	PrimitivePreserver;
const #108 = Asciz	ReflectionOperators;
const #109 = Asciz	scala/reflect/Invocation$SymbolWithArguments;
const #110 = class	#109;	//  scala/reflect/Invocation$SymbolWithArguments
const #111 = Asciz	SymbolWithArguments;
const #112 = Asciz	scala/ScalaObject;
const #113 = class	#112;	//  scala/ScalaObject

{
public static final scala.reflect.Invocation$ MODULE$;

public static {};
  Code:
   Stack=1, Locals=0, Args_size=0
   0:	new	#10; //class scala/reflect/Invocation$
   3:	invokespecial	#13; //Method "<init>":()V
   6:	return

public java.lang.Class getAnyValClass(java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=2
   0:	aload_1
   1:	astore_2
   2:	aload_2
   3:	instanceof	#23; //class java/lang/Byte
   6:	ifeq	15
   9:	getstatic	#27; //Field java/lang/Byte.TYPE:Ljava/lang/Class;
   12:	goto	116
   15:	aload_2
   16:	instanceof	#29; //class java/lang/Short
   19:	ifeq	28
   22:	getstatic	#30; //Field java/lang/Short.TYPE:Ljava/lang/Class;
   25:	goto	116
   28:	aload_2
   29:	instanceof	#32; //class java/lang/Integer
   32:	ifeq	41
   35:	getstatic	#33; //Field java/lang/Integer.TYPE:Ljava/lang/Class;
   38:	goto	116
   41:	aload_2
   42:	instanceof	#35; //class java/lang/Long
   45:	ifeq	54
   48:	getstatic	#36; //Field java/lang/Long.TYPE:Ljava/lang/Class;
   51:	goto	116
   54:	aload_2
   55:	instanceof	#38; //class java/lang/Float
   58:	ifeq	67
   61:	getstatic	#39; //Field java/lang/Float.TYPE:Ljava/lang/Class;
   64:	goto	116
   67:	aload_2
   68:	instanceof	#41; //class java/lang/Double
   71:	ifeq	80
   74:	getstatic	#42; //Field java/lang/Double.TYPE:Ljava/lang/Class;
   77:	goto	116
   80:	aload_2
   81:	instanceof	#44; //class java/lang/Character
   84:	ifeq	93
   87:	getstatic	#45; //Field java/lang/Character.TYPE:Ljava/lang/Class;
   90:	goto	116
   93:	aload_2
   94:	instanceof	#47; //class java/lang/Boolean
   97:	ifeq	106
   100:	getstatic	#48; //Field java/lang/Boolean.TYPE:Ljava/lang/Class;
   103:	goto	116
   106:	aload_2
   107:	instanceof	#50; //class scala/runtime/BoxedUnit
   110:	ifeq	117
   113:	getstatic	#53; //Field java/lang/Void.TYPE:Ljava/lang/Class;
   116:	areturn
   117:	new	#55; //class scala/MatchError
   120:	dup
   121:	aload_2
   122:	invokevirtual	#59; //Method java/lang/Object.toString:()Ljava/lang/String;
   125:	invokespecial	#62; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   128:	athrow
  LineNumberTable: 
   line 123: 0
   line 124: 9
   line 123: 15
   line 125: 22
   line 123: 28
   line 126: 35
   line 123: 41
   line 127: 48
   line 123: 54
   line 128: 61
   line 123: 67
   line 129: 74
   line 123: 80
   line 130: 87
   line 123: 93
   line 131: 100
   line 123: 106
   line 132: 113
   line 123: 116

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      129      0    this       Lscala/reflect/Invocation$;
   0      129      1    x       Ljava/lang/Object;
   2      127      2    temp13       Ljava/lang/Object;

  Signature: length = 0x2
   00 44 

public scala.reflect.Invocation$ReflectionOperators makeReflectionOperators(java.lang.Object);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	new	#73; //class scala/reflect/Invocation$ReflectionOperators
   3:	dup
   4:	aload_1
   5:	invokespecial	#76; //Method scala/reflect/Invocation$ReflectionOperators."<init>":(Ljava/lang/Object;)V
   8:	areturn
  LineNumberTable: 
   line 119: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/reflect/Invocation$;
   0      9      1    x       Ljava/lang/Object;

  Signature: length = 0x2
   00 4D 

public scala.reflect.Invocation$RichSymbol makeRichSymbol(scala.Symbol);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	new	#81; //class scala/reflect/Invocation$RichSymbol
   3:	dup
   4:	aload_1
   5:	invokespecial	#84; //Method scala/reflect/Invocation$RichSymbol."<init>":(Lscala/Symbol;)V
   8:	areturn
  LineNumberTable: 
   line 97: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/reflect/Invocation$;
   0      9      1    sym       Lscala/Symbol;


public scala.reflect.Invocation$PreservedAnyVal makePreservedAnyVal(java.lang.Object);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	new	#90; //class scala/reflect/Invocation$PreservedAnyVal
   3:	dup
   4:	aload_1
   5:	invokespecial	#91; //Method scala/reflect/Invocation$PreservedAnyVal."<init>":(Ljava/lang/Object;)V
   8:	areturn
  LineNumberTable: 
   line 68: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/reflect/Invocation$;
   0      9      1    x       Ljava/lang/Object;

  Signature: length = 0x2
   00 5C 

public scala.reflect.Invocation$PreservedAnyRef makePreservedAnyRef(java.lang.Object);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	new	#96; //class scala/reflect/Invocation$PreservedAnyRef
   3:	dup
   4:	aload_1
   5:	invokespecial	#97; //Method scala/reflect/Invocation$PreservedAnyRef."<init>":(Ljava/lang/Object;)V
   8:	areturn
  LineNumberTable: 
   line 67: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/reflect/Invocation$;
   0      9      1    x       Ljava/lang/Object;

  Signature: length = 0x2
   00 62 

}

