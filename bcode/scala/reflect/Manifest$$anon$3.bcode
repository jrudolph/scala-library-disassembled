Compiled from "Manifest.scala"
public final class scala.reflect.Manifest$$anon$3 extends java.lang.Object implements scala.reflect.Manifest
  SourceFile: "Manifest.scala"
  Signature: length = 0x2
   00 FFFFFFA2 
  Scala: length = 0x
   
  InnerClass: 
   public final #165= #21 of #101; //$anon$3=class scala/reflect/Manifest$$anon$3 of class scala/reflect/Manifest
   public final #166= #114 of #21; //$anonfun$$less$colon$less$1=class scala/reflect/Manifest$$anon$3$$anonfun$$less$colon$less$1 of class scala/reflect/Manifest$$anon$3
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Manifest.scala;
const #3 = Asciz	bitmap$0;
const #4 = Asciz	I;
const #5 = Asciz	args$1;
const #6 = Asciz	Lscala/collection/Sequence;;
const #7 = Asciz	toString;
const #8 = Asciz	Ljava/lang/String;;
const #9 = Asciz	typeArguments;
const #10 = Asciz	Lscala/Some;;
const #11 = Asciz	Lscala/Some<Lscala/collection/immutable/List<Lscala/reflect/Manifest<*>;>;>;;
const #12 = Asciz	Signature;
const #13 = Asciz	erasure;
const #14 = Asciz	Ljava/lang/Class;;
const #15 = Asciz	Ljava/lang/Class<*>;;
const #16 = Asciz	<init>;
const #17 = Asciz	(Ljava/lang/Class;Lscala/collection/Sequence;)V;
const #18 = Asciz	Code;
const #19 = Asciz	LineNumberTable;
const #20 = Asciz	scala/reflect/Manifest$$anon$3;
const #21 = class	#20;	//  scala/reflect/Manifest$$anon$3
const #22 = NameAndType	#5:#6;//  args$1:Lscala/collection/Sequence;
const #23 = Field	#21.#22;	//  scala/reflect/Manifest$$anon$3.args$1:Lscala/collection/Sequence;
const #24 = Asciz	java/lang/Object;
const #25 = class	#24;	//  java/lang/Object
const #26 = Asciz	()V;
const #27 = NameAndType	#16:#26;//  "<init>":()V
const #28 = Method	#25.#27;	//  java/lang/Object."<init>":()V
const #29 = Asciz	scala/reflect/Manifest$class;
const #30 = class	#29;	//  scala/reflect/Manifest$class
const #31 = Asciz	$init$;
const #32 = Asciz	(Lscala/reflect/Manifest;)V;
const #33 = NameAndType	#31:#32;//  $init$:(Lscala/reflect/Manifest;)V
const #34 = Method	#30.#33;	//  scala/reflect/Manifest$class.$init$:(Lscala/reflect/Manifest;)V
const #35 = NameAndType	#13:#14;//  erasure:Ljava/lang/Class;
const #36 = Field	#21.#35;	//  scala/reflect/Manifest$$anon$3.erasure:Ljava/lang/Class;
const #37 = Asciz	scala/Some;
const #38 = class	#37;	//  scala/Some
const #39 = Asciz	scala/collection/generic/TraversableTemplate;
const #40 = class	#39;	//  scala/collection/generic/TraversableTemplate
const #41 = Asciz	toList;
const #42 = Asciz	()Lscala/collection/immutable/List;;
const #43 = NameAndType	#41:#42;//  toList:()Lscala/collection/immutable/List;
const #44 = InterfaceMethod	#40.#43;	//  scala/collection/generic/TraversableTemplate.toList:()Lscala/collection/immutable/List;
const #45 = Asciz	(Ljava/lang/Object;)V;
const #46 = NameAndType	#16:#45;//  "<init>":(Ljava/lang/Object;)V
const #47 = Method	#38.#46;	//  scala/Some."<init>":(Ljava/lang/Object;)V
const #48 = NameAndType	#9:#10;//  typeArguments:Lscala/Some;
const #49 = Field	#21.#48;	//  scala/reflect/Manifest$$anon$3.typeArguments:Lscala/Some;
const #50 = Asciz	()Lscala/Option;;
const #51 = Asciz	()Lscala/Some;;
const #52 = NameAndType	#9:#51;//  typeArguments:()Lscala/Some;
const #53 = Method	#21.#52;	//  scala/reflect/Manifest$$anon$3.typeArguments:()Lscala/Some;
const #54 = Asciz	()Ljava/lang/String;;
const #55 = NameAndType	#3:#4;//  bitmap$0:I
const #56 = Field	#21.#55;	//  scala/reflect/Manifest$$anon$3.bitmap$0:I
const #57 = Asciz	scala/collection/mutable/StringBuilder;
const #58 = class	#57;	//  scala/collection/mutable/StringBuilder
const #59 = Method	#58.#27;	//  scala/collection/mutable/StringBuilder."<init>":()V
const #60 = Asciz	()Ljava/lang/Class;;
const #61 = NameAndType	#13:#60;//  erasure:()Ljava/lang/Class;
const #62 = Method	#21.#61;	//  scala/reflect/Manifest$$anon$3.erasure:()Ljava/lang/Class;
const #63 = Asciz	java/lang/Class;
const #64 = class	#63;	//  java/lang/Class
const #65 = Asciz	isArray;
const #66 = Asciz	()Z;
const #67 = NameAndType	#65:#66;//  isArray:()Z
const #68 = Method	#64.#67;	//  java/lang/Class.isArray:()Z
const #69 = Asciz	Array;
const #70 = String	#69;	//  Array
const #71 = Asciz	getName;
const #72 = NameAndType	#71:#54;//  getName:()Ljava/lang/String;
const #73 = Method	#64.#72;	//  java/lang/Class.getName:()Ljava/lang/String;
const #74 = Asciz	append;
const #75 = Asciz	(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;;
const #76 = NameAndType	#74:#75;//  append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
const #77 = Method	#58.#76;	//  scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
const #78 = Asciz	[;
const #79 = String	#78;	//  [
const #80 = Asciz	, ;
const #81 = String	#80;	//  , 
const #82 = Asciz	];
const #83 = String	#82;	//  ]
const #84 = Asciz	mkString;
const #85 = Asciz	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;;
const #86 = NameAndType	#84:#85;//  mkString:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
const #87 = InterfaceMethod	#40.#86;	//  scala/collection/generic/TraversableTemplate.mkString:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
const #88 = NameAndType	#7:#54;//  toString:()Ljava/lang/String;
const #89 = Method	#58.#88;	//  scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
const #90 = NameAndType	#7:#8;//  toString:Ljava/lang/String;
const #91 = Field	#21.#90;	//  scala/reflect/Manifest$$anon$3.toString:Ljava/lang/String;
const #92 = Asciz	scala/runtime/BoxedUnit;
const #93 = class	#92;	//  scala/runtime/BoxedUnit
const #94 = Asciz	UNIT;
const #95 = Asciz	Lscala/runtime/BoxedUnit;;
const #96 = NameAndType	#94:#95;//  UNIT:Lscala/runtime/BoxedUnit;
const #97 = Field	#93.#96;	//  scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
const #98 = Asciz	$less$colon$less;
const #99 = Asciz	(Lscala/reflect/Manifest;)Z;
const #100 = Asciz	scala/reflect/Manifest;
const #101 = class	#100;	//  scala/reflect/Manifest
const #102 = NameAndType	#9:#50;//  typeArguments:()Lscala/Option;
const #103 = InterfaceMethod	#101.#102;	//  scala/reflect/Manifest.typeArguments:()Lscala/Option;
const #104 = Asciz	x;
const #105 = Asciz	()Ljava/lang/Object;;
const #106 = NameAndType	#104:#105;//  x:()Ljava/lang/Object;
const #107 = Method	#38.#106;	//  scala/Some.x:()Ljava/lang/Object;
const #108 = Asciz	scala/collection/immutable/List;
const #109 = class	#108;	//  scala/collection/immutable/List
const #110 = Asciz	(Lscala/reflect/Manifest;Lscala/reflect/Manifest;)Z;
const #111 = NameAndType	#98:#110;//  $less$colon$less:(Lscala/reflect/Manifest;Lscala/reflect/Manifest;)Z
const #112 = Method	#30.#111;	//  scala/reflect/Manifest$class.$less$colon$less:(Lscala/reflect/Manifest;Lscala/reflect/Manifest;)Z
const #113 = Asciz	scala/reflect/Manifest$$anon$3$$anonfun$$less$colon$less$1;
const #114 = class	#113;	//  scala/reflect/Manifest$$anon$3$$anonfun$$less$colon$less$1
const #115 = Asciz	(Lscala/reflect/Manifest$$anon$3;)V;
const #116 = NameAndType	#16:#115;//  "<init>":(Lscala/reflect/Manifest$$anon$3;)V
const #117 = Method	#114.#116;	//  scala/reflect/Manifest$$anon$3$$anonfun$$less$colon$less$1."<init>":(Lscala/reflect/Manifest$$anon$3;)V
const #118 = Asciz	scala/collection/generic/SequenceTemplate;
const #119 = class	#118;	//  scala/collection/generic/SequenceTemplate
const #120 = Asciz	equalsWith;
const #121 = Asciz	(Lscala/collection/Sequence;Lscala/Function2;)Z;
const #122 = NameAndType	#120:#121;//  equalsWith:(Lscala/collection/Sequence;Lscala/Function2;)Z
const #123 = InterfaceMethod	#119.#122;	//  scala/collection/generic/SequenceTemplate.equalsWith:(Lscala/collection/Sequence;Lscala/Function2;)Z
const #124 = Asciz	scala/None$;
const #125 = class	#124;	//  scala/None$
const #126 = Asciz	MODULE$;
const #127 = Asciz	Lscala/None$;;
const #128 = NameAndType	#126:#127;//  MODULE$:Lscala/None$;
const #129 = Field	#125.#128;	//  scala/None$.MODULE$:Lscala/None$;
const #130 = Asciz	equals;
const #131 = Asciz	(Ljava/lang/Object;)Z;
const #132 = NameAndType	#130:#131;//  equals:(Ljava/lang/Object;)Z
const #133 = Method	#25.#132;	//  java/lang/Object.equals:(Ljava/lang/Object;)Z
const #134 = Asciz	scala/MatchError;
const #135 = class	#134;	//  scala/MatchError
const #136 = Asciz	scala/Option;
const #137 = class	#136;	//  scala/Option
const #138 = Method	#137.#88;	//  scala/Option.toString:()Ljava/lang/String;
const #139 = Asciz	(Ljava/lang/String;)V;
const #140 = NameAndType	#16:#139;//  "<init>":(Ljava/lang/String;)V
const #141 = Method	#135.#140;	//  scala/MatchError."<init>":(Ljava/lang/String;)V
const #142 = Asciz	this;
const #143 = Asciz	Lscala/reflect/Manifest$$anon$3;;
const #144 = Asciz	that;
const #145 = Asciz	Lscala/reflect/Manifest;;
const #146 = Asciz	temp5;
const #147 = Asciz	Lscala/Option;;
const #148 = Asciz	temp6;
const #149 = Asciz	temp7;
const #150 = Asciz	Lscala/collection/immutable/List;;
const #151 = Asciz	LocalVariableTable;
const #152 = Asciz	(Lscala/reflect/Manifest<*>;)Z;
const #153 = Asciz	()Lscala/Some<Lscala/collection/immutable/List<Lscala/reflect/Manifest<*>;>;>;;
const #154 = Asciz	()Ljava/lang/Class<*>;;
const #155 = Asciz	(Lscala/reflect/Manifest;Ljava/lang/Object;)Z;
const #156 = NameAndType	#130:#155;//  equals:(Lscala/reflect/Manifest;Ljava/lang/Object;)Z
const #157 = Method	#30.#156;	//  scala/reflect/Manifest$class.equals:(Lscala/reflect/Manifest;Ljava/lang/Object;)Z
const #158 = Asciz	Ljava/lang/Object;;
const #159 = Asciz	$greater$colon$greater;
const #160 = NameAndType	#159:#110;//  $greater$colon$greater:(Lscala/reflect/Manifest;Lscala/reflect/Manifest;)Z
const #161 = Method	#30.#160;	//  scala/reflect/Manifest$class.$greater$colon$greater:(Lscala/reflect/Manifest;Lscala/reflect/Manifest;)Z
const #162 = Asciz	Ljava/lang/Object;Lscala/reflect/Manifest<TT;>;;
const #163 = Asciz	Scala;
const #164 = Asciz	InnerClasses;
const #165 = Asciz	$anon$3;
const #166 = Asciz	$anonfun$$less$colon$less$1;

{
public volatile int bitmap$0;

public scala.reflect.Manifest$$anon$3(java.lang.Class, scala.collection.Sequence);
  Code:
   Stack=4, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_2
   2:	putfield	#23; //Field args$1:Lscala/collection/Sequence;
   5:	aload_0
   6:	invokespecial	#28; //Method java/lang/Object."<init>":()V
   9:	aload_0
   10:	invokestatic	#34; //Method scala/reflect/Manifest$class.$init$:(Lscala/reflect/Manifest;)V
   13:	aload_0
   14:	aload_1
   15:	putfield	#36; //Field erasure:Ljava/lang/Class;
   18:	aload_0
   19:	new	#38; //class scala/Some
   22:	dup
   23:	aload_2
   24:	invokeinterface	#44,  1; //InterfaceMethod scala/collection/generic/TraversableTemplate.toList:()Lscala/collection/immutable/List;
   29:	invokespecial	#47; //Method scala/Some."<init>":(Ljava/lang/Object;)V
   32:	putfield	#49; //Field typeArguments:Lscala/Some;
   35:	return
  LineNumberTable: 
   line 101: 0
   line 102: 13
   line 103: 18


public scala.Option typeArguments();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#53; //Method typeArguments:()Lscala/Some;
   4:	areturn
  LineNumberTable: 
   line 101: 0


public java.lang.String toString();
  Code:
   Stack=6, Locals=2, Args_size=1
   0:	aload_0
   1:	getfield	#56; //Field bitmap$0:I
   4:	iconst_1
   5:	iand
   6:	iconst_0
   7:	if_icmpne	102
   10:	aload_0
   11:	dup
   12:	astore_1
   13:	monitorenter
   14:	aload_0
   15:	getfield	#56; //Field bitmap$0:I
   18:	iconst_1
   19:	iand
   20:	iconst_0
   21:	if_icmpne	96
   24:	aload_0
   25:	new	#58; //class scala/collection/mutable/StringBuilder
   28:	dup
   29:	invokespecial	#59; //Method scala/collection/mutable/StringBuilder."<init>":()V
   32:	aload_0
   33:	invokevirtual	#62; //Method erasure:()Ljava/lang/Class;
   36:	invokevirtual	#68; //Method java/lang/Class.isArray:()Z
   39:	ifeq	47
   42:	ldc	#70; //String Array
   44:	goto	54
   47:	aload_0
   48:	invokevirtual	#62; //Method erasure:()Ljava/lang/Class;
   51:	invokevirtual	#73; //Method java/lang/Class.getName:()Ljava/lang/String;
   54:	invokevirtual	#77; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   57:	aload_0
   58:	getfield	#23; //Field args$1:Lscala/collection/Sequence;
   61:	invokeinterface	#44,  1; //InterfaceMethod scala/collection/generic/TraversableTemplate.toList:()Lscala/collection/immutable/List;
   66:	ldc	#79; //String [
   68:	ldc	#81; //String , 
   70:	ldc	#83; //String ]
   72:	invokeinterface	#87,  4; //InterfaceMethod scala/collection/generic/TraversableTemplate.mkString:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
   77:	invokevirtual	#77; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   80:	invokevirtual	#89; //Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
   83:	putfield	#91; //Field toString:Ljava/lang/String;
   86:	aload_0
   87:	aload_0
   88:	getfield	#56; //Field bitmap$0:I
   91:	iconst_1
   92:	ior
   93:	putfield	#56; //Field bitmap$0:I
   96:	getstatic	#97; //Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
   99:	pop
   100:	aload_1
   101:	monitorexit
   102:	aload_0
   103:	getfield	#91; //Field toString:Ljava/lang/String;
   106:	areturn
   107:	aload_1
   108:	monitorexit
   109:	athrow
  Exception table:
   from   to  target type
    14   102   107   any
  LineNumberTable: 
   line 112: 0
   line 28: 6
   line 112: 10
   line 28: 20
   line 112: 24
   line 113: 25
   line 114: 57
   line 113: 80
   line 112: 83


public boolean $less$colon$less(scala.reflect.Manifest);
  Code:
   Stack=5, Locals=6, Args_size=2
   0:	aload_1
   1:	invokeinterface	#103,  1; //InterfaceMethod scala/reflect/Manifest.typeArguments:()Lscala/Option;
   6:	astore_2
   7:	aload_2
   8:	instanceof	#38; //class scala/Some
   11:	ifeq	66
   14:	aload_2
   15:	checkcast	#38; //class scala/Some
   18:	astore_3
   19:	aload_3
   20:	invokevirtual	#107; //Method scala/Some.x:()Ljava/lang/Object;
   23:	checkcast	#109; //class scala/collection/immutable/List
   26:	astore	4
   28:	aload_0
   29:	aload_1
   30:	invokestatic	#112; //Method scala/reflect/Manifest$class.$less$colon$less:(Lscala/reflect/Manifest;Lscala/reflect/Manifest;)Z
   33:	ifeq	62
   36:	aload_0
   37:	getfield	#23; //Field args$1:Lscala/collection/Sequence;
   40:	aload	4
   42:	new	#114; //class scala/reflect/Manifest$$anon$3$$anonfun$$less$colon$less$1
   45:	dup
   46:	aload_0
   47:	invokespecial	#117; //Method scala/reflect/Manifest$$anon$3$$anonfun$$less$colon$less$1."<init>":(Lscala/reflect/Manifest$$anon$3;)V
   50:	invokeinterface	#123,  3; //InterfaceMethod scala/collection/generic/SequenceTemplate.equalsWith:(Lscala/collection/Sequence;Lscala/Function2;)Z
   55:	ifeq	62
   58:	iconst_1
   59:	goto	101
   62:	iconst_0
   63:	goto	101
   66:	getstatic	#129; //Field scala/None$.MODULE$:Lscala/None$;
   69:	aload_2
   70:	astore	5
   72:	dup
   73:	ifnonnull	85
   76:	pop
   77:	aload	5
   79:	ifnull	93
   82:	goto	102
   85:	aload	5
   87:	invokevirtual	#133; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   90:	ifeq	102
   93:	aload_2
   94:	instanceof	#125; //class scala/None$
   97:	ifeq	102
   100:	iconst_0
   101:	ireturn
   102:	new	#135; //class scala/MatchError
   105:	dup
   106:	aload_2
   107:	invokevirtual	#138; //Method scala/Option.toString:()Ljava/lang/String;
   110:	invokespecial	#141; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   113:	athrow
  LineNumberTable: 
   line 105: 0
   line 107: 28
   line 106: 40
   line 107: 42
   line 105: 66
   line 109: 100
   line 105: 101

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      114      0    this       Lscala/reflect/Manifest$$anon$3;
   0      114      1    that       Lscala/reflect/Manifest;
   7      107      2    temp5       Lscala/Option;
   19      47      3    temp6       Lscala/Some;
   28      38      4    temp7       Lscala/collection/immutable/List;

  Signature: length = 0x2
   00 FFFFFF98 

public scala.Some typeArguments();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#49; //Field typeArguments:Lscala/Some;
   4:	areturn
  LineNumberTable: 
   line 103: 0

  Signature: length = 0x2
   00 FFFFFF99 

public java.lang.Class erasure();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#36; //Field erasure:Ljava/lang/Class;
   4:	areturn
  LineNumberTable: 
   line 102: 0

  Signature: length = 0x2
   00 FFFFFF9A 

public boolean equals(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#157; //Method scala/reflect/Manifest$class.equals:(Lscala/reflect/Manifest;Ljava/lang/Object;)Z
   5:	ireturn
  LineNumberTable: 
   line 101: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/reflect/Manifest$$anon$3;
   0      6      1    that       Ljava/lang/Object;


public boolean $greater$colon$greater(scala.reflect.Manifest);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#161; //Method scala/reflect/Manifest$class.$greater$colon$greater:(Lscala/reflect/Manifest;Lscala/reflect/Manifest;)Z
   5:	ireturn
  LineNumberTable: 
   line 101: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/reflect/Manifest$$anon$3;
   0      6      1    that       Lscala/reflect/Manifest;


}

