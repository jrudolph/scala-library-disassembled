Compiled from "Tree.scala"
public class scala.reflect.If extends scala.reflect.Tree implements scala.ScalaObject,scala.Product,java.io.Serializable
  SourceFile: "Tree.scala"
  ScalaSig: length = 0x409
   05 00 FFFFFF81 10 06 08 01 02 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF80 40 07 02 02
   49 66 0A 02 03 04 01 07 72 65 66 6C 65 63 74 0A
   01 05 01 05 73 63 61 6C 61 03 00 13 04 00 08 0C
   10 10 02 09 0A 0D 01 02 09 02 0B 02 02 04 54 72
   65 65 10 02 0D 0E 0D 01 04 09 02 0F 04 02 0B 53
   63 61 6C 61 4F 62 6A 65 63 74 10 02 0D 11 09 02
   12 04 02 07 50 72 6F 64 75 63 74 08 08 14 00 FFFFFF82
   FFFFFFCA FFFFFF80 FFFFFF84 00 15 01 09 63 6F 6E 64 69 74 69 6F 6E
   15 01 08 08 08 17 00 FFFFFF82 FFFFFF88 FFFFFFA0 FFFFFF80 04 08 01 0A 63
   6F 6E 64 69 74 69 6F 6E 20 08 08 19 00 FFFFFF82 FFFFFFCA FFFFFF80
   FFFFFF84 00 15 01 08 74 72 75 65 43 61 73 65 08 08 1B
   00 FFFFFF82 FFFFFF88 FFFFFFA0 FFFFFF80 04 08 01 09 74 72 75 65 43 61 73
   65 20 08 08 1D 00 FFFFFF82 FFFFFFCA FFFFFF80 FFFFFF84 00 15 01 09 66 61
   6C 73 65 43 61 73 65 08 08 1F 00 FFFFFF82 FFFFFF88 FFFFFFA0 FFFFFF80 04
   08 01 0A 66 61 6C 73 65 43 61 73 65 20 08 05 21
   00 FFFFFF84 00 22 01 06 3C 69 6E 69 74 3E 14 04 23 24
   25 26 10 02 09 00 08 05 14 20 FFFFFFC0 00 08 08 05 19
   20 FFFFFFC0 00 08 08 05 1D 20 FFFFFFC0 00 08 08 07 28 00 FFFFFF81
   FFFFFF80 FFFFFF84 00 29 01 04 63 6F 70 79 14 04 23 2A 38 3B
   08 08 2B 14 27 FFFFFF90 FFFFFF80 FFFFFFC0 00 08 08 07 2C 00 FFFFFF91 FFFFFF80
   FFFFFF84 00 2D 01 0E 63 6F 70 79 24 64 65 66 61 75 6C
   74 24 31 15 01 2E 2A 02 08 2F 2B 01 30 10 02 31
   36 0D 01 32 0A 02 33 34 01 09 75 6E 63 68 65 63
   6B 65 64 0A 02 35 04 01 0A 61 6E 6E 6F 74 61 74
   69 6F 6E 09 02 37 32 02 11 75 6E 63 68 65 63 6B
   65 64 56 61 72 69 61 6E 63 65 08 08 39 19 27 FFFFFF90
   FFFFFF80 FFFFFFC0 00 08 08 07 3A 00 FFFFFF91 FFFFFF80 FFFFFF84 00 2D 01 0E 63
   6F 70 79 24 64 65 66 61 75 6C 74 24 32 08 08 3C
   1D 27 FFFFFF90 FFFFFF80 FFFFFFC0 00 08 08 07 3D 00 FFFFFF91 FFFFFF80 FFFFFF84 00 2D
   01 0E 63 6F 70 79 24 64 65 66 61 75 6C 74 24 33
   08 08 3F 00 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF84 20 40 01 08 68 61 73 68
   43 6F 64 65 14 01 41 10 02 0D 42 09 02 43 04 02
   03 49 6E 74 08 08 45 00 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF84 20 46 01 08
   74 6F 53 74 72 69 6E 67 14 01 47 10 02 48 4B 0E
   02 0D 49 09 02 4A 04 01 06 50 72 65 64 65 66 09
   02 4C 4D 02 06 53 74 72 69 6E 67 0A 02 4A 04 08
   08 4F 00 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF84 20 50 01 06 65 71 75 61 6C
   73 14 02 51 54 10 02 0D 52 09 02 53 04 02 07 42
   6F 6F 6C 65 61 6E 08 07 55 4E FFFFFF81 FFFFFF80 FFFFFFC0 00 56 01
   03 78 24 31 10 02 0D 57 09 02 58 04 02 03 41 6E
   79 08 08 5A 00 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF84 20 5B 01 0D 70 72 6F
   64 75 63 74 50 72 65 66 69 78 15 01 5C 10 02 5D
   62 0D 01 5E 0A 02 5F 60 01 04 6C 61 6E 67 0A 01
   61 01 04 6A 61 76 61 09 02 4C 5E 08 08 64 00 FFFFFF84
   FFFFFF80 FFFFFF80 FFFFFF84 20 65 01 0C 70 72 6F 64 75 63 74 41 72
   69 74 79 15 01 41 08 08 67 00 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF84 20 68
   01 0E 70 72 6F 64 75 63 74 45 6C 65 6D 65 6E 74
   14 02 56 69 08 07 55 66 FFFFFF81 FFFFFF80 FFFFFFC0 00 41 08 08 6B
   00 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF84 20 6C 01 08 63 61 6E 45 71 75 61
   6C 14 02 51 6D 08 07 55 6A FFFFFF81 FFFFFF80 FFFFFFC0 00 56 28 02
   00 6F 10 02 0D 70 09 02 71 04 02 0C 73 65 72 69
   61 6C 69 7A 61 62 6C 65 07 07 73 02 FFFFFF81 FFFFFF80 FFFFFF88 02
   74 01 02 49 66 10 02 09 75 06 08 01 02 FFFFFF84 FFFFFF81 FFFFFF80
   FFFFFF88 02 76 13 04 75 77 7A 0C 10 02 5D 78 09 02 79
   5E 02 06 4F 62 6A 65 63 74 10 06 0D 7B 08 08 08
   23 09 02 7C 04 02 09 46 75 6E 63 74 69 6F 6E 33
   08 05 21 75 FFFFFF84 00 7E 14 01 74 08 09 FFFFFF81 00 75 FFFFFF81
   FFFFFF80 FFFFFF84 40 FFFFFF81 01 01 05 61 70 70 6C 79 14 07 23 FFFFFF81
   02 FFFFFF81 03 FFFFFF81 04 08 05 14 7F FFFFFFC0 00 08 08 05 19 7F
   FFFFFFC0 00 08 08 05 1D 7F FFFFFFC0 00 08 08 09 FFFFFF81 06 75 FFFFFF81
   FFFFFF80 FFFFFF84 40 FFFFFF81 07 01 07 75 6E 61 70 70 6C 79 14 04
   FFFFFF81 08 FFFFFF81 0E 10 05 0D FFFFFF81 09 FFFFFF81 0B 09 03 FFFFFF81 0A 04
   02 04 53 6F 6D 65 10 06 0D FFFFFF81 0C 08 08 08 09 03
   FFFFFF81 0D 04 02 06 54 75 70 6C 65 33 08 07 FFFFFF81 0F FFFFFF81
   05 FFFFFFC0 00 23 01 03 78 24 30 
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Tree.scala;
const #3 = Asciz	tuple;
const #4 = Asciz	()Lscala/Function1;;
const #5 = Asciz	Code;
const #6 = Asciz	scala/reflect/If$;
const #7 = class	#6;	//  scala/reflect/If$
const #8 = Asciz	MODULE$;
const #9 = Asciz	Lscala/reflect/If$;;
const #10 = NameAndType	#8:#9;//  MODULE$:Lscala/reflect/If$;
const #11 = Field	#7.#10;	//  scala/reflect/If$.MODULE$:Lscala/reflect/If$;
const #12 = NameAndType	#3:#4;//  tuple:()Lscala/Function1;
const #13 = Method	#7.#12;	//  scala/reflect/If$.tuple:()Lscala/Function1;
const #14 = Asciz	curry;
const #15 = NameAndType	#14:#4;//  curry:()Lscala/Function1;
const #16 = Method	#7.#15;	//  scala/reflect/If$.curry:()Lscala/Function1;
const #17 = Asciz	falseCase;
const #18 = Asciz	Lscala/reflect/Tree;;
const #19 = Asciz	trueCase;
const #20 = Asciz	condition;
const #21 = Asciz	<init>;
const #22 = Asciz	(Lscala/reflect/Tree;Lscala/reflect/Tree;Lscala/reflect/Tree;)V;
const #23 = Asciz	LineNumberTable;
const #24 = Asciz	scala/reflect/If;
const #25 = class	#24;	//  scala/reflect/If
const #26 = NameAndType	#20:#18;//  condition:Lscala/reflect/Tree;
const #27 = Field	#25.#26;	//  scala/reflect/If.condition:Lscala/reflect/Tree;
const #28 = NameAndType	#19:#18;//  trueCase:Lscala/reflect/Tree;
const #29 = Field	#25.#28;	//  scala/reflect/If.trueCase:Lscala/reflect/Tree;
const #30 = NameAndType	#17:#18;//  falseCase:Lscala/reflect/Tree;
const #31 = Field	#25.#30;	//  scala/reflect/If.falseCase:Lscala/reflect/Tree;
const #32 = Asciz	scala/reflect/Tree;
const #33 = class	#32;	//  scala/reflect/Tree
const #34 = Asciz	()V;
const #35 = NameAndType	#21:#34;//  "<init>":()V
const #36 = Method	#33.#35;	//  scala/reflect/Tree."<init>":()V
const #37 = Asciz	scala/Product$class;
const #38 = class	#37;	//  scala/Product$class
const #39 = Asciz	$init$;
const #40 = Asciz	(Lscala/Product;)V;
const #41 = NameAndType	#39:#40;//  $init$:(Lscala/Product;)V
const #42 = Method	#38.#41;	//  scala/Product$class.$init$:(Lscala/Product;)V
const #43 = Asciz	this;
const #44 = Asciz	Lscala/reflect/If;;
const #45 = Asciz	LocalVariableTable;
const #46 = Asciz	gd10$1;
const #47 = Asciz	(Lscala/reflect/Tree;Lscala/reflect/Tree;Lscala/reflect/Tree;)Z;
const #48 = Asciz	()Lscala/reflect/Tree;;
const #49 = NameAndType	#20:#48;//  condition:()Lscala/reflect/Tree;
const #50 = Method	#25.#49;	//  scala/reflect/If.condition:()Lscala/reflect/Tree;
const #51 = Asciz	java/lang/Object;
const #52 = class	#51;	//  java/lang/Object
const #53 = Asciz	equals;
const #54 = Asciz	(Ljava/lang/Object;)Z;
const #55 = NameAndType	#53:#54;//  equals:(Ljava/lang/Object;)Z
const #56 = Method	#52.#55;	//  java/lang/Object.equals:(Ljava/lang/Object;)Z
const #57 = NameAndType	#19:#48;//  trueCase:()Lscala/reflect/Tree;
const #58 = Method	#25.#57;	//  scala/reflect/If.trueCase:()Lscala/reflect/Tree;
const #59 = NameAndType	#17:#48;//  falseCase:()Lscala/reflect/Tree;
const #60 = Method	#25.#59;	//  scala/reflect/If.falseCase:()Lscala/reflect/Tree;
const #61 = Asciz	canEqual;
const #62 = Asciz	productElement;
const #63 = Asciz	(I)Ljava/lang/Object;;
const #64 = Asciz	java/lang/IndexOutOfBoundsException;
const #65 = class	#64;	//  java/lang/IndexOutOfBoundsException
const #66 = Asciz	scala/runtime/BoxesRunTime;
const #67 = class	#66;	//  scala/runtime/BoxesRunTime
const #68 = Asciz	boxToInteger;
const #69 = Asciz	(I)Ljava/lang/Integer;;
const #70 = NameAndType	#68:#69;//  boxToInteger:(I)Ljava/lang/Integer;
const #71 = Method	#67.#70;	//  scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
const #72 = Asciz	toString;
const #73 = Asciz	()Ljava/lang/String;;
const #74 = NameAndType	#72:#73;//  toString:()Ljava/lang/String;
const #75 = Method	#52.#74;	//  java/lang/Object.toString:()Ljava/lang/String;
const #76 = Asciz	(Ljava/lang/String;)V;
const #77 = NameAndType	#21:#76;//  "<init>":(Ljava/lang/String;)V
const #78 = Method	#65.#77;	//  java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
const #79 = Asciz	scala/MatchError;
const #80 = class	#79;	//  scala/MatchError
const #81 = Method	#80.#77;	//  scala/MatchError."<init>":(Ljava/lang/String;)V
const #82 = Asciz	productArity;
const #83 = Asciz	()I;
const #84 = Asciz	productPrefix;
const #85 = Asciz	If;
const #86 = String	#85;	//  If
const #87 = NameAndType	#46:#47;//  gd10$1:(Lscala/reflect/Tree;Lscala/reflect/Tree;Lscala/reflect/Tree;)Z
const #88 = Method	#25.#87;	//  scala/reflect/If.gd10$1:(Lscala/reflect/Tree;Lscala/reflect/Tree;Lscala/reflect/Tree;)Z
const #89 = Asciz	scala/Equals;
const #90 = class	#89;	//  scala/Equals
const #91 = NameAndType	#61:#54;//  canEqual:(Ljava/lang/Object;)Z
const #92 = InterfaceMethod	#90.#91;	//  scala/Equals.canEqual:(Ljava/lang/Object;)Z
const #93 = Asciz	temp43;
const #94 = Asciz	temp44;
const #95 = Asciz	temp45;
const #96 = Asciz	temp46;
const #97 = Asciz	scala/runtime/ScalaRunTime$;
const #98 = class	#97;	//  scala/runtime/ScalaRunTime$
const #99 = Asciz	Lscala/runtime/ScalaRunTime$;;
const #100 = NameAndType	#8:#99;//  MODULE$:Lscala/runtime/ScalaRunTime$;
const #101 = Field	#98.#100;	//  scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
const #102 = Asciz	_toString;
const #103 = Asciz	(Lscala/Product;)Ljava/lang/String;;
const #104 = NameAndType	#102:#103;//  _toString:(Lscala/Product;)Ljava/lang/String;
const #105 = Method	#98.#104;	//  scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
const #106 = Asciz	hashCode;
const #107 = Asciz	_hashCode;
const #108 = Asciz	(Lscala/Product;)I;
const #109 = NameAndType	#107:#108;//  _hashCode:(Lscala/Product;)I
const #110 = Method	#98.#109;	//  scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
const #111 = Asciz	copy;
const #112 = Asciz	(Lscala/reflect/Tree;Lscala/reflect/Tree;Lscala/reflect/Tree;)Lscala/reflect/If;;
const #113 = NameAndType	#21:#22;//  "<init>":(Lscala/reflect/Tree;Lscala/reflect/Tree;Lscala/reflect/Tree;)V
const #114 = Method	#25.#113;	//  scala/reflect/If."<init>":(Lscala/reflect/Tree;Lscala/reflect/Tree;Lscala/reflect/Tree;)V
const #115 = Asciz	copy$default$1;
const #116 = Asciz	copy$default$2;
const #117 = Asciz	copy$default$3;
const #118 = Asciz	productElements;
const #119 = Asciz	()Lscala/collection/Iterator;;
const #120 = Asciz	(Lscala/Product;)Lscala/collection/Iterator;;
const #121 = NameAndType	#118:#120;//  productElements:(Lscala/Product;)Lscala/collection/Iterator;
const #122 = Method	#38.#121;	//  scala/Product$class.productElements:(Lscala/Product;)Lscala/collection/Iterator;
const #123 = Asciz	productIterator;
const #124 = NameAndType	#123:#120;//  productIterator:(Lscala/Product;)Lscala/collection/Iterator;
const #125 = Method	#38.#124;	//  scala/Product$class.productIterator:(Lscala/Product;)Lscala/collection/Iterator;
const #126 = Asciz	ScalaSig;
const #127 = Asciz	scala/ScalaObject;
const #128 = class	#127;	//  scala/ScalaObject
const #129 = Asciz	scala/Product;
const #130 = class	#129;	//  scala/Product
const #131 = Asciz	java/io/Serializable;
const #132 = class	#131;	//  java/io/Serializable

{
public static final scala.Function1 tuple();
  Code:
   Stack=1, Locals=0, Args_size=0
   0:	getstatic	#11; //Field scala/reflect/If$.MODULE$:Lscala/reflect/If$;
   3:	invokevirtual	#13; //Method scala/reflect/If$.tuple:()Lscala/Function1;
   6:	areturn

public static final scala.Function1 curry();
  Code:
   Stack=1, Locals=0, Args_size=0
   0:	getstatic	#11; //Field scala/reflect/If$.MODULE$:Lscala/reflect/If$;
   3:	invokevirtual	#16; //Method scala/reflect/If$.curry:()Lscala/Function1;
   6:	areturn

public scala.reflect.If(scala.reflect.Tree, scala.reflect.Tree, scala.reflect.Tree);
  Code:
   Stack=2, Locals=4, Args_size=4
   0:	aload_0
   1:	aload_1
   2:	putfield	#27; //Field condition:Lscala/reflect/Tree;
   5:	aload_0
   6:	aload_2
   7:	putfield	#29; //Field trueCase:Lscala/reflect/Tree;
   10:	aload_0
   11:	aload_3
   12:	putfield	#31; //Field falseCase:Lscala/reflect/Tree;
   15:	aload_0
   16:	invokespecial	#36; //Method scala/reflect/Tree."<init>":()V
   19:	aload_0
   20:	invokestatic	#42; //Method scala/Product$class.$init$:(Lscala/Product;)V
   23:	return
  LineNumberTable: 
   line 38: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      24      0    this       Lscala/reflect/If;
   0      24      1    condition       Lscala/reflect/Tree;
   0      24      2    trueCase       Lscala/reflect/Tree;
   0      24      3    falseCase       Lscala/reflect/Tree;


public boolean canEqual(java.lang.Object);
  Code:
   Stack=1, Locals=2, Args_size=2
   0:	aload_1
   1:	instanceof	#25; //class scala/reflect/If
   4:	ireturn
  LineNumberTable: 
   line 38: 0


public java.lang.Object productElement(int);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	iload_1
   1:	tableswitch{ //0 to 2
		0: 114;
		1: 88;
		2: 62;
		default: 28 }
   28:	iconst_1
   29:	ifeq	47
   32:	new	#65; //class java/lang/IndexOutOfBoundsException
   35:	dup
   36:	iload_1
   37:	invokestatic	#71; //Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   40:	invokevirtual	#75; //Method java/lang/Object.toString:()Ljava/lang/String;
   43:	invokespecial	#78; //Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
   46:	athrow
   47:	new	#80; //class scala/MatchError
   50:	dup
   51:	iload_1
   52:	invokestatic	#71; //Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   55:	invokevirtual	#75; //Method java/lang/Object.toString:()Ljava/lang/String;
   58:	invokespecial	#81; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   61:	athrow
   62:	iconst_1
   63:	ifeq	73
   66:	aload_0
   67:	invokevirtual	#60; //Method falseCase:()Lscala/reflect/Tree;
   70:	goto	122
   73:	new	#80; //class scala/MatchError
   76:	dup
   77:	iload_1
   78:	invokestatic	#71; //Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   81:	invokevirtual	#75; //Method java/lang/Object.toString:()Ljava/lang/String;
   84:	invokespecial	#81; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   87:	athrow
   88:	iconst_1
   89:	ifeq	99
   92:	aload_0
   93:	invokevirtual	#58; //Method trueCase:()Lscala/reflect/Tree;
   96:	goto	122
   99:	new	#80; //class scala/MatchError
   102:	dup
   103:	iload_1
   104:	invokestatic	#71; //Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   107:	invokevirtual	#75; //Method java/lang/Object.toString:()Ljava/lang/String;
   110:	invokespecial	#81; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   113:	athrow
   114:	iconst_1
   115:	ifeq	123
   118:	aload_0
   119:	invokevirtual	#50; //Method condition:()Lscala/reflect/Tree;
   122:	areturn
   123:	new	#80; //class scala/MatchError
   126:	dup
   127:	iload_1
   128:	invokestatic	#71; //Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   131:	invokevirtual	#75; //Method java/lang/Object.toString:()Ljava/lang/String;
   134:	invokespecial	#81; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   137:	athrow
  LineNumberTable: 
   line 38: 0
   line 21: 28
   line 38: 32
   line 21: 62
   line 38: 66
   line 21: 88
   line 38: 92
   line 21: 114
   line 38: 118


public int productArity();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	iconst_3
   1:	ireturn
  LineNumberTable: 
   line 38: 0


public java.lang.String productPrefix();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	ldc	#86; //String If
   2:	areturn
  LineNumberTable: 
   line 38: 0


public boolean equals(java.lang.Object);
  Code:
   Stack=4, Locals=6, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	if_acmpeq	87
   5:	aload_1
   6:	instanceof	#25; //class scala/reflect/If
   9:	ifeq	79
   12:	aload_1
   13:	checkcast	#25; //class scala/reflect/If
   16:	astore_2
   17:	aload_2
   18:	invokevirtual	#50; //Method condition:()Lscala/reflect/Tree;
   21:	astore_3
   22:	aload_2
   23:	invokevirtual	#58; //Method trueCase:()Lscala/reflect/Tree;
   26:	astore	4
   28:	aload_2
   29:	invokevirtual	#60; //Method falseCase:()Lscala/reflect/Tree;
   32:	astore	5
   34:	aload_0
   35:	aload_3
   36:	aload	4
   38:	aload	5
   40:	invokespecial	#88; //Method gd10$1:(Lscala/reflect/Tree;Lscala/reflect/Tree;Lscala/reflect/Tree;)Z
   43:	ifeq	59
   46:	aload_1
   47:	checkcast	#25; //class scala/reflect/If
   50:	aload_0
   51:	invokeinterface	#92,  2; //InterfaceMethod scala/Equals.canEqual:(Ljava/lang/Object;)Z
   56:	goto	84
   59:	iconst_1
   60:	ifeq	67
   63:	iconst_0
   64:	goto	84
   67:	new	#80; //class scala/MatchError
   70:	dup
   71:	aload_1
   72:	invokevirtual	#75; //Method java/lang/Object.toString:()Ljava/lang/String;
   75:	invokespecial	#81; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   78:	athrow
   79:	iconst_1
   80:	ifeq	93
   83:	iconst_0
   84:	ifeq	91
   87:	iconst_1
   88:	goto	92
   91:	iconst_0
   92:	ireturn
   93:	new	#80; //class scala/MatchError
   96:	dup
   97:	aload_1
   98:	invokevirtual	#75; //Method java/lang/Object.toString:()Ljava/lang/String;
   101:	invokespecial	#81; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   104:	athrow
  LineNumberTable: 
   line 38: 0
   line 21: 59
   line 38: 67
   line 21: 79
   line 38: 84

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      105      0    this       Lscala/reflect/If;
   17      62      2    temp43       Lscala/reflect/If;
   22      57      3    temp44       Lscala/reflect/Tree;
   28      51      4    temp45       Lscala/reflect/Tree;
   34      45      5    temp46       Lscala/reflect/Tree;


public java.lang.String toString();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	getstatic	#101; //Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   3:	aload_0
   4:	invokevirtual	#105; //Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
   7:	areturn
  LineNumberTable: 
   line 38: 0


public int hashCode();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	getstatic	#101; //Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   3:	aload_0
   4:	invokevirtual	#110; //Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
   7:	ireturn
  LineNumberTable: 
   line 38: 0


public scala.reflect.If copy(scala.reflect.Tree, scala.reflect.Tree, scala.reflect.Tree);
  Code:
   Stack=5, Locals=4, Args_size=4
   0:	new	#25; //class scala/reflect/If
   3:	dup
   4:	aload_1
   5:	aload_2
   6:	aload_3
   7:	invokespecial	#114; //Method "<init>":(Lscala/reflect/Tree;Lscala/reflect/Tree;Lscala/reflect/Tree;)V
   10:	areturn
  LineNumberTable: 
   line 38: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      11      0    this       Lscala/reflect/If;
   0      11      1    condition       Lscala/reflect/Tree;
   0      11      2    trueCase       Lscala/reflect/Tree;
   0      11      3    falseCase       Lscala/reflect/Tree;


public scala.reflect.Tree falseCase();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#31; //Field falseCase:Lscala/reflect/Tree;
   4:	areturn
  LineNumberTable: 
   line 38: 0


public scala.reflect.Tree trueCase();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#29; //Field trueCase:Lscala/reflect/Tree;
   4:	areturn
  LineNumberTable: 
   line 38: 0


public scala.reflect.Tree condition();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#27; //Field condition:Lscala/reflect/Tree;
   4:	areturn
  LineNumberTable: 
   line 38: 0


public scala.reflect.Tree copy$default$1();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#50; //Method condition:()Lscala/reflect/Tree;
   4:	areturn
  LineNumberTable: 
   line 38: 0


public scala.reflect.Tree copy$default$2();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#58; //Method trueCase:()Lscala/reflect/Tree;
   4:	areturn
  LineNumberTable: 
   line 38: 0


public scala.reflect.Tree copy$default$3();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#60; //Method falseCase:()Lscala/reflect/Tree;
   4:	areturn
  LineNumberTable: 
   line 38: 0


public scala.collection.Iterator productElements();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#122; //Method scala/Product$class.productElements:(Lscala/Product;)Lscala/collection/Iterator;
   4:	areturn
  LineNumberTable: 
   line 38: 0


public scala.collection.Iterator productIterator();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#125; //Method scala/Product$class.productIterator:(Lscala/Product;)Lscala/collection/Iterator;
   4:	areturn
  LineNumberTable: 
   line 38: 0


}

