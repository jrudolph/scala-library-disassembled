Compiled from "Tree.scala"
public class scala.reflect.If extends scala.reflect.Tree implements scala.ScalaObject,scala.Product,java.io.Serializable
  SourceFile: "Tree.scala"
  ScalaSig: length = 0x3
   05 00 00 
  RuntimeVisibleAnnotations: length = 0xB
   00 01 00 FFFFFF87 00 01 00 FFFFFF88 73 00 FFFFFF89 
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	Tree.scala;
Asciz	tupled;
Asciz	()Lscala/Function1;;
Asciz	Code;
Asciz	scala/reflect/If$;
class	scala/reflect/If$
Asciz	MODULE$;
Asciz	Lscala/reflect/If$;;
NameAndType	MODULE$:Lscala/reflect/If$;
Field	scala/reflect/If$.MODULE$:Lscala/reflect/If$;
NameAndType	tupled:()Lscala/Function1;
Method	scala/reflect/If$.tupled:()Lscala/Function1;
Asciz	curry;
NameAndType	curry:()Lscala/Function1;
Method	scala/reflect/If$.curry:()Lscala/Function1;
Asciz	Deprecated;
Asciz	curried;
NameAndType	curried:()Lscala/Function1;
Method	scala/reflect/If$.curried:()Lscala/Function1;
Asciz	condition;
Asciz	Lscala/reflect/Tree;;
Asciz	trueCase;
Asciz	falseCase;
Asciz	productElementName;
Asciz	(I)Ljava/lang/String;;
Asciz	LineNumberTable;
Asciz	scala/Product$class;
class	scala/Product$class
Asciz	(Lscala/Product;I)Ljava/lang/String;;
NameAndType	productElementName:(Lscala/Product;I)Ljava/lang/String;
Method	scala/Product$class.productElementName:(Lscala/Product;I)Ljava/lang/String;
Asciz	this;
Asciz	Lscala/reflect/If;;
Asciz	n;
Asciz	I;
Asciz	LocalVariableTable;
Asciz	productIterator;
Asciz	()Lscala/collection/Iterator;;
Asciz	(Lscala/Product;)Lscala/collection/Iterator;;
NameAndType	productIterator:(Lscala/Product;)Lscala/collection/Iterator;
Method	scala/Product$class.productIterator:(Lscala/Product;)Lscala/collection/Iterator;
Asciz	productElements;
NameAndType	productElements:(Lscala/Product;)Lscala/collection/Iterator;
Method	scala/Product$class.productElements:(Lscala/Product;)Lscala/collection/Iterator;
Asciz	copy$default$3;
Asciz	()Lscala/reflect/Tree;;
Asciz	scala/reflect/If;
class	scala/reflect/If
NameAndType	falseCase:()Lscala/reflect/Tree;
Method	scala/reflect/If.falseCase:()Lscala/reflect/Tree;
Asciz	copy$default$2;
NameAndType	trueCase:()Lscala/reflect/Tree;
Method	scala/reflect/If.trueCase:()Lscala/reflect/Tree;
Asciz	copy$default$1;
NameAndType	condition:()Lscala/reflect/Tree;
Method	scala/reflect/If.condition:()Lscala/reflect/Tree;
NameAndType	condition:Lscala/reflect/Tree;
Field	scala/reflect/If.condition:Lscala/reflect/Tree;
NameAndType	trueCase:Lscala/reflect/Tree;
Field	scala/reflect/If.trueCase:Lscala/reflect/Tree;
NameAndType	falseCase:Lscala/reflect/Tree;
Field	scala/reflect/If.falseCase:Lscala/reflect/Tree;
Asciz	copy;
Asciz	(Lscala/reflect/Tree;Lscala/reflect/Tree;Lscala/reflect/Tree;)Lscala/reflect/If;;
Asciz	<init>;
Asciz	(Lscala/reflect/Tree;Lscala/reflect/Tree;Lscala/reflect/Tree;)V;
NameAndType	"<init>":(Lscala/reflect/Tree;Lscala/reflect/Tree;Lscala/reflect/Tree;)V
Method	scala/reflect/If."<init>":(Lscala/reflect/Tree;Lscala/reflect/Tree;Lscala/reflect/Tree;)V
Asciz	hashCode;
Asciz	()I;
Asciz	scala/runtime/ScalaRunTime$;
class	scala/runtime/ScalaRunTime$
Asciz	Lscala/runtime/ScalaRunTime$;;
NameAndType	MODULE$:Lscala/runtime/ScalaRunTime$;
Field	scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
Asciz	_hashCode;
Asciz	(Lscala/Product;)I;
NameAndType	_hashCode:(Lscala/Product;)I
Method	scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
Asciz	toString;
Asciz	()Ljava/lang/String;;
Asciz	_toString;
Asciz	(Lscala/Product;)Ljava/lang/String;;
NameAndType	_toString:(Lscala/Product;)Ljava/lang/String;
Method	scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
Asciz	equals;
Asciz	(Ljava/lang/Object;)Z;
Asciz	gd10$1;
Asciz	(Lscala/reflect/Tree;Lscala/reflect/Tree;Lscala/reflect/Tree;)Z;
NameAndType	gd10$1:(Lscala/reflect/Tree;Lscala/reflect/Tree;Lscala/reflect/Tree;)Z
Method	scala/reflect/If.gd10$1:(Lscala/reflect/Tree;Lscala/reflect/Tree;Lscala/reflect/Tree;)Z
Asciz	scala/Equals;
class	scala/Equals
Asciz	canEqual;
NameAndType	canEqual:(Ljava/lang/Object;)Z
InterfaceMethod	scala/Equals.canEqual:(Ljava/lang/Object;)Z
Asciz	temp43;
Asciz	temp44;
Asciz	temp45;
Asciz	temp46;
Asciz	productPrefix;
Asciz	If;
String	If
Asciz	productArity;
Asciz	productElement;
Asciz	(I)Ljava/lang/Object;;
Asciz	java/lang/IndexOutOfBoundsException;
class	java/lang/IndexOutOfBoundsException
Asciz	scala/runtime/BoxesRunTime;
class	scala/runtime/BoxesRunTime
Asciz	boxToInteger;
Asciz	(I)Ljava/lang/Integer;;
NameAndType	boxToInteger:(I)Ljava/lang/Integer;
Method	scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
Asciz	java/lang/Object;
class	java/lang/Object
NameAndType	toString:()Ljava/lang/String;
Method	java/lang/Object.toString:()Ljava/lang/String;
Asciz	(Ljava/lang/String;)V;
NameAndType	"<init>":(Ljava/lang/String;)V
Method	java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
NameAndType	equals:(Ljava/lang/Object;)Z
Method	java/lang/Object.equals:(Ljava/lang/Object;)Z
Asciz	scala/reflect/Tree;
class	scala/reflect/Tree
Asciz	()V;
NameAndType	"<init>":()V
Method	scala/reflect/Tree."<init>":()V
Asciz	$init$;
Asciz	(Lscala/Product;)V;
NameAndType	$init$:(Lscala/Product;)V
Method	scala/Product$class.$init$:(Lscala/Product;)V
Asciz	ScalaSig;
Asciz	Lscala/reflect/ScalaSignature;;
Asciz	bytes;
Asciz	bC\t\tQ%3'BAXM7fGRT!BgG.Y'\t%QQ\"\n-!+sK\"!I!aM\r\1PE*,7\r\tEI!AAxZ;di\"AABKQ#Ad_:$^5p]V\t\tE\t!\t)wN3ji&|g\t\t3)!C+AAO];fX\r\tE\t!\t%!(/^3DCN,\tU\r\"%1\r\:fX\r \tE\t!\t)1\r\:fX\r\tC!\tAIy%t \t\r\"SE\n\tAQA!AQ!A!AQ!A!Aq&d_BLHB+W1BqFCOA\t\tu9!a!9aAI\nyAD2paf$C-4bk2$H%Ma)\"MeA1Oi)QGN\nk:.Z2lKT!atgn;bi&|g.:i\t\tRO\2iK\W\r,be&gnY3\tm!C_q1m9zI,g-Y;mibB#%\taLG>\n3fM,H4!y\"A\n5bg\"uZ3\"!\"\n\r#!aA%oi\"AQ\tCc)u_N#(/8h)9C%L\ti*K\t1K]3eKL!T'\rM#(/8h\tQEP\t\"Q)/^1mgR\tIK!a\t{w\3b]\"9QKTA1a=%cAQbV11!8z!Q\"A\nZ!9s_,8\r)sKL0F]!\ti&-D_\ty-mC:<'\"A1\t)g/YzC%\t%Z\raJ|G-^2uJLG/_\"Aq\rC.qe>$Wo;FYlWM;YKbB+g\r!\tW!\t!C!YA1-8FcVGR[\"9QK[A1Fp!\ti/r\t\ta1/:jC2L'02mK91OAA!AA%g!\tIQO\r\t#w')xOuCBA=_y%M[3diB1Qb\t\rJ! +hn;j_:\"Bv\tqH#;\tQ/!A\r!B1qa2LHcB)}\r3}\r;}\r\n)!CA\tq!8baBdu#B]bAA\t\t1q\n;j_:b!DA\r!AbAA\t\t1A+9mKNBq!a1%AyIA;
Asciz	RuntimeVisibleAnnotations;
Asciz	scala/ScalaObject;
class	scala/ScalaObject
Asciz	scala/Product;
class	scala/Product
Asciz	java/io/Serializable;
class	java/io/Serializable

{
private final scala.reflect.Tree condition;
  Signature: Lscala/reflect/Tree;

private final scala.reflect.Tree trueCase;
  Signature: Lscala/reflect/Tree;

private final scala.reflect.Tree falseCase;
  Signature: Lscala/reflect/Tree;

public static final scala.Function1 tupled();
  Signature: ()Lscala/Function1;
  Code:
   Stack=1, Locals=0, Args_size=0
	getstatic	Field scala/reflect/If$.MODULE$:Lscala/reflect/If$;
	invokevirtual	Method scala/reflect/If$.tupled:()Lscala/Function1;
	areturn
  Labels:

public static final scala.Function1 curry();
  Signature: ()Lscala/Function1;
  Code:
   Stack=1, Locals=0, Args_size=0
	getstatic	Field scala/reflect/If$.MODULE$:Lscala/reflect/If$;
	invokevirtual	Method scala/reflect/If$.curry:()Lscala/Function1;
	areturn
  Labels:
  Deprecated: true

public static final scala.Function1 curried();
  Signature: ()Lscala/Function1;
  Code:
   Stack=1, Locals=0, Args_size=0
	getstatic	Field scala/reflect/If$.MODULE$:Lscala/reflect/If$;
	invokevirtual	Method scala/reflect/If$.curried:()Lscala/Function1;
	areturn
  Labels:

public java.lang.String productElementName(int);
  Signature: (I)Ljava/lang/String;
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	iload_1
	invokestatic	Method scala/Product$class.productElementName:(Lscala/Product;I)Ljava/lang/String;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/reflect/If;
   0      6      1    n       I


public scala.collection.Iterator productIterator();
  Signature: ()Lscala/collection/Iterator;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokestatic	Method scala/Product$class.productIterator:(Lscala/Product;)Lscala/collection/Iterator;
	areturn
  Labels:

public scala.collection.Iterator productElements();
  Signature: ()Lscala/collection/Iterator;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokestatic	Method scala/Product$class.productElements:(Lscala/Product;)Lscala/collection/Iterator;
	areturn
  Labels:
  Deprecated: true

public scala.reflect.Tree copy$default$3();
  Signature: ()Lscala/reflect/Tree;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokevirtual	Method falseCase:()Lscala/reflect/Tree;
	areturn
  Labels:

public scala.reflect.Tree copy$default$2();
  Signature: ()Lscala/reflect/Tree;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokevirtual	Method trueCase:()Lscala/reflect/Tree;
	areturn
  Labels:

public scala.reflect.Tree copy$default$1();
  Signature: ()Lscala/reflect/Tree;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokevirtual	Method condition:()Lscala/reflect/Tree;
	areturn
  Labels:

public scala.reflect.Tree condition();
  Signature: ()Lscala/reflect/Tree;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field condition:Lscala/reflect/Tree;
	areturn
  Labels:

public scala.reflect.Tree trueCase();
  Signature: ()Lscala/reflect/Tree;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field trueCase:Lscala/reflect/Tree;
	areturn
  Labels:

public scala.reflect.Tree falseCase();
  Signature: ()Lscala/reflect/Tree;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field falseCase:Lscala/reflect/Tree;
	areturn
  Labels:

public scala.reflect.If copy(scala.reflect.Tree, scala.reflect.Tree, scala.reflect.Tree);
  Signature: (Lscala/reflect/Tree;Lscala/reflect/Tree;Lscala/reflect/Tree;)Lscala/reflect/If;
  Code:
   Stack=5, Locals=4, Args_size=4
	new	class scala/reflect/If
	dup
	aload_1
	aload_2
	aload_3
	invokespecial	Method "<init>":(Lscala/reflect/Tree;Lscala/reflect/Tree;Lscala/reflect/Tree;)V
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      11      0    this       Lscala/reflect/If;
   0      11      1    condition       Lscala/reflect/Tree;
   0      11      2    trueCase       Lscala/reflect/Tree;
   0      11      3    falseCase       Lscala/reflect/Tree;


public int hashCode();
  Signature: ()I
  Code:
   Stack=2, Locals=1, Args_size=1
	getstatic	Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
	aload_0
	invokevirtual	Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
	ireturn
  Labels:

public java.lang.String toString();
  Signature: ()Ljava/lang/String;
  Code:
   Stack=2, Locals=1, Args_size=1
	getstatic	Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
	aload_0
	invokevirtual	Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
	areturn
  Labels:

public boolean equals(java.lang.Object);
  Signature: (Ljava/lang/Object;)Z
  Code:
   Stack=4, Locals=6, Args_size=2
	aload_0
	aload_1
	if_acmpeq	l1 // iconst_1
	aload_1
	instanceof	class scala/reflect/If
	ifeq	l2 // iconst_0
	aload_1
	checkcast	class scala/reflect/If
	astore_2
	aload_2
	invokevirtual	Method condition:()Lscala/reflect/Tree;
	astore_3
	aload_2
	invokevirtual	Method trueCase:()Lscala/reflect/Tree;
	astore	4
	aload_2
	invokevirtual	Method falseCase:()Lscala/reflect/Tree;
	astore	5
	aload_0
	aload_3
	aload	4
	aload	5
	invokespecial	Method gd10$1:(Lscala/reflect/Tree;Lscala/reflect/Tree;Lscala/reflect/Tree;)Z
	ifeq	l3 // iconst_0
	aload_1
	checkcast	class scala/reflect/If
	aload_0
	invokeinterface	InterfaceMethod scala/Equals.canEqual:(Ljava/lang/Object;)Z
	goto	l4 // ifeq
l3	iconst_0
	goto	l4 // ifeq
l2	iconst_0
l4	ifeq	l5 // iconst_0
l1	iconst_1
	goto	l6 // ireturn
l5	iconst_0
l6	ireturn
  Labels:
   	l3 = 59 // iconst_0
   	l2 = 63 // iconst_0
   	l4 = 64 // ifeq
   	l1 = 67 // iconst_1
   	l5 = 71 // iconst_0
   	l6 = 72 // ireturn
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      73      0    this       Lscala/reflect/If;
   17      46      2    temp43       Lscala/reflect/If;
   22      41      3    temp44       Lscala/reflect/Tree;
   28      35      4    temp45       Lscala/reflect/Tree;
   34      29      5    temp46       Lscala/reflect/Tree;


public java.lang.String productPrefix();
  Signature: ()Ljava/lang/String;
  Code:
   Stack=1, Locals=1, Args_size=1
	ldc	String If
	areturn
  Labels:

public int productArity();
  Signature: ()I
  Code:
   Stack=1, Locals=1, Args_size=1
	iconst_3
	ireturn
  Labels:

public java.lang.Object productElement(int);
  Signature: (I)Ljava/lang/Object;
  Code:
   Stack=3, Locals=2, Args_size=2
	iload_1
	tableswitch{ //0 to 2
		0: 57;
		1: 50;
		2: 43;
		default: 28 }
	new	class java/lang/IndexOutOfBoundsException
	dup
	iload_1
	invokestatic	Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
	invokevirtual	Method java/lang/Object.toString:()Ljava/lang/String;
	invokespecial	Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
	athrow
	aload_0
	invokevirtual	Method falseCase:()Lscala/reflect/Tree;
	goto	l1 // areturn
	aload_0
	invokevirtual	Method trueCase:()Lscala/reflect/Tree;
	goto	l1 // areturn
	aload_0
	invokevirtual	Method condition:()Lscala/reflect/Tree;
l1	areturn
  Labels:
   	l1 = 61 // areturn

public boolean canEqual(java.lang.Object);
  Signature: (Ljava/lang/Object;)Z
  Code:
   Stack=1, Locals=2, Args_size=2
	aload_1
	instanceof	class scala/reflect/If
	ireturn
  Labels:

private final boolean gd10$1(scala.reflect.Tree, scala.reflect.Tree, scala.reflect.Tree);
  Signature: (Lscala/reflect/Tree;Lscala/reflect/Tree;Lscala/reflect/Tree;)Z
  Code:
   Stack=2, Locals=7, Args_size=4
	aload_1
	aload_0
	invokevirtual	Method condition:()Lscala/reflect/Tree;
	astore	4
	dup
	ifnonnull	l1 // aload
	pop
	aload	4
	ifnull	l2 // aload_2
	goto	l3 // iconst_0
l1	aload	4
	invokevirtual	Method java/lang/Object.equals:(Ljava/lang/Object;)Z
	ifeq	l3 // iconst_0
l2	aload_2
	aload_0
	invokevirtual	Method trueCase:()Lscala/reflect/Tree;
	astore	5
	dup
	ifnonnull	l4 // aload
	pop
	aload	5
	ifnull	l5 // aload_3
	goto	l3 // iconst_0
l4	aload	5
	invokevirtual	Method java/lang/Object.equals:(Ljava/lang/Object;)Z
	ifeq	l3 // iconst_0
l5	aload_3
	aload_0
	invokevirtual	Method falseCase:()Lscala/reflect/Tree;
	astore	6
	dup
	ifnonnull	l6 // aload
	pop
	aload	6
	ifnull	l7 // iconst_1
	goto	l3 // iconst_0
l6	aload	6
	invokevirtual	Method java/lang/Object.equals:(Ljava/lang/Object;)Z
	ifeq	l3 // iconst_0
l7	iconst_1
	goto	l8 // ireturn
l3	iconst_0
l8	ireturn
  Labels:
   	l1 = 20 // aload
   	l2 = 28 // aload_2
   	l4 = 48 // aload
   	l5 = 56 // aload_3
   	l6 = 76 // aload
   	l7 = 84 // iconst_1
   	l3 = 88 // iconst_0
   	l8 = 89 // ireturn

public scala.reflect.If(scala.reflect.Tree, scala.reflect.Tree, scala.reflect.Tree);
  Signature: (Lscala/reflect/Tree;Lscala/reflect/Tree;Lscala/reflect/Tree;)V
  Code:
   Stack=2, Locals=4, Args_size=4
	aload_0
	aload_1
	putfield	Field condition:Lscala/reflect/Tree;
	aload_0
	aload_2
	putfield	Field trueCase:Lscala/reflect/Tree;
	aload_0
	aload_3
	putfield	Field falseCase:Lscala/reflect/Tree;
	aload_0
	invokespecial	Method scala/reflect/Tree."<init>":()V
	aload_0
	invokestatic	Method scala/Product$class.$init$:(Lscala/Product;)V
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      24      0    this       Lscala/reflect/If;
   0      24      1    condition       Lscala/reflect/Tree;
   0      24      2    trueCase       Lscala/reflect/Tree;
   0      24      3    falseCase       Lscala/reflect/Tree;


}

