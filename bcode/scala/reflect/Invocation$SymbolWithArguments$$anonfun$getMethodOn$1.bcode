Compiled from "Invocation.scala"
public final class scala.reflect.Invocation$SymbolWithArguments$$anonfun$getMethodOn$1 extends java.lang.Object implements scala.Function0,scala.ScalaObject,java.io.Serializable
  SourceFile: "Invocation.scala"
  Scala: length = 0x
   
  InnerClass: 
   public #93= #44 of #92; //SymbolWithArguments=class scala/reflect/Invocation$SymbolWithArguments of class scala/reflect/Invocation
   public final #94= #17 of #44; //$anonfun$getMethodOn$1=class scala/reflect/Invocation$SymbolWithArguments$$anonfun$getMethodOn$1 of class scala/reflect/Invocation$SymbolWithArguments
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Invocation.scala;
const #3 = Asciz	x$7;
const #4 = Asciz	Ljava/lang/Object;;
const #5 = Asciz	$outer;
const #6 = Asciz	Lscala/reflect/Invocation$SymbolWithArguments;;
const #7 = Asciz	<init>;
const #8 = Asciz	(Lscala/reflect/Invocation$SymbolWithArguments;Ljava/lang/Object;)V;
const #9 = Asciz	Code;
const #10 = Asciz	LineNumberTable;
const #11 = Asciz	java/lang/NullPointerException;
const #12 = class	#11;	//  java/lang/NullPointerException
const #13 = Asciz	()V;
const #14 = NameAndType	#7:#13;//  "<init>":()V
const #15 = Method	#12.#14;	//  java/lang/NullPointerException."<init>":()V
const #16 = Asciz	scala/reflect/Invocation$SymbolWithArguments$$anonfun$getMethodOn$1;
const #17 = class	#16;	//  scala/reflect/Invocation$SymbolWithArguments$$anonfun$getMethodOn$1
const #18 = NameAndType	#5:#6;//  $outer:Lscala/reflect/Invocation$SymbolWithArguments;
const #19 = Field	#17.#18;	//  scala/reflect/Invocation$SymbolWithArguments$$anonfun$getMethodOn$1.$outer:Lscala/reflect/Invocation$SymbolWithArguments;
const #20 = NameAndType	#3:#4;//  x$7:Ljava/lang/Object;
const #21 = Field	#17.#20;	//  scala/reflect/Invocation$SymbolWithArguments$$anonfun$getMethodOn$1.x$7:Ljava/lang/Object;
const #22 = Asciz	java/lang/Object;
const #23 = class	#22;	//  java/lang/Object
const #24 = Method	#23.#14;	//  java/lang/Object."<init>":()V
const #25 = Asciz	scala/Function0$class;
const #26 = class	#25;	//  scala/Function0$class
const #27 = Asciz	$init$;
const #28 = Asciz	(Lscala/Function0;)V;
const #29 = NameAndType	#27:#28;//  $init$:(Lscala/Function0;)V
const #30 = Method	#26.#29;	//  scala/Function0$class.$init$:(Lscala/Function0;)V
const #31 = Asciz	this;
const #32 = Asciz	Lscala/reflect/Invocation$SymbolWithArguments$$anonfun$getMethodOn$1;;
const #33 = Asciz	LocalVariableTable;
const #34 = Asciz	apply;
const #35 = Asciz	()Ljava/lang/Object;;
const #36 = Asciz	()Ljava/lang/reflect/Method;;
const #37 = NameAndType	#34:#36;//  apply:()Ljava/lang/reflect/Method;
const #38 = Method	#17.#37;	//  scala/reflect/Invocation$SymbolWithArguments$$anonfun$getMethodOn$1.apply:()Ljava/lang/reflect/Method;
const #39 = Asciz	getClass;
const #40 = Asciz	()Ljava/lang/Class;;
const #41 = NameAndType	#39:#40;//  getClass:()Ljava/lang/Class;
const #42 = Method	#23.#41;	//  java/lang/Object.getClass:()Ljava/lang/Class;
const #43 = Asciz	scala/reflect/Invocation$SymbolWithArguments;
const #44 = class	#43;	//  scala/reflect/Invocation$SymbolWithArguments
const #45 = Asciz	sym;
const #46 = Asciz	()Lscala/Symbol;;
const #47 = NameAndType	#45:#46;//  sym:()Lscala/Symbol;
const #48 = Method	#44.#47;	//  scala/reflect/Invocation$SymbolWithArguments.sym:()Lscala/Symbol;
const #49 = Asciz	scala/Symbol;
const #50 = class	#49;	//  scala/Symbol
const #51 = Asciz	name;
const #52 = Asciz	()Ljava/lang/String;;
const #53 = NameAndType	#51:#52;//  name:()Ljava/lang/String;
const #54 = Method	#50.#53;	//  scala/Symbol.name:()Ljava/lang/String;
const #55 = Asciz	scala/runtime/ScalaRunTime$;
const #56 = class	#55;	//  scala/runtime/ScalaRunTime$
const #57 = Asciz	MODULE$;
const #58 = Asciz	Lscala/runtime/ScalaRunTime$;;
const #59 = NameAndType	#57:#58;//  MODULE$:Lscala/runtime/ScalaRunTime$;
const #60 = Field	#56.#59;	//  scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
const #61 = Asciz	getArgTypes;
const #62 = Asciz	()Lscala/collection/immutable/List;;
const #63 = NameAndType	#61:#62;//  getArgTypes:()Lscala/collection/immutable/List;
const #64 = Method	#44.#63;	//  scala/reflect/Invocation$SymbolWithArguments.getArgTypes:()Lscala/collection/immutable/List;
const #65 = Asciz	scala/collection/generic/TraversableTemplate;
const #66 = class	#65;	//  scala/collection/generic/TraversableTemplate
const #67 = Asciz	toArray;
const #68 = Asciz	()Lscala/runtime/BoxedArray;;
const #69 = NameAndType	#67:#68;//  toArray:()Lscala/runtime/BoxedArray;
const #70 = InterfaceMethod	#66.#69;	//  scala/collection/generic/TraversableTemplate.toArray:()Lscala/runtime/BoxedArray;
const #71 = Asciz	java/lang/Class;
const #72 = class	#71;	//  java/lang/Class
const #73 = Asciz	arrayValue;
const #74 = Asciz	(Lscala/runtime/BoxedArray;Ljava/lang/Class;)Ljava/lang/Object;;
const #75 = NameAndType	#73:#74;//  arrayValue:(Lscala/runtime/BoxedArray;Ljava/lang/Class;)Ljava/lang/Object;
const #76 = Method	#56.#75;	//  scala/runtime/ScalaRunTime$.arrayValue:(Lscala/runtime/BoxedArray;Ljava/lang/Class;)Ljava/lang/Object;
const #77 = Asciz	scala/runtime/BoxedArray;
const #78 = class	#77;	//  scala/runtime/BoxedArray
const #79 = Asciz	[Ljava/lang/Class;;
const #80 = class	#79;	//  "[Ljava/lang/Class;"
const #81 = Asciz	getMethod;
const #82 = Asciz	(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;;
const #83 = NameAndType	#81:#82;//  getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
const #84 = Method	#72.#83;	//  java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
const #85 = Asciz	toString;
const #86 = Asciz	(Lscala/Function0;)Ljava/lang/String;;
const #87 = NameAndType	#85:#86;//  toString:(Lscala/Function0;)Ljava/lang/String;
const #88 = Method	#26.#87;	//  scala/Function0$class.toString:(Lscala/Function0;)Ljava/lang/String;
const #89 = Asciz	Scala;
const #90 = Asciz	InnerClasses;
const #91 = Asciz	scala/reflect/Invocation;
const #92 = class	#91;	//  scala/reflect/Invocation
const #93 = Asciz	SymbolWithArguments;
const #94 = Asciz	$anonfun$getMethodOn$1;
const #95 = Asciz	scala/Function0;
const #96 = class	#95;	//  scala/Function0
const #97 = Asciz	scala/ScalaObject;
const #98 = class	#97;	//  scala/ScalaObject
const #99 = Asciz	java/io/Serializable;
const #100 = class	#99;	//  java/io/Serializable

{
public scala.reflect.Invocation$SymbolWithArguments$$anonfun$getMethodOn$1(scala.reflect.Invocation$SymbolWithArguments, java.lang.Object);
  Code:
   Stack=2, Locals=3, Args_size=3
   0:	aload_1
   1:	ifnonnull	12
   4:	new	#12; //class java/lang/NullPointerException
   7:	dup
   8:	invokespecial	#15; //Method java/lang/NullPointerException."<init>":()V
   11:	athrow
   12:	aload_0
   13:	aload_1
   14:	putfield	#19; //Field $outer:Lscala/reflect/Invocation$SymbolWithArguments;
   17:	aload_0
   18:	aload_2
   19:	putfield	#21; //Field x$7:Ljava/lang/Object;
   22:	aload_0
   23:	invokespecial	#24; //Method java/lang/Object."<init>":()V
   26:	aload_0
   27:	invokestatic	#30; //Method scala/Function0$class.$init$:(Lscala/Function0;)V
   30:	return
  LineNumberTable: 
   line 89: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      31      0    this       Lscala/reflect/Invocation$SymbolWithArguments$$anonfun$getMethodOn$1;
   0      31      1    $outer       Lscala/reflect/Invocation$SymbolWithArguments;


public final java.lang.Object apply();
  Code:
   Stack=1, Locals=2, Args_size=1
   0:	aload_0
   1:	getfield	#19; //Field $outer:Lscala/reflect/Invocation$SymbolWithArguments;
   4:	astore_1
   5:	aload_0
   6:	invokevirtual	#38; //Method apply:()Ljava/lang/reflect/Method;
   9:	areturn
  LineNumberTable: 
   line 89: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    this       Lscala/reflect/Invocation$SymbolWithArguments$$anonfun$getMethodOn$1;


public final java.lang.reflect.Method apply();
  Code:
   Stack=5, Locals=3, Args_size=1
   0:	aload_0
   1:	getfield	#19; //Field $outer:Lscala/reflect/Invocation$SymbolWithArguments;
   4:	astore_2
   5:	aload_0
   6:	getfield	#21; //Field x$7:Ljava/lang/Object;
   9:	invokevirtual	#42; //Method java/lang/Object.getClass:()Ljava/lang/Class;
   12:	aload_0
   13:	getfield	#19; //Field $outer:Lscala/reflect/Invocation$SymbolWithArguments;
   16:	invokevirtual	#48; //Method scala/reflect/Invocation$SymbolWithArguments.sym:()Lscala/Symbol;
   19:	invokevirtual	#54; //Method scala/Symbol.name:()Ljava/lang/String;
   22:	getstatic	#60; //Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   25:	aload_0
   26:	getfield	#19; //Field $outer:Lscala/reflect/Invocation$SymbolWithArguments;
   29:	invokevirtual	#64; //Method scala/reflect/Invocation$SymbolWithArguments.getArgTypes:()Lscala/collection/immutable/List;
   32:	invokeinterface	#70,  1; //InterfaceMethod scala/collection/generic/TraversableTemplate.toArray:()Lscala/runtime/BoxedArray;
   37:	ldc	#72; //class java/lang/Class
   39:	invokevirtual	#76; //Method scala/runtime/ScalaRunTime$.arrayValue:(Lscala/runtime/BoxedArray;Ljava/lang/Class;)Ljava/lang/Object;
   42:	astore_1
   43:	aload_1
   44:	instanceof	#78; //class scala/runtime/BoxedArray
   47:	ifeq	65
   50:	getstatic	#60; //Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   53:	aload_1
   54:	checkcast	#78; //class scala/runtime/BoxedArray
   57:	ldc	#72; //class java/lang/Class
   59:	invokevirtual	#76; //Method scala/runtime/ScalaRunTime$.arrayValue:(Lscala/runtime/BoxedArray;Ljava/lang/Class;)Ljava/lang/Object;
   62:	goto	66
   65:	aload_1
   66:	checkcast	#80; //class "[Ljava/lang/Class;"
   69:	invokevirtual	#84; //Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
   72:	areturn
  LineNumberTable: 
   line 89: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      73      0    this       Lscala/reflect/Invocation$SymbolWithArguments$$anonfun$getMethodOn$1;


public java.lang.String toString();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#88; //Method scala/Function0$class.toString:(Lscala/Function0;)Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 89: 0


}

