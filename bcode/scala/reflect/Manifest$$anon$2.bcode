Compiled from "Manifest.scala"
public final class scala.reflect.Manifest$$anon$2 extends java.lang.Object implements scala.reflect.Manifest
  SourceFile: "Manifest.scala"
  Signature: length = 0x2
   00 4A 
  Scala: length = 0x
   
  InnerClass: 
   public final #79= #27 of #78; //$anon$2=class scala/reflect/Manifest$$anon$2 of class scala/reflect/Manifest
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Manifest.scala;
const #3 = Asciz	bitmap$0;
const #4 = Asciz	I;
const #5 = Asciz	toString;
const #6 = Asciz	Ljava/lang/String;;
const #7 = Asciz	erasure;
const #8 = Asciz	Ljava/lang/Class;;
const #9 = Asciz	Ljava/lang/Class<TT;>;;
const #10 = Asciz	Signature;
const #11 = Asciz	<init>;
const #12 = Asciz	(Ljava/lang/Class;)V;
const #13 = Asciz	Code;
const #14 = Asciz	LineNumberTable;
const #15 = Asciz	java/lang/Object;
const #16 = class	#15;	//  java/lang/Object
const #17 = Asciz	()V;
const #18 = NameAndType	#11:#17;//  "<init>":()V
const #19 = Method	#16.#18;	//  java/lang/Object."<init>":()V
const #20 = Asciz	scala/reflect/Manifest$class;
const #21 = class	#20;	//  scala/reflect/Manifest$class
const #22 = Asciz	$init$;
const #23 = Asciz	(Lscala/reflect/Manifest;)V;
const #24 = NameAndType	#22:#23;//  $init$:(Lscala/reflect/Manifest;)V
const #25 = Method	#21.#24;	//  scala/reflect/Manifest$class.$init$:(Lscala/reflect/Manifest;)V
const #26 = Asciz	scala/reflect/Manifest$$anon$2;
const #27 = class	#26;	//  scala/reflect/Manifest$$anon$2
const #28 = NameAndType	#7:#8;//  erasure:Ljava/lang/Class;
const #29 = Field	#27.#28;	//  scala/reflect/Manifest$$anon$2.erasure:Ljava/lang/Class;
const #30 = Asciz	()Ljava/lang/String;;
const #31 = NameAndType	#3:#4;//  bitmap$0:I
const #32 = Field	#27.#31;	//  scala/reflect/Manifest$$anon$2.bitmap$0:I
const #33 = Asciz	()Ljava/lang/Class;;
const #34 = NameAndType	#7:#33;//  erasure:()Ljava/lang/Class;
const #35 = Method	#27.#34;	//  scala/reflect/Manifest$$anon$2.erasure:()Ljava/lang/Class;
const #36 = Asciz	java/lang/Class;
const #37 = class	#36;	//  java/lang/Class
const #38 = Asciz	getName;
const #39 = NameAndType	#38:#30;//  getName:()Ljava/lang/String;
const #40 = Method	#37.#39;	//  java/lang/Class.getName:()Ljava/lang/String;
const #41 = NameAndType	#5:#6;//  toString:Ljava/lang/String;
const #42 = Field	#27.#41;	//  scala/reflect/Manifest$$anon$2.toString:Ljava/lang/String;
const #43 = Asciz	scala/runtime/BoxedUnit;
const #44 = class	#43;	//  scala/runtime/BoxedUnit
const #45 = Asciz	UNIT;
const #46 = Asciz	Lscala/runtime/BoxedUnit;;
const #47 = NameAndType	#45:#46;//  UNIT:Lscala/runtime/BoxedUnit;
const #48 = Field	#44.#47;	//  scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
const #49 = Asciz	()Ljava/lang/Class<TT;>;;
const #50 = Asciz	typeArguments;
const #51 = Asciz	()Lscala/Option;;
const #52 = Asciz	(Lscala/reflect/Manifest;)Lscala/Option;;
const #53 = NameAndType	#50:#52;//  typeArguments:(Lscala/reflect/Manifest;)Lscala/Option;
const #54 = Method	#21.#53;	//  scala/reflect/Manifest$class.typeArguments:(Lscala/reflect/Manifest;)Lscala/Option;
const #55 = Asciz	equals;
const #56 = Asciz	(Ljava/lang/Object;)Z;
const #57 = Asciz	(Lscala/reflect/Manifest;Ljava/lang/Object;)Z;
const #58 = NameAndType	#55:#57;//  equals:(Lscala/reflect/Manifest;Ljava/lang/Object;)Z
const #59 = Method	#21.#58;	//  scala/reflect/Manifest$class.equals:(Lscala/reflect/Manifest;Ljava/lang/Object;)Z
const #60 = Asciz	this;
const #61 = Asciz	Lscala/reflect/Manifest$$anon$2;;
const #62 = Asciz	that;
const #63 = Asciz	Ljava/lang/Object;;
const #64 = Asciz	LocalVariableTable;
const #65 = Asciz	$greater$colon$greater;
const #66 = Asciz	(Lscala/reflect/Manifest;)Z;
const #67 = Asciz	(Lscala/reflect/Manifest;Lscala/reflect/Manifest;)Z;
const #68 = NameAndType	#65:#67;//  $greater$colon$greater:(Lscala/reflect/Manifest;Lscala/reflect/Manifest;)Z
const #69 = Method	#21.#68;	//  scala/reflect/Manifest$class.$greater$colon$greater:(Lscala/reflect/Manifest;Lscala/reflect/Manifest;)Z
const #70 = Asciz	Lscala/reflect/Manifest;;
const #71 = Asciz	$less$colon$less;
const #72 = NameAndType	#71:#67;//  $less$colon$less:(Lscala/reflect/Manifest;Lscala/reflect/Manifest;)Z
const #73 = Method	#21.#72;	//  scala/reflect/Manifest$class.$less$colon$less:(Lscala/reflect/Manifest;Lscala/reflect/Manifest;)Z
const #74 = Asciz	Ljava/lang/Object;Lscala/reflect/Manifest<TT;>;;
const #75 = Asciz	Scala;
const #76 = Asciz	InnerClasses;
const #77 = Asciz	scala/reflect/Manifest;
const #78 = class	#77;	//  scala/reflect/Manifest
const #79 = Asciz	$anon$2;

{
public volatile int bitmap$0;

public scala.reflect.Manifest$$anon$2(java.lang.Class);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	invokespecial	#19; //Method java/lang/Object."<init>":()V
   4:	aload_0
   5:	invokestatic	#25; //Method scala/reflect/Manifest$class.$init$:(Lscala/reflect/Manifest;)V
   8:	aload_0
   9:	aload_1
   10:	putfield	#29; //Field erasure:Ljava/lang/Class;
   13:	return
  LineNumberTable: 
   line 93: 0
   line 94: 8


public java.lang.String toString();
  Code:
   Stack=3, Locals=2, Args_size=1
   0:	aload_0
   1:	getfield	#32; //Field bitmap$0:I
   4:	iconst_1
   5:	iand
   6:	iconst_0
   7:	if_icmpne	51
   10:	aload_0
   11:	dup
   12:	astore_1
   13:	monitorenter
   14:	aload_0
   15:	getfield	#32; //Field bitmap$0:I
   18:	iconst_1
   19:	iand
   20:	iconst_0
   21:	if_icmpne	45
   24:	aload_0
   25:	aload_0
   26:	invokevirtual	#35; //Method erasure:()Ljava/lang/Class;
   29:	invokevirtual	#40; //Method java/lang/Class.getName:()Ljava/lang/String;
   32:	putfield	#42; //Field toString:Ljava/lang/String;
   35:	aload_0
   36:	aload_0
   37:	getfield	#32; //Field bitmap$0:I
   40:	iconst_1
   41:	ior
   42:	putfield	#32; //Field bitmap$0:I
   45:	getstatic	#48; //Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
   48:	pop
   49:	aload_1
   50:	monitorexit
   51:	aload_0
   52:	getfield	#42; //Field toString:Ljava/lang/String;
   55:	areturn
   56:	aload_1
   57:	monitorexit
   58:	athrow
  Exception table:
   from   to  target type
    14    51    56   any
  LineNumberTable: 
   line 95: 0
   line 28: 6
   line 95: 10
   line 28: 20
   line 95: 24


public java.lang.Class erasure();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#29; //Field erasure:Ljava/lang/Class;
   4:	areturn
  LineNumberTable: 
   line 94: 0

  Signature: length = 0x2
   00 31 

public scala.Option typeArguments();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#54; //Method scala/reflect/Manifest$class.typeArguments:(Lscala/reflect/Manifest;)Lscala/Option;
   4:	areturn
  LineNumberTable: 
   line 93: 0


public boolean equals(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#59; //Method scala/reflect/Manifest$class.equals:(Lscala/reflect/Manifest;Ljava/lang/Object;)Z
   5:	ireturn
  LineNumberTable: 
   line 93: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/reflect/Manifest$$anon$2;
   0      6      1    that       Ljava/lang/Object;


public boolean $greater$colon$greater(scala.reflect.Manifest);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#69; //Method scala/reflect/Manifest$class.$greater$colon$greater:(Lscala/reflect/Manifest;Lscala/reflect/Manifest;)Z
   5:	ireturn
  LineNumberTable: 
   line 93: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/reflect/Manifest$$anon$2;
   0      6      1    that       Lscala/reflect/Manifest;


public boolean $less$colon$less(scala.reflect.Manifest);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#73; //Method scala/reflect/Manifest$class.$less$colon$less:(Lscala/reflect/Manifest;Lscala/reflect/Manifest;)Z
   5:	ireturn
  LineNumberTable: 
   line 93: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/reflect/Manifest$$anon$2;
   0      6      1    that       Lscala/reflect/Manifest;


}

