Compiled from "Numeric.scala"
public abstract class scala.Numeric$IntIsIntegral$class extends java.lang.Object
  SourceFile: "Numeric.scala"
  Scala: length = 0x
   
  InnerClass: 
   public abstract #53= #50 of #52; //IntIsIntegral=class scala/Numeric$IntIsIntegral of class scala/Numeric
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Numeric.scala;
const #3 = Asciz	$init$;
const #4 = Asciz	(Lscala/Numeric$IntIsIntegral;)V;
const #5 = Asciz	Code;
const #6 = Asciz	LineNumberTable;
const #7 = Asciz	$this;
const #8 = Asciz	Lscala/Numeric$IntIsIntegral;;
const #9 = Asciz	LocalVariableTable;
const #10 = Asciz	toDouble;
const #11 = Asciz	(Lscala/Numeric$IntIsIntegral;I)D;
const #12 = Asciz	scala/Predef$;
const #13 = class	#12;	//  scala/Predef$
const #14 = Asciz	MODULE$;
const #15 = Asciz	Lscala/Predef$;;
const #16 = NameAndType	#14:#15;//  MODULE$:Lscala/Predef$;
const #17 = Field	#13.#16;	//  scala/Predef$.MODULE$:Lscala/Predef$;
const #18 = Asciz	int2double;
const #19 = Asciz	(I)D;
const #20 = NameAndType	#18:#19;//  int2double:(I)D
const #21 = Method	#13.#20;	//  scala/Predef$.int2double:(I)D
const #22 = Asciz	x;
const #23 = Asciz	I;
const #24 = Asciz	toFloat;
const #25 = Asciz	(Lscala/Numeric$IntIsIntegral;I)F;
const #26 = Asciz	int2float;
const #27 = Asciz	(I)F;
const #28 = NameAndType	#26:#27;//  int2float:(I)F
const #29 = Method	#13.#28;	//  scala/Predef$.int2float:(I)F
const #30 = Asciz	toLong;
const #31 = Asciz	(Lscala/Numeric$IntIsIntegral;I)J;
const #32 = Asciz	int2long;
const #33 = Asciz	(I)J;
const #34 = NameAndType	#32:#33;//  int2long:(I)J
const #35 = Method	#13.#34;	//  scala/Predef$.int2long:(I)J
const #36 = Asciz	toInt;
const #37 = Asciz	(Lscala/Numeric$IntIsIntegral;I)I;
const #38 = Asciz	fromInt;
const #39 = Asciz	negate;
const #40 = Asciz	rem;
const #41 = Asciz	(Lscala/Numeric$IntIsIntegral;II)I;
const #42 = Asciz	y;
const #43 = Asciz	quot;
const #44 = Asciz	times;
const #45 = Asciz	minus;
const #46 = Asciz	plus;
const #47 = Asciz	Scala;
const #48 = Asciz	InnerClasses;
const #49 = Asciz	scala/Numeric$IntIsIntegral;
const #50 = class	#49;	//  scala/Numeric$IntIsIntegral
const #51 = Asciz	scala/Numeric;
const #52 = class	#51;	//  scala/Numeric
const #53 = Asciz	IntIsIntegral;
const #54 = Asciz	scala/Numeric$IntIsIntegral$class;
const #55 = class	#54;	//  scala/Numeric$IntIsIntegral$class
const #56 = Asciz	java/lang/Object;
const #57 = class	#56;	//  java/lang/Object

{
public static void $init$(scala.Numeric$IntIsIntegral);
  Code:
   Stack=0, Locals=1, Args_size=1
   0:	return
  LineNumberTable: 
   line 19: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      1      0    $this       Lscala/Numeric$IntIsIntegral;


public static double toDouble(scala.Numeric$IntIsIntegral, int);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	getstatic	#17; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   3:	iload_1
   4:	invokevirtual	#21; //Method scala/Predef$.int2double:(I)D
   7:	dreturn
  LineNumberTable: 
   line 30: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      8      0    $this       Lscala/Numeric$IntIsIntegral;
   0      8      1    x       I


public static float toFloat(scala.Numeric$IntIsIntegral, int);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	getstatic	#17; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   3:	iload_1
   4:	invokevirtual	#29; //Method scala/Predef$.int2float:(I)F
   7:	freturn
  LineNumberTable: 
   line 29: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      8      0    $this       Lscala/Numeric$IntIsIntegral;
   0      8      1    x       I


public static long toLong(scala.Numeric$IntIsIntegral, int);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	getstatic	#17; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   3:	iload_1
   4:	invokevirtual	#35; //Method scala/Predef$.int2long:(I)J
   7:	lreturn
  LineNumberTable: 
   line 28: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      8      0    $this       Lscala/Numeric$IntIsIntegral;
   0      8      1    x       I


public static int toInt(scala.Numeric$IntIsIntegral, int);
  Code:
   Stack=1, Locals=2, Args_size=2
   0:	iload_1
   1:	ireturn
  LineNumberTable: 
   line 27: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      2      0    $this       Lscala/Numeric$IntIsIntegral;
   0      2      1    x       I


public static int fromInt(scala.Numeric$IntIsIntegral, int);
  Code:
   Stack=1, Locals=2, Args_size=2
   0:	iload_1
   1:	ireturn
  LineNumberTable: 
   line 26: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      2      0    $this       Lscala/Numeric$IntIsIntegral;
   0      2      1    x       I


public static int negate(scala.Numeric$IntIsIntegral, int);
  Code:
   Stack=1, Locals=2, Args_size=2
   0:	iload_1
   1:	ineg
   2:	ireturn
  LineNumberTable: 
   line 25: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      3      0    $this       Lscala/Numeric$IntIsIntegral;
   0      3      1    x       I


public static int rem(scala.Numeric$IntIsIntegral, int, int);
  Code:
   Stack=2, Locals=3, Args_size=3
   0:	iload_1
   1:	iload_2
   2:	irem
   3:	ireturn
  LineNumberTable: 
   line 24: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      4      0    $this       Lscala/Numeric$IntIsIntegral;
   0      4      1    x       I
   0      4      2    y       I


public static int quot(scala.Numeric$IntIsIntegral, int, int);
  Code:
   Stack=2, Locals=3, Args_size=3
   0:	iload_1
   1:	iload_2
   2:	idiv
   3:	ireturn
  LineNumberTable: 
   line 23: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      4      0    $this       Lscala/Numeric$IntIsIntegral;
   0      4      1    x       I
   0      4      2    y       I


public static int times(scala.Numeric$IntIsIntegral, int, int);
  Code:
   Stack=2, Locals=3, Args_size=3
   0:	iload_1
   1:	iload_2
   2:	imul
   3:	ireturn
  LineNumberTable: 
   line 22: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      4      0    $this       Lscala/Numeric$IntIsIntegral;
   0      4      1    x       I
   0      4      2    y       I


public static int minus(scala.Numeric$IntIsIntegral, int, int);
  Code:
   Stack=2, Locals=3, Args_size=3
   0:	iload_1
   1:	iload_2
   2:	isub
   3:	ireturn
  LineNumberTable: 
   line 21: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      4      0    $this       Lscala/Numeric$IntIsIntegral;
   0      4      1    x       I
   0      4      2    y       I


public static int plus(scala.Numeric$IntIsIntegral, int, int);
  Code:
   Stack=2, Locals=3, Args_size=3
   0:	iload_1
   1:	iload_2
   2:	iadd
   3:	ireturn
  LineNumberTable: 
   line 20: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      4      0    $this       Lscala/Numeric$IntIsIntegral;
   0      4      1    x       I
   0      4      2    y       I


}

