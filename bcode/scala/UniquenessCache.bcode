Compiled from "Symbol.scala"
public abstract class scala.UniquenessCache extends java.lang.Object implements scala.ScalaObject
  SourceFile: "Symbol.scala"
  Signature: length = 0x2
   00 FFFFFF81 
  ScalaSig: length = 0x302
   05 00 79 06 06 01 02 FFFFFF81 00 02 04 02 0F 55 6E 69
   71 75 65 6E 65 73 73 43 61 63 68 65 0A 01 03 01
   05 73 63 61 6C 61 15 03 05 19 23 13 03 00 06 0E
   10 02 07 0C 0D 01 08 0A 02 09 0A 01 04 6C 61 6E
   67 0A 01 0B 01 04 6A 61 76 61 09 02 0D 08 02 06
   4F 62 6A 65 63 74 10 02 0F 10 0D 01 02 09 02 11
   02 02 0B 53 63 61 6C 61 4F 62 6A 65 63 74 08 05
   13 00 FFFFFF84 00 15 01 06 3C 69 6E 69 74 3E 03 00 14
   01 16 10 04 0F 00 17 22 10 02 18 19 0C 00 04 08
   1A 00 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFFC2 00 1B 02 01 4B 11 02 1C 1F 10
   02 0F 1D 09 02 1E 02 02 07 4E 6F 74 68 69 6E 67
   10 02 0F 20 09 02 21 02 02 03 41 6E 79 10 02 18
   23 04 08 24 00 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFFC2 00 25 02 01 56 11 02
   26 1F 10 02 0F 27 09 02 28 02 02 04 4E 75 6C 6C
   08 07 2A 00 FFFFFFC2 FFFFFF80 FFFFFF84 04 2B 01 05 71 75 65 75 65
   15 01 2C 10 03 2D 30 22 0D 01 2E 0A 02 2F 08 01
   03 72 65 66 09 02 31 2E 02 0E 52 65 66 65 72 65
   6E 63 65 51 75 65 75 65 08 06 33 00 FFFFFFA0 FFFFFF80 04 2C
   01 06 71 75 65 75 65 20 08 07 35 00 FFFFFFC2 FFFFFF80 FFFFFF84 04
   36 01 03 72 77 6C 15 01 37 10 02 38 3F 0D 01 39
   0A 02 3A 3B 01 05 6C 6F 63 6B 73 0A 02 3C 3D 01
   0A 63 6F 6E 63 75 72 72 65 6E 74 0A 02 3E 0A 01
   04 75 74 69 6C 09 02 40 39 02 16 52 65 65 6E 74
   72 61 6E 74 52 65 61 64 57 72 69 74 65 4C 6F 63
   6B 08 06 42 00 FFFFFFA0 FFFFFF80 04 37 01 04 72 77 6C 20 08
   07 44 00 FFFFFFC2 FFFFFF80 FFFFFF84 04 45 01 05 72 6C 6F 63 6B 15
   01 46 10 02 47 4A 0D 01 48 0A 02 49 39 01 16 52
   65 65 6E 74 72 61 6E 74 52 65 61 64 57 72 69 74
   65 4C 6F 63 6B 09 02 4B 48 02 08 52 65 61 64 4C
   6F 63 6B 08 06 4D 00 FFFFFFA0 FFFFFF80 04 46 01 06 72 6C 6F
   63 6B 20 08 07 4F 00 FFFFFFC2 FFFFFF80 FFFFFF84 04 50 01 05 77 6C
   6F 63 6B 15 01 51 10 02 47 52 09 02 53 48 02 09
   57 72 69 74 65 4C 6F 63 6B 08 06 55 00 FFFFFFA0 FFFFFF80 04
   51 01 06 77 6C 6F 63 6B 20 08 07 57 00 FFFFFFC2 FFFFFF80 FFFFFF84
   04 58 01 03 6D 61 70 15 01 59 10 04 5A 5B 17 5D
   0D 01 3D 09 02 5C 3D 02 0B 57 65 61 6B 48 61 73
   68 4D 61 70 10 03 2D 5E 22 09 02 5F 2E 02 0D 57
   65 61 6B 52 65 66 65 72 65 6E 63 65 08 06 61 00
   FFFFFFA0 FFFFFF80 04 59 01 04 6D 61 70 20 08 05 63 00 FFFFFF86 08
   64 01 0C 76 61 6C 75 65 46 72 6F 6D 4B 65 79 14
   02 22 65 08 05 66 62 FFFFFFC0 00 17 01 01 6B 08 05 68
   00 FFFFFF86 08 69 01 0C 6B 65 79 46 72 6F 6D 56 61 6C
   75 65 14 02 6A 6D 10 03 0F 6B 17 09 02 6C 02 02
   06 4F 70 74 69 6F 6E 08 05 6E 67 FFFFFFC0 00 22 01 01
   76 08 05 70 00 FFFFFF84 00 71 01 05 61 70 70 6C 79 14
   02 22 72 08 05 73 6F FFFFFFC0 00 17 01 04 6E 61 6D 65
   08 05 75 00 FFFFFF84 00 76 01 07 75 6E 61 70 70 6C 79
   14 02 6A 77 08 05 78 74 FFFFFFC0 00 22 01 05 6F 74 68
   65 72 
  InnerClass: 
   public #132= #103 of #32; //ReadLock=class java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock of class java/util/concurrent/locks/ReentrantReadWriteLock
   public #133= #61 of #32; //WriteLock=class java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock of class java/util/concurrent/locks/ReentrantReadWriteLock
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Symbol.scala;
const #3 = Asciz	map;
const #4 = Asciz	Ljava/util/WeakHashMap;;
const #5 = Asciz	Ljava/util/WeakHashMap<TK;Ljava/lang/ref/WeakReference<TV;>;>;;
const #6 = Asciz	Signature;
const #7 = Asciz	wlock;
const #8 = Asciz	Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;;
const #9 = Asciz	rlock;
const #10 = Asciz	Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;;
const #11 = Asciz	rwl;
const #12 = Asciz	Ljava/util/concurrent/locks/ReentrantReadWriteLock;;
const #13 = Asciz	queue;
const #14 = Asciz	Ljava/lang/ref/ReferenceQueue;;
const #15 = Asciz	Ljava/lang/ref/ReferenceQueue<TV;>;;
const #16 = Asciz	<init>;
const #17 = Asciz	()V;
const #18 = Asciz	Code;
const #19 = Asciz	LineNumberTable;
const #20 = Asciz	java/lang/Object;
const #21 = class	#20;	//  java/lang/Object
const #22 = NameAndType	#16:#17;//  "<init>":()V
const #23 = Method	#21.#22;	//  java/lang/Object."<init>":()V
const #24 = Asciz	java/lang/ref/ReferenceQueue;
const #25 = class	#24;	//  java/lang/ref/ReferenceQueue
const #26 = Method	#25.#22;	//  java/lang/ref/ReferenceQueue."<init>":()V
const #27 = Asciz	scala/UniquenessCache;
const #28 = class	#27;	//  scala/UniquenessCache
const #29 = NameAndType	#13:#14;//  queue:Ljava/lang/ref/ReferenceQueue;
const #30 = Field	#28.#29;	//  scala/UniquenessCache.queue:Ljava/lang/ref/ReferenceQueue;
const #31 = Asciz	java/util/concurrent/locks/ReentrantReadWriteLock;
const #32 = class	#31;	//  java/util/concurrent/locks/ReentrantReadWriteLock
const #33 = Method	#32.#22;	//  java/util/concurrent/locks/ReentrantReadWriteLock."<init>":()V
const #34 = NameAndType	#11:#12;//  rwl:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
const #35 = Field	#28.#34;	//  scala/UniquenessCache.rwl:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
const #36 = Asciz	()Ljava/util/concurrent/locks/ReentrantReadWriteLock;;
const #37 = NameAndType	#11:#36;//  rwl:()Ljava/util/concurrent/locks/ReentrantReadWriteLock;
const #38 = Method	#28.#37;	//  scala/UniquenessCache.rwl:()Ljava/util/concurrent/locks/ReentrantReadWriteLock;
const #39 = Asciz	readLock;
const #40 = Asciz	()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;;
const #41 = NameAndType	#39:#40;//  readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
const #42 = Method	#32.#41;	//  java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
const #43 = NameAndType	#9:#10;//  rlock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
const #44 = Field	#28.#43;	//  scala/UniquenessCache.rlock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
const #45 = Asciz	writeLock;
const #46 = Asciz	()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;;
const #47 = NameAndType	#45:#46;//  writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
const #48 = Method	#32.#47;	//  java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
const #49 = NameAndType	#7:#8;//  wlock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
const #50 = Field	#28.#49;	//  scala/UniquenessCache.wlock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
const #51 = Asciz	java/util/WeakHashMap;
const #52 = class	#51;	//  java/util/WeakHashMap
const #53 = Method	#52.#22;	//  java/util/WeakHashMap."<init>":()V
const #54 = NameAndType	#3:#4;//  map:Ljava/util/WeakHashMap;
const #55 = Field	#28.#54;	//  scala/UniquenessCache.map:Ljava/util/WeakHashMap;
const #56 = Asciz	updateCache$1;
const #57 = Asciz	(Ljava/lang/Object;)Ljava/lang/Object;;
const #58 = NameAndType	#7:#46;//  wlock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
const #59 = Method	#28.#58;	//  scala/UniquenessCache.wlock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
const #60 = Asciz	java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
const #61 = class	#60;	//  java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock
const #62 = Asciz	lock;
const #63 = NameAndType	#62:#17;//  lock:()V
const #64 = Method	#61.#63;	//  java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock:()V
const #65 = Asciz	cached$1;
const #66 = NameAndType	#65:#57;//  cached$1:(Ljava/lang/Object;)Ljava/lang/Object;
const #67 = Method	#28.#66;	//  scala/UniquenessCache.cached$1:(Ljava/lang/Object;)Ljava/lang/Object;
const #68 = Asciz	equals;
const #69 = Asciz	(Ljava/lang/Object;)Z;
const #70 = NameAndType	#68:#69;//  equals:(Ljava/lang/Object;)Z
const #71 = Method	#21.#70;	//  java/lang/Object.equals:(Ljava/lang/Object;)Z
const #72 = Asciz	valueFromKey;
const #73 = NameAndType	#72:#57;//  valueFromKey:(Ljava/lang/Object;)Ljava/lang/Object;
const #74 = Method	#28.#73;	//  scala/UniquenessCache.valueFromKey:(Ljava/lang/Object;)Ljava/lang/Object;
const #75 = Asciz	()Ljava/util/WeakHashMap;;
const #76 = NameAndType	#3:#75;//  map:()Ljava/util/WeakHashMap;
const #77 = Method	#28.#76;	//  scala/UniquenessCache.map:()Ljava/util/WeakHashMap;
const #78 = Asciz	java/lang/ref/WeakReference;
const #79 = class	#78;	//  java/lang/ref/WeakReference
const #80 = Asciz	()Ljava/lang/ref/ReferenceQueue;;
const #81 = NameAndType	#13:#80;//  queue:()Ljava/lang/ref/ReferenceQueue;
const #82 = Method	#28.#81;	//  scala/UniquenessCache.queue:()Ljava/lang/ref/ReferenceQueue;
const #83 = Asciz	(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V;
const #84 = NameAndType	#16:#83;//  "<init>":(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
const #85 = Method	#79.#84;	//  java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
const #86 = Asciz	put;
const #87 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;;
const #88 = NameAndType	#86:#87;//  put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
const #89 = Method	#52.#88;	//  java/util/WeakHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
const #90 = Asciz	unlock;
const #91 = NameAndType	#90:#17;//  unlock:()V
const #92 = Method	#61.#91;	//  java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
const #93 = Asciz	this;
const #94 = Asciz	Lscala/UniquenessCache;;
const #95 = Asciz	sym;
const #96 = Asciz	Ljava/lang/Object;;
const #97 = Asciz	res;
const #98 = Asciz	exceptionResult2;
const #99 = Asciz	LocalVariableTable;
const #100 = NameAndType	#9:#40;//  rlock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
const #101 = Method	#28.#100;	//  scala/UniquenessCache.rlock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
const #102 = Asciz	java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
const #103 = class	#102;	//  java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock
const #104 = Method	#103.#63;	//  java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock:()V
const #105 = Asciz	get;
const #106 = NameAndType	#105:#57;//  get:(Ljava/lang/Object;)Ljava/lang/Object;
const #107 = Method	#52.#106;	//  java/util/WeakHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
const #108 = Asciz	()Ljava/lang/Object;;
const #109 = NameAndType	#105:#108;//  get:()Ljava/lang/Object;
const #110 = Method	#79.#109;	//  java/lang/ref/WeakReference.get:()Ljava/lang/Object;
const #111 = Method	#103.#91;	//  java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
const #112 = Asciz	reference;
const #113 = Asciz	Ljava/lang/ref/WeakReference;;
const #114 = Asciz	exceptionResult1;
const #115 = Asciz	unapply;
const #116 = Asciz	(Ljava/lang/Object;)Lscala/Option;;
const #117 = Asciz	keyFromValue;
const #118 = NameAndType	#117:#116;//  keyFromValue:(Ljava/lang/Object;)Lscala/Option;
const #119 = Method	#28.#118;	//  scala/UniquenessCache.keyFromValue:(Ljava/lang/Object;)Lscala/Option;
const #120 = Asciz	other;
const #121 = Asciz	(TV;)Lscala/Option<TK;>;;
const #122 = Asciz	apply;
const #123 = NameAndType	#56:#57;//  updateCache$1:(Ljava/lang/Object;)Ljava/lang/Object;
const #124 = Method	#28.#123;	//  scala/UniquenessCache.updateCache$1:(Ljava/lang/Object;)Ljava/lang/Object;
const #125 = Asciz	name$1;
const #126 = Asciz	(TK;)TV;;
const #127 = Asciz	()Ljava/util/WeakHashMap<TK;Ljava/lang/ref/WeakReference<TV;>;>;;
const #128 = Asciz	()Ljava/lang/ref/ReferenceQueue<TV;>;;
const #129 = Asciz	<K:Ljava/lang/Object;V:Ljava/lang/Object;>Ljava/lang/Object;Lscala/ScalaObject;;
const #130 = Asciz	ScalaSig;
const #131 = Asciz	InnerClasses;
const #132 = Asciz	ReadLock;
const #133 = Asciz	WriteLock;
const #134 = Asciz	scala/ScalaObject;
const #135 = class	#134;	//  scala/ScalaObject

{
public scala.UniquenessCache();
  Code:
   Stack=3, Locals=1, Args_size=1
   0:	aload_0
   1:	invokespecial	#23; //Method java/lang/Object."<init>":()V
   4:	aload_0
   5:	new	#25; //class java/lang/ref/ReferenceQueue
   8:	dup
   9:	invokespecial	#26; //Method java/lang/ref/ReferenceQueue."<init>":()V
   12:	putfield	#30; //Field queue:Ljava/lang/ref/ReferenceQueue;
   15:	aload_0
   16:	new	#32; //class java/util/concurrent/locks/ReentrantReadWriteLock
   19:	dup
   20:	invokespecial	#33; //Method java/util/concurrent/locks/ReentrantReadWriteLock."<init>":()V
   23:	putfield	#35; //Field rwl:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
   26:	aload_0
   27:	aload_0
   28:	invokespecial	#38; //Method rwl:()Ljava/util/concurrent/locks/ReentrantReadWriteLock;
   31:	invokevirtual	#42; //Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
   34:	putfield	#44; //Field rlock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
   37:	aload_0
   38:	aload_0
   39:	invokespecial	#38; //Method rwl:()Ljava/util/concurrent/locks/ReentrantReadWriteLock;
   42:	invokevirtual	#48; //Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
   45:	putfield	#50; //Field wlock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
   48:	aload_0
   49:	new	#52; //class java/util/WeakHashMap
   52:	dup
   53:	invokespecial	#53; //Method java/util/WeakHashMap."<init>":()V
   56:	putfield	#55; //Field map:Ljava/util/WeakHashMap;
   59:	return
  LineNumberTable: 
   line 50: 0
   line 55: 4
   line 56: 15
   line 57: 26
   line 58: 37
   line 59: 48

  Signature: length = 0x2
   00 11 

public scala.Option unapply(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokevirtual	#119; //Method keyFromValue:(Ljava/lang/Object;)Lscala/Option;
   5:	areturn
  LineNumberTable: 
   line 92: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/UniquenessCache;
   0      6      1    other       Ljava/lang/Object;

  Signature: length = 0x2
   00 79 

public java.lang.Object apply(java.lang.Object);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokespecial	#67; //Method cached$1:(Ljava/lang/Object;)Ljava/lang/Object;
   5:	astore_2
   6:	aload_2
   7:	dup
   8:	pop
   9:	ifnull	20
   12:	aload_2
   13:	aconst_null
   14:	invokevirtual	#71; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   17:	ifeq	28
   20:	aload_0
   21:	aload_1
   22:	invokespecial	#124; //Method updateCache$1:(Ljava/lang/Object;)Ljava/lang/Object;
   25:	goto	29
   28:	aload_2
   29:	areturn
  LineNumberTable: 
   line 88: 0
   line 89: 6
   line 90: 28
   line 64: 29

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      30      0    this       Lscala/UniquenessCache;
   0      30      1    name$1       Ljava/lang/Object;
   6      24      2    res       Ljava/lang/Object;

  Signature: length = 0x2
   00 7E 

public abstract scala.Option keyFromValue(java.lang.Object);
  Signature: length = 0x2
   00 79 

public abstract java.lang.Object valueFromKey(java.lang.Object);
  Signature: length = 0x2
   00 7E 

}

