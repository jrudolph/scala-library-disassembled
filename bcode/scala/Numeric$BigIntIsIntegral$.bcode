Compiled from "Numeric.scala"
public final class scala.Numeric$BigIntIsIntegral$ extends java.lang.Object implements scala.Numeric$BigIntIsIntegral,scala.Ordering$BigIntOrdering,scala.ScalaObject
  SourceFile: "Numeric.scala"
  Scala: length = 0x
   
  InnerClass: 
   public #219= #216 of #218; //Ops=class scala/Numeric$Ops of class scala/Numeric
   public #219= #221 of #126; //Ops=class scala/Ordering$Ops of class scala/Ordering
   public #224= #223 of #118; //IntegralOps=class scala/Integral$IntegralOps of class scala/Integral
   public abstract #225= #56 of #126; //BigIntOrdering=class scala/Ordering$BigIntOrdering of class scala/Ordering
   public abstract #226= #68 of #218; //BigIntIsIntegral=class scala/Numeric$BigIntIsIntegral of class scala/Numeric
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Numeric.scala;
const #3 = Asciz	Scala;
const #4 = Asciz	MODULE$;
const #5 = Asciz	Lscala/Numeric$BigIntIsIntegral$;;
const #6 = Asciz	<clinit>;
const #7 = Asciz	()V;
const #8 = Asciz	Code;
const #9 = Asciz	scala/Numeric$BigIntIsIntegral$;
const #10 = class	#9;	//  scala/Numeric$BigIntIsIntegral$
const #11 = Asciz	<init>;
const #12 = NameAndType	#11:#7;//  "<init>":()V
const #13 = Method	#10.#12;	//  scala/Numeric$BigIntIsIntegral$."<init>":()V
const #14 = Asciz	LineNumberTable;
const #15 = Asciz	java/lang/Object;
const #16 = class	#15;	//  java/lang/Object
const #17 = Method	#16.#12;	//  java/lang/Object."<init>":()V
const #18 = NameAndType	#4:#5;//  MODULE$:Lscala/Numeric$BigIntIsIntegral$;
const #19 = Field	#10.#18;	//  scala/Numeric$BigIntIsIntegral$.MODULE$:Lscala/Numeric$BigIntIsIntegral$;
const #20 = Asciz	scala/PartialOrdering$class;
const #21 = class	#20;	//  scala/PartialOrdering$class
const #22 = Asciz	$init$;
const #23 = Asciz	(Lscala/PartialOrdering;)V;
const #24 = NameAndType	#22:#23;//  $init$:(Lscala/PartialOrdering;)V
const #25 = Method	#21.#24;	//  scala/PartialOrdering$class.$init$:(Lscala/PartialOrdering;)V
const #26 = Asciz	scala/Ordering$class;
const #27 = class	#26;	//  scala/Ordering$class
const #28 = Asciz	(Lscala/Ordering;)V;
const #29 = NameAndType	#22:#28;//  $init$:(Lscala/Ordering;)V
const #30 = Method	#27.#29;	//  scala/Ordering$class.$init$:(Lscala/Ordering;)V
const #31 = Asciz	scala/Numeric$class;
const #32 = class	#31;	//  scala/Numeric$class
const #33 = Asciz	(Lscala/Numeric;)V;
const #34 = NameAndType	#22:#33;//  $init$:(Lscala/Numeric;)V
const #35 = Method	#32.#34;	//  scala/Numeric$class.$init$:(Lscala/Numeric;)V
const #36 = Asciz	scala/Integral$class;
const #37 = class	#36;	//  scala/Integral$class
const #38 = Asciz	(Lscala/Integral;)V;
const #39 = NameAndType	#22:#38;//  $init$:(Lscala/Integral;)V
const #40 = Method	#37.#39;	//  scala/Integral$class.$init$:(Lscala/Integral;)V
const #41 = Asciz	scala/Numeric$BigIntIsIntegral$class;
const #42 = class	#41;	//  scala/Numeric$BigIntIsIntegral$class
const #43 = Asciz	(Lscala/Numeric$BigIntIsIntegral;)V;
const #44 = NameAndType	#22:#43;//  $init$:(Lscala/Numeric$BigIntIsIntegral;)V
const #45 = Method	#42.#44;	//  scala/Numeric$BigIntIsIntegral$class.$init$:(Lscala/Numeric$BigIntIsIntegral;)V
const #46 = Asciz	scala/Ordering$BigIntOrdering$class;
const #47 = class	#46;	//  scala/Ordering$BigIntOrdering$class
const #48 = Asciz	(Lscala/Ordering$BigIntOrdering;)V;
const #49 = NameAndType	#22:#48;//  $init$:(Lscala/Ordering$BigIntOrdering;)V
const #50 = Method	#47.#49;	//  scala/Ordering$BigIntOrdering$class.$init$:(Lscala/Ordering$BigIntOrdering;)V
const #51 = Asciz	compare;
const #52 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)I;
const #53 = Asciz	scala/BigInt;
const #54 = class	#53;	//  scala/BigInt
const #55 = Asciz	scala/Ordering$BigIntOrdering;
const #56 = class	#55;	//  scala/Ordering$BigIntOrdering
const #57 = Asciz	(Lscala/BigInt;Lscala/BigInt;)I;
const #58 = NameAndType	#51:#57;//  compare:(Lscala/BigInt;Lscala/BigInt;)I
const #59 = InterfaceMethod	#56.#58;	//  scala/Ordering$BigIntOrdering.compare:(Lscala/BigInt;Lscala/BigInt;)I
const #60 = Asciz	this;
const #61 = Asciz	x;
const #62 = Asciz	Ljava/lang/Object;;
const #63 = Asciz	y;
const #64 = Asciz	LocalVariableTable;
const #65 = Asciz	plus;
const #66 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;;
const #67 = Asciz	scala/Numeric$BigIntIsIntegral;
const #68 = class	#67;	//  scala/Numeric$BigIntIsIntegral
const #69 = Asciz	(Lscala/BigInt;Lscala/BigInt;)Lscala/BigInt;;
const #70 = NameAndType	#65:#69;//  plus:(Lscala/BigInt;Lscala/BigInt;)Lscala/BigInt;
const #71 = InterfaceMethod	#68.#70;	//  scala/Numeric$BigIntIsIntegral.plus:(Lscala/BigInt;Lscala/BigInt;)Lscala/BigInt;
const #72 = Asciz	minus;
const #73 = NameAndType	#72:#69;//  minus:(Lscala/BigInt;Lscala/BigInt;)Lscala/BigInt;
const #74 = InterfaceMethod	#68.#73;	//  scala/Numeric$BigIntIsIntegral.minus:(Lscala/BigInt;Lscala/BigInt;)Lscala/BigInt;
const #75 = Asciz	times;
const #76 = NameAndType	#75:#69;//  times:(Lscala/BigInt;Lscala/BigInt;)Lscala/BigInt;
const #77 = InterfaceMethod	#68.#76;	//  scala/Numeric$BigIntIsIntegral.times:(Lscala/BigInt;Lscala/BigInt;)Lscala/BigInt;
const #78 = Asciz	quot;
const #79 = NameAndType	#78:#69;//  quot:(Lscala/BigInt;Lscala/BigInt;)Lscala/BigInt;
const #80 = InterfaceMethod	#68.#79;	//  scala/Numeric$BigIntIsIntegral.quot:(Lscala/BigInt;Lscala/BigInt;)Lscala/BigInt;
const #81 = Asciz	rem;
const #82 = NameAndType	#81:#69;//  rem:(Lscala/BigInt;Lscala/BigInt;)Lscala/BigInt;
const #83 = InterfaceMethod	#68.#82;	//  scala/Numeric$BigIntIsIntegral.rem:(Lscala/BigInt;Lscala/BigInt;)Lscala/BigInt;
const #84 = Asciz	negate;
const #85 = Asciz	(Ljava/lang/Object;)Ljava/lang/Object;;
const #86 = Asciz	(Lscala/BigInt;)Lscala/BigInt;;
const #87 = NameAndType	#84:#86;//  negate:(Lscala/BigInt;)Lscala/BigInt;
const #88 = InterfaceMethod	#68.#87;	//  scala/Numeric$BigIntIsIntegral.negate:(Lscala/BigInt;)Lscala/BigInt;
const #89 = Asciz	fromInt;
const #90 = Asciz	(I)Ljava/lang/Object;;
const #91 = Asciz	(I)Lscala/BigInt;;
const #92 = NameAndType	#89:#91;//  fromInt:(I)Lscala/BigInt;
const #93 = InterfaceMethod	#68.#92;	//  scala/Numeric$BigIntIsIntegral.fromInt:(I)Lscala/BigInt;
const #94 = Asciz	I;
const #95 = Asciz	toInt;
const #96 = Asciz	(Ljava/lang/Object;)I;
const #97 = Asciz	(Lscala/BigInt;)I;
const #98 = NameAndType	#95:#97;//  toInt:(Lscala/BigInt;)I
const #99 = InterfaceMethod	#68.#98;	//  scala/Numeric$BigIntIsIntegral.toInt:(Lscala/BigInt;)I
const #100 = Asciz	toLong;
const #101 = Asciz	(Ljava/lang/Object;)J;
const #102 = Asciz	(Lscala/BigInt;)J;
const #103 = NameAndType	#100:#102;//  toLong:(Lscala/BigInt;)J
const #104 = InterfaceMethod	#68.#103;	//  scala/Numeric$BigIntIsIntegral.toLong:(Lscala/BigInt;)J
const #105 = Asciz	toFloat;
const #106 = Asciz	(Ljava/lang/Object;)F;
const #107 = Asciz	(Lscala/BigInt;)F;
const #108 = NameAndType	#105:#107;//  toFloat:(Lscala/BigInt;)F
const #109 = InterfaceMethod	#68.#108;	//  scala/Numeric$BigIntIsIntegral.toFloat:(Lscala/BigInt;)F
const #110 = Asciz	toDouble;
const #111 = Asciz	(Ljava/lang/Object;)D;
const #112 = Asciz	(Lscala/BigInt;)D;
const #113 = NameAndType	#110:#112;//  toDouble:(Lscala/BigInt;)D
const #114 = InterfaceMethod	#68.#113;	//  scala/Numeric$BigIntIsIntegral.toDouble:(Lscala/BigInt;)D
const #115 = Asciz	mkNumericOps;
const #116 = Asciz	(Ljava/lang/Object;)Lscala/Numeric$Ops;;
const #117 = Asciz	scala/Integral;
const #118 = class	#117;	//  scala/Integral
const #119 = Asciz	(Ljava/lang/Object;)Lscala/Integral$IntegralOps;;
const #120 = NameAndType	#115:#119;//  mkNumericOps:(Ljava/lang/Object;)Lscala/Integral$IntegralOps;
const #121 = InterfaceMethod	#118.#120;	//  scala/Integral.mkNumericOps:(Ljava/lang/Object;)Lscala/Integral$IntegralOps;
const #122 = Asciz	lhs;
const #123 = Asciz	reverse;
const #124 = Asciz	()Lscala/PartialOrdering;;
const #125 = Asciz	scala/Ordering;
const #126 = class	#125;	//  scala/Ordering
const #127 = Asciz	()Lscala/Ordering;;
const #128 = NameAndType	#123:#127;//  reverse:()Lscala/Ordering;
const #129 = InterfaceMethod	#126.#128;	//  scala/Ordering.reverse:()Lscala/Ordering;
const #130 = Asciz	mkOrderingOps;
const #131 = Asciz	(Ljava/lang/Object;)Lscala/Ordering$Ops;;
const #132 = Asciz	(Lscala/Ordering;Ljava/lang/Object;)Lscala/Ordering$Ops;;
const #133 = NameAndType	#130:#132;//  mkOrderingOps:(Lscala/Ordering;Ljava/lang/Object;)Lscala/Ordering$Ops;
const #134 = Method	#27.#133;	//  scala/Ordering$class.mkOrderingOps:(Lscala/Ordering;Ljava/lang/Object;)Lscala/Ordering$Ops;
const #135 = Asciz	(Lscala/Ordering;)Lscala/Ordering;;
const #136 = NameAndType	#123:#135;//  reverse:(Lscala/Ordering;)Lscala/Ordering;
const #137 = Method	#27.#136;	//  scala/Ordering$class.reverse:(Lscala/Ordering;)Lscala/Ordering;
const #138 = Asciz	min;
const #139 = Asciz	(Lscala/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;;
const #140 = NameAndType	#138:#139;//  min:(Lscala/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
const #141 = Method	#27.#140;	//  scala/Ordering$class.min:(Lscala/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
const #142 = Asciz	max;
const #143 = NameAndType	#142:#139;//  max:(Lscala/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
const #144 = Method	#27.#143;	//  scala/Ordering$class.max:(Lscala/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
const #145 = Asciz	equiv;
const #146 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)Z;
const #147 = Asciz	(Lscala/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z;
const #148 = NameAndType	#145:#147;//  equiv:(Lscala/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #149 = Method	#27.#148;	//  scala/Ordering$class.equiv:(Lscala/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #150 = Asciz	gt;
const #151 = NameAndType	#150:#147;//  gt:(Lscala/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #152 = Method	#27.#151;	//  scala/Ordering$class.gt:(Lscala/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #153 = Asciz	lt;
const #154 = NameAndType	#153:#147;//  lt:(Lscala/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #155 = Method	#27.#154;	//  scala/Ordering$class.lt:(Lscala/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #156 = Asciz	gteq;
const #157 = NameAndType	#156:#147;//  gteq:(Lscala/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #158 = Method	#27.#157;	//  scala/Ordering$class.gteq:(Lscala/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #159 = Asciz	lteq;
const #160 = NameAndType	#159:#147;//  lteq:(Lscala/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #161 = Method	#27.#160;	//  scala/Ordering$class.lteq:(Lscala/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #162 = Asciz	signum;
const #163 = Asciz	(Lscala/Numeric;Ljava/lang/Object;)I;
const #164 = NameAndType	#162:#163;//  signum:(Lscala/Numeric;Ljava/lang/Object;)I
const #165 = Method	#32.#164;	//  scala/Numeric$class.signum:(Lscala/Numeric;Ljava/lang/Object;)I
const #166 = Asciz	abs;
const #167 = Asciz	(Lscala/Numeric;Ljava/lang/Object;)Ljava/lang/Object;;
const #168 = NameAndType	#166:#167;//  abs:(Lscala/Numeric;Ljava/lang/Object;)Ljava/lang/Object;
const #169 = Method	#32.#168;	//  scala/Numeric$class.abs:(Lscala/Numeric;Ljava/lang/Object;)Ljava/lang/Object;
const #170 = Asciz	one;
const #171 = Asciz	()Ljava/lang/Object;;
const #172 = Asciz	(Lscala/Numeric;)Ljava/lang/Object;;
const #173 = NameAndType	#170:#172;//  one:(Lscala/Numeric;)Ljava/lang/Object;
const #174 = Method	#32.#173;	//  scala/Numeric$class.one:(Lscala/Numeric;)Ljava/lang/Object;
const #175 = Asciz	zero;
const #176 = NameAndType	#175:#172;//  zero:(Lscala/Numeric;)Ljava/lang/Object;
const #177 = Method	#32.#176;	//  scala/Numeric$class.zero:(Lscala/Numeric;)Ljava/lang/Object;
const #178 = Asciz	(Lscala/Integral;Ljava/lang/Object;)Lscala/Integral$IntegralOps;;
const #179 = NameAndType	#115:#178;//  mkNumericOps:(Lscala/Integral;Ljava/lang/Object;)Lscala/Integral$IntegralOps;
const #180 = Method	#37.#179;	//  scala/Integral$class.mkNumericOps:(Lscala/Integral;Ljava/lang/Object;)Lscala/Integral$IntegralOps;
const #181 = Asciz	(Lscala/Numeric$BigIntIsIntegral;Lscala/BigInt;)D;
const #182 = NameAndType	#110:#181;//  toDouble:(Lscala/Numeric$BigIntIsIntegral;Lscala/BigInt;)D
const #183 = Method	#42.#182;	//  scala/Numeric$BigIntIsIntegral$class.toDouble:(Lscala/Numeric$BigIntIsIntegral;Lscala/BigInt;)D
const #184 = Asciz	Lscala/BigInt;;
const #185 = Asciz	(Lscala/Numeric$BigIntIsIntegral;Lscala/BigInt;)F;
const #186 = NameAndType	#105:#185;//  toFloat:(Lscala/Numeric$BigIntIsIntegral;Lscala/BigInt;)F
const #187 = Method	#42.#186;	//  scala/Numeric$BigIntIsIntegral$class.toFloat:(Lscala/Numeric$BigIntIsIntegral;Lscala/BigInt;)F
const #188 = Asciz	(Lscala/Numeric$BigIntIsIntegral;Lscala/BigInt;)J;
const #189 = NameAndType	#100:#188;//  toLong:(Lscala/Numeric$BigIntIsIntegral;Lscala/BigInt;)J
const #190 = Method	#42.#189;	//  scala/Numeric$BigIntIsIntegral$class.toLong:(Lscala/Numeric$BigIntIsIntegral;Lscala/BigInt;)J
const #191 = Asciz	(Lscala/Numeric$BigIntIsIntegral;Lscala/BigInt;)I;
const #192 = NameAndType	#95:#191;//  toInt:(Lscala/Numeric$BigIntIsIntegral;Lscala/BigInt;)I
const #193 = Method	#42.#192;	//  scala/Numeric$BigIntIsIntegral$class.toInt:(Lscala/Numeric$BigIntIsIntegral;Lscala/BigInt;)I
const #194 = Asciz	(Lscala/Numeric$BigIntIsIntegral;I)Lscala/BigInt;;
const #195 = NameAndType	#89:#194;//  fromInt:(Lscala/Numeric$BigIntIsIntegral;I)Lscala/BigInt;
const #196 = Method	#42.#195;	//  scala/Numeric$BigIntIsIntegral$class.fromInt:(Lscala/Numeric$BigIntIsIntegral;I)Lscala/BigInt;
const #197 = Asciz	(Lscala/Numeric$BigIntIsIntegral;Lscala/BigInt;)Lscala/BigInt;;
const #198 = NameAndType	#84:#197;//  negate:(Lscala/Numeric$BigIntIsIntegral;Lscala/BigInt;)Lscala/BigInt;
const #199 = Method	#42.#198;	//  scala/Numeric$BigIntIsIntegral$class.negate:(Lscala/Numeric$BigIntIsIntegral;Lscala/BigInt;)Lscala/BigInt;
const #200 = Asciz	(Lscala/Numeric$BigIntIsIntegral;Lscala/BigInt;Lscala/BigInt;)Lscala/BigInt;;
const #201 = NameAndType	#81:#200;//  rem:(Lscala/Numeric$BigIntIsIntegral;Lscala/BigInt;Lscala/BigInt;)Lscala/BigInt;
const #202 = Method	#42.#201;	//  scala/Numeric$BigIntIsIntegral$class.rem:(Lscala/Numeric$BigIntIsIntegral;Lscala/BigInt;Lscala/BigInt;)Lscala/BigInt;
const #203 = NameAndType	#78:#200;//  quot:(Lscala/Numeric$BigIntIsIntegral;Lscala/BigInt;Lscala/BigInt;)Lscala/BigInt;
const #204 = Method	#42.#203;	//  scala/Numeric$BigIntIsIntegral$class.quot:(Lscala/Numeric$BigIntIsIntegral;Lscala/BigInt;Lscala/BigInt;)Lscala/BigInt;
const #205 = NameAndType	#75:#200;//  times:(Lscala/Numeric$BigIntIsIntegral;Lscala/BigInt;Lscala/BigInt;)Lscala/BigInt;
const #206 = Method	#42.#205;	//  scala/Numeric$BigIntIsIntegral$class.times:(Lscala/Numeric$BigIntIsIntegral;Lscala/BigInt;Lscala/BigInt;)Lscala/BigInt;
const #207 = NameAndType	#72:#200;//  minus:(Lscala/Numeric$BigIntIsIntegral;Lscala/BigInt;Lscala/BigInt;)Lscala/BigInt;
const #208 = Method	#42.#207;	//  scala/Numeric$BigIntIsIntegral$class.minus:(Lscala/Numeric$BigIntIsIntegral;Lscala/BigInt;Lscala/BigInt;)Lscala/BigInt;
const #209 = NameAndType	#65:#200;//  plus:(Lscala/Numeric$BigIntIsIntegral;Lscala/BigInt;Lscala/BigInt;)Lscala/BigInt;
const #210 = Method	#42.#209;	//  scala/Numeric$BigIntIsIntegral$class.plus:(Lscala/Numeric$BigIntIsIntegral;Lscala/BigInt;Lscala/BigInt;)Lscala/BigInt;
const #211 = Asciz	(Lscala/Ordering$BigIntOrdering;Lscala/BigInt;Lscala/BigInt;)I;
const #212 = NameAndType	#51:#211;//  compare:(Lscala/Ordering$BigIntOrdering;Lscala/BigInt;Lscala/BigInt;)I
const #213 = Method	#47.#212;	//  scala/Ordering$BigIntOrdering$class.compare:(Lscala/Ordering$BigIntOrdering;Lscala/BigInt;Lscala/BigInt;)I
const #214 = Asciz	InnerClasses;
const #215 = Asciz	scala/Numeric$Ops;
const #216 = class	#215;	//  scala/Numeric$Ops
const #217 = Asciz	scala/Numeric;
const #218 = class	#217;	//  scala/Numeric
const #219 = Asciz	Ops;
const #220 = Asciz	scala/Ordering$Ops;
const #221 = class	#220;	//  scala/Ordering$Ops
const #222 = Asciz	scala/Integral$IntegralOps;
const #223 = class	#222;	//  scala/Integral$IntegralOps
const #224 = Asciz	IntegralOps;
const #225 = Asciz	BigIntOrdering;
const #226 = Asciz	BigIntIsIntegral;
const #227 = Asciz	scala/ScalaObject;
const #228 = class	#227;	//  scala/ScalaObject

{
public static final scala.Numeric$BigIntIsIntegral$ MODULE$;

public static {};
  Code:
   Stack=1, Locals=0, Args_size=0
   0:	new	#10; //class scala/Numeric$BigIntIsIntegral$
   3:	invokespecial	#13; //Method "<init>":()V
   6:	return

public scala.Numeric$BigIntIsIntegral$();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokespecial	#17; //Method java/lang/Object."<init>":()V
   4:	aload_0
   5:	putstatic	#19; //Field MODULE$:Lscala/Numeric$BigIntIsIntegral$;
   8:	aload_0
   9:	invokestatic	#25; //Method scala/PartialOrdering$class.$init$:(Lscala/PartialOrdering;)V
   12:	aload_0
   13:	invokestatic	#30; //Method scala/Ordering$class.$init$:(Lscala/Ordering;)V
   16:	aload_0
   17:	invokestatic	#35; //Method scala/Numeric$class.$init$:(Lscala/Numeric;)V
   20:	aload_0
   21:	invokestatic	#40; //Method scala/Integral$class.$init$:(Lscala/Integral;)V
   24:	aload_0
   25:	invokestatic	#45; //Method scala/Numeric$BigIntIsIntegral$class.$init$:(Lscala/Numeric$BigIntIsIntegral;)V
   28:	aload_0
   29:	invokestatic	#50; //Method scala/Ordering$BigIntOrdering$class.$init$:(Lscala/Ordering$BigIntOrdering;)V
   32:	return
  LineNumberTable: 
   line 17: 0


public int compare(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	checkcast	#54; //class scala/BigInt
   5:	aload_2
   6:	checkcast	#54; //class scala/BigInt
   9:	invokeinterface	#59,  3; //InterfaceMethod scala/Ordering$BigIntOrdering.compare:(Lscala/BigInt;Lscala/BigInt;)I
   14:	ireturn
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      15      0    this       Lscala/Numeric$BigIntIsIntegral$;
   0      15      1    x       Ljava/lang/Object;
   0      15      2    y       Ljava/lang/Object;


public java.lang.Object plus(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	checkcast	#54; //class scala/BigInt
   5:	aload_2
   6:	checkcast	#54; //class scala/BigInt
   9:	invokeinterface	#71,  3; //InterfaceMethod scala/Numeric$BigIntIsIntegral.plus:(Lscala/BigInt;Lscala/BigInt;)Lscala/BigInt;
   14:	areturn
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      15      0    this       Lscala/Numeric$BigIntIsIntegral$;
   0      15      1    x       Ljava/lang/Object;
   0      15      2    y       Ljava/lang/Object;


public java.lang.Object minus(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	checkcast	#54; //class scala/BigInt
   5:	aload_2
   6:	checkcast	#54; //class scala/BigInt
   9:	invokeinterface	#74,  3; //InterfaceMethod scala/Numeric$BigIntIsIntegral.minus:(Lscala/BigInt;Lscala/BigInt;)Lscala/BigInt;
   14:	areturn
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      15      0    this       Lscala/Numeric$BigIntIsIntegral$;
   0      15      1    x       Ljava/lang/Object;
   0      15      2    y       Ljava/lang/Object;


public java.lang.Object times(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	checkcast	#54; //class scala/BigInt
   5:	aload_2
   6:	checkcast	#54; //class scala/BigInt
   9:	invokeinterface	#77,  3; //InterfaceMethod scala/Numeric$BigIntIsIntegral.times:(Lscala/BigInt;Lscala/BigInt;)Lscala/BigInt;
   14:	areturn
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      15      0    this       Lscala/Numeric$BigIntIsIntegral$;
   0      15      1    x       Ljava/lang/Object;
   0      15      2    y       Ljava/lang/Object;


public java.lang.Object quot(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	checkcast	#54; //class scala/BigInt
   5:	aload_2
   6:	checkcast	#54; //class scala/BigInt
   9:	invokeinterface	#80,  3; //InterfaceMethod scala/Numeric$BigIntIsIntegral.quot:(Lscala/BigInt;Lscala/BigInt;)Lscala/BigInt;
   14:	areturn
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      15      0    this       Lscala/Numeric$BigIntIsIntegral$;
   0      15      1    x       Ljava/lang/Object;
   0      15      2    y       Ljava/lang/Object;


public java.lang.Object rem(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	checkcast	#54; //class scala/BigInt
   5:	aload_2
   6:	checkcast	#54; //class scala/BigInt
   9:	invokeinterface	#83,  3; //InterfaceMethod scala/Numeric$BigIntIsIntegral.rem:(Lscala/BigInt;Lscala/BigInt;)Lscala/BigInt;
   14:	areturn
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      15      0    this       Lscala/Numeric$BigIntIsIntegral$;
   0      15      1    x       Ljava/lang/Object;
   0      15      2    y       Ljava/lang/Object;


public java.lang.Object negate(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	checkcast	#54; //class scala/BigInt
   5:	invokeinterface	#88,  2; //InterfaceMethod scala/Numeric$BigIntIsIntegral.negate:(Lscala/BigInt;)Lscala/BigInt;
   10:	areturn
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      11      0    this       Lscala/Numeric$BigIntIsIntegral$;
   0      11      1    x       Ljava/lang/Object;


public java.lang.Object fromInt(int);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	invokeinterface	#93,  2; //InterfaceMethod scala/Numeric$BigIntIsIntegral.fromInt:(I)Lscala/BigInt;
   7:	areturn
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      8      0    this       Lscala/Numeric$BigIntIsIntegral$;
   0      8      1    x       I


public int toInt(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	checkcast	#54; //class scala/BigInt
   5:	invokeinterface	#99,  2; //InterfaceMethod scala/Numeric$BigIntIsIntegral.toInt:(Lscala/BigInt;)I
   10:	ireturn
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      11      0    this       Lscala/Numeric$BigIntIsIntegral$;
   0      11      1    x       Ljava/lang/Object;


public long toLong(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	checkcast	#54; //class scala/BigInt
   5:	invokeinterface	#104,  2; //InterfaceMethod scala/Numeric$BigIntIsIntegral.toLong:(Lscala/BigInt;)J
   10:	lreturn
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      11      0    this       Lscala/Numeric$BigIntIsIntegral$;
   0      11      1    x       Ljava/lang/Object;


public float toFloat(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	checkcast	#54; //class scala/BigInt
   5:	invokeinterface	#109,  2; //InterfaceMethod scala/Numeric$BigIntIsIntegral.toFloat:(Lscala/BigInt;)F
   10:	freturn
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      11      0    this       Lscala/Numeric$BigIntIsIntegral$;
   0      11      1    x       Ljava/lang/Object;


public double toDouble(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	checkcast	#54; //class scala/BigInt
   5:	invokeinterface	#114,  2; //InterfaceMethod scala/Numeric$BigIntIsIntegral.toDouble:(Lscala/BigInt;)D
   10:	dreturn
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      11      0    this       Lscala/Numeric$BigIntIsIntegral$;
   0      11      1    x       Ljava/lang/Object;


public scala.Numeric$Ops mkNumericOps(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokeinterface	#121,  2; //InterfaceMethod scala/Integral.mkNumericOps:(Ljava/lang/Object;)Lscala/Integral$IntegralOps;
   7:	areturn
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      8      0    this       Lscala/Numeric$BigIntIsIntegral$;
   0      8      1    lhs       Ljava/lang/Object;


public scala.PartialOrdering reverse();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokeinterface	#129,  1; //InterfaceMethod scala/Ordering.reverse:()Lscala/Ordering;
   6:	areturn
  LineNumberTable: 
   line 17: 0


public scala.Ordering$Ops mkOrderingOps(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#134; //Method scala/Ordering$class.mkOrderingOps:(Lscala/Ordering;Ljava/lang/Object;)Lscala/Ordering$Ops;
   5:	areturn
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/Numeric$BigIntIsIntegral$;
   0      6      1    lhs       Ljava/lang/Object;


public scala.Ordering reverse();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#137; //Method scala/Ordering$class.reverse:(Lscala/Ordering;)Lscala/Ordering;
   4:	areturn
  LineNumberTable: 
   line 17: 0


public java.lang.Object min(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#141; //Method scala/Ordering$class.min:(Lscala/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   6:	areturn
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/Numeric$BigIntIsIntegral$;
   0      7      1    x       Ljava/lang/Object;
   0      7      2    y       Ljava/lang/Object;


public java.lang.Object max(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#144; //Method scala/Ordering$class.max:(Lscala/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   6:	areturn
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/Numeric$BigIntIsIntegral$;
   0      7      1    x       Ljava/lang/Object;
   0      7      2    y       Ljava/lang/Object;


public boolean equiv(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#149; //Method scala/Ordering$class.equiv:(Lscala/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
   6:	ireturn
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/Numeric$BigIntIsIntegral$;
   0      7      1    x       Ljava/lang/Object;
   0      7      2    y       Ljava/lang/Object;


public boolean gt(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#152; //Method scala/Ordering$class.gt:(Lscala/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
   6:	ireturn
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/Numeric$BigIntIsIntegral$;
   0      7      1    x       Ljava/lang/Object;
   0      7      2    y       Ljava/lang/Object;


public boolean lt(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#155; //Method scala/Ordering$class.lt:(Lscala/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
   6:	ireturn
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/Numeric$BigIntIsIntegral$;
   0      7      1    x       Ljava/lang/Object;
   0      7      2    y       Ljava/lang/Object;


public boolean gteq(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#158; //Method scala/Ordering$class.gteq:(Lscala/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
   6:	ireturn
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/Numeric$BigIntIsIntegral$;
   0      7      1    x       Ljava/lang/Object;
   0      7      2    y       Ljava/lang/Object;


public boolean lteq(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#161; //Method scala/Ordering$class.lteq:(Lscala/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
   6:	ireturn
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/Numeric$BigIntIsIntegral$;
   0      7      1    x       Ljava/lang/Object;
   0      7      2    y       Ljava/lang/Object;


public int signum(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#165; //Method scala/Numeric$class.signum:(Lscala/Numeric;Ljava/lang/Object;)I
   5:	ireturn
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/Numeric$BigIntIsIntegral$;
   0      6      1    x       Ljava/lang/Object;


public java.lang.Object abs(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#169; //Method scala/Numeric$class.abs:(Lscala/Numeric;Ljava/lang/Object;)Ljava/lang/Object;
   5:	areturn
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/Numeric$BigIntIsIntegral$;
   0      6      1    x       Ljava/lang/Object;


public java.lang.Object one();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#174; //Method scala/Numeric$class.one:(Lscala/Numeric;)Ljava/lang/Object;
   4:	areturn
  LineNumberTable: 
   line 17: 0


public java.lang.Object zero();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#177; //Method scala/Numeric$class.zero:(Lscala/Numeric;)Ljava/lang/Object;
   4:	areturn
  LineNumberTable: 
   line 17: 0


public scala.Integral$IntegralOps mkNumericOps(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#180; //Method scala/Integral$class.mkNumericOps:(Lscala/Integral;Ljava/lang/Object;)Lscala/Integral$IntegralOps;
   5:	areturn
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/Numeric$BigIntIsIntegral$;
   0      6      1    lhs       Ljava/lang/Object;


public double toDouble(scala.BigInt);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#183; //Method scala/Numeric$BigIntIsIntegral$class.toDouble:(Lscala/Numeric$BigIntIsIntegral;Lscala/BigInt;)D
   5:	dreturn
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/Numeric$BigIntIsIntegral$;
   0      6      1    x       Lscala/BigInt;


public float toFloat(scala.BigInt);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#187; //Method scala/Numeric$BigIntIsIntegral$class.toFloat:(Lscala/Numeric$BigIntIsIntegral;Lscala/BigInt;)F
   5:	freturn
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/Numeric$BigIntIsIntegral$;
   0      6      1    x       Lscala/BigInt;


public long toLong(scala.BigInt);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#190; //Method scala/Numeric$BigIntIsIntegral$class.toLong:(Lscala/Numeric$BigIntIsIntegral;Lscala/BigInt;)J
   5:	lreturn
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/Numeric$BigIntIsIntegral$;
   0      6      1    x       Lscala/BigInt;


public int toInt(scala.BigInt);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#193; //Method scala/Numeric$BigIntIsIntegral$class.toInt:(Lscala/Numeric$BigIntIsIntegral;Lscala/BigInt;)I
   5:	ireturn
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/Numeric$BigIntIsIntegral$;
   0      6      1    x       Lscala/BigInt;


public scala.BigInt fromInt(int);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	invokestatic	#196; //Method scala/Numeric$BigIntIsIntegral$class.fromInt:(Lscala/Numeric$BigIntIsIntegral;I)Lscala/BigInt;
   5:	areturn
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/Numeric$BigIntIsIntegral$;
   0      6      1    x       I


public scala.BigInt negate(scala.BigInt);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#199; //Method scala/Numeric$BigIntIsIntegral$class.negate:(Lscala/Numeric$BigIntIsIntegral;Lscala/BigInt;)Lscala/BigInt;
   5:	areturn
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/Numeric$BigIntIsIntegral$;
   0      6      1    x       Lscala/BigInt;


public scala.BigInt rem(scala.BigInt, scala.BigInt);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#202; //Method scala/Numeric$BigIntIsIntegral$class.rem:(Lscala/Numeric$BigIntIsIntegral;Lscala/BigInt;Lscala/BigInt;)Lscala/BigInt;
   6:	areturn
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/Numeric$BigIntIsIntegral$;
   0      7      1    x       Lscala/BigInt;
   0      7      2    y       Lscala/BigInt;


public scala.BigInt quot(scala.BigInt, scala.BigInt);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#204; //Method scala/Numeric$BigIntIsIntegral$class.quot:(Lscala/Numeric$BigIntIsIntegral;Lscala/BigInt;Lscala/BigInt;)Lscala/BigInt;
   6:	areturn
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/Numeric$BigIntIsIntegral$;
   0      7      1    x       Lscala/BigInt;
   0      7      2    y       Lscala/BigInt;


public scala.BigInt times(scala.BigInt, scala.BigInt);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#206; //Method scala/Numeric$BigIntIsIntegral$class.times:(Lscala/Numeric$BigIntIsIntegral;Lscala/BigInt;Lscala/BigInt;)Lscala/BigInt;
   6:	areturn
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/Numeric$BigIntIsIntegral$;
   0      7      1    x       Lscala/BigInt;
   0      7      2    y       Lscala/BigInt;


public scala.BigInt minus(scala.BigInt, scala.BigInt);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#208; //Method scala/Numeric$BigIntIsIntegral$class.minus:(Lscala/Numeric$BigIntIsIntegral;Lscala/BigInt;Lscala/BigInt;)Lscala/BigInt;
   6:	areturn
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/Numeric$BigIntIsIntegral$;
   0      7      1    x       Lscala/BigInt;
   0      7      2    y       Lscala/BigInt;


public scala.BigInt plus(scala.BigInt, scala.BigInt);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#210; //Method scala/Numeric$BigIntIsIntegral$class.plus:(Lscala/Numeric$BigIntIsIntegral;Lscala/BigInt;Lscala/BigInt;)Lscala/BigInt;
   6:	areturn
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/Numeric$BigIntIsIntegral$;
   0      7      1    x       Lscala/BigInt;
   0      7      2    y       Lscala/BigInt;


public int compare(scala.BigInt, scala.BigInt);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#213; //Method scala/Ordering$BigIntOrdering$class.compare:(Lscala/Ordering$BigIntOrdering;Lscala/BigInt;Lscala/BigInt;)I
   6:	ireturn
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/Numeric$BigIntIsIntegral$;
   0      7      1    x       Lscala/BigInt;
   0      7      2    y       Lscala/BigInt;


}

