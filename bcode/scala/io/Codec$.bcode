Compiled from "Codec.scala"
public final class scala.io.Codec$ extends java.lang.Object implements scala.ScalaObject
  SourceFile: "Codec.scala"
  Scala: length = 0x
   
  InnerClass: 
   public final #123= #105 of #111; //$anon$1=class scala/io/Codec$$anon$1 of class scala/io/Codec
   public final #126= #125 of #111; //$anonfun$1=class scala/io/Codec$$anonfun$1 of class scala/io/Codec
   public final #129= #128 of #111; //$anonfun$decoder$3=class scala/io/Codec$$anonfun$decoder$3 of class scala/io/Codec
   public final #132= #131 of #111; //$anonfun$decoder$2=class scala/io/Codec$$anonfun$decoder$2 of class scala/io/Codec
   public final #135= #134 of #111; //$anonfun$decoder$1=class scala/io/Codec$$anonfun$decoder$1 of class scala/io/Codec
   public final #138= #137 of #111; //$anonfun$encoder$3=class scala/io/Codec$$anonfun$encoder$3 of class scala/io/Codec
   public final #141= #140 of #111; //$anonfun$encoder$2=class scala/io/Codec$$anonfun$encoder$2 of class scala/io/Codec
   public final #144= #143 of #111; //$anonfun$encoder$1=class scala/io/Codec$$anonfun$encoder$1 of class scala/io/Codec
   public final #147= #146 of #111; //$anonfun$applyFunctions$1=class scala/io/Codec$$anonfun$applyFunctions$1 of class scala/io/Codec
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Codec.scala;
const #3 = Asciz	Scala;
const #4 = Asciz	MODULE$;
const #5 = Asciz	Lscala/io/Codec$;;
const #6 = Asciz	<clinit>;
const #7 = Asciz	()V;
const #8 = Asciz	Code;
const #9 = Asciz	scala/io/Codec$;
const #10 = class	#9;	//  scala/io/Codec$
const #11 = Asciz	<init>;
const #12 = NameAndType	#11:#7;//  "<init>":()V
const #13 = Method	#10.#12;	//  scala/io/Codec$."<init>":()V
const #14 = Asciz	UTF8;
const #15 = Asciz	Ljava/nio/charset/Charset;;
const #16 = Asciz	ISO8859;
const #17 = Asciz	LineNumberTable;
const #18 = Asciz	java/lang/Object;
const #19 = class	#18;	//  java/lang/Object
const #20 = Method	#19.#12;	//  java/lang/Object."<init>":()V
const #21 = NameAndType	#4:#5;//  MODULE$:Lscala/io/Codec$;
const #22 = Field	#10.#21;	//  scala/io/Codec$.MODULE$:Lscala/io/Codec$;
const #23 = Asciz	ISO-8859-1;
const #24 = String	#23;	//  ISO-8859-1
const #25 = Asciz	java/nio/charset/Charset;
const #26 = class	#25;	//  java/nio/charset/Charset
const #27 = Asciz	forName;
const #28 = Asciz	(Ljava/lang/String;)Ljava/nio/charset/Charset;;
const #29 = NameAndType	#27:#28;//  forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
const #30 = Method	#26.#29;	//  java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
const #31 = NameAndType	#16:#15;//  ISO8859:Ljava/nio/charset/Charset;
const #32 = Field	#10.#31;	//  scala/io/Codec$.ISO8859:Ljava/nio/charset/Charset;
const #33 = Asciz	UTF-8;
const #34 = String	#33;	//  UTF-8
const #35 = NameAndType	#14:#15;//  UTF8:Ljava/nio/charset/Charset;
const #36 = Field	#10.#35;	//  scala/io/Codec$.UTF8:Ljava/nio/charset/Charset;
const #37 = Asciz	decoder2codec;
const #38 = Asciz	(Ljava/nio/charset/CharsetDecoder;)Lscala/io/Codec;;
const #39 = Asciz	apply;
const #40 = NameAndType	#39:#38;//  apply:(Ljava/nio/charset/CharsetDecoder;)Lscala/io/Codec;
const #41 = Method	#10.#40;	//  scala/io/Codec$.apply:(Ljava/nio/charset/CharsetDecoder;)Lscala/io/Codec;
const #42 = Asciz	this;
const #43 = Asciz	cd;
const #44 = Asciz	Ljava/nio/charset/CharsetDecoder;;
const #45 = Asciz	LocalVariableTable;
const #46 = Asciz	charset2codec;
const #47 = Asciz	(Ljava/nio/charset/Charset;)Lscala/io/Codec;;
const #48 = NameAndType	#39:#47;//  apply:(Ljava/nio/charset/Charset;)Lscala/io/Codec;
const #49 = Method	#10.#48;	//  scala/io/Codec$.apply:(Ljava/nio/charset/Charset;)Lscala/io/Codec;
const #50 = Asciz	c;
const #51 = Asciz	string2codec;
const #52 = Asciz	(Ljava/lang/String;)Lscala/io/Codec;;
const #53 = NameAndType	#39:#52;//  apply:(Ljava/lang/String;)Lscala/io/Codec;
const #54 = Method	#10.#53;	//  scala/io/Codec$.apply:(Ljava/lang/String;)Lscala/io/Codec;
const #55 = Asciz	s;
const #56 = Asciz	Ljava/lang/String;;
const #57 = Asciz	fromUTF8;
const #58 = Asciz	(Ljava/lang/CharSequence;)[B;
const #59 = Asciz	java/nio/CharBuffer;
const #60 = class	#59;	//  java/nio/CharBuffer
const #61 = Asciz	wrap;
const #62 = Asciz	(Ljava/lang/CharSequence;)Ljava/nio/CharBuffer;;
const #63 = NameAndType	#61:#62;//  wrap:(Ljava/lang/CharSequence;)Ljava/nio/CharBuffer;
const #64 = Method	#60.#63;	//  java/nio/CharBuffer.wrap:(Ljava/lang/CharSequence;)Ljava/nio/CharBuffer;
const #65 = Asciz	()Ljava/nio/charset/Charset;;
const #66 = NameAndType	#14:#65;//  UTF8:()Ljava/nio/charset/Charset;
const #67 = Method	#10.#66;	//  scala/io/Codec$.UTF8:()Ljava/nio/charset/Charset;
const #68 = Asciz	encode;
const #69 = Asciz	(Ljava/nio/CharBuffer;)Ljava/nio/ByteBuffer;;
const #70 = NameAndType	#68:#69;//  encode:(Ljava/nio/CharBuffer;)Ljava/nio/ByteBuffer;
const #71 = Method	#26.#70;	//  java/nio/charset/Charset.encode:(Ljava/nio/CharBuffer;)Ljava/nio/ByteBuffer;
const #72 = Asciz	java/nio/ByteBuffer;
const #73 = class	#72;	//  java/nio/ByteBuffer
const #74 = Asciz	remaining;
const #75 = Asciz	()I;
const #76 = NameAndType	#74:#75;//  remaining:()I
const #77 = Method	#73.#76;	//  java/nio/ByteBuffer.remaining:()I
const #78 = Asciz	get;
const #79 = Asciz	([B)Ljava/nio/ByteBuffer;;
const #80 = NameAndType	#78:#79;//  get:([B)Ljava/nio/ByteBuffer;
const #81 = Method	#73.#80;	//  java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
const #82 = Asciz	cs;
const #83 = Asciz	Ljava/lang/CharSequence;;
const #84 = Asciz	cbuffer;
const #85 = Asciz	Ljava/nio/CharBuffer;;
const #86 = Asciz	bbuffer;
const #87 = Asciz	Ljava/nio/ByteBuffer;;
const #88 = Asciz	bytes;
const #89 = Asciz	[B;
const #90 = Asciz	toUTF8;
const #91 = Asciz	([B)[C;
const #92 = NameAndType	#61:#79;//  wrap:([B)Ljava/nio/ByteBuffer;
const #93 = Method	#73.#92;	//  java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
const #94 = Asciz	decode;
const #95 = Asciz	(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;;
const #96 = NameAndType	#94:#95;//  decode:(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;
const #97 = Method	#26.#96;	//  java/nio/charset/Charset.decode:(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;
const #98 = Method	#60.#76;	//  java/nio/CharBuffer.remaining:()I
const #99 = Asciz	([C)Ljava/nio/CharBuffer;;
const #100 = NameAndType	#78:#99;//  get:([C)Ljava/nio/CharBuffer;
const #101 = Method	#60.#100;	//  java/nio/CharBuffer.get:([C)Ljava/nio/CharBuffer;
const #102 = Asciz	chars;
const #103 = Asciz	[C;
const #104 = Asciz	scala/io/Codec$$anon$1;
const #105 = class	#104;	//  scala/io/Codec$$anon$1
const #106 = Asciz	(Ljava/nio/charset/CharsetDecoder;Ljava/nio/charset/CharsetDecoder;)V;
const #107 = NameAndType	#11:#106;//  "<init>":(Ljava/nio/charset/CharsetDecoder;Ljava/nio/charset/CharsetDecoder;)V
const #108 = Method	#105.#107;	//  scala/io/Codec$$anon$1."<init>":(Ljava/nio/charset/CharsetDecoder;Ljava/nio/charset/CharsetDecoder;)V
const #109 = Asciz	decoder$1;
const #110 = Asciz	scala/io/Codec;
const #111 = class	#110;	//  scala/io/Codec
const #112 = Asciz	(Ljava/nio/charset/Charset;)V;
const #113 = NameAndType	#11:#112;//  "<init>":(Ljava/nio/charset/Charset;)V
const #114 = Method	#111.#113;	//  scala/io/Codec."<init>":(Ljava/nio/charset/Charset;)V
const #115 = Asciz	charSet;
const #116 = Asciz	encoding;
const #117 = Asciz	default;
const #118 = Asciz	()Lscala/io/Codec;;
const #119 = Asciz	defaultCharset;
const #120 = NameAndType	#119:#65;//  defaultCharset:()Ljava/nio/charset/Charset;
const #121 = Method	#26.#120;	//  java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
const #122 = Asciz	InnerClasses;
const #123 = Asciz	$anon$1;
const #124 = Asciz	scala/io/Codec$$anonfun$1;
const #125 = class	#124;	//  scala/io/Codec$$anonfun$1
const #126 = Asciz	$anonfun$1;
const #127 = Asciz	scala/io/Codec$$anonfun$decoder$3;
const #128 = class	#127;	//  scala/io/Codec$$anonfun$decoder$3
const #129 = Asciz	$anonfun$decoder$3;
const #130 = Asciz	scala/io/Codec$$anonfun$decoder$2;
const #131 = class	#130;	//  scala/io/Codec$$anonfun$decoder$2
const #132 = Asciz	$anonfun$decoder$2;
const #133 = Asciz	scala/io/Codec$$anonfun$decoder$1;
const #134 = class	#133;	//  scala/io/Codec$$anonfun$decoder$1
const #135 = Asciz	$anonfun$decoder$1;
const #136 = Asciz	scala/io/Codec$$anonfun$encoder$3;
const #137 = class	#136;	//  scala/io/Codec$$anonfun$encoder$3
const #138 = Asciz	$anonfun$encoder$3;
const #139 = Asciz	scala/io/Codec$$anonfun$encoder$2;
const #140 = class	#139;	//  scala/io/Codec$$anonfun$encoder$2
const #141 = Asciz	$anonfun$encoder$2;
const #142 = Asciz	scala/io/Codec$$anonfun$encoder$1;
const #143 = class	#142;	//  scala/io/Codec$$anonfun$encoder$1
const #144 = Asciz	$anonfun$encoder$1;
const #145 = Asciz	scala/io/Codec$$anonfun$applyFunctions$1;
const #146 = class	#145;	//  scala/io/Codec$$anonfun$applyFunctions$1
const #147 = Asciz	$anonfun$applyFunctions$1;
const #148 = Asciz	scala/ScalaObject;
const #149 = class	#148;	//  scala/ScalaObject

{
public static final scala.io.Codec$ MODULE$;

public static {};
  Code:
   Stack=1, Locals=0, Args_size=0
   0:	new	#10; //class scala/io/Codec$
   3:	invokespecial	#13; //Method "<init>":()V
   6:	return

public scala.io.Codec decoder2codec(java.nio.charset.CharsetDecoder);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokevirtual	#41; //Method apply:(Ljava/nio/charset/CharsetDecoder;)Lscala/io/Codec;
   5:	areturn
  LineNumberTable: 
   line 106: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/io/Codec$;
   0      6      1    cd       Ljava/nio/charset/CharsetDecoder;


public scala.io.Codec charset2codec(java.nio.charset.Charset);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokevirtual	#49; //Method apply:(Ljava/nio/charset/Charset;)Lscala/io/Codec;
   5:	areturn
  LineNumberTable: 
   line 105: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/io/Codec$;
   0      6      1    c       Ljava/nio/charset/Charset;


public scala.io.Codec string2codec(java.lang.String);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokevirtual	#54; //Method apply:(Ljava/lang/String;)Lscala/io/Codec;
   5:	areturn
  LineNumberTable: 
   line 104: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/io/Codec$;
   0      6      1    s       Ljava/lang/String;


public byte[] fromUTF8(java.lang.CharSequence);
  Code:
   Stack=2, Locals=5, Args_size=2
   0:	aload_1
   1:	invokestatic	#64; //Method java/nio/CharBuffer.wrap:(Ljava/lang/CharSequence;)Ljava/nio/CharBuffer;
   4:	astore_2
   5:	aload_0
   6:	invokevirtual	#67; //Method UTF8:()Ljava/nio/charset/Charset;
   9:	aload_2
   10:	invokevirtual	#71; //Method java/nio/charset/Charset.encode:(Ljava/nio/CharBuffer;)Ljava/nio/ByteBuffer;
   13:	astore_3
   14:	aload_3
   15:	invokevirtual	#77; //Method java/nio/ByteBuffer.remaining:()I
   18:	newarray byte
   20:	astore	4
   22:	aload_3
   23:	aload	4
   25:	invokevirtual	#81; //Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
   28:	pop
   29:	aload	4
   31:	areturn
  LineNumberTable: 
   line 96: 0
   line 97: 5
   line 98: 14
   line 99: 22
   line 101: 29

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      32      0    this       Lscala/io/Codec$;
   0      32      1    cs       Ljava/lang/CharSequence;
   5      26      2    cbuffer       Ljava/nio/CharBuffer;
   14      17      3    bbuffer       Ljava/nio/ByteBuffer;
   22      9      4    bytes       [B


public char[] toUTF8(byte[]);
  Code:
   Stack=2, Locals=5, Args_size=2
   0:	aload_1
   1:	invokestatic	#93; //Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
   4:	astore_2
   5:	aload_0
   6:	invokevirtual	#67; //Method UTF8:()Ljava/nio/charset/Charset;
   9:	aload_2
   10:	invokevirtual	#97; //Method java/nio/charset/Charset.decode:(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;
   13:	astore_3
   14:	aload_3
   15:	invokevirtual	#98; //Method java/nio/CharBuffer.remaining:()I
   18:	newarray char
   20:	astore	4
   22:	aload_3
   23:	aload	4
   25:	invokevirtual	#101; //Method java/nio/CharBuffer.get:([C)Ljava/nio/CharBuffer;
   28:	pop
   29:	aload	4
   31:	areturn
  LineNumberTable: 
   line 87: 0
   line 88: 5
   line 89: 14
   line 90: 22
   line 92: 29

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      32      0    this       Lscala/io/Codec$;
   0      32      1    bytes       [B
   5      26      2    bbuffer       Ljava/nio/ByteBuffer;
   14      17      3    cbuffer       Ljava/nio/CharBuffer;
   22      9      4    chars       [C


public scala.io.Codec apply(java.nio.charset.CharsetDecoder);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#105; //class scala/io/Codec$$anon$1
   3:	dup
   4:	aload_1
   5:	aload_1
   6:	invokespecial	#108; //Method scala/io/Codec$$anon$1."<init>":(Ljava/nio/charset/CharsetDecoder;Ljava/nio/charset/CharsetDecoder;)V
   9:	areturn
  LineNumberTable: 
   line 83: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    this       Lscala/io/Codec$;
   0      10      1    decoder$1       Ljava/nio/charset/CharsetDecoder;


public scala.io.Codec apply(java.nio.charset.Charset);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	new	#111; //class scala/io/Codec
   3:	dup
   4:	aload_1
   5:	invokespecial	#114; //Method scala/io/Codec."<init>":(Ljava/nio/charset/Charset;)V
   8:	areturn
  LineNumberTable: 
   line 80: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/io/Codec$;
   0      9      1    charSet       Ljava/nio/charset/Charset;


public scala.io.Codec apply(java.lang.String);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	new	#111; //class scala/io/Codec
   3:	dup
   4:	aload_1
   5:	invokestatic	#30; //Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
   8:	invokespecial	#114; //Method scala/io/Codec."<init>":(Ljava/nio/charset/Charset;)V
   11:	areturn
  LineNumberTable: 
   line 79: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      12      0    this       Lscala/io/Codec$;
   0      12      1    encoding       Ljava/lang/String;


public scala.io.Codec default();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#121; //Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
   4:	invokevirtual	#49; //Method apply:(Ljava/nio/charset/Charset;)Lscala/io/Codec;
   7:	areturn
  LineNumberTable: 
   line 78: 0


public final java.nio.charset.Charset UTF8();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#36; //Field UTF8:Ljava/nio/charset/Charset;
   4:	areturn
  LineNumberTable: 
   line 76: 0


public final java.nio.charset.Charset ISO8859();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#32; //Field ISO8859:Ljava/nio/charset/Charset;
   4:	areturn
  LineNumberTable: 
   line 75: 0


}

