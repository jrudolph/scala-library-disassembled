Compiled from "Codec.scala"
public final class scala.io.Codec$ extends java.lang.Object implements scala.ScalaObject
  SourceFile: "Codec.scala"
  Scala: length = 0x
   
  InnerClass: 
   public final $anon$1=class scala/io/Codec$$anon$1 of class scala/io/Codec
   public final $anonfun$1=class scala/io/Codec$$anonfun$1 of class scala/io/Codec
   public final $anonfun$decoder$3=class scala/io/Codec$$anonfun$decoder$3 of class scala/io/Codec
   public final $anonfun$decoder$2=class scala/io/Codec$$anonfun$decoder$2 of class scala/io/Codec
   public final $anonfun$decoder$1=class scala/io/Codec$$anonfun$decoder$1 of class scala/io/Codec
   public final $anonfun$encoder$3=class scala/io/Codec$$anonfun$encoder$3 of class scala/io/Codec
   public final $anonfun$encoder$2=class scala/io/Codec$$anonfun$encoder$2 of class scala/io/Codec
   public final $anonfun$encoder$1=class scala/io/Codec$$anonfun$encoder$1 of class scala/io/Codec
   public final $anonfun$applyFunctions$1=class scala/io/Codec$$anonfun$applyFunctions$1 of class scala/io/Codec
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	Codec.scala;
Asciz	Scala;
Asciz	MODULE$;
Asciz	Lscala/io/Codec$;;
Asciz	<clinit>;
Asciz	()V;
Asciz	Code;
Asciz	scala/io/Codec$;
class	scala/io/Codec$
Asciz	<init>;
NameAndType	"<init>":()V
Method	scala/io/Codec$."<init>":()V
Asciz	UTF8;
Asciz	Ljava/nio/charset/Charset;;
Asciz	ISO8859;
Asciz	LineNumberTable;
Asciz	java/lang/Object;
class	java/lang/Object
Method	java/lang/Object."<init>":()V
NameAndType	MODULE$:Lscala/io/Codec$;
Field	scala/io/Codec$.MODULE$:Lscala/io/Codec$;
Asciz	ISO-8859-1;
String	ISO-8859-1
Asciz	java/nio/charset/Charset;
class	java/nio/charset/Charset
Asciz	forName;
Asciz	(Ljava/lang/String;)Ljava/nio/charset/Charset;;
NameAndType	forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
Method	java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
NameAndType	ISO8859:Ljava/nio/charset/Charset;
Field	scala/io/Codec$.ISO8859:Ljava/nio/charset/Charset;
Asciz	UTF-8;
String	UTF-8
NameAndType	UTF8:Ljava/nio/charset/Charset;
Field	scala/io/Codec$.UTF8:Ljava/nio/charset/Charset;
Asciz	decoder2codec;
Asciz	(Ljava/nio/charset/CharsetDecoder;)Lscala/io/Codec;;
Asciz	apply;
NameAndType	apply:(Ljava/nio/charset/CharsetDecoder;)Lscala/io/Codec;
Method	scala/io/Codec$.apply:(Ljava/nio/charset/CharsetDecoder;)Lscala/io/Codec;
Asciz	this;
Asciz	cd;
Asciz	Ljava/nio/charset/CharsetDecoder;;
Asciz	LocalVariableTable;
Asciz	charset2codec;
Asciz	(Ljava/nio/charset/Charset;)Lscala/io/Codec;;
NameAndType	apply:(Ljava/nio/charset/Charset;)Lscala/io/Codec;
Method	scala/io/Codec$.apply:(Ljava/nio/charset/Charset;)Lscala/io/Codec;
Asciz	c;
Asciz	string2codec;
Asciz	(Ljava/lang/String;)Lscala/io/Codec;;
NameAndType	apply:(Ljava/lang/String;)Lscala/io/Codec;
Method	scala/io/Codec$.apply:(Ljava/lang/String;)Lscala/io/Codec;
Asciz	s;
Asciz	Ljava/lang/String;;
Asciz	fromUTF8;
Asciz	(Ljava/lang/CharSequence;)[B;
Asciz	java/nio/CharBuffer;
class	java/nio/CharBuffer
Asciz	wrap;
Asciz	(Ljava/lang/CharSequence;)Ljava/nio/CharBuffer;;
NameAndType	wrap:(Ljava/lang/CharSequence;)Ljava/nio/CharBuffer;
Method	java/nio/CharBuffer.wrap:(Ljava/lang/CharSequence;)Ljava/nio/CharBuffer;
Asciz	()Ljava/nio/charset/Charset;;
NameAndType	UTF8:()Ljava/nio/charset/Charset;
Method	scala/io/Codec$.UTF8:()Ljava/nio/charset/Charset;
Asciz	encode;
Asciz	(Ljava/nio/CharBuffer;)Ljava/nio/ByteBuffer;;
NameAndType	encode:(Ljava/nio/CharBuffer;)Ljava/nio/ByteBuffer;
Method	java/nio/charset/Charset.encode:(Ljava/nio/CharBuffer;)Ljava/nio/ByteBuffer;
Asciz	java/nio/ByteBuffer;
class	java/nio/ByteBuffer
Asciz	remaining;
Asciz	()I;
NameAndType	remaining:()I
Method	java/nio/ByteBuffer.remaining:()I
Asciz	get;
Asciz	([B)Ljava/nio/ByteBuffer;;
NameAndType	get:([B)Ljava/nio/ByteBuffer;
Method	java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
Asciz	cs;
Asciz	Ljava/lang/CharSequence;;
Asciz	cbuffer;
Asciz	Ljava/nio/CharBuffer;;
Asciz	bbuffer;
Asciz	Ljava/nio/ByteBuffer;;
Asciz	bytes;
Asciz	[B;
Asciz	toUTF8;
Asciz	([B)[C;
NameAndType	wrap:([B)Ljava/nio/ByteBuffer;
Method	java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
Asciz	decode;
Asciz	(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;;
NameAndType	decode:(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;
Method	java/nio/charset/Charset.decode:(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;
Method	java/nio/CharBuffer.remaining:()I
Asciz	([C)Ljava/nio/CharBuffer;;
NameAndType	get:([C)Ljava/nio/CharBuffer;
Method	java/nio/CharBuffer.get:([C)Ljava/nio/CharBuffer;
Asciz	chars;
Asciz	[C;
Asciz	scala/io/Codec$$anon$1;
class	scala/io/Codec$$anon$1
Asciz	(Ljava/nio/charset/CharsetDecoder;Ljava/nio/charset/CharsetDecoder;)V;
NameAndType	"<init>":(Ljava/nio/charset/CharsetDecoder;Ljava/nio/charset/CharsetDecoder;)V
Method	scala/io/Codec$$anon$1."<init>":(Ljava/nio/charset/CharsetDecoder;Ljava/nio/charset/CharsetDecoder;)V
Asciz	decoder$1;
Asciz	scala/io/Codec;
class	scala/io/Codec
Asciz	(Ljava/nio/charset/Charset;)V;
NameAndType	"<init>":(Ljava/nio/charset/Charset;)V
Method	scala/io/Codec."<init>":(Ljava/nio/charset/Charset;)V
Asciz	charSet;
Asciz	encoding;
Asciz	default;
Asciz	()Lscala/io/Codec;;
Asciz	defaultCharset;
NameAndType	defaultCharset:()Ljava/nio/charset/Charset;
Method	java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
Asciz	InnerClasses;
Asciz	$anon$1;
Asciz	scala/io/Codec$$anonfun$1;
class	scala/io/Codec$$anonfun$1
Asciz	$anonfun$1;
Asciz	scala/io/Codec$$anonfun$decoder$3;
class	scala/io/Codec$$anonfun$decoder$3
Asciz	$anonfun$decoder$3;
Asciz	scala/io/Codec$$anonfun$decoder$2;
class	scala/io/Codec$$anonfun$decoder$2
Asciz	$anonfun$decoder$2;
Asciz	scala/io/Codec$$anonfun$decoder$1;
class	scala/io/Codec$$anonfun$decoder$1
Asciz	$anonfun$decoder$1;
Asciz	scala/io/Codec$$anonfun$encoder$3;
class	scala/io/Codec$$anonfun$encoder$3
Asciz	$anonfun$encoder$3;
Asciz	scala/io/Codec$$anonfun$encoder$2;
class	scala/io/Codec$$anonfun$encoder$2
Asciz	$anonfun$encoder$2;
Asciz	scala/io/Codec$$anonfun$encoder$1;
class	scala/io/Codec$$anonfun$encoder$1
Asciz	$anonfun$encoder$1;
Asciz	scala/io/Codec$$anonfun$applyFunctions$1;
class	scala/io/Codec$$anonfun$applyFunctions$1
Asciz	$anonfun$applyFunctions$1;
Asciz	scala/ScalaObject;
class	scala/ScalaObject

{
public static final scala.io.Codec$ MODULE$;
  Signature: Lscala/io/Codec$;

private final java.nio.charset.Charset UTF8;
  Signature: Ljava/nio/charset/Charset;

private final java.nio.charset.Charset ISO8859;
  Signature: Ljava/nio/charset/Charset;

public static {};
  Signature: ()V
  Code:
   Stack=1, Locals=0, Args_size=0
	new	class scala/io/Codec$
	invokespecial	Method "<init>":()V
	return
  Labels:

private scala.io.Codec$();
  Signature: ()V
  Code:
   Stack=2, Locals=1, Args_size=1
	aload_0
	invokespecial	Method java/lang/Object."<init>":()V
	aload_0
	putstatic	Field MODULE$:Lscala/io/Codec$;
	aload_0
	ldc	String ISO-8859-1
	invokestatic	Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
	putfield	Field ISO8859:Ljava/nio/charset/Charset;
	aload_0
	ldc	String UTF-8
	invokestatic	Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
	putfield	Field UTF8:Ljava/nio/charset/Charset;
	return
  Labels:

public scala.io.Codec decoder2codec(java.nio.charset.CharsetDecoder);
  Signature: (Ljava/nio/charset/CharsetDecoder;)Lscala/io/Codec;
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokevirtual	Method apply:(Ljava/nio/charset/CharsetDecoder;)Lscala/io/Codec;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/io/Codec$;
   0      6      1    cd       Ljava/nio/charset/CharsetDecoder;


public scala.io.Codec charset2codec(java.nio.charset.Charset);
  Signature: (Ljava/nio/charset/Charset;)Lscala/io/Codec;
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokevirtual	Method apply:(Ljava/nio/charset/Charset;)Lscala/io/Codec;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/io/Codec$;
   0      6      1    c       Ljava/nio/charset/Charset;


public scala.io.Codec string2codec(java.lang.String);
  Signature: (Ljava/lang/String;)Lscala/io/Codec;
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokevirtual	Method apply:(Ljava/lang/String;)Lscala/io/Codec;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/io/Codec$;
   0      6      1    s       Ljava/lang/String;


public byte[] fromUTF8(java.lang.CharSequence);
  Signature: (Ljava/lang/CharSequence;)[B
  Code:
   Stack=2, Locals=5, Args_size=2
	aload_1
	invokestatic	Method java/nio/CharBuffer.wrap:(Ljava/lang/CharSequence;)Ljava/nio/CharBuffer;
	astore_2
	aload_0
	invokevirtual	Method UTF8:()Ljava/nio/charset/Charset;
	aload_2
	invokevirtual	Method java/nio/charset/Charset.encode:(Ljava/nio/CharBuffer;)Ljava/nio/ByteBuffer;
	astore_3
	aload_3
	invokevirtual	Method java/nio/ByteBuffer.remaining:()I
	newarray byte
	astore	4
	aload_3
	aload	4
	invokevirtual	Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
	pop
	aload	4
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      32      0    this       Lscala/io/Codec$;
   0      32      1    cs       Ljava/lang/CharSequence;
   5      26      2    cbuffer       Ljava/nio/CharBuffer;
   14      17      3    bbuffer       Ljava/nio/ByteBuffer;
   22      9      4    bytes       [B


public char[] toUTF8(byte[]);
  Signature: ([B)[C
  Code:
   Stack=2, Locals=5, Args_size=2
	aload_1
	invokestatic	Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
	astore_2
	aload_0
	invokevirtual	Method UTF8:()Ljava/nio/charset/Charset;
	aload_2
	invokevirtual	Method java/nio/charset/Charset.decode:(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;
	astore_3
	aload_3
	invokevirtual	Method java/nio/CharBuffer.remaining:()I
	newarray char
	astore	4
	aload_3
	aload	4
	invokevirtual	Method java/nio/CharBuffer.get:([C)Ljava/nio/CharBuffer;
	pop
	aload	4
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      32      0    this       Lscala/io/Codec$;
   0      32      1    bytes       [B
   5      26      2    bbuffer       Ljava/nio/ByteBuffer;
   14      17      3    cbuffer       Ljava/nio/CharBuffer;
   22      9      4    chars       [C


public scala.io.Codec apply(java.nio.charset.CharsetDecoder);
  Signature: (Ljava/nio/charset/CharsetDecoder;)Lscala/io/Codec;
  Code:
   Stack=4, Locals=2, Args_size=2
	new	class scala/io/Codec$$anon$1
	dup
	aload_1
	aload_1
	invokespecial	Method scala/io/Codec$$anon$1."<init>":(Ljava/nio/charset/CharsetDecoder;Ljava/nio/charset/CharsetDecoder;)V
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    this       Lscala/io/Codec$;
   0      10      1    decoder$1       Ljava/nio/charset/CharsetDecoder;


public scala.io.Codec apply(java.nio.charset.Charset);
  Signature: (Ljava/nio/charset/Charset;)Lscala/io/Codec;
  Code:
   Stack=3, Locals=2, Args_size=2
	new	class scala/io/Codec
	dup
	aload_1
	invokespecial	Method scala/io/Codec."<init>":(Ljava/nio/charset/Charset;)V
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/io/Codec$;
   0      9      1    charSet       Ljava/nio/charset/Charset;


public scala.io.Codec apply(java.lang.String);
  Signature: (Ljava/lang/String;)Lscala/io/Codec;
  Code:
   Stack=3, Locals=2, Args_size=2
	new	class scala/io/Codec
	dup
	aload_1
	invokestatic	Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
	invokespecial	Method scala/io/Codec."<init>":(Ljava/nio/charset/Charset;)V
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      12      0    this       Lscala/io/Codec$;
   0      12      1    encoding       Ljava/lang/String;


public scala.io.Codec default();
  Signature: ()Lscala/io/Codec;
  Code:
   Stack=2, Locals=1, Args_size=1
	aload_0
	invokestatic	Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
	invokevirtual	Method apply:(Ljava/nio/charset/Charset;)Lscala/io/Codec;
	areturn
  Labels:

public final java.nio.charset.Charset UTF8();
  Signature: ()Ljava/nio/charset/Charset;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field UTF8:Ljava/nio/charset/Charset;
	areturn
  Labels:

public final java.nio.charset.Charset ISO8859();
  Signature: ()Ljava/nio/charset/Charset;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field ISO8859:Ljava/nio/charset/Charset;
	areturn
  Labels:

}

