Compiled from "Numeric.scala"
public abstract class scala.Numeric$LongIsIntegral$class extends java.lang.Object
  SourceFile: "Numeric.scala"
  Scala: length = 0x
   
  InnerClass: 
   public abstract #55= #52 of #54; //LongIsIntegral=class scala/Numeric$LongIsIntegral of class scala/Numeric
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Numeric.scala;
const #3 = Asciz	$init$;
const #4 = Asciz	(Lscala/Numeric$LongIsIntegral;)V;
const #5 = Asciz	Code;
const #6 = Asciz	LineNumberTable;
const #7 = Asciz	$this;
const #8 = Asciz	Lscala/Numeric$LongIsIntegral;;
const #9 = Asciz	LocalVariableTable;
const #10 = Asciz	toDouble;
const #11 = Asciz	(Lscala/Numeric$LongIsIntegral;J)D;
const #12 = Asciz	scala/Predef$;
const #13 = class	#12;	//  scala/Predef$
const #14 = Asciz	MODULE$;
const #15 = Asciz	Lscala/Predef$;;
const #16 = NameAndType	#14:#15;//  MODULE$:Lscala/Predef$;
const #17 = Field	#13.#16;	//  scala/Predef$.MODULE$:Lscala/Predef$;
const #18 = Asciz	long2double;
const #19 = Asciz	(J)D;
const #20 = NameAndType	#18:#19;//  long2double:(J)D
const #21 = Method	#13.#20;	//  scala/Predef$.long2double:(J)D
const #22 = Asciz	x;
const #23 = Asciz	J;
const #24 = Asciz	toFloat;
const #25 = Asciz	(Lscala/Numeric$LongIsIntegral;J)F;
const #26 = Asciz	long2float;
const #27 = Asciz	(J)F;
const #28 = NameAndType	#26:#27;//  long2float:(J)F
const #29 = Method	#13.#28;	//  scala/Predef$.long2float:(J)F
const #30 = Asciz	toLong;
const #31 = Asciz	(Lscala/Numeric$LongIsIntegral;J)J;
const #32 = Asciz	toInt;
const #33 = Asciz	(Lscala/Numeric$LongIsIntegral;J)I;
const #34 = Asciz	fromInt;
const #35 = Asciz	(Lscala/Numeric$LongIsIntegral;I)J;
const #36 = Asciz	int2long;
const #37 = Asciz	(I)J;
const #38 = NameAndType	#36:#37;//  int2long:(I)J
const #39 = Method	#13.#38;	//  scala/Predef$.int2long:(I)J
const #40 = Asciz	I;
const #41 = Asciz	negate;
const #42 = Asciz	rem;
const #43 = Asciz	(Lscala/Numeric$LongIsIntegral;JJ)J;
const #44 = Asciz	y;
const #45 = Asciz	quot;
const #46 = Asciz	times;
const #47 = Asciz	minus;
const #48 = Asciz	plus;
const #49 = Asciz	Scala;
const #50 = Asciz	InnerClasses;
const #51 = Asciz	scala/Numeric$LongIsIntegral;
const #52 = class	#51;	//  scala/Numeric$LongIsIntegral
const #53 = Asciz	scala/Numeric;
const #54 = class	#53;	//  scala/Numeric
const #55 = Asciz	LongIsIntegral;
const #56 = Asciz	scala/Numeric$LongIsIntegral$class;
const #57 = class	#56;	//  scala/Numeric$LongIsIntegral$class
const #58 = Asciz	java/lang/Object;
const #59 = class	#58;	//  java/lang/Object

{
public static void $init$(scala.Numeric$LongIsIntegral);
  Code:
   Stack=0, Locals=1, Args_size=1
   0:	return
  LineNumberTable: 
   line 34: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      1      0    $this       Lscala/Numeric$LongIsIntegral;


public static double toDouble(scala.Numeric$LongIsIntegral, long);
  Code:
   Stack=3, Locals=3, Args_size=2
   0:	getstatic	#17; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   3:	lload_1
   4:	invokevirtual	#21; //Method scala/Predef$.long2double:(J)D
   7:	dreturn
  LineNumberTable: 
   line 45: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      8      0    $this       Lscala/Numeric$LongIsIntegral;
   0      8      1    x       J


public static float toFloat(scala.Numeric$LongIsIntegral, long);
  Code:
   Stack=3, Locals=3, Args_size=2
   0:	getstatic	#17; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   3:	lload_1
   4:	invokevirtual	#29; //Method scala/Predef$.long2float:(J)F
   7:	freturn
  LineNumberTable: 
   line 44: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      8      0    $this       Lscala/Numeric$LongIsIntegral;
   0      8      1    x       J


public static long toLong(scala.Numeric$LongIsIntegral, long);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	lload_1
   1:	lreturn
  LineNumberTable: 
   line 43: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      2      0    $this       Lscala/Numeric$LongIsIntegral;
   0      2      1    x       J


public static int toInt(scala.Numeric$LongIsIntegral, long);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	lload_1
   1:	l2i
   2:	ireturn
  LineNumberTable: 
   line 42: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      3      0    $this       Lscala/Numeric$LongIsIntegral;
   0      3      1    x       J


public static long fromInt(scala.Numeric$LongIsIntegral, int);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	getstatic	#17; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   3:	iload_1
   4:	invokevirtual	#39; //Method scala/Predef$.int2long:(I)J
   7:	lreturn
  LineNumberTable: 
   line 41: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      8      0    $this       Lscala/Numeric$LongIsIntegral;
   0      8      1    x       I


public static long negate(scala.Numeric$LongIsIntegral, long);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	lload_1
   1:	lneg
   2:	lreturn
  LineNumberTable: 
   line 40: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      3      0    $this       Lscala/Numeric$LongIsIntegral;
   0      3      1    x       J


public static long rem(scala.Numeric$LongIsIntegral, long, long);
  Code:
   Stack=4, Locals=5, Args_size=3
   0:	lload_1
   1:	lload_3
   2:	lrem
   3:	lreturn
  LineNumberTable: 
   line 39: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      4      0    $this       Lscala/Numeric$LongIsIntegral;
   0      4      1    x       J
   0      4      3    y       J


public static long quot(scala.Numeric$LongIsIntegral, long, long);
  Code:
   Stack=4, Locals=5, Args_size=3
   0:	lload_1
   1:	lload_3
   2:	ldiv
   3:	lreturn
  LineNumberTable: 
   line 38: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      4      0    $this       Lscala/Numeric$LongIsIntegral;
   0      4      1    x       J
   0      4      3    y       J


public static long times(scala.Numeric$LongIsIntegral, long, long);
  Code:
   Stack=4, Locals=5, Args_size=3
   0:	lload_1
   1:	lload_3
   2:	lmul
   3:	lreturn
  LineNumberTable: 
   line 37: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      4      0    $this       Lscala/Numeric$LongIsIntegral;
   0      4      1    x       J
   0      4      3    y       J


public static long minus(scala.Numeric$LongIsIntegral, long, long);
  Code:
   Stack=4, Locals=5, Args_size=3
   0:	lload_1
   1:	lload_3
   2:	lsub
   3:	lreturn
  LineNumberTable: 
   line 36: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      4      0    $this       Lscala/Numeric$LongIsIntegral;
   0      4      1    x       J
   0      4      3    y       J


public static long plus(scala.Numeric$LongIsIntegral, long, long);
  Code:
   Stack=4, Locals=5, Args_size=3
   0:	lload_1
   1:	lload_3
   2:	ladd
   3:	lreturn
  LineNumberTable: 
   line 35: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      4      0    $this       Lscala/Numeric$LongIsIntegral;
   0      4      1    x       J
   0      4      3    y       J


}

