Compiled from "BigInt.scala"
public class scala.math.BigInt extends scala.math.ScalaNumber implements scala.math.ScalaNumericConversions,scala.ScalaObject,java.io.Serializable
  SourceFile: "BigInt.scala"
  ScalaSig: length = 0xBD9
   05 00 FFFFFF83 18 07 05 01 02 FFFFFF88 02 07 01 06 42 69 67
   49 6E 74 0A 02 03 04 01 04 6D 61 74 68 0A 01 05
   01 05 73 63 61 6C 61 03 00 10 02 08 09 0D 01 02
   06 08 0A 02 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF88 02 0B 02 06 42 69 67 49
   6E 74 13 03 09 0C 14 10 02 0D 12 0D 01 0E 0A 02
   0F 10 01 04 6C 61 6E 67 0A 01 11 01 04 6A 61 76
   61 09 02 13 0E 02 06 4F 62 6A 65 63 74 10 02 15
   16 0D 01 04 09 02 17 04 02 0B 53 63 61 6C 61 4F
   62 6A 65 63 74 08 05 19 09 FFFFFF84 00 1A 01 06 3C 69
   6E 69 74 3E 14 01 07 08 07 1C 09 FFFFFFC2 FFFFFF80 FFFFFF84 04 1D
   01 09 6D 69 6E 43 61 63 68 65 64 15 01 1E 10 02
   15 1F 09 02 20 04 02 03 49 6E 74 08 06 22 09 FFFFFFA0
   FFFFFF80 04 1E 01 0A 6D 69 6E 43 61 63 68 65 64 20 08
   07 24 09 FFFFFFC2 FFFFFF80 FFFFFF84 04 1D 01 09 6D 61 78 43 61 63
   68 65 64 08 06 26 09 FFFFFFA0 FFFFFF80 04 1E 01 0A 6D 61 78
   43 61 63 68 65 64 20 08 07 28 09 FFFFFFC2 FFFFFF80 FFFFFF84 04 29
   01 05 63 61 63 68 65 15 01 2A 10 03 15 2B 2D 09
   02 2C 04 02 05 41 72 72 61 79 10 02 08 2E 06 08
   0A 02 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF80 00 2F 13 04 2E 30 33 14 10 02
   08 31 09 02 32 02 02 0B 53 63 61 6C 61 4E 75 6D
   62 65 72 10 02 08 34 09 02 35 02 02 17 53 63 61
   6C 61 4E 75 6D 65 72 69 63 43 6F 6E 76 65 72 73
   69 6F 6E 73 08 08 37 2E FFFFFF82 FFFFFFC2 FFFFFF80 FFFFFF84 00 38 01 0A
   62 69 67 49 6E 74 65 67 65 72 15 01 39 10 02 3A
   3C 0D 01 3B 0A 02 03 10 09 02 3D 3B 02 0A 42 69
   67 49 6E 74 65 67 65 72 08 08 3F 2E FFFFFF82 FFFFFF80 FFFFFFA0 FFFFFF80
   04 39 01 0B 62 69 67 49 6E 74 65 67 65 72 20 08
   05 19 2E FFFFFF84 00 41 14 02 2D 42 08 05 37 40 FFFFFFC0 00
   39 08 05 44 2E FFFFFF84 20 45 01 08 68 61 73 68 43 6F
   64 65 14 01 1E 08 05 47 2E FFFFFF84 20 48 01 06 65 71
   75 61 6C 73 14 02 49 4C 10 02 15 4A 09 02 4B 04
   02 07 42 6F 6F 6C 65 61 6E 08 05 4D 46 FFFFFFC0 00 4E
   01 04 74 68 61 74 10 02 15 4F 09 02 50 04 02 03
   41 6E 79 08 06 52 2E FFFFFF84 08 02 53 01 07 69 73 57
   68 6F 6C 65 14 01 49 08 05 55 2E FFFFFF84 00 56 01 0A
   75 6E 64 65 72 6C 79 69 6E 67 14 01 39 08 05 47
   2E FFFFFF84 00 58 14 02 49 59 08 05 4D 57 FFFFFFC0 00 2D 08
   05 5B 2E FFFFFF84 00 5C 01 07 63 6F 6D 70 61 72 65 14
   02 1E 5D 08 05 4D 5A FFFFFFC0 00 2D 08 05 5F 2E FFFFFF84 00
   60 01 08 24 6C 65 73 73 24 65 71 14 02 49 61 08
   05 4D 5E FFFFFFC0 00 2D 08 05 63 2E FFFFFF84 00 64 01 0B 24
   67 72 65 61 74 65 72 24 65 71 14 02 49 65 08 05
   4D 62 FFFFFFC0 00 2D 08 05 67 2E FFFFFF84 00 68 01 05 24 6C
   65 73 73 14 02 49 69 08 05 4D 66 FFFFFFC0 00 2D 08 05
   6B 2E FFFFFF84 00 6C 01 08 24 67 72 65 61 74 65 72 14
   02 49 6D 08 05 4D 6A FFFFFFC0 00 2D 08 05 6F 2E FFFFFF84 00
   70 01 05 24 70 6C 75 73 14 02 2D 71 08 05 4D 6E
   FFFFFFC0 00 2D 08 05 73 2E FFFFFF84 00 74 01 06 24 6D 69 6E
   75 73 14 02 2D 75 08 05 4D 72 FFFFFFC0 00 2D 08 05 77
   2E FFFFFF84 00 78 01 06 24 74 69 6D 65 73 14 02 2D 79
   08 05 4D 76 FFFFFFC0 00 2D 08 05 7B 2E FFFFFF84 00 7C 01 04
   24 64 69 76 14 02 2D 7D 08 05 4D 7A FFFFFFC0 00 2D 08
   06 7F 2E FFFFFF84 00 FFFFFF81 00 01 08 24 70 65 72 63 65 6E
   74 14 03 2D FFFFFF81 01 08 05 4D 7E FFFFFFC0 00 2D 08 07 FFFFFF81
   03 2E FFFFFF84 00 FFFFFF81 04 01 0C 24 64 69 76 24 70 65 72
   63 65 6E 74 14 04 FFFFFF81 05 FFFFFF81 08 10 05 15 FFFFFF81 06 2D
   2D 09 03 FFFFFF81 07 04 02 06 54 75 70 6C 65 32 08 06
   4D FFFFFF81 02 FFFFFFC0 00 2D 08 07 FFFFFF81 0A 2E FFFFFF84 00 FFFFFF81 0B 01
   0A 24 6C 65 73 73 24 6C 65 73 73 14 03 2D FFFFFF81 0C
   08 07 FFFFFF81 0D FFFFFF81 09 FFFFFFC0 00 1E 01 01 6E 08 07 FFFFFF81 0F
   2E FFFFFF84 00 FFFFFF81 10 01 10 24 67 72 65 61 74 65 72 24
   67 72 65 61 74 65 72 14 03 2D FFFFFF81 11 08 07 FFFFFF81 0D
   FFFFFF81 0E FFFFFFC0 00 1E 08 07 FFFFFF81 13 2E FFFFFF84 00 FFFFFF81 14 01 04
   24 61 6D 70 14 03 2D FFFFFF81 15 08 06 4D FFFFFF81 12 FFFFFFC0 00
   2D 08 07 FFFFFF81 17 2E FFFFFF84 00 FFFFFF81 18 01 04 24 62 61 72
   14 03 2D FFFFFF81 19 08 06 4D FFFFFF81 16 FFFFFFC0 00 2D 08 07 FFFFFF81
   1B 2E FFFFFF84 00 FFFFFF81 1C 01 03 24 75 70 14 03 2D FFFFFF81 1D
   08 06 4D FFFFFF81 1A FFFFFFC0 00 2D 08 07 FFFFFF81 1F 2E FFFFFF84 00 FFFFFF81
   20 01 0A 24 61 6D 70 24 74 69 6C 64 65 14 03 2D
   FFFFFF81 21 08 06 4D FFFFFF81 1E FFFFFFC0 00 2D 08 07 FFFFFF81 23 2E FFFFFF84
   00 FFFFFF81 24 01 03 67 63 64 14 03 2D FFFFFF81 25 08 06 4D
   FFFFFF81 22 FFFFFFC0 00 2D 08 07 FFFFFF81 27 2E FFFFFF84 00 FFFFFF81 28 01 03
   6D 6F 64 14 03 2D FFFFFF81 29 08 06 4D FFFFFF81 26 FFFFFFC0 00 2D
   08 07 FFFFFF81 2B 2E FFFFFF84 00 FFFFFF81 2C 01 03 6D 69 6E 14 03
   2D FFFFFF81 2D 08 06 4D FFFFFF81 2A FFFFFFC0 00 2D 08 07 FFFFFF81 2F 2E
   FFFFFF84 00 FFFFFF81 30 01 03 6D 61 78 14 03 2D FFFFFF81 31 08 06
   4D FFFFFF81 2E FFFFFFC0 00 2D 08 07 FFFFFF81 33 2E FFFFFF84 00 FFFFFF81 34 01
   03 70 6F 77 14 03 2D FFFFFF81 35 08 07 FFFFFF81 36 FFFFFF81 32 FFFFFFC0
   00 1E 01 03 65 78 70 08 07 FFFFFF81 38 2E FFFFFF84 00 FFFFFF81 39
   01 06 6D 6F 64 50 6F 77 14 05 2D FFFFFF81 3A FFFFFF81 3B 08
   07 FFFFFF81 36 FFFFFF81 37 FFFFFFC0 00 2D 08 07 FFFFFF81 3C FFFFFF81 37 FFFFFFC0 00
   2D 01 01 6D 08 07 FFFFFF81 3E 2E FFFFFF84 00 FFFFFF81 3F 01 0A 6D
   6F 64 49 6E 76 65 72 73 65 14 03 2D FFFFFF81 40 08 07
   FFFFFF81 3C FFFFFF81 3D FFFFFFC0 00 2D 08 07 FFFFFF81 42 2E FFFFFF84 00 FFFFFF81 43
   01 0C 75 6E 61 72 79 5F 24 6D 69 6E 75 73 15 01
   2D 08 07 FFFFFF81 45 2E FFFFFF84 00 FFFFFF81 43 01 03 61 62 73 08
   06 FFFFFF81 47 2E FFFFFF84 00 1D 01 06 73 69 67 6E 75 6D 08
   07 FFFFFF81 49 2E FFFFFF84 00 FFFFFF81 43 01 06 24 74 69 6C 64 65
   08 07 FFFFFF81 4B 2E FFFFFF84 00 FFFFFF81 4C 01 07 74 65 73 74 42
   69 74 14 03 49 FFFFFF81 4D 08 07 FFFFFF81 0D FFFFFF81 4A FFFFFFC0 00 1E
   08 07 FFFFFF81 4F 2E FFFFFF84 00 FFFFFF81 50 01 06 73 65 74 42 69
   74 14 03 2D FFFFFF81 51 08 07 FFFFFF81 0D FFFFFF81 4E FFFFFFC0 00 1E 08
   07 FFFFFF81 53 2E FFFFFF84 00 FFFFFF81 54 01 08 63 6C 65 61 72 42
   69 74 14 03 2D FFFFFF81 55 08 07 FFFFFF81 0D FFFFFF81 52 FFFFFFC0 00 1E
   08 07 FFFFFF81 57 2E FFFFFF84 00 FFFFFF81 58 01 07 66 6C 69 70 42
   69 74 14 03 2D FFFFFF81 59 08 07 FFFFFF81 0D FFFFFF81 56 FFFFFFC0 00 1E
   08 06 FFFFFF81 5B 2E FFFFFF84 00 1D 01 0C 6C 6F 77 65 73 74
   53 65 74 42 69 74 08 06 FFFFFF81 5D 2E FFFFFF84 00 1D 01 09
   62 69 74 4C 65 6E 67 74 68 08 06 FFFFFF81 5F 2E FFFFFF84 00
   1D 01 08 62 69 74 43 6F 75 6E 74 08 07 FFFFFF81 61 2E
   FFFFFF84 00 FFFFFF81 62 01 0F 69 73 50 72 6F 62 61 62 6C 65
   50 72 69 6D 65 14 03 49 FFFFFF81 63 08 07 FFFFFF81 64 FFFFFF81 60
   FFFFFFC0 00 1E 01 09 63 65 72 74 61 69 6E 74 79 08 07
   FFFFFF81 66 2E FFFFFF84 20 FFFFFF81 67 01 09 62 79 74 65 56 61 6C
   75 65 14 02 FFFFFF81 68 10 03 15 FFFFFF81 69 09 03 FFFFFF81 6A 04
   02 04 42 79 74 65 08 07 FFFFFF81 6C 2E FFFFFF84 20 FFFFFF81 6D 01
   0A 73 68 6F 72 74 56 61 6C 75 65 14 02 FFFFFF81 6E 10
   03 15 FFFFFF81 6F 09 03 FFFFFF81 70 04 02 05 53 68 6F 72 74
   08 07 FFFFFF81 72 2E FFFFFF84 00 FFFFFF81 73 01 09 63 68 61 72 56
   61 6C 75 65 15 02 FFFFFF81 74 10 03 15 FFFFFF81 75 09 03 FFFFFF81
   76 04 02 04 43 68 61 72 08 06 FFFFFF81 78 2E FFFFFF84 00 45
   01 08 69 6E 74 56 61 6C 75 65 08 07 FFFFFF81 7A 2E FFFFFF84
   00 FFFFFF81 7B 01 09 6C 6F 6E 67 56 61 6C 75 65 14 02
   FFFFFF81 7C 10 03 15 FFFFFF81 7D 09 03 FFFFFF81 7E 04 02 04 4C 6F
   6E 67 08 07 FFFFFF82 00 2E FFFFFF84 00 FFFFFF82 01 01 0A 66 6C 6F
   61 74 56 61 6C 75 65 14 02 FFFFFF82 02 10 03 15 FFFFFF82 03
   09 03 FFFFFF82 04 04 02 05 46 6C 6F 61 74 08 07 FFFFFF82 06
   2E FFFFFF84 00 FFFFFF82 07 01 0B 64 6F 75 62 6C 65 56 61 6C
   75 65 14 02 FFFFFF82 08 10 03 15 FFFFFF82 09 09 03 FFFFFF82 0A 04
   02 06 44 6F 75 62 6C 65 08 07 FFFFFF82 0C 2E FFFFFF84 00 FFFFFF82
   0D 01 05 75 6E 74 69 6C 14 06 FFFFFF82 0E FFFFFF82 25 FFFFFF82 27
   10 06 FFFFFF82 0F FFFFFF82 17 FFFFFF82 1A 0E 04 FFFFFF82 10 FFFFFF82 15 0D 02
   FFFFFF82 11 0A 04 FFFFFF82 12 FFFFFF82 13 01 09 69 6D 6D 75 74 61
   62 6C 65 0A 03 FFFFFF82 14 04 01 0A 63 6F 6C 6C 65 63
   74 69 6F 6E 09 04 FFFFFF82 16 FFFFFF82 11 01 0C 4E 75 6D 65
   72 69 63 52 61 6E 67 65 09 04 FFFFFF82 18 FFFFFF82 19 02 09
   45 78 63 6C 75 73 69 76 65 0A 04 FFFFFF82 16 FFFFFF82 11 10
   04 FFFFFF82 1B FFFFFF82 23 0E 04 FFFFFF82 1C FFFFFF82 21 0E 04 FFFFFF82 1D FFFFFF82
   20 0D 02 FFFFFF82 1E 0A 03 FFFFFF82 1F 06 01 06 3C 72 6F 6F
   74 3E 09 01 05 09 03 FFFFFF82 22 04 01 07 70 61 63 6B
   61 67 65 09 03 0A FFFFFF82 24 0A 03 FFFFFF82 22 04 08 07 FFFFFF82
   26 FFFFFF82 0B FFFFFFC0 00 2D 01 03 65 6E 64 08 09 FFFFFF82 28 FFFFFF82
   0B FFFFFF90 FFFFFF80 FFFFFFC0 00 2D 01 04 73 74 65 70 08 07 FFFFFF82 2A
   2E FFFFFF84 00 FFFFFF82 2B 01 02 74 6F 14 06 FFFFFF82 2C FFFFFF82 2F FFFFFF82
   30 10 06 FFFFFF82 0F FFFFFF82 2D FFFFFF82 1A 09 04 FFFFFF82 2E FFFFFF82 19 02
   09 49 6E 63 6C 75 73 69 76 65 08 07 FFFFFF82 26 FFFFFF82 29
   FFFFFFC0 00 2D 08 09 FFFFFF82 28 FFFFFF82 29 FFFFFF90 FFFFFF80 FFFFFFC0 00 2D 08 07
   FFFFFF82 32 2E FFFFFF84 20 FFFFFF82 33 01 08 74 6F 53 74 72 69 6E
   67 14 02 FFFFFF82 34 10 04 FFFFFF82 35 FFFFFF82 38 0E 03 15 FFFFFF82 36
   09 03 FFFFFF82 37 04 01 06 50 72 65 64 65 66 09 04 FFFFFF82
   39 FFFFFF82 3A 02 06 53 74 72 69 6E 67 0A 03 FFFFFF82 37 04
   08 07 FFFFFF82 32 2E FFFFFF84 00 FFFFFF82 3C 14 04 FFFFFF82 34 FFFFFF82 3D 08
   07 FFFFFF82 3E FFFFFF82 3B FFFFFFC0 00 1E 01 05 72 61 64 69 78 08
   07 FFFFFF82 40 2E FFFFFF84 00 FFFFFF82 41 01 0B 74 6F 42 79 74 65
   41 72 72 61 79 15 02 FFFFFF82 42 10 04 15 2B FFFFFF81 68 08
   09 FFFFFF82 44 2E FFFFFF91 FFFFFF80 FFFFFF84 00 FFFFFF82 45 01 0F 75 6E 74 69
   6C 24 64 65 66 61 75 6C 74 24 32 15 02 FFFFFF82 46 2A
   03 2D FFFFFF82 47 2B 02 FFFFFF82 48 10 04 FFFFFF82 49 FFFFFF82 4E 0D 02
   FFFFFF82 4A 0A 04 FFFFFF82 4B FFFFFF82 4C 01 09 75 6E 63 68 65 63
   6B 65 64 0A 03 FFFFFF82 4D 04 01 0A 61 6E 6E 6F 74 61
   74 69 6F 6E 09 04 FFFFFF82 4F FFFFFF82 4A 02 11 75 6E 63 68
   65 63 6B 65 64 56 61 72 69 61 6E 63 65 08 09 FFFFFF82
   51 2E FFFFFF91 FFFFFF80 FFFFFF84 00 FFFFFF82 45 01 0C 74 6F 24 64 65 66
   61 75 6C 74 24 32 28 03 2E FFFFFF82 53 10 03 15 FFFFFF82 54
   09 03 FFFFFF82 55 04 02 0C 73 65 72 69 61 6C 69 7A 61
   62 6C 65 08 07 FFFFFF82 57 09 FFFFFFA0 FFFFFF80 04 2A 01 06 63 61
   63 68 65 20 08 09 FFFFFF82 59 09 FFFFFFC2 FFFFFF80 FFFFFF84 00 FFFFFF81 43 01
   07 4D 69 6E 4C 6F 6E 67 08 07 FFFFFF82 5B 09 FFFFFFA0 FFFFFF80 04
   2D 01 08 4D 69 6E 4C 6F 6E 67 20 08 09 FFFFFF82 5D 09
   FFFFFFC2 FFFFFF80 FFFFFF84 00 FFFFFF81 43 01 07 4D 61 78 4C 6F 6E 67 08
   07 FFFFFF82 5F 09 FFFFFFA0 FFFFFF80 04 2D 01 08 4D 61 78 4C 6F 6E
   67 20 08 07 FFFFFF82 61 09 FFFFFF84 00 FFFFFF82 62 01 05 61 70 70
   6C 79 14 03 2D FFFFFF82 63 08 07 FFFFFF82 64 FFFFFF82 60 FFFFFFC0 00 1E
   01 01 69 08 07 FFFFFF82 61 09 FFFFFF84 00 FFFFFF82 66 14 03 2D FFFFFF82
   67 08 08 FFFFFF82 68 FFFFFF82 65 FFFFFFC0 00 FFFFFF81 7C 01 01 6C 08 07
   FFFFFF82 61 09 FFFFFF84 00 FFFFFF82 6A 14 03 2D FFFFFF82 6B 08 08 FFFFFF82 6C
   FFFFFF82 69 FFFFFFC0 00 FFFFFF82 42 01 01 78 08 07 FFFFFF82 61 09 FFFFFF84 00
   FFFFFF82 6E 14 05 2D FFFFFF82 6F FFFFFF82 70 08 07 FFFFFF81 47 FFFFFF82 6D FFFFFFC0
   00 1E 08 08 FFFFFF82 71 FFFFFF82 6D FFFFFFC0 00 FFFFFF82 42 01 09 6D 61
   67 6E 69 74 75 64 65 08 07 FFFFFF82 61 09 FFFFFF84 00 FFFFFF82 73
   14 07 2D FFFFFF82 74 FFFFFF82 76 FFFFFF82 77 08 07 FFFFFF82 75 FFFFFF82 72 FFFFFFC0
   00 1E 01 09 62 69 74 6C 65 6E 67 74 68 08 07 FFFFFF81
   64 FFFFFF82 72 FFFFFFC0 00 1E 08 08 FFFFFF82 78 FFFFFF82 72 FFFFFFC0 00 FFFFFF82 79
   01 03 72 6E 64 10 04 FFFFFF82 7A FFFFFF82 7D 0D 02 FFFFFF82 7B 0A
   03 FFFFFF82 7C 04 01 04 75 74 69 6C 09 04 FFFFFF82 7E FFFFFF82 7B
   02 06 52 61 6E 64 6F 6D 08 07 FFFFFF82 61 09 FFFFFF84 00 FFFFFF83
   00 14 05 2D FFFFFF83 01 FFFFFF83 03 08 07 FFFFFF83 02 FFFFFF82 7F FFFFFFC0 00
   1E 01 07 6E 75 6D 62 69 74 73 08 08 FFFFFF82 78 FFFFFF82 7F
   FFFFFFC0 00 FFFFFF82 79 08 07 FFFFFF82 61 09 FFFFFF84 00 FFFFFF83 05 14 03 2D
   FFFFFF83 06 08 08 FFFFFF82 6C FFFFFF83 04 FFFFFFC0 00 FFFFFF82 34 08 07 FFFFFF82 61
   09 FFFFFF84 00 FFFFFF83 08 14 05 2D FFFFFF83 09 FFFFFF83 0A 08 08 FFFFFF82 6C
   FFFFFF83 07 FFFFFFC0 00 FFFFFF82 34 08 07 FFFFFF82 3E FFFFFF83 07 FFFFFFC0 00 1E 08
   07 FFFFFF83 0C 09 FFFFFF84 00 FFFFFF83 0D 01 0D 70 72 6F 62 61 62
   6C 65 50 72 69 6D 65 14 05 2D FFFFFF83 0E FFFFFF83 0F 08 07
   FFFFFF81 5D FFFFFF83 0B FFFFFFC0 00 1E 08 08 FFFFFF82 78 FFFFFF83 0B FFFFFFC0 00 FFFFFF82
   79 08 07 FFFFFF83 11 09 FFFFFF84 01 FFFFFF83 12 01 0A 69 6E 74 32
   62 69 67 49 6E 74 14 03 2D FFFFFF83 13 08 07 FFFFFF82 64 FFFFFF83
   10 FFFFFFC0 00 1E 08 07 FFFFFF83 15 09 FFFFFF84 01 FFFFFF83 16 01 0B 6C
   6F 6E 67 32 62 69 67 49 6E 74 14 03 2D FFFFFF83 17 08
   08 FFFFFF82 68 FFFFFF83 14 FFFFFFC0 00 FFFFFF81 7C 
  InnerClass: 
   public Exclusive=class scala/collection/immutable/NumericRange$Exclusive of class scala/collection/immutable/NumericRange
   public Inclusive=class scala/collection/immutable/NumericRange$Inclusive of class scala/collection/immutable/NumericRange
   public final $anonfun$equals$1=class scala/math/BigInt$$anonfun$equals$1 of class scala/math/BigInt
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	BigInt.scala;
Asciz	long2bigInt;
Asciz	(J)Lscala/math/BigInt;;
Asciz	Code;
Asciz	scala/math/BigInt$;
class	scala/math/BigInt$
Asciz	MODULE$;
Asciz	Lscala/math/BigInt$;;
NameAndType	MODULE$:Lscala/math/BigInt$;
Field	scala/math/BigInt$.MODULE$:Lscala/math/BigInt$;
NameAndType	long2bigInt:(J)Lscala/math/BigInt;
Method	scala/math/BigInt$.long2bigInt:(J)Lscala/math/BigInt;
Asciz	int2bigInt;
Asciz	(I)Lscala/math/BigInt;;
NameAndType	int2bigInt:(I)Lscala/math/BigInt;
Method	scala/math/BigInt$.int2bigInt:(I)Lscala/math/BigInt;
Asciz	probablePrime;
Asciz	(ILscala/util/Random;)Lscala/math/BigInt;;
NameAndType	probablePrime:(ILscala/util/Random;)Lscala/math/BigInt;
Method	scala/math/BigInt$.probablePrime:(ILscala/util/Random;)Lscala/math/BigInt;
Asciz	apply;
Asciz	(Ljava/lang/String;I)Lscala/math/BigInt;;
NameAndType	apply:(Ljava/lang/String;I)Lscala/math/BigInt;
Method	scala/math/BigInt$.apply:(Ljava/lang/String;I)Lscala/math/BigInt;
Asciz	(Ljava/lang/String;)Lscala/math/BigInt;;
NameAndType	apply:(Ljava/lang/String;)Lscala/math/BigInt;
Method	scala/math/BigInt$.apply:(Ljava/lang/String;)Lscala/math/BigInt;
NameAndType	apply:(ILscala/util/Random;)Lscala/math/BigInt;
Method	scala/math/BigInt$.apply:(ILscala/util/Random;)Lscala/math/BigInt;
Asciz	(IILscala/util/Random;)Lscala/math/BigInt;;
NameAndType	apply:(IILscala/util/Random;)Lscala/math/BigInt;
Method	scala/math/BigInt$.apply:(IILscala/util/Random;)Lscala/math/BigInt;
Asciz	(I[B)Lscala/math/BigInt;;
NameAndType	apply:(I[B)Lscala/math/BigInt;
Method	scala/math/BigInt$.apply:(I[B)Lscala/math/BigInt;
Asciz	([B)Lscala/math/BigInt;;
NameAndType	apply:([B)Lscala/math/BigInt;
Method	scala/math/BigInt$.apply:([B)Lscala/math/BigInt;
NameAndType	apply:(J)Lscala/math/BigInt;
Method	scala/math/BigInt$.apply:(J)Lscala/math/BigInt;
NameAndType	apply:(I)Lscala/math/BigInt;
Method	scala/math/BigInt$.apply:(I)Lscala/math/BigInt;
Asciz	MaxLong;
Asciz	()Lscala/math/BigInt;;
NameAndType	MaxLong:()Lscala/math/BigInt;
Method	scala/math/BigInt$.MaxLong:()Lscala/math/BigInt;
Asciz	MinLong;
NameAndType	MinLong:()Lscala/math/BigInt;
Method	scala/math/BigInt$.MinLong:()Lscala/math/BigInt;
Asciz	bigInteger;
Asciz	Ljava/math/BigInteger;;
Asciz	<init>;
Asciz	(Ljava/math/BigInteger;)V;
Asciz	LineNumberTable;
Asciz	scala/math/BigInt;
class	scala/math/BigInt
NameAndType	bigInteger:Ljava/math/BigInteger;
Field	scala/math/BigInt.bigInteger:Ljava/math/BigInteger;
Asciz	scala/math/ScalaNumber;
class	scala/math/ScalaNumber
Asciz	()V;
NameAndType	"<init>":()V
Method	scala/math/ScalaNumber."<init>":()V
Asciz	scala/math/ScalaNumericConversions$class;
class	scala/math/ScalaNumericConversions$class
Asciz	$init$;
Asciz	(Lscala/math/ScalaNumericConversions;)V;
NameAndType	$init$:(Lscala/math/ScalaNumericConversions;)V
Method	scala/math/ScalaNumericConversions$class.$init$:(Lscala/math/ScalaNumericConversions;)V
Asciz	this;
Asciz	Lscala/math/BigInt;;
Asciz	LocalVariableTable;
Asciz	underlying;
Asciz	()Ljava/lang/Object;;
Asciz	()Ljava/math/BigInteger;;
NameAndType	underlying:()Ljava/math/BigInteger;
Method	scala/math/BigInt.underlying:()Ljava/math/BigInteger;
Asciz	toByteArray;
Asciz	()[B;
NameAndType	bigInteger:()Ljava/math/BigInteger;
Method	scala/math/BigInt.bigInteger:()Ljava/math/BigInteger;
Asciz	java/math/BigInteger;
class	java/math/BigInteger
NameAndType	toByteArray:()[B
Method	java/math/BigInteger.toByteArray:()[B
Asciz	toString;
Asciz	(I)Ljava/lang/String;;
NameAndType	toString:(I)Ljava/lang/String;
Method	java/math/BigInteger.toString:(I)Ljava/lang/String;
Asciz	radix;
Asciz	I;
Asciz	()Ljava/lang/String;;
NameAndType	toString:()Ljava/lang/String;
Method	java/math/BigInteger.toString:()Ljava/lang/String;
Asciz	to;
Asciz	(Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/collection/immutable/NumericRange$Inclusive;;
Asciz	scala/collection/immutable/Range$BigInt$;
class	scala/collection/immutable/Range$BigInt$
Asciz	Lscala/collection/immutable/Range$BigInt$;;
NameAndType	MODULE$:Lscala/collection/immutable/Range$BigInt$;
Field	scala/collection/immutable/Range$BigInt$.MODULE$:Lscala/collection/immutable/Range$BigInt$;
Asciz	inclusive;
Asciz	(Lscala/math/BigInt;Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/collection/immutable/NumericRange$Inclusive;;
NameAndType	inclusive:(Lscala/math/BigInt;Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/collection/immutable/NumericRange$Inclusive;
Method	scala/collection/immutable/Range$BigInt$.inclusive:(Lscala/math/BigInt;Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/collection/immutable/NumericRange$Inclusive;
Asciz	end;
Asciz	step;
Asciz	(Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/collection/immutable/NumericRange$Inclusive<Lscala/math/BigInt;>;;
Asciz	Signature;
Asciz	until;
Asciz	(Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/collection/immutable/NumericRange$Exclusive;;
Asciz	(Lscala/math/BigInt;Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/collection/immutable/NumericRange$Exclusive;;
NameAndType	apply:(Lscala/math/BigInt;Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/collection/immutable/NumericRange$Exclusive;
Method	scala/collection/immutable/Range$BigInt$.apply:(Lscala/math/BigInt;Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/collection/immutable/NumericRange$Exclusive;
Asciz	(Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/collection/immutable/NumericRange$Exclusive<Lscala/math/BigInt;>;;
Asciz	doubleValue;
Asciz	()D;
NameAndType	doubleValue:()D
Method	java/math/BigInteger.doubleValue:()D
Asciz	floatValue;
Asciz	()F;
NameAndType	floatValue:()F
Method	java/math/BigInteger.floatValue:()F
Asciz	longValue;
Asciz	()J;
NameAndType	longValue:()J
Method	java/math/BigInteger.longValue:()J
Asciz	intValue;
Asciz	()I;
NameAndType	intValue:()I
Method	java/math/BigInteger.intValue:()I
Asciz	charValue;
Asciz	()C;
Method	scala/math/BigInt.intValue:()I
Asciz	shortValue;
Asciz	()S;
Asciz	byteValue;
Asciz	()B;
Asciz	isProbablePrime;
Asciz	(I)Z;
NameAndType	isProbablePrime:(I)Z
Method	java/math/BigInteger.isProbablePrime:(I)Z
Asciz	certainty;
Asciz	bitCount;
NameAndType	bitCount:()I
Method	java/math/BigInteger.bitCount:()I
Asciz	bitLength;
NameAndType	bitLength:()I
Method	java/math/BigInteger.bitLength:()I
Asciz	lowestSetBit;
Asciz	getLowestSetBit;
NameAndType	getLowestSetBit:()I
Method	java/math/BigInteger.getLowestSetBit:()I
Asciz	flipBit;
Asciz	(I)Ljava/math/BigInteger;;
NameAndType	flipBit:(I)Ljava/math/BigInteger;
Method	java/math/BigInteger.flipBit:(I)Ljava/math/BigInteger;
NameAndType	"<init>":(Ljava/math/BigInteger;)V
Method	scala/math/BigInt."<init>":(Ljava/math/BigInteger;)V
Asciz	n;
Asciz	clearBit;
NameAndType	clearBit:(I)Ljava/math/BigInteger;
Method	java/math/BigInteger.clearBit:(I)Ljava/math/BigInteger;
Asciz	setBit;
NameAndType	setBit:(I)Ljava/math/BigInteger;
Method	java/math/BigInteger.setBit:(I)Ljava/math/BigInteger;
Asciz	testBit;
NameAndType	testBit:(I)Z
Method	java/math/BigInteger.testBit:(I)Z
Asciz	$tilde;
Asciz	not;
NameAndType	not:()Ljava/math/BigInteger;
Method	java/math/BigInteger.not:()Ljava/math/BigInteger;
Asciz	signum;
NameAndType	signum:()I
Method	java/math/BigInteger.signum:()I
Asciz	abs;
NameAndType	abs:()Ljava/math/BigInteger;
Method	java/math/BigInteger.abs:()Ljava/math/BigInteger;
Asciz	unary_$minus;
Asciz	negate;
NameAndType	negate:()Ljava/math/BigInteger;
Method	java/math/BigInteger.negate:()Ljava/math/BigInteger;
Asciz	modInverse;
Asciz	(Lscala/math/BigInt;)Lscala/math/BigInt;;
Asciz	(Ljava/math/BigInteger;)Ljava/math/BigInteger;;
NameAndType	modInverse:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
Method	java/math/BigInteger.modInverse:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
Asciz	m;
Asciz	modPow;
Asciz	(Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;;
Asciz	(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;;
NameAndType	modPow:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
Method	java/math/BigInteger.modPow:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
Asciz	exp;
Asciz	pow;
NameAndType	pow:(I)Ljava/math/BigInteger;
Method	java/math/BigInteger.pow:(I)Ljava/math/BigInteger;
Asciz	max;
NameAndType	max:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
Method	java/math/BigInteger.max:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
Asciz	that;
Asciz	min;
NameAndType	min:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
Method	java/math/BigInteger.min:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
Asciz	mod;
NameAndType	mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
Method	java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
Asciz	gcd;
NameAndType	gcd:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
Method	java/math/BigInteger.gcd:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
Asciz	$amp$tilde;
Asciz	andNot;
NameAndType	andNot:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
Method	java/math/BigInteger.andNot:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
Asciz	$up;
Asciz	xor;
NameAndType	xor:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
Method	java/math/BigInteger.xor:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
Asciz	$bar;
Asciz	or;
NameAndType	or:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
Method	java/math/BigInteger.or:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
Asciz	$amp;
Asciz	and;
NameAndType	and:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
Method	java/math/BigInteger.and:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
Asciz	$greater$greater;
Asciz	shiftRight;
NameAndType	shiftRight:(I)Ljava/math/BigInteger;
Method	java/math/BigInteger.shiftRight:(I)Ljava/math/BigInteger;
Asciz	$less$less;
Asciz	shiftLeft;
NameAndType	shiftLeft:(I)Ljava/math/BigInteger;
Method	java/math/BigInteger.shiftLeft:(I)Ljava/math/BigInteger;
Asciz	$div$percent;
Asciz	(Lscala/math/BigInt;)Lscala/Tuple2;;
Asciz	divideAndRemainder;
Asciz	(Ljava/math/BigInteger;)[Ljava/math/BigInteger;;
NameAndType	divideAndRemainder:(Ljava/math/BigInteger;)[Ljava/math/BigInteger;
Method	java/math/BigInteger.divideAndRemainder:(Ljava/math/BigInteger;)[Ljava/math/BigInteger;
Asciz	scala/Tuple2;
class	scala/Tuple2
Asciz	(Ljava/lang/Object;Ljava/lang/Object;)V;
NameAndType	"<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
Method	scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
Asciz	dr;
Asciz	[Ljava/math/BigInteger;;
Asciz	(Lscala/math/BigInt;)Lscala/Tuple2<Lscala/math/BigInt;Lscala/math/BigInt;>;;
Asciz	$percent;
Asciz	remainder;
NameAndType	remainder:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
Method	java/math/BigInteger.remainder:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
Asciz	$div;
Asciz	divide;
NameAndType	divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
Method	java/math/BigInteger.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
Asciz	$times;
Asciz	multiply;
NameAndType	multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
Method	java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
Asciz	$minus;
Asciz	subtract;
NameAndType	subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
Method	java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
Asciz	$plus;
Asciz	add;
NameAndType	add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
Method	java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
Asciz	$greater;
Asciz	(Lscala/math/BigInt;)Z;
Asciz	compare;
Asciz	(Lscala/math/BigInt;)I;
NameAndType	compare:(Lscala/math/BigInt;)I
Method	scala/math/BigInt.compare:(Lscala/math/BigInt;)I
Asciz	$less;
Asciz	$greater$eq;
Asciz	$less$eq;
Asciz	compareTo;
Asciz	(Ljava/math/BigInteger;)I;
NameAndType	compareTo:(Ljava/math/BigInteger;)I
Method	java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
Asciz	equals;
Asciz	isWhole;
Asciz	()Z;
Asciz	(Ljava/lang/Object;)Z;
NameAndType	equals:(Lscala/math/BigInt;)Z
Method	scala/math/BigInt.equals:(Lscala/math/BigInt;)Z
Asciz	scala/math/BigDecimal;
class	scala/math/BigDecimal
Asciz	toBigIntExact;
Asciz	()Lscala/Option;;
NameAndType	toBigIntExact:()Lscala/Option;
Method	scala/math/BigDecimal.toBigIntExact:()Lscala/Option;
Asciz	scala/math/BigInt$$anonfun$equals$1;
class	scala/math/BigInt$$anonfun$equals$1
Asciz	(Lscala/math/BigInt;)V;
NameAndType	"<init>":(Lscala/math/BigInt;)V
Method	scala/math/BigInt$$anonfun$equals$1."<init>":(Lscala/math/BigInt;)V
Asciz	scala/Option;
class	scala/Option
Asciz	exists;
Asciz	(Lscala/Function1;)Z;
NameAndType	exists:(Lscala/Function1;)Z
Method	scala/Option.exists:(Lscala/Function1;)Z
Asciz	scala/math/ScalaNumericConversions;
class	scala/math/ScalaNumericConversions
Asciz	unifiedPrimitiveEquals;
NameAndType	unifiedPrimitiveEquals:(Ljava/lang/Object;)Z
InterfaceMethod	scala/math/ScalaNumericConversions.unifiedPrimitiveEquals:(Ljava/lang/Object;)Z
Asciz	Ljava/lang/Object;;
Asciz	temp2;
Asciz	temp3;
Asciz	Lscala/math/BigDecimal;;
Asciz	hashCode;
NameAndType	$greater$eq:(Lscala/math/BigInt;)Z
Method	scala/math/BigInt.$greater$eq:(Lscala/math/BigInt;)Z
NameAndType	$less$eq:(Lscala/math/BigInt;)Z
Method	scala/math/BigInt.$less$eq:(Lscala/math/BigInt;)Z
Asciz	unifiedPrimitiveHashcode;
NameAndType	unifiedPrimitiveHashcode:()I
InterfaceMethod	scala/math/ScalaNumericConversions.unifiedPrimitiveHashcode:()I
NameAndType	hashCode:()I
Method	java/math/BigInteger.hashCode:()I
Asciz	until$default$2;
Asciz	to$default$2;
Asciz	(Lscala/math/ScalaNumericConversions;Ljava/lang/Object;)Z;
NameAndType	unifiedPrimitiveEquals:(Lscala/math/ScalaNumericConversions;Ljava/lang/Object;)Z
Method	scala/math/ScalaNumericConversions$class.unifiedPrimitiveEquals:(Lscala/math/ScalaNumericConversions;Ljava/lang/Object;)Z
Asciz	x;
Asciz	(Lscala/math/ScalaNumericConversions;)I;
NameAndType	unifiedPrimitiveHashcode:(Lscala/math/ScalaNumericConversions;)I
Method	scala/math/ScalaNumericConversions$class.unifiedPrimitiveHashcode:(Lscala/math/ScalaNumericConversions;)I
Asciz	isValidChar;
Asciz	(Lscala/math/ScalaNumericConversions;)Z;
NameAndType	isValidChar:(Lscala/math/ScalaNumericConversions;)Z
Method	scala/math/ScalaNumericConversions$class.isValidChar:(Lscala/math/ScalaNumericConversions;)Z
Asciz	isValidInt;
NameAndType	isValidInt:(Lscala/math/ScalaNumericConversions;)Z
Method	scala/math/ScalaNumericConversions$class.isValidInt:(Lscala/math/ScalaNumericConversions;)Z
Asciz	isValidShort;
NameAndType	isValidShort:(Lscala/math/ScalaNumericConversions;)Z
Method	scala/math/ScalaNumericConversions$class.isValidShort:(Lscala/math/ScalaNumericConversions;)Z
Asciz	isValidByte;
NameAndType	isValidByte:(Lscala/math/ScalaNumericConversions;)Z
Method	scala/math/ScalaNumericConversions$class.isValidByte:(Lscala/math/ScalaNumericConversions;)Z
Asciz	toDouble;
Asciz	(Lscala/math/ScalaNumericConversions;)D;
NameAndType	toDouble:(Lscala/math/ScalaNumericConversions;)D
Method	scala/math/ScalaNumericConversions$class.toDouble:(Lscala/math/ScalaNumericConversions;)D
Asciz	toFloat;
Asciz	(Lscala/math/ScalaNumericConversions;)F;
NameAndType	toFloat:(Lscala/math/ScalaNumericConversions;)F
Method	scala/math/ScalaNumericConversions$class.toFloat:(Lscala/math/ScalaNumericConversions;)F
Asciz	toLong;
Asciz	(Lscala/math/ScalaNumericConversions;)J;
NameAndType	toLong:(Lscala/math/ScalaNumericConversions;)J
Method	scala/math/ScalaNumericConversions$class.toLong:(Lscala/math/ScalaNumericConversions;)J
Asciz	toInt;
NameAndType	toInt:(Lscala/math/ScalaNumericConversions;)I
Method	scala/math/ScalaNumericConversions$class.toInt:(Lscala/math/ScalaNumericConversions;)I
Asciz	toShort;
Asciz	(Lscala/math/ScalaNumericConversions;)S;
NameAndType	toShort:(Lscala/math/ScalaNumericConversions;)S
Method	scala/math/ScalaNumericConversions$class.toShort:(Lscala/math/ScalaNumericConversions;)S
Asciz	toByte;
Asciz	(Lscala/math/ScalaNumericConversions;)B;
NameAndType	toByte:(Lscala/math/ScalaNumericConversions;)B
Method	scala/math/ScalaNumericConversions$class.toByte:(Lscala/math/ScalaNumericConversions;)B
Asciz	toChar;
Asciz	(Lscala/math/ScalaNumericConversions;)C;
NameAndType	toChar:(Lscala/math/ScalaNumericConversions;)C
Method	scala/math/ScalaNumericConversions$class.toChar:(Lscala/math/ScalaNumericConversions;)C
Asciz	ScalaSig;
Asciz	InnerClasses;
Asciz	scala/collection/immutable/NumericRange$Exclusive;
class	scala/collection/immutable/NumericRange$Exclusive
Asciz	scala/collection/immutable/NumericRange;
class	scala/collection/immutable/NumericRange
Asciz	Exclusive;
Asciz	scala/collection/immutable/NumericRange$Inclusive;
class	scala/collection/immutable/NumericRange$Inclusive
Asciz	Inclusive;
Asciz	$anonfun$equals$1;
Asciz	scala/ScalaObject;
class	scala/ScalaObject
Asciz	java/io/Serializable;
class	java/io/Serializable

{
private final java.math.BigInteger bigInteger;
  Signature: Ljava/math/BigInteger;

public static final scala.math.BigInt long2bigInt(long);
  Signature: (J)Lscala/math/BigInt;
  Code:
   Stack=3, Locals=2, Args_size=1
	getstatic	Field scala/math/BigInt$.MODULE$:Lscala/math/BigInt$;
	lload_0
	invokevirtual	Method scala/math/BigInt$.long2bigInt:(J)Lscala/math/BigInt;
	areturn
  Labels:

public static final scala.math.BigInt int2bigInt(int);
  Signature: (I)Lscala/math/BigInt;
  Code:
   Stack=2, Locals=1, Args_size=1
	getstatic	Field scala/math/BigInt$.MODULE$:Lscala/math/BigInt$;
	iload_0
	invokevirtual	Method scala/math/BigInt$.int2bigInt:(I)Lscala/math/BigInt;
	areturn
  Labels:

public static final scala.math.BigInt probablePrime(int, scala.util.Random);
  Signature: (ILscala/util/Random;)Lscala/math/BigInt;
  Code:
   Stack=3, Locals=2, Args_size=2
	getstatic	Field scala/math/BigInt$.MODULE$:Lscala/math/BigInt$;
	iload_0
	aload_1
	invokevirtual	Method scala/math/BigInt$.probablePrime:(ILscala/util/Random;)Lscala/math/BigInt;
	areturn
  Labels:

public static final scala.math.BigInt apply(java.lang.String, int);
  Signature: (Ljava/lang/String;I)Lscala/math/BigInt;
  Code:
   Stack=3, Locals=2, Args_size=2
	getstatic	Field scala/math/BigInt$.MODULE$:Lscala/math/BigInt$;
	aload_0
	iload_1
	invokevirtual	Method scala/math/BigInt$.apply:(Ljava/lang/String;I)Lscala/math/BigInt;
	areturn
  Labels:

public static final scala.math.BigInt apply(java.lang.String);
  Signature: (Ljava/lang/String;)Lscala/math/BigInt;
  Code:
   Stack=2, Locals=1, Args_size=1
	getstatic	Field scala/math/BigInt$.MODULE$:Lscala/math/BigInt$;
	aload_0
	invokevirtual	Method scala/math/BigInt$.apply:(Ljava/lang/String;)Lscala/math/BigInt;
	areturn
  Labels:

public static final scala.math.BigInt apply(int, scala.util.Random);
  Signature: (ILscala/util/Random;)Lscala/math/BigInt;
  Code:
   Stack=3, Locals=2, Args_size=2
	getstatic	Field scala/math/BigInt$.MODULE$:Lscala/math/BigInt$;
	iload_0
	aload_1
	invokevirtual	Method scala/math/BigInt$.apply:(ILscala/util/Random;)Lscala/math/BigInt;
	areturn
  Labels:

public static final scala.math.BigInt apply(int, int, scala.util.Random);
  Signature: (IILscala/util/Random;)Lscala/math/BigInt;
  Code:
   Stack=4, Locals=3, Args_size=3
	getstatic	Field scala/math/BigInt$.MODULE$:Lscala/math/BigInt$;
	iload_0
	iload_1
	aload_2
	invokevirtual	Method scala/math/BigInt$.apply:(IILscala/util/Random;)Lscala/math/BigInt;
	areturn
  Labels:

public static final scala.math.BigInt apply(int, byte[]);
  Signature: (I[B)Lscala/math/BigInt;
  Code:
   Stack=3, Locals=2, Args_size=2
	getstatic	Field scala/math/BigInt$.MODULE$:Lscala/math/BigInt$;
	iload_0
	aload_1
	invokevirtual	Method scala/math/BigInt$.apply:(I[B)Lscala/math/BigInt;
	areturn
  Labels:

public static final scala.math.BigInt apply(byte[]);
  Signature: ([B)Lscala/math/BigInt;
  Code:
   Stack=2, Locals=1, Args_size=1
	getstatic	Field scala/math/BigInt$.MODULE$:Lscala/math/BigInt$;
	aload_0
	invokevirtual	Method scala/math/BigInt$.apply:([B)Lscala/math/BigInt;
	areturn
  Labels:

public static final scala.math.BigInt apply(long);
  Signature: (J)Lscala/math/BigInt;
  Code:
   Stack=3, Locals=2, Args_size=1
	getstatic	Field scala/math/BigInt$.MODULE$:Lscala/math/BigInt$;
	lload_0
	invokevirtual	Method scala/math/BigInt$.apply:(J)Lscala/math/BigInt;
	areturn
  Labels:

public static final scala.math.BigInt apply(int);
  Signature: (I)Lscala/math/BigInt;
  Code:
   Stack=2, Locals=1, Args_size=1
	getstatic	Field scala/math/BigInt$.MODULE$:Lscala/math/BigInt$;
	iload_0
	invokevirtual	Method scala/math/BigInt$.apply:(I)Lscala/math/BigInt;
	areturn
  Labels:

public static final scala.math.BigInt MaxLong();
  Signature: ()Lscala/math/BigInt;
  Code:
   Stack=1, Locals=0, Args_size=0
	getstatic	Field scala/math/BigInt$.MODULE$:Lscala/math/BigInt$;
	invokevirtual	Method scala/math/BigInt$.MaxLong:()Lscala/math/BigInt;
	areturn
  Labels:

public static final scala.math.BigInt MinLong();
  Signature: ()Lscala/math/BigInt;
  Code:
   Stack=1, Locals=0, Args_size=0
	getstatic	Field scala/math/BigInt$.MODULE$:Lscala/math/BigInt$;
	invokevirtual	Method scala/math/BigInt$.MinLong:()Lscala/math/BigInt;
	areturn
  Labels:

public scala.math.BigInt(java.math.BigInteger);
  Signature: (Ljava/math/BigInteger;)V
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	putfield	Field bigInteger:Ljava/math/BigInteger;
	aload_0
	invokespecial	Method scala/math/ScalaNumber."<init>":()V
	aload_0
	invokestatic	Method scala/math/ScalaNumericConversions$class.$init$:(Lscala/math/ScalaNumericConversions;)V
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      14      0    this       Lscala/math/BigInt;
   0      14      1    bigInteger       Ljava/math/BigInteger;


public java.lang.Object underlying();
  Signature: ()Ljava/lang/Object;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokevirtual	Method underlying:()Ljava/math/BigInteger;
	areturn
  Labels:

public byte[] toByteArray();
  Signature: ()[B
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokevirtual	Method bigInteger:()Ljava/math/BigInteger;
	invokevirtual	Method java/math/BigInteger.toByteArray:()[B
	areturn
  Labels:

public java.lang.String toString(int);
  Signature: (I)Ljava/lang/String;
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	invokevirtual	Method bigInteger:()Ljava/math/BigInteger;
	iload_1
	invokevirtual	Method java/math/BigInteger.toString:(I)Ljava/lang/String;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/math/BigInt;
   0      9      1    radix       I


public java.lang.String toString();
  Signature: ()Ljava/lang/String;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokevirtual	Method bigInteger:()Ljava/math/BigInteger;
	invokevirtual	Method java/math/BigInteger.toString:()Ljava/lang/String;
	areturn
  Labels:

public scala.collection.immutable.NumericRange$Inclusive to(scala.math.BigInt, scala.math.BigInt);
  Signature: (Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/collection/immutable/NumericRange$Inclusive;
  Code:
   Stack=4, Locals=3, Args_size=3
	getstatic	Field scala/collection/immutable/Range$BigInt$.MODULE$:Lscala/collection/immutable/Range$BigInt$;
	aload_0
	aload_1
	aload_2
	invokevirtual	Method scala/collection/immutable/Range$BigInt$.inclusive:(Lscala/math/BigInt;Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/collection/immutable/NumericRange$Inclusive;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    this       Lscala/math/BigInt;
   0      10      1    end       Lscala/math/BigInt;
   0      10      2    step       Lscala/math/BigInt;

  Signature: length = 0x2
   00 6D 

public scala.collection.immutable.NumericRange$Exclusive until(scala.math.BigInt, scala.math.BigInt);
  Signature: (Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/collection/immutable/NumericRange$Exclusive;
  Code:
   Stack=4, Locals=3, Args_size=3
	getstatic	Field scala/collection/immutable/Range$BigInt$.MODULE$:Lscala/collection/immutable/Range$BigInt$;
	aload_0
	aload_1
	aload_2
	invokevirtual	Method scala/collection/immutable/Range$BigInt$.apply:(Lscala/math/BigInt;Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/collection/immutable/NumericRange$Exclusive;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    this       Lscala/math/BigInt;
   0      10      1    end       Lscala/math/BigInt;
   0      10      2    step       Lscala/math/BigInt;

  Signature: length = 0x2
   00 74 

public double doubleValue();
  Signature: ()D
  Code:
   Stack=2, Locals=1, Args_size=1
	aload_0
	invokevirtual	Method bigInteger:()Ljava/math/BigInteger;
	invokevirtual	Method java/math/BigInteger.doubleValue:()D
	dreturn
  Labels:

public float floatValue();
  Signature: ()F
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokevirtual	Method bigInteger:()Ljava/math/BigInteger;
	invokevirtual	Method java/math/BigInteger.floatValue:()F
	freturn
  Labels:

public long longValue();
  Signature: ()J
  Code:
   Stack=2, Locals=1, Args_size=1
	aload_0
	invokevirtual	Method bigInteger:()Ljava/math/BigInteger;
	invokevirtual	Method java/math/BigInteger.longValue:()J
	lreturn
  Labels:

public int intValue();
  Signature: ()I
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokevirtual	Method bigInteger:()Ljava/math/BigInteger;
	invokevirtual	Method java/math/BigInteger.intValue:()I
	ireturn
  Labels:

public char charValue();
  Signature: ()C
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokevirtual	Method intValue:()I
	i2c
	ireturn
  Labels:

public short shortValue();
  Signature: ()S
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokevirtual	Method intValue:()I
	i2s
	ireturn
  Labels:

public byte byteValue();
  Signature: ()B
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokevirtual	Method intValue:()I
	i2b
	ireturn
  Labels:

public boolean isProbablePrime(int);
  Signature: (I)Z
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	invokevirtual	Method bigInteger:()Ljava/math/BigInteger;
	iload_1
	invokevirtual	Method java/math/BigInteger.isProbablePrime:(I)Z
	ireturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/math/BigInt;
   0      9      1    certainty       I


public int bitCount();
  Signature: ()I
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokevirtual	Method bigInteger:()Ljava/math/BigInteger;
	invokevirtual	Method java/math/BigInteger.bitCount:()I
	ireturn
  Labels:

public int bitLength();
  Signature: ()I
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokevirtual	Method bigInteger:()Ljava/math/BigInteger;
	invokevirtual	Method java/math/BigInteger.bitLength:()I
	ireturn
  Labels:

public int lowestSetBit();
  Signature: ()I
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokevirtual	Method bigInteger:()Ljava/math/BigInteger;
	invokevirtual	Method java/math/BigInteger.getLowestSetBit:()I
	ireturn
  Labels:

public scala.math.BigInt flipBit(int);
  Signature: (I)Lscala/math/BigInt;
  Code:
   Stack=4, Locals=2, Args_size=2
	new	class scala/math/BigInt
	dup
	aload_0
	invokevirtual	Method bigInteger:()Ljava/math/BigInteger;
	iload_1
	invokevirtual	Method java/math/BigInteger.flipBit:(I)Ljava/math/BigInteger;
	invokespecial	Method "<init>":(Ljava/math/BigInteger;)V
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      16      0    this       Lscala/math/BigInt;
   0      16      1    n       I


public scala.math.BigInt clearBit(int);
  Signature: (I)Lscala/math/BigInt;
  Code:
   Stack=4, Locals=2, Args_size=2
	new	class scala/math/BigInt
	dup
	aload_0
	invokevirtual	Method bigInteger:()Ljava/math/BigInteger;
	iload_1
	invokevirtual	Method java/math/BigInteger.clearBit:(I)Ljava/math/BigInteger;
	invokespecial	Method "<init>":(Ljava/math/BigInteger;)V
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      16      0    this       Lscala/math/BigInt;
   0      16      1    n       I


public scala.math.BigInt setBit(int);
  Signature: (I)Lscala/math/BigInt;
  Code:
   Stack=4, Locals=2, Args_size=2
	new	class scala/math/BigInt
	dup
	aload_0
	invokevirtual	Method bigInteger:()Ljava/math/BigInteger;
	iload_1
	invokevirtual	Method java/math/BigInteger.setBit:(I)Ljava/math/BigInteger;
	invokespecial	Method "<init>":(Ljava/math/BigInteger;)V
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      16      0    this       Lscala/math/BigInt;
   0      16      1    n       I


public boolean testBit(int);
  Signature: (I)Z
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	invokevirtual	Method bigInteger:()Ljava/math/BigInteger;
	iload_1
	invokevirtual	Method java/math/BigInteger.testBit:(I)Z
	ireturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/math/BigInt;
   0      9      1    n       I


public scala.math.BigInt $tilde();
  Signature: ()Lscala/math/BigInt;
  Code:
   Stack=3, Locals=1, Args_size=1
	new	class scala/math/BigInt
	dup
	aload_0
	invokevirtual	Method bigInteger:()Ljava/math/BigInteger;
	invokevirtual	Method java/math/BigInteger.not:()Ljava/math/BigInteger;
	invokespecial	Method "<init>":(Ljava/math/BigInteger;)V
	areturn
  Labels:

public int signum();
  Signature: ()I
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokevirtual	Method bigInteger:()Ljava/math/BigInteger;
	invokevirtual	Method java/math/BigInteger.signum:()I
	ireturn
  Labels:

public scala.math.BigInt abs();
  Signature: ()Lscala/math/BigInt;
  Code:
   Stack=3, Locals=1, Args_size=1
	new	class scala/math/BigInt
	dup
	aload_0
	invokevirtual	Method bigInteger:()Ljava/math/BigInteger;
	invokevirtual	Method java/math/BigInteger.abs:()Ljava/math/BigInteger;
	invokespecial	Method "<init>":(Ljava/math/BigInteger;)V
	areturn
  Labels:

public scala.math.BigInt unary_$minus();
  Signature: ()Lscala/math/BigInt;
  Code:
   Stack=3, Locals=1, Args_size=1
	new	class scala/math/BigInt
	dup
	aload_0
	invokevirtual	Method bigInteger:()Ljava/math/BigInteger;
	invokevirtual	Method java/math/BigInteger.negate:()Ljava/math/BigInteger;
	invokespecial	Method "<init>":(Ljava/math/BigInteger;)V
	areturn
  Labels:

public scala.math.BigInt modInverse(scala.math.BigInt);
  Signature: (Lscala/math/BigInt;)Lscala/math/BigInt;
  Code:
   Stack=4, Locals=2, Args_size=2
	new	class scala/math/BigInt
	dup
	aload_0
	invokevirtual	Method bigInteger:()Ljava/math/BigInteger;
	aload_1
	invokevirtual	Method bigInteger:()Ljava/math/BigInteger;
	invokevirtual	Method java/math/BigInteger.modInverse:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
	invokespecial	Method "<init>":(Ljava/math/BigInteger;)V
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      19      0    this       Lscala/math/BigInt;
   0      19      1    m       Lscala/math/BigInt;


public scala.math.BigInt modPow(scala.math.BigInt, scala.math.BigInt);
  Signature: (Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
  Code:
   Stack=5, Locals=3, Args_size=3
	new	class scala/math/BigInt
	dup
	aload_0
	invokevirtual	Method bigInteger:()Ljava/math/BigInteger;
	aload_1
	invokevirtual	Method bigInteger:()Ljava/math/BigInteger;
	aload_2
	invokevirtual	Method bigInteger:()Ljava/math/BigInteger;
	invokevirtual	Method java/math/BigInteger.modPow:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
	invokespecial	Method "<init>":(Ljava/math/BigInteger;)V
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      23      0    this       Lscala/math/BigInt;
   0      23      1    exp       Lscala/math/BigInt;
   0      23      2    m       Lscala/math/BigInt;


public scala.math.BigInt pow(int);
  Signature: (I)Lscala/math/BigInt;
  Code:
   Stack=4, Locals=2, Args_size=2
	new	class scala/math/BigInt
	dup
	aload_0
	invokevirtual	Method bigInteger:()Ljava/math/BigInteger;
	iload_1
	invokevirtual	Method java/math/BigInteger.pow:(I)Ljava/math/BigInteger;
	invokespecial	Method "<init>":(Ljava/math/BigInteger;)V
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      16      0    this       Lscala/math/BigInt;
   0      16      1    exp       I


public scala.math.BigInt max(scala.math.BigInt);
  Signature: (Lscala/math/BigInt;)Lscala/math/BigInt;
  Code:
   Stack=4, Locals=2, Args_size=2
	new	class scala/math/BigInt
	dup
	aload_0
	invokevirtual	Method bigInteger:()Ljava/math/BigInteger;
	aload_1
	invokevirtual	Method bigInteger:()Ljava/math/BigInteger;
	invokevirtual	Method java/math/BigInteger.max:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
	invokespecial	Method "<init>":(Ljava/math/BigInteger;)V
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      19      0    this       Lscala/math/BigInt;
   0      19      1    that       Lscala/math/BigInt;


public scala.math.BigInt min(scala.math.BigInt);
  Signature: (Lscala/math/BigInt;)Lscala/math/BigInt;
  Code:
   Stack=4, Locals=2, Args_size=2
	new	class scala/math/BigInt
	dup
	aload_0
	invokevirtual	Method bigInteger:()Ljava/math/BigInteger;
	aload_1
	invokevirtual	Method bigInteger:()Ljava/math/BigInteger;
	invokevirtual	Method java/math/BigInteger.min:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
	invokespecial	Method "<init>":(Ljava/math/BigInteger;)V
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      19      0    this       Lscala/math/BigInt;
   0      19      1    that       Lscala/math/BigInt;


public scala.math.BigInt mod(scala.math.BigInt);
  Signature: (Lscala/math/BigInt;)Lscala/math/BigInt;
  Code:
   Stack=4, Locals=2, Args_size=2
	new	class scala/math/BigInt
	dup
	aload_0
	invokevirtual	Method bigInteger:()Ljava/math/BigInteger;
	aload_1
	invokevirtual	Method bigInteger:()Ljava/math/BigInteger;
	invokevirtual	Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
	invokespecial	Method "<init>":(Ljava/math/BigInteger;)V
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      19      0    this       Lscala/math/BigInt;
   0      19      1    that       Lscala/math/BigInt;


public scala.math.BigInt gcd(scala.math.BigInt);
  Signature: (Lscala/math/BigInt;)Lscala/math/BigInt;
  Code:
   Stack=4, Locals=2, Args_size=2
	new	class scala/math/BigInt
	dup
	aload_0
	invokevirtual	Method bigInteger:()Ljava/math/BigInteger;
	aload_1
	invokevirtual	Method bigInteger:()Ljava/math/BigInteger;
	invokevirtual	Method java/math/BigInteger.gcd:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
	invokespecial	Method "<init>":(Ljava/math/BigInteger;)V
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      19      0    this       Lscala/math/BigInt;
   0      19      1    that       Lscala/math/BigInt;


public scala.math.BigInt $amp$tilde(scala.math.BigInt);
  Signature: (Lscala/math/BigInt;)Lscala/math/BigInt;
  Code:
   Stack=4, Locals=2, Args_size=2
	new	class scala/math/BigInt
	dup
	aload_0
	invokevirtual	Method bigInteger:()Ljava/math/BigInteger;
	aload_1
	invokevirtual	Method bigInteger:()Ljava/math/BigInteger;
	invokevirtual	Method java/math/BigInteger.andNot:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
	invokespecial	Method "<init>":(Ljava/math/BigInteger;)V
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      19      0    this       Lscala/math/BigInt;
   0      19      1    that       Lscala/math/BigInt;


public scala.math.BigInt $up(scala.math.BigInt);
  Signature: (Lscala/math/BigInt;)Lscala/math/BigInt;
  Code:
   Stack=4, Locals=2, Args_size=2
	new	class scala/math/BigInt
	dup
	aload_0
	invokevirtual	Method bigInteger:()Ljava/math/BigInteger;
	aload_1
	invokevirtual	Method bigInteger:()Ljava/math/BigInteger;
	invokevirtual	Method java/math/BigInteger.xor:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
	invokespecial	Method "<init>":(Ljava/math/BigInteger;)V
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      19      0    this       Lscala/math/BigInt;
   0      19      1    that       Lscala/math/BigInt;


public scala.math.BigInt $bar(scala.math.BigInt);
  Signature: (Lscala/math/BigInt;)Lscala/math/BigInt;
  Code:
   Stack=4, Locals=2, Args_size=2
	new	class scala/math/BigInt
	dup
	aload_0
	invokevirtual	Method bigInteger:()Ljava/math/BigInteger;
	aload_1
	invokevirtual	Method bigInteger:()Ljava/math/BigInteger;
	invokevirtual	Method java/math/BigInteger.or:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
	invokespecial	Method "<init>":(Ljava/math/BigInteger;)V
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      19      0    this       Lscala/math/BigInt;
   0      19      1    that       Lscala/math/BigInt;


public scala.math.BigInt $amp(scala.math.BigInt);
  Signature: (Lscala/math/BigInt;)Lscala/math/BigInt;
  Code:
   Stack=4, Locals=2, Args_size=2
	new	class scala/math/BigInt
	dup
	aload_0
	invokevirtual	Method bigInteger:()Ljava/math/BigInteger;
	aload_1
	invokevirtual	Method bigInteger:()Ljava/math/BigInteger;
	invokevirtual	Method java/math/BigInteger.and:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
	invokespecial	Method "<init>":(Ljava/math/BigInteger;)V
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      19      0    this       Lscala/math/BigInt;
   0      19      1    that       Lscala/math/BigInt;


public scala.math.BigInt $greater$greater(int);
  Signature: (I)Lscala/math/BigInt;
  Code:
   Stack=4, Locals=2, Args_size=2
	new	class scala/math/BigInt
	dup
	aload_0
	invokevirtual	Method bigInteger:()Ljava/math/BigInteger;
	iload_1
	invokevirtual	Method java/math/BigInteger.shiftRight:(I)Ljava/math/BigInteger;
	invokespecial	Method "<init>":(Ljava/math/BigInteger;)V
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      16      0    this       Lscala/math/BigInt;
   0      16      1    n       I


public scala.math.BigInt $less$less(int);
  Signature: (I)Lscala/math/BigInt;
  Code:
   Stack=4, Locals=2, Args_size=2
	new	class scala/math/BigInt
	dup
	aload_0
	invokevirtual	Method bigInteger:()Ljava/math/BigInteger;
	iload_1
	invokevirtual	Method java/math/BigInteger.shiftLeft:(I)Ljava/math/BigInteger;
	invokespecial	Method "<init>":(Ljava/math/BigInteger;)V
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      16      0    this       Lscala/math/BigInt;
   0      16      1    n       I


public scala.Tuple2 $div$percent(scala.math.BigInt);
  Signature: (Lscala/math/BigInt;)Lscala/Tuple2;
  Code:
   Stack=7, Locals=3, Args_size=2
	aload_0
	invokevirtual	Method bigInteger:()Ljava/math/BigInteger;
	aload_1
	invokevirtual	Method bigInteger:()Ljava/math/BigInteger;
	invokevirtual	Method java/math/BigInteger.divideAndRemainder:(Ljava/math/BigInteger;)[Ljava/math/BigInteger;
	astore_2
	new	class scala/Tuple2
	dup
	new	class scala/math/BigInt
	dup
	aload_2
	iconst_0
	aaload
	invokespecial	Method "<init>":(Ljava/math/BigInteger;)V
	new	class scala/math/BigInt
	dup
	aload_2
	iconst_1
	aaload
	invokespecial	Method "<init>":(Ljava/math/BigInteger;)V
	invokespecial	Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      40      0    this       Lscala/math/BigInt;
   0      40      1    that       Lscala/math/BigInt;
   12      27      2    dr       [Ljava/math/BigInteger;

  Signature: length = 0x2
   00 FFFFFFFA 

public scala.math.BigInt $percent(scala.math.BigInt);
  Signature: (Lscala/math/BigInt;)Lscala/math/BigInt;
  Code:
   Stack=4, Locals=2, Args_size=2
	new	class scala/math/BigInt
	dup
	aload_0
	invokevirtual	Method bigInteger:()Ljava/math/BigInteger;
	aload_1
	invokevirtual	Method bigInteger:()Ljava/math/BigInteger;
	invokevirtual	Method java/math/BigInteger.remainder:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
	invokespecial	Method "<init>":(Ljava/math/BigInteger;)V
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      19      0    this       Lscala/math/BigInt;
   0      19      1    that       Lscala/math/BigInt;


public scala.math.BigInt $div(scala.math.BigInt);
  Signature: (Lscala/math/BigInt;)Lscala/math/BigInt;
  Code:
   Stack=4, Locals=2, Args_size=2
	new	class scala/math/BigInt
	dup
	aload_0
	invokevirtual	Method bigInteger:()Ljava/math/BigInteger;
	aload_1
	invokevirtual	Method bigInteger:()Ljava/math/BigInteger;
	invokevirtual	Method java/math/BigInteger.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
	invokespecial	Method "<init>":(Ljava/math/BigInteger;)V
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      19      0    this       Lscala/math/BigInt;
   0      19      1    that       Lscala/math/BigInt;


public scala.math.BigInt $times(scala.math.BigInt);
  Signature: (Lscala/math/BigInt;)Lscala/math/BigInt;
  Code:
   Stack=4, Locals=2, Args_size=2
	new	class scala/math/BigInt
	dup
	aload_0
	invokevirtual	Method bigInteger:()Ljava/math/BigInteger;
	aload_1
	invokevirtual	Method bigInteger:()Ljava/math/BigInteger;
	invokevirtual	Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
	invokespecial	Method "<init>":(Ljava/math/BigInteger;)V
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      19      0    this       Lscala/math/BigInt;
   0      19      1    that       Lscala/math/BigInt;


public scala.math.BigInt $minus(scala.math.BigInt);
  Signature: (Lscala/math/BigInt;)Lscala/math/BigInt;
  Code:
   Stack=4, Locals=2, Args_size=2
	new	class scala/math/BigInt
	dup
	aload_0
	invokevirtual	Method bigInteger:()Ljava/math/BigInteger;
	aload_1
	invokevirtual	Method bigInteger:()Ljava/math/BigInteger;
	invokevirtual	Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
	invokespecial	Method "<init>":(Ljava/math/BigInteger;)V
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      19      0    this       Lscala/math/BigInt;
   0      19      1    that       Lscala/math/BigInt;


public scala.math.BigInt $plus(scala.math.BigInt);
  Signature: (Lscala/math/BigInt;)Lscala/math/BigInt;
  Code:
   Stack=4, Locals=2, Args_size=2
	new	class scala/math/BigInt
	dup
	aload_0
	invokevirtual	Method bigInteger:()Ljava/math/BigInteger;
	aload_1
	invokevirtual	Method bigInteger:()Ljava/math/BigInteger;
	invokevirtual	Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
	invokespecial	Method "<init>":(Ljava/math/BigInteger;)V
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      19      0    this       Lscala/math/BigInt;
   0      19      1    that       Lscala/math/BigInt;


public boolean $greater(scala.math.BigInt);
  Signature: (Lscala/math/BigInt;)Z
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokevirtual	Method compare:(Lscala/math/BigInt;)I
	iconst_0
	if_icmple	l1 // iconst_0
	iconst_1
	goto	l2 // ireturn
l1	iconst_0
l2	ireturn
  Labels:
   	l1 = 13 // iconst_0
   	l2 = 14 // ireturn
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      15      0    this       Lscala/math/BigInt;
   0      15      1    that       Lscala/math/BigInt;


public boolean $less(scala.math.BigInt);
  Signature: (Lscala/math/BigInt;)Z
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokevirtual	Method compare:(Lscala/math/BigInt;)I
	iconst_0
	if_icmpge	l1 // iconst_0
	iconst_1
	goto	l2 // ireturn
l1	iconst_0
l2	ireturn
  Labels:
   	l1 = 13 // iconst_0
   	l2 = 14 // ireturn
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      15      0    this       Lscala/math/BigInt;
   0      15      1    that       Lscala/math/BigInt;


public boolean $greater$eq(scala.math.BigInt);
  Signature: (Lscala/math/BigInt;)Z
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokevirtual	Method compare:(Lscala/math/BigInt;)I
	iconst_0
	if_icmplt	l1 // iconst_0
	iconst_1
	goto	l2 // ireturn
l1	iconst_0
l2	ireturn
  Labels:
   	l1 = 13 // iconst_0
   	l2 = 14 // ireturn
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      15      0    this       Lscala/math/BigInt;
   0      15      1    that       Lscala/math/BigInt;


public boolean $less$eq(scala.math.BigInt);
  Signature: (Lscala/math/BigInt;)Z
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokevirtual	Method compare:(Lscala/math/BigInt;)I
	iconst_0
	if_icmpgt	l1 // iconst_0
	iconst_1
	goto	l2 // ireturn
l1	iconst_0
l2	ireturn
  Labels:
   	l1 = 13 // iconst_0
   	l2 = 14 // ireturn
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      15      0    this       Lscala/math/BigInt;
   0      15      1    that       Lscala/math/BigInt;


public int compare(scala.math.BigInt);
  Signature: (Lscala/math/BigInt;)I
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	invokevirtual	Method bigInteger:()Ljava/math/BigInteger;
	aload_1
	invokevirtual	Method bigInteger:()Ljava/math/BigInteger;
	invokevirtual	Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
	ireturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      12      0    this       Lscala/math/BigInt;
   0      12      1    that       Lscala/math/BigInt;


public boolean equals(scala.math.BigInt);
  Signature: (Lscala/math/BigInt;)Z
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokevirtual	Method compare:(Lscala/math/BigInt;)I
	iconst_0
	if_icmpne	l1 // iconst_0
	iconst_1
	goto	l2 // ireturn
l1	iconst_0
l2	ireturn
  Labels:
   	l1 = 13 // iconst_0
   	l2 = 14 // ireturn
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      15      0    this       Lscala/math/BigInt;
   0      15      1    that       Lscala/math/BigInt;


public java.math.BigInteger underlying();
  Signature: ()Ljava/math/BigInteger;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokevirtual	Method bigInteger:()Ljava/math/BigInteger;
	areturn
  Labels:

public boolean isWhole();
  Signature: ()Z
  Code:
   Stack=1, Locals=1, Args_size=1
	iconst_1
	ireturn
  Labels:

public boolean equals(java.lang.Object);
  Signature: (Ljava/lang/Object;)Z
  Code:
   Stack=4, Locals=4, Args_size=2
	aload_1
	instanceof	class scala/math/BigInt
	ifeq	l1 // aload_1
	aload_1
	checkcast	class scala/math/BigInt
	astore_2
	aload_0
	aload_2
	invokevirtual	Method equals:(Lscala/math/BigInt;)Z
	goto	l2 // ireturn
l1	aload_1
	instanceof	class scala/math/BigDecimal
	ifeq	l3 // aload_0
	aload_1
	checkcast	class scala/math/BigDecimal
	astore_3
	aload_3
	invokevirtual	Method scala/math/BigDecimal.toBigIntExact:()Lscala/Option;
	new	class scala/math/BigInt$$anonfun$equals$1
	dup
	aload_0
	invokespecial	Method scala/math/BigInt$$anonfun$equals$1."<init>":(Lscala/math/BigInt;)V
	invokevirtual	Method scala/Option.exists:(Lscala/Function1;)Z
	goto	l2 // ireturn
l3	aload_0
	aload_1
	invokeinterface	InterfaceMethod scala/math/ScalaNumericConversions.unifiedPrimitiveEquals:(Ljava/lang/Object;)Z
l2	ireturn
  Labels:
   	l1 = 20 // aload_1
   	l3 = 50 // aload_0
   	l2 = 57 // ireturn
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      58      0    this       Lscala/math/BigInt;
   0      58      1    that       Ljava/lang/Object;
   12      5      2    temp2       Lscala/math/BigInt;
   32      15      3    temp3       Lscala/math/BigDecimal;


public int hashCode();
  Signature: ()I
  Code:
   Stack=2, Locals=1, Args_size=1
	aload_0
	getstatic	Field scala/math/BigInt$.MODULE$:Lscala/math/BigInt$;
	invokevirtual	Method scala/math/BigInt$.MinLong:()Lscala/math/BigInt;
	invokevirtual	Method $greater$eq:(Lscala/math/BigInt;)Z
	ifeq	l1 // aload_0
	aload_0
	getstatic	Field scala/math/BigInt$.MODULE$:Lscala/math/BigInt$;
	invokevirtual	Method scala/math/BigInt$.MaxLong:()Lscala/math/BigInt;
	invokevirtual	Method $less$eq:(Lscala/math/BigInt;)Z
	ifeq	l1 // aload_0
	aload_0
	invokeinterface	InterfaceMethod scala/math/ScalaNumericConversions.unifiedPrimitiveHashcode:()I
	goto	l2 // ireturn
l1	aload_0
	invokevirtual	Method bigInteger:()Ljava/math/BigInteger;
	invokevirtual	Method java/math/BigInteger.hashCode:()I
l2	ireturn
  Labels:
   	l1 = 35 // aload_0
   	l2 = 42 // ireturn

public java.math.BigInteger bigInteger();
  Signature: ()Ljava/math/BigInteger;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field bigInteger:Ljava/math/BigInteger;
	areturn
  Labels:

public scala.math.BigInt until$default$2();
  Signature: ()Lscala/math/BigInt;
  Code:
   Stack=2, Locals=1, Args_size=1
	getstatic	Field scala/math/BigInt$.MODULE$:Lscala/math/BigInt$;
	iconst_1
	invokevirtual	Method scala/math/BigInt$.apply:(I)Lscala/math/BigInt;
	areturn
  Labels:

public scala.math.BigInt to$default$2();
  Signature: ()Lscala/math/BigInt;
  Code:
   Stack=2, Locals=1, Args_size=1
	getstatic	Field scala/math/BigInt$.MODULE$:Lscala/math/BigInt$;
	iconst_1
	invokevirtual	Method scala/math/BigInt$.apply:(I)Lscala/math/BigInt;
	areturn
  Labels:

public boolean unifiedPrimitiveEquals(java.lang.Object);
  Signature: (Ljava/lang/Object;)Z
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokestatic	Method scala/math/ScalaNumericConversions$class.unifiedPrimitiveEquals:(Lscala/math/ScalaNumericConversions;Ljava/lang/Object;)Z
	ireturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/math/BigInt;
   0      6      1    x       Ljava/lang/Object;


public int unifiedPrimitiveHashcode();
  Signature: ()I
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokestatic	Method scala/math/ScalaNumericConversions$class.unifiedPrimitiveHashcode:(Lscala/math/ScalaNumericConversions;)I
	ireturn
  Labels:

public boolean isValidChar();
  Signature: ()Z
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokestatic	Method scala/math/ScalaNumericConversions$class.isValidChar:(Lscala/math/ScalaNumericConversions;)Z
	ireturn
  Labels:

public boolean isValidInt();
  Signature: ()Z
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokestatic	Method scala/math/ScalaNumericConversions$class.isValidInt:(Lscala/math/ScalaNumericConversions;)Z
	ireturn
  Labels:

public boolean isValidShort();
  Signature: ()Z
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokestatic	Method scala/math/ScalaNumericConversions$class.isValidShort:(Lscala/math/ScalaNumericConversions;)Z
	ireturn
  Labels:

public boolean isValidByte();
  Signature: ()Z
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokestatic	Method scala/math/ScalaNumericConversions$class.isValidByte:(Lscala/math/ScalaNumericConversions;)Z
	ireturn
  Labels:

public double toDouble();
  Signature: ()D
  Code:
   Stack=2, Locals=1, Args_size=1
	aload_0
	invokestatic	Method scala/math/ScalaNumericConversions$class.toDouble:(Lscala/math/ScalaNumericConversions;)D
	dreturn
  Labels:

public float toFloat();
  Signature: ()F
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokestatic	Method scala/math/ScalaNumericConversions$class.toFloat:(Lscala/math/ScalaNumericConversions;)F
	freturn
  Labels:

public long toLong();
  Signature: ()J
  Code:
   Stack=2, Locals=1, Args_size=1
	aload_0
	invokestatic	Method scala/math/ScalaNumericConversions$class.toLong:(Lscala/math/ScalaNumericConversions;)J
	lreturn
  Labels:

public int toInt();
  Signature: ()I
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokestatic	Method scala/math/ScalaNumericConversions$class.toInt:(Lscala/math/ScalaNumericConversions;)I
	ireturn
  Labels:

public short toShort();
  Signature: ()S
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokestatic	Method scala/math/ScalaNumericConversions$class.toShort:(Lscala/math/ScalaNumericConversions;)S
	ireturn
  Labels:

public byte toByte();
  Signature: ()B
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokestatic	Method scala/math/ScalaNumericConversions$class.toByte:(Lscala/math/ScalaNumericConversions;)B
	ireturn
  Labels:

public char toChar();
  Signature: ()C
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokestatic	Method scala/math/ScalaNumericConversions$class.toChar:(Lscala/math/ScalaNumericConversions;)C
	ireturn
  Labels:

}

