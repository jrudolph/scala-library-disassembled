Compiled from "BigInt.scala"
public class scala.math.BigInt extends scala.math.ScalaNumber implements scala.math.ScalaNumericConversions,scala.ScalaObject,java.io.Serializable
  SourceFile: "BigInt.scala"
  ScalaSig: length = 0xBDD
   05 00 FFFFFF83 18 07 05 01 02 FFFFFF88 02 07 01 06 42 69 67
   49 6E 74 0A 02 03 04 01 04 6D 61 74 68 0A 01 05
   01 05 73 63 61 6C 61 03 00 10 02 08 09 0D 01 02
   06 08 0A 02 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF88 02 0B 02 06 42 69 67 49
   6E 74 13 03 09 0C 14 10 02 0D 12 0D 01 0E 0A 02
   0F 10 01 04 6C 61 6E 67 0A 01 11 01 04 6A 61 76
   61 09 02 13 0E 02 06 4F 62 6A 65 63 74 10 02 15
   16 0D 01 04 09 02 17 04 02 0B 53 63 61 6C 61 4F
   62 6A 65 63 74 08 05 19 09 FFFFFF84 00 1A 01 06 3C 69
   6E 69 74 3E 14 01 07 08 07 1C 09 FFFFFFC2 FFFFFF80 FFFFFF84 04 1D
   01 09 6D 69 6E 43 61 63 68 65 64 15 01 1E 10 02
   15 1F 09 02 20 04 02 03 49 6E 74 08 06 22 09 FFFFFFA0
   FFFFFF80 04 1E 01 0A 6D 69 6E 43 61 63 68 65 64 20 08
   07 24 09 FFFFFFC2 FFFFFF80 FFFFFF84 04 1D 01 09 6D 61 78 43 61 63
   68 65 64 08 06 26 09 FFFFFFA0 FFFFFF80 04 1E 01 0A 6D 61 78
   43 61 63 68 65 64 20 08 07 28 09 FFFFFFC2 FFFFFF80 FFFFFF84 04 29
   01 05 63 61 63 68 65 15 01 2A 10 03 15 2B 2D 09
   02 2C 04 02 05 41 72 72 61 79 10 02 08 2E 06 08
   0A 02 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF80 00 2F 13 04 2E 30 33 14 10 02
   08 31 09 02 32 02 02 0B 53 63 61 6C 61 4E 75 6D
   62 65 72 10 02 08 34 09 02 35 02 02 17 53 63 61
   6C 61 4E 75 6D 65 72 69 63 43 6F 6E 76 65 72 73
   69 6F 6E 73 08 08 37 2E FFFFFF82 FFFFFFC2 FFFFFF80 FFFFFF84 00 38 01 0A
   62 69 67 49 6E 74 65 67 65 72 15 01 39 10 02 3A
   3C 0D 01 3B 0A 02 03 10 09 02 3D 3B 02 0A 42 69
   67 49 6E 74 65 67 65 72 08 08 3F 2E FFFFFF82 FFFFFF80 FFFFFFA0 FFFFFF80
   04 39 01 0B 62 69 67 49 6E 74 65 67 65 72 20 08
   05 19 2E FFFFFF84 00 41 14 02 2D 42 08 05 37 40 FFFFFFC0 00
   39 08 05 44 2E FFFFFF84 20 45 01 08 68 61 73 68 43 6F
   64 65 14 01 1E 08 05 47 2E FFFFFF84 20 48 01 06 65 71
   75 61 6C 73 14 02 49 4C 10 02 15 4A 09 02 4B 04
   02 07 42 6F 6F 6C 65 61 6E 08 05 4D 46 FFFFFFC0 00 4E
   01 04 74 68 61 74 10 02 15 4F 09 02 50 04 02 03
   41 6E 79 08 06 52 2E FFFFFF84 08 02 53 01 07 69 73 57
   68 6F 6C 65 14 01 49 08 05 55 2E FFFFFF84 00 56 01 0A
   75 6E 64 65 72 6C 79 69 6E 67 14 01 39 08 05 47
   2E FFFFFF84 00 58 14 02 49 59 08 05 4D 57 FFFFFFC0 00 2D 08
   05 5B 2E FFFFFF84 00 5C 01 07 63 6F 6D 70 61 72 65 14
   02 1E 5D 08 05 4D 5A FFFFFFC0 00 2D 08 05 5F 2E FFFFFF84 00
   60 01 08 24 6C 65 73 73 24 65 71 14 02 49 61 08
   05 4D 5E FFFFFFC0 00 2D 08 05 63 2E FFFFFF84 00 64 01 0B 24
   67 72 65 61 74 65 72 24 65 71 14 02 49 65 08 05
   4D 62 FFFFFFC0 00 2D 08 05 67 2E FFFFFF84 00 68 01 05 24 6C
   65 73 73 14 02 49 69 08 05 4D 66 FFFFFFC0 00 2D 08 05
   6B 2E FFFFFF84 00 6C 01 08 24 67 72 65 61 74 65 72 14
   02 49 6D 08 05 4D 6A FFFFFFC0 00 2D 08 05 6F 2E FFFFFF84 00
   70 01 05 24 70 6C 75 73 14 02 2D 71 08 05 4D 6E
   FFFFFFC0 00 2D 08 05 73 2E FFFFFF84 00 74 01 06 24 6D 69 6E
   75 73 14 02 2D 75 08 05 4D 72 FFFFFFC0 00 2D 08 05 77
   2E FFFFFF84 00 78 01 06 24 74 69 6D 65 73 14 02 2D 79
   08 05 4D 76 FFFFFFC0 00 2D 08 05 7B 2E FFFFFF84 00 7C 01 04
   24 64 69 76 14 02 2D 7D 08 05 4D 7A FFFFFFC0 00 2D 08
   06 7F 2E FFFFFF84 00 FFFFFF81 00 01 08 24 70 65 72 63 65 6E
   74 14 03 2D FFFFFF81 01 08 05 4D 7E FFFFFFC0 00 2D 08 07 FFFFFF81
   03 2E FFFFFF84 00 FFFFFF81 04 01 0C 24 64 69 76 24 70 65 72
   63 65 6E 74 14 04 FFFFFF81 05 FFFFFF81 08 10 05 15 FFFFFF81 06 2D
   2D 09 03 FFFFFF81 07 04 02 06 54 75 70 6C 65 32 08 06
   4D FFFFFF81 02 FFFFFFC0 00 2D 08 07 FFFFFF81 0A 2E FFFFFF84 00 FFFFFF81 0B 01
   0A 24 6C 65 73 73 24 6C 65 73 73 14 03 2D FFFFFF81 0C
   08 07 FFFFFF81 0D FFFFFF81 09 FFFFFFC0 00 1E 01 01 6E 08 07 FFFFFF81 0F
   2E FFFFFF84 00 FFFFFF81 10 01 10 24 67 72 65 61 74 65 72 24
   67 72 65 61 74 65 72 14 03 2D FFFFFF81 11 08 07 FFFFFF81 0D
   FFFFFF81 0E FFFFFFC0 00 1E 08 07 FFFFFF81 13 2E FFFFFF84 00 FFFFFF81 14 01 04
   24 61 6D 70 14 03 2D FFFFFF81 15 08 06 4D FFFFFF81 12 FFFFFFC0 00
   2D 08 07 FFFFFF81 17 2E FFFFFF84 00 FFFFFF81 18 01 04 24 62 61 72
   14 03 2D FFFFFF81 19 08 06 4D FFFFFF81 16 FFFFFFC0 00 2D 08 07 FFFFFF81
   1B 2E FFFFFF84 00 FFFFFF81 1C 01 03 24 75 70 14 03 2D FFFFFF81 1D
   08 06 4D FFFFFF81 1A FFFFFFC0 00 2D 08 07 FFFFFF81 1F 2E FFFFFF84 00 FFFFFF81
   20 01 0A 24 61 6D 70 24 74 69 6C 64 65 14 03 2D
   FFFFFF81 21 08 06 4D FFFFFF81 1E FFFFFFC0 00 2D 08 07 FFFFFF81 23 2E FFFFFF84
   00 FFFFFF81 24 01 03 67 63 64 14 03 2D FFFFFF81 25 08 06 4D
   FFFFFF81 22 FFFFFFC0 00 2D 08 07 FFFFFF81 27 2E FFFFFF84 00 FFFFFF81 28 01 03
   6D 6F 64 14 03 2D FFFFFF81 29 08 06 4D FFFFFF81 26 FFFFFFC0 00 2D
   08 07 FFFFFF81 2B 2E FFFFFF84 00 FFFFFF81 2C 01 03 6D 69 6E 14 03
   2D FFFFFF81 2D 08 06 4D FFFFFF81 2A FFFFFFC0 00 2D 08 07 FFFFFF81 2F 2E
   FFFFFF84 00 FFFFFF81 30 01 03 6D 61 78 14 03 2D FFFFFF81 31 08 06
   4D FFFFFF81 2E FFFFFFC0 00 2D 08 07 FFFFFF81 33 2E FFFFFF84 00 FFFFFF81 34 01
   03 70 6F 77 14 03 2D FFFFFF81 35 08 07 FFFFFF81 36 FFFFFF81 32 FFFFFFC0
   00 1E 01 03 65 78 70 08 07 FFFFFF81 38 2E FFFFFF84 00 FFFFFF81 39
   01 06 6D 6F 64 50 6F 77 14 05 2D FFFFFF81 3A FFFFFF81 3B 08
   07 FFFFFF81 36 FFFFFF81 37 FFFFFFC0 00 2D 08 07 FFFFFF81 3C FFFFFF81 37 FFFFFFC0 00
   2D 01 01 6D 08 07 FFFFFF81 3E 2E FFFFFF84 00 FFFFFF81 3F 01 0A 6D
   6F 64 49 6E 76 65 72 73 65 14 03 2D FFFFFF81 40 08 07
   FFFFFF81 3C FFFFFF81 3D FFFFFFC0 00 2D 08 07 FFFFFF81 42 2E FFFFFF84 00 FFFFFF81 43
   01 0C 75 6E 61 72 79 5F 24 6D 69 6E 75 73 15 01
   2D 08 07 FFFFFF81 45 2E FFFFFF84 00 FFFFFF81 43 01 03 61 62 73 08
   06 FFFFFF81 47 2E FFFFFF84 00 1D 01 06 73 69 67 6E 75 6D 08
   07 FFFFFF81 49 2E FFFFFF84 00 FFFFFF81 43 01 06 24 74 69 6C 64 65
   08 07 FFFFFF81 4B 2E FFFFFF84 00 FFFFFF81 4C 01 07 74 65 73 74 42
   69 74 14 03 49 FFFFFF81 4D 08 07 FFFFFF81 0D FFFFFF81 4A FFFFFFC0 00 1E
   08 07 FFFFFF81 4F 2E FFFFFF84 00 FFFFFF81 50 01 06 73 65 74 42 69
   74 14 03 2D FFFFFF81 51 08 07 FFFFFF81 0D FFFFFF81 4E FFFFFFC0 00 1E 08
   07 FFFFFF81 53 2E FFFFFF84 00 FFFFFF81 54 01 08 63 6C 65 61 72 42
   69 74 14 03 2D FFFFFF81 55 08 07 FFFFFF81 0D FFFFFF81 52 FFFFFFC0 00 1E
   08 07 FFFFFF81 57 2E FFFFFF84 00 FFFFFF81 58 01 07 66 6C 69 70 42
   69 74 14 03 2D FFFFFF81 59 08 07 FFFFFF81 0D FFFFFF81 56 FFFFFFC0 00 1E
   08 06 FFFFFF81 5B 2E FFFFFF84 00 1D 01 0C 6C 6F 77 65 73 74
   53 65 74 42 69 74 08 06 FFFFFF81 5D 2E FFFFFF84 00 1D 01 09
   62 69 74 4C 65 6E 67 74 68 08 06 FFFFFF81 5F 2E FFFFFF84 00
   1D 01 08 62 69 74 43 6F 75 6E 74 08 07 FFFFFF81 61 2E
   FFFFFF84 00 FFFFFF81 62 01 0F 69 73 50 72 6F 62 61 62 6C 65
   50 72 69 6D 65 14 03 49 FFFFFF81 63 08 07 FFFFFF81 64 FFFFFF81 60
   FFFFFFC0 00 1E 01 09 63 65 72 74 61 69 6E 74 79 08 07
   FFFFFF81 66 2E FFFFFF84 20 FFFFFF81 67 01 09 62 79 74 65 56 61 6C
   75 65 14 02 FFFFFF81 68 10 03 15 FFFFFF81 69 09 03 FFFFFF81 6A 04
   02 04 42 79 74 65 08 07 FFFFFF81 6C 2E FFFFFF84 20 FFFFFF81 6D 01
   0A 73 68 6F 72 74 56 61 6C 75 65 14 02 FFFFFF81 6E 10
   03 15 FFFFFF81 6F 09 03 FFFFFF81 70 04 02 05 53 68 6F 72 74
   08 07 FFFFFF81 72 2E FFFFFF84 00 FFFFFF81 73 01 09 63 68 61 72 56
   61 6C 75 65 15 02 FFFFFF81 74 10 03 15 FFFFFF81 75 09 03 FFFFFF81
   76 04 02 04 43 68 61 72 08 06 FFFFFF81 78 2E FFFFFF84 00 45
   01 08 69 6E 74 56 61 6C 75 65 08 07 FFFFFF81 7A 2E FFFFFF84
   00 FFFFFF81 7B 01 09 6C 6F 6E 67 56 61 6C 75 65 14 02
   FFFFFF81 7C 10 03 15 FFFFFF81 7D 09 03 FFFFFF81 7E 04 02 04 4C 6F
   6E 67 08 07 FFFFFF82 00 2E FFFFFF84 00 FFFFFF82 01 01 0A 66 6C 6F
   61 74 56 61 6C 75 65 14 02 FFFFFF82 02 10 03 15 FFFFFF82 03
   09 03 FFFFFF82 04 04 02 05 46 6C 6F 61 74 08 07 FFFFFF82 06
   2E FFFFFF84 00 FFFFFF82 07 01 0B 64 6F 75 62 6C 65 56 61 6C
   75 65 14 02 FFFFFF82 08 10 03 15 FFFFFF82 09 09 03 FFFFFF82 0A 04
   02 06 44 6F 75 62 6C 65 08 07 FFFFFF82 0C 2E FFFFFF84 00 FFFFFF82
   0D 01 05 75 6E 74 69 6C 14 06 FFFFFF82 0E FFFFFF82 25 FFFFFF82 27
   10 06 FFFFFF82 0F FFFFFF82 17 FFFFFF82 1A 0E 04 FFFFFF82 10 FFFFFF82 15 0D 02
   FFFFFF82 11 0A 04 FFFFFF82 12 FFFFFF82 13 01 09 69 6D 6D 75 74 61
   62 6C 65 0A 03 FFFFFF82 14 04 01 0A 63 6F 6C 6C 65 63
   74 69 6F 6E 09 04 FFFFFF82 16 FFFFFF82 11 01 0C 4E 75 6D 65
   72 69 63 52 61 6E 67 65 09 04 FFFFFF82 18 FFFFFF82 19 02 09
   45 78 63 6C 75 73 69 76 65 0A 04 FFFFFF82 16 FFFFFF82 11 10
   04 FFFFFF82 1B FFFFFF82 23 0E 04 FFFFFF82 1C FFFFFF82 21 0E 04 FFFFFF82 1D FFFFFF82
   20 0D 02 FFFFFF82 1E 0A 03 FFFFFF82 1F 06 01 06 3C 72 6F 6F
   74 3E 09 01 05 09 03 FFFFFF82 22 04 01 07 70 61 63 6B
   61 67 65 09 03 0A FFFFFF82 24 0A 03 FFFFFF82 22 04 08 07 FFFFFF82
   26 FFFFFF82 0B FFFFFFC0 00 2D 01 03 65 6E 64 08 0B FFFFFF82 29 FFFFFF82
   28 FFFFFF82 0B FFFFFF90 FFFFFF80 FFFFFFC0 00 2D 01 04 73 74 65 70 08 09
   FFFFFF82 2A 2E FFFFFF91 FFFFFF80 FFFFFF84 00 FFFFFF82 2B 01 0F 75 6E 74 69 6C
   24 64 65 66 61 75 6C 74 24 32 15 02 FFFFFF82 2C 2A 03
   2D FFFFFF82 2D 2B 02 FFFFFF82 2E 10 04 FFFFFF82 2F FFFFFF82 34 0D 02 FFFFFF82
   30 0A 04 FFFFFF82 31 FFFFFF82 32 01 09 75 6E 63 68 65 63 6B
   65 64 0A 03 FFFFFF82 33 04 01 0A 61 6E 6E 6F 74 61 74
   69 6F 6E 09 04 FFFFFF82 35 FFFFFF82 30 02 11 75 6E 63 68 65
   63 6B 65 64 56 61 72 69 61 6E 63 65 08 07 FFFFFF82 37
   2E FFFFFF84 00 FFFFFF82 38 01 02 74 6F 14 06 FFFFFF82 39 FFFFFF82 3C FFFFFF82
   3D 10 06 FFFFFF82 0F FFFFFF82 3A FFFFFF82 1A 09 04 FFFFFF82 3B FFFFFF82 19 02
   09 49 6E 63 6C 75 73 69 76 65 08 07 FFFFFF82 26 FFFFFF82 36
   FFFFFFC0 00 2D 08 0B FFFFFF82 3E FFFFFF82 28 FFFFFF82 36 FFFFFF90 FFFFFF80 FFFFFFC0 00 2D
   08 09 FFFFFF82 3F 2E FFFFFF91 FFFFFF80 FFFFFF84 00 FFFFFF82 2B 01 0C 74 6F 24
   64 65 66 61 75 6C 74 24 32 08 07 FFFFFF82 41 2E FFFFFF84 20
   FFFFFF82 42 01 08 74 6F 53 74 72 69 6E 67 14 02 FFFFFF82 43
   10 04 FFFFFF82 44 FFFFFF82 47 0E 03 15 FFFFFF82 45 09 03 FFFFFF82 46 04
   01 06 50 72 65 64 65 66 09 04 FFFFFF82 48 FFFFFF82 49 02 06
   53 74 72 69 6E 67 0A 03 FFFFFF82 46 04 08 07 FFFFFF82 41 2E
   FFFFFF84 00 FFFFFF82 4B 14 04 FFFFFF82 43 FFFFFF82 4C 08 07 FFFFFF82 4D FFFFFF82 4A
   FFFFFFC0 00 1E 01 05 72 61 64 69 78 08 07 FFFFFF82 4F 2E FFFFFF84
   00 FFFFFF82 50 01 0B 74 6F 42 79 74 65 41 72 72 61 79
   15 02 FFFFFF82 51 10 04 15 2B FFFFFF81 68 28 03 2E FFFFFF82 53 10
   03 15 FFFFFF82 54 09 03 FFFFFF82 55 04 02 0C 73 65 72 69 61
   6C 69 7A 61 62 6C 65 08 07 FFFFFF82 57 09 FFFFFFA0 FFFFFF80 04 2A
   01 06 63 61 63 68 65 20 08 09 FFFFFF82 59 09 FFFFFFC2 FFFFFF80 FFFFFF84
   00 FFFFFF81 43 01 07 4D 69 6E 4C 6F 6E 67 08 07 FFFFFF82 5B
   09 FFFFFFA0 FFFFFF80 04 2D 01 08 4D 69 6E 4C 6F 6E 67 20 08
   09 FFFFFF82 5D 09 FFFFFFC2 FFFFFF80 FFFFFF84 00 FFFFFF81 43 01 07 4D 61 78 4C
   6F 6E 67 08 07 FFFFFF82 5F 09 FFFFFFA0 FFFFFF80 04 2D 01 08 4D 61
   78 4C 6F 6E 67 20 08 07 FFFFFF82 61 09 FFFFFF84 00 FFFFFF82 62 01
   05 61 70 70 6C 79 14 03 2D FFFFFF82 63 08 07 FFFFFF82 64 FFFFFF82
   60 FFFFFFC0 00 1E 01 01 69 08 07 FFFFFF82 61 09 FFFFFF84 00 FFFFFF82 66
   14 03 2D FFFFFF82 67 08 08 FFFFFF82 68 FFFFFF82 65 FFFFFFC0 00 FFFFFF81 7C 01
   01 6C 08 07 FFFFFF82 61 09 FFFFFF84 00 FFFFFF82 6A 14 03 2D FFFFFF82 6B
   08 08 FFFFFF82 6C FFFFFF82 69 FFFFFFC0 00 FFFFFF82 51 01 01 78 08 07 FFFFFF82
   61 09 FFFFFF84 00 FFFFFF82 6E 14 05 2D FFFFFF82 6F FFFFFF82 70 08 07 FFFFFF81
   47 FFFFFF82 6D FFFFFFC0 00 1E 08 08 FFFFFF82 71 FFFFFF82 6D FFFFFFC0 00 FFFFFF82 51
   01 09 6D 61 67 6E 69 74 75 64 65 08 07 FFFFFF82 61 09
   FFFFFF84 00 FFFFFF82 73 14 07 2D FFFFFF82 74 FFFFFF82 76 FFFFFF82 77 08 07 FFFFFF82
   75 FFFFFF82 72 FFFFFFC0 00 1E 01 09 62 69 74 6C 65 6E 67 74
   68 08 07 FFFFFF81 64 FFFFFF82 72 FFFFFFC0 00 1E 08 08 FFFFFF82 78 FFFFFF82 72
   FFFFFFC0 00 FFFFFF82 79 01 03 72 6E 64 10 04 FFFFFF82 7A FFFFFF82 7D 0D
   02 FFFFFF82 7B 0A 03 FFFFFF82 7C 04 01 04 75 74 69 6C 09 04
   FFFFFF82 7E FFFFFF82 7B 02 06 52 61 6E 64 6F 6D 08 07 FFFFFF82 61
   09 FFFFFF84 00 FFFFFF83 00 14 05 2D FFFFFF83 01 FFFFFF83 03 08 07 FFFFFF83 02
   FFFFFF82 7F FFFFFFC0 00 1E 01 07 6E 75 6D 62 69 74 73 08 08
   FFFFFF82 78 FFFFFF82 7F FFFFFFC0 00 FFFFFF82 79 08 07 FFFFFF82 61 09 FFFFFF84 00 FFFFFF83
   05 14 03 2D FFFFFF83 06 08 08 FFFFFF82 6C FFFFFF83 04 FFFFFFC0 00 FFFFFF82 43
   08 07 FFFFFF82 61 09 FFFFFF84 00 FFFFFF83 08 14 05 2D FFFFFF83 09 FFFFFF83 0A
   08 08 FFFFFF82 6C FFFFFF83 07 FFFFFFC0 00 FFFFFF82 43 08 07 FFFFFF82 4D FFFFFF83 07
   FFFFFFC0 00 1E 08 07 FFFFFF83 0C 09 FFFFFF84 00 FFFFFF83 0D 01 0D 70 72
   6F 62 61 62 6C 65 50 72 69 6D 65 14 05 2D FFFFFF83 0E
   FFFFFF83 0F 08 07 FFFFFF81 5D FFFFFF83 0B FFFFFFC0 00 1E 08 08 FFFFFF82 78 FFFFFF83
   0B FFFFFFC0 00 FFFFFF82 79 08 07 FFFFFF83 11 09 FFFFFF84 01 FFFFFF83 12 01 0A
   69 6E 74 32 62 69 67 49 6E 74 14 03 2D FFFFFF83 13 08
   07 FFFFFF82 64 FFFFFF83 10 FFFFFFC0 00 1E 08 07 FFFFFF83 15 09 FFFFFF84 01 FFFFFF83
   16 01 0B 6C 6F 6E 67 32 62 69 67 49 6E 74 14 03
   2D FFFFFF83 17 08 08 FFFFFF82 68 FFFFFF83 14 FFFFFFC0 00 FFFFFF81 7C 
  InnerClass: 
   public #389= #386 of #388; //Exclusive=class scala/collection/immutable/NumericRange$Exclusive of class scala/collection/immutable/NumericRange
   public #392= #391 of #388; //Inclusive=class scala/collection/immutable/NumericRange$Inclusive of class scala/collection/immutable/NumericRange
   public final #393= #305 of #57; //$anonfun$equals$1=class scala/math/BigInt$$anonfun$equals$1 of class scala/math/BigInt
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	BigInt.scala;
const #3 = Asciz	long2bigInt;
const #4 = Asciz	(J)Lscala/math/BigInt;;
const #5 = Asciz	Code;
const #6 = Asciz	scala/math/BigInt$;
const #7 = class	#6;	//  scala/math/BigInt$
const #8 = Asciz	MODULE$;
const #9 = Asciz	Lscala/math/BigInt$;;
const #10 = NameAndType	#8:#9;//  MODULE$:Lscala/math/BigInt$;
const #11 = Field	#7.#10;	//  scala/math/BigInt$.MODULE$:Lscala/math/BigInt$;
const #12 = NameAndType	#3:#4;//  long2bigInt:(J)Lscala/math/BigInt;
const #13 = Method	#7.#12;	//  scala/math/BigInt$.long2bigInt:(J)Lscala/math/BigInt;
const #14 = Asciz	int2bigInt;
const #15 = Asciz	(I)Lscala/math/BigInt;;
const #16 = NameAndType	#14:#15;//  int2bigInt:(I)Lscala/math/BigInt;
const #17 = Method	#7.#16;	//  scala/math/BigInt$.int2bigInt:(I)Lscala/math/BigInt;
const #18 = Asciz	probablePrime;
const #19 = Asciz	(ILscala/util/Random;)Lscala/math/BigInt;;
const #20 = NameAndType	#18:#19;//  probablePrime:(ILscala/util/Random;)Lscala/math/BigInt;
const #21 = Method	#7.#20;	//  scala/math/BigInt$.probablePrime:(ILscala/util/Random;)Lscala/math/BigInt;
const #22 = Asciz	apply;
const #23 = Asciz	(Ljava/lang/String;I)Lscala/math/BigInt;;
const #24 = NameAndType	#22:#23;//  apply:(Ljava/lang/String;I)Lscala/math/BigInt;
const #25 = Method	#7.#24;	//  scala/math/BigInt$.apply:(Ljava/lang/String;I)Lscala/math/BigInt;
const #26 = Asciz	(Ljava/lang/String;)Lscala/math/BigInt;;
const #27 = NameAndType	#22:#26;//  apply:(Ljava/lang/String;)Lscala/math/BigInt;
const #28 = Method	#7.#27;	//  scala/math/BigInt$.apply:(Ljava/lang/String;)Lscala/math/BigInt;
const #29 = NameAndType	#22:#19;//  apply:(ILscala/util/Random;)Lscala/math/BigInt;
const #30 = Method	#7.#29;	//  scala/math/BigInt$.apply:(ILscala/util/Random;)Lscala/math/BigInt;
const #31 = Asciz	(IILscala/util/Random;)Lscala/math/BigInt;;
const #32 = NameAndType	#22:#31;//  apply:(IILscala/util/Random;)Lscala/math/BigInt;
const #33 = Method	#7.#32;	//  scala/math/BigInt$.apply:(IILscala/util/Random;)Lscala/math/BigInt;
const #34 = Asciz	(I[B)Lscala/math/BigInt;;
const #35 = NameAndType	#22:#34;//  apply:(I[B)Lscala/math/BigInt;
const #36 = Method	#7.#35;	//  scala/math/BigInt$.apply:(I[B)Lscala/math/BigInt;
const #37 = Asciz	([B)Lscala/math/BigInt;;
const #38 = NameAndType	#22:#37;//  apply:([B)Lscala/math/BigInt;
const #39 = Method	#7.#38;	//  scala/math/BigInt$.apply:([B)Lscala/math/BigInt;
const #40 = NameAndType	#22:#4;//  apply:(J)Lscala/math/BigInt;
const #41 = Method	#7.#40;	//  scala/math/BigInt$.apply:(J)Lscala/math/BigInt;
const #42 = NameAndType	#22:#15;//  apply:(I)Lscala/math/BigInt;
const #43 = Method	#7.#42;	//  scala/math/BigInt$.apply:(I)Lscala/math/BigInt;
const #44 = Asciz	MaxLong;
const #45 = Asciz	()Lscala/math/BigInt;;
const #46 = NameAndType	#44:#45;//  MaxLong:()Lscala/math/BigInt;
const #47 = Method	#7.#46;	//  scala/math/BigInt$.MaxLong:()Lscala/math/BigInt;
const #48 = Asciz	MinLong;
const #49 = NameAndType	#48:#45;//  MinLong:()Lscala/math/BigInt;
const #50 = Method	#7.#49;	//  scala/math/BigInt$.MinLong:()Lscala/math/BigInt;
const #51 = Asciz	bigInteger;
const #52 = Asciz	Ljava/math/BigInteger;;
const #53 = Asciz	<init>;
const #54 = Asciz	(Ljava/math/BigInteger;)V;
const #55 = Asciz	LineNumberTable;
const #56 = Asciz	scala/math/BigInt;
const #57 = class	#56;	//  scala/math/BigInt
const #58 = NameAndType	#51:#52;//  bigInteger:Ljava/math/BigInteger;
const #59 = Field	#57.#58;	//  scala/math/BigInt.bigInteger:Ljava/math/BigInteger;
const #60 = Asciz	scala/math/ScalaNumber;
const #61 = class	#60;	//  scala/math/ScalaNumber
const #62 = Asciz	()V;
const #63 = NameAndType	#53:#62;//  "<init>":()V
const #64 = Method	#61.#63;	//  scala/math/ScalaNumber."<init>":()V
const #65 = Asciz	scala/math/ScalaNumericConversions$class;
const #66 = class	#65;	//  scala/math/ScalaNumericConversions$class
const #67 = Asciz	$init$;
const #68 = Asciz	(Lscala/math/ScalaNumericConversions;)V;
const #69 = NameAndType	#67:#68;//  $init$:(Lscala/math/ScalaNumericConversions;)V
const #70 = Method	#66.#69;	//  scala/math/ScalaNumericConversions$class.$init$:(Lscala/math/ScalaNumericConversions;)V
const #71 = Asciz	this;
const #72 = Asciz	Lscala/math/BigInt;;
const #73 = Asciz	LocalVariableTable;
const #74 = Asciz	underlying;
const #75 = Asciz	()Ljava/lang/Object;;
const #76 = Asciz	()Ljava/math/BigInteger;;
const #77 = NameAndType	#74:#76;//  underlying:()Ljava/math/BigInteger;
const #78 = Method	#57.#77;	//  scala/math/BigInt.underlying:()Ljava/math/BigInteger;
const #79 = Asciz	toByteArray;
const #80 = Asciz	()[B;
const #81 = NameAndType	#51:#76;//  bigInteger:()Ljava/math/BigInteger;
const #82 = Method	#57.#81;	//  scala/math/BigInt.bigInteger:()Ljava/math/BigInteger;
const #83 = Asciz	java/math/BigInteger;
const #84 = class	#83;	//  java/math/BigInteger
const #85 = NameAndType	#79:#80;//  toByteArray:()[B
const #86 = Method	#84.#85;	//  java/math/BigInteger.toByteArray:()[B
const #87 = Asciz	toString;
const #88 = Asciz	(I)Ljava/lang/String;;
const #89 = NameAndType	#87:#88;//  toString:(I)Ljava/lang/String;
const #90 = Method	#84.#89;	//  java/math/BigInteger.toString:(I)Ljava/lang/String;
const #91 = Asciz	radix;
const #92 = Asciz	I;
const #93 = Asciz	()Ljava/lang/String;;
const #94 = NameAndType	#87:#93;//  toString:()Ljava/lang/String;
const #95 = Method	#84.#94;	//  java/math/BigInteger.toString:()Ljava/lang/String;
const #96 = Asciz	to;
const #97 = Asciz	(Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/collection/immutable/NumericRange$Inclusive;;
const #98 = Asciz	scala/collection/immutable/Range$BigInt$;
const #99 = class	#98;	//  scala/collection/immutable/Range$BigInt$
const #100 = Asciz	Lscala/collection/immutable/Range$BigInt$;;
const #101 = NameAndType	#8:#100;//  MODULE$:Lscala/collection/immutable/Range$BigInt$;
const #102 = Field	#99.#101;	//  scala/collection/immutable/Range$BigInt$.MODULE$:Lscala/collection/immutable/Range$BigInt$;
const #103 = Asciz	inclusive;
const #104 = Asciz	(Lscala/math/BigInt;Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/collection/immutable/NumericRange$Inclusive;;
const #105 = NameAndType	#103:#104;//  inclusive:(Lscala/math/BigInt;Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/collection/immutable/NumericRange$Inclusive;
const #106 = Method	#99.#105;	//  scala/collection/immutable/Range$BigInt$.inclusive:(Lscala/math/BigInt;Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/collection/immutable/NumericRange$Inclusive;
const #107 = Asciz	end;
const #108 = Asciz	step;
const #109 = Asciz	(Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/collection/immutable/NumericRange$Inclusive<Lscala/math/BigInt;>;;
const #110 = Asciz	Signature;
const #111 = Asciz	until;
const #112 = Asciz	(Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/collection/immutable/NumericRange$Exclusive;;
const #113 = Asciz	(Lscala/math/BigInt;Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/collection/immutable/NumericRange$Exclusive;;
const #114 = NameAndType	#22:#113;//  apply:(Lscala/math/BigInt;Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/collection/immutable/NumericRange$Exclusive;
const #115 = Method	#99.#114;	//  scala/collection/immutable/Range$BigInt$.apply:(Lscala/math/BigInt;Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/collection/immutable/NumericRange$Exclusive;
const #116 = Asciz	(Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/collection/immutable/NumericRange$Exclusive<Lscala/math/BigInt;>;;
const #117 = Asciz	doubleValue;
const #118 = Asciz	()D;
const #119 = NameAndType	#117:#118;//  doubleValue:()D
const #120 = Method	#84.#119;	//  java/math/BigInteger.doubleValue:()D
const #121 = Asciz	floatValue;
const #122 = Asciz	()F;
const #123 = NameAndType	#121:#122;//  floatValue:()F
const #124 = Method	#84.#123;	//  java/math/BigInteger.floatValue:()F
const #125 = Asciz	longValue;
const #126 = Asciz	()J;
const #127 = NameAndType	#125:#126;//  longValue:()J
const #128 = Method	#84.#127;	//  java/math/BigInteger.longValue:()J
const #129 = Asciz	intValue;
const #130 = Asciz	()I;
const #131 = NameAndType	#129:#130;//  intValue:()I
const #132 = Method	#84.#131;	//  java/math/BigInteger.intValue:()I
const #133 = Asciz	charValue;
const #134 = Asciz	()C;
const #135 = Method	#57.#131;	//  scala/math/BigInt.intValue:()I
const #136 = Asciz	shortValue;
const #137 = Asciz	()S;
const #138 = Asciz	byteValue;
const #139 = Asciz	()B;
const #140 = Asciz	isProbablePrime;
const #141 = Asciz	(I)Z;
const #142 = NameAndType	#140:#141;//  isProbablePrime:(I)Z
const #143 = Method	#84.#142;	//  java/math/BigInteger.isProbablePrime:(I)Z
const #144 = Asciz	certainty;
const #145 = Asciz	bitCount;
const #146 = NameAndType	#145:#130;//  bitCount:()I
const #147 = Method	#84.#146;	//  java/math/BigInteger.bitCount:()I
const #148 = Asciz	bitLength;
const #149 = NameAndType	#148:#130;//  bitLength:()I
const #150 = Method	#84.#149;	//  java/math/BigInteger.bitLength:()I
const #151 = Asciz	lowestSetBit;
const #152 = Asciz	getLowestSetBit;
const #153 = NameAndType	#152:#130;//  getLowestSetBit:()I
const #154 = Method	#84.#153;	//  java/math/BigInteger.getLowestSetBit:()I
const #155 = Asciz	flipBit;
const #156 = Asciz	(I)Ljava/math/BigInteger;;
const #157 = NameAndType	#155:#156;//  flipBit:(I)Ljava/math/BigInteger;
const #158 = Method	#84.#157;	//  java/math/BigInteger.flipBit:(I)Ljava/math/BigInteger;
const #159 = NameAndType	#53:#54;//  "<init>":(Ljava/math/BigInteger;)V
const #160 = Method	#57.#159;	//  scala/math/BigInt."<init>":(Ljava/math/BigInteger;)V
const #161 = Asciz	n;
const #162 = Asciz	clearBit;
const #163 = NameAndType	#162:#156;//  clearBit:(I)Ljava/math/BigInteger;
const #164 = Method	#84.#163;	//  java/math/BigInteger.clearBit:(I)Ljava/math/BigInteger;
const #165 = Asciz	setBit;
const #166 = NameAndType	#165:#156;//  setBit:(I)Ljava/math/BigInteger;
const #167 = Method	#84.#166;	//  java/math/BigInteger.setBit:(I)Ljava/math/BigInteger;
const #168 = Asciz	testBit;
const #169 = NameAndType	#168:#141;//  testBit:(I)Z
const #170 = Method	#84.#169;	//  java/math/BigInteger.testBit:(I)Z
const #171 = Asciz	$tilde;
const #172 = Asciz	not;
const #173 = NameAndType	#172:#76;//  not:()Ljava/math/BigInteger;
const #174 = Method	#84.#173;	//  java/math/BigInteger.not:()Ljava/math/BigInteger;
const #175 = Asciz	signum;
const #176 = NameAndType	#175:#130;//  signum:()I
const #177 = Method	#84.#176;	//  java/math/BigInteger.signum:()I
const #178 = Asciz	abs;
const #179 = NameAndType	#178:#76;//  abs:()Ljava/math/BigInteger;
const #180 = Method	#84.#179;	//  java/math/BigInteger.abs:()Ljava/math/BigInteger;
const #181 = Asciz	unary_$minus;
const #182 = Asciz	negate;
const #183 = NameAndType	#182:#76;//  negate:()Ljava/math/BigInteger;
const #184 = Method	#84.#183;	//  java/math/BigInteger.negate:()Ljava/math/BigInteger;
const #185 = Asciz	modInverse;
const #186 = Asciz	(Lscala/math/BigInt;)Lscala/math/BigInt;;
const #187 = Asciz	(Ljava/math/BigInteger;)Ljava/math/BigInteger;;
const #188 = NameAndType	#185:#187;//  modInverse:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #189 = Method	#84.#188;	//  java/math/BigInteger.modInverse:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #190 = Asciz	m;
const #191 = Asciz	modPow;
const #192 = Asciz	(Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;;
const #193 = Asciz	(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;;
const #194 = NameAndType	#191:#193;//  modPow:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #195 = Method	#84.#194;	//  java/math/BigInteger.modPow:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #196 = Asciz	exp;
const #197 = Asciz	pow;
const #198 = NameAndType	#197:#156;//  pow:(I)Ljava/math/BigInteger;
const #199 = Method	#84.#198;	//  java/math/BigInteger.pow:(I)Ljava/math/BigInteger;
const #200 = Asciz	max;
const #201 = NameAndType	#200:#187;//  max:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #202 = Method	#84.#201;	//  java/math/BigInteger.max:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #203 = Asciz	that;
const #204 = Asciz	min;
const #205 = NameAndType	#204:#187;//  min:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #206 = Method	#84.#205;	//  java/math/BigInteger.min:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #207 = Asciz	mod;
const #208 = NameAndType	#207:#187;//  mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #209 = Method	#84.#208;	//  java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #210 = Asciz	gcd;
const #211 = NameAndType	#210:#187;//  gcd:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #212 = Method	#84.#211;	//  java/math/BigInteger.gcd:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #213 = Asciz	$amp$tilde;
const #214 = Asciz	andNot;
const #215 = NameAndType	#214:#187;//  andNot:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #216 = Method	#84.#215;	//  java/math/BigInteger.andNot:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #217 = Asciz	$up;
const #218 = Asciz	xor;
const #219 = NameAndType	#218:#187;//  xor:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #220 = Method	#84.#219;	//  java/math/BigInteger.xor:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #221 = Asciz	$bar;
const #222 = Asciz	or;
const #223 = NameAndType	#222:#187;//  or:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #224 = Method	#84.#223;	//  java/math/BigInteger.or:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #225 = Asciz	$amp;
const #226 = Asciz	and;
const #227 = NameAndType	#226:#187;//  and:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #228 = Method	#84.#227;	//  java/math/BigInteger.and:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #229 = Asciz	$greater$greater;
const #230 = Asciz	shiftRight;
const #231 = NameAndType	#230:#156;//  shiftRight:(I)Ljava/math/BigInteger;
const #232 = Method	#84.#231;	//  java/math/BigInteger.shiftRight:(I)Ljava/math/BigInteger;
const #233 = Asciz	$less$less;
const #234 = Asciz	shiftLeft;
const #235 = NameAndType	#234:#156;//  shiftLeft:(I)Ljava/math/BigInteger;
const #236 = Method	#84.#235;	//  java/math/BigInteger.shiftLeft:(I)Ljava/math/BigInteger;
const #237 = Asciz	$div$percent;
const #238 = Asciz	(Lscala/math/BigInt;)Lscala/Tuple2;;
const #239 = Asciz	divideAndRemainder;
const #240 = Asciz	(Ljava/math/BigInteger;)[Ljava/math/BigInteger;;
const #241 = NameAndType	#239:#240;//  divideAndRemainder:(Ljava/math/BigInteger;)[Ljava/math/BigInteger;
const #242 = Method	#84.#241;	//  java/math/BigInteger.divideAndRemainder:(Ljava/math/BigInteger;)[Ljava/math/BigInteger;
const #243 = Asciz	scala/Tuple2;
const #244 = class	#243;	//  scala/Tuple2
const #245 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)V;
const #246 = NameAndType	#53:#245;//  "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
const #247 = Method	#244.#246;	//  scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
const #248 = Asciz	dr;
const #249 = Asciz	[Ljava/math/BigInteger;;
const #250 = Asciz	(Lscala/math/BigInt;)Lscala/Tuple2<Lscala/math/BigInt;Lscala/math/BigInt;>;;
const #251 = Asciz	$percent;
const #252 = Asciz	remainder;
const #253 = NameAndType	#252:#187;//  remainder:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #254 = Method	#84.#253;	//  java/math/BigInteger.remainder:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #255 = Asciz	$div;
const #256 = Asciz	divide;
const #257 = NameAndType	#256:#187;//  divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #258 = Method	#84.#257;	//  java/math/BigInteger.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #259 = Asciz	$times;
const #260 = Asciz	multiply;
const #261 = NameAndType	#260:#187;//  multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #262 = Method	#84.#261;	//  java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #263 = Asciz	$minus;
const #264 = Asciz	subtract;
const #265 = NameAndType	#264:#187;//  subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #266 = Method	#84.#265;	//  java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #267 = Asciz	$plus;
const #268 = Asciz	add;
const #269 = NameAndType	#268:#187;//  add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #270 = Method	#84.#269;	//  java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #271 = Asciz	$greater;
const #272 = Asciz	(Lscala/math/BigInt;)Z;
const #273 = Asciz	compare;
const #274 = Asciz	(Lscala/math/BigInt;)I;
const #275 = NameAndType	#273:#274;//  compare:(Lscala/math/BigInt;)I
const #276 = Method	#57.#275;	//  scala/math/BigInt.compare:(Lscala/math/BigInt;)I
const #277 = Asciz	$less;
const #278 = Asciz	$greater$eq;
const #279 = Asciz	$less$eq;
const #280 = Asciz	compareTo;
const #281 = Asciz	(Ljava/math/BigInteger;)I;
const #282 = NameAndType	#280:#281;//  compareTo:(Ljava/math/BigInteger;)I
const #283 = Method	#84.#282;	//  java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
const #284 = Asciz	equals;
const #285 = Asciz	isWhole;
const #286 = Asciz	()Z;
const #287 = Asciz	(Ljava/lang/Object;)Z;
const #288 = NameAndType	#284:#272;//  equals:(Lscala/math/BigInt;)Z
const #289 = Method	#57.#288;	//  scala/math/BigInt.equals:(Lscala/math/BigInt;)Z
const #290 = Asciz	scala/MatchError;
const #291 = class	#290;	//  scala/MatchError
const #292 = Asciz	java/lang/Object;
const #293 = class	#292;	//  java/lang/Object
const #294 = Method	#293.#94;	//  java/lang/Object.toString:()Ljava/lang/String;
const #295 = Asciz	(Ljava/lang/String;)V;
const #296 = NameAndType	#53:#295;//  "<init>":(Ljava/lang/String;)V
const #297 = Method	#291.#296;	//  scala/MatchError."<init>":(Ljava/lang/String;)V
const #298 = Asciz	scala/math/BigDecimal;
const #299 = class	#298;	//  scala/math/BigDecimal
const #300 = Asciz	toBigIntExact;
const #301 = Asciz	()Lscala/Option;;
const #302 = NameAndType	#300:#301;//  toBigIntExact:()Lscala/Option;
const #303 = Method	#299.#302;	//  scala/math/BigDecimal.toBigIntExact:()Lscala/Option;
const #304 = Asciz	scala/math/BigInt$$anonfun$equals$1;
const #305 = class	#304;	//  scala/math/BigInt$$anonfun$equals$1
const #306 = Asciz	(Lscala/math/BigInt;)V;
const #307 = NameAndType	#53:#306;//  "<init>":(Lscala/math/BigInt;)V
const #308 = Method	#305.#307;	//  scala/math/BigInt$$anonfun$equals$1."<init>":(Lscala/math/BigInt;)V
const #309 = Asciz	scala/Option;
const #310 = class	#309;	//  scala/Option
const #311 = Asciz	exists;
const #312 = Asciz	(Lscala/Function1;)Z;
const #313 = NameAndType	#311:#312;//  exists:(Lscala/Function1;)Z
const #314 = Method	#310.#313;	//  scala/Option.exists:(Lscala/Function1;)Z
const #315 = Asciz	scala/math/ScalaNumericConversions;
const #316 = class	#315;	//  scala/math/ScalaNumericConversions
const #317 = Asciz	unifiedPrimitiveEquals;
const #318 = NameAndType	#317:#287;//  unifiedPrimitiveEquals:(Ljava/lang/Object;)Z
const #319 = InterfaceMethod	#316.#318;	//  scala/math/ScalaNumericConversions.unifiedPrimitiveEquals:(Ljava/lang/Object;)Z
const #320 = Asciz	Ljava/lang/Object;;
const #321 = Asciz	temp2;
const #322 = Asciz	temp3;
const #323 = Asciz	Lscala/math/BigDecimal;;
const #324 = Asciz	hashCode;
const #325 = NameAndType	#278:#272;//  $greater$eq:(Lscala/math/BigInt;)Z
const #326 = Method	#57.#325;	//  scala/math/BigInt.$greater$eq:(Lscala/math/BigInt;)Z
const #327 = NameAndType	#279:#272;//  $less$eq:(Lscala/math/BigInt;)Z
const #328 = Method	#57.#327;	//  scala/math/BigInt.$less$eq:(Lscala/math/BigInt;)Z
const #329 = Asciz	unifiedPrimitiveHashcode;
const #330 = NameAndType	#329:#130;//  unifiedPrimitiveHashcode:()I
const #331 = InterfaceMethod	#316.#330;	//  scala/math/ScalaNumericConversions.unifiedPrimitiveHashcode:()I
const #332 = NameAndType	#324:#130;//  hashCode:()I
const #333 = Method	#84.#332;	//  java/math/BigInteger.hashCode:()I
const #334 = Asciz	until$default$2;
const #335 = Asciz	to$default$2;
const #336 = Asciz	(Lscala/math/ScalaNumericConversions;Ljava/lang/Object;)Z;
const #337 = NameAndType	#317:#336;//  unifiedPrimitiveEquals:(Lscala/math/ScalaNumericConversions;Ljava/lang/Object;)Z
const #338 = Method	#66.#337;	//  scala/math/ScalaNumericConversions$class.unifiedPrimitiveEquals:(Lscala/math/ScalaNumericConversions;Ljava/lang/Object;)Z
const #339 = Asciz	x;
const #340 = Asciz	(Lscala/math/ScalaNumericConversions;)I;
const #341 = NameAndType	#329:#340;//  unifiedPrimitiveHashcode:(Lscala/math/ScalaNumericConversions;)I
const #342 = Method	#66.#341;	//  scala/math/ScalaNumericConversions$class.unifiedPrimitiveHashcode:(Lscala/math/ScalaNumericConversions;)I
const #343 = Asciz	isValidChar;
const #344 = Asciz	(Lscala/math/ScalaNumericConversions;)Z;
const #345 = NameAndType	#343:#344;//  isValidChar:(Lscala/math/ScalaNumericConversions;)Z
const #346 = Method	#66.#345;	//  scala/math/ScalaNumericConversions$class.isValidChar:(Lscala/math/ScalaNumericConversions;)Z
const #347 = Asciz	isValidInt;
const #348 = NameAndType	#347:#344;//  isValidInt:(Lscala/math/ScalaNumericConversions;)Z
const #349 = Method	#66.#348;	//  scala/math/ScalaNumericConversions$class.isValidInt:(Lscala/math/ScalaNumericConversions;)Z
const #350 = Asciz	isValidShort;
const #351 = NameAndType	#350:#344;//  isValidShort:(Lscala/math/ScalaNumericConversions;)Z
const #352 = Method	#66.#351;	//  scala/math/ScalaNumericConversions$class.isValidShort:(Lscala/math/ScalaNumericConversions;)Z
const #353 = Asciz	isValidByte;
const #354 = NameAndType	#353:#344;//  isValidByte:(Lscala/math/ScalaNumericConversions;)Z
const #355 = Method	#66.#354;	//  scala/math/ScalaNumericConversions$class.isValidByte:(Lscala/math/ScalaNumericConversions;)Z
const #356 = Asciz	toDouble;
const #357 = Asciz	(Lscala/math/ScalaNumericConversions;)D;
const #358 = NameAndType	#356:#357;//  toDouble:(Lscala/math/ScalaNumericConversions;)D
const #359 = Method	#66.#358;	//  scala/math/ScalaNumericConversions$class.toDouble:(Lscala/math/ScalaNumericConversions;)D
const #360 = Asciz	toFloat;
const #361 = Asciz	(Lscala/math/ScalaNumericConversions;)F;
const #362 = NameAndType	#360:#361;//  toFloat:(Lscala/math/ScalaNumericConversions;)F
const #363 = Method	#66.#362;	//  scala/math/ScalaNumericConversions$class.toFloat:(Lscala/math/ScalaNumericConversions;)F
const #364 = Asciz	toLong;
const #365 = Asciz	(Lscala/math/ScalaNumericConversions;)J;
const #366 = NameAndType	#364:#365;//  toLong:(Lscala/math/ScalaNumericConversions;)J
const #367 = Method	#66.#366;	//  scala/math/ScalaNumericConversions$class.toLong:(Lscala/math/ScalaNumericConversions;)J
const #368 = Asciz	toInt;
const #369 = NameAndType	#368:#340;//  toInt:(Lscala/math/ScalaNumericConversions;)I
const #370 = Method	#66.#369;	//  scala/math/ScalaNumericConversions$class.toInt:(Lscala/math/ScalaNumericConversions;)I
const #371 = Asciz	toShort;
const #372 = Asciz	(Lscala/math/ScalaNumericConversions;)S;
const #373 = NameAndType	#371:#372;//  toShort:(Lscala/math/ScalaNumericConversions;)S
const #374 = Method	#66.#373;	//  scala/math/ScalaNumericConversions$class.toShort:(Lscala/math/ScalaNumericConversions;)S
const #375 = Asciz	toByte;
const #376 = Asciz	(Lscala/math/ScalaNumericConversions;)B;
const #377 = NameAndType	#375:#376;//  toByte:(Lscala/math/ScalaNumericConversions;)B
const #378 = Method	#66.#377;	//  scala/math/ScalaNumericConversions$class.toByte:(Lscala/math/ScalaNumericConversions;)B
const #379 = Asciz	toChar;
const #380 = Asciz	(Lscala/math/ScalaNumericConversions;)C;
const #381 = NameAndType	#379:#380;//  toChar:(Lscala/math/ScalaNumericConversions;)C
const #382 = Method	#66.#381;	//  scala/math/ScalaNumericConversions$class.toChar:(Lscala/math/ScalaNumericConversions;)C
const #383 = Asciz	ScalaSig;
const #384 = Asciz	InnerClasses;
const #385 = Asciz	scala/collection/immutable/NumericRange$Exclusive;
const #386 = class	#385;	//  scala/collection/immutable/NumericRange$Exclusive
const #387 = Asciz	scala/collection/immutable/NumericRange;
const #388 = class	#387;	//  scala/collection/immutable/NumericRange
const #389 = Asciz	Exclusive;
const #390 = Asciz	scala/collection/immutable/NumericRange$Inclusive;
const #391 = class	#390;	//  scala/collection/immutable/NumericRange$Inclusive
const #392 = Asciz	Inclusive;
const #393 = Asciz	$anonfun$equals$1;
const #394 = Asciz	scala/ScalaObject;
const #395 = class	#394;	//  scala/ScalaObject
const #396 = Asciz	java/io/Serializable;
const #397 = class	#396;	//  java/io/Serializable

{
public static final scala.math.BigInt long2bigInt(long);
  Code:
   Stack=3, Locals=2, Args_size=1
   0:	getstatic	#11; //Field scala/math/BigInt$.MODULE$:Lscala/math/BigInt$;
   3:	lload_0
   4:	invokevirtual	#13; //Method scala/math/BigInt$.long2bigInt:(J)Lscala/math/BigInt;
   7:	areturn

public static final scala.math.BigInt int2bigInt(int);
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	getstatic	#11; //Field scala/math/BigInt$.MODULE$:Lscala/math/BigInt$;
   3:	iload_0
   4:	invokevirtual	#17; //Method scala/math/BigInt$.int2bigInt:(I)Lscala/math/BigInt;
   7:	areturn

public static final scala.math.BigInt probablePrime(int, scala.util.Random);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	getstatic	#11; //Field scala/math/BigInt$.MODULE$:Lscala/math/BigInt$;
   3:	iload_0
   4:	aload_1
   5:	invokevirtual	#21; //Method scala/math/BigInt$.probablePrime:(ILscala/util/Random;)Lscala/math/BigInt;
   8:	areturn

public static final scala.math.BigInt apply(java.lang.String, int);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	getstatic	#11; //Field scala/math/BigInt$.MODULE$:Lscala/math/BigInt$;
   3:	aload_0
   4:	iload_1
   5:	invokevirtual	#25; //Method scala/math/BigInt$.apply:(Ljava/lang/String;I)Lscala/math/BigInt;
   8:	areturn

public static final scala.math.BigInt apply(java.lang.String);
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	getstatic	#11; //Field scala/math/BigInt$.MODULE$:Lscala/math/BigInt$;
   3:	aload_0
   4:	invokevirtual	#28; //Method scala/math/BigInt$.apply:(Ljava/lang/String;)Lscala/math/BigInt;
   7:	areturn

public static final scala.math.BigInt apply(int, scala.util.Random);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	getstatic	#11; //Field scala/math/BigInt$.MODULE$:Lscala/math/BigInt$;
   3:	iload_0
   4:	aload_1
   5:	invokevirtual	#30; //Method scala/math/BigInt$.apply:(ILscala/util/Random;)Lscala/math/BigInt;
   8:	areturn

public static final scala.math.BigInt apply(int, int, scala.util.Random);
  Code:
   Stack=4, Locals=3, Args_size=3
   0:	getstatic	#11; //Field scala/math/BigInt$.MODULE$:Lscala/math/BigInt$;
   3:	iload_0
   4:	iload_1
   5:	aload_2
   6:	invokevirtual	#33; //Method scala/math/BigInt$.apply:(IILscala/util/Random;)Lscala/math/BigInt;
   9:	areturn

public static final scala.math.BigInt apply(int, byte[]);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	getstatic	#11; //Field scala/math/BigInt$.MODULE$:Lscala/math/BigInt$;
   3:	iload_0
   4:	aload_1
   5:	invokevirtual	#36; //Method scala/math/BigInt$.apply:(I[B)Lscala/math/BigInt;
   8:	areturn

public static final scala.math.BigInt apply(byte[]);
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	getstatic	#11; //Field scala/math/BigInt$.MODULE$:Lscala/math/BigInt$;
   3:	aload_0
   4:	invokevirtual	#39; //Method scala/math/BigInt$.apply:([B)Lscala/math/BigInt;
   7:	areturn

public static final scala.math.BigInt apply(long);
  Code:
   Stack=3, Locals=2, Args_size=1
   0:	getstatic	#11; //Field scala/math/BigInt$.MODULE$:Lscala/math/BigInt$;
   3:	lload_0
   4:	invokevirtual	#41; //Method scala/math/BigInt$.apply:(J)Lscala/math/BigInt;
   7:	areturn

public static final scala.math.BigInt apply(int);
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	getstatic	#11; //Field scala/math/BigInt$.MODULE$:Lscala/math/BigInt$;
   3:	iload_0
   4:	invokevirtual	#43; //Method scala/math/BigInt$.apply:(I)Lscala/math/BigInt;
   7:	areturn

public static final scala.math.BigInt MaxLong();
  Code:
   Stack=1, Locals=0, Args_size=0
   0:	getstatic	#11; //Field scala/math/BigInt$.MODULE$:Lscala/math/BigInt$;
   3:	invokevirtual	#47; //Method scala/math/BigInt$.MaxLong:()Lscala/math/BigInt;
   6:	areturn

public static final scala.math.BigInt MinLong();
  Code:
   Stack=1, Locals=0, Args_size=0
   0:	getstatic	#11; //Field scala/math/BigInt$.MODULE$:Lscala/math/BigInt$;
   3:	invokevirtual	#50; //Method scala/math/BigInt$.MinLong:()Lscala/math/BigInt;
   6:	areturn

public scala.math.BigInt(java.math.BigInteger);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	putfield	#59; //Field bigInteger:Ljava/math/BigInteger;
   5:	aload_0
   6:	invokespecial	#64; //Method scala/math/ScalaNumber."<init>":()V
   9:	aload_0
   10:	invokestatic	#70; //Method scala/math/ScalaNumericConversions$class.$init$:(Lscala/math/ScalaNumericConversions;)V
   13:	return
  LineNumberTable: 
   line 115: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      14      0    this       Lscala/math/BigInt;
   0      14      1    bigInteger       Ljava/math/BigInteger;


public java.lang.Object underlying();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#78; //Method underlying:()Ljava/math/BigInteger;
   4:	areturn
  LineNumberTable: 
   line 115: 0


public byte[] toByteArray();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#82; //Method bigInteger:()Ljava/math/BigInteger;
   4:	invokevirtual	#86; //Method java/math/BigInteger.toByteArray:()[B
   7:	areturn
  LineNumberTable: 
   line 376: 0


public java.lang.String toString(int);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	invokevirtual	#82; //Method bigInteger:()Ljava/math/BigInteger;
   4:	iload_1
   5:	invokevirtual	#90; //Method java/math/BigInteger.toString:(I)Ljava/lang/String;
   8:	areturn
  LineNumberTable: 
   line 368: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/math/BigInt;
   0      9      1    radix       I


public java.lang.String toString();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#82; //Method bigInteger:()Ljava/math/BigInteger;
   4:	invokevirtual	#95; //Method java/math/BigInteger.toString:()Ljava/lang/String;
   7:	areturn
  LineNumberTable: 
   line 364: 0


public scala.collection.immutable.NumericRange$Inclusive to(scala.math.BigInt, scala.math.BigInt);
  Code:
   Stack=4, Locals=3, Args_size=3
   0:	getstatic	#102; //Field scala/collection/immutable/Range$BigInt$.MODULE$:Lscala/collection/immutable/Range$BigInt$;
   3:	aload_0
   4:	aload_1
   5:	aload_2
   6:	invokevirtual	#106; //Method scala/collection/immutable/Range$BigInt$.inclusive:(Lscala/math/BigInt;Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/collection/immutable/NumericRange$Inclusive;
   9:	areturn
  LineNumberTable: 
   line 360: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    this       Lscala/math/BigInt;
   0      10      1    end       Lscala/math/BigInt;
   0      10      2    step       Lscala/math/BigInt;

  Signature: length = 0x2
   00 6D 

public scala.collection.immutable.NumericRange$Exclusive until(scala.math.BigInt, scala.math.BigInt);
  Code:
   Stack=4, Locals=3, Args_size=3
   0:	getstatic	#102; //Field scala/collection/immutable/Range$BigInt$.MODULE$:Lscala/collection/immutable/Range$BigInt$;
   3:	aload_0
   4:	aload_1
   5:	aload_2
   6:	invokevirtual	#115; //Method scala/collection/immutable/Range$BigInt$.apply:(Lscala/math/BigInt;Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/collection/immutable/NumericRange$Exclusive;
   9:	areturn
  LineNumberTable: 
   line 356: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    this       Lscala/math/BigInt;
   0      10      1    end       Lscala/math/BigInt;
   0      10      2    step       Lscala/math/BigInt;

  Signature: length = 0x2
   00 74 

public double doubleValue();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#82; //Method bigInteger:()Ljava/math/BigInteger;
   4:	invokevirtual	#120; //Method java/math/BigInteger.doubleValue:()D
   7:	dreturn
  LineNumberTable: 
   line 347: 0


public float floatValue();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#82; //Method bigInteger:()Ljava/math/BigInteger;
   4:	invokevirtual	#124; //Method java/math/BigInteger.floatValue:()F
   7:	freturn
  LineNumberTable: 
   line 340: 0


public long longValue();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#82; //Method bigInteger:()Ljava/math/BigInteger;
   4:	invokevirtual	#128; //Method java/math/BigInteger.longValue:()J
   7:	lreturn
  LineNumberTable: 
   line 333: 0


public int intValue();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#82; //Method bigInteger:()Ljava/math/BigInteger;
   4:	invokevirtual	#132; //Method java/math/BigInteger.intValue:()I
   7:	ireturn
  LineNumberTable: 
   line 325: 0


public char charValue();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#135; //Method intValue:()I
   4:	i2c
   5:	ireturn
  LineNumberTable: 
   line 317: 0


public short shortValue();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#135; //Method intValue:()I
   4:	i2s
   5:	ireturn
  LineNumberTable: 
   line 310: 0


public byte byteValue();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#135; //Method intValue:()I
   4:	i2b
   5:	ireturn
  LineNumberTable: 
   line 303: 0


public boolean isProbablePrime(int);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	invokevirtual	#82; //Method bigInteger:()Ljava/math/BigInteger;
   4:	iload_1
   5:	invokevirtual	#143; //Method java/math/BigInteger.isProbablePrime:(I)Z
   8:	ireturn
  LineNumberTable: 
   line 296: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/math/BigInt;
   0      9      1    certainty       I


public int bitCount();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#82; //Method bigInteger:()Ljava/math/BigInteger;
   4:	invokevirtual	#147; //Method java/math/BigInteger.bitCount:()I
   7:	ireturn
  LineNumberTable: 
   line 287: 0


public int bitLength();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#82; //Method bigInteger:()Ljava/math/BigInteger;
   4:	invokevirtual	#150; //Method java/math/BigInteger.bitLength:()I
   7:	ireturn
  LineNumberTable: 
   line 282: 0


public int lowestSetBit();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#82; //Method bigInteger:()Ljava/math/BigInteger;
   4:	invokevirtual	#154; //Method java/math/BigInteger.getLowestSetBit:()I
   7:	ireturn
  LineNumberTable: 
   line 277: 0


public scala.math.BigInt flipBit(int);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#57; //class scala/math/BigInt
   3:	dup
   4:	aload_0
   5:	invokevirtual	#82; //Method bigInteger:()Ljava/math/BigInteger;
   8:	iload_1
   9:	invokevirtual	#158; //Method java/math/BigInteger.flipBit:(I)Ljava/math/BigInteger;
   12:	invokespecial	#160; //Method "<init>":(Ljava/math/BigInteger;)V
   15:	areturn
  LineNumberTable: 
   line 272: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      16      0    this       Lscala/math/BigInt;
   0      16      1    n       I


public scala.math.BigInt clearBit(int);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#57; //class scala/math/BigInt
   3:	dup
   4:	aload_0
   5:	invokevirtual	#82; //Method bigInteger:()Ljava/math/BigInteger;
   8:	iload_1
   9:	invokevirtual	#164; //Method java/math/BigInteger.clearBit:(I)Ljava/math/BigInteger;
   12:	invokespecial	#160; //Method "<init>":(Ljava/math/BigInteger;)V
   15:	areturn
  LineNumberTable: 
   line 268: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      16      0    this       Lscala/math/BigInt;
   0      16      1    n       I


public scala.math.BigInt setBit(int);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#57; //class scala/math/BigInt
   3:	dup
   4:	aload_0
   5:	invokevirtual	#82; //Method bigInteger:()Ljava/math/BigInteger;
   8:	iload_1
   9:	invokevirtual	#167; //Method java/math/BigInteger.setBit:(I)Ljava/math/BigInteger;
   12:	invokespecial	#160; //Method "<init>":(Ljava/math/BigInteger;)V
   15:	areturn
  LineNumberTable: 
   line 264: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      16      0    this       Lscala/math/BigInt;
   0      16      1    n       I


public boolean testBit(int);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	invokevirtual	#82; //Method bigInteger:()Ljava/math/BigInteger;
   4:	iload_1
   5:	invokevirtual	#170; //Method java/math/BigInteger.testBit:(I)Z
   8:	ireturn
  LineNumberTable: 
   line 260: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/math/BigInt;
   0      9      1    n       I


public scala.math.BigInt $tilde();
  Code:
   Stack=3, Locals=1, Args_size=1
   0:	new	#57; //class scala/math/BigInt
   3:	dup
   4:	aload_0
   5:	invokevirtual	#82; //Method bigInteger:()Ljava/math/BigInteger;
   8:	invokevirtual	#174; //Method java/math/BigInteger.not:()Ljava/math/BigInteger;
   11:	invokespecial	#160; //Method "<init>":(Ljava/math/BigInteger;)V
   14:	areturn
  LineNumberTable: 
   line 256: 0


public int signum();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#82; //Method bigInteger:()Ljava/math/BigInteger;
   4:	invokevirtual	#177; //Method java/math/BigInteger.signum:()I
   7:	ireturn
  LineNumberTable: 
   line 252: 0


public scala.math.BigInt abs();
  Code:
   Stack=3, Locals=1, Args_size=1
   0:	new	#57; //class scala/math/BigInt
   3:	dup
   4:	aload_0
   5:	invokevirtual	#82; //Method bigInteger:()Ljava/math/BigInteger;
   8:	invokevirtual	#180; //Method java/math/BigInteger.abs:()Ljava/math/BigInteger;
   11:	invokespecial	#160; //Method "<init>":(Ljava/math/BigInteger;)V
   14:	areturn
  LineNumberTable: 
   line 245: 0


public scala.math.BigInt unary_$minus();
  Code:
   Stack=3, Locals=1, Args_size=1
   0:	new	#57; //class scala/math/BigInt
   3:	dup
   4:	aload_0
   5:	invokevirtual	#82; //Method bigInteger:()Ljava/math/BigInteger;
   8:	invokevirtual	#184; //Method java/math/BigInteger.negate:()Ljava/math/BigInteger;
   11:	invokespecial	#160; //Method "<init>":(Ljava/math/BigInteger;)V
   14:	areturn
  LineNumberTable: 
   line 241: 0


public scala.math.BigInt modInverse(scala.math.BigInt);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#57; //class scala/math/BigInt
   3:	dup
   4:	aload_0
   5:	invokevirtual	#82; //Method bigInteger:()Ljava/math/BigInteger;
   8:	aload_1
   9:	invokevirtual	#82; //Method bigInteger:()Ljava/math/BigInteger;
   12:	invokevirtual	#189; //Method java/math/BigInteger.modInverse:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
   15:	invokespecial	#160; //Method "<init>":(Ljava/math/BigInteger;)V
   18:	areturn
  LineNumberTable: 
   line 237: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      19      0    this       Lscala/math/BigInt;
   0      19      1    m       Lscala/math/BigInt;


public scala.math.BigInt modPow(scala.math.BigInt, scala.math.BigInt);
  Code:
   Stack=5, Locals=3, Args_size=3
   0:	new	#57; //class scala/math/BigInt
   3:	dup
   4:	aload_0
   5:	invokevirtual	#82; //Method bigInteger:()Ljava/math/BigInteger;
   8:	aload_1
   9:	invokevirtual	#82; //Method bigInteger:()Ljava/math/BigInteger;
   12:	aload_2
   13:	invokevirtual	#82; //Method bigInteger:()Ljava/math/BigInteger;
   16:	invokevirtual	#195; //Method java/math/BigInteger.modPow:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   19:	invokespecial	#160; //Method "<init>":(Ljava/math/BigInteger;)V
   22:	areturn
  LineNumberTable: 
   line 233: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      23      0    this       Lscala/math/BigInt;
   0      23      1    exp       Lscala/math/BigInt;
   0      23      2    m       Lscala/math/BigInt;


public scala.math.BigInt pow(int);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#57; //class scala/math/BigInt
   3:	dup
   4:	aload_0
   5:	invokevirtual	#82; //Method bigInteger:()Ljava/math/BigInteger;
   8:	iload_1
   9:	invokevirtual	#199; //Method java/math/BigInteger.pow:(I)Ljava/math/BigInteger;
   12:	invokespecial	#160; //Method "<init>":(Ljava/math/BigInteger;)V
   15:	areturn
  LineNumberTable: 
   line 227: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      16      0    this       Lscala/math/BigInt;
   0      16      1    exp       I


public scala.math.BigInt max(scala.math.BigInt);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#57; //class scala/math/BigInt
   3:	dup
   4:	aload_0
   5:	invokevirtual	#82; //Method bigInteger:()Ljava/math/BigInteger;
   8:	aload_1
   9:	invokevirtual	#82; //Method bigInteger:()Ljava/math/BigInteger;
   12:	invokevirtual	#202; //Method java/math/BigInteger.max:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
   15:	invokespecial	#160; //Method "<init>":(Ljava/math/BigInteger;)V
   18:	areturn
  LineNumberTable: 
   line 223: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      19      0    this       Lscala/math/BigInt;
   0      19      1    that       Lscala/math/BigInt;


public scala.math.BigInt min(scala.math.BigInt);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#57; //class scala/math/BigInt
   3:	dup
   4:	aload_0
   5:	invokevirtual	#82; //Method bigInteger:()Ljava/math/BigInteger;
   8:	aload_1
   9:	invokevirtual	#82; //Method bigInteger:()Ljava/math/BigInteger;
   12:	invokevirtual	#206; //Method java/math/BigInteger.min:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
   15:	invokespecial	#160; //Method "<init>":(Ljava/math/BigInteger;)V
   18:	areturn
  LineNumberTable: 
   line 219: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      19      0    this       Lscala/math/BigInt;
   0      19      1    that       Lscala/math/BigInt;


public scala.math.BigInt mod(scala.math.BigInt);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#57; //class scala/math/BigInt
   3:	dup
   4:	aload_0
   5:	invokevirtual	#82; //Method bigInteger:()Ljava/math/BigInteger;
   8:	aload_1
   9:	invokevirtual	#82; //Method bigInteger:()Ljava/math/BigInteger;
   12:	invokevirtual	#209; //Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
   15:	invokespecial	#160; //Method "<init>":(Ljava/math/BigInteger;)V
   18:	areturn
  LineNumberTable: 
   line 215: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      19      0    this       Lscala/math/BigInt;
   0      19      1    that       Lscala/math/BigInt;


public scala.math.BigInt gcd(scala.math.BigInt);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#57; //class scala/math/BigInt
   3:	dup
   4:	aload_0
   5:	invokevirtual	#82; //Method bigInteger:()Ljava/math/BigInteger;
   8:	aload_1
   9:	invokevirtual	#82; //Method bigInteger:()Ljava/math/BigInteger;
   12:	invokevirtual	#212; //Method java/math/BigInteger.gcd:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
   15:	invokespecial	#160; //Method "<init>":(Ljava/math/BigInteger;)V
   18:	areturn
  LineNumberTable: 
   line 210: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      19      0    this       Lscala/math/BigInt;
   0      19      1    that       Lscala/math/BigInt;


public scala.math.BigInt $amp$tilde(scala.math.BigInt);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#57; //class scala/math/BigInt
   3:	dup
   4:	aload_0
   5:	invokevirtual	#82; //Method bigInteger:()Ljava/math/BigInteger;
   8:	aload_1
   9:	invokevirtual	#82; //Method bigInteger:()Ljava/math/BigInteger;
   12:	invokevirtual	#216; //Method java/math/BigInteger.andNot:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
   15:	invokespecial	#160; //Method "<init>":(Ljava/math/BigInteger;)V
   18:	areturn
  LineNumberTable: 
   line 206: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      19      0    this       Lscala/math/BigInt;
   0      19      1    that       Lscala/math/BigInt;


public scala.math.BigInt $up(scala.math.BigInt);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#57; //class scala/math/BigInt
   3:	dup
   4:	aload_0
   5:	invokevirtual	#82; //Method bigInteger:()Ljava/math/BigInteger;
   8:	aload_1
   9:	invokevirtual	#82; //Method bigInteger:()Ljava/math/BigInteger;
   12:	invokevirtual	#220; //Method java/math/BigInteger.xor:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
   15:	invokespecial	#160; //Method "<init>":(Ljava/math/BigInteger;)V
   18:	areturn
  LineNumberTable: 
   line 202: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      19      0    this       Lscala/math/BigInt;
   0      19      1    that       Lscala/math/BigInt;


public scala.math.BigInt $bar(scala.math.BigInt);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#57; //class scala/math/BigInt
   3:	dup
   4:	aload_0
   5:	invokevirtual	#82; //Method bigInteger:()Ljava/math/BigInteger;
   8:	aload_1
   9:	invokevirtual	#82; //Method bigInteger:()Ljava/math/BigInteger;
   12:	invokevirtual	#224; //Method java/math/BigInteger.or:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
   15:	invokespecial	#160; //Method "<init>":(Ljava/math/BigInteger;)V
   18:	areturn
  LineNumberTable: 
   line 198: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      19      0    this       Lscala/math/BigInt;
   0      19      1    that       Lscala/math/BigInt;


public scala.math.BigInt $amp(scala.math.BigInt);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#57; //class scala/math/BigInt
   3:	dup
   4:	aload_0
   5:	invokevirtual	#82; //Method bigInteger:()Ljava/math/BigInteger;
   8:	aload_1
   9:	invokevirtual	#82; //Method bigInteger:()Ljava/math/BigInteger;
   12:	invokevirtual	#228; //Method java/math/BigInteger.and:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
   15:	invokespecial	#160; //Method "<init>":(Ljava/math/BigInteger;)V
   18:	areturn
  LineNumberTable: 
   line 194: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      19      0    this       Lscala/math/BigInt;
   0      19      1    that       Lscala/math/BigInt;


public scala.math.BigInt $greater$greater(int);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#57; //class scala/math/BigInt
   3:	dup
   4:	aload_0
   5:	invokevirtual	#82; //Method bigInteger:()Ljava/math/BigInteger;
   8:	iload_1
   9:	invokevirtual	#232; //Method java/math/BigInteger.shiftRight:(I)Ljava/math/BigInteger;
   12:	invokespecial	#160; //Method "<init>":(Ljava/math/BigInteger;)V
   15:	areturn
  LineNumberTable: 
   line 190: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      16      0    this       Lscala/math/BigInt;
   0      16      1    n       I


public scala.math.BigInt $less$less(int);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#57; //class scala/math/BigInt
   3:	dup
   4:	aload_0
   5:	invokevirtual	#82; //Method bigInteger:()Ljava/math/BigInteger;
   8:	iload_1
   9:	invokevirtual	#236; //Method java/math/BigInteger.shiftLeft:(I)Ljava/math/BigInteger;
   12:	invokespecial	#160; //Method "<init>":(Ljava/math/BigInteger;)V
   15:	areturn
  LineNumberTable: 
   line 186: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      16      0    this       Lscala/math/BigInt;
   0      16      1    n       I


public scala.Tuple2 $div$percent(scala.math.BigInt);
  Code:
   Stack=7, Locals=3, Args_size=2
   0:	aload_0
   1:	invokevirtual	#82; //Method bigInteger:()Ljava/math/BigInteger;
   4:	aload_1
   5:	invokevirtual	#82; //Method bigInteger:()Ljava/math/BigInteger;
   8:	invokevirtual	#242; //Method java/math/BigInteger.divideAndRemainder:(Ljava/math/BigInteger;)[Ljava/math/BigInteger;
   11:	astore_2
   12:	new	#244; //class scala/Tuple2
   15:	dup
   16:	new	#57; //class scala/math/BigInt
   19:	dup
   20:	aload_2
   21:	iconst_0
   22:	aaload
   23:	invokespecial	#160; //Method "<init>":(Ljava/math/BigInteger;)V
   26:	new	#57; //class scala/math/BigInt
   29:	dup
   30:	aload_2
   31:	iconst_1
   32:	aaload
   33:	invokespecial	#160; //Method "<init>":(Ljava/math/BigInteger;)V
   36:	invokespecial	#247; //Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
   39:	areturn
  LineNumberTable: 
   line 180: 0
   line 181: 12

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      40      0    this       Lscala/math/BigInt;
   0      40      1    that       Lscala/math/BigInt;
   12      27      2    dr       [Ljava/math/BigInteger;

  Signature: length = 0x2
   00 FFFFFFFA 

public scala.math.BigInt $percent(scala.math.BigInt);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#57; //class scala/math/BigInt
   3:	dup
   4:	aload_0
   5:	invokevirtual	#82; //Method bigInteger:()Ljava/math/BigInteger;
   8:	aload_1
   9:	invokevirtual	#82; //Method bigInteger:()Ljava/math/BigInteger;
   12:	invokevirtual	#254; //Method java/math/BigInteger.remainder:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
   15:	invokespecial	#160; //Method "<init>":(Ljava/math/BigInteger;)V
   18:	areturn
  LineNumberTable: 
   line 175: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      19      0    this       Lscala/math/BigInt;
   0      19      1    that       Lscala/math/BigInt;


public scala.math.BigInt $div(scala.math.BigInt);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#57; //class scala/math/BigInt
   3:	dup
   4:	aload_0
   5:	invokevirtual	#82; //Method bigInteger:()Ljava/math/BigInteger;
   8:	aload_1
   9:	invokevirtual	#82; //Method bigInteger:()Ljava/math/BigInteger;
   12:	invokevirtual	#258; //Method java/math/BigInteger.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
   15:	invokespecial	#160; //Method "<init>":(Ljava/math/BigInteger;)V
   18:	areturn
  LineNumberTable: 
   line 171: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      19      0    this       Lscala/math/BigInt;
   0      19      1    that       Lscala/math/BigInt;


public scala.math.BigInt $times(scala.math.BigInt);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#57; //class scala/math/BigInt
   3:	dup
   4:	aload_0
   5:	invokevirtual	#82; //Method bigInteger:()Ljava/math/BigInteger;
   8:	aload_1
   9:	invokevirtual	#82; //Method bigInteger:()Ljava/math/BigInteger;
   12:	invokevirtual	#262; //Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
   15:	invokespecial	#160; //Method "<init>":(Ljava/math/BigInteger;)V
   18:	areturn
  LineNumberTable: 
   line 167: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      19      0    this       Lscala/math/BigInt;
   0      19      1    that       Lscala/math/BigInt;


public scala.math.BigInt $minus(scala.math.BigInt);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#57; //class scala/math/BigInt
   3:	dup
   4:	aload_0
   5:	invokevirtual	#82; //Method bigInteger:()Ljava/math/BigInteger;
   8:	aload_1
   9:	invokevirtual	#82; //Method bigInteger:()Ljava/math/BigInteger;
   12:	invokevirtual	#266; //Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
   15:	invokespecial	#160; //Method "<init>":(Ljava/math/BigInteger;)V
   18:	areturn
  LineNumberTable: 
   line 163: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      19      0    this       Lscala/math/BigInt;
   0      19      1    that       Lscala/math/BigInt;


public scala.math.BigInt $plus(scala.math.BigInt);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#57; //class scala/math/BigInt
   3:	dup
   4:	aload_0
   5:	invokevirtual	#82; //Method bigInteger:()Ljava/math/BigInteger;
   8:	aload_1
   9:	invokevirtual	#82; //Method bigInteger:()Ljava/math/BigInteger;
   12:	invokevirtual	#270; //Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
   15:	invokespecial	#160; //Method "<init>":(Ljava/math/BigInteger;)V
   18:	areturn
  LineNumberTable: 
   line 159: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      19      0    this       Lscala/math/BigInt;
   0      19      1    that       Lscala/math/BigInt;


public boolean $greater(scala.math.BigInt);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokevirtual	#276; //Method compare:(Lscala/math/BigInt;)I
   5:	iconst_0
   6:	if_icmple	13
   9:	iconst_1
   10:	goto	14
   13:	iconst_0
   14:	ireturn
  LineNumberTable: 
   line 155: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      15      0    this       Lscala/math/BigInt;
   0      15      1    that       Lscala/math/BigInt;


public boolean $less(scala.math.BigInt);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokevirtual	#276; //Method compare:(Lscala/math/BigInt;)I
   5:	iconst_0
   6:	if_icmpge	13
   9:	iconst_1
   10:	goto	14
   13:	iconst_0
   14:	ireturn
  LineNumberTable: 
   line 151: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      15      0    this       Lscala/math/BigInt;
   0      15      1    that       Lscala/math/BigInt;


public boolean $greater$eq(scala.math.BigInt);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokevirtual	#276; //Method compare:(Lscala/math/BigInt;)I
   5:	iconst_0
   6:	if_icmplt	13
   9:	iconst_1
   10:	goto	14
   13:	iconst_0
   14:	ireturn
  LineNumberTable: 
   line 147: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      15      0    this       Lscala/math/BigInt;
   0      15      1    that       Lscala/math/BigInt;


public boolean $less$eq(scala.math.BigInt);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokevirtual	#276; //Method compare:(Lscala/math/BigInt;)I
   5:	iconst_0
   6:	if_icmpgt	13
   9:	iconst_1
   10:	goto	14
   13:	iconst_0
   14:	ireturn
  LineNumberTable: 
   line 143: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      15      0    this       Lscala/math/BigInt;
   0      15      1    that       Lscala/math/BigInt;


public int compare(scala.math.BigInt);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	invokevirtual	#82; //Method bigInteger:()Ljava/math/BigInteger;
   4:	aload_1
   5:	invokevirtual	#82; //Method bigInteger:()Ljava/math/BigInteger;
   8:	invokevirtual	#283; //Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
   11:	ireturn
  LineNumberTable: 
   line 139: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      12      0    this       Lscala/math/BigInt;
   0      12      1    that       Lscala/math/BigInt;


public boolean equals(scala.math.BigInt);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokevirtual	#276; //Method compare:(Lscala/math/BigInt;)I
   5:	iconst_0
   6:	if_icmpne	13
   9:	iconst_1
   10:	goto	14
   13:	iconst_0
   14:	ireturn
  LineNumberTable: 
   line 135: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      15      0    this       Lscala/math/BigInt;
   0      15      1    that       Lscala/math/BigInt;


public java.math.BigInteger underlying();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#82; //Method bigInteger:()Ljava/math/BigInteger;
   4:	areturn
  LineNumberTable: 
   line 131: 0


public boolean isWhole();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	iconst_1
   1:	ireturn
  LineNumberTable: 
   line 130: 0


public boolean equals(java.lang.Object);
  Code:
   Stack=4, Locals=4, Args_size=2
   0:	aload_1
   1:	instanceof	#57; //class scala/math/BigInt
   4:	ifeq	36
   7:	aload_1
   8:	checkcast	#57; //class scala/math/BigInt
   11:	astore_2
   12:	iconst_1
   13:	ifeq	24
   16:	aload_0
   17:	aload_2
   18:	invokevirtual	#289; //Method equals:(Lscala/math/BigInt;)Z
   21:	goto	93
   24:	new	#291; //class scala/MatchError
   27:	dup
   28:	aload_1
   29:	invokevirtual	#294; //Method java/lang/Object.toString:()Ljava/lang/String;
   32:	invokespecial	#297; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   35:	athrow
   36:	aload_1
   37:	instanceof	#299; //class scala/math/BigDecimal
   40:	ifeq	82
   43:	aload_1
   44:	checkcast	#299; //class scala/math/BigDecimal
   47:	astore_3
   48:	iconst_1
   49:	ifeq	70
   52:	aload_3
   53:	invokevirtual	#303; //Method scala/math/BigDecimal.toBigIntExact:()Lscala/Option;
   56:	new	#305; //class scala/math/BigInt$$anonfun$equals$1
   59:	dup
   60:	aload_0
   61:	invokespecial	#308; //Method scala/math/BigInt$$anonfun$equals$1."<init>":(Lscala/math/BigInt;)V
   64:	invokevirtual	#314; //Method scala/Option.exists:(Lscala/Function1;)Z
   67:	goto	93
   70:	new	#291; //class scala/MatchError
   73:	dup
   74:	aload_1
   75:	invokevirtual	#294; //Method java/lang/Object.toString:()Ljava/lang/String;
   78:	invokespecial	#297; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   81:	athrow
   82:	iconst_1
   83:	ifeq	94
   86:	aload_0
   87:	aload_1
   88:	invokeinterface	#319,  2; //InterfaceMethod scala/math/ScalaNumericConversions.unifiedPrimitiveEquals:(Ljava/lang/Object;)Z
   93:	ireturn
   94:	new	#291; //class scala/MatchError
   97:	dup
   98:	aload_1
   99:	invokevirtual	#294; //Method java/lang/Object.toString:()Ljava/lang/String;
   102:	invokespecial	#297; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   105:	athrow
  LineNumberTable: 
   line 124: 0
   line 21: 12
   line 125: 16
   line 124: 24
   line 21: 48
   line 126: 52
   line 124: 70
   line 21: 82
   line 127: 86
   line 124: 93

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      106      0    this       Lscala/math/BigInt;
   0      106      1    that       Ljava/lang/Object;
   12      24      2    temp2       Lscala/math/BigInt;
   48      34      3    temp3       Lscala/math/BigDecimal;


public int hashCode();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	getstatic	#11; //Field scala/math/BigInt$.MODULE$:Lscala/math/BigInt$;
   4:	invokevirtual	#50; //Method scala/math/BigInt$.MinLong:()Lscala/math/BigInt;
   7:	invokevirtual	#326; //Method $greater$eq:(Lscala/math/BigInt;)Z
   10:	ifeq	35
   13:	aload_0
   14:	getstatic	#11; //Field scala/math/BigInt$.MODULE$:Lscala/math/BigInt$;
   17:	invokevirtual	#47; //Method scala/math/BigInt$.MaxLong:()Lscala/math/BigInt;
   20:	invokevirtual	#328; //Method $less$eq:(Lscala/math/BigInt;)Z
   23:	ifeq	35
   26:	aload_0
   27:	invokeinterface	#331,  1; //InterfaceMethod scala/math/ScalaNumericConversions.unifiedPrimitiveHashcode:()I
   32:	goto	42
   35:	aload_0
   36:	invokevirtual	#82; //Method bigInteger:()Ljava/math/BigInteger;
   39:	invokevirtual	#333; //Method java/math/BigInteger.hashCode:()I
   42:	ireturn
  LineNumberTable: 
   line 119: 0
   line 120: 35
   line 119: 42


public java.math.BigInteger bigInteger();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#59; //Field bigInteger:Ljava/math/BigInteger;
   4:	areturn
  LineNumberTable: 
   line 115: 0


public scala.math.BigInt until$default$2();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	getstatic	#11; //Field scala/math/BigInt$.MODULE$:Lscala/math/BigInt$;
   3:	iconst_1
   4:	invokevirtual	#43; //Method scala/math/BigInt$.apply:(I)Lscala/math/BigInt;
   7:	areturn
  LineNumberTable: 
   line 356: 0


public scala.math.BigInt to$default$2();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	getstatic	#11; //Field scala/math/BigInt$.MODULE$:Lscala/math/BigInt$;
   3:	iconst_1
   4:	invokevirtual	#43; //Method scala/math/BigInt$.apply:(I)Lscala/math/BigInt;
   7:	areturn
  LineNumberTable: 
   line 360: 0


public boolean unifiedPrimitiveEquals(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#338; //Method scala/math/ScalaNumericConversions$class.unifiedPrimitiveEquals:(Lscala/math/ScalaNumericConversions;Ljava/lang/Object;)Z
   5:	ireturn
  LineNumberTable: 
   line 115: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/math/BigInt;
   0      6      1    x       Ljava/lang/Object;


public int unifiedPrimitiveHashcode();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#342; //Method scala/math/ScalaNumericConversions$class.unifiedPrimitiveHashcode:(Lscala/math/ScalaNumericConversions;)I
   4:	ireturn
  LineNumberTable: 
   line 115: 0


public boolean isValidChar();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#346; //Method scala/math/ScalaNumericConversions$class.isValidChar:(Lscala/math/ScalaNumericConversions;)Z
   4:	ireturn
  LineNumberTable: 
   line 115: 0


public boolean isValidInt();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#349; //Method scala/math/ScalaNumericConversions$class.isValidInt:(Lscala/math/ScalaNumericConversions;)Z
   4:	ireturn
  LineNumberTable: 
   line 115: 0


public boolean isValidShort();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#352; //Method scala/math/ScalaNumericConversions$class.isValidShort:(Lscala/math/ScalaNumericConversions;)Z
   4:	ireturn
  LineNumberTable: 
   line 115: 0


public boolean isValidByte();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#355; //Method scala/math/ScalaNumericConversions$class.isValidByte:(Lscala/math/ScalaNumericConversions;)Z
   4:	ireturn
  LineNumberTable: 
   line 115: 0


public double toDouble();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#359; //Method scala/math/ScalaNumericConversions$class.toDouble:(Lscala/math/ScalaNumericConversions;)D
   4:	dreturn
  LineNumberTable: 
   line 115: 0


public float toFloat();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#363; //Method scala/math/ScalaNumericConversions$class.toFloat:(Lscala/math/ScalaNumericConversions;)F
   4:	freturn
  LineNumberTable: 
   line 115: 0


public long toLong();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#367; //Method scala/math/ScalaNumericConversions$class.toLong:(Lscala/math/ScalaNumericConversions;)J
   4:	lreturn
  LineNumberTable: 
   line 115: 0


public int toInt();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#370; //Method scala/math/ScalaNumericConversions$class.toInt:(Lscala/math/ScalaNumericConversions;)I
   4:	ireturn
  LineNumberTable: 
   line 115: 0


public short toShort();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#374; //Method scala/math/ScalaNumericConversions$class.toShort:(Lscala/math/ScalaNumericConversions;)S
   4:	ireturn
  LineNumberTable: 
   line 115: 0


public byte toByte();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#378; //Method scala/math/ScalaNumericConversions$class.toByte:(Lscala/math/ScalaNumericConversions;)B
   4:	ireturn
  LineNumberTable: 
   line 115: 0


public char toChar();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#382; //Method scala/math/ScalaNumericConversions$class.toChar:(Lscala/math/ScalaNumericConversions;)C
   4:	ireturn
  LineNumberTable: 
   line 115: 0


}

