Compiled from "Numeric.scala"
public interface scala.math.Numeric$IntIsIntegral extends scala.math.Integral,scala.ScalaObject
  SourceFile: "Numeric.scala"
  Scala: length = 0x
   
  Signature: length = 0x2
   00 14 
  InnerClass: 
   public abstract IntIsIntegral=class scala/math/Numeric$IntIsIntegral of class scala/math/Numeric
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	Numeric.scala;
Asciz	plus;
Asciz	(II)I;
Asciz	minus;
Asciz	times;
Asciz	quot;
Asciz	rem;
Asciz	negate;
Asciz	(I)I;
Asciz	fromInt;
Asciz	toInt;
Asciz	toLong;
Asciz	(I)J;
Asciz	toFloat;
Asciz	(I)F;
Asciz	toDouble;
Asciz	(I)D;
Asciz	Scala;
Asciz	Ljava/lang/Object;Lscala/math/Integral<Ljava/lang/Integer;>;Lscala/ScalaObject;;
Asciz	Signature;
Asciz	InnerClasses;
Asciz	scala/math/Numeric$IntIsIntegral;
class	scala/math/Numeric$IntIsIntegral
Asciz	scala/math/Numeric;
class	scala/math/Numeric
Asciz	IntIsIntegral;
Asciz	java/lang/Object;
class	java/lang/Object
Asciz	scala/math/Integral;
class	scala/math/Integral
Asciz	scala/ScalaObject;
class	scala/ScalaObject

{
public abstract int plus(int, int);
  Signature: (II)I

public abstract int minus(int, int);
  Signature: (II)I

public abstract int times(int, int);
  Signature: (II)I

public abstract int quot(int, int);
  Signature: (II)I

public abstract int rem(int, int);
  Signature: (II)I

public abstract int negate(int);
  Signature: (I)I

public abstract int fromInt(int);
  Signature: (I)I

public abstract int toInt(int);
  Signature: (I)I

public abstract long toLong(int);
  Signature: (I)J

public abstract float toFloat(int);
  Signature: (I)F

public abstract double toDouble(int);
  Signature: (I)D

}

