Compiled from "Numeric.scala"
public interface scala.math.Numeric$BigIntIsIntegral extends scala.math.Integral,scala.ScalaObject
  SourceFile: "Numeric.scala"
  Signature: length = 0x2
   00 15 
  Scala: length = 0x
   
  InnerClass: 
   public abstract BigIntIsIntegral=class scala/math/Numeric$BigIntIsIntegral of class scala/math/Numeric
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	Numeric.scala;
Asciz	toDouble;
Asciz	(Lscala/math/BigInt;)D;
Asciz	toFloat;
Asciz	(Lscala/math/BigInt;)F;
Asciz	toLong;
Asciz	(Lscala/math/BigInt;)J;
Asciz	toInt;
Asciz	(Lscala/math/BigInt;)I;
Asciz	fromInt;
Asciz	(I)Lscala/math/BigInt;;
Asciz	negate;
Asciz	(Lscala/math/BigInt;)Lscala/math/BigInt;;
Asciz	rem;
Asciz	(Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;;
Asciz	quot;
Asciz	times;
Asciz	minus;
Asciz	plus;
Asciz	Ljava/lang/Object;Lscala/math/Integral<Lscala/math/BigInt;>;Lscala/ScalaObject;;
Asciz	Signature;
Asciz	Scala;
Asciz	InnerClasses;
Asciz	scala/math/Numeric$BigIntIsIntegral;
class	scala/math/Numeric$BigIntIsIntegral
Asciz	scala/math/Numeric;
class	scala/math/Numeric
Asciz	BigIntIsIntegral;
Asciz	java/lang/Object;
class	java/lang/Object
Asciz	scala/math/Integral;
class	scala/math/Integral
Asciz	scala/ScalaObject;
class	scala/ScalaObject

{
public abstract double toDouble(scala.math.BigInt);
  Signature: (Lscala/math/BigInt;)D

public abstract float toFloat(scala.math.BigInt);
  Signature: (Lscala/math/BigInt;)F

public abstract long toLong(scala.math.BigInt);
  Signature: (Lscala/math/BigInt;)J

public abstract int toInt(scala.math.BigInt);
  Signature: (Lscala/math/BigInt;)I

public abstract scala.math.BigInt fromInt(int);
  Signature: (I)Lscala/math/BigInt;

public abstract scala.math.BigInt negate(scala.math.BigInt);
  Signature: (Lscala/math/BigInt;)Lscala/math/BigInt;

public abstract scala.math.BigInt rem(scala.math.BigInt, scala.math.BigInt);
  Signature: (Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;

public abstract scala.math.BigInt quot(scala.math.BigInt, scala.math.BigInt);
  Signature: (Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;

public abstract scala.math.BigInt times(scala.math.BigInt, scala.math.BigInt);
  Signature: (Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;

public abstract scala.math.BigInt minus(scala.math.BigInt, scala.math.BigInt);
  Signature: (Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;

public abstract scala.math.BigInt plus(scala.math.BigInt, scala.math.BigInt);
  Signature: (Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;

}

