Compiled from "Numeric.scala"
public interface scala.math.Numeric$BigDecimalIsConflicted extends scala.math.Numeric,scala.ScalaObject
  SourceFile: "Numeric.scala"
  Signature: length = 0x2
   00 13 
  Scala: length = 0x
   
  InnerClass: 
   public abstract BigDecimalIsConflicted=class scala/math/Numeric$BigDecimalIsConflicted of class scala/math/Numeric
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	Numeric.scala;
Asciz	plus;
Asciz	(Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/math/BigDecimal;;
Asciz	minus;
Asciz	times;
Asciz	negate;
Asciz	(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;;
Asciz	fromInt;
Asciz	(I)Lscala/math/BigDecimal;;
Asciz	toInt;
Asciz	(Lscala/math/BigDecimal;)I;
Asciz	toLong;
Asciz	(Lscala/math/BigDecimal;)J;
Asciz	toFloat;
Asciz	(Lscala/math/BigDecimal;)F;
Asciz	toDouble;
Asciz	(Lscala/math/BigDecimal;)D;
Asciz	Ljava/lang/Object;Lscala/math/Numeric<Lscala/math/BigDecimal;>;Lscala/ScalaObject;;
Asciz	Signature;
Asciz	Scala;
Asciz	InnerClasses;
Asciz	scala/math/Numeric$BigDecimalIsConflicted;
class	scala/math/Numeric$BigDecimalIsConflicted
Asciz	scala/math/Numeric;
class	scala/math/Numeric
Asciz	BigDecimalIsConflicted;
Asciz	java/lang/Object;
class	java/lang/Object
Asciz	scala/ScalaObject;
class	scala/ScalaObject

{
public abstract scala.math.BigDecimal plus(scala.math.BigDecimal, scala.math.BigDecimal);
  Signature: (Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/math/BigDecimal;

public abstract scala.math.BigDecimal minus(scala.math.BigDecimal, scala.math.BigDecimal);
  Signature: (Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/math/BigDecimal;

public abstract scala.math.BigDecimal times(scala.math.BigDecimal, scala.math.BigDecimal);
  Signature: (Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/math/BigDecimal;

public abstract scala.math.BigDecimal negate(scala.math.BigDecimal);
  Signature: (Lscala/math/BigDecimal;)Lscala/math/BigDecimal;

public abstract scala.math.BigDecimal fromInt(int);
  Signature: (I)Lscala/math/BigDecimal;

public abstract int toInt(scala.math.BigDecimal);
  Signature: (Lscala/math/BigDecimal;)I

public abstract long toLong(scala.math.BigDecimal);
  Signature: (Lscala/math/BigDecimal;)J

public abstract float toFloat(scala.math.BigDecimal);
  Signature: (Lscala/math/BigDecimal;)F

public abstract double toDouble(scala.math.BigDecimal);
  Signature: (Lscala/math/BigDecimal;)D

}

