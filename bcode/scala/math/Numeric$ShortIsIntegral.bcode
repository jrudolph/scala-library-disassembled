Compiled from "Numeric.scala"
public interface scala.math.Numeric$ShortIsIntegral extends scala.math.Integral,scala.ScalaObject
  SourceFile: "Numeric.scala"
  Scala: length = 0x
   
  Signature: length = 0x2
   00 16 
  InnerClass: 
   public abstract ShortIsIntegral=class scala/math/Numeric$ShortIsIntegral of class scala/math/Numeric
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	Numeric.scala;
Asciz	plus;
Asciz	(SS)S;
Asciz	minus;
Asciz	times;
Asciz	quot;
Asciz	rem;
Asciz	negate;
Asciz	(S)S;
Asciz	fromInt;
Asciz	(I)S;
Asciz	toInt;
Asciz	(S)I;
Asciz	toLong;
Asciz	(S)J;
Asciz	toFloat;
Asciz	(S)F;
Asciz	toDouble;
Asciz	(S)D;
Asciz	Scala;
Asciz	Ljava/lang/Object;Lscala/math/Integral<Ljava/lang/Short;>;Lscala/ScalaObject;;
Asciz	Signature;
Asciz	InnerClasses;
Asciz	scala/math/Numeric$ShortIsIntegral;
class	scala/math/Numeric$ShortIsIntegral
Asciz	scala/math/Numeric;
class	scala/math/Numeric
Asciz	ShortIsIntegral;
Asciz	java/lang/Object;
class	java/lang/Object
Asciz	scala/math/Integral;
class	scala/math/Integral
Asciz	scala/ScalaObject;
class	scala/ScalaObject

{
public abstract short plus(short, short);
  Signature: (SS)S

public abstract short minus(short, short);
  Signature: (SS)S

public abstract short times(short, short);
  Signature: (SS)S

public abstract short quot(short, short);
  Signature: (SS)S

public abstract short rem(short, short);
  Signature: (SS)S

public abstract short negate(short);
  Signature: (S)S

public abstract short fromInt(int);
  Signature: (I)S

public abstract int toInt(short);
  Signature: (S)I

public abstract long toLong(short);
  Signature: (S)J

public abstract float toFloat(short);
  Signature: (S)F

public abstract double toDouble(short);
  Signature: (S)D

}

