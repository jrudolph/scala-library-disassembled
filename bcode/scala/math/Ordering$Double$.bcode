Compiled from "Ordering.scala"
public final class scala.math.Ordering$Double$ extends java.lang.Object implements scala.math.Ordering$DoubleOrdering,scala.ScalaObject
  SourceFile: "Ordering.scala"
  Scala: length = 0x
   
  InnerClass: 
   public #118= #117 of #57; //Ops=class scala/math/Ordering$Ops of class scala/math/Ordering
   public abstract #119= #45 of #57; //DoubleOrdering=class scala/math/Ordering$DoubleOrdering of class scala/math/Ordering
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Ordering.scala;
const #3 = Asciz	Scala;
const #4 = Asciz	MODULE$;
const #5 = Asciz	Lscala/math/Ordering$Double$;;
const #6 = Asciz	<clinit>;
const #7 = Asciz	()V;
const #8 = Asciz	Code;
const #9 = Asciz	scala/math/Ordering$Double$;
const #10 = class	#9;	//  scala/math/Ordering$Double$
const #11 = Asciz	<init>;
const #12 = NameAndType	#11:#7;//  "<init>":()V
const #13 = Method	#10.#12;	//  scala/math/Ordering$Double$."<init>":()V
const #14 = Asciz	LineNumberTable;
const #15 = Asciz	java/lang/Object;
const #16 = class	#15;	//  java/lang/Object
const #17 = Method	#16.#12;	//  java/lang/Object."<init>":()V
const #18 = NameAndType	#4:#5;//  MODULE$:Lscala/math/Ordering$Double$;
const #19 = Field	#10.#18;	//  scala/math/Ordering$Double$.MODULE$:Lscala/math/Ordering$Double$;
const #20 = Asciz	scala/math/PartialOrdering$class;
const #21 = class	#20;	//  scala/math/PartialOrdering$class
const #22 = Asciz	$init$;
const #23 = Asciz	(Lscala/math/PartialOrdering;)V;
const #24 = NameAndType	#22:#23;//  $init$:(Lscala/math/PartialOrdering;)V
const #25 = Method	#21.#24;	//  scala/math/PartialOrdering$class.$init$:(Lscala/math/PartialOrdering;)V
const #26 = Asciz	scala/math/Ordering$class;
const #27 = class	#26;	//  scala/math/Ordering$class
const #28 = Asciz	(Lscala/math/Ordering;)V;
const #29 = NameAndType	#22:#28;//  $init$:(Lscala/math/Ordering;)V
const #30 = Method	#27.#29;	//  scala/math/Ordering$class.$init$:(Lscala/math/Ordering;)V
const #31 = Asciz	scala/math/Ordering$DoubleOrdering$class;
const #32 = class	#31;	//  scala/math/Ordering$DoubleOrdering$class
const #33 = Asciz	(Lscala/math/Ordering$DoubleOrdering;)V;
const #34 = NameAndType	#22:#33;//  $init$:(Lscala/math/Ordering$DoubleOrdering;)V
const #35 = Method	#32.#34;	//  scala/math/Ordering$DoubleOrdering$class.$init$:(Lscala/math/Ordering$DoubleOrdering;)V
const #36 = Asciz	compare;
const #37 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)I;
const #38 = Asciz	scala/runtime/BoxesRunTime;
const #39 = class	#38;	//  scala/runtime/BoxesRunTime
const #40 = Asciz	unboxToDouble;
const #41 = Asciz	(Ljava/lang/Object;)D;
const #42 = NameAndType	#40:#41;//  unboxToDouble:(Ljava/lang/Object;)D
const #43 = Method	#39.#42;	//  scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
const #44 = Asciz	scala/math/Ordering$DoubleOrdering;
const #45 = class	#44;	//  scala/math/Ordering$DoubleOrdering
const #46 = Asciz	(DD)I;
const #47 = NameAndType	#36:#46;//  compare:(DD)I
const #48 = InterfaceMethod	#45.#47;	//  scala/math/Ordering$DoubleOrdering.compare:(DD)I
const #49 = Asciz	this;
const #50 = Asciz	x;
const #51 = Asciz	Ljava/lang/Object;;
const #52 = Asciz	y;
const #53 = Asciz	LocalVariableTable;
const #54 = Asciz	tryCompare;
const #55 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Option;;
const #56 = Asciz	scala/math/Ordering;
const #57 = class	#56;	//  scala/math/Ordering
const #58 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;;
const #59 = NameAndType	#54:#58;//  tryCompare:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
const #60 = InterfaceMethod	#57.#59;	//  scala/math/Ordering.tryCompare:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
const #61 = Asciz	reverse;
const #62 = Asciz	()Lscala/math/PartialOrdering;;
const #63 = Asciz	()Lscala/math/Ordering;;
const #64 = NameAndType	#61:#63;//  reverse:()Lscala/math/Ordering;
const #65 = InterfaceMethod	#57.#64;	//  scala/math/Ordering.reverse:()Lscala/math/Ordering;
const #66 = Asciz	mkOrderingOps;
const #67 = Asciz	(Ljava/lang/Object;)Lscala/math/Ordering$Ops;;
const #68 = Asciz	(Lscala/math/Ordering;Ljava/lang/Object;)Lscala/math/Ordering$Ops;;
const #69 = NameAndType	#66:#68;//  mkOrderingOps:(Lscala/math/Ordering;Ljava/lang/Object;)Lscala/math/Ordering$Ops;
const #70 = Method	#27.#69;	//  scala/math/Ordering$class.mkOrderingOps:(Lscala/math/Ordering;Ljava/lang/Object;)Lscala/math/Ordering$Ops;
const #71 = Asciz	lhs;
const #72 = Asciz	Signature;
const #73 = Asciz	on;
const #74 = Asciz	(Lscala/Function1;)Lscala/math/Ordering;;
const #75 = Asciz	(Lscala/math/Ordering;Lscala/Function1;)Lscala/math/Ordering;;
const #76 = NameAndType	#73:#75;//  on:(Lscala/math/Ordering;Lscala/Function1;)Lscala/math/Ordering;
const #77 = Method	#27.#76;	//  scala/math/Ordering$class.on:(Lscala/math/Ordering;Lscala/Function1;)Lscala/math/Ordering;
const #78 = Asciz	f;
const #79 = Asciz	Lscala/Function1;;
const #80 = Asciz	(Lscala/math/Ordering;)Lscala/math/Ordering;;
const #81 = NameAndType	#61:#80;//  reverse:(Lscala/math/Ordering;)Lscala/math/Ordering;
const #82 = Method	#27.#81;	//  scala/math/Ordering$class.reverse:(Lscala/math/Ordering;)Lscala/math/Ordering;
const #83 = Asciz	min;
const #84 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;;
const #85 = Asciz	(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;;
const #86 = NameAndType	#83:#85;//  min:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
const #87 = Method	#27.#86;	//  scala/math/Ordering$class.min:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
const #88 = Asciz	max;
const #89 = NameAndType	#88:#85;//  max:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
const #90 = Method	#27.#89;	//  scala/math/Ordering$class.max:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
const #91 = Asciz	equiv;
const #92 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)Z;
const #93 = Asciz	(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z;
const #94 = NameAndType	#91:#93;//  equiv:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #95 = Method	#27.#94;	//  scala/math/Ordering$class.equiv:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #96 = Asciz	gt;
const #97 = NameAndType	#96:#93;//  gt:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #98 = Method	#27.#97;	//  scala/math/Ordering$class.gt:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #99 = Asciz	lt;
const #100 = NameAndType	#99:#93;//  lt:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #101 = Method	#27.#100;	//  scala/math/Ordering$class.lt:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #102 = Asciz	gteq;
const #103 = NameAndType	#102:#93;//  gteq:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #104 = Method	#27.#103;	//  scala/math/Ordering$class.gteq:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #105 = Asciz	lteq;
const #106 = NameAndType	#105:#93;//  lteq:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #107 = Method	#27.#106;	//  scala/math/Ordering$class.lteq:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #108 = Asciz	(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;;
const #109 = NameAndType	#54:#108;//  tryCompare:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
const #110 = Method	#27.#109;	//  scala/math/Ordering$class.tryCompare:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
const #111 = Asciz	(Lscala/math/Ordering$DoubleOrdering;DD)I;
const #112 = NameAndType	#36:#111;//  compare:(Lscala/math/Ordering$DoubleOrdering;DD)I
const #113 = Method	#32.#112;	//  scala/math/Ordering$DoubleOrdering$class.compare:(Lscala/math/Ordering$DoubleOrdering;DD)I
const #114 = Asciz	D;
const #115 = Asciz	InnerClasses;
const #116 = Asciz	scala/math/Ordering$Ops;
const #117 = class	#116;	//  scala/math/Ordering$Ops
const #118 = Asciz	Ops;
const #119 = Asciz	DoubleOrdering;
const #120 = Asciz	scala/ScalaObject;
const #121 = class	#120;	//  scala/ScalaObject

{
public static final scala.math.Ordering$Double$ MODULE$;

public static {};
  Code:
   Stack=1, Locals=0, Args_size=0
   0:	new	#10; //class scala/math/Ordering$Double$
   3:	invokespecial	#13; //Method "<init>":()V
   6:	return

public scala.math.Ordering$Double$();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokespecial	#17; //Method java/lang/Object."<init>":()V
   4:	aload_0
   5:	putstatic	#19; //Field MODULE$:Lscala/math/Ordering$Double$;
   8:	aload_0
   9:	invokestatic	#25; //Method scala/math/PartialOrdering$class.$init$:(Lscala/math/PartialOrdering;)V
   12:	aload_0
   13:	invokestatic	#30; //Method scala/math/Ordering$class.$init$:(Lscala/math/Ordering;)V
   16:	aload_0
   17:	invokestatic	#35; //Method scala/math/Ordering$DoubleOrdering$class.$init$:(Lscala/math/Ordering$DoubleOrdering;)V
   20:	return
  LineNumberTable: 
   line 189: 0


public int compare(java.lang.Object, java.lang.Object);
  Code:
   Stack=5, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#43; //Method scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
   5:	aload_2
   6:	invokestatic	#43; //Method scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
   9:	invokeinterface	#48,  5; //InterfaceMethod scala/math/Ordering$DoubleOrdering.compare:(DD)I
   14:	ireturn
  LineNumberTable: 
   line 189: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      15      0    this       Lscala/math/Ordering$Double$;
   0      15      1    x       Ljava/lang/Object;
   0      15      2    y       Ljava/lang/Object;


public scala.Option tryCompare(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokeinterface	#60,  3; //InterfaceMethod scala/math/Ordering.tryCompare:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
   8:	areturn
  LineNumberTable: 
   line 189: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/math/Ordering$Double$;
   0      9      1    x       Ljava/lang/Object;
   0      9      2    y       Ljava/lang/Object;


public scala.math.PartialOrdering reverse();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokeinterface	#65,  1; //InterfaceMethod scala/math/Ordering.reverse:()Lscala/math/Ordering;
   6:	areturn
  LineNumberTable: 
   line 189: 0


public scala.math.Ordering$Ops mkOrderingOps(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#70; //Method scala/math/Ordering$class.mkOrderingOps:(Lscala/math/Ordering;Ljava/lang/Object;)Lscala/math/Ordering$Ops;
   5:	areturn
  LineNumberTable: 
   line 189: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/math/Ordering$Double$;
   0      6      1    lhs       Ljava/lang/Object;

  Signature: length = 0x2
   00 43 

public scala.math.Ordering on(scala.Function1);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#77; //Method scala/math/Ordering$class.on:(Lscala/math/Ordering;Lscala/Function1;)Lscala/math/Ordering;
   5:	areturn
  LineNumberTable: 
   line 189: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/math/Ordering$Double$;
   0      6      1    f       Lscala/Function1;


public scala.math.Ordering reverse();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#82; //Method scala/math/Ordering$class.reverse:(Lscala/math/Ordering;)Lscala/math/Ordering;
   4:	areturn
  LineNumberTable: 
   line 189: 0


public java.lang.Object min(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#87; //Method scala/math/Ordering$class.min:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   6:	areturn
  LineNumberTable: 
   line 189: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/math/Ordering$Double$;
   0      7      1    x       Ljava/lang/Object;
   0      7      2    y       Ljava/lang/Object;


public java.lang.Object max(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#90; //Method scala/math/Ordering$class.max:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   6:	areturn
  LineNumberTable: 
   line 189: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/math/Ordering$Double$;
   0      7      1    x       Ljava/lang/Object;
   0      7      2    y       Ljava/lang/Object;


public boolean equiv(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#95; //Method scala/math/Ordering$class.equiv:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
   6:	ireturn
  LineNumberTable: 
   line 189: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/math/Ordering$Double$;
   0      7      1    x       Ljava/lang/Object;
   0      7      2    y       Ljava/lang/Object;


public boolean gt(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#98; //Method scala/math/Ordering$class.gt:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
   6:	ireturn
  LineNumberTable: 
   line 189: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/math/Ordering$Double$;
   0      7      1    x       Ljava/lang/Object;
   0      7      2    y       Ljava/lang/Object;


public boolean lt(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#101; //Method scala/math/Ordering$class.lt:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
   6:	ireturn
  LineNumberTable: 
   line 189: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/math/Ordering$Double$;
   0      7      1    x       Ljava/lang/Object;
   0      7      2    y       Ljava/lang/Object;


public boolean gteq(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#104; //Method scala/math/Ordering$class.gteq:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
   6:	ireturn
  LineNumberTable: 
   line 189: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/math/Ordering$Double$;
   0      7      1    x       Ljava/lang/Object;
   0      7      2    y       Ljava/lang/Object;


public boolean lteq(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#107; //Method scala/math/Ordering$class.lteq:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
   6:	ireturn
  LineNumberTable: 
   line 189: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/math/Ordering$Double$;
   0      7      1    x       Ljava/lang/Object;
   0      7      2    y       Ljava/lang/Object;


public scala.Some tryCompare(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#110; //Method scala/math/Ordering$class.tryCompare:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
   6:	areturn
  LineNumberTable: 
   line 189: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/math/Ordering$Double$;
   0      7      1    x       Ljava/lang/Object;
   0      7      2    y       Ljava/lang/Object;


public int compare(double, double);
  Code:
   Stack=5, Locals=5, Args_size=3
   0:	aload_0
   1:	dload_1
   2:	dload_3
   3:	invokestatic	#113; //Method scala/math/Ordering$DoubleOrdering$class.compare:(Lscala/math/Ordering$DoubleOrdering;DD)I
   6:	ireturn
  LineNumberTable: 
   line 189: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/math/Ordering$Double$;
   0      7      1    x       D
   0      7      3    y       D


}

