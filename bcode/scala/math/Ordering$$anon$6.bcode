Compiled from "Ordering.scala"
public final class scala.math.Ordering$$anon$6 extends java.lang.Object implements scala.math.Ordering
  SourceFile: "Ordering.scala"
  Signature: length = 0x2
   00 FFFFFF86 
  Scala: length = 0x
   
  InnerClass: 
   public Ops=class scala/math/Ordering$Ops of class scala/math/Ordering
   public final $anon$6=class scala/math/Ordering$$anon$6 of class scala/math/Ordering
   public abstract BooleanOrdering=class scala/math/Ordering$BooleanOrdering of class scala/math/Ordering
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	Ordering.scala;
Asciz	ord$1;
Asciz	Lscala/math/Ordering;;
Asciz	<init>;
Asciz	(Lscala/math/Ordering;)V;
Asciz	Code;
Asciz	LineNumberTable;
Asciz	scala/math/Ordering$$anon$6;
class	scala/math/Ordering$$anon$6
NameAndType	ord$1:Lscala/math/Ordering;
Field	scala/math/Ordering$$anon$6.ord$1:Lscala/math/Ordering;
Asciz	java/lang/Object;
class	java/lang/Object
Asciz	()V;
NameAndType	"<init>":()V
Method	java/lang/Object."<init>":()V
Asciz	scala/math/PartialOrdering$class;
class	scala/math/PartialOrdering$class
Asciz	$init$;
Asciz	(Lscala/math/PartialOrdering;)V;
NameAndType	$init$:(Lscala/math/PartialOrdering;)V
Method	scala/math/PartialOrdering$class.$init$:(Lscala/math/PartialOrdering;)V
Asciz	scala/math/Ordering$class;
class	scala/math/Ordering$class
NameAndType	$init$:(Lscala/math/Ordering;)V
Method	scala/math/Ordering$class.$init$:(Lscala/math/Ordering;)V
Asciz	compare;
Asciz	(Ljava/lang/Object;Ljava/lang/Object;)I;
Asciz	scala/collection/Iterable;
class	scala/collection/Iterable
Asciz	(Lscala/collection/Iterable;Lscala/collection/Iterable;)I;
NameAndType	compare:(Lscala/collection/Iterable;Lscala/collection/Iterable;)I
Method	scala/math/Ordering$$anon$6.compare:(Lscala/collection/Iterable;Lscala/collection/Iterable;)I
Asciz	this;
Asciz	Lscala/math/Ordering$$anon$6;;
Asciz	x;
Asciz	Ljava/lang/Object;;
Asciz	y;
Asciz	LocalVariableTable;
Asciz	tryCompare;
Asciz	(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Option;;
Asciz	scala/math/Ordering;
class	scala/math/Ordering
Asciz	(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;;
NameAndType	tryCompare:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
InterfaceMethod	scala/math/Ordering.tryCompare:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
Asciz	reverse;
Asciz	()Lscala/math/PartialOrdering;;
Asciz	()Lscala/math/Ordering;;
NameAndType	reverse:()Lscala/math/Ordering;
InterfaceMethod	scala/math/Ordering.reverse:()Lscala/math/Ordering;
Asciz	scala/collection/IterableLike;
class	scala/collection/IterableLike
Asciz	iterator;
Asciz	()Lscala/collection/Iterator;;
NameAndType	iterator:()Lscala/collection/Iterator;
InterfaceMethod	scala/collection/IterableLike.iterator:()Lscala/collection/Iterator;
Asciz	scala/collection/Iterator;
class	scala/collection/Iterator
Asciz	hasNext;
Asciz	()Z;
NameAndType	hasNext:()Z
InterfaceMethod	scala/collection/Iterator.hasNext:()Z
Asciz	next;
Asciz	()Ljava/lang/Object;;
NameAndType	next:()Ljava/lang/Object;
InterfaceMethod	scala/collection/Iterator.next:()Ljava/lang/Object;
NameAndType	compare:(Ljava/lang/Object;Ljava/lang/Object;)I
InterfaceMethod	scala/math/Ordering.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
Asciz	scala/math/Ordering$Boolean$;
class	scala/math/Ordering$Boolean$
Asciz	MODULE$;
Asciz	Lscala/math/Ordering$Boolean$;;
NameAndType	MODULE$:Lscala/math/Ordering$Boolean$;
Field	scala/math/Ordering$Boolean$.MODULE$:Lscala/math/Ordering$Boolean$;
Asciz	scala/math/Ordering$BooleanOrdering$class;
class	scala/math/Ordering$BooleanOrdering$class
Asciz	(Lscala/math/Ordering$BooleanOrdering;ZZ)I;
NameAndType	compare:(Lscala/math/Ordering$BooleanOrdering;ZZ)I
Method	scala/math/Ordering$BooleanOrdering$class.compare:(Lscala/math/Ordering$BooleanOrdering;ZZ)I
Asciz	Lscala/collection/Iterable;;
Asciz	res;
Asciz	I;
Asciz	xe;
Asciz	Lscala/collection/Iterator;;
Asciz	ye;
Asciz	(Lscala/collection/Iterable<TT;>;Lscala/collection/Iterable<TT;>;)I;
Asciz	Signature;
Asciz	mkOrderingOps;
Asciz	(Ljava/lang/Object;)Lscala/math/Ordering$Ops;;
Asciz	(Lscala/math/Ordering;Ljava/lang/Object;)Lscala/math/Ordering$Ops;;
NameAndType	mkOrderingOps:(Lscala/math/Ordering;Ljava/lang/Object;)Lscala/math/Ordering$Ops;
Method	scala/math/Ordering$class.mkOrderingOps:(Lscala/math/Ordering;Ljava/lang/Object;)Lscala/math/Ordering$Ops;
Asciz	lhs;
Asciz	on;
Asciz	(Lscala/Function1;)Lscala/math/Ordering;;
Asciz	(Lscala/math/Ordering;Lscala/Function1;)Lscala/math/Ordering;;
NameAndType	on:(Lscala/math/Ordering;Lscala/Function1;)Lscala/math/Ordering;
Method	scala/math/Ordering$class.on:(Lscala/math/Ordering;Lscala/Function1;)Lscala/math/Ordering;
Asciz	f;
Asciz	Lscala/Function1;;
Asciz	(Lscala/math/Ordering;)Lscala/math/Ordering;;
NameAndType	reverse:(Lscala/math/Ordering;)Lscala/math/Ordering;
Method	scala/math/Ordering$class.reverse:(Lscala/math/Ordering;)Lscala/math/Ordering;
Asciz	min;
Asciz	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;;
Asciz	(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;;
NameAndType	min:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
Method	scala/math/Ordering$class.min:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
Asciz	max;
NameAndType	max:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
Method	scala/math/Ordering$class.max:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
Asciz	equiv;
Asciz	(Ljava/lang/Object;Ljava/lang/Object;)Z;
Asciz	(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z;
NameAndType	equiv:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
Method	scala/math/Ordering$class.equiv:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
Asciz	gt;
NameAndType	gt:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
Method	scala/math/Ordering$class.gt:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
Asciz	lt;
NameAndType	lt:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
Method	scala/math/Ordering$class.lt:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
Asciz	gteq;
NameAndType	gteq:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
Method	scala/math/Ordering$class.gteq:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
Asciz	lteq;
NameAndType	lteq:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
Method	scala/math/Ordering$class.lteq:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
Asciz	(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;;
NameAndType	tryCompare:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
Method	scala/math/Ordering$class.tryCompare:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
Asciz	Ljava/lang/Object;Lscala/math/Ordering<Lscala/collection/Iterable<TT;>;>;;
Asciz	Scala;
Asciz	InnerClasses;
Asciz	scala/math/Ordering$Ops;
class	scala/math/Ordering$Ops
Asciz	Ops;
Asciz	$anon$6;
Asciz	scala/math/Ordering$BooleanOrdering;
class	scala/math/Ordering$BooleanOrdering
Asciz	BooleanOrdering;

{
public final scala.math.Ordering ord$1;
  Signature: Lscala/math/Ordering;

public scala.math.Ordering$$anon$6(scala.math.Ordering);
  Signature: (Lscala/math/Ordering;)V
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	putfield	Field ord$1:Lscala/math/Ordering;
	aload_0
	invokespecial	Method java/lang/Object."<init>":()V
	aload_0
	invokestatic	Method scala/math/PartialOrdering$class.$init$:(Lscala/math/PartialOrdering;)V
	aload_0
	invokestatic	Method scala/math/Ordering$class.$init$:(Lscala/math/Ordering;)V
	return
  Labels:

public int compare(java.lang.Object, java.lang.Object);
  Signature: (Ljava/lang/Object;Ljava/lang/Object;)I
  Code:
   Stack=3, Locals=3, Args_size=3
	aload_0
	aload_1
	checkcast	class scala/collection/Iterable
	aload_2
	checkcast	class scala/collection/Iterable
	invokevirtual	Method compare:(Lscala/collection/Iterable;Lscala/collection/Iterable;)I
	ireturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      13      0    this       Lscala/math/Ordering$$anon$6;
   0      13      1    x       Ljava/lang/Object;
   0      13      2    y       Ljava/lang/Object;


public scala.Option tryCompare(java.lang.Object, java.lang.Object);
  Signature: (Ljava/lang/Object;Ljava/lang/Object;)Lscala/Option;
  Code:
   Stack=3, Locals=3, Args_size=3
	aload_0
	aload_1
	aload_2
	invokeinterface	InterfaceMethod scala/math/Ordering.tryCompare:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/math/Ordering$$anon$6;
   0      9      1    x       Ljava/lang/Object;
   0      9      2    y       Ljava/lang/Object;


public scala.math.PartialOrdering reverse();
  Signature: ()Lscala/math/PartialOrdering;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokeinterface	InterfaceMethod scala/math/Ordering.reverse:()Lscala/math/Ordering;
	areturn
  Labels:

public int compare(scala.collection.Iterable, scala.collection.Iterable);
  Signature: (Lscala/collection/Iterable;Lscala/collection/Iterable;)I
  Code:
   Stack=3, Locals=9, Args_size=3
	aload_1
	invokeinterface	InterfaceMethod scala/collection/IterableLike.iterator:()Lscala/collection/Iterator;
	astore	4
	aload_2
	invokeinterface	InterfaceMethod scala/collection/IterableLike.iterator:()Lscala/collection/Iterator;
	astore	5
l2	aload	4
	invokeinterface	InterfaceMethod scala/collection/Iterator.hasNext:()Z
	ifeq	l1 // getstatic
	aload	5
	invokeinterface	InterfaceMethod scala/collection/Iterator.hasNext:()Z
	ifeq	l1 // getstatic
	aload_0
	getfield	Field ord$1:Lscala/math/Ordering;
	aload	4
	invokeinterface	InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
	aload	5
	invokeinterface	InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
	invokeinterface	InterfaceMethod scala/math/Ordering.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
	istore_3
	iload_3
	iconst_0
	if_icmpeq	l2 // aload
	iload_3
	ireturn
l1	getstatic	Field scala/math/Ordering$Boolean$.MODULE$:Lscala/math/Ordering$Boolean$;
	aload	4
	invokeinterface	InterfaceMethod scala/collection/Iterator.hasNext:()Z
	aload	5
	invokeinterface	InterfaceMethod scala/collection/Iterator.hasNext:()Z
	istore	8
	istore	7
	astore	6
	aload	6
	iload	7
	iload	8
	invokestatic	Method scala/math/Ordering$BooleanOrdering$class.compare:(Lscala/math/Ordering$BooleanOrdering;ZZ)I
	ireturn
  Labels:
   	l2 = 16 // aload
   	l1 = 67 // getstatic
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      100      0    this       Lscala/math/Ordering$$anon$6;
   0      100      1    x       Lscala/collection/Iterable;
   0      100      2    y       Lscala/collection/Iterable;
   60      7      3    res       I
   8      91      4    xe       Lscala/collection/Iterator;
   16      83      5    ye       Lscala/collection/Iterator;

  Signature: length = 0x2
   00 58 

public scala.math.Ordering$Ops mkOrderingOps(java.lang.Object);
  Signature: (Ljava/lang/Object;)Lscala/math/Ordering$Ops;
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokestatic	Method scala/math/Ordering$class.mkOrderingOps:(Lscala/math/Ordering;Ljava/lang/Object;)Lscala/math/Ordering$Ops;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/math/Ordering$$anon$6;
   0      6      1    lhs       Ljava/lang/Object;

  Signature: length = 0x2
   00 5B 

public scala.math.Ordering on(scala.Function1);
  Signature: (Lscala/Function1;)Lscala/math/Ordering;
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokestatic	Method scala/math/Ordering$class.on:(Lscala/math/Ordering;Lscala/Function1;)Lscala/math/Ordering;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/math/Ordering$$anon$6;
   0      6      1    f       Lscala/Function1;


public scala.math.Ordering reverse();
  Signature: ()Lscala/math/Ordering;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokestatic	Method scala/math/Ordering$class.reverse:(Lscala/math/Ordering;)Lscala/math/Ordering;
	areturn
  Labels:

public java.lang.Object min(java.lang.Object, java.lang.Object);
  Signature: (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  Code:
   Stack=3, Locals=3, Args_size=3
	aload_0
	aload_1
	aload_2
	invokestatic	Method scala/math/Ordering$class.min:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/math/Ordering$$anon$6;
   0      7      1    x       Ljava/lang/Object;
   0      7      2    y       Ljava/lang/Object;


public java.lang.Object max(java.lang.Object, java.lang.Object);
  Signature: (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  Code:
   Stack=3, Locals=3, Args_size=3
	aload_0
	aload_1
	aload_2
	invokestatic	Method scala/math/Ordering$class.max:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/math/Ordering$$anon$6;
   0      7      1    x       Ljava/lang/Object;
   0      7      2    y       Ljava/lang/Object;


public boolean equiv(java.lang.Object, java.lang.Object);
  Signature: (Ljava/lang/Object;Ljava/lang/Object;)Z
  Code:
   Stack=3, Locals=3, Args_size=3
	aload_0
	aload_1
	aload_2
	invokestatic	Method scala/math/Ordering$class.equiv:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
	ireturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/math/Ordering$$anon$6;
   0      7      1    x       Ljava/lang/Object;
   0      7      2    y       Ljava/lang/Object;


public boolean gt(java.lang.Object, java.lang.Object);
  Signature: (Ljava/lang/Object;Ljava/lang/Object;)Z
  Code:
   Stack=3, Locals=3, Args_size=3
	aload_0
	aload_1
	aload_2
	invokestatic	Method scala/math/Ordering$class.gt:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
	ireturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/math/Ordering$$anon$6;
   0      7      1    x       Ljava/lang/Object;
   0      7      2    y       Ljava/lang/Object;


public boolean lt(java.lang.Object, java.lang.Object);
  Signature: (Ljava/lang/Object;Ljava/lang/Object;)Z
  Code:
   Stack=3, Locals=3, Args_size=3
	aload_0
	aload_1
	aload_2
	invokestatic	Method scala/math/Ordering$class.lt:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
	ireturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/math/Ordering$$anon$6;
   0      7      1    x       Ljava/lang/Object;
   0      7      2    y       Ljava/lang/Object;


public boolean gteq(java.lang.Object, java.lang.Object);
  Signature: (Ljava/lang/Object;Ljava/lang/Object;)Z
  Code:
   Stack=3, Locals=3, Args_size=3
	aload_0
	aload_1
	aload_2
	invokestatic	Method scala/math/Ordering$class.gteq:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
	ireturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/math/Ordering$$anon$6;
   0      7      1    x       Ljava/lang/Object;
   0      7      2    y       Ljava/lang/Object;


public boolean lteq(java.lang.Object, java.lang.Object);
  Signature: (Ljava/lang/Object;Ljava/lang/Object;)Z
  Code:
   Stack=3, Locals=3, Args_size=3
	aload_0
	aload_1
	aload_2
	invokestatic	Method scala/math/Ordering$class.lteq:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
	ireturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/math/Ordering$$anon$6;
   0      7      1    x       Ljava/lang/Object;
   0      7      2    y       Ljava/lang/Object;


public scala.Some tryCompare(java.lang.Object, java.lang.Object);
  Signature: (Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
  Code:
   Stack=3, Locals=3, Args_size=3
	aload_0
	aload_1
	aload_2
	invokestatic	Method scala/math/Ordering$class.tryCompare:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/math/Ordering$$anon$6;
   0      7      1    x       Ljava/lang/Object;
   0      7      2    y       Ljava/lang/Object;


}

