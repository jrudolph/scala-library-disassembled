Compiled from "Numeric.scala"
public final class scala.math.Numeric$IntIsIntegral$ extends java.lang.Object implements scala.math.Numeric$IntIsIntegral,scala.math.Ordering$IntOrdering,scala.ScalaObject
  SourceFile: "Numeric.scala"
  Scala: length = 0x
   
  InnerClass: 
   public #236= #233 of #235; //Ops=class scala/math/Numeric$Ops of class scala/math/Numeric
   public #236= #238 of #131; //Ops=class scala/math/Ordering$Ops of class scala/math/Ordering
   public #241= #240 of #122; //IntegralOps=class scala/math/Integral$IntegralOps of class scala/math/Integral
   public abstract #242= #60 of #131; //IntOrdering=class scala/math/Ordering$IntOrdering of class scala/math/Ordering
   public abstract #243= #72 of #235; //IntIsIntegral=class scala/math/Numeric$IntIsIntegral of class scala/math/Numeric
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Numeric.scala;
const #3 = Asciz	Scala;
const #4 = Asciz	MODULE$;
const #5 = Asciz	Lscala/math/Numeric$IntIsIntegral$;;
const #6 = Asciz	<clinit>;
const #7 = Asciz	()V;
const #8 = Asciz	Code;
const #9 = Asciz	scala/math/Numeric$IntIsIntegral$;
const #10 = class	#9;	//  scala/math/Numeric$IntIsIntegral$
const #11 = Asciz	<init>;
const #12 = NameAndType	#11:#7;//  "<init>":()V
const #13 = Method	#10.#12;	//  scala/math/Numeric$IntIsIntegral$."<init>":()V
const #14 = Asciz	LineNumberTable;
const #15 = Asciz	java/lang/Object;
const #16 = class	#15;	//  java/lang/Object
const #17 = Method	#16.#12;	//  java/lang/Object."<init>":()V
const #18 = NameAndType	#4:#5;//  MODULE$:Lscala/math/Numeric$IntIsIntegral$;
const #19 = Field	#10.#18;	//  scala/math/Numeric$IntIsIntegral$.MODULE$:Lscala/math/Numeric$IntIsIntegral$;
const #20 = Asciz	scala/math/PartialOrdering$class;
const #21 = class	#20;	//  scala/math/PartialOrdering$class
const #22 = Asciz	$init$;
const #23 = Asciz	(Lscala/math/PartialOrdering;)V;
const #24 = NameAndType	#22:#23;//  $init$:(Lscala/math/PartialOrdering;)V
const #25 = Method	#21.#24;	//  scala/math/PartialOrdering$class.$init$:(Lscala/math/PartialOrdering;)V
const #26 = Asciz	scala/math/Ordering$class;
const #27 = class	#26;	//  scala/math/Ordering$class
const #28 = Asciz	(Lscala/math/Ordering;)V;
const #29 = NameAndType	#22:#28;//  $init$:(Lscala/math/Ordering;)V
const #30 = Method	#27.#29;	//  scala/math/Ordering$class.$init$:(Lscala/math/Ordering;)V
const #31 = Asciz	scala/math/Numeric$class;
const #32 = class	#31;	//  scala/math/Numeric$class
const #33 = Asciz	(Lscala/math/Numeric;)V;
const #34 = NameAndType	#22:#33;//  $init$:(Lscala/math/Numeric;)V
const #35 = Method	#32.#34;	//  scala/math/Numeric$class.$init$:(Lscala/math/Numeric;)V
const #36 = Asciz	scala/math/Integral$class;
const #37 = class	#36;	//  scala/math/Integral$class
const #38 = Asciz	(Lscala/math/Integral;)V;
const #39 = NameAndType	#22:#38;//  $init$:(Lscala/math/Integral;)V
const #40 = Method	#37.#39;	//  scala/math/Integral$class.$init$:(Lscala/math/Integral;)V
const #41 = Asciz	scala/math/Numeric$IntIsIntegral$class;
const #42 = class	#41;	//  scala/math/Numeric$IntIsIntegral$class
const #43 = Asciz	(Lscala/math/Numeric$IntIsIntegral;)V;
const #44 = NameAndType	#22:#43;//  $init$:(Lscala/math/Numeric$IntIsIntegral;)V
const #45 = Method	#42.#44;	//  scala/math/Numeric$IntIsIntegral$class.$init$:(Lscala/math/Numeric$IntIsIntegral;)V
const #46 = Asciz	scala/math/Ordering$IntOrdering$class;
const #47 = class	#46;	//  scala/math/Ordering$IntOrdering$class
const #48 = Asciz	(Lscala/math/Ordering$IntOrdering;)V;
const #49 = NameAndType	#22:#48;//  $init$:(Lscala/math/Ordering$IntOrdering;)V
const #50 = Method	#47.#49;	//  scala/math/Ordering$IntOrdering$class.$init$:(Lscala/math/Ordering$IntOrdering;)V
const #51 = Asciz	compare;
const #52 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)I;
const #53 = Asciz	scala/runtime/BoxesRunTime;
const #54 = class	#53;	//  scala/runtime/BoxesRunTime
const #55 = Asciz	unboxToInt;
const #56 = Asciz	(Ljava/lang/Object;)I;
const #57 = NameAndType	#55:#56;//  unboxToInt:(Ljava/lang/Object;)I
const #58 = Method	#54.#57;	//  scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
const #59 = Asciz	scala/math/Ordering$IntOrdering;
const #60 = class	#59;	//  scala/math/Ordering$IntOrdering
const #61 = Asciz	(II)I;
const #62 = NameAndType	#51:#61;//  compare:(II)I
const #63 = InterfaceMethod	#60.#62;	//  scala/math/Ordering$IntOrdering.compare:(II)I
const #64 = Asciz	this;
const #65 = Asciz	x;
const #66 = Asciz	Ljava/lang/Object;;
const #67 = Asciz	y;
const #68 = Asciz	LocalVariableTable;
const #69 = Asciz	plus;
const #70 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;;
const #71 = Asciz	scala/math/Numeric$IntIsIntegral;
const #72 = class	#71;	//  scala/math/Numeric$IntIsIntegral
const #73 = NameAndType	#69:#61;//  plus:(II)I
const #74 = InterfaceMethod	#72.#73;	//  scala/math/Numeric$IntIsIntegral.plus:(II)I
const #75 = Asciz	boxToInteger;
const #76 = Asciz	(I)Ljava/lang/Integer;;
const #77 = NameAndType	#75:#76;//  boxToInteger:(I)Ljava/lang/Integer;
const #78 = Method	#54.#77;	//  scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
const #79 = Asciz	minus;
const #80 = NameAndType	#79:#61;//  minus:(II)I
const #81 = InterfaceMethod	#72.#80;	//  scala/math/Numeric$IntIsIntegral.minus:(II)I
const #82 = Asciz	times;
const #83 = NameAndType	#82:#61;//  times:(II)I
const #84 = InterfaceMethod	#72.#83;	//  scala/math/Numeric$IntIsIntegral.times:(II)I
const #85 = Asciz	quot;
const #86 = NameAndType	#85:#61;//  quot:(II)I
const #87 = InterfaceMethod	#72.#86;	//  scala/math/Numeric$IntIsIntegral.quot:(II)I
const #88 = Asciz	rem;
const #89 = NameAndType	#88:#61;//  rem:(II)I
const #90 = InterfaceMethod	#72.#89;	//  scala/math/Numeric$IntIsIntegral.rem:(II)I
const #91 = Asciz	negate;
const #92 = Asciz	(Ljava/lang/Object;)Ljava/lang/Object;;
const #93 = Asciz	(I)I;
const #94 = NameAndType	#91:#93;//  negate:(I)I
const #95 = InterfaceMethod	#72.#94;	//  scala/math/Numeric$IntIsIntegral.negate:(I)I
const #96 = Asciz	fromInt;
const #97 = Asciz	(I)Ljava/lang/Object;;
const #98 = NameAndType	#96:#93;//  fromInt:(I)I
const #99 = InterfaceMethod	#72.#98;	//  scala/math/Numeric$IntIsIntegral.fromInt:(I)I
const #100 = Asciz	I;
const #101 = Asciz	toInt;
const #102 = NameAndType	#101:#93;//  toInt:(I)I
const #103 = InterfaceMethod	#72.#102;	//  scala/math/Numeric$IntIsIntegral.toInt:(I)I
const #104 = Asciz	toLong;
const #105 = Asciz	(Ljava/lang/Object;)J;
const #106 = Asciz	(I)J;
const #107 = NameAndType	#104:#106;//  toLong:(I)J
const #108 = InterfaceMethod	#72.#107;	//  scala/math/Numeric$IntIsIntegral.toLong:(I)J
const #109 = Asciz	toFloat;
const #110 = Asciz	(Ljava/lang/Object;)F;
const #111 = Asciz	(I)F;
const #112 = NameAndType	#109:#111;//  toFloat:(I)F
const #113 = InterfaceMethod	#72.#112;	//  scala/math/Numeric$IntIsIntegral.toFloat:(I)F
const #114 = Asciz	toDouble;
const #115 = Asciz	(Ljava/lang/Object;)D;
const #116 = Asciz	(I)D;
const #117 = NameAndType	#114:#116;//  toDouble:(I)D
const #118 = InterfaceMethod	#72.#117;	//  scala/math/Numeric$IntIsIntegral.toDouble:(I)D
const #119 = Asciz	mkNumericOps;
const #120 = Asciz	(Ljava/lang/Object;)Lscala/math/Numeric$Ops;;
const #121 = Asciz	scala/math/Integral;
const #122 = class	#121;	//  scala/math/Integral
const #123 = Asciz	(Ljava/lang/Object;)Lscala/math/Integral$IntegralOps;;
const #124 = NameAndType	#119:#123;//  mkNumericOps:(Ljava/lang/Object;)Lscala/math/Integral$IntegralOps;
const #125 = InterfaceMethod	#122.#124;	//  scala/math/Integral.mkNumericOps:(Ljava/lang/Object;)Lscala/math/Integral$IntegralOps;
const #126 = Asciz	lhs;
const #127 = Asciz	Signature;
const #128 = Asciz	tryCompare;
const #129 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Option;;
const #130 = Asciz	scala/math/Ordering;
const #131 = class	#130;	//  scala/math/Ordering
const #132 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;;
const #133 = NameAndType	#128:#132;//  tryCompare:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
const #134 = InterfaceMethod	#131.#133;	//  scala/math/Ordering.tryCompare:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
const #135 = Asciz	reverse;
const #136 = Asciz	()Lscala/math/PartialOrdering;;
const #137 = Asciz	()Lscala/math/Ordering;;
const #138 = NameAndType	#135:#137;//  reverse:()Lscala/math/Ordering;
const #139 = InterfaceMethod	#131.#138;	//  scala/math/Ordering.reverse:()Lscala/math/Ordering;
const #140 = Asciz	mkOrderingOps;
const #141 = Asciz	(Ljava/lang/Object;)Lscala/math/Ordering$Ops;;
const #142 = Asciz	(Lscala/math/Ordering;Ljava/lang/Object;)Lscala/math/Ordering$Ops;;
const #143 = NameAndType	#140:#142;//  mkOrderingOps:(Lscala/math/Ordering;Ljava/lang/Object;)Lscala/math/Ordering$Ops;
const #144 = Method	#27.#143;	//  scala/math/Ordering$class.mkOrderingOps:(Lscala/math/Ordering;Ljava/lang/Object;)Lscala/math/Ordering$Ops;
const #145 = Asciz	on;
const #146 = Asciz	(Lscala/Function1;)Lscala/math/Ordering;;
const #147 = Asciz	(Lscala/math/Ordering;Lscala/Function1;)Lscala/math/Ordering;;
const #148 = NameAndType	#145:#147;//  on:(Lscala/math/Ordering;Lscala/Function1;)Lscala/math/Ordering;
const #149 = Method	#27.#148;	//  scala/math/Ordering$class.on:(Lscala/math/Ordering;Lscala/Function1;)Lscala/math/Ordering;
const #150 = Asciz	f;
const #151 = Asciz	Lscala/Function1;;
const #152 = Asciz	(Lscala/math/Ordering;)Lscala/math/Ordering;;
const #153 = NameAndType	#135:#152;//  reverse:(Lscala/math/Ordering;)Lscala/math/Ordering;
const #154 = Method	#27.#153;	//  scala/math/Ordering$class.reverse:(Lscala/math/Ordering;)Lscala/math/Ordering;
const #155 = Asciz	min;
const #156 = Asciz	(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;;
const #157 = NameAndType	#155:#156;//  min:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
const #158 = Method	#27.#157;	//  scala/math/Ordering$class.min:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
const #159 = Asciz	max;
const #160 = NameAndType	#159:#156;//  max:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
const #161 = Method	#27.#160;	//  scala/math/Ordering$class.max:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
const #162 = Asciz	equiv;
const #163 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)Z;
const #164 = Asciz	(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z;
const #165 = NameAndType	#162:#164;//  equiv:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #166 = Method	#27.#165;	//  scala/math/Ordering$class.equiv:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #167 = Asciz	gt;
const #168 = NameAndType	#167:#164;//  gt:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #169 = Method	#27.#168;	//  scala/math/Ordering$class.gt:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #170 = Asciz	lt;
const #171 = NameAndType	#170:#164;//  lt:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #172 = Method	#27.#171;	//  scala/math/Ordering$class.lt:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #173 = Asciz	gteq;
const #174 = NameAndType	#173:#164;//  gteq:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #175 = Method	#27.#174;	//  scala/math/Ordering$class.gteq:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #176 = Asciz	lteq;
const #177 = NameAndType	#176:#164;//  lteq:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #178 = Method	#27.#177;	//  scala/math/Ordering$class.lteq:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #179 = Asciz	(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;;
const #180 = NameAndType	#128:#179;//  tryCompare:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
const #181 = Method	#27.#180;	//  scala/math/Ordering$class.tryCompare:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
const #182 = Asciz	signum;
const #183 = Asciz	(Lscala/math/Numeric;Ljava/lang/Object;)I;
const #184 = NameAndType	#182:#183;//  signum:(Lscala/math/Numeric;Ljava/lang/Object;)I
const #185 = Method	#32.#184;	//  scala/math/Numeric$class.signum:(Lscala/math/Numeric;Ljava/lang/Object;)I
const #186 = Asciz	abs;
const #187 = Asciz	(Lscala/math/Numeric;Ljava/lang/Object;)Ljava/lang/Object;;
const #188 = NameAndType	#186:#187;//  abs:(Lscala/math/Numeric;Ljava/lang/Object;)Ljava/lang/Object;
const #189 = Method	#32.#188;	//  scala/math/Numeric$class.abs:(Lscala/math/Numeric;Ljava/lang/Object;)Ljava/lang/Object;
const #190 = Asciz	one;
const #191 = Asciz	()Ljava/lang/Object;;
const #192 = Asciz	(Lscala/math/Numeric;)Ljava/lang/Object;;
const #193 = NameAndType	#190:#192;//  one:(Lscala/math/Numeric;)Ljava/lang/Object;
const #194 = Method	#32.#193;	//  scala/math/Numeric$class.one:(Lscala/math/Numeric;)Ljava/lang/Object;
const #195 = Asciz	zero;
const #196 = NameAndType	#195:#192;//  zero:(Lscala/math/Numeric;)Ljava/lang/Object;
const #197 = Method	#32.#196;	//  scala/math/Numeric$class.zero:(Lscala/math/Numeric;)Ljava/lang/Object;
const #198 = Asciz	(Lscala/math/Integral;Ljava/lang/Object;)Lscala/math/Integral$IntegralOps;;
const #199 = NameAndType	#119:#198;//  mkNumericOps:(Lscala/math/Integral;Ljava/lang/Object;)Lscala/math/Integral$IntegralOps;
const #200 = Method	#37.#199;	//  scala/math/Integral$class.mkNumericOps:(Lscala/math/Integral;Ljava/lang/Object;)Lscala/math/Integral$IntegralOps;
const #201 = Asciz	(Lscala/math/Numeric$IntIsIntegral;I)D;
const #202 = NameAndType	#114:#201;//  toDouble:(Lscala/math/Numeric$IntIsIntegral;I)D
const #203 = Method	#42.#202;	//  scala/math/Numeric$IntIsIntegral$class.toDouble:(Lscala/math/Numeric$IntIsIntegral;I)D
const #204 = Asciz	(Lscala/math/Numeric$IntIsIntegral;I)F;
const #205 = NameAndType	#109:#204;//  toFloat:(Lscala/math/Numeric$IntIsIntegral;I)F
const #206 = Method	#42.#205;	//  scala/math/Numeric$IntIsIntegral$class.toFloat:(Lscala/math/Numeric$IntIsIntegral;I)F
const #207 = Asciz	(Lscala/math/Numeric$IntIsIntegral;I)J;
const #208 = NameAndType	#104:#207;//  toLong:(Lscala/math/Numeric$IntIsIntegral;I)J
const #209 = Method	#42.#208;	//  scala/math/Numeric$IntIsIntegral$class.toLong:(Lscala/math/Numeric$IntIsIntegral;I)J
const #210 = Asciz	(Lscala/math/Numeric$IntIsIntegral;I)I;
const #211 = NameAndType	#101:#210;//  toInt:(Lscala/math/Numeric$IntIsIntegral;I)I
const #212 = Method	#42.#211;	//  scala/math/Numeric$IntIsIntegral$class.toInt:(Lscala/math/Numeric$IntIsIntegral;I)I
const #213 = NameAndType	#96:#210;//  fromInt:(Lscala/math/Numeric$IntIsIntegral;I)I
const #214 = Method	#42.#213;	//  scala/math/Numeric$IntIsIntegral$class.fromInt:(Lscala/math/Numeric$IntIsIntegral;I)I
const #215 = NameAndType	#91:#210;//  negate:(Lscala/math/Numeric$IntIsIntegral;I)I
const #216 = Method	#42.#215;	//  scala/math/Numeric$IntIsIntegral$class.negate:(Lscala/math/Numeric$IntIsIntegral;I)I
const #217 = Asciz	(Lscala/math/Numeric$IntIsIntegral;II)I;
const #218 = NameAndType	#88:#217;//  rem:(Lscala/math/Numeric$IntIsIntegral;II)I
const #219 = Method	#42.#218;	//  scala/math/Numeric$IntIsIntegral$class.rem:(Lscala/math/Numeric$IntIsIntegral;II)I
const #220 = NameAndType	#85:#217;//  quot:(Lscala/math/Numeric$IntIsIntegral;II)I
const #221 = Method	#42.#220;	//  scala/math/Numeric$IntIsIntegral$class.quot:(Lscala/math/Numeric$IntIsIntegral;II)I
const #222 = NameAndType	#82:#217;//  times:(Lscala/math/Numeric$IntIsIntegral;II)I
const #223 = Method	#42.#222;	//  scala/math/Numeric$IntIsIntegral$class.times:(Lscala/math/Numeric$IntIsIntegral;II)I
const #224 = NameAndType	#79:#217;//  minus:(Lscala/math/Numeric$IntIsIntegral;II)I
const #225 = Method	#42.#224;	//  scala/math/Numeric$IntIsIntegral$class.minus:(Lscala/math/Numeric$IntIsIntegral;II)I
const #226 = NameAndType	#69:#217;//  plus:(Lscala/math/Numeric$IntIsIntegral;II)I
const #227 = Method	#42.#226;	//  scala/math/Numeric$IntIsIntegral$class.plus:(Lscala/math/Numeric$IntIsIntegral;II)I
const #228 = Asciz	(Lscala/math/Ordering$IntOrdering;II)I;
const #229 = NameAndType	#51:#228;//  compare:(Lscala/math/Ordering$IntOrdering;II)I
const #230 = Method	#47.#229;	//  scala/math/Ordering$IntOrdering$class.compare:(Lscala/math/Ordering$IntOrdering;II)I
const #231 = Asciz	InnerClasses;
const #232 = Asciz	scala/math/Numeric$Ops;
const #233 = class	#232;	//  scala/math/Numeric$Ops
const #234 = Asciz	scala/math/Numeric;
const #235 = class	#234;	//  scala/math/Numeric
const #236 = Asciz	Ops;
const #237 = Asciz	scala/math/Ordering$Ops;
const #238 = class	#237;	//  scala/math/Ordering$Ops
const #239 = Asciz	scala/math/Integral$IntegralOps;
const #240 = class	#239;	//  scala/math/Integral$IntegralOps
const #241 = Asciz	IntegralOps;
const #242 = Asciz	IntOrdering;
const #243 = Asciz	IntIsIntegral;
const #244 = Asciz	scala/ScalaObject;
const #245 = class	#244;	//  scala/ScalaObject

{
public static final scala.math.Numeric$IntIsIntegral$ MODULE$;

public static {};
  Code:
   Stack=1, Locals=0, Args_size=0
   0:	new	#10; //class scala/math/Numeric$IntIsIntegral$
   3:	invokespecial	#13; //Method "<init>":()V
   6:	return

public scala.math.Numeric$IntIsIntegral$();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokespecial	#17; //Method java/lang/Object."<init>":()V
   4:	aload_0
   5:	putstatic	#19; //Field MODULE$:Lscala/math/Numeric$IntIsIntegral$;
   8:	aload_0
   9:	invokestatic	#25; //Method scala/math/PartialOrdering$class.$init$:(Lscala/math/PartialOrdering;)V
   12:	aload_0
   13:	invokestatic	#30; //Method scala/math/Ordering$class.$init$:(Lscala/math/Ordering;)V
   16:	aload_0
   17:	invokestatic	#35; //Method scala/math/Numeric$class.$init$:(Lscala/math/Numeric;)V
   20:	aload_0
   21:	invokestatic	#40; //Method scala/math/Integral$class.$init$:(Lscala/math/Integral;)V
   24:	aload_0
   25:	invokestatic	#45; //Method scala/math/Numeric$IntIsIntegral$class.$init$:(Lscala/math/Numeric$IntIsIntegral;)V
   28:	aload_0
   29:	invokestatic	#50; //Method scala/math/Ordering$IntOrdering$class.$init$:(Lscala/math/Ordering$IntOrdering;)V
   32:	return
  LineNumberTable: 
   line 46: 0


public int compare(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#58; //Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
   5:	aload_2
   6:	invokestatic	#58; //Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
   9:	invokeinterface	#63,  3; //InterfaceMethod scala/math/Ordering$IntOrdering.compare:(II)I
   14:	ireturn
  LineNumberTable: 
   line 46: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      15      0    this       Lscala/math/Numeric$IntIsIntegral$;
   0      15      1    x       Ljava/lang/Object;
   0      15      2    y       Ljava/lang/Object;


public java.lang.Object plus(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=4, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#58; //Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
   5:	aload_2
   6:	invokestatic	#58; //Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
   9:	invokeinterface	#74,  3; //InterfaceMethod scala/math/Numeric$IntIsIntegral.plus:(II)I
   14:	istore_3
   15:	iload_3
   16:	invokestatic	#78; //Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   19:	areturn
  LineNumberTable: 
   line 46: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      20      0    this       Lscala/math/Numeric$IntIsIntegral$;
   0      20      1    x       Ljava/lang/Object;
   0      20      2    y       Ljava/lang/Object;


public java.lang.Object minus(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=4, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#58; //Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
   5:	aload_2
   6:	invokestatic	#58; //Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
   9:	invokeinterface	#81,  3; //InterfaceMethod scala/math/Numeric$IntIsIntegral.minus:(II)I
   14:	istore_3
   15:	iload_3
   16:	invokestatic	#78; //Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   19:	areturn
  LineNumberTable: 
   line 46: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      20      0    this       Lscala/math/Numeric$IntIsIntegral$;
   0      20      1    x       Ljava/lang/Object;
   0      20      2    y       Ljava/lang/Object;


public java.lang.Object times(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=4, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#58; //Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
   5:	aload_2
   6:	invokestatic	#58; //Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
   9:	invokeinterface	#84,  3; //InterfaceMethod scala/math/Numeric$IntIsIntegral.times:(II)I
   14:	istore_3
   15:	iload_3
   16:	invokestatic	#78; //Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   19:	areturn
  LineNumberTable: 
   line 46: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      20      0    this       Lscala/math/Numeric$IntIsIntegral$;
   0      20      1    x       Ljava/lang/Object;
   0      20      2    y       Ljava/lang/Object;


public java.lang.Object quot(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=4, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#58; //Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
   5:	aload_2
   6:	invokestatic	#58; //Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
   9:	invokeinterface	#87,  3; //InterfaceMethod scala/math/Numeric$IntIsIntegral.quot:(II)I
   14:	istore_3
   15:	iload_3
   16:	invokestatic	#78; //Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   19:	areturn
  LineNumberTable: 
   line 46: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      20      0    this       Lscala/math/Numeric$IntIsIntegral$;
   0      20      1    x       Ljava/lang/Object;
   0      20      2    y       Ljava/lang/Object;


public java.lang.Object rem(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=4, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#58; //Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
   5:	aload_2
   6:	invokestatic	#58; //Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
   9:	invokeinterface	#90,  3; //InterfaceMethod scala/math/Numeric$IntIsIntegral.rem:(II)I
   14:	istore_3
   15:	iload_3
   16:	invokestatic	#78; //Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   19:	areturn
  LineNumberTable: 
   line 46: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      20      0    this       Lscala/math/Numeric$IntIsIntegral$;
   0      20      1    x       Ljava/lang/Object;
   0      20      2    y       Ljava/lang/Object;


public java.lang.Object negate(java.lang.Object);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#58; //Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
   5:	invokeinterface	#95,  2; //InterfaceMethod scala/math/Numeric$IntIsIntegral.negate:(I)I
   10:	istore_2
   11:	iload_2
   12:	invokestatic	#78; //Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   15:	areturn
  LineNumberTable: 
   line 46: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      16      0    this       Lscala/math/Numeric$IntIsIntegral$;
   0      16      1    x       Ljava/lang/Object;


public java.lang.Object fromInt(int);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	invokeinterface	#99,  2; //InterfaceMethod scala/math/Numeric$IntIsIntegral.fromInt:(I)I
   7:	istore_2
   8:	iload_2
   9:	invokestatic	#78; //Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   12:	areturn
  LineNumberTable: 
   line 46: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      13      0    this       Lscala/math/Numeric$IntIsIntegral$;
   0      13      1    x       I


public int toInt(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#58; //Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
   5:	invokeinterface	#103,  2; //InterfaceMethod scala/math/Numeric$IntIsIntegral.toInt:(I)I
   10:	ireturn
  LineNumberTable: 
   line 46: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      11      0    this       Lscala/math/Numeric$IntIsIntegral$;
   0      11      1    x       Ljava/lang/Object;


public long toLong(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#58; //Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
   5:	invokeinterface	#108,  2; //InterfaceMethod scala/math/Numeric$IntIsIntegral.toLong:(I)J
   10:	lreturn
  LineNumberTable: 
   line 46: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      11      0    this       Lscala/math/Numeric$IntIsIntegral$;
   0      11      1    x       Ljava/lang/Object;


public float toFloat(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#58; //Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
   5:	invokeinterface	#113,  2; //InterfaceMethod scala/math/Numeric$IntIsIntegral.toFloat:(I)F
   10:	freturn
  LineNumberTable: 
   line 46: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      11      0    this       Lscala/math/Numeric$IntIsIntegral$;
   0      11      1    x       Ljava/lang/Object;


public double toDouble(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#58; //Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
   5:	invokeinterface	#118,  2; //InterfaceMethod scala/math/Numeric$IntIsIntegral.toDouble:(I)D
   10:	dreturn
  LineNumberTable: 
   line 46: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      11      0    this       Lscala/math/Numeric$IntIsIntegral$;
   0      11      1    x       Ljava/lang/Object;


public scala.math.Numeric$Ops mkNumericOps(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokeinterface	#125,  2; //InterfaceMethod scala/math/Integral.mkNumericOps:(Ljava/lang/Object;)Lscala/math/Integral$IntegralOps;
   7:	areturn
  LineNumberTable: 
   line 46: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      8      0    this       Lscala/math/Numeric$IntIsIntegral$;
   0      8      1    lhs       Ljava/lang/Object;

  Signature: length = 0x2
   00 78 

public scala.Option tryCompare(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokeinterface	#134,  3; //InterfaceMethod scala/math/Ordering.tryCompare:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
   8:	areturn
  LineNumberTable: 
   line 46: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/math/Numeric$IntIsIntegral$;
   0      9      1    x       Ljava/lang/Object;
   0      9      2    y       Ljava/lang/Object;


public scala.math.PartialOrdering reverse();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokeinterface	#139,  1; //InterfaceMethod scala/math/Ordering.reverse:()Lscala/math/Ordering;
   6:	areturn
  LineNumberTable: 
   line 46: 0


public scala.math.Ordering$Ops mkOrderingOps(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#144; //Method scala/math/Ordering$class.mkOrderingOps:(Lscala/math/Ordering;Ljava/lang/Object;)Lscala/math/Ordering$Ops;
   5:	areturn
  LineNumberTable: 
   line 46: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/math/Numeric$IntIsIntegral$;
   0      6      1    lhs       Ljava/lang/Object;

  Signature: length = 0x2
   00 FFFFFF8D 

public scala.math.Ordering on(scala.Function1);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#149; //Method scala/math/Ordering$class.on:(Lscala/math/Ordering;Lscala/Function1;)Lscala/math/Ordering;
   5:	areturn
  LineNumberTable: 
   line 46: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/math/Numeric$IntIsIntegral$;
   0      6      1    f       Lscala/Function1;


public scala.math.Ordering reverse();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#154; //Method scala/math/Ordering$class.reverse:(Lscala/math/Ordering;)Lscala/math/Ordering;
   4:	areturn
  LineNumberTable: 
   line 46: 0


public java.lang.Object min(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#158; //Method scala/math/Ordering$class.min:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   6:	areturn
  LineNumberTable: 
   line 46: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/math/Numeric$IntIsIntegral$;
   0      7      1    x       Ljava/lang/Object;
   0      7      2    y       Ljava/lang/Object;


public java.lang.Object max(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#161; //Method scala/math/Ordering$class.max:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   6:	areturn
  LineNumberTable: 
   line 46: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/math/Numeric$IntIsIntegral$;
   0      7      1    x       Ljava/lang/Object;
   0      7      2    y       Ljava/lang/Object;


public boolean equiv(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#166; //Method scala/math/Ordering$class.equiv:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
   6:	ireturn
  LineNumberTable: 
   line 46: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/math/Numeric$IntIsIntegral$;
   0      7      1    x       Ljava/lang/Object;
   0      7      2    y       Ljava/lang/Object;


public boolean gt(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#169; //Method scala/math/Ordering$class.gt:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
   6:	ireturn
  LineNumberTable: 
   line 46: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/math/Numeric$IntIsIntegral$;
   0      7      1    x       Ljava/lang/Object;
   0      7      2    y       Ljava/lang/Object;


public boolean lt(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#172; //Method scala/math/Ordering$class.lt:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
   6:	ireturn
  LineNumberTable: 
   line 46: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/math/Numeric$IntIsIntegral$;
   0      7      1    x       Ljava/lang/Object;
   0      7      2    y       Ljava/lang/Object;


public boolean gteq(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#175; //Method scala/math/Ordering$class.gteq:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
   6:	ireturn
  LineNumberTable: 
   line 46: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/math/Numeric$IntIsIntegral$;
   0      7      1    x       Ljava/lang/Object;
   0      7      2    y       Ljava/lang/Object;


public boolean lteq(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#178; //Method scala/math/Ordering$class.lteq:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
   6:	ireturn
  LineNumberTable: 
   line 46: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/math/Numeric$IntIsIntegral$;
   0      7      1    x       Ljava/lang/Object;
   0      7      2    y       Ljava/lang/Object;


public scala.Some tryCompare(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#181; //Method scala/math/Ordering$class.tryCompare:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
   6:	areturn
  LineNumberTable: 
   line 46: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/math/Numeric$IntIsIntegral$;
   0      7      1    x       Ljava/lang/Object;
   0      7      2    y       Ljava/lang/Object;


public int signum(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#185; //Method scala/math/Numeric$class.signum:(Lscala/math/Numeric;Ljava/lang/Object;)I
   5:	ireturn
  LineNumberTable: 
   line 46: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/math/Numeric$IntIsIntegral$;
   0      6      1    x       Ljava/lang/Object;


public java.lang.Object abs(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#189; //Method scala/math/Numeric$class.abs:(Lscala/math/Numeric;Ljava/lang/Object;)Ljava/lang/Object;
   5:	areturn
  LineNumberTable: 
   line 46: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/math/Numeric$IntIsIntegral$;
   0      6      1    x       Ljava/lang/Object;


public java.lang.Object one();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#194; //Method scala/math/Numeric$class.one:(Lscala/math/Numeric;)Ljava/lang/Object;
   4:	areturn
  LineNumberTable: 
   line 46: 0


public java.lang.Object zero();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#197; //Method scala/math/Numeric$class.zero:(Lscala/math/Numeric;)Ljava/lang/Object;
   4:	areturn
  LineNumberTable: 
   line 46: 0


public scala.math.Integral$IntegralOps mkNumericOps(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#200; //Method scala/math/Integral$class.mkNumericOps:(Lscala/math/Integral;Ljava/lang/Object;)Lscala/math/Integral$IntegralOps;
   5:	areturn
  LineNumberTable: 
   line 46: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/math/Numeric$IntIsIntegral$;
   0      6      1    lhs       Ljava/lang/Object;

  Signature: length = 0x2
   00 7B 

public double toDouble(int);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	invokestatic	#203; //Method scala/math/Numeric$IntIsIntegral$class.toDouble:(Lscala/math/Numeric$IntIsIntegral;I)D
   5:	dreturn
  LineNumberTable: 
   line 46: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/math/Numeric$IntIsIntegral$;
   0      6      1    x       I


public float toFloat(int);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	invokestatic	#206; //Method scala/math/Numeric$IntIsIntegral$class.toFloat:(Lscala/math/Numeric$IntIsIntegral;I)F
   5:	freturn
  LineNumberTable: 
   line 46: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/math/Numeric$IntIsIntegral$;
   0      6      1    x       I


public long toLong(int);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	invokestatic	#209; //Method scala/math/Numeric$IntIsIntegral$class.toLong:(Lscala/math/Numeric$IntIsIntegral;I)J
   5:	lreturn
  LineNumberTable: 
   line 46: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/math/Numeric$IntIsIntegral$;
   0      6      1    x       I


public int toInt(int);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	invokestatic	#212; //Method scala/math/Numeric$IntIsIntegral$class.toInt:(Lscala/math/Numeric$IntIsIntegral;I)I
   5:	ireturn
  LineNumberTable: 
   line 46: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/math/Numeric$IntIsIntegral$;
   0      6      1    x       I


public int fromInt(int);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	invokestatic	#214; //Method scala/math/Numeric$IntIsIntegral$class.fromInt:(Lscala/math/Numeric$IntIsIntegral;I)I
   5:	ireturn
  LineNumberTable: 
   line 46: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/math/Numeric$IntIsIntegral$;
   0      6      1    x       I


public int negate(int);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	invokestatic	#216; //Method scala/math/Numeric$IntIsIntegral$class.negate:(Lscala/math/Numeric$IntIsIntegral;I)I
   5:	ireturn
  LineNumberTable: 
   line 46: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/math/Numeric$IntIsIntegral$;
   0      6      1    x       I


public int rem(int, int);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	iload_1
   2:	iload_2
   3:	invokestatic	#219; //Method scala/math/Numeric$IntIsIntegral$class.rem:(Lscala/math/Numeric$IntIsIntegral;II)I
   6:	ireturn
  LineNumberTable: 
   line 46: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/math/Numeric$IntIsIntegral$;
   0      7      1    x       I
   0      7      2    y       I


public int quot(int, int);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	iload_1
   2:	iload_2
   3:	invokestatic	#221; //Method scala/math/Numeric$IntIsIntegral$class.quot:(Lscala/math/Numeric$IntIsIntegral;II)I
   6:	ireturn
  LineNumberTable: 
   line 46: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/math/Numeric$IntIsIntegral$;
   0      7      1    x       I
   0      7      2    y       I


public int times(int, int);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	iload_1
   2:	iload_2
   3:	invokestatic	#223; //Method scala/math/Numeric$IntIsIntegral$class.times:(Lscala/math/Numeric$IntIsIntegral;II)I
   6:	ireturn
  LineNumberTable: 
   line 46: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/math/Numeric$IntIsIntegral$;
   0      7      1    x       I
   0      7      2    y       I


public int minus(int, int);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	iload_1
   2:	iload_2
   3:	invokestatic	#225; //Method scala/math/Numeric$IntIsIntegral$class.minus:(Lscala/math/Numeric$IntIsIntegral;II)I
   6:	ireturn
  LineNumberTable: 
   line 46: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/math/Numeric$IntIsIntegral$;
   0      7      1    x       I
   0      7      2    y       I


public int plus(int, int);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	iload_1
   2:	iload_2
   3:	invokestatic	#227; //Method scala/math/Numeric$IntIsIntegral$class.plus:(Lscala/math/Numeric$IntIsIntegral;II)I
   6:	ireturn
  LineNumberTable: 
   line 46: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/math/Numeric$IntIsIntegral$;
   0      7      1    x       I
   0      7      2    y       I


public int compare(int, int);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	iload_1
   2:	iload_2
   3:	invokestatic	#230; //Method scala/math/Ordering$IntOrdering$class.compare:(Lscala/math/Ordering$IntOrdering;II)I
   6:	ireturn
  LineNumberTable: 
   line 46: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/math/Numeric$IntIsIntegral$;
   0      7      1    x       I
   0      7      2    y       I


}

