Compiled from "Numeric.scala"
public interface scala.math.Numeric$CharIsIntegral extends scala.math.Integral,scala.ScalaObject
  SourceFile: "Numeric.scala"
  Scala: length = 0x
   
  Signature: length = 0x2
   00 16 
  InnerClass: 
   public abstract CharIsIntegral=class scala/math/Numeric$CharIsIntegral of class scala/math/Numeric
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	Numeric.scala;
Asciz	plus;
Asciz	(CC)C;
Asciz	minus;
Asciz	times;
Asciz	quot;
Asciz	rem;
Asciz	negate;
Asciz	(C)C;
Asciz	fromInt;
Asciz	(I)C;
Asciz	toInt;
Asciz	(C)I;
Asciz	toLong;
Asciz	(C)J;
Asciz	toFloat;
Asciz	(C)F;
Asciz	toDouble;
Asciz	(C)D;
Asciz	Scala;
Asciz	Ljava/lang/Object;Lscala/math/Integral<Ljava/lang/Character;>;Lscala/ScalaObject;;
Asciz	Signature;
Asciz	InnerClasses;
Asciz	scala/math/Numeric$CharIsIntegral;
class	scala/math/Numeric$CharIsIntegral
Asciz	scala/math/Numeric;
class	scala/math/Numeric
Asciz	CharIsIntegral;
Asciz	java/lang/Object;
class	java/lang/Object
Asciz	scala/math/Integral;
class	scala/math/Integral
Asciz	scala/ScalaObject;
class	scala/ScalaObject

{
public abstract char plus(char, char);
  Signature: (CC)C

public abstract char minus(char, char);
  Signature: (CC)C

public abstract char times(char, char);
  Signature: (CC)C

public abstract char quot(char, char);
  Signature: (CC)C

public abstract char rem(char, char);
  Signature: (CC)C

public abstract char negate(char);
  Signature: (C)C

public abstract char fromInt(int);
  Signature: (I)C

public abstract int toInt(char);
  Signature: (C)I

public abstract long toLong(char);
  Signature: (C)J

public abstract float toFloat(char);
  Signature: (C)F

public abstract double toDouble(char);
  Signature: (C)D

}

