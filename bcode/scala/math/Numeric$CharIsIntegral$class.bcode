Compiled from "Numeric.scala"
public abstract class scala.math.Numeric$CharIsIntegral$class extends java.lang.Object
  SourceFile: "Numeric.scala"
  Scala: length = 0x
   
  InnerClass: 
   public abstract CharIsIntegral=class scala/math/Numeric$CharIsIntegral of class scala/math/Numeric
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	Numeric.scala;
Asciz	plus;
Asciz	(Lscala/math/Numeric$CharIsIntegral;CC)C;
Asciz	Code;
Asciz	LineNumberTable;
Asciz	$this;
Asciz	Lscala/math/Numeric$CharIsIntegral;;
Asciz	x;
Asciz	C;
Asciz	y;
Asciz	LocalVariableTable;
Asciz	minus;
Asciz	times;
Asciz	quot;
Asciz	rem;
Asciz	negate;
Asciz	(Lscala/math/Numeric$CharIsIntegral;C)C;
Asciz	fromInt;
Asciz	(Lscala/math/Numeric$CharIsIntegral;I)C;
Asciz	I;
Asciz	toInt;
Asciz	(Lscala/math/Numeric$CharIsIntegral;C)I;
Asciz	toLong;
Asciz	(Lscala/math/Numeric$CharIsIntegral;C)J;
Asciz	toFloat;
Asciz	(Lscala/math/Numeric$CharIsIntegral;C)F;
Asciz	toDouble;
Asciz	(Lscala/math/Numeric$CharIsIntegral;C)D;
Asciz	$init$;
Asciz	(Lscala/math/Numeric$CharIsIntegral;)V;
Asciz	Scala;
Asciz	InnerClasses;
Asciz	scala/math/Numeric$CharIsIntegral;
class	scala/math/Numeric$CharIsIntegral
Asciz	scala/math/Numeric;
class	scala/math/Numeric
Asciz	CharIsIntegral;
Asciz	scala/math/Numeric$CharIsIntegral$class;
class	scala/math/Numeric$CharIsIntegral$class
Asciz	java/lang/Object;
class	java/lang/Object

{
public static char plus(scala.math.Numeric$CharIsIntegral, char, char);
  Signature: (Lscala/math/Numeric$CharIsIntegral;CC)C
  Code:
   Stack=2, Locals=3, Args_size=3
	iload_1
	iload_2
	iadd
	i2c
	ireturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    $this       Lscala/math/Numeric$CharIsIntegral;
   0      5      1    x       C
   0      5      2    y       C


public static char minus(scala.math.Numeric$CharIsIntegral, char, char);
  Signature: (Lscala/math/Numeric$CharIsIntegral;CC)C
  Code:
   Stack=2, Locals=3, Args_size=3
	iload_1
	iload_2
	isub
	i2c
	ireturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    $this       Lscala/math/Numeric$CharIsIntegral;
   0      5      1    x       C
   0      5      2    y       C


public static char times(scala.math.Numeric$CharIsIntegral, char, char);
  Signature: (Lscala/math/Numeric$CharIsIntegral;CC)C
  Code:
   Stack=2, Locals=3, Args_size=3
	iload_1
	iload_2
	imul
	i2c
	ireturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    $this       Lscala/math/Numeric$CharIsIntegral;
   0      5      1    x       C
   0      5      2    y       C


public static char quot(scala.math.Numeric$CharIsIntegral, char, char);
  Signature: (Lscala/math/Numeric$CharIsIntegral;CC)C
  Code:
   Stack=2, Locals=3, Args_size=3
	iload_1
	iload_2
	idiv
	i2c
	ireturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    $this       Lscala/math/Numeric$CharIsIntegral;
   0      5      1    x       C
   0      5      2    y       C


public static char rem(scala.math.Numeric$CharIsIntegral, char, char);
  Signature: (Lscala/math/Numeric$CharIsIntegral;CC)C
  Code:
   Stack=2, Locals=3, Args_size=3
	iload_1
	iload_2
	irem
	i2c
	ireturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    $this       Lscala/math/Numeric$CharIsIntegral;
   0      5      1    x       C
   0      5      2    y       C


public static char negate(scala.math.Numeric$CharIsIntegral, char);
  Signature: (Lscala/math/Numeric$CharIsIntegral;C)C
  Code:
   Stack=1, Locals=2, Args_size=2
	iload_1
	ineg
	i2c
	ireturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      4      0    $this       Lscala/math/Numeric$CharIsIntegral;
   0      4      1    x       C


public static char fromInt(scala.math.Numeric$CharIsIntegral, int);
  Signature: (Lscala/math/Numeric$CharIsIntegral;I)C
  Code:
   Stack=1, Locals=2, Args_size=2
	iload_1
	i2c
	ireturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      3      0    $this       Lscala/math/Numeric$CharIsIntegral;
   0      3      1    x       I


public static int toInt(scala.math.Numeric$CharIsIntegral, char);
  Signature: (Lscala/math/Numeric$CharIsIntegral;C)I
  Code:
   Stack=1, Locals=2, Args_size=2
	iload_1
	ireturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      2      0    $this       Lscala/math/Numeric$CharIsIntegral;
   0      2      1    x       C


public static long toLong(scala.math.Numeric$CharIsIntegral, char);
  Signature: (Lscala/math/Numeric$CharIsIntegral;C)J
  Code:
   Stack=2, Locals=2, Args_size=2
	iload_1
	i2l
	lreturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      3      0    $this       Lscala/math/Numeric$CharIsIntegral;
   0      3      1    x       C


public static float toFloat(scala.math.Numeric$CharIsIntegral, char);
  Signature: (Lscala/math/Numeric$CharIsIntegral;C)F
  Code:
   Stack=1, Locals=2, Args_size=2
	iload_1
	i2f
	freturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      3      0    $this       Lscala/math/Numeric$CharIsIntegral;
   0      3      1    x       C


public static double toDouble(scala.math.Numeric$CharIsIntegral, char);
  Signature: (Lscala/math/Numeric$CharIsIntegral;C)D
  Code:
   Stack=2, Locals=2, Args_size=2
	iload_1
	i2d
	dreturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      3      0    $this       Lscala/math/Numeric$CharIsIntegral;
   0      3      1    x       C


public static void $init$(scala.math.Numeric$CharIsIntegral);
  Signature: (Lscala/math/Numeric$CharIsIntegral;)V
  Code:
   Stack=0, Locals=1, Args_size=1
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      1      0    $this       Lscala/math/Numeric$CharIsIntegral;


}

