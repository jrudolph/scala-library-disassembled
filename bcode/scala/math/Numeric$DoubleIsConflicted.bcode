Compiled from "Numeric.scala"
public interface scala.math.Numeric$DoubleIsConflicted extends scala.math.Numeric,scala.ScalaObject
  SourceFile: "Numeric.scala"
  Signature: length = 0x2
   00 12 
  Scala: length = 0x
   
  InnerClass: 
   public abstract #26= #23 of #25; //DoubleIsConflicted=class scala/math/Numeric$DoubleIsConflicted of class scala/math/Numeric
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Numeric.scala;
const #3 = Asciz	toDouble;
const #4 = Asciz	(D)D;
const #5 = Asciz	toFloat;
const #6 = Asciz	(D)F;
const #7 = Asciz	toLong;
const #8 = Asciz	(D)J;
const #9 = Asciz	toInt;
const #10 = Asciz	(D)I;
const #11 = Asciz	fromInt;
const #12 = Asciz	(I)D;
const #13 = Asciz	negate;
const #14 = Asciz	times;
const #15 = Asciz	(DD)D;
const #16 = Asciz	minus;
const #17 = Asciz	plus;
const #18 = Asciz	Ljava/lang/Object;Lscala/math/Numeric<Ljava/lang/Double;>;Lscala/ScalaObject;;
const #19 = Asciz	Signature;
const #20 = Asciz	Scala;
const #21 = Asciz	InnerClasses;
const #22 = Asciz	scala/math/Numeric$DoubleIsConflicted;
const #23 = class	#22;	//  scala/math/Numeric$DoubleIsConflicted
const #24 = Asciz	scala/math/Numeric;
const #25 = class	#24;	//  scala/math/Numeric
const #26 = Asciz	DoubleIsConflicted;
const #27 = Asciz	java/lang/Object;
const #28 = class	#27;	//  java/lang/Object
const #29 = Asciz	scala/ScalaObject;
const #30 = class	#29;	//  scala/ScalaObject

{
public abstract double toDouble(double);

public abstract float toFloat(double);

public abstract long toLong(double);

public abstract int toInt(double);

public abstract double fromInt(int);

public abstract double negate(double);

public abstract double times(double, double);

public abstract double minus(double, double);

public abstract double plus(double, double);

}

