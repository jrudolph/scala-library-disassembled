Compiled from "Numeric.scala"
public abstract class scala.math.Numeric$BigIntIsIntegral$class extends java.lang.Object
  SourceFile: "Numeric.scala"
  Scala: length = 0x
   
  InnerClass: 
   public abstract BigIntIsIntegral=class scala/math/Numeric$BigIntIsIntegral of class scala/math/Numeric
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	Numeric.scala;
Asciz	$init$;
Asciz	(Lscala/math/Numeric$BigIntIsIntegral;)V;
Asciz	Code;
Asciz	LineNumberTable;
Asciz	$this;
Asciz	Lscala/math/Numeric$BigIntIsIntegral;;
Asciz	LocalVariableTable;
Asciz	toDouble;
Asciz	(Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;)D;
Asciz	scala/math/BigInt;
class	scala/math/BigInt
Asciz	longValue;
Asciz	()J;
NameAndType	longValue:()J
Method	scala/math/BigInt.longValue:()J
Asciz	x;
Asciz	Lscala/math/BigInt;;
Asciz	toFloat;
Asciz	(Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;)F;
Asciz	toLong;
Asciz	(Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;)J;
Asciz	toInt;
Asciz	(Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;)I;
Asciz	intValue;
Asciz	()I;
NameAndType	intValue:()I
Method	scala/math/BigInt.intValue:()I
Asciz	fromInt;
Asciz	(Lscala/math/Numeric$BigIntIsIntegral;I)Lscala/math/BigInt;;
Asciz	scala/math/BigInt$;
class	scala/math/BigInt$
Asciz	MODULE$;
Asciz	Lscala/math/BigInt$;;
NameAndType	MODULE$:Lscala/math/BigInt$;
Field	scala/math/BigInt$.MODULE$:Lscala/math/BigInt$;
Asciz	apply;
Asciz	(I)Lscala/math/BigInt;;
NameAndType	apply:(I)Lscala/math/BigInt;
Method	scala/math/BigInt$.apply:(I)Lscala/math/BigInt;
Asciz	I;
Asciz	negate;
Asciz	(Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;)Lscala/math/BigInt;;
Asciz	unary_$minus;
Asciz	()Lscala/math/BigInt;;
NameAndType	unary_$minus:()Lscala/math/BigInt;
Method	scala/math/BigInt.unary_$minus:()Lscala/math/BigInt;
Asciz	rem;
Asciz	(Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;;
Asciz	$percent;
Asciz	(Lscala/math/BigInt;)Lscala/math/BigInt;;
NameAndType	$percent:(Lscala/math/BigInt;)Lscala/math/BigInt;
Method	scala/math/BigInt.$percent:(Lscala/math/BigInt;)Lscala/math/BigInt;
Asciz	y;
Asciz	quot;
Asciz	$div;
NameAndType	$div:(Lscala/math/BigInt;)Lscala/math/BigInt;
Method	scala/math/BigInt.$div:(Lscala/math/BigInt;)Lscala/math/BigInt;
Asciz	times;
Asciz	$times;
NameAndType	$times:(Lscala/math/BigInt;)Lscala/math/BigInt;
Method	scala/math/BigInt.$times:(Lscala/math/BigInt;)Lscala/math/BigInt;
Asciz	minus;
Asciz	$minus;
NameAndType	$minus:(Lscala/math/BigInt;)Lscala/math/BigInt;
Method	scala/math/BigInt.$minus:(Lscala/math/BigInt;)Lscala/math/BigInt;
Asciz	plus;
Asciz	$plus;
NameAndType	$plus:(Lscala/math/BigInt;)Lscala/math/BigInt;
Method	scala/math/BigInt.$plus:(Lscala/math/BigInt;)Lscala/math/BigInt;
Asciz	Scala;
Asciz	InnerClasses;
Asciz	scala/math/Numeric$BigIntIsIntegral;
class	scala/math/Numeric$BigIntIsIntegral
Asciz	scala/math/Numeric;
class	scala/math/Numeric
Asciz	BigIntIsIntegral;
Asciz	scala/math/Numeric$BigIntIsIntegral$class;
class	scala/math/Numeric$BigIntIsIntegral$class
Asciz	java/lang/Object;
class	java/lang/Object

{
public static void $init$(scala.math.Numeric$BigIntIsIntegral);
  Signature: (Lscala/math/Numeric$BigIntIsIntegral;)V
  Code:
   Stack=0, Locals=1, Args_size=1
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      1      0    $this       Lscala/math/Numeric$BigIntIsIntegral;


public static double toDouble(scala.math.Numeric$BigIntIsIntegral, scala.math.BigInt);
  Signature: (Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;)D
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_1
	invokevirtual	Method scala/math/BigInt.longValue:()J
	l2d
	dreturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    $this       Lscala/math/Numeric$BigIntIsIntegral;
   0      6      1    x       Lscala/math/BigInt;


public static float toFloat(scala.math.Numeric$BigIntIsIntegral, scala.math.BigInt);
  Signature: (Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;)F
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_1
	invokevirtual	Method scala/math/BigInt.longValue:()J
	l2f
	freturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    $this       Lscala/math/Numeric$BigIntIsIntegral;
   0      6      1    x       Lscala/math/BigInt;


public static long toLong(scala.math.Numeric$BigIntIsIntegral, scala.math.BigInt);
  Signature: (Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;)J
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_1
	invokevirtual	Method scala/math/BigInt.longValue:()J
	lreturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    $this       Lscala/math/Numeric$BigIntIsIntegral;
   0      5      1    x       Lscala/math/BigInt;


public static int toInt(scala.math.Numeric$BigIntIsIntegral, scala.math.BigInt);
  Signature: (Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;)I
  Code:
   Stack=1, Locals=2, Args_size=2
	aload_1
	invokevirtual	Method scala/math/BigInt.intValue:()I
	ireturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    $this       Lscala/math/Numeric$BigIntIsIntegral;
   0      5      1    x       Lscala/math/BigInt;


public static scala.math.BigInt fromInt(scala.math.Numeric$BigIntIsIntegral, int);
  Signature: (Lscala/math/Numeric$BigIntIsIntegral;I)Lscala/math/BigInt;
  Code:
   Stack=2, Locals=2, Args_size=2
	getstatic	Field scala/math/BigInt$.MODULE$:Lscala/math/BigInt$;
	iload_1
	invokevirtual	Method scala/math/BigInt$.apply:(I)Lscala/math/BigInt;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      8      0    $this       Lscala/math/Numeric$BigIntIsIntegral;
   0      8      1    x       I


public static scala.math.BigInt negate(scala.math.Numeric$BigIntIsIntegral, scala.math.BigInt);
  Signature: (Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;)Lscala/math/BigInt;
  Code:
   Stack=1, Locals=2, Args_size=2
	aload_1
	invokevirtual	Method scala/math/BigInt.unary_$minus:()Lscala/math/BigInt;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    $this       Lscala/math/Numeric$BigIntIsIntegral;
   0      5      1    x       Lscala/math/BigInt;


public static scala.math.BigInt rem(scala.math.Numeric$BigIntIsIntegral, scala.math.BigInt, scala.math.BigInt);
  Signature: (Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
  Code:
   Stack=2, Locals=3, Args_size=3
	aload_1
	aload_2
	invokevirtual	Method scala/math/BigInt.$percent:(Lscala/math/BigInt;)Lscala/math/BigInt;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    $this       Lscala/math/Numeric$BigIntIsIntegral;
   0      6      1    x       Lscala/math/BigInt;
   0      6      2    y       Lscala/math/BigInt;


public static scala.math.BigInt quot(scala.math.Numeric$BigIntIsIntegral, scala.math.BigInt, scala.math.BigInt);
  Signature: (Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
  Code:
   Stack=2, Locals=3, Args_size=3
	aload_1
	aload_2
	invokevirtual	Method scala/math/BigInt.$div:(Lscala/math/BigInt;)Lscala/math/BigInt;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    $this       Lscala/math/Numeric$BigIntIsIntegral;
   0      6      1    x       Lscala/math/BigInt;
   0      6      2    y       Lscala/math/BigInt;


public static scala.math.BigInt times(scala.math.Numeric$BigIntIsIntegral, scala.math.BigInt, scala.math.BigInt);
  Signature: (Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
  Code:
   Stack=2, Locals=3, Args_size=3
	aload_1
	aload_2
	invokevirtual	Method scala/math/BigInt.$times:(Lscala/math/BigInt;)Lscala/math/BigInt;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    $this       Lscala/math/Numeric$BigIntIsIntegral;
   0      6      1    x       Lscala/math/BigInt;
   0      6      2    y       Lscala/math/BigInt;


public static scala.math.BigInt minus(scala.math.Numeric$BigIntIsIntegral, scala.math.BigInt, scala.math.BigInt);
  Signature: (Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
  Code:
   Stack=2, Locals=3, Args_size=3
	aload_1
	aload_2
	invokevirtual	Method scala/math/BigInt.$minus:(Lscala/math/BigInt;)Lscala/math/BigInt;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    $this       Lscala/math/Numeric$BigIntIsIntegral;
   0      6      1    x       Lscala/math/BigInt;
   0      6      2    y       Lscala/math/BigInt;


public static scala.math.BigInt plus(scala.math.Numeric$BigIntIsIntegral, scala.math.BigInt, scala.math.BigInt);
  Signature: (Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
  Code:
   Stack=2, Locals=3, Args_size=3
	aload_1
	aload_2
	invokevirtual	Method scala/math/BigInt.$plus:(Lscala/math/BigInt;)Lscala/math/BigInt;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    $this       Lscala/math/Numeric$BigIntIsIntegral;
   0      6      1    x       Lscala/math/BigInt;
   0      6      2    y       Lscala/math/BigInt;


}

