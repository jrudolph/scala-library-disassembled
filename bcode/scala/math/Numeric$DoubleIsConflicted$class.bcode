Compiled from "Numeric.scala"
public abstract class scala.math.Numeric$DoubleIsConflicted$class extends java.lang.Object
  SourceFile: "Numeric.scala"
  Scala: length = 0x
   
  InnerClass: 
   public abstract #35= #32 of #34; //DoubleIsConflicted=class scala/math/Numeric$DoubleIsConflicted of class scala/math/Numeric
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Numeric.scala;
const #3 = Asciz	$init$;
const #4 = Asciz	(Lscala/math/Numeric$DoubleIsConflicted;)V;
const #5 = Asciz	Code;
const #6 = Asciz	LineNumberTable;
const #7 = Asciz	$this;
const #8 = Asciz	Lscala/math/Numeric$DoubleIsConflicted;;
const #9 = Asciz	LocalVariableTable;
const #10 = Asciz	toDouble;
const #11 = Asciz	(Lscala/math/Numeric$DoubleIsConflicted;D)D;
const #12 = Asciz	x;
const #13 = Asciz	D;
const #14 = Asciz	toFloat;
const #15 = Asciz	(Lscala/math/Numeric$DoubleIsConflicted;D)F;
const #16 = Asciz	toLong;
const #17 = Asciz	(Lscala/math/Numeric$DoubleIsConflicted;D)J;
const #18 = Asciz	toInt;
const #19 = Asciz	(Lscala/math/Numeric$DoubleIsConflicted;D)I;
const #20 = Asciz	fromInt;
const #21 = Asciz	(Lscala/math/Numeric$DoubleIsConflicted;I)D;
const #22 = Asciz	I;
const #23 = Asciz	negate;
const #24 = Asciz	times;
const #25 = Asciz	(Lscala/math/Numeric$DoubleIsConflicted;DD)D;
const #26 = Asciz	y;
const #27 = Asciz	minus;
const #28 = Asciz	plus;
const #29 = Asciz	Scala;
const #30 = Asciz	InnerClasses;
const #31 = Asciz	scala/math/Numeric$DoubleIsConflicted;
const #32 = class	#31;	//  scala/math/Numeric$DoubleIsConflicted
const #33 = Asciz	scala/math/Numeric;
const #34 = class	#33;	//  scala/math/Numeric
const #35 = Asciz	DoubleIsConflicted;
const #36 = Asciz	scala/math/Numeric$DoubleIsConflicted$class;
const #37 = class	#36;	//  scala/math/Numeric$DoubleIsConflicted$class
const #38 = Asciz	java/lang/Object;
const #39 = class	#38;	//  java/lang/Object

{
public static void $init$(scala.math.Numeric$DoubleIsConflicted);
  Code:
   Stack=0, Locals=1, Args_size=1
   0:	return
  LineNumberTable: 
   line 107: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      1      0    $this       Lscala/math/Numeric$DoubleIsConflicted;


public static double toDouble(scala.math.Numeric$DoubleIsConflicted, double);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	dload_1
   1:	dreturn
  LineNumberTable: 
   line 116: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      2      0    $this       Lscala/math/Numeric$DoubleIsConflicted;
   0      2      1    x       D


public static float toFloat(scala.math.Numeric$DoubleIsConflicted, double);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	dload_1
   1:	d2f
   2:	freturn
  LineNumberTable: 
   line 115: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      3      0    $this       Lscala/math/Numeric$DoubleIsConflicted;
   0      3      1    x       D


public static long toLong(scala.math.Numeric$DoubleIsConflicted, double);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	dload_1
   1:	d2l
   2:	lreturn
  LineNumberTable: 
   line 114: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      3      0    $this       Lscala/math/Numeric$DoubleIsConflicted;
   0      3      1    x       D


public static int toInt(scala.math.Numeric$DoubleIsConflicted, double);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	dload_1
   1:	d2i
   2:	ireturn
  LineNumberTable: 
   line 113: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      3      0    $this       Lscala/math/Numeric$DoubleIsConflicted;
   0      3      1    x       D


public static double fromInt(scala.math.Numeric$DoubleIsConflicted, int);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	iload_1
   1:	i2d
   2:	dreturn
  LineNumberTable: 
   line 112: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      3      0    $this       Lscala/math/Numeric$DoubleIsConflicted;
   0      3      1    x       I


public static double negate(scala.math.Numeric$DoubleIsConflicted, double);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	dload_1
   1:	dneg
   2:	dreturn
  LineNumberTable: 
   line 111: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      3      0    $this       Lscala/math/Numeric$DoubleIsConflicted;
   0      3      1    x       D


public static double times(scala.math.Numeric$DoubleIsConflicted, double, double);
  Code:
   Stack=4, Locals=5, Args_size=3
   0:	dload_1
   1:	dload_3
   2:	dmul
   3:	dreturn
  LineNumberTable: 
   line 110: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      4      0    $this       Lscala/math/Numeric$DoubleIsConflicted;
   0      4      1    x       D
   0      4      3    y       D


public static double minus(scala.math.Numeric$DoubleIsConflicted, double, double);
  Code:
   Stack=4, Locals=5, Args_size=3
   0:	dload_1
   1:	dload_3
   2:	dsub
   3:	dreturn
  LineNumberTable: 
   line 109: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      4      0    $this       Lscala/math/Numeric$DoubleIsConflicted;
   0      4      1    x       D
   0      4      3    y       D


public static double plus(scala.math.Numeric$DoubleIsConflicted, double, double);
  Code:
   Stack=4, Locals=5, Args_size=3
   0:	dload_1
   1:	dload_3
   2:	dadd
   3:	dreturn
  LineNumberTable: 
   line 108: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      4      0    $this       Lscala/math/Numeric$DoubleIsConflicted;
   0      4      1    x       D
   0      4      3    y       D


}

