Compiled from "Numeric.scala"
public interface scala.math.Numeric$FloatIsFractional extends scala.math.Fractional,scala.ScalaObject
  SourceFile: "Numeric.scala"
  Scala: length = 0x
   
  Signature: length = 0x2
   00 14 
  InnerClass: 
   public abstract FloatIsFractional=class scala/math/Numeric$FloatIsFractional of class scala/math/Numeric
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	Numeric.scala;
Asciz	plus;
Asciz	(FF)F;
Asciz	minus;
Asciz	times;
Asciz	div;
Asciz	negate;
Asciz	(F)F;
Asciz	fromInt;
Asciz	(I)F;
Asciz	toInt;
Asciz	(F)I;
Asciz	toLong;
Asciz	(F)J;
Asciz	toFloat;
Asciz	toDouble;
Asciz	(F)D;
Asciz	Scala;
Asciz	Ljava/lang/Object;Lscala/math/Fractional<Ljava/lang/Float;>;Lscala/ScalaObject;;
Asciz	Signature;
Asciz	InnerClasses;
Asciz	scala/math/Numeric$FloatIsFractional;
class	scala/math/Numeric$FloatIsFractional
Asciz	scala/math/Numeric;
class	scala/math/Numeric
Asciz	FloatIsFractional;
Asciz	java/lang/Object;
class	java/lang/Object
Asciz	scala/math/Fractional;
class	scala/math/Fractional
Asciz	scala/ScalaObject;
class	scala/ScalaObject

{
public abstract float plus(float, float);
  Signature: (FF)F

public abstract float minus(float, float);
  Signature: (FF)F

public abstract float times(float, float);
  Signature: (FF)F

public abstract float div(float, float);
  Signature: (FF)F

public abstract float negate(float);
  Signature: (F)F

public abstract float fromInt(int);
  Signature: (I)F

public abstract int toInt(float);
  Signature: (F)I

public abstract long toLong(float);
  Signature: (F)J

public abstract float toFloat(float);
  Signature: (F)F

public abstract double toDouble(float);
  Signature: (F)D

}

