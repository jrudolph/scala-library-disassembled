Compiled from "Numeric.scala"
public final class scala.math.Numeric$BigDecimalAsIfIntegral$ extends java.lang.Object implements scala.math.Numeric$BigDecimalAsIfIntegral,scala.math.Ordering$BigDecimalOrdering,scala.ScalaObject
  SourceFile: "Numeric.scala"
  Scala: length = 0x
   
  InnerClass: 
   public #243= #240 of #242; //Ops=class scala/math/Numeric$Ops of class scala/math/Numeric
   public #243= #245 of #134; //Ops=class scala/math/Ordering$Ops of class scala/math/Ordering
   public #248= #247 of #83; //IntegralOps=class scala/math/Integral$IntegralOps of class scala/math/Integral
   public abstract #249= #61 of #134; //BigDecimalOrdering=class scala/math/Ordering$BigDecimalOrdering of class scala/math/Ordering
   public abstract #250= #91 of #242; //BigDecimalIsConflicted=class scala/math/Numeric$BigDecimalIsConflicted of class scala/math/Numeric
   public abstract #251= #73 of #242; //BigDecimalAsIfIntegral=class scala/math/Numeric$BigDecimalAsIfIntegral of class scala/math/Numeric
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Numeric.scala;
const #3 = Asciz	Scala;
const #4 = Asciz	MODULE$;
const #5 = Asciz	Lscala/math/Numeric$BigDecimalAsIfIntegral$;;
const #6 = Asciz	<clinit>;
const #7 = Asciz	()V;
const #8 = Asciz	Code;
const #9 = Asciz	scala/math/Numeric$BigDecimalAsIfIntegral$;
const #10 = class	#9;	//  scala/math/Numeric$BigDecimalAsIfIntegral$
const #11 = Asciz	<init>;
const #12 = NameAndType	#11:#7;//  "<init>":()V
const #13 = Method	#10.#12;	//  scala/math/Numeric$BigDecimalAsIfIntegral$."<init>":()V
const #14 = Asciz	LineNumberTable;
const #15 = Asciz	java/lang/Object;
const #16 = class	#15;	//  java/lang/Object
const #17 = Method	#16.#12;	//  java/lang/Object."<init>":()V
const #18 = NameAndType	#4:#5;//  MODULE$:Lscala/math/Numeric$BigDecimalAsIfIntegral$;
const #19 = Field	#10.#18;	//  scala/math/Numeric$BigDecimalAsIfIntegral$.MODULE$:Lscala/math/Numeric$BigDecimalAsIfIntegral$;
const #20 = Asciz	scala/math/PartialOrdering$class;
const #21 = class	#20;	//  scala/math/PartialOrdering$class
const #22 = Asciz	$init$;
const #23 = Asciz	(Lscala/math/PartialOrdering;)V;
const #24 = NameAndType	#22:#23;//  $init$:(Lscala/math/PartialOrdering;)V
const #25 = Method	#21.#24;	//  scala/math/PartialOrdering$class.$init$:(Lscala/math/PartialOrdering;)V
const #26 = Asciz	scala/math/Ordering$class;
const #27 = class	#26;	//  scala/math/Ordering$class
const #28 = Asciz	(Lscala/math/Ordering;)V;
const #29 = NameAndType	#22:#28;//  $init$:(Lscala/math/Ordering;)V
const #30 = Method	#27.#29;	//  scala/math/Ordering$class.$init$:(Lscala/math/Ordering;)V
const #31 = Asciz	scala/math/Numeric$class;
const #32 = class	#31;	//  scala/math/Numeric$class
const #33 = Asciz	(Lscala/math/Numeric;)V;
const #34 = NameAndType	#22:#33;//  $init$:(Lscala/math/Numeric;)V
const #35 = Method	#32.#34;	//  scala/math/Numeric$class.$init$:(Lscala/math/Numeric;)V
const #36 = Asciz	scala/math/Numeric$BigDecimalIsConflicted$class;
const #37 = class	#36;	//  scala/math/Numeric$BigDecimalIsConflicted$class
const #38 = Asciz	(Lscala/math/Numeric$BigDecimalIsConflicted;)V;
const #39 = NameAndType	#22:#38;//  $init$:(Lscala/math/Numeric$BigDecimalIsConflicted;)V
const #40 = Method	#37.#39;	//  scala/math/Numeric$BigDecimalIsConflicted$class.$init$:(Lscala/math/Numeric$BigDecimalIsConflicted;)V
const #41 = Asciz	scala/math/Integral$class;
const #42 = class	#41;	//  scala/math/Integral$class
const #43 = Asciz	(Lscala/math/Integral;)V;
const #44 = NameAndType	#22:#43;//  $init$:(Lscala/math/Integral;)V
const #45 = Method	#42.#44;	//  scala/math/Integral$class.$init$:(Lscala/math/Integral;)V
const #46 = Asciz	scala/math/Numeric$BigDecimalAsIfIntegral$class;
const #47 = class	#46;	//  scala/math/Numeric$BigDecimalAsIfIntegral$class
const #48 = Asciz	(Lscala/math/Numeric$BigDecimalAsIfIntegral;)V;
const #49 = NameAndType	#22:#48;//  $init$:(Lscala/math/Numeric$BigDecimalAsIfIntegral;)V
const #50 = Method	#47.#49;	//  scala/math/Numeric$BigDecimalAsIfIntegral$class.$init$:(Lscala/math/Numeric$BigDecimalAsIfIntegral;)V
const #51 = Asciz	scala/math/Ordering$BigDecimalOrdering$class;
const #52 = class	#51;	//  scala/math/Ordering$BigDecimalOrdering$class
const #53 = Asciz	(Lscala/math/Ordering$BigDecimalOrdering;)V;
const #54 = NameAndType	#22:#53;//  $init$:(Lscala/math/Ordering$BigDecimalOrdering;)V
const #55 = Method	#52.#54;	//  scala/math/Ordering$BigDecimalOrdering$class.$init$:(Lscala/math/Ordering$BigDecimalOrdering;)V
const #56 = Asciz	compare;
const #57 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)I;
const #58 = Asciz	scala/math/BigDecimal;
const #59 = class	#58;	//  scala/math/BigDecimal
const #60 = Asciz	scala/math/Ordering$BigDecimalOrdering;
const #61 = class	#60;	//  scala/math/Ordering$BigDecimalOrdering
const #62 = Asciz	(Lscala/math/BigDecimal;Lscala/math/BigDecimal;)I;
const #63 = NameAndType	#56:#62;//  compare:(Lscala/math/BigDecimal;Lscala/math/BigDecimal;)I
const #64 = InterfaceMethod	#61.#63;	//  scala/math/Ordering$BigDecimalOrdering.compare:(Lscala/math/BigDecimal;Lscala/math/BigDecimal;)I
const #65 = Asciz	this;
const #66 = Asciz	x;
const #67 = Asciz	Ljava/lang/Object;;
const #68 = Asciz	y;
const #69 = Asciz	LocalVariableTable;
const #70 = Asciz	quot;
const #71 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;;
const #72 = Asciz	scala/math/Numeric$BigDecimalAsIfIntegral;
const #73 = class	#72;	//  scala/math/Numeric$BigDecimalAsIfIntegral
const #74 = Asciz	(Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/math/BigDecimal;;
const #75 = NameAndType	#70:#74;//  quot:(Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
const #76 = InterfaceMethod	#73.#75;	//  scala/math/Numeric$BigDecimalAsIfIntegral.quot:(Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
const #77 = Asciz	rem;
const #78 = NameAndType	#77:#74;//  rem:(Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
const #79 = InterfaceMethod	#73.#78;	//  scala/math/Numeric$BigDecimalAsIfIntegral.rem:(Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
const #80 = Asciz	mkNumericOps;
const #81 = Asciz	(Ljava/lang/Object;)Lscala/math/Numeric$Ops;;
const #82 = Asciz	scala/math/Integral;
const #83 = class	#82;	//  scala/math/Integral
const #84 = Asciz	(Ljava/lang/Object;)Lscala/math/Integral$IntegralOps;;
const #85 = NameAndType	#80:#84;//  mkNumericOps:(Ljava/lang/Object;)Lscala/math/Integral$IntegralOps;
const #86 = InterfaceMethod	#83.#85;	//  scala/math/Integral.mkNumericOps:(Ljava/lang/Object;)Lscala/math/Integral$IntegralOps;
const #87 = Asciz	lhs;
const #88 = Asciz	Signature;
const #89 = Asciz	plus;
const #90 = Asciz	scala/math/Numeric$BigDecimalIsConflicted;
const #91 = class	#90;	//  scala/math/Numeric$BigDecimalIsConflicted
const #92 = NameAndType	#89:#74;//  plus:(Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
const #93 = InterfaceMethod	#91.#92;	//  scala/math/Numeric$BigDecimalIsConflicted.plus:(Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
const #94 = Asciz	minus;
const #95 = NameAndType	#94:#74;//  minus:(Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
const #96 = InterfaceMethod	#91.#95;	//  scala/math/Numeric$BigDecimalIsConflicted.minus:(Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
const #97 = Asciz	times;
const #98 = NameAndType	#97:#74;//  times:(Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
const #99 = InterfaceMethod	#91.#98;	//  scala/math/Numeric$BigDecimalIsConflicted.times:(Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
const #100 = Asciz	negate;
const #101 = Asciz	(Ljava/lang/Object;)Ljava/lang/Object;;
const #102 = Asciz	(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;;
const #103 = NameAndType	#100:#102;//  negate:(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
const #104 = InterfaceMethod	#91.#103;	//  scala/math/Numeric$BigDecimalIsConflicted.negate:(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
const #105 = Asciz	fromInt;
const #106 = Asciz	(I)Ljava/lang/Object;;
const #107 = Asciz	(I)Lscala/math/BigDecimal;;
const #108 = NameAndType	#105:#107;//  fromInt:(I)Lscala/math/BigDecimal;
const #109 = InterfaceMethod	#91.#108;	//  scala/math/Numeric$BigDecimalIsConflicted.fromInt:(I)Lscala/math/BigDecimal;
const #110 = Asciz	I;
const #111 = Asciz	toInt;
const #112 = Asciz	(Ljava/lang/Object;)I;
const #113 = Asciz	(Lscala/math/BigDecimal;)I;
const #114 = NameAndType	#111:#113;//  toInt:(Lscala/math/BigDecimal;)I
const #115 = InterfaceMethod	#91.#114;	//  scala/math/Numeric$BigDecimalIsConflicted.toInt:(Lscala/math/BigDecimal;)I
const #116 = Asciz	toLong;
const #117 = Asciz	(Ljava/lang/Object;)J;
const #118 = Asciz	(Lscala/math/BigDecimal;)J;
const #119 = NameAndType	#116:#118;//  toLong:(Lscala/math/BigDecimal;)J
const #120 = InterfaceMethod	#91.#119;	//  scala/math/Numeric$BigDecimalIsConflicted.toLong:(Lscala/math/BigDecimal;)J
const #121 = Asciz	toFloat;
const #122 = Asciz	(Ljava/lang/Object;)F;
const #123 = Asciz	(Lscala/math/BigDecimal;)F;
const #124 = NameAndType	#121:#123;//  toFloat:(Lscala/math/BigDecimal;)F
const #125 = InterfaceMethod	#91.#124;	//  scala/math/Numeric$BigDecimalIsConflicted.toFloat:(Lscala/math/BigDecimal;)F
const #126 = Asciz	toDouble;
const #127 = Asciz	(Ljava/lang/Object;)D;
const #128 = Asciz	(Lscala/math/BigDecimal;)D;
const #129 = NameAndType	#126:#128;//  toDouble:(Lscala/math/BigDecimal;)D
const #130 = InterfaceMethod	#91.#129;	//  scala/math/Numeric$BigDecimalIsConflicted.toDouble:(Lscala/math/BigDecimal;)D
const #131 = Asciz	tryCompare;
const #132 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Option;;
const #133 = Asciz	scala/math/Ordering;
const #134 = class	#133;	//  scala/math/Ordering
const #135 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;;
const #136 = NameAndType	#131:#135;//  tryCompare:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
const #137 = InterfaceMethod	#134.#136;	//  scala/math/Ordering.tryCompare:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
const #138 = Asciz	reverse;
const #139 = Asciz	()Lscala/math/PartialOrdering;;
const #140 = Asciz	()Lscala/math/Ordering;;
const #141 = NameAndType	#138:#140;//  reverse:()Lscala/math/Ordering;
const #142 = InterfaceMethod	#134.#141;	//  scala/math/Ordering.reverse:()Lscala/math/Ordering;
const #143 = Asciz	mkOrderingOps;
const #144 = Asciz	(Ljava/lang/Object;)Lscala/math/Ordering$Ops;;
const #145 = Asciz	(Lscala/math/Ordering;Ljava/lang/Object;)Lscala/math/Ordering$Ops;;
const #146 = NameAndType	#143:#145;//  mkOrderingOps:(Lscala/math/Ordering;Ljava/lang/Object;)Lscala/math/Ordering$Ops;
const #147 = Method	#27.#146;	//  scala/math/Ordering$class.mkOrderingOps:(Lscala/math/Ordering;Ljava/lang/Object;)Lscala/math/Ordering$Ops;
const #148 = Asciz	on;
const #149 = Asciz	(Lscala/Function1;)Lscala/math/Ordering;;
const #150 = Asciz	(Lscala/math/Ordering;Lscala/Function1;)Lscala/math/Ordering;;
const #151 = NameAndType	#148:#150;//  on:(Lscala/math/Ordering;Lscala/Function1;)Lscala/math/Ordering;
const #152 = Method	#27.#151;	//  scala/math/Ordering$class.on:(Lscala/math/Ordering;Lscala/Function1;)Lscala/math/Ordering;
const #153 = Asciz	f;
const #154 = Asciz	Lscala/Function1;;
const #155 = Asciz	(Lscala/math/Ordering;)Lscala/math/Ordering;;
const #156 = NameAndType	#138:#155;//  reverse:(Lscala/math/Ordering;)Lscala/math/Ordering;
const #157 = Method	#27.#156;	//  scala/math/Ordering$class.reverse:(Lscala/math/Ordering;)Lscala/math/Ordering;
const #158 = Asciz	min;
const #159 = Asciz	(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;;
const #160 = NameAndType	#158:#159;//  min:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
const #161 = Method	#27.#160;	//  scala/math/Ordering$class.min:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
const #162 = Asciz	max;
const #163 = NameAndType	#162:#159;//  max:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
const #164 = Method	#27.#163;	//  scala/math/Ordering$class.max:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
const #165 = Asciz	equiv;
const #166 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)Z;
const #167 = Asciz	(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z;
const #168 = NameAndType	#165:#167;//  equiv:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #169 = Method	#27.#168;	//  scala/math/Ordering$class.equiv:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #170 = Asciz	gt;
const #171 = NameAndType	#170:#167;//  gt:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #172 = Method	#27.#171;	//  scala/math/Ordering$class.gt:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #173 = Asciz	lt;
const #174 = NameAndType	#173:#167;//  lt:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #175 = Method	#27.#174;	//  scala/math/Ordering$class.lt:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #176 = Asciz	gteq;
const #177 = NameAndType	#176:#167;//  gteq:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #178 = Method	#27.#177;	//  scala/math/Ordering$class.gteq:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #179 = Asciz	lteq;
const #180 = NameAndType	#179:#167;//  lteq:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #181 = Method	#27.#180;	//  scala/math/Ordering$class.lteq:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #182 = Asciz	(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;;
const #183 = NameAndType	#131:#182;//  tryCompare:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
const #184 = Method	#27.#183;	//  scala/math/Ordering$class.tryCompare:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
const #185 = Asciz	signum;
const #186 = Asciz	(Lscala/math/Numeric;Ljava/lang/Object;)I;
const #187 = NameAndType	#185:#186;//  signum:(Lscala/math/Numeric;Ljava/lang/Object;)I
const #188 = Method	#32.#187;	//  scala/math/Numeric$class.signum:(Lscala/math/Numeric;Ljava/lang/Object;)I
const #189 = Asciz	abs;
const #190 = Asciz	(Lscala/math/Numeric;Ljava/lang/Object;)Ljava/lang/Object;;
const #191 = NameAndType	#189:#190;//  abs:(Lscala/math/Numeric;Ljava/lang/Object;)Ljava/lang/Object;
const #192 = Method	#32.#191;	//  scala/math/Numeric$class.abs:(Lscala/math/Numeric;Ljava/lang/Object;)Ljava/lang/Object;
const #193 = Asciz	one;
const #194 = Asciz	()Ljava/lang/Object;;
const #195 = Asciz	(Lscala/math/Numeric;)Ljava/lang/Object;;
const #196 = NameAndType	#193:#195;//  one:(Lscala/math/Numeric;)Ljava/lang/Object;
const #197 = Method	#32.#196;	//  scala/math/Numeric$class.one:(Lscala/math/Numeric;)Ljava/lang/Object;
const #198 = Asciz	zero;
const #199 = NameAndType	#198:#195;//  zero:(Lscala/math/Numeric;)Ljava/lang/Object;
const #200 = Method	#32.#199;	//  scala/math/Numeric$class.zero:(Lscala/math/Numeric;)Ljava/lang/Object;
const #201 = Asciz	(Lscala/math/Numeric$BigDecimalIsConflicted;Lscala/math/BigDecimal;)D;
const #202 = NameAndType	#126:#201;//  toDouble:(Lscala/math/Numeric$BigDecimalIsConflicted;Lscala/math/BigDecimal;)D
const #203 = Method	#37.#202;	//  scala/math/Numeric$BigDecimalIsConflicted$class.toDouble:(Lscala/math/Numeric$BigDecimalIsConflicted;Lscala/math/BigDecimal;)D
const #204 = Asciz	Lscala/math/BigDecimal;;
const #205 = Asciz	(Lscala/math/Numeric$BigDecimalIsConflicted;Lscala/math/BigDecimal;)F;
const #206 = NameAndType	#121:#205;//  toFloat:(Lscala/math/Numeric$BigDecimalIsConflicted;Lscala/math/BigDecimal;)F
const #207 = Method	#37.#206;	//  scala/math/Numeric$BigDecimalIsConflicted$class.toFloat:(Lscala/math/Numeric$BigDecimalIsConflicted;Lscala/math/BigDecimal;)F
const #208 = Asciz	(Lscala/math/Numeric$BigDecimalIsConflicted;Lscala/math/BigDecimal;)J;
const #209 = NameAndType	#116:#208;//  toLong:(Lscala/math/Numeric$BigDecimalIsConflicted;Lscala/math/BigDecimal;)J
const #210 = Method	#37.#209;	//  scala/math/Numeric$BigDecimalIsConflicted$class.toLong:(Lscala/math/Numeric$BigDecimalIsConflicted;Lscala/math/BigDecimal;)J
const #211 = Asciz	(Lscala/math/Numeric$BigDecimalIsConflicted;Lscala/math/BigDecimal;)I;
const #212 = NameAndType	#111:#211;//  toInt:(Lscala/math/Numeric$BigDecimalIsConflicted;Lscala/math/BigDecimal;)I
const #213 = Method	#37.#212;	//  scala/math/Numeric$BigDecimalIsConflicted$class.toInt:(Lscala/math/Numeric$BigDecimalIsConflicted;Lscala/math/BigDecimal;)I
const #214 = Asciz	(Lscala/math/Numeric$BigDecimalIsConflicted;I)Lscala/math/BigDecimal;;
const #215 = NameAndType	#105:#214;//  fromInt:(Lscala/math/Numeric$BigDecimalIsConflicted;I)Lscala/math/BigDecimal;
const #216 = Method	#37.#215;	//  scala/math/Numeric$BigDecimalIsConflicted$class.fromInt:(Lscala/math/Numeric$BigDecimalIsConflicted;I)Lscala/math/BigDecimal;
const #217 = Asciz	(Lscala/math/Numeric$BigDecimalIsConflicted;Lscala/math/BigDecimal;)Lscala/math/BigDecimal;;
const #218 = NameAndType	#100:#217;//  negate:(Lscala/math/Numeric$BigDecimalIsConflicted;Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
const #219 = Method	#37.#218;	//  scala/math/Numeric$BigDecimalIsConflicted$class.negate:(Lscala/math/Numeric$BigDecimalIsConflicted;Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
const #220 = Asciz	(Lscala/math/Numeric$BigDecimalIsConflicted;Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/math/BigDecimal;;
const #221 = NameAndType	#97:#220;//  times:(Lscala/math/Numeric$BigDecimalIsConflicted;Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
const #222 = Method	#37.#221;	//  scala/math/Numeric$BigDecimalIsConflicted$class.times:(Lscala/math/Numeric$BigDecimalIsConflicted;Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
const #223 = NameAndType	#94:#220;//  minus:(Lscala/math/Numeric$BigDecimalIsConflicted;Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
const #224 = Method	#37.#223;	//  scala/math/Numeric$BigDecimalIsConflicted$class.minus:(Lscala/math/Numeric$BigDecimalIsConflicted;Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
const #225 = NameAndType	#89:#220;//  plus:(Lscala/math/Numeric$BigDecimalIsConflicted;Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
const #226 = Method	#37.#225;	//  scala/math/Numeric$BigDecimalIsConflicted$class.plus:(Lscala/math/Numeric$BigDecimalIsConflicted;Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
const #227 = Asciz	(Lscala/math/Integral;Ljava/lang/Object;)Lscala/math/Integral$IntegralOps;;
const #228 = NameAndType	#80:#227;//  mkNumericOps:(Lscala/math/Integral;Ljava/lang/Object;)Lscala/math/Integral$IntegralOps;
const #229 = Method	#42.#228;	//  scala/math/Integral$class.mkNumericOps:(Lscala/math/Integral;Ljava/lang/Object;)Lscala/math/Integral$IntegralOps;
const #230 = Asciz	(Lscala/math/Numeric$BigDecimalAsIfIntegral;Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/math/BigDecimal;;
const #231 = NameAndType	#77:#230;//  rem:(Lscala/math/Numeric$BigDecimalAsIfIntegral;Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
const #232 = Method	#47.#231;	//  scala/math/Numeric$BigDecimalAsIfIntegral$class.rem:(Lscala/math/Numeric$BigDecimalAsIfIntegral;Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
const #233 = NameAndType	#70:#230;//  quot:(Lscala/math/Numeric$BigDecimalAsIfIntegral;Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
const #234 = Method	#47.#233;	//  scala/math/Numeric$BigDecimalAsIfIntegral$class.quot:(Lscala/math/Numeric$BigDecimalAsIfIntegral;Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
const #235 = Asciz	(Lscala/math/Ordering$BigDecimalOrdering;Lscala/math/BigDecimal;Lscala/math/BigDecimal;)I;
const #236 = NameAndType	#56:#235;//  compare:(Lscala/math/Ordering$BigDecimalOrdering;Lscala/math/BigDecimal;Lscala/math/BigDecimal;)I
const #237 = Method	#52.#236;	//  scala/math/Ordering$BigDecimalOrdering$class.compare:(Lscala/math/Ordering$BigDecimalOrdering;Lscala/math/BigDecimal;Lscala/math/BigDecimal;)I
const #238 = Asciz	InnerClasses;
const #239 = Asciz	scala/math/Numeric$Ops;
const #240 = class	#239;	//  scala/math/Numeric$Ops
const #241 = Asciz	scala/math/Numeric;
const #242 = class	#241;	//  scala/math/Numeric
const #243 = Asciz	Ops;
const #244 = Asciz	scala/math/Ordering$Ops;
const #245 = class	#244;	//  scala/math/Ordering$Ops
const #246 = Asciz	scala/math/Integral$IntegralOps;
const #247 = class	#246;	//  scala/math/Integral$IntegralOps
const #248 = Asciz	IntegralOps;
const #249 = Asciz	BigDecimalOrdering;
const #250 = Asciz	BigDecimalIsConflicted;
const #251 = Asciz	BigDecimalAsIfIntegral;
const #252 = Asciz	scala/ScalaObject;
const #253 = class	#252;	//  scala/ScalaObject

{
public static final scala.math.Numeric$BigDecimalAsIfIntegral$ MODULE$;

public static {};
  Code:
   Stack=1, Locals=0, Args_size=0
   0:	new	#10; //class scala/math/Numeric$BigDecimalAsIfIntegral$
   3:	invokespecial	#13; //Method "<init>":()V
   6:	return

public scala.math.Numeric$BigDecimalAsIfIntegral$();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokespecial	#17; //Method java/lang/Object."<init>":()V
   4:	aload_0
   5:	putstatic	#19; //Field MODULE$:Lscala/math/Numeric$BigDecimalAsIfIntegral$;
   8:	aload_0
   9:	invokestatic	#25; //Method scala/math/PartialOrdering$class.$init$:(Lscala/math/PartialOrdering;)V
   12:	aload_0
   13:	invokestatic	#30; //Method scala/math/Ordering$class.$init$:(Lscala/math/Ordering;)V
   16:	aload_0
   17:	invokestatic	#35; //Method scala/math/Numeric$class.$init$:(Lscala/math/Numeric;)V
   20:	aload_0
   21:	invokestatic	#40; //Method scala/math/Numeric$BigDecimalIsConflicted$class.$init$:(Lscala/math/Numeric$BigDecimalIsConflicted;)V
   24:	aload_0
   25:	invokestatic	#45; //Method scala/math/Integral$class.$init$:(Lscala/math/Integral;)V
   28:	aload_0
   29:	invokestatic	#50; //Method scala/math/Numeric$BigDecimalAsIfIntegral$class.$init$:(Lscala/math/Numeric$BigDecimalAsIfIntegral;)V
   32:	aload_0
   33:	invokestatic	#55; //Method scala/math/Ordering$BigDecimalOrdering$class.$init$:(Lscala/math/Ordering$BigDecimalOrdering;)V
   36:	return
  LineNumberTable: 
   line 149: 0


public int compare(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	checkcast	#59; //class scala/math/BigDecimal
   5:	aload_2
   6:	checkcast	#59; //class scala/math/BigDecimal
   9:	invokeinterface	#64,  3; //InterfaceMethod scala/math/Ordering$BigDecimalOrdering.compare:(Lscala/math/BigDecimal;Lscala/math/BigDecimal;)I
   14:	ireturn
  LineNumberTable: 
   line 149: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      15      0    this       Lscala/math/Numeric$BigDecimalAsIfIntegral$;
   0      15      1    x       Ljava/lang/Object;
   0      15      2    y       Ljava/lang/Object;


public java.lang.Object quot(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	checkcast	#59; //class scala/math/BigDecimal
   5:	aload_2
   6:	checkcast	#59; //class scala/math/BigDecimal
   9:	invokeinterface	#76,  3; //InterfaceMethod scala/math/Numeric$BigDecimalAsIfIntegral.quot:(Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
   14:	areturn
  LineNumberTable: 
   line 149: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      15      0    this       Lscala/math/Numeric$BigDecimalAsIfIntegral$;
   0      15      1    x       Ljava/lang/Object;
   0      15      2    y       Ljava/lang/Object;


public java.lang.Object rem(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	checkcast	#59; //class scala/math/BigDecimal
   5:	aload_2
   6:	checkcast	#59; //class scala/math/BigDecimal
   9:	invokeinterface	#79,  3; //InterfaceMethod scala/math/Numeric$BigDecimalAsIfIntegral.rem:(Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
   14:	areturn
  LineNumberTable: 
   line 149: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      15      0    this       Lscala/math/Numeric$BigDecimalAsIfIntegral$;
   0      15      1    x       Ljava/lang/Object;
   0      15      2    y       Ljava/lang/Object;


public scala.math.Numeric$Ops mkNumericOps(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokeinterface	#86,  2; //InterfaceMethod scala/math/Integral.mkNumericOps:(Ljava/lang/Object;)Lscala/math/Integral$IntegralOps;
   7:	areturn
  LineNumberTable: 
   line 149: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      8      0    this       Lscala/math/Numeric$BigDecimalAsIfIntegral$;
   0      8      1    lhs       Ljava/lang/Object;

  Signature: length = 0x2
   00 51 

public java.lang.Object plus(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	checkcast	#59; //class scala/math/BigDecimal
   5:	aload_2
   6:	checkcast	#59; //class scala/math/BigDecimal
   9:	invokeinterface	#93,  3; //InterfaceMethod scala/math/Numeric$BigDecimalIsConflicted.plus:(Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
   14:	areturn
  LineNumberTable: 
   line 149: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      15      0    this       Lscala/math/Numeric$BigDecimalAsIfIntegral$;
   0      15      1    x       Ljava/lang/Object;
   0      15      2    y       Ljava/lang/Object;


public java.lang.Object minus(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	checkcast	#59; //class scala/math/BigDecimal
   5:	aload_2
   6:	checkcast	#59; //class scala/math/BigDecimal
   9:	invokeinterface	#96,  3; //InterfaceMethod scala/math/Numeric$BigDecimalIsConflicted.minus:(Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
   14:	areturn
  LineNumberTable: 
   line 149: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      15      0    this       Lscala/math/Numeric$BigDecimalAsIfIntegral$;
   0      15      1    x       Ljava/lang/Object;
   0      15      2    y       Ljava/lang/Object;


public java.lang.Object times(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	checkcast	#59; //class scala/math/BigDecimal
   5:	aload_2
   6:	checkcast	#59; //class scala/math/BigDecimal
   9:	invokeinterface	#99,  3; //InterfaceMethod scala/math/Numeric$BigDecimalIsConflicted.times:(Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
   14:	areturn
  LineNumberTable: 
   line 149: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      15      0    this       Lscala/math/Numeric$BigDecimalAsIfIntegral$;
   0      15      1    x       Ljava/lang/Object;
   0      15      2    y       Ljava/lang/Object;


public java.lang.Object negate(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	checkcast	#59; //class scala/math/BigDecimal
   5:	invokeinterface	#104,  2; //InterfaceMethod scala/math/Numeric$BigDecimalIsConflicted.negate:(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
   10:	areturn
  LineNumberTable: 
   line 149: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      11      0    this       Lscala/math/Numeric$BigDecimalAsIfIntegral$;
   0      11      1    x       Ljava/lang/Object;


public java.lang.Object fromInt(int);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	invokeinterface	#109,  2; //InterfaceMethod scala/math/Numeric$BigDecimalIsConflicted.fromInt:(I)Lscala/math/BigDecimal;
   7:	areturn
  LineNumberTable: 
   line 149: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      8      0    this       Lscala/math/Numeric$BigDecimalAsIfIntegral$;
   0      8      1    x       I


public int toInt(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	checkcast	#59; //class scala/math/BigDecimal
   5:	invokeinterface	#115,  2; //InterfaceMethod scala/math/Numeric$BigDecimalIsConflicted.toInt:(Lscala/math/BigDecimal;)I
   10:	ireturn
  LineNumberTable: 
   line 149: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      11      0    this       Lscala/math/Numeric$BigDecimalAsIfIntegral$;
   0      11      1    x       Ljava/lang/Object;


public long toLong(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	checkcast	#59; //class scala/math/BigDecimal
   5:	invokeinterface	#120,  2; //InterfaceMethod scala/math/Numeric$BigDecimalIsConflicted.toLong:(Lscala/math/BigDecimal;)J
   10:	lreturn
  LineNumberTable: 
   line 149: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      11      0    this       Lscala/math/Numeric$BigDecimalAsIfIntegral$;
   0      11      1    x       Ljava/lang/Object;


public float toFloat(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	checkcast	#59; //class scala/math/BigDecimal
   5:	invokeinterface	#125,  2; //InterfaceMethod scala/math/Numeric$BigDecimalIsConflicted.toFloat:(Lscala/math/BigDecimal;)F
   10:	freturn
  LineNumberTable: 
   line 149: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      11      0    this       Lscala/math/Numeric$BigDecimalAsIfIntegral$;
   0      11      1    x       Ljava/lang/Object;


public double toDouble(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	checkcast	#59; //class scala/math/BigDecimal
   5:	invokeinterface	#130,  2; //InterfaceMethod scala/math/Numeric$BigDecimalIsConflicted.toDouble:(Lscala/math/BigDecimal;)D
   10:	dreturn
  LineNumberTable: 
   line 149: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      11      0    this       Lscala/math/Numeric$BigDecimalAsIfIntegral$;
   0      11      1    x       Ljava/lang/Object;


public scala.Option tryCompare(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokeinterface	#137,  3; //InterfaceMethod scala/math/Ordering.tryCompare:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
   8:	areturn
  LineNumberTable: 
   line 149: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/math/Numeric$BigDecimalAsIfIntegral$;
   0      9      1    x       Ljava/lang/Object;
   0      9      2    y       Ljava/lang/Object;


public scala.math.PartialOrdering reverse();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokeinterface	#142,  1; //InterfaceMethod scala/math/Ordering.reverse:()Lscala/math/Ordering;
   6:	areturn
  LineNumberTable: 
   line 149: 0


public scala.math.Ordering$Ops mkOrderingOps(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#147; //Method scala/math/Ordering$class.mkOrderingOps:(Lscala/math/Ordering;Ljava/lang/Object;)Lscala/math/Ordering$Ops;
   5:	areturn
  LineNumberTable: 
   line 149: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/math/Numeric$BigDecimalAsIfIntegral$;
   0      6      1    lhs       Ljava/lang/Object;

  Signature: length = 0x2
   00 FFFFFF90 

public scala.math.Ordering on(scala.Function1);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#152; //Method scala/math/Ordering$class.on:(Lscala/math/Ordering;Lscala/Function1;)Lscala/math/Ordering;
   5:	areturn
  LineNumberTable: 
   line 149: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/math/Numeric$BigDecimalAsIfIntegral$;
   0      6      1    f       Lscala/Function1;


public scala.math.Ordering reverse();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#157; //Method scala/math/Ordering$class.reverse:(Lscala/math/Ordering;)Lscala/math/Ordering;
   4:	areturn
  LineNumberTable: 
   line 149: 0


public java.lang.Object min(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#161; //Method scala/math/Ordering$class.min:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   6:	areturn
  LineNumberTable: 
   line 149: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/math/Numeric$BigDecimalAsIfIntegral$;
   0      7      1    x       Ljava/lang/Object;
   0      7      2    y       Ljava/lang/Object;


public java.lang.Object max(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#164; //Method scala/math/Ordering$class.max:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   6:	areturn
  LineNumberTable: 
   line 149: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/math/Numeric$BigDecimalAsIfIntegral$;
   0      7      1    x       Ljava/lang/Object;
   0      7      2    y       Ljava/lang/Object;


public boolean equiv(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#169; //Method scala/math/Ordering$class.equiv:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
   6:	ireturn
  LineNumberTable: 
   line 149: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/math/Numeric$BigDecimalAsIfIntegral$;
   0      7      1    x       Ljava/lang/Object;
   0      7      2    y       Ljava/lang/Object;


public boolean gt(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#172; //Method scala/math/Ordering$class.gt:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
   6:	ireturn
  LineNumberTable: 
   line 149: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/math/Numeric$BigDecimalAsIfIntegral$;
   0      7      1    x       Ljava/lang/Object;
   0      7      2    y       Ljava/lang/Object;


public boolean lt(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#175; //Method scala/math/Ordering$class.lt:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
   6:	ireturn
  LineNumberTable: 
   line 149: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/math/Numeric$BigDecimalAsIfIntegral$;
   0      7      1    x       Ljava/lang/Object;
   0      7      2    y       Ljava/lang/Object;


public boolean gteq(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#178; //Method scala/math/Ordering$class.gteq:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
   6:	ireturn
  LineNumberTable: 
   line 149: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/math/Numeric$BigDecimalAsIfIntegral$;
   0      7      1    x       Ljava/lang/Object;
   0      7      2    y       Ljava/lang/Object;


public boolean lteq(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#181; //Method scala/math/Ordering$class.lteq:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
   6:	ireturn
  LineNumberTable: 
   line 149: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/math/Numeric$BigDecimalAsIfIntegral$;
   0      7      1    x       Ljava/lang/Object;
   0      7      2    y       Ljava/lang/Object;


public scala.Some tryCompare(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#184; //Method scala/math/Ordering$class.tryCompare:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
   6:	areturn
  LineNumberTable: 
   line 149: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/math/Numeric$BigDecimalAsIfIntegral$;
   0      7      1    x       Ljava/lang/Object;
   0      7      2    y       Ljava/lang/Object;


public int signum(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#188; //Method scala/math/Numeric$class.signum:(Lscala/math/Numeric;Ljava/lang/Object;)I
   5:	ireturn
  LineNumberTable: 
   line 149: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/math/Numeric$BigDecimalAsIfIntegral$;
   0      6      1    x       Ljava/lang/Object;


public java.lang.Object abs(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#192; //Method scala/math/Numeric$class.abs:(Lscala/math/Numeric;Ljava/lang/Object;)Ljava/lang/Object;
   5:	areturn
  LineNumberTable: 
   line 149: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/math/Numeric$BigDecimalAsIfIntegral$;
   0      6      1    x       Ljava/lang/Object;


public java.lang.Object one();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#197; //Method scala/math/Numeric$class.one:(Lscala/math/Numeric;)Ljava/lang/Object;
   4:	areturn
  LineNumberTable: 
   line 149: 0


public java.lang.Object zero();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#200; //Method scala/math/Numeric$class.zero:(Lscala/math/Numeric;)Ljava/lang/Object;
   4:	areturn
  LineNumberTable: 
   line 149: 0


public double toDouble(scala.math.BigDecimal);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#203; //Method scala/math/Numeric$BigDecimalIsConflicted$class.toDouble:(Lscala/math/Numeric$BigDecimalIsConflicted;Lscala/math/BigDecimal;)D
   5:	dreturn
  LineNumberTable: 
   line 149: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/math/Numeric$BigDecimalAsIfIntegral$;
   0      6      1    x       Lscala/math/BigDecimal;


public float toFloat(scala.math.BigDecimal);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#207; //Method scala/math/Numeric$BigDecimalIsConflicted$class.toFloat:(Lscala/math/Numeric$BigDecimalIsConflicted;Lscala/math/BigDecimal;)F
   5:	freturn
  LineNumberTable: 
   line 149: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/math/Numeric$BigDecimalAsIfIntegral$;
   0      6      1    x       Lscala/math/BigDecimal;


public long toLong(scala.math.BigDecimal);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#210; //Method scala/math/Numeric$BigDecimalIsConflicted$class.toLong:(Lscala/math/Numeric$BigDecimalIsConflicted;Lscala/math/BigDecimal;)J
   5:	lreturn
  LineNumberTable: 
   line 149: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/math/Numeric$BigDecimalAsIfIntegral$;
   0      6      1    x       Lscala/math/BigDecimal;


public int toInt(scala.math.BigDecimal);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#213; //Method scala/math/Numeric$BigDecimalIsConflicted$class.toInt:(Lscala/math/Numeric$BigDecimalIsConflicted;Lscala/math/BigDecimal;)I
   5:	ireturn
  LineNumberTable: 
   line 149: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/math/Numeric$BigDecimalAsIfIntegral$;
   0      6      1    x       Lscala/math/BigDecimal;


public scala.math.BigDecimal fromInt(int);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	invokestatic	#216; //Method scala/math/Numeric$BigDecimalIsConflicted$class.fromInt:(Lscala/math/Numeric$BigDecimalIsConflicted;I)Lscala/math/BigDecimal;
   5:	areturn
  LineNumberTable: 
   line 149: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/math/Numeric$BigDecimalAsIfIntegral$;
   0      6      1    x       I


public scala.math.BigDecimal negate(scala.math.BigDecimal);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#219; //Method scala/math/Numeric$BigDecimalIsConflicted$class.negate:(Lscala/math/Numeric$BigDecimalIsConflicted;Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
   5:	areturn
  LineNumberTable: 
   line 149: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/math/Numeric$BigDecimalAsIfIntegral$;
   0      6      1    x       Lscala/math/BigDecimal;


public scala.math.BigDecimal times(scala.math.BigDecimal, scala.math.BigDecimal);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#222; //Method scala/math/Numeric$BigDecimalIsConflicted$class.times:(Lscala/math/Numeric$BigDecimalIsConflicted;Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
   6:	areturn
  LineNumberTable: 
   line 149: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/math/Numeric$BigDecimalAsIfIntegral$;
   0      7      1    x       Lscala/math/BigDecimal;
   0      7      2    y       Lscala/math/BigDecimal;


public scala.math.BigDecimal minus(scala.math.BigDecimal, scala.math.BigDecimal);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#224; //Method scala/math/Numeric$BigDecimalIsConflicted$class.minus:(Lscala/math/Numeric$BigDecimalIsConflicted;Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
   6:	areturn
  LineNumberTable: 
   line 149: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/math/Numeric$BigDecimalAsIfIntegral$;
   0      7      1    x       Lscala/math/BigDecimal;
   0      7      2    y       Lscala/math/BigDecimal;


public scala.math.BigDecimal plus(scala.math.BigDecimal, scala.math.BigDecimal);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#226; //Method scala/math/Numeric$BigDecimalIsConflicted$class.plus:(Lscala/math/Numeric$BigDecimalIsConflicted;Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
   6:	areturn
  LineNumberTable: 
   line 149: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/math/Numeric$BigDecimalAsIfIntegral$;
   0      7      1    x       Lscala/math/BigDecimal;
   0      7      2    y       Lscala/math/BigDecimal;


public scala.math.Integral$IntegralOps mkNumericOps(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#229; //Method scala/math/Integral$class.mkNumericOps:(Lscala/math/Integral;Ljava/lang/Object;)Lscala/math/Integral$IntegralOps;
   5:	areturn
  LineNumberTable: 
   line 149: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/math/Numeric$BigDecimalAsIfIntegral$;
   0      6      1    lhs       Ljava/lang/Object;

  Signature: length = 0x2
   00 54 

public scala.math.BigDecimal rem(scala.math.BigDecimal, scala.math.BigDecimal);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#232; //Method scala/math/Numeric$BigDecimalAsIfIntegral$class.rem:(Lscala/math/Numeric$BigDecimalAsIfIntegral;Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
   6:	areturn
  LineNumberTable: 
   line 149: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/math/Numeric$BigDecimalAsIfIntegral$;
   0      7      1    x       Lscala/math/BigDecimal;
   0      7      2    y       Lscala/math/BigDecimal;


public scala.math.BigDecimal quot(scala.math.BigDecimal, scala.math.BigDecimal);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#234; //Method scala/math/Numeric$BigDecimalAsIfIntegral$class.quot:(Lscala/math/Numeric$BigDecimalAsIfIntegral;Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
   6:	areturn
  LineNumberTable: 
   line 149: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/math/Numeric$BigDecimalAsIfIntegral$;
   0      7      1    x       Lscala/math/BigDecimal;
   0      7      2    y       Lscala/math/BigDecimal;


public int compare(scala.math.BigDecimal, scala.math.BigDecimal);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#237; //Method scala/math/Ordering$BigDecimalOrdering$class.compare:(Lscala/math/Ordering$BigDecimalOrdering;Lscala/math/BigDecimal;Lscala/math/BigDecimal;)I
   6:	ireturn
  LineNumberTable: 
   line 149: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/math/Numeric$BigDecimalAsIfIntegral$;
   0      7      1    x       Lscala/math/BigDecimal;
   0      7      2    y       Lscala/math/BigDecimal;


}

