Compiled from "Numeric.scala"
public interface scala.math.Numeric$BigDecimalAsIfIntegral extends scala.math.Numeric$BigDecimalIsConflicted,scala.math.Integral,scala.ScalaObject
  SourceFile: "Numeric.scala"
  Signature: length = 0x2
   00 06 
  Scala: length = 0x
   
  InnerClass: 
   public abstract BigDecimalIsConflicted=class scala/math/Numeric$BigDecimalIsConflicted of class scala/math/Numeric
   public abstract BigDecimalAsIfIntegral=class scala/math/Numeric$BigDecimalAsIfIntegral of class scala/math/Numeric
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	Numeric.scala;
Asciz	rem;
Asciz	(Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/math/BigDecimal;;
Asciz	quot;
Asciz	Ljava/lang/Object;Lscala/math/Numeric$BigDecimalIsConflicted;Lscala/math/Integral<Lscala/math/BigDecimal;>;Lscala/ScalaObject;;
Asciz	Signature;
Asciz	Scala;
Asciz	InnerClasses;
Asciz	scala/math/Numeric$BigDecimalIsConflicted;
class	scala/math/Numeric$BigDecimalIsConflicted
Asciz	scala/math/Numeric;
class	scala/math/Numeric
Asciz	BigDecimalIsConflicted;
Asciz	scala/math/Numeric$BigDecimalAsIfIntegral;
class	scala/math/Numeric$BigDecimalAsIfIntegral
Asciz	BigDecimalAsIfIntegral;
Asciz	java/lang/Object;
class	java/lang/Object
Asciz	scala/math/Integral;
class	scala/math/Integral
Asciz	scala/ScalaObject;
class	scala/ScalaObject

{
public abstract scala.math.BigDecimal rem(scala.math.BigDecimal, scala.math.BigDecimal);
  Signature: (Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/math/BigDecimal;

public abstract scala.math.BigDecimal quot(scala.math.BigDecimal, scala.math.BigDecimal);
  Signature: (Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/math/BigDecimal;

}

