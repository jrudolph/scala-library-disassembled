Compiled from "Numeric.scala"
public abstract class scala.math.Numeric$BigDecimalIsConflicted$class extends java.lang.Object
  SourceFile: "Numeric.scala"
  Scala: length = 0x
   
  InnerClass: 
   public abstract BigDecimalIsConflicted=class scala/math/Numeric$BigDecimalIsConflicted of class scala/math/Numeric
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	Numeric.scala;
Asciz	$init$;
Asciz	(Lscala/math/Numeric$BigDecimalIsConflicted;)V;
Asciz	Code;
Asciz	LineNumberTable;
Asciz	$this;
Asciz	Lscala/math/Numeric$BigDecimalIsConflicted;;
Asciz	LocalVariableTable;
Asciz	toDouble;
Asciz	(Lscala/math/Numeric$BigDecimalIsConflicted;Lscala/math/BigDecimal;)D;
Asciz	scala/math/BigDecimal;
class	scala/math/BigDecimal
Asciz	doubleValue;
Asciz	()D;
NameAndType	doubleValue:()D
Method	scala/math/BigDecimal.doubleValue:()D
Asciz	x;
Asciz	Lscala/math/BigDecimal;;
Asciz	toFloat;
Asciz	(Lscala/math/Numeric$BigDecimalIsConflicted;Lscala/math/BigDecimal;)F;
Asciz	floatValue;
Asciz	()F;
NameAndType	floatValue:()F
Method	scala/math/BigDecimal.floatValue:()F
Asciz	toLong;
Asciz	(Lscala/math/Numeric$BigDecimalIsConflicted;Lscala/math/BigDecimal;)J;
Asciz	longValue;
Asciz	()J;
NameAndType	longValue:()J
Method	scala/math/BigDecimal.longValue:()J
Asciz	toInt;
Asciz	(Lscala/math/Numeric$BigDecimalIsConflicted;Lscala/math/BigDecimal;)I;
Asciz	intValue;
Asciz	()I;
NameAndType	intValue:()I
Method	scala/math/BigDecimal.intValue:()I
Asciz	fromInt;
Asciz	(Lscala/math/Numeric$BigDecimalIsConflicted;I)Lscala/math/BigDecimal;;
Asciz	scala/math/BigDecimal$;
class	scala/math/BigDecimal$
Asciz	MODULE$;
Asciz	Lscala/math/BigDecimal$;;
NameAndType	MODULE$:Lscala/math/BigDecimal$;
Field	scala/math/BigDecimal$.MODULE$:Lscala/math/BigDecimal$;
Asciz	apply;
Asciz	(I)Lscala/math/BigDecimal;;
NameAndType	apply:(I)Lscala/math/BigDecimal;
Method	scala/math/BigDecimal$.apply:(I)Lscala/math/BigDecimal;
Asciz	I;
Asciz	negate;
Asciz	(Lscala/math/Numeric$BigDecimalIsConflicted;Lscala/math/BigDecimal;)Lscala/math/BigDecimal;;
Asciz	unary_$minus;
Asciz	()Lscala/math/BigDecimal;;
NameAndType	unary_$minus:()Lscala/math/BigDecimal;
Method	scala/math/BigDecimal.unary_$minus:()Lscala/math/BigDecimal;
Asciz	times;
Asciz	(Lscala/math/Numeric$BigDecimalIsConflicted;Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/math/BigDecimal;;
Asciz	$times;
Asciz	(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;;
NameAndType	$times:(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
Method	scala/math/BigDecimal.$times:(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
Asciz	y;
Asciz	minus;
Asciz	$minus;
NameAndType	$minus:(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
Method	scala/math/BigDecimal.$minus:(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
Asciz	plus;
Asciz	$plus;
NameAndType	$plus:(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
Method	scala/math/BigDecimal.$plus:(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
Asciz	Scala;
Asciz	InnerClasses;
Asciz	scala/math/Numeric$BigDecimalIsConflicted;
class	scala/math/Numeric$BigDecimalIsConflicted
Asciz	scala/math/Numeric;
class	scala/math/Numeric
Asciz	BigDecimalIsConflicted;
Asciz	scala/math/Numeric$BigDecimalIsConflicted$class;
class	scala/math/Numeric$BigDecimalIsConflicted$class
Asciz	java/lang/Object;
class	java/lang/Object

{
public static void $init$(scala.math.Numeric$BigDecimalIsConflicted);
  Signature: (Lscala/math/Numeric$BigDecimalIsConflicted;)V
  Code:
   Stack=0, Locals=1, Args_size=1
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      1      0    $this       Lscala/math/Numeric$BigDecimalIsConflicted;


public static double toDouble(scala.math.Numeric$BigDecimalIsConflicted, scala.math.BigDecimal);
  Signature: (Lscala/math/Numeric$BigDecimalIsConflicted;Lscala/math/BigDecimal;)D
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_1
	invokevirtual	Method scala/math/BigDecimal.doubleValue:()D
	dreturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    $this       Lscala/math/Numeric$BigDecimalIsConflicted;
   0      5      1    x       Lscala/math/BigDecimal;


public static float toFloat(scala.math.Numeric$BigDecimalIsConflicted, scala.math.BigDecimal);
  Signature: (Lscala/math/Numeric$BigDecimalIsConflicted;Lscala/math/BigDecimal;)F
  Code:
   Stack=1, Locals=2, Args_size=2
	aload_1
	invokevirtual	Method scala/math/BigDecimal.floatValue:()F
	freturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    $this       Lscala/math/Numeric$BigDecimalIsConflicted;
   0      5      1    x       Lscala/math/BigDecimal;


public static long toLong(scala.math.Numeric$BigDecimalIsConflicted, scala.math.BigDecimal);
  Signature: (Lscala/math/Numeric$BigDecimalIsConflicted;Lscala/math/BigDecimal;)J
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_1
	invokevirtual	Method scala/math/BigDecimal.longValue:()J
	lreturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    $this       Lscala/math/Numeric$BigDecimalIsConflicted;
   0      5      1    x       Lscala/math/BigDecimal;


public static int toInt(scala.math.Numeric$BigDecimalIsConflicted, scala.math.BigDecimal);
  Signature: (Lscala/math/Numeric$BigDecimalIsConflicted;Lscala/math/BigDecimal;)I
  Code:
   Stack=1, Locals=2, Args_size=2
	aload_1
	invokevirtual	Method scala/math/BigDecimal.intValue:()I
	ireturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    $this       Lscala/math/Numeric$BigDecimalIsConflicted;
   0      5      1    x       Lscala/math/BigDecimal;


public static scala.math.BigDecimal fromInt(scala.math.Numeric$BigDecimalIsConflicted, int);
  Signature: (Lscala/math/Numeric$BigDecimalIsConflicted;I)Lscala/math/BigDecimal;
  Code:
   Stack=2, Locals=2, Args_size=2
	getstatic	Field scala/math/BigDecimal$.MODULE$:Lscala/math/BigDecimal$;
	iload_1
	invokevirtual	Method scala/math/BigDecimal$.apply:(I)Lscala/math/BigDecimal;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      8      0    $this       Lscala/math/Numeric$BigDecimalIsConflicted;
   0      8      1    x       I


public static scala.math.BigDecimal negate(scala.math.Numeric$BigDecimalIsConflicted, scala.math.BigDecimal);
  Signature: (Lscala/math/Numeric$BigDecimalIsConflicted;Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
  Code:
   Stack=1, Locals=2, Args_size=2
	aload_1
	invokevirtual	Method scala/math/BigDecimal.unary_$minus:()Lscala/math/BigDecimal;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    $this       Lscala/math/Numeric$BigDecimalIsConflicted;
   0      5      1    x       Lscala/math/BigDecimal;


public static scala.math.BigDecimal times(scala.math.Numeric$BigDecimalIsConflicted, scala.math.BigDecimal, scala.math.BigDecimal);
  Signature: (Lscala/math/Numeric$BigDecimalIsConflicted;Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
  Code:
   Stack=2, Locals=3, Args_size=3
	aload_1
	aload_2
	invokevirtual	Method scala/math/BigDecimal.$times:(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    $this       Lscala/math/Numeric$BigDecimalIsConflicted;
   0      6      1    x       Lscala/math/BigDecimal;
   0      6      2    y       Lscala/math/BigDecimal;


public static scala.math.BigDecimal minus(scala.math.Numeric$BigDecimalIsConflicted, scala.math.BigDecimal, scala.math.BigDecimal);
  Signature: (Lscala/math/Numeric$BigDecimalIsConflicted;Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
  Code:
   Stack=2, Locals=3, Args_size=3
	aload_1
	aload_2
	invokevirtual	Method scala/math/BigDecimal.$minus:(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    $this       Lscala/math/Numeric$BigDecimalIsConflicted;
   0      6      1    x       Lscala/math/BigDecimal;
   0      6      2    y       Lscala/math/BigDecimal;


public static scala.math.BigDecimal plus(scala.math.Numeric$BigDecimalIsConflicted, scala.math.BigDecimal, scala.math.BigDecimal);
  Signature: (Lscala/math/Numeric$BigDecimalIsConflicted;Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
  Code:
   Stack=2, Locals=3, Args_size=3
	aload_1
	aload_2
	invokevirtual	Method scala/math/BigDecimal.$plus:(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    $this       Lscala/math/Numeric$BigDecimalIsConflicted;
   0      6      1    x       Lscala/math/BigDecimal;
   0      6      2    y       Lscala/math/BigDecimal;


}

