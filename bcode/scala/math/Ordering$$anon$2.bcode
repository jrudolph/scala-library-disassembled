Compiled from "Ordering.scala"
public final class scala.math.Ordering$$anon$2 extends java.lang.Object implements scala.math.Ordering
  SourceFile: "Ordering.scala"
  Signature: length = 0x2
   00 6E 
  Scala: length = 0x
   
  InnerClass: 
   public #115= #114 of #44; //Ops=class scala/math/Ordering$Ops of class scala/math/Ordering
   public final #116= #17 of #44; //$anon$2=class scala/math/Ordering$$anon$2 of class scala/math/Ordering
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Ordering.scala;
const #3 = Asciz	f$1;
const #4 = Asciz	Lscala/Function1;;
const #5 = Asciz	$outer;
const #6 = Asciz	Lscala/math/Ordering;;
const #7 = Asciz	<init>;
const #8 = Asciz	(Lscala/math/Ordering;Lscala/Function1;)V;
const #9 = Asciz	Code;
const #10 = Asciz	LineNumberTable;
const #11 = Asciz	java/lang/NullPointerException;
const #12 = class	#11;	//  java/lang/NullPointerException
const #13 = Asciz	()V;
const #14 = NameAndType	#7:#13;//  "<init>":()V
const #15 = Method	#12.#14;	//  java/lang/NullPointerException."<init>":()V
const #16 = Asciz	scala/math/Ordering$$anon$2;
const #17 = class	#16;	//  scala/math/Ordering$$anon$2
const #18 = NameAndType	#5:#6;//  $outer:Lscala/math/Ordering;
const #19 = Field	#17.#18;	//  scala/math/Ordering$$anon$2.$outer:Lscala/math/Ordering;
const #20 = NameAndType	#3:#4;//  f$1:Lscala/Function1;
const #21 = Field	#17.#20;	//  scala/math/Ordering$$anon$2.f$1:Lscala/Function1;
const #22 = Asciz	java/lang/Object;
const #23 = class	#22;	//  java/lang/Object
const #24 = Method	#23.#14;	//  java/lang/Object."<init>":()V
const #25 = Asciz	scala/math/PartialOrdering$class;
const #26 = class	#25;	//  scala/math/PartialOrdering$class
const #27 = Asciz	$init$;
const #28 = Asciz	(Lscala/math/PartialOrdering;)V;
const #29 = NameAndType	#27:#28;//  $init$:(Lscala/math/PartialOrdering;)V
const #30 = Method	#26.#29;	//  scala/math/PartialOrdering$class.$init$:(Lscala/math/PartialOrdering;)V
const #31 = Asciz	scala/math/Ordering$class;
const #32 = class	#31;	//  scala/math/Ordering$class
const #33 = Asciz	(Lscala/math/Ordering;)V;
const #34 = NameAndType	#27:#33;//  $init$:(Lscala/math/Ordering;)V
const #35 = Method	#32.#34;	//  scala/math/Ordering$class.$init$:(Lscala/math/Ordering;)V
const #36 = Asciz	this;
const #37 = Asciz	Lscala/math/Ordering$$anon$2;;
const #38 = Asciz	LocalVariableTable;
const #39 = Asciz	(Lscala/math/Ordering<TT;>;)V;
const #40 = Asciz	Signature;
const #41 = Asciz	tryCompare;
const #42 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Option;;
const #43 = Asciz	scala/math/Ordering;
const #44 = class	#43;	//  scala/math/Ordering
const #45 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;;
const #46 = NameAndType	#41:#45;//  tryCompare:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
const #47 = InterfaceMethod	#44.#46;	//  scala/math/Ordering.tryCompare:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
const #48 = Asciz	x;
const #49 = Asciz	Ljava/lang/Object;;
const #50 = Asciz	y;
const #51 = Asciz	reverse;
const #52 = Asciz	()Lscala/math/PartialOrdering;;
const #53 = Asciz	()Lscala/math/Ordering;;
const #54 = NameAndType	#51:#53;//  reverse:()Lscala/math/Ordering;
const #55 = InterfaceMethod	#44.#54;	//  scala/math/Ordering.reverse:()Lscala/math/Ordering;
const #56 = Asciz	compare;
const #57 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)I;
const #58 = Asciz	scala/Function1;
const #59 = class	#58;	//  scala/Function1
const #60 = Asciz	apply;
const #61 = Asciz	(Ljava/lang/Object;)Ljava/lang/Object;;
const #62 = NameAndType	#60:#61;//  apply:(Ljava/lang/Object;)Ljava/lang/Object;
const #63 = InterfaceMethod	#59.#62;	//  scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
const #64 = NameAndType	#56:#57;//  compare:(Ljava/lang/Object;Ljava/lang/Object;)I
const #65 = InterfaceMethod	#44.#64;	//  scala/math/Ordering.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
const #66 = Asciz	(TU;TU;)I;
const #67 = Asciz	mkOrderingOps;
const #68 = Asciz	(Ljava/lang/Object;)Lscala/math/Ordering$Ops;;
const #69 = Asciz	(Lscala/math/Ordering;Ljava/lang/Object;)Lscala/math/Ordering$Ops;;
const #70 = NameAndType	#67:#69;//  mkOrderingOps:(Lscala/math/Ordering;Ljava/lang/Object;)Lscala/math/Ordering$Ops;
const #71 = Method	#32.#70;	//  scala/math/Ordering$class.mkOrderingOps:(Lscala/math/Ordering;Ljava/lang/Object;)Lscala/math/Ordering$Ops;
const #72 = Asciz	lhs;
const #73 = Asciz	on;
const #74 = Asciz	(Lscala/Function1;)Lscala/math/Ordering;;
const #75 = Asciz	(Lscala/math/Ordering;Lscala/Function1;)Lscala/math/Ordering;;
const #76 = NameAndType	#73:#75;//  on:(Lscala/math/Ordering;Lscala/Function1;)Lscala/math/Ordering;
const #77 = Method	#32.#76;	//  scala/math/Ordering$class.on:(Lscala/math/Ordering;Lscala/Function1;)Lscala/math/Ordering;
const #78 = Asciz	f;
const #79 = Asciz	(Lscala/math/Ordering;)Lscala/math/Ordering;;
const #80 = NameAndType	#51:#79;//  reverse:(Lscala/math/Ordering;)Lscala/math/Ordering;
const #81 = Method	#32.#80;	//  scala/math/Ordering$class.reverse:(Lscala/math/Ordering;)Lscala/math/Ordering;
const #82 = Asciz	min;
const #83 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;;
const #84 = Asciz	(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;;
const #85 = NameAndType	#82:#84;//  min:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
const #86 = Method	#32.#85;	//  scala/math/Ordering$class.min:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
const #87 = Asciz	max;
const #88 = NameAndType	#87:#84;//  max:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
const #89 = Method	#32.#88;	//  scala/math/Ordering$class.max:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
const #90 = Asciz	equiv;
const #91 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)Z;
const #92 = Asciz	(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z;
const #93 = NameAndType	#90:#92;//  equiv:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #94 = Method	#32.#93;	//  scala/math/Ordering$class.equiv:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #95 = Asciz	gt;
const #96 = NameAndType	#95:#92;//  gt:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #97 = Method	#32.#96;	//  scala/math/Ordering$class.gt:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #98 = Asciz	lt;
const #99 = NameAndType	#98:#92;//  lt:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #100 = Method	#32.#99;	//  scala/math/Ordering$class.lt:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #101 = Asciz	gteq;
const #102 = NameAndType	#101:#92;//  gteq:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #103 = Method	#32.#102;	//  scala/math/Ordering$class.gteq:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #104 = Asciz	lteq;
const #105 = NameAndType	#104:#92;//  lteq:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #106 = Method	#32.#105;	//  scala/math/Ordering$class.lteq:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #107 = Asciz	(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;;
const #108 = NameAndType	#41:#107;//  tryCompare:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
const #109 = Method	#32.#108;	//  scala/math/Ordering$class.tryCompare:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
const #110 = Asciz	Ljava/lang/Object;Lscala/math/Ordering<TU;>;;
const #111 = Asciz	Scala;
const #112 = Asciz	InnerClasses;
const #113 = Asciz	scala/math/Ordering$Ops;
const #114 = class	#113;	//  scala/math/Ordering$Ops
const #115 = Asciz	Ops;
const #116 = Asciz	$anon$2;

{
public scala.math.Ordering$$anon$2(scala.math.Ordering, scala.Function1);
  Code:
   Stack=2, Locals=3, Args_size=3
   0:	aload_1
   1:	ifnonnull	12
   4:	new	#12; //class java/lang/NullPointerException
   7:	dup
   8:	invokespecial	#15; //Method java/lang/NullPointerException."<init>":()V
   11:	athrow
   12:	aload_0
   13:	aload_1
   14:	putfield	#19; //Field $outer:Lscala/math/Ordering;
   17:	aload_0
   18:	aload_2
   19:	putfield	#21; //Field f$1:Lscala/Function1;
   22:	aload_0
   23:	invokespecial	#24; //Method java/lang/Object."<init>":()V
   26:	aload_0
   27:	invokestatic	#30; //Method scala/math/PartialOrdering$class.$init$:(Lscala/math/PartialOrdering;)V
   30:	aload_0
   31:	invokestatic	#35; //Method scala/math/Ordering$class.$init$:(Lscala/math/Ordering;)V
   34:	return
  LineNumberTable: 
   line 96: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      35      0    this       Lscala/math/Ordering$$anon$2;
   0      35      1    $outer       Lscala/math/Ordering;

  Signature: length = 0x2
   00 27 

public scala.Option tryCompare(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokeinterface	#47,  3; //InterfaceMethod scala/math/Ordering.tryCompare:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
   8:	areturn
  LineNumberTable: 
   line 96: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/math/Ordering$$anon$2;
   0      9      1    x       Ljava/lang/Object;
   0      9      2    y       Ljava/lang/Object;


public scala.math.PartialOrdering reverse();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokeinterface	#55,  1; //InterfaceMethod scala/math/Ordering.reverse:()Lscala/math/Ordering;
   6:	areturn
  LineNumberTable: 
   line 96: 0


public int compare(java.lang.Object, java.lang.Object);
  Code:
   Stack=4, Locals=3, Args_size=3
   0:	aload_0
   1:	getfield	#19; //Field $outer:Lscala/math/Ordering;
   4:	aload_0
   5:	getfield	#21; //Field f$1:Lscala/Function1;
   8:	aload_1
   9:	invokeinterface	#63,  2; //InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
   14:	aload_0
   15:	getfield	#21; //Field f$1:Lscala/Function1;
   18:	aload_2
   19:	invokeinterface	#63,  2; //InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
   24:	invokeinterface	#65,  3; //InterfaceMethod scala/math/Ordering.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
   29:	ireturn
  LineNumberTable: 
   line 97: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      30      0    this       Lscala/math/Ordering$$anon$2;
   0      30      1    x       Ljava/lang/Object;
   0      30      2    y       Ljava/lang/Object;

  Signature: length = 0x2
   00 42 

public scala.math.Ordering$Ops mkOrderingOps(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#71; //Method scala/math/Ordering$class.mkOrderingOps:(Lscala/math/Ordering;Ljava/lang/Object;)Lscala/math/Ordering$Ops;
   5:	areturn
  LineNumberTable: 
   line 96: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/math/Ordering$$anon$2;
   0      6      1    lhs       Ljava/lang/Object;

  Signature: length = 0x2
   00 44 

public scala.math.Ordering on(scala.Function1);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#77; //Method scala/math/Ordering$class.on:(Lscala/math/Ordering;Lscala/Function1;)Lscala/math/Ordering;
   5:	areturn
  LineNumberTable: 
   line 96: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/math/Ordering$$anon$2;
   0      6      1    f       Lscala/Function1;


public scala.math.Ordering reverse();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#81; //Method scala/math/Ordering$class.reverse:(Lscala/math/Ordering;)Lscala/math/Ordering;
   4:	areturn
  LineNumberTable: 
   line 96: 0


public java.lang.Object min(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#86; //Method scala/math/Ordering$class.min:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   6:	areturn
  LineNumberTable: 
   line 96: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/math/Ordering$$anon$2;
   0      7      1    x       Ljava/lang/Object;
   0      7      2    y       Ljava/lang/Object;


public java.lang.Object max(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#89; //Method scala/math/Ordering$class.max:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   6:	areturn
  LineNumberTable: 
   line 96: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/math/Ordering$$anon$2;
   0      7      1    x       Ljava/lang/Object;
   0      7      2    y       Ljava/lang/Object;


public boolean equiv(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#94; //Method scala/math/Ordering$class.equiv:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
   6:	ireturn
  LineNumberTable: 
   line 96: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/math/Ordering$$anon$2;
   0      7      1    x       Ljava/lang/Object;
   0      7      2    y       Ljava/lang/Object;


public boolean gt(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#97; //Method scala/math/Ordering$class.gt:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
   6:	ireturn
  LineNumberTable: 
   line 96: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/math/Ordering$$anon$2;
   0      7      1    x       Ljava/lang/Object;
   0      7      2    y       Ljava/lang/Object;


public boolean lt(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#100; //Method scala/math/Ordering$class.lt:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
   6:	ireturn
  LineNumberTable: 
   line 96: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/math/Ordering$$anon$2;
   0      7      1    x       Ljava/lang/Object;
   0      7      2    y       Ljava/lang/Object;


public boolean gteq(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#103; //Method scala/math/Ordering$class.gteq:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
   6:	ireturn
  LineNumberTable: 
   line 96: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/math/Ordering$$anon$2;
   0      7      1    x       Ljava/lang/Object;
   0      7      2    y       Ljava/lang/Object;


public boolean lteq(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#106; //Method scala/math/Ordering$class.lteq:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
   6:	ireturn
  LineNumberTable: 
   line 96: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/math/Ordering$$anon$2;
   0      7      1    x       Ljava/lang/Object;
   0      7      2    y       Ljava/lang/Object;


public scala.Some tryCompare(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#109; //Method scala/math/Ordering$class.tryCompare:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
   6:	areturn
  LineNumberTable: 
   line 96: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/math/Ordering$$anon$2;
   0      7      1    x       Ljava/lang/Object;
   0      7      2    y       Ljava/lang/Object;


}

