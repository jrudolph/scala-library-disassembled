Compiled from "Numeric.scala"
public abstract class scala.math.Numeric$DoubleAsIfIntegral$class extends java.lang.Object
  SourceFile: "Numeric.scala"
  Scala: length = 0x
   
  InnerClass: 
   public abstract DoubleAsIfIntegral=class scala/math/Numeric$DoubleAsIfIntegral of class scala/math/Numeric
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	Numeric.scala;
Asciz	quot;
Asciz	(Lscala/math/Numeric$DoubleAsIfIntegral;DD)D;
Asciz	Code;
Asciz	scala/math/BigDecimal$;
class	scala/math/BigDecimal$
Asciz	MODULE$;
Asciz	Lscala/math/BigDecimal$;;
NameAndType	MODULE$:Lscala/math/BigDecimal$;
Field	scala/math/BigDecimal$.MODULE$:Lscala/math/BigDecimal$;
Asciz	LineNumberTable;
Asciz	apply;
Asciz	(D)Lscala/math/BigDecimal;;
NameAndType	apply:(D)Lscala/math/BigDecimal;
Method	scala/math/BigDecimal$.apply:(D)Lscala/math/BigDecimal;
Asciz	scala/math/BigDecimal;
class	scala/math/BigDecimal
Asciz	$div;
Asciz	(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;;
NameAndType	$div:(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
Method	scala/math/BigDecimal.$div:(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
Asciz	doubleValue;
Asciz	()D;
NameAndType	doubleValue:()D
Method	scala/math/BigDecimal.doubleValue:()D
Asciz	$this;
Asciz	Lscala/math/Numeric$DoubleAsIfIntegral;;
Asciz	x;
Asciz	D;
Asciz	y;
Asciz	LocalVariableTable;
Asciz	rem;
Asciz	remainder;
NameAndType	remainder:(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
Method	scala/math/BigDecimal.remainder:(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
Asciz	$init$;
Asciz	(Lscala/math/Numeric$DoubleAsIfIntegral;)V;
Asciz	Scala;
Asciz	InnerClasses;
Asciz	scala/math/Numeric$DoubleAsIfIntegral;
class	scala/math/Numeric$DoubleAsIfIntegral
Asciz	scala/math/Numeric;
class	scala/math/Numeric
Asciz	DoubleAsIfIntegral;
Asciz	scala/math/Numeric$DoubleAsIfIntegral$class;
class	scala/math/Numeric$DoubleAsIfIntegral$class
Asciz	java/lang/Object;
class	java/lang/Object

{
public static double quot(scala.math.Numeric$DoubleAsIfIntegral, double, double);
  Signature: (Lscala/math/Numeric$DoubleAsIfIntegral;DD)D
  Code:
   Stack=4, Locals=5, Args_size=3
	getstatic	Field scala/math/BigDecimal$.MODULE$:Lscala/math/BigDecimal$;
	dload_1
	invokevirtual	Method scala/math/BigDecimal$.apply:(D)Lscala/math/BigDecimal;
	getstatic	Field scala/math/BigDecimal$.MODULE$:Lscala/math/BigDecimal$;
	dload_3
	invokevirtual	Method scala/math/BigDecimal$.apply:(D)Lscala/math/BigDecimal;
	invokevirtual	Method scala/math/BigDecimal.$div:(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
	invokevirtual	Method scala/math/BigDecimal.doubleValue:()D
	dreturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      21      0    $this       Lscala/math/Numeric$DoubleAsIfIntegral;
   0      21      1    x       D
   0      21      3    y       D


public static double rem(scala.math.Numeric$DoubleAsIfIntegral, double, double);
  Signature: (Lscala/math/Numeric$DoubleAsIfIntegral;DD)D
  Code:
   Stack=4, Locals=5, Args_size=3
	getstatic	Field scala/math/BigDecimal$.MODULE$:Lscala/math/BigDecimal$;
	dload_1
	invokevirtual	Method scala/math/BigDecimal$.apply:(D)Lscala/math/BigDecimal;
	getstatic	Field scala/math/BigDecimal$.MODULE$:Lscala/math/BigDecimal$;
	dload_3
	invokevirtual	Method scala/math/BigDecimal$.apply:(D)Lscala/math/BigDecimal;
	invokevirtual	Method scala/math/BigDecimal.remainder:(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
	invokevirtual	Method scala/math/BigDecimal.doubleValue:()D
	dreturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      21      0    $this       Lscala/math/Numeric$DoubleAsIfIntegral;
   0      21      1    x       D
   0      21      3    y       D


public static void $init$(scala.math.Numeric$DoubleAsIfIntegral);
  Signature: (Lscala/math/Numeric$DoubleAsIfIntegral;)V
  Code:
   Stack=0, Locals=1, Args_size=1
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      1      0    $this       Lscala/math/Numeric$DoubleAsIfIntegral;


}

