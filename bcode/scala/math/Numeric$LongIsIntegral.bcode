Compiled from "Numeric.scala"
public interface scala.math.Numeric$LongIsIntegral extends scala.math.Integral,scala.ScalaObject
  SourceFile: "Numeric.scala"
  Scala: length = 0x
   
  Signature: length = 0x2
   00 15 
  InnerClass: 
   public abstract LongIsIntegral=class scala/math/Numeric$LongIsIntegral of class scala/math/Numeric
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	Numeric.scala;
Asciz	plus;
Asciz	(JJ)J;
Asciz	minus;
Asciz	times;
Asciz	quot;
Asciz	rem;
Asciz	negate;
Asciz	(J)J;
Asciz	fromInt;
Asciz	(I)J;
Asciz	toInt;
Asciz	(J)I;
Asciz	toLong;
Asciz	toFloat;
Asciz	(J)F;
Asciz	toDouble;
Asciz	(J)D;
Asciz	Scala;
Asciz	Ljava/lang/Object;Lscala/math/Integral<Ljava/lang/Long;>;Lscala/ScalaObject;;
Asciz	Signature;
Asciz	InnerClasses;
Asciz	scala/math/Numeric$LongIsIntegral;
class	scala/math/Numeric$LongIsIntegral
Asciz	scala/math/Numeric;
class	scala/math/Numeric
Asciz	LongIsIntegral;
Asciz	java/lang/Object;
class	java/lang/Object
Asciz	scala/math/Integral;
class	scala/math/Integral
Asciz	scala/ScalaObject;
class	scala/ScalaObject

{
public abstract long plus(long, long);
  Signature: (JJ)J

public abstract long minus(long, long);
  Signature: (JJ)J

public abstract long times(long, long);
  Signature: (JJ)J

public abstract long quot(long, long);
  Signature: (JJ)J

public abstract long rem(long, long);
  Signature: (JJ)J

public abstract long negate(long);
  Signature: (J)J

public abstract long fromInt(int);
  Signature: (I)J

public abstract int toInt(long);
  Signature: (J)I

public abstract long toLong(long);
  Signature: (J)J

public abstract float toFloat(long);
  Signature: (J)F

public abstract double toDouble(long);
  Signature: (J)D

}

