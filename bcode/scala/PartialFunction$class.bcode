Compiled from "PartialFunction.scala"
public abstract class scala.PartialFunction$class extends java.lang.Object
  SourceFile: "PartialFunction.scala"
  Scala: length = 0x
   
  InnerClass: 
   public final $anon$2=class scala/PartialFunction$$anon$2 of class scala/PartialFunction
   public final $anon$1=class scala/PartialFunction$$anon$1 of class scala/PartialFunction
   public final $anonfun$lift$1=class scala/PartialFunction$$anonfun$lift$1 of class scala/PartialFunction
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	PartialFunction.scala;
Asciz	orElse;
Asciz	(Lscala/PartialFunction;Lscala/PartialFunction;)Lscala/PartialFunction;;
Asciz	Code;
Asciz	scala/PartialFunction$$anon$1;
class	scala/PartialFunction$$anon$1
Asciz	LineNumberTable;
Asciz	<init>;
Asciz	(Lscala/PartialFunction;Lscala/PartialFunction;)V;
NameAndType	"<init>":(Lscala/PartialFunction;Lscala/PartialFunction;)V
Method	scala/PartialFunction$$anon$1."<init>":(Lscala/PartialFunction;Lscala/PartialFunction;)V
Asciz	$this;
Asciz	Lscala/PartialFunction;;
Asciz	that$1;
Asciz	LocalVariableTable;
Asciz	andThen;
Asciz	(Lscala/PartialFunction;Lscala/Function1;)Lscala/PartialFunction;;
Asciz	scala/PartialFunction$$anon$2;
class	scala/PartialFunction$$anon$2
Asciz	(Lscala/PartialFunction;Lscala/Function1;)V;
NameAndType	"<init>":(Lscala/PartialFunction;Lscala/Function1;)V
Method	scala/PartialFunction$$anon$2."<init>":(Lscala/PartialFunction;Lscala/Function1;)V
Asciz	k$1;
Asciz	Lscala/Function1;;
Asciz	lift;
Asciz	(Lscala/PartialFunction;)Lscala/Function1;;
Asciz	scala/PartialFunction$$anonfun$lift$1;
class	scala/PartialFunction$$anonfun$lift$1
Asciz	(Lscala/PartialFunction;)V;
NameAndType	"<init>":(Lscala/PartialFunction;)V
Method	scala/PartialFunction$$anonfun$lift$1."<init>":(Lscala/PartialFunction;)V
Asciz	$init$;
Asciz	Scala;
Asciz	InnerClasses;
Asciz	scala/PartialFunction;
class	scala/PartialFunction
Asciz	$anon$2;
Asciz	$anon$1;
Asciz	$anonfun$lift$1;
Asciz	scala/PartialFunction$class;
class	scala/PartialFunction$class
Asciz	java/lang/Object;
class	java/lang/Object

{
public static scala.PartialFunction orElse(scala.PartialFunction, scala.PartialFunction);
  Signature: (Lscala/PartialFunction;Lscala/PartialFunction;)Lscala/PartialFunction;
  Code:
   Stack=4, Locals=2, Args_size=2
	new	class scala/PartialFunction$$anon$1
	dup
	aload_0
	aload_1
	invokespecial	Method scala/PartialFunction$$anon$1."<init>":(Lscala/PartialFunction;Lscala/PartialFunction;)V
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    $this       Lscala/PartialFunction;
   0      10      1    that$1       Lscala/PartialFunction;


public static scala.PartialFunction andThen(scala.PartialFunction, scala.Function1);
  Signature: (Lscala/PartialFunction;Lscala/Function1;)Lscala/PartialFunction;
  Code:
   Stack=4, Locals=2, Args_size=2
	new	class scala/PartialFunction$$anon$2
	dup
	aload_0
	aload_1
	invokespecial	Method scala/PartialFunction$$anon$2."<init>":(Lscala/PartialFunction;Lscala/Function1;)V
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    $this       Lscala/PartialFunction;
   0      10      1    k$1       Lscala/Function1;


public static scala.Function1 lift(scala.PartialFunction);
  Signature: (Lscala/PartialFunction;)Lscala/Function1;
  Code:
   Stack=3, Locals=1, Args_size=1
	new	class scala/PartialFunction$$anonfun$lift$1
	dup
	aload_0
	invokespecial	Method scala/PartialFunction$$anonfun$lift$1."<init>":(Lscala/PartialFunction;)V
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    $this       Lscala/PartialFunction;


public static void $init$(scala.PartialFunction);
  Signature: (Lscala/PartialFunction;)V
  Code:
   Stack=0, Locals=1, Args_size=1
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      1      0    $this       Lscala/PartialFunction;


}

