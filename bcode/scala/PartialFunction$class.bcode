Compiled from "PartialFunction.scala"
public abstract class scala.PartialFunction$class extends java.lang.Object
  SourceFile: "PartialFunction.scala"
  Scala: length = 0x
   
  InnerClass: 
   public final #38= #29 of #37; //$anon$1=class scala/PartialFunction$$anon$1 of class scala/PartialFunction
   public final #39= #20 of #37; //$anon$2=class scala/PartialFunction$$anon$2 of class scala/PartialFunction
   public final #40= #13 of #37; //$anonfun$lift$1=class scala/PartialFunction$$anonfun$lift$1 of class scala/PartialFunction
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	PartialFunction.scala;
const #3 = Asciz	$init$;
const #4 = Asciz	(Lscala/PartialFunction;)V;
const #5 = Asciz	Code;
const #6 = Asciz	LineNumberTable;
const #7 = Asciz	$this;
const #8 = Asciz	Lscala/PartialFunction;;
const #9 = Asciz	LocalVariableTable;
const #10 = Asciz	lift;
const #11 = Asciz	(Lscala/PartialFunction;)Lscala/Function1;;
const #12 = Asciz	scala/PartialFunction$$anonfun$lift$1;
const #13 = class	#12;	//  scala/PartialFunction$$anonfun$lift$1
const #14 = Asciz	<init>;
const #15 = NameAndType	#14:#4;//  "<init>":(Lscala/PartialFunction;)V
const #16 = Method	#13.#15;	//  scala/PartialFunction$$anonfun$lift$1."<init>":(Lscala/PartialFunction;)V
const #17 = Asciz	andThen;
const #18 = Asciz	(Lscala/PartialFunction;Lscala/Function1;)Lscala/PartialFunction;;
const #19 = Asciz	scala/PartialFunction$$anon$2;
const #20 = class	#19;	//  scala/PartialFunction$$anon$2
const #21 = Asciz	(Lscala/PartialFunction;Lscala/Function1;)V;
const #22 = NameAndType	#14:#21;//  "<init>":(Lscala/PartialFunction;Lscala/Function1;)V
const #23 = Method	#20.#22;	//  scala/PartialFunction$$anon$2."<init>":(Lscala/PartialFunction;Lscala/Function1;)V
const #24 = Asciz	k$1;
const #25 = Asciz	Lscala/Function1;;
const #26 = Asciz	orElse;
const #27 = Asciz	(Lscala/PartialFunction;Lscala/PartialFunction;)Lscala/PartialFunction;;
const #28 = Asciz	scala/PartialFunction$$anon$1;
const #29 = class	#28;	//  scala/PartialFunction$$anon$1
const #30 = Asciz	(Lscala/PartialFunction;Lscala/PartialFunction;)V;
const #31 = NameAndType	#14:#30;//  "<init>":(Lscala/PartialFunction;Lscala/PartialFunction;)V
const #32 = Method	#29.#31;	//  scala/PartialFunction$$anon$1."<init>":(Lscala/PartialFunction;Lscala/PartialFunction;)V
const #33 = Asciz	that$1;
const #34 = Asciz	Scala;
const #35 = Asciz	InnerClasses;
const #36 = Asciz	scala/PartialFunction;
const #37 = class	#36;	//  scala/PartialFunction
const #38 = Asciz	$anon$1;
const #39 = Asciz	$anon$2;
const #40 = Asciz	$anonfun$lift$1;
const #41 = Asciz	scala/PartialFunction$class;
const #42 = class	#41;	//  scala/PartialFunction$class
const #43 = Asciz	java/lang/Object;
const #44 = class	#43;	//  java/lang/Object

{
public static void $init$(scala.PartialFunction);
  Code:
   Stack=0, Locals=1, Args_size=1
   0:	return
  LineNumberTable: 
   line 22: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      1      0    $this       Lscala/PartialFunction;


public static scala.Function1 lift(scala.PartialFunction);
  Code:
   Stack=3, Locals=1, Args_size=1
   0:	new	#13; //class scala/PartialFunction$$anonfun$lift$1
   3:	dup
   4:	aload_0
   5:	invokespecial	#16; //Method scala/PartialFunction$$anonfun$lift$1."<init>":(Lscala/PartialFunction;)V
   8:	areturn
  LineNumberTable: 
   line 45: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    $this       Lscala/PartialFunction;


public static scala.PartialFunction andThen(scala.PartialFunction, scala.Function1);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#20; //class scala/PartialFunction$$anon$2
   3:	dup
   4:	aload_0
   5:	aload_1
   6:	invokespecial	#23; //Method scala/PartialFunction$$anon$2."<init>":(Lscala/PartialFunction;Lscala/Function1;)V
   9:	areturn
  LineNumberTable: 
   line 40: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    $this       Lscala/PartialFunction;
   0      10      1    k$1       Lscala/Function1;


public static scala.PartialFunction orElse(scala.PartialFunction, scala.PartialFunction);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#29; //class scala/PartialFunction$$anon$1
   3:	dup
   4:	aload_0
   5:	aload_1
   6:	invokespecial	#32; //Method scala/PartialFunction$$anon$1."<init>":(Lscala/PartialFunction;Lscala/PartialFunction;)V
   9:	areturn
  LineNumberTable: 
   line 32: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    $this       Lscala/PartialFunction;
   0      10      1    that$1       Lscala/PartialFunction;


}

