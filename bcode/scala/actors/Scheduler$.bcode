Compiled from "Scheduler.scala"
public final class scala.actors.Scheduler$ extends java.lang.Object implements scala.actors.scheduler.DelegatingScheduler,scala.ScalaObject
  SourceFile: "Scheduler.scala"
  Scala: length = 0x
   
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Scheduler.scala;
const #3 = Asciz	Scala;
const #4 = Asciz	MODULE$;
const #5 = Asciz	Lscala/actors/Scheduler$;;
const #6 = Asciz	<clinit>;
const #7 = Asciz	()V;
const #8 = Asciz	Code;
const #9 = Asciz	scala/actors/Scheduler$;
const #10 = class	#9;	//  scala/actors/Scheduler$
const #11 = Asciz	<init>;
const #12 = NameAndType	#11:#7;//  "<init>":()V
const #13 = Method	#10.#12;	//  scala/actors/Scheduler$."<init>":()V
const #14 = Asciz	sched;
const #15 = Asciz	Lscala/actors/IScheduler;;
const #16 = Asciz	LineNumberTable;
const #17 = Asciz	java/lang/Object;
const #18 = class	#17;	//  java/lang/Object
const #19 = Method	#18.#12;	//  java/lang/Object."<init>":()V
const #20 = NameAndType	#4:#5;//  MODULE$:Lscala/actors/Scheduler$;
const #21 = Field	#10.#20;	//  scala/actors/Scheduler$.MODULE$:Lscala/actors/Scheduler$;
const #22 = Asciz	scala/actors/IScheduler$class;
const #23 = class	#22;	//  scala/actors/IScheduler$class
const #24 = Asciz	$init$;
const #25 = Asciz	(Lscala/actors/IScheduler;)V;
const #26 = NameAndType	#24:#25;//  $init$:(Lscala/actors/IScheduler;)V
const #27 = Method	#23.#26;	//  scala/actors/IScheduler$class.$init$:(Lscala/actors/IScheduler;)V
const #28 = Asciz	scala/actors/scheduler/DelegatingScheduler$class;
const #29 = class	#28;	//  scala/actors/scheduler/DelegatingScheduler$class
const #30 = Asciz	(Lscala/actors/scheduler/DelegatingScheduler;)V;
const #31 = NameAndType	#24:#30;//  $init$:(Lscala/actors/scheduler/DelegatingScheduler;)V
const #32 = Method	#29.#31;	//  scala/actors/scheduler/DelegatingScheduler$class.$init$:(Lscala/actors/scheduler/DelegatingScheduler;)V
const #33 = Asciz	scala/actors/Debug$;
const #34 = class	#33;	//  scala/actors/Debug$
const #35 = Asciz	Lscala/actors/Debug$;;
const #36 = NameAndType	#4:#35;//  MODULE$:Lscala/actors/Debug$;
const #37 = Field	#34.#36;	//  scala/actors/Debug$.MODULE$:Lscala/actors/Debug$;
const #38 = Asciz	scala/collection/mutable/StringBuilder;
const #39 = class	#38;	//  scala/collection/mutable/StringBuilder
const #40 = Method	#39.#12;	//  scala/collection/mutable/StringBuilder."<init>":()V
const #41 = Asciz	initializing ;
const #42 = String	#41;	//  initializing 
const #43 = Asciz	append;
const #44 = Asciz	(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;;
const #45 = NameAndType	#43:#44;//  append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
const #46 = Method	#39.#45;	//  scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
const #47 = Asciz	...;
const #48 = String	#47;	//  ...
const #49 = Asciz	toString;
const #50 = Asciz	()Ljava/lang/String;;
const #51 = NameAndType	#49:#50;//  toString:()Ljava/lang/String;
const #52 = Method	#39.#51;	//  scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
const #53 = Asciz	info;
const #54 = Asciz	(Ljava/lang/String;)V;
const #55 = NameAndType	#53:#54;//  info:(Ljava/lang/String;)V
const #56 = Method	#34.#55;	//  scala/actors/Debug$.info:(Ljava/lang/String;)V
const #57 = Asciz	restart;
const #58 = Asciz	scala/actors/scheduler/DelegatingScheduler;
const #59 = class	#58;	//  scala/actors/scheduler/DelegatingScheduler
const #60 = Asciz	()Lscala/actors/IScheduler;;
const #61 = NameAndType	#14:#60;//  sched:()Lscala/actors/IScheduler;
const #62 = InterfaceMethod	#59.#61;	//  scala/actors/scheduler/DelegatingScheduler.sched:()Lscala/actors/IScheduler;
const #63 = Asciz	scala/actors/scheduler/ForkJoinScheduler;
const #64 = class	#63;	//  scala/actors/scheduler/ForkJoinScheduler
const #65 = NameAndType	#57:#7;//  restart:()V
const #66 = Method	#64.#65;	//  scala/actors/scheduler/ForkJoinScheduler.restart:()V
const #67 = Asciz	scala/Predef$;
const #68 = class	#67;	//  scala/Predef$
const #69 = Asciz	Lscala/Predef$;;
const #70 = NameAndType	#4:#69;//  MODULE$:Lscala/Predef$;
const #71 = Field	#68.#70;	//  scala/Predef$.MODULE$:Lscala/Predef$;
const #72 = Asciz	scheduler does not implement restart;
const #73 = String	#72;	//  scheduler does not implement restart
const #74 = Asciz	error;
const #75 = Asciz	(Ljava/lang/String;)Lscala/runtime/Nothing$;;
const #76 = NameAndType	#74:#75;//  error:(Ljava/lang/String;)Lscala/runtime/Nothing$;
const #77 = Method	#68.#76;	//  scala/Predef$.error:(Ljava/lang/String;)Lscala/runtime/Nothing$;
const #78 = Asciz	snapshot;
const #79 = NameAndType	#78:#7;//  snapshot:()V
const #80 = Method	#64.#79;	//  scala/actors/scheduler/ForkJoinScheduler.snapshot:()V
const #81 = Asciz	scheduler does not implement snapshot;
const #82 = String	#81;	//  scheduler does not implement snapshot
const #83 = Asciz	makeNewScheduler;
const #84 = Asciz	java/util/concurrent/LinkedBlockingQueue;
const #85 = class	#84;	//  java/util/concurrent/LinkedBlockingQueue
const #86 = int	100000;
const #87 = Asciz	(I)V;
const #88 = NameAndType	#11:#87;//  "<init>":(I)V
const #89 = Method	#85.#88;	//  java/util/concurrent/LinkedBlockingQueue."<init>":(I)V
const #90 = Asciz	java/util/concurrent/ThreadPoolExecutor;
const #91 = class	#90;	//  java/util/concurrent/ThreadPoolExecutor
const #92 = Asciz	scala/actors/scheduler/ThreadPoolConfig$;
const #93 = class	#92;	//  scala/actors/scheduler/ThreadPoolConfig$
const #94 = Asciz	Lscala/actors/scheduler/ThreadPoolConfig$;;
const #95 = NameAndType	#4:#94;//  MODULE$:Lscala/actors/scheduler/ThreadPoolConfig$;
const #96 = Field	#93.#95;	//  scala/actors/scheduler/ThreadPoolConfig$.MODULE$:Lscala/actors/scheduler/ThreadPoolConfig$;
const #97 = Asciz	corePoolSize;
const #98 = Asciz	()I;
const #99 = NameAndType	#97:#98;//  corePoolSize:()I
const #100 = Method	#93.#99;	//  scala/actors/scheduler/ThreadPoolConfig$.corePoolSize:()I
const #101 = Asciz	maxPoolSize;
const #102 = NameAndType	#101:#98;//  maxPoolSize:()I
const #103 = Method	#93.#102;	//  scala/actors/scheduler/ThreadPoolConfig$.maxPoolSize:()I
const #104 = long	50l;
const #106 = Asciz	java/util/concurrent/TimeUnit;
const #107 = class	#106;	//  java/util/concurrent/TimeUnit
const #108 = Asciz	MILLISECONDS;
const #109 = Asciz	Ljava/util/concurrent/TimeUnit;;
const #110 = NameAndType	#108:#109;//  MILLISECONDS:Ljava/util/concurrent/TimeUnit;
const #111 = Field	#107.#110;	//  java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
const #112 = Asciz	(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;)V;
const #113 = NameAndType	#11:#112;//  "<init>":(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;)V
const #114 = Method	#91.#113;	//  java/util/concurrent/ThreadPoolExecutor."<init>":(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;)V
const #115 = Asciz	scala/actors/scheduler/ThreadPoolScheduler;
const #116 = class	#115;	//  scala/actors/scheduler/ThreadPoolScheduler
const #117 = Asciz	(Ljava/util/concurrent/ThreadPoolExecutor;Z)V;
const #118 = NameAndType	#11:#117;//  "<init>":(Ljava/util/concurrent/ThreadPoolExecutor;Z)V
const #119 = Method	#116.#118;	//  scala/actors/scheduler/ThreadPoolScheduler."<init>":(Ljava/util/concurrent/ThreadPoolExecutor;Z)V
const #120 = Asciz	any2stringadd;
const #121 = Asciz	(Ljava/lang/Object;)Lscala/runtime/StringAdd;;
const #122 = NameAndType	#120:#121;//  any2stringadd:(Ljava/lang/Object;)Lscala/runtime/StringAdd;
const #123 = Method	#68.#122;	//  scala/Predef$.any2stringadd:(Ljava/lang/Object;)Lscala/runtime/StringAdd;
const #124 = Asciz	: starting new ;
const #125 = String	#124;	//  : starting new 
const #126 = Asciz	scala/runtime/StringAdd;
const #127 = class	#126;	//  scala/runtime/StringAdd
const #128 = Asciz	$plus;
const #129 = Asciz	(Ljava/lang/String;)Ljava/lang/String;;
const #130 = NameAndType	#128:#129;//  $plus:(Ljava/lang/String;)Ljava/lang/String;
const #131 = Method	#127.#130;	//  scala/runtime/StringAdd.$plus:(Ljava/lang/String;)Ljava/lang/String;
const #132 = Asciz	 [;
const #133 = String	#132;	//   [
const #134 = Asciz	getClass;
const #135 = Asciz	()Ljava/lang/Class;;
const #136 = NameAndType	#134:#135;//  getClass:()Ljava/lang/Class;
const #137 = Method	#116.#136;	//  scala/actors/scheduler/ThreadPoolScheduler.getClass:()Ljava/lang/Class;
const #138 = Asciz	];
const #139 = String	#138;	//  ]
const #140 = Asciz	start;
const #141 = NameAndType	#140:#7;//  start:()V
const #142 = Method	#116.#141;	//  scala/actors/scheduler/ThreadPoolScheduler.start:()V
const #143 = Asciz	this;
const #144 = Asciz	workQueue;
const #145 = Asciz	Ljava/util/concurrent/LinkedBlockingQueue;;
const #146 = Asciz	threadPool;
const #147 = Asciz	Ljava/util/concurrent/ThreadPoolExecutor;;
const #148 = Asciz	s;
const #149 = Asciz	Lscala/actors/scheduler/ThreadPoolScheduler;;
const #150 = Asciz	LocalVariableTable;
const #151 = Asciz	managedBlock;
const #152 = Asciz	(Lscala/actors/ManagedBlocker;)V;
const #153 = Asciz	(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/ManagedBlocker;)V;
const #154 = NameAndType	#151:#153;//  managedBlock:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/ManagedBlocker;)V
const #155 = Method	#29.#154;	//  scala/actors/scheduler/DelegatingScheduler$class.managedBlock:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/ManagedBlocker;)V
const #156 = Asciz	blocker;
const #157 = Asciz	Lscala/actors/ManagedBlocker;;
const #158 = Asciz	onTerminate;
const #159 = Asciz	(Lscala/actors/Reactor;Lscala/Function0;)V;
const #160 = Asciz	(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/Reactor;Lscala/Function0;)V;
const #161 = NameAndType	#158:#160;//  onTerminate:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/Reactor;Lscala/Function0;)V
const #162 = Method	#29.#161;	//  scala/actors/scheduler/DelegatingScheduler$class.onTerminate:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/Reactor;Lscala/Function0;)V
const #163 = Asciz	actor;
const #164 = Asciz	Lscala/actors/Reactor;;
const #165 = Asciz	f;
const #166 = Asciz	Lscala/Function0;;
const #167 = Asciz	terminated;
const #168 = Asciz	(Lscala/actors/Reactor;)V;
const #169 = Asciz	(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/Reactor;)V;
const #170 = NameAndType	#167:#169;//  terminated:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/Reactor;)V
const #171 = Method	#29.#170;	//  scala/actors/scheduler/DelegatingScheduler$class.terminated:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/Reactor;)V
const #172 = Asciz	newActor;
const #173 = NameAndType	#172:#169;//  newActor:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/Reactor;)V
const #174 = Method	#29.#173;	//  scala/actors/scheduler/DelegatingScheduler$class.newActor:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/Reactor;)V
const #175 = Asciz	shutdown;
const #176 = NameAndType	#175:#30;//  shutdown:(Lscala/actors/scheduler/DelegatingScheduler;)V
const #177 = Method	#29.#176;	//  scala/actors/scheduler/DelegatingScheduler$class.shutdown:(Lscala/actors/scheduler/DelegatingScheduler;)V
const #178 = Asciz	executeFromActor;
const #179 = Asciz	(Ljava/lang/Runnable;)V;
const #180 = Asciz	(Lscala/actors/scheduler/DelegatingScheduler;Ljava/lang/Runnable;)V;
const #181 = NameAndType	#178:#180;//  executeFromActor:(Lscala/actors/scheduler/DelegatingScheduler;Ljava/lang/Runnable;)V
const #182 = Method	#29.#181;	//  scala/actors/scheduler/DelegatingScheduler$class.executeFromActor:(Lscala/actors/scheduler/DelegatingScheduler;Ljava/lang/Runnable;)V
const #183 = Asciz	task;
const #184 = Asciz	Ljava/lang/Runnable;;
const #185 = Asciz	execute;
const #186 = NameAndType	#185:#180;//  execute:(Lscala/actors/scheduler/DelegatingScheduler;Ljava/lang/Runnable;)V
const #187 = Method	#29.#186;	//  scala/actors/scheduler/DelegatingScheduler$class.execute:(Lscala/actors/scheduler/DelegatingScheduler;Ljava/lang/Runnable;)V
const #188 = Asciz	(Lscala/Function0;)V;
const #189 = Asciz	(Lscala/actors/scheduler/DelegatingScheduler;Lscala/Function0;)V;
const #190 = NameAndType	#185:#189;//  execute:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/Function0;)V
const #191 = Method	#29.#190;	//  scala/actors/scheduler/DelegatingScheduler$class.execute:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/Function0;)V
const #192 = Asciz	fun;
const #193 = Asciz	isActive;
const #194 = Asciz	()Z;
const #195 = Asciz	(Lscala/actors/scheduler/DelegatingScheduler;)Z;
const #196 = NameAndType	#193:#195;//  isActive:(Lscala/actors/scheduler/DelegatingScheduler;)Z
const #197 = Method	#29.#196;	//  scala/actors/scheduler/DelegatingScheduler$class.isActive:(Lscala/actors/scheduler/DelegatingScheduler;)Z
const #198 = Asciz	impl_$eq;
const #199 = Asciz	(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/IScheduler;)V;
const #200 = NameAndType	#198:#199;//  impl_$eq:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/IScheduler;)V
const #201 = Method	#29.#200;	//  scala/actors/scheduler/DelegatingScheduler$class.impl_$eq:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/IScheduler;)V
const #202 = Asciz	scheduler;
const #203 = Asciz	impl;
const #204 = Asciz	(Lscala/actors/scheduler/DelegatingScheduler;)Lscala/actors/IScheduler;;
const #205 = NameAndType	#203:#204;//  impl:(Lscala/actors/scheduler/DelegatingScheduler;)Lscala/actors/IScheduler;
const #206 = Method	#29.#205;	//  scala/actors/scheduler/DelegatingScheduler$class.impl:(Lscala/actors/scheduler/DelegatingScheduler;)Lscala/actors/IScheduler;
const #207 = Asciz	sched_$eq;
const #208 = NameAndType	#14:#15;//  sched:Lscala/actors/IScheduler;
const #209 = Field	#10.#208;	//  scala/actors/Scheduler$.sched:Lscala/actors/IScheduler;
const #210 = Asciz	scala/ScalaObject;
const #211 = class	#210;	//  scala/ScalaObject

{
public static final scala.actors.Scheduler$ MODULE$;

public static {};
  Code:
   Stack=1, Locals=0, Args_size=0
   0:	new	#10; //class scala/actors/Scheduler$
   3:	invokespecial	#13; //Method "<init>":()V
   6:	return

public void restart();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	invokeinterface	#62,  1; //InterfaceMethod scala/actors/scheduler/DelegatingScheduler.sched:()Lscala/actors/IScheduler;
   6:	instanceof	#64; //class scala/actors/scheduler/ForkJoinScheduler
   9:	ifeq	25
   12:	aload_0
   13:	invokeinterface	#62,  1; //InterfaceMethod scala/actors/scheduler/DelegatingScheduler.sched:()Lscala/actors/IScheduler;
   18:	checkcast	#64; //class scala/actors/scheduler/ForkJoinScheduler
   21:	invokevirtual	#66; //Method scala/actors/scheduler/ForkJoinScheduler.restart:()V
   24:	return
   25:	getstatic	#71; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   28:	ldc	#73; //String scheduler does not implement restart
   30:	invokevirtual	#77; //Method scala/Predef$.error:(Ljava/lang/String;)Lscala/runtime/Nothing$;
   33:	athrow
  LineNumberTable: 
   line 52: 0
   line 53: 12
   line 52: 24
   line 55: 25


public void snapshot();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	invokeinterface	#62,  1; //InterfaceMethod scala/actors/scheduler/DelegatingScheduler.sched:()Lscala/actors/IScheduler;
   6:	instanceof	#64; //class scala/actors/scheduler/ForkJoinScheduler
   9:	ifeq	25
   12:	aload_0
   13:	invokeinterface	#62,  1; //InterfaceMethod scala/actors/scheduler/DelegatingScheduler.sched:()Lscala/actors/IScheduler;
   18:	checkcast	#64; //class scala/actors/scheduler/ForkJoinScheduler
   21:	invokevirtual	#80; //Method scala/actors/scheduler/ForkJoinScheduler.snapshot:()V
   24:	return
   25:	getstatic	#71; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   28:	ldc	#82; //String scheduler does not implement snapshot
   30:	invokevirtual	#77; //Method scala/Predef$.error:(Ljava/lang/String;)Lscala/runtime/Nothing$;
   33:	athrow
  LineNumberTable: 
   line 43: 0
   line 44: 12
   line 43: 24
   line 46: 25


public scala.actors.IScheduler makeNewScheduler();
  Code:
   Stack=8, Locals=4, Args_size=1
   0:	new	#85; //class java/util/concurrent/LinkedBlockingQueue
   3:	dup
   4:	ldc	#86; //int 100000
   6:	invokespecial	#89; //Method java/util/concurrent/LinkedBlockingQueue."<init>":(I)V
   9:	astore_1
   10:	new	#91; //class java/util/concurrent/ThreadPoolExecutor
   13:	dup
   14:	getstatic	#96; //Field scala/actors/scheduler/ThreadPoolConfig$.MODULE$:Lscala/actors/scheduler/ThreadPoolConfig$;
   17:	invokevirtual	#100; //Method scala/actors/scheduler/ThreadPoolConfig$.corePoolSize:()I
   20:	getstatic	#96; //Field scala/actors/scheduler/ThreadPoolConfig$.MODULE$:Lscala/actors/scheduler/ThreadPoolConfig$;
   23:	invokevirtual	#103; //Method scala/actors/scheduler/ThreadPoolConfig$.maxPoolSize:()I
   26:	ldc2_w	#104; //long 50l
   29:	getstatic	#111; //Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
   32:	aload_1
   33:	invokespecial	#114; //Method java/util/concurrent/ThreadPoolExecutor."<init>":(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;)V
   36:	astore_2
   37:	new	#116; //class scala/actors/scheduler/ThreadPoolScheduler
   40:	dup
   41:	aload_2
   42:	iconst_1
   43:	invokespecial	#119; //Method scala/actors/scheduler/ThreadPoolScheduler."<init>":(Ljava/util/concurrent/ThreadPoolExecutor;Z)V
   46:	astore_3
   47:	getstatic	#37; //Field scala/actors/Debug$.MODULE$:Lscala/actors/Debug$;
   50:	new	#39; //class scala/collection/mutable/StringBuilder
   53:	dup
   54:	invokespecial	#40; //Method scala/collection/mutable/StringBuilder."<init>":()V
   57:	getstatic	#71; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   60:	aload_0
   61:	invokevirtual	#123; //Method scala/Predef$.any2stringadd:(Ljava/lang/Object;)Lscala/runtime/StringAdd;
   64:	ldc	#125; //String : starting new 
   66:	invokevirtual	#131; //Method scala/runtime/StringAdd.$plus:(Ljava/lang/String;)Ljava/lang/String;
   69:	invokevirtual	#46; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   72:	aload_3
   73:	invokevirtual	#46; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   76:	ldc	#133; //String  [
   78:	invokevirtual	#46; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   81:	aload_3
   82:	invokevirtual	#137; //Method scala/actors/scheduler/ThreadPoolScheduler.getClass:()Ljava/lang/Class;
   85:	invokevirtual	#46; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   88:	ldc	#139; //String ]
   90:	invokevirtual	#46; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   93:	invokevirtual	#52; //Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
   96:	invokevirtual	#56; //Method scala/actors/Debug$.info:(Ljava/lang/String;)V
   99:	aload_3
   100:	invokevirtual	#142; //Method scala/actors/scheduler/ThreadPoolScheduler.start:()V
   103:	aload_3
   104:	areturn
  LineNumberTable: 
   line 27: 0
   line 28: 10
   line 29: 20
   line 30: 26
   line 31: 29
   line 32: 32
   line 28: 33
   line 33: 37
   line 35: 47
   line 36: 99
   line 37: 103

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      105      0    this       Lscala/actors/Scheduler$;
   10      94      1    workQueue       Ljava/util/concurrent/LinkedBlockingQueue;
   37      67      2    threadPool       Ljava/util/concurrent/ThreadPoolExecutor;
   47      57      3    s       Lscala/actors/scheduler/ThreadPoolScheduler;


public void managedBlock(scala.actors.ManagedBlocker);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#155; //Method scala/actors/scheduler/DelegatingScheduler$class.managedBlock:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/ManagedBlocker;)V
   5:	return
  LineNumberTable: 
   line 22: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/Scheduler$;
   0      6      1    blocker       Lscala/actors/ManagedBlocker;


public void onTerminate(scala.actors.Reactor, scala.Function0);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#162; //Method scala/actors/scheduler/DelegatingScheduler$class.onTerminate:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/Reactor;Lscala/Function0;)V
   6:	return
  LineNumberTable: 
   line 22: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/actors/Scheduler$;
   0      7      1    actor       Lscala/actors/Reactor;
   0      7      2    f       Lscala/Function0;


public void terminated(scala.actors.Reactor);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#171; //Method scala/actors/scheduler/DelegatingScheduler$class.terminated:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/Reactor;)V
   5:	return
  LineNumberTable: 
   line 22: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/Scheduler$;
   0      6      1    actor       Lscala/actors/Reactor;


public void newActor(scala.actors.Reactor);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#174; //Method scala/actors/scheduler/DelegatingScheduler$class.newActor:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/Reactor;)V
   5:	return
  LineNumberTable: 
   line 22: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/Scheduler$;
   0      6      1    actor       Lscala/actors/Reactor;


public void shutdown();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#177; //Method scala/actors/scheduler/DelegatingScheduler$class.shutdown:(Lscala/actors/scheduler/DelegatingScheduler;)V
   4:	return
  LineNumberTable: 
   line 22: 0


public void executeFromActor(java.lang.Runnable);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#182; //Method scala/actors/scheduler/DelegatingScheduler$class.executeFromActor:(Lscala/actors/scheduler/DelegatingScheduler;Ljava/lang/Runnable;)V
   5:	return
  LineNumberTable: 
   line 22: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/Scheduler$;
   0      6      1    task       Ljava/lang/Runnable;


public void execute(java.lang.Runnable);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#187; //Method scala/actors/scheduler/DelegatingScheduler$class.execute:(Lscala/actors/scheduler/DelegatingScheduler;Ljava/lang/Runnable;)V
   5:	return
  LineNumberTable: 
   line 22: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/Scheduler$;
   0      6      1    task       Ljava/lang/Runnable;


public void execute(scala.Function0);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#191; //Method scala/actors/scheduler/DelegatingScheduler$class.execute:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/Function0;)V
   5:	return
  LineNumberTable: 
   line 22: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/Scheduler$;
   0      6      1    fun       Lscala/Function0;


public boolean isActive();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#197; //Method scala/actors/scheduler/DelegatingScheduler$class.isActive:(Lscala/actors/scheduler/DelegatingScheduler;)Z
   4:	ireturn
  LineNumberTable: 
   line 22: 0


public final void impl_$eq(scala.actors.IScheduler);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#201; //Method scala/actors/scheduler/DelegatingScheduler$class.impl_$eq:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/IScheduler;)V
   5:	return
  LineNumberTable: 
   line 22: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/Scheduler$;
   0      6      1    scheduler       Lscala/actors/IScheduler;


public final scala.actors.IScheduler impl();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#206; //Method scala/actors/scheduler/DelegatingScheduler$class.impl:(Lscala/actors/scheduler/DelegatingScheduler;)Lscala/actors/IScheduler;
   4:	areturn
  LineNumberTable: 
   line 22: 0


public void sched_$eq(scala.actors.IScheduler);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	putfield	#209; //Field sched:Lscala/actors/IScheduler;
   5:	return
  LineNumberTable: 
   line 22: 0


public scala.actors.IScheduler sched();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#209; //Field sched:Lscala/actors/IScheduler;
   4:	areturn
  LineNumberTable: 
   line 22: 0


}

