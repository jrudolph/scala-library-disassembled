Compiled from "Scheduler.scala"
public final class scala.actors.Scheduler$ extends java.lang.Object implements scala.actors.scheduler.DelegatingScheduler,scala.ScalaObject
  SourceFile: "Scheduler.scala"
  Scala: length = 0x
   
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Scheduler.scala;
const #3 = Asciz	Scala;
const #4 = Asciz	MODULE$;
const #5 = Asciz	Lscala/actors/Scheduler$;;
const #6 = Asciz	<clinit>;
const #7 = Asciz	()V;
const #8 = Asciz	Code;
const #9 = Asciz	scala/actors/Scheduler$;
const #10 = class	#9;	//  scala/actors/Scheduler$
const #11 = Asciz	<init>;
const #12 = NameAndType	#11:#7;//  "<init>":()V
const #13 = Method	#10.#12;	//  scala/actors/Scheduler$."<init>":()V
const #14 = Asciz	sched;
const #15 = Asciz	Lscala/actors/IScheduler;;
const #16 = Asciz	LineNumberTable;
const #17 = Asciz	java/lang/Object;
const #18 = class	#17;	//  java/lang/Object
const #19 = Method	#18.#12;	//  java/lang/Object."<init>":()V
const #20 = NameAndType	#4:#5;//  MODULE$:Lscala/actors/Scheduler$;
const #21 = Field	#10.#20;	//  scala/actors/Scheduler$.MODULE$:Lscala/actors/Scheduler$;
const #22 = Asciz	scala/actors/IScheduler$class;
const #23 = class	#22;	//  scala/actors/IScheduler$class
const #24 = Asciz	$init$;
const #25 = Asciz	(Lscala/actors/IScheduler;)V;
const #26 = NameAndType	#24:#25;//  $init$:(Lscala/actors/IScheduler;)V
const #27 = Method	#23.#26;	//  scala/actors/IScheduler$class.$init$:(Lscala/actors/IScheduler;)V
const #28 = Asciz	scala/actors/scheduler/DelegatingScheduler$class;
const #29 = class	#28;	//  scala/actors/scheduler/DelegatingScheduler$class
const #30 = Asciz	(Lscala/actors/scheduler/DelegatingScheduler;)V;
const #31 = NameAndType	#24:#30;//  $init$:(Lscala/actors/scheduler/DelegatingScheduler;)V
const #32 = Method	#29.#31;	//  scala/actors/scheduler/DelegatingScheduler$class.$init$:(Lscala/actors/scheduler/DelegatingScheduler;)V
const #33 = Asciz	scala/actors/Debug$;
const #34 = class	#33;	//  scala/actors/Debug$
const #35 = Asciz	Lscala/actors/Debug$;;
const #36 = NameAndType	#4:#35;//  MODULE$:Lscala/actors/Debug$;
const #37 = Field	#34.#36;	//  scala/actors/Debug$.MODULE$:Lscala/actors/Debug$;
const #38 = Asciz	scala/collection/mutable/StringBuilder;
const #39 = class	#38;	//  scala/collection/mutable/StringBuilder
const #40 = Method	#39.#12;	//  scala/collection/mutable/StringBuilder."<init>":()V
const #41 = Asciz	initializing ;
const #42 = String	#41;	//  initializing 
const #43 = Asciz	append;
const #44 = Asciz	(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;;
const #45 = NameAndType	#43:#44;//  append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
const #46 = Method	#39.#45;	//  scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
const #47 = Asciz	...;
const #48 = String	#47;	//  ...
const #49 = Asciz	toString;
const #50 = Asciz	()Ljava/lang/String;;
const #51 = NameAndType	#49:#50;//  toString:()Ljava/lang/String;
const #52 = Method	#39.#51;	//  scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
const #53 = Asciz	info;
const #54 = Asciz	(Ljava/lang/String;)V;
const #55 = NameAndType	#53:#54;//  info:(Ljava/lang/String;)V
const #56 = Method	#34.#55;	//  scala/actors/Debug$.info:(Ljava/lang/String;)V
const #57 = Asciz	restart;
const #58 = NameAndType	#14:#15;//  sched:Lscala/actors/IScheduler;
const #59 = Field	#10.#58;	//  scala/actors/Scheduler$.sched:Lscala/actors/IScheduler;
const #60 = Asciz	scala/actors/scheduler/ForkJoinScheduler;
const #61 = class	#60;	//  scala/actors/scheduler/ForkJoinScheduler
const #62 = NameAndType	#57:#7;//  restart:()V
const #63 = Method	#61.#62;	//  scala/actors/scheduler/ForkJoinScheduler.restart:()V
const #64 = Asciz	scheduler does not implement restart;
const #65 = String	#64;	//  scheduler does not implement restart
const #66 = Asciz	java/lang/RuntimeException;
const #67 = class	#66;	//  java/lang/RuntimeException
const #68 = NameAndType	#11:#54;//  "<init>":(Ljava/lang/String;)V
const #69 = Method	#67.#68;	//  java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
const #70 = Asciz	this;
const #71 = Asciz	LocalVariableTable;
const #72 = Asciz	snapshot;
const #73 = NameAndType	#72:#7;//  snapshot:()V
const #74 = Method	#61.#73;	//  scala/actors/scheduler/ForkJoinScheduler.snapshot:()V
const #75 = Asciz	scheduler does not implement snapshot;
const #76 = String	#75;	//  scheduler does not implement snapshot
const #77 = Asciz	makeNewScheduler;
const #78 = Asciz	()Lscala/actors/IScheduler;;
const #79 = Asciz	scala/actors/scheduler/ThreadPoolConfig$;
const #80 = class	#79;	//  scala/actors/scheduler/ThreadPoolConfig$
const #81 = Asciz	Lscala/actors/scheduler/ThreadPoolConfig$;;
const #82 = NameAndType	#4:#81;//  MODULE$:Lscala/actors/scheduler/ThreadPoolConfig$;
const #83 = Field	#80.#82;	//  scala/actors/scheduler/ThreadPoolConfig$.MODULE$:Lscala/actors/scheduler/ThreadPoolConfig$;
const #84 = Asciz	useForkJoin;
const #85 = Asciz	()Z;
const #86 = NameAndType	#84:#85;//  useForkJoin:()Z
const #87 = Method	#80.#86;	//  scala/actors/scheduler/ThreadPoolConfig$.useForkJoin:()Z
const #88 = Method	#61.#12;	//  scala/actors/scheduler/ForkJoinScheduler."<init>":()V
const #89 = Asciz	start;
const #90 = NameAndType	#89:#7;//  start:()V
const #91 = Method	#61.#90;	//  scala/actors/scheduler/ForkJoinScheduler.start:()V
const #92 = Asciz	scala/actors/scheduler/ResizableThreadPoolScheduler;
const #93 = class	#92;	//  scala/actors/scheduler/ResizableThreadPoolScheduler
const #94 = Asciz	(Z)V;
const #95 = NameAndType	#11:#94;//  "<init>":(Z)V
const #96 = Method	#93.#95;	//  scala/actors/scheduler/ResizableThreadPoolScheduler."<init>":(Z)V
const #97 = Method	#93.#90;	//  scala/actors/scheduler/ResizableThreadPoolScheduler.start:()V
const #98 = Asciz	scala/runtime/StringAdd;
const #99 = class	#98;	//  scala/runtime/StringAdd
const #100 = Asciz	(Ljava/lang/Object;)V;
const #101 = NameAndType	#11:#100;//  "<init>":(Ljava/lang/Object;)V
const #102 = Method	#99.#101;	//  scala/runtime/StringAdd."<init>":(Ljava/lang/Object;)V
const #103 = Asciz	: starting new ;
const #104 = String	#103;	//  : starting new 
const #105 = Asciz	$plus;
const #106 = Asciz	(Ljava/lang/String;)Ljava/lang/String;;
const #107 = NameAndType	#105:#106;//  $plus:(Ljava/lang/String;)Ljava/lang/String;
const #108 = Method	#99.#107;	//  scala/runtime/StringAdd.$plus:(Ljava/lang/String;)Ljava/lang/String;
const #109 = Asciz	 [;
const #110 = String	#109;	//   [
const #111 = Asciz	getClass;
const #112 = Asciz	()Ljava/lang/Class;;
const #113 = NameAndType	#111:#112;//  getClass:()Ljava/lang/Class;
const #114 = Method	#18.#113;	//  java/lang/Object.getClass:()Ljava/lang/Class;
const #115 = Asciz	];
const #116 = String	#115;	//  ]
const #117 = Asciz	s;
const #118 = Asciz	Lscala/actors/scheduler/ForkJoinScheduler;;
const #119 = Asciz	Lscala/actors/scheduler/ResizableThreadPoolScheduler;;
const #120 = Asciz	printActorDump;
const #121 = NameAndType	#120:#25;//  printActorDump:(Lscala/actors/IScheduler;)V
const #122 = Method	#23.#121;	//  scala/actors/IScheduler$class.printActorDump:(Lscala/actors/IScheduler;)V
const #123 = Asciz	onLockup;
const #124 = Asciz	(ILscala/Function0;)V;
const #125 = Asciz	(Lscala/actors/IScheduler;ILscala/Function0;)V;
const #126 = NameAndType	#123:#125;//  onLockup:(Lscala/actors/IScheduler;ILscala/Function0;)V
const #127 = Method	#23.#126;	//  scala/actors/IScheduler$class.onLockup:(Lscala/actors/IScheduler;ILscala/Function0;)V
const #128 = Asciz	millis;
const #129 = Asciz	I;
const #130 = Asciz	handler;
const #131 = Asciz	Lscala/Function0;;
const #132 = Asciz	(Lscala/Function0;)V;
const #133 = Asciz	(Lscala/actors/IScheduler;Lscala/Function0;)V;
const #134 = NameAndType	#123:#133;//  onLockup:(Lscala/actors/IScheduler;Lscala/Function0;)V
const #135 = Method	#23.#134;	//  scala/actors/IScheduler$class.onLockup:(Lscala/actors/IScheduler;Lscala/Function0;)V
const #136 = Asciz	tick;
const #137 = Asciz	(Lscala/actors/Actor;)V;
const #138 = Asciz	(Lscala/actors/IScheduler;Lscala/actors/Actor;)V;
const #139 = NameAndType	#136:#138;//  tick:(Lscala/actors/IScheduler;Lscala/actors/Actor;)V
const #140 = Method	#23.#139;	//  scala/actors/IScheduler$class.tick:(Lscala/actors/IScheduler;Lscala/actors/Actor;)V
const #141 = Asciz	a;
const #142 = Asciz	Lscala/actors/Actor;;
const #143 = Asciz	managedBlock;
const #144 = Asciz	(Lscala/concurrent/ManagedBlocker;)V;
const #145 = Asciz	(Lscala/actors/scheduler/DelegatingScheduler;Lscala/concurrent/ManagedBlocker;)V;
const #146 = NameAndType	#143:#145;//  managedBlock:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/concurrent/ManagedBlocker;)V
const #147 = Method	#29.#146;	//  scala/actors/scheduler/DelegatingScheduler$class.managedBlock:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/concurrent/ManagedBlocker;)V
const #148 = Asciz	blocker;
const #149 = Asciz	Lscala/concurrent/ManagedBlocker;;
const #150 = Asciz	onTerminate;
const #151 = Asciz	(Lscala/actors/Reactor;Lscala/Function0;)V;
const #152 = Asciz	(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/Reactor;Lscala/Function0;)V;
const #153 = NameAndType	#150:#152;//  onTerminate:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/Reactor;Lscala/Function0;)V
const #154 = Method	#29.#153;	//  scala/actors/scheduler/DelegatingScheduler$class.onTerminate:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/Reactor;Lscala/Function0;)V
const #155 = Asciz	actor;
const #156 = Asciz	Lscala/actors/Reactor;;
const #157 = Asciz	f;
const #158 = Asciz	terminated;
const #159 = Asciz	(Lscala/actors/Reactor;)V;
const #160 = Asciz	(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/Reactor;)V;
const #161 = NameAndType	#158:#160;//  terminated:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/Reactor;)V
const #162 = Method	#29.#161;	//  scala/actors/scheduler/DelegatingScheduler$class.terminated:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/Reactor;)V
const #163 = Asciz	newActor;
const #164 = NameAndType	#163:#160;//  newActor:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/Reactor;)V
const #165 = Method	#29.#164;	//  scala/actors/scheduler/DelegatingScheduler$class.newActor:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/Reactor;)V
const #166 = Asciz	shutdown;
const #167 = NameAndType	#166:#30;//  shutdown:(Lscala/actors/scheduler/DelegatingScheduler;)V
const #168 = Method	#29.#167;	//  scala/actors/scheduler/DelegatingScheduler$class.shutdown:(Lscala/actors/scheduler/DelegatingScheduler;)V
const #169 = Asciz	executeFromActor;
const #170 = Asciz	(Ljava/lang/Runnable;)V;
const #171 = Asciz	(Lscala/actors/scheduler/DelegatingScheduler;Ljava/lang/Runnable;)V;
const #172 = NameAndType	#169:#171;//  executeFromActor:(Lscala/actors/scheduler/DelegatingScheduler;Ljava/lang/Runnable;)V
const #173 = Method	#29.#172;	//  scala/actors/scheduler/DelegatingScheduler$class.executeFromActor:(Lscala/actors/scheduler/DelegatingScheduler;Ljava/lang/Runnable;)V
const #174 = Asciz	task;
const #175 = Asciz	Ljava/lang/Runnable;;
const #176 = Asciz	execute;
const #177 = NameAndType	#176:#171;//  execute:(Lscala/actors/scheduler/DelegatingScheduler;Ljava/lang/Runnable;)V
const #178 = Method	#29.#177;	//  scala/actors/scheduler/DelegatingScheduler$class.execute:(Lscala/actors/scheduler/DelegatingScheduler;Ljava/lang/Runnable;)V
const #179 = Asciz	(Lscala/actors/scheduler/DelegatingScheduler;Lscala/Function0;)V;
const #180 = NameAndType	#176:#179;//  execute:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/Function0;)V
const #181 = Method	#29.#180;	//  scala/actors/scheduler/DelegatingScheduler$class.execute:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/Function0;)V
const #182 = Asciz	fun;
const #183 = Asciz	isActive;
const #184 = Asciz	(Lscala/actors/scheduler/DelegatingScheduler;)Z;
const #185 = NameAndType	#183:#184;//  isActive:(Lscala/actors/scheduler/DelegatingScheduler;)Z
const #186 = Method	#29.#185;	//  scala/actors/scheduler/DelegatingScheduler$class.isActive:(Lscala/actors/scheduler/DelegatingScheduler;)Z
const #187 = Asciz	impl_$eq;
const #188 = Asciz	(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/IScheduler;)V;
const #189 = NameAndType	#187:#188;//  impl_$eq:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/IScheduler;)V
const #190 = Method	#29.#189;	//  scala/actors/scheduler/DelegatingScheduler$class.impl_$eq:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/IScheduler;)V
const #191 = Asciz	scheduler;
const #192 = Asciz	impl;
const #193 = Asciz	(Lscala/actors/scheduler/DelegatingScheduler;)Lscala/actors/IScheduler;;
const #194 = NameAndType	#192:#193;//  impl:(Lscala/actors/scheduler/DelegatingScheduler;)Lscala/actors/IScheduler;
const #195 = Method	#29.#194;	//  scala/actors/scheduler/DelegatingScheduler$class.impl:(Lscala/actors/scheduler/DelegatingScheduler;)Lscala/actors/IScheduler;
const #196 = Asciz	sched_$eq;
const #197 = Asciz	scala/actors/scheduler/DelegatingScheduler;
const #198 = class	#197;	//  scala/actors/scheduler/DelegatingScheduler
const #199 = Asciz	scala/ScalaObject;
const #200 = class	#199;	//  scala/ScalaObject

{
public static final scala.actors.Scheduler$ MODULE$;

public static {};
  Code:
   Stack=1, Locals=0, Args_size=0
   0:	new	#10; //class scala/actors/Scheduler$
   3:	invokespecial	#13; //Method "<init>":()V
   6:	return

public void restart();
  Code:
   Stack=3, Locals=2, Args_size=1
   0:	aload_0
   1:	getfield	#59; //Field sched:Lscala/actors/IScheduler;
   4:	instanceof	#61; //class scala/actors/scheduler/ForkJoinScheduler
   7:	ifeq	21
   10:	aload_0
   11:	getfield	#59; //Field sched:Lscala/actors/IScheduler;
   14:	checkcast	#61; //class scala/actors/scheduler/ForkJoinScheduler
   17:	invokevirtual	#63; //Method scala/actors/scheduler/ForkJoinScheduler.restart:()V
   20:	return
   21:	ldc	#65; //String scheduler does not implement restart
   23:	astore_1
   24:	new	#67; //class java/lang/RuntimeException
   27:	dup
   28:	aload_1
   29:	invokespecial	#69; //Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
   32:	athrow
  LineNumberTable: 
   line 54: 0
   line 55: 10
   line 54: 20
   line 57: 21

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      33      0    this       Lscala/actors/Scheduler$;


public void snapshot();
  Code:
   Stack=3, Locals=2, Args_size=1
   0:	aload_0
   1:	getfield	#59; //Field sched:Lscala/actors/IScheduler;
   4:	instanceof	#61; //class scala/actors/scheduler/ForkJoinScheduler
   7:	ifeq	21
   10:	aload_0
   11:	getfield	#59; //Field sched:Lscala/actors/IScheduler;
   14:	checkcast	#61; //class scala/actors/scheduler/ForkJoinScheduler
   17:	invokevirtual	#74; //Method scala/actors/scheduler/ForkJoinScheduler.snapshot:()V
   20:	return
   21:	ldc	#76; //String scheduler does not implement snapshot
   23:	astore_1
   24:	new	#67; //class java/lang/RuntimeException
   27:	dup
   28:	aload_1
   29:	invokespecial	#69; //Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
   32:	athrow
  LineNumberTable: 
   line 44: 0
   line 45: 10
   line 44: 20
   line 47: 21

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      33      0    this       Lscala/actors/Scheduler$;


public scala.actors.IScheduler makeNewScheduler();
  Code:
   Stack=5, Locals=4, Args_size=1
   0:	getstatic	#83; //Field scala/actors/scheduler/ThreadPoolConfig$.MODULE$:Lscala/actors/scheduler/ThreadPoolConfig$;
   3:	invokevirtual	#87; //Method scala/actors/scheduler/ThreadPoolConfig$.useForkJoin:()Z
   6:	ifeq	25
   9:	new	#61; //class scala/actors/scheduler/ForkJoinScheduler
   12:	dup
   13:	invokespecial	#88; //Method scala/actors/scheduler/ForkJoinScheduler."<init>":()V
   16:	astore_1
   17:	aload_1
   18:	invokevirtual	#91; //Method scala/actors/scheduler/ForkJoinScheduler.start:()V
   21:	aload_1
   22:	goto	39
   25:	new	#93; //class scala/actors/scheduler/ResizableThreadPoolScheduler
   28:	dup
   29:	iconst_0
   30:	invokespecial	#96; //Method scala/actors/scheduler/ResizableThreadPoolScheduler."<init>":(Z)V
   33:	astore_2
   34:	aload_2
   35:	invokevirtual	#97; //Method scala/actors/scheduler/ResizableThreadPoolScheduler.start:()V
   38:	aload_2
   39:	astore_3
   40:	getstatic	#37; //Field scala/actors/Debug$.MODULE$:Lscala/actors/Debug$;
   43:	new	#39; //class scala/collection/mutable/StringBuilder
   46:	dup
   47:	invokespecial	#40; //Method scala/collection/mutable/StringBuilder."<init>":()V
   50:	new	#99; //class scala/runtime/StringAdd
   53:	dup
   54:	aload_0
   55:	invokespecial	#102; //Method scala/runtime/StringAdd."<init>":(Ljava/lang/Object;)V
   58:	ldc	#104; //String : starting new 
   60:	invokevirtual	#108; //Method scala/runtime/StringAdd.$plus:(Ljava/lang/String;)Ljava/lang/String;
   63:	invokevirtual	#46; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   66:	aload_3
   67:	invokevirtual	#46; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   70:	ldc	#110; //String  [
   72:	invokevirtual	#46; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   75:	aload_3
   76:	invokevirtual	#114; //Method java/lang/Object.getClass:()Ljava/lang/Class;
   79:	invokevirtual	#46; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   82:	ldc	#116; //String ]
   84:	invokevirtual	#46; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   87:	invokevirtual	#52; //Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
   90:	invokevirtual	#56; //Method scala/actors/Debug$.info:(Ljava/lang/String;)V
   93:	aload_3
   94:	areturn
  LineNumberTable: 
   line 27: 0
   line 32: 9
   line 34: 17
   line 33: 18
   line 34: 21
   line 27: 22
   line 28: 25
   line 30: 34
   line 29: 35
   line 30: 38
   line 27: 39
   line 36: 40
   line 37: 93

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      95      0    this       Lscala/actors/Scheduler$;
   17      5      1    s       Lscala/actors/scheduler/ForkJoinScheduler;
   34      5      2    s       Lscala/actors/scheduler/ResizableThreadPoolScheduler;
   40      54      3    sched       Lscala/actors/IScheduler;


public void printActorDump();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#122; //Method scala/actors/IScheduler$class.printActorDump:(Lscala/actors/IScheduler;)V
   4:	return
  LineNumberTable: 
   line 22: 0


public void onLockup(int, scala.Function0);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	iload_1
   2:	aload_2
   3:	invokestatic	#127; //Method scala/actors/IScheduler$class.onLockup:(Lscala/actors/IScheduler;ILscala/Function0;)V
   6:	return
  LineNumberTable: 
   line 22: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/actors/Scheduler$;
   0      7      1    millis       I
   0      7      2    handler       Lscala/Function0;


public void onLockup(scala.Function0);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#135; //Method scala/actors/IScheduler$class.onLockup:(Lscala/actors/IScheduler;Lscala/Function0;)V
   5:	return
  LineNumberTable: 
   line 22: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/Scheduler$;
   0      6      1    handler       Lscala/Function0;


public void tick(scala.actors.Actor);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#140; //Method scala/actors/IScheduler$class.tick:(Lscala/actors/IScheduler;Lscala/actors/Actor;)V
   5:	return
  LineNumberTable: 
   line 22: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/Scheduler$;
   0      6      1    a       Lscala/actors/Actor;


public void managedBlock(scala.concurrent.ManagedBlocker);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#147; //Method scala/actors/scheduler/DelegatingScheduler$class.managedBlock:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/concurrent/ManagedBlocker;)V
   5:	return
  LineNumberTable: 
   line 22: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/Scheduler$;
   0      6      1    blocker       Lscala/concurrent/ManagedBlocker;


public void onTerminate(scala.actors.Reactor, scala.Function0);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#154; //Method scala/actors/scheduler/DelegatingScheduler$class.onTerminate:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/Reactor;Lscala/Function0;)V
   6:	return
  LineNumberTable: 
   line 22: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/actors/Scheduler$;
   0      7      1    actor       Lscala/actors/Reactor;
   0      7      2    f       Lscala/Function0;


public void terminated(scala.actors.Reactor);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#162; //Method scala/actors/scheduler/DelegatingScheduler$class.terminated:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/Reactor;)V
   5:	return
  LineNumberTable: 
   line 22: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/Scheduler$;
   0      6      1    actor       Lscala/actors/Reactor;


public void newActor(scala.actors.Reactor);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#165; //Method scala/actors/scheduler/DelegatingScheduler$class.newActor:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/Reactor;)V
   5:	return
  LineNumberTable: 
   line 22: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/Scheduler$;
   0      6      1    actor       Lscala/actors/Reactor;


public void shutdown();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#168; //Method scala/actors/scheduler/DelegatingScheduler$class.shutdown:(Lscala/actors/scheduler/DelegatingScheduler;)V
   4:	return
  LineNumberTable: 
   line 22: 0


public void executeFromActor(java.lang.Runnable);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#173; //Method scala/actors/scheduler/DelegatingScheduler$class.executeFromActor:(Lscala/actors/scheduler/DelegatingScheduler;Ljava/lang/Runnable;)V
   5:	return
  LineNumberTable: 
   line 22: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/Scheduler$;
   0      6      1    task       Ljava/lang/Runnable;


public void execute(java.lang.Runnable);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#178; //Method scala/actors/scheduler/DelegatingScheduler$class.execute:(Lscala/actors/scheduler/DelegatingScheduler;Ljava/lang/Runnable;)V
   5:	return
  LineNumberTable: 
   line 22: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/Scheduler$;
   0      6      1    task       Ljava/lang/Runnable;


public void execute(scala.Function0);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#181; //Method scala/actors/scheduler/DelegatingScheduler$class.execute:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/Function0;)V
   5:	return
  LineNumberTable: 
   line 22: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/Scheduler$;
   0      6      1    fun       Lscala/Function0;


public boolean isActive();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#186; //Method scala/actors/scheduler/DelegatingScheduler$class.isActive:(Lscala/actors/scheduler/DelegatingScheduler;)Z
   4:	ireturn
  LineNumberTable: 
   line 22: 0


public final void impl_$eq(scala.actors.IScheduler);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#190; //Method scala/actors/scheduler/DelegatingScheduler$class.impl_$eq:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/IScheduler;)V
   5:	return
  LineNumberTable: 
   line 22: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/Scheduler$;
   0      6      1    scheduler       Lscala/actors/IScheduler;


public final scala.actors.IScheduler impl();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#195; //Method scala/actors/scheduler/DelegatingScheduler$class.impl:(Lscala/actors/scheduler/DelegatingScheduler;)Lscala/actors/IScheduler;
   4:	areturn
  LineNumberTable: 
   line 22: 0


public void sched_$eq(scala.actors.IScheduler);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	putfield	#59; //Field sched:Lscala/actors/IScheduler;
   5:	return
  LineNumberTable: 
   line 22: 0


public scala.actors.IScheduler sched();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#59; //Field sched:Lscala/actors/IScheduler;
   4:	areturn
  LineNumberTable: 
   line 22: 0


}

