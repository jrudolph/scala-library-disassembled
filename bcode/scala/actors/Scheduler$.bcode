Compiled from "Scheduler.scala"
public final class scala.actors.Scheduler$ extends java.lang.Object implements scala.actors.scheduler.DelegatingScheduler,scala.ScalaObject
  SourceFile: "Scheduler.scala"
  Scala: length = 0x
   
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Scheduler.scala;
const #3 = Asciz	Scala;
const #4 = Asciz	MODULE$;
const #5 = Asciz	Lscala/actors/Scheduler$;;
const #6 = Asciz	<clinit>;
const #7 = Asciz	()V;
const #8 = Asciz	Code;
const #9 = Asciz	scala/actors/Scheduler$;
const #10 = class	#9;	//  scala/actors/Scheduler$
const #11 = Asciz	<init>;
const #12 = NameAndType	#11:#7;//  "<init>":()V
const #13 = Method	#10.#12;	//  scala/actors/Scheduler$."<init>":()V
const #14 = Asciz	sched;
const #15 = Asciz	Lscala/actors/IScheduler;;
const #16 = Asciz	LineNumberTable;
const #17 = Asciz	java/lang/Object;
const #18 = class	#17;	//  java/lang/Object
const #19 = Method	#18.#12;	//  java/lang/Object."<init>":()V
const #20 = NameAndType	#4:#5;//  MODULE$:Lscala/actors/Scheduler$;
const #21 = Field	#10.#20;	//  scala/actors/Scheduler$.MODULE$:Lscala/actors/Scheduler$;
const #22 = Asciz	scala/actors/IScheduler$class;
const #23 = class	#22;	//  scala/actors/IScheduler$class
const #24 = Asciz	$init$;
const #25 = Asciz	(Lscala/actors/IScheduler;)V;
const #26 = NameAndType	#24:#25;//  $init$:(Lscala/actors/IScheduler;)V
const #27 = Method	#23.#26;	//  scala/actors/IScheduler$class.$init$:(Lscala/actors/IScheduler;)V
const #28 = Asciz	scala/actors/scheduler/DelegatingScheduler$class;
const #29 = class	#28;	//  scala/actors/scheduler/DelegatingScheduler$class
const #30 = Asciz	(Lscala/actors/scheduler/DelegatingScheduler;)V;
const #31 = NameAndType	#24:#30;//  $init$:(Lscala/actors/scheduler/DelegatingScheduler;)V
const #32 = Method	#29.#31;	//  scala/actors/scheduler/DelegatingScheduler$class.$init$:(Lscala/actors/scheduler/DelegatingScheduler;)V
const #33 = Asciz	scala/actors/Debug$;
const #34 = class	#33;	//  scala/actors/Debug$
const #35 = Asciz	Lscala/actors/Debug$;;
const #36 = NameAndType	#4:#35;//  MODULE$:Lscala/actors/Debug$;
const #37 = Field	#34.#36;	//  scala/actors/Debug$.MODULE$:Lscala/actors/Debug$;
const #38 = Asciz	scala/collection/mutable/StringBuilder;
const #39 = class	#38;	//  scala/collection/mutable/StringBuilder
const #40 = Method	#39.#12;	//  scala/collection/mutable/StringBuilder."<init>":()V
const #41 = Asciz	initializing ;
const #42 = String	#41;	//  initializing 
const #43 = Asciz	append;
const #44 = Asciz	(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;;
const #45 = NameAndType	#43:#44;//  append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
const #46 = Method	#39.#45;	//  scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
const #47 = Asciz	...;
const #48 = String	#47;	//  ...
const #49 = Asciz	toString;
const #50 = Asciz	()Ljava/lang/String;;
const #51 = NameAndType	#49:#50;//  toString:()Ljava/lang/String;
const #52 = Method	#39.#51;	//  scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
const #53 = Asciz	info;
const #54 = Asciz	(Ljava/lang/String;)V;
const #55 = NameAndType	#53:#54;//  info:(Ljava/lang/String;)V
const #56 = Method	#34.#55;	//  scala/actors/Debug$.info:(Ljava/lang/String;)V
const #57 = Asciz	restart;
const #58 = NameAndType	#14:#15;//  sched:Lscala/actors/IScheduler;
const #59 = Field	#10.#58;	//  scala/actors/Scheduler$.sched:Lscala/actors/IScheduler;
const #60 = Asciz	scala/actors/scheduler/ForkJoinScheduler;
const #61 = class	#60;	//  scala/actors/scheduler/ForkJoinScheduler
const #62 = NameAndType	#57:#7;//  restart:()V
const #63 = Method	#61.#62;	//  scala/actors/scheduler/ForkJoinScheduler.restart:()V
const #64 = Asciz	scheduler does not implement restart;
const #65 = String	#64;	//  scheduler does not implement restart
const #66 = Asciz	java/lang/RuntimeException;
const #67 = class	#66;	//  java/lang/RuntimeException
const #68 = NameAndType	#11:#54;//  "<init>":(Ljava/lang/String;)V
const #69 = Method	#67.#68;	//  java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
const #70 = Asciz	this;
const #71 = Asciz	LocalVariableTable;
const #72 = Asciz	snapshot;
const #73 = NameAndType	#72:#7;//  snapshot:()V
const #74 = Method	#61.#73;	//  scala/actors/scheduler/ForkJoinScheduler.snapshot:()V
const #75 = Asciz	scheduler does not implement snapshot;
const #76 = String	#75;	//  scheduler does not implement snapshot
const #77 = Asciz	makeNewScheduler;
const #78 = Asciz	()Lscala/actors/IScheduler;;
const #79 = Asciz	java.vm.vendor;
const #80 = String	#79;	//  java.vm.vendor
const #81 = Asciz	java/lang/System;
const #82 = class	#81;	//  java/lang/System
const #83 = Asciz	getProperty;
const #84 = Asciz	(Ljava/lang/String;)Ljava/lang/String;;
const #85 = NameAndType	#83:#84;//  getProperty:(Ljava/lang/String;)Ljava/lang/String;
const #86 = Method	#82.#85;	//  java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
const #87 = Asciz	IBM;
const #88 = String	#87;	//  IBM
const #89 = Asciz	java/lang/String;
const #90 = class	#89;	//  java/lang/String
const #91 = Asciz	indexOf;
const #92 = Asciz	(Ljava/lang/String;)I;
const #93 = NameAndType	#91:#92;//  indexOf:(Ljava/lang/String;)I
const #94 = Method	#90.#93;	//  java/lang/String.indexOf:(Ljava/lang/String;)I
const #95 = Asciz	scala/runtime/StringAdd;
const #96 = class	#95;	//  scala/runtime/StringAdd
const #97 = Asciz	(Ljava/lang/Object;)V;
const #98 = NameAndType	#11:#97;//  "<init>":(Ljava/lang/Object;)V
const #99 = Method	#96.#98;	//  scala/runtime/StringAdd."<init>":(Ljava/lang/Object;)V
const #100 = Asciz	: running on a ;
const #101 = String	#100;	//  : running on a 
const #102 = Asciz	$plus;
const #103 = NameAndType	#102:#84;//  $plus:(Ljava/lang/String;)Ljava/lang/String;
const #104 = Method	#96.#103;	//  scala/runtime/StringAdd.$plus:(Ljava/lang/String;)Ljava/lang/String;
const #105 = Asciz	 JVM;
const #106 = String	#105;	//   JVM
const #107 = Asciz	scala/actors/scheduler/ResizableThreadPoolScheduler;
const #108 = class	#107;	//  scala/actors/scheduler/ResizableThreadPoolScheduler
const #109 = Asciz	(Z)V;
const #110 = NameAndType	#11:#109;//  "<init>":(Z)V
const #111 = Method	#108.#110;	//  scala/actors/scheduler/ResizableThreadPoolScheduler."<init>":(Z)V
const #112 = Asciz	start;
const #113 = NameAndType	#112:#7;//  start:()V
const #114 = Method	#108.#113;	//  scala/actors/scheduler/ResizableThreadPoolScheduler.start:()V
const #115 = Method	#61.#12;	//  scala/actors/scheduler/ForkJoinScheduler."<init>":()V
const #116 = Method	#61.#113;	//  scala/actors/scheduler/ForkJoinScheduler.start:()V
const #117 = Asciz	: starting new ;
const #118 = String	#117;	//  : starting new 
const #119 = Asciz	 [;
const #120 = String	#119;	//   [
const #121 = Asciz	getClass;
const #122 = Asciz	()Ljava/lang/Class;;
const #123 = NameAndType	#121:#122;//  getClass:()Ljava/lang/Class;
const #124 = Method	#18.#123;	//  java/lang/Object.getClass:()Ljava/lang/Class;
const #125 = Asciz	];
const #126 = String	#125;	//  ]
const #127 = Asciz	jvmVendor;
const #128 = Asciz	Ljava/lang/String;;
const #129 = Asciz	s;
const #130 = Asciz	Lscala/actors/scheduler/ResizableThreadPoolScheduler;;
const #131 = Asciz	Lscala/actors/scheduler/ForkJoinScheduler;;
const #132 = Asciz	printActorDump;
const #133 = NameAndType	#132:#25;//  printActorDump:(Lscala/actors/IScheduler;)V
const #134 = Method	#23.#133;	//  scala/actors/IScheduler$class.printActorDump:(Lscala/actors/IScheduler;)V
const #135 = Asciz	onLockup;
const #136 = Asciz	(ILscala/Function0;)V;
const #137 = Asciz	(Lscala/actors/IScheduler;ILscala/Function0;)V;
const #138 = NameAndType	#135:#137;//  onLockup:(Lscala/actors/IScheduler;ILscala/Function0;)V
const #139 = Method	#23.#138;	//  scala/actors/IScheduler$class.onLockup:(Lscala/actors/IScheduler;ILscala/Function0;)V
const #140 = Asciz	millis;
const #141 = Asciz	I;
const #142 = Asciz	handler;
const #143 = Asciz	Lscala/Function0;;
const #144 = Asciz	(Lscala/Function0;)V;
const #145 = Asciz	(Lscala/actors/IScheduler;Lscala/Function0;)V;
const #146 = NameAndType	#135:#145;//  onLockup:(Lscala/actors/IScheduler;Lscala/Function0;)V
const #147 = Method	#23.#146;	//  scala/actors/IScheduler$class.onLockup:(Lscala/actors/IScheduler;Lscala/Function0;)V
const #148 = Asciz	tick;
const #149 = Asciz	(Lscala/actors/Actor;)V;
const #150 = Asciz	(Lscala/actors/IScheduler;Lscala/actors/Actor;)V;
const #151 = NameAndType	#148:#150;//  tick:(Lscala/actors/IScheduler;Lscala/actors/Actor;)V
const #152 = Method	#23.#151;	//  scala/actors/IScheduler$class.tick:(Lscala/actors/IScheduler;Lscala/actors/Actor;)V
const #153 = Asciz	a;
const #154 = Asciz	Lscala/actors/Actor;;
const #155 = Asciz	managedBlock;
const #156 = Asciz	(Lscala/concurrent/ManagedBlocker;)V;
const #157 = Asciz	(Lscala/actors/scheduler/DelegatingScheduler;Lscala/concurrent/ManagedBlocker;)V;
const #158 = NameAndType	#155:#157;//  managedBlock:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/concurrent/ManagedBlocker;)V
const #159 = Method	#29.#158;	//  scala/actors/scheduler/DelegatingScheduler$class.managedBlock:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/concurrent/ManagedBlocker;)V
const #160 = Asciz	blocker;
const #161 = Asciz	Lscala/concurrent/ManagedBlocker;;
const #162 = Asciz	onTerminate;
const #163 = Asciz	(Lscala/actors/Reactor;Lscala/Function0;)V;
const #164 = Asciz	(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/Reactor;Lscala/Function0;)V;
const #165 = NameAndType	#162:#164;//  onTerminate:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/Reactor;Lscala/Function0;)V
const #166 = Method	#29.#165;	//  scala/actors/scheduler/DelegatingScheduler$class.onTerminate:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/Reactor;Lscala/Function0;)V
const #167 = Asciz	actor;
const #168 = Asciz	Lscala/actors/Reactor;;
const #169 = Asciz	f;
const #170 = Asciz	terminated;
const #171 = Asciz	(Lscala/actors/Reactor;)V;
const #172 = Asciz	(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/Reactor;)V;
const #173 = NameAndType	#170:#172;//  terminated:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/Reactor;)V
const #174 = Method	#29.#173;	//  scala/actors/scheduler/DelegatingScheduler$class.terminated:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/Reactor;)V
const #175 = Asciz	newActor;
const #176 = NameAndType	#175:#172;//  newActor:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/Reactor;)V
const #177 = Method	#29.#176;	//  scala/actors/scheduler/DelegatingScheduler$class.newActor:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/Reactor;)V
const #178 = Asciz	shutdown;
const #179 = NameAndType	#178:#30;//  shutdown:(Lscala/actors/scheduler/DelegatingScheduler;)V
const #180 = Method	#29.#179;	//  scala/actors/scheduler/DelegatingScheduler$class.shutdown:(Lscala/actors/scheduler/DelegatingScheduler;)V
const #181 = Asciz	executeFromActor;
const #182 = Asciz	(Ljava/lang/Runnable;)V;
const #183 = Asciz	(Lscala/actors/scheduler/DelegatingScheduler;Ljava/lang/Runnable;)V;
const #184 = NameAndType	#181:#183;//  executeFromActor:(Lscala/actors/scheduler/DelegatingScheduler;Ljava/lang/Runnable;)V
const #185 = Method	#29.#184;	//  scala/actors/scheduler/DelegatingScheduler$class.executeFromActor:(Lscala/actors/scheduler/DelegatingScheduler;Ljava/lang/Runnable;)V
const #186 = Asciz	task;
const #187 = Asciz	Ljava/lang/Runnable;;
const #188 = Asciz	execute;
const #189 = NameAndType	#188:#183;//  execute:(Lscala/actors/scheduler/DelegatingScheduler;Ljava/lang/Runnable;)V
const #190 = Method	#29.#189;	//  scala/actors/scheduler/DelegatingScheduler$class.execute:(Lscala/actors/scheduler/DelegatingScheduler;Ljava/lang/Runnable;)V
const #191 = Asciz	(Lscala/actors/scheduler/DelegatingScheduler;Lscala/Function0;)V;
const #192 = NameAndType	#188:#191;//  execute:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/Function0;)V
const #193 = Method	#29.#192;	//  scala/actors/scheduler/DelegatingScheduler$class.execute:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/Function0;)V
const #194 = Asciz	fun;
const #195 = Asciz	isActive;
const #196 = Asciz	()Z;
const #197 = Asciz	(Lscala/actors/scheduler/DelegatingScheduler;)Z;
const #198 = NameAndType	#195:#197;//  isActive:(Lscala/actors/scheduler/DelegatingScheduler;)Z
const #199 = Method	#29.#198;	//  scala/actors/scheduler/DelegatingScheduler$class.isActive:(Lscala/actors/scheduler/DelegatingScheduler;)Z
const #200 = Asciz	impl_$eq;
const #201 = Asciz	(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/IScheduler;)V;
const #202 = NameAndType	#200:#201;//  impl_$eq:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/IScheduler;)V
const #203 = Method	#29.#202;	//  scala/actors/scheduler/DelegatingScheduler$class.impl_$eq:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/IScheduler;)V
const #204 = Asciz	scheduler;
const #205 = Asciz	impl;
const #206 = Asciz	(Lscala/actors/scheduler/DelegatingScheduler;)Lscala/actors/IScheduler;;
const #207 = NameAndType	#205:#206;//  impl:(Lscala/actors/scheduler/DelegatingScheduler;)Lscala/actors/IScheduler;
const #208 = Method	#29.#207;	//  scala/actors/scheduler/DelegatingScheduler$class.impl:(Lscala/actors/scheduler/DelegatingScheduler;)Lscala/actors/IScheduler;
const #209 = Asciz	sched_$eq;
const #210 = Asciz	scala/actors/scheduler/DelegatingScheduler;
const #211 = class	#210;	//  scala/actors/scheduler/DelegatingScheduler
const #212 = Asciz	scala/ScalaObject;
const #213 = class	#212;	//  scala/ScalaObject

{
public static final scala.actors.Scheduler$ MODULE$;

public static {};
  Code:
   Stack=1, Locals=0, Args_size=0
   0:	new	#10; //class scala/actors/Scheduler$
   3:	invokespecial	#13; //Method "<init>":()V
   6:	return

public void restart();
  Code:
   Stack=3, Locals=2, Args_size=1
   0:	aload_0
   1:	getfield	#59; //Field sched:Lscala/actors/IScheduler;
   4:	instanceof	#61; //class scala/actors/scheduler/ForkJoinScheduler
   7:	ifeq	21
   10:	aload_0
   11:	getfield	#59; //Field sched:Lscala/actors/IScheduler;
   14:	checkcast	#61; //class scala/actors/scheduler/ForkJoinScheduler
   17:	invokevirtual	#63; //Method scala/actors/scheduler/ForkJoinScheduler.restart:()V
   20:	return
   21:	ldc	#65; //String scheduler does not implement restart
   23:	astore_1
   24:	new	#67; //class java/lang/RuntimeException
   27:	dup
   28:	aload_1
   29:	invokespecial	#69; //Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
   32:	athrow
  LineNumberTable: 
   line 58: 0
   line 59: 10
   line 58: 20
   line 61: 21

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      33      0    this       Lscala/actors/Scheduler$;


public void snapshot();
  Code:
   Stack=3, Locals=2, Args_size=1
   0:	aload_0
   1:	getfield	#59; //Field sched:Lscala/actors/IScheduler;
   4:	instanceof	#61; //class scala/actors/scheduler/ForkJoinScheduler
   7:	ifeq	21
   10:	aload_0
   11:	getfield	#59; //Field sched:Lscala/actors/IScheduler;
   14:	checkcast	#61; //class scala/actors/scheduler/ForkJoinScheduler
   17:	invokevirtual	#74; //Method scala/actors/scheduler/ForkJoinScheduler.snapshot:()V
   20:	return
   21:	ldc	#76; //String scheduler does not implement snapshot
   23:	astore_1
   24:	new	#67; //class java/lang/RuntimeException
   27:	dup
   28:	aload_1
   29:	invokespecial	#69; //Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
   32:	athrow
  LineNumberTable: 
   line 48: 0
   line 49: 10
   line 48: 20
   line 51: 21

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      33      0    this       Lscala/actors/Scheduler$;


public scala.actors.IScheduler makeNewScheduler();
  Code:
   Stack=5, Locals=5, Args_size=1
   0:	ldc	#80; //String java.vm.vendor
   2:	invokestatic	#86; //Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
   5:	astore_1
   6:	aload_1
   7:	ldc	#88; //String IBM
   9:	invokevirtual	#94; //Method java/lang/String.indexOf:(Ljava/lang/String;)I
   12:	iconst_m1
   13:	if_icmpeq	74
   16:	getstatic	#37; //Field scala/actors/Debug$.MODULE$:Lscala/actors/Debug$;
   19:	new	#39; //class scala/collection/mutable/StringBuilder
   22:	dup
   23:	invokespecial	#40; //Method scala/collection/mutable/StringBuilder."<init>":()V
   26:	new	#96; //class scala/runtime/StringAdd
   29:	dup
   30:	aload_0
   31:	invokespecial	#99; //Method scala/runtime/StringAdd."<init>":(Ljava/lang/Object;)V
   34:	ldc	#101; //String : running on a 
   36:	invokevirtual	#104; //Method scala/runtime/StringAdd.$plus:(Ljava/lang/String;)Ljava/lang/String;
   39:	invokevirtual	#46; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   42:	aload_1
   43:	invokevirtual	#46; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   46:	ldc	#106; //String  JVM
   48:	invokevirtual	#46; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   51:	invokevirtual	#52; //Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
   54:	invokevirtual	#56; //Method scala/actors/Debug$.info:(Ljava/lang/String;)V
   57:	new	#108; //class scala/actors/scheduler/ResizableThreadPoolScheduler
   60:	dup
   61:	iconst_0
   62:	invokespecial	#111; //Method scala/actors/scheduler/ResizableThreadPoolScheduler."<init>":(Z)V
   65:	astore_2
   66:	aload_2
   67:	invokevirtual	#114; //Method scala/actors/scheduler/ResizableThreadPoolScheduler.start:()V
   70:	aload_2
   71:	goto	87
   74:	new	#61; //class scala/actors/scheduler/ForkJoinScheduler
   77:	dup
   78:	invokespecial	#115; //Method scala/actors/scheduler/ForkJoinScheduler."<init>":()V
   81:	astore_3
   82:	aload_3
   83:	invokevirtual	#116; //Method scala/actors/scheduler/ForkJoinScheduler.start:()V
   86:	aload_3
   87:	astore	4
   89:	getstatic	#37; //Field scala/actors/Debug$.MODULE$:Lscala/actors/Debug$;
   92:	new	#39; //class scala/collection/mutable/StringBuilder
   95:	dup
   96:	invokespecial	#40; //Method scala/collection/mutable/StringBuilder."<init>":()V
   99:	new	#96; //class scala/runtime/StringAdd
   102:	dup
   103:	aload_0
   104:	invokespecial	#99; //Method scala/runtime/StringAdd."<init>":(Ljava/lang/Object;)V
   107:	ldc	#118; //String : starting new 
   109:	invokevirtual	#104; //Method scala/runtime/StringAdd.$plus:(Ljava/lang/String;)Ljava/lang/String;
   112:	invokevirtual	#46; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   115:	aload	4
   117:	invokevirtual	#46; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   120:	ldc	#120; //String  [
   122:	invokevirtual	#46; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   125:	aload	4
   127:	invokevirtual	#124; //Method java/lang/Object.getClass:()Ljava/lang/Class;
   130:	invokevirtual	#46; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   133:	ldc	#126; //String ]
   135:	invokevirtual	#46; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   138:	invokevirtual	#52; //Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
   141:	invokevirtual	#56; //Method scala/actors/Debug$.info:(Ljava/lang/String;)V
   144:	aload	4
   146:	areturn
  LineNumberTable: 
   line 28: 0
   line 29: 6
   line 30: 16
   line 32: 57
   line 34: 66
   line 33: 67
   line 34: 70
   line 36: 74
   line 38: 82
   line 37: 83
   line 38: 86
   line 29: 87
   line 40: 89
   line 41: 144

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      147      0    this       Lscala/actors/Scheduler$;
   6      140      1    jvmVendor       Ljava/lang/String;
   66      5      2    s       Lscala/actors/scheduler/ResizableThreadPoolScheduler;
   82      5      3    s       Lscala/actors/scheduler/ForkJoinScheduler;
   89      57      4    sched       Lscala/actors/IScheduler;


public void printActorDump();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#134; //Method scala/actors/IScheduler$class.printActorDump:(Lscala/actors/IScheduler;)V
   4:	return
  LineNumberTable: 
   line 22: 0


public void onLockup(int, scala.Function0);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	iload_1
   2:	aload_2
   3:	invokestatic	#139; //Method scala/actors/IScheduler$class.onLockup:(Lscala/actors/IScheduler;ILscala/Function0;)V
   6:	return
  LineNumberTable: 
   line 22: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/actors/Scheduler$;
   0      7      1    millis       I
   0      7      2    handler       Lscala/Function0;


public void onLockup(scala.Function0);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#147; //Method scala/actors/IScheduler$class.onLockup:(Lscala/actors/IScheduler;Lscala/Function0;)V
   5:	return
  LineNumberTable: 
   line 22: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/Scheduler$;
   0      6      1    handler       Lscala/Function0;


public void tick(scala.actors.Actor);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#152; //Method scala/actors/IScheduler$class.tick:(Lscala/actors/IScheduler;Lscala/actors/Actor;)V
   5:	return
  LineNumberTable: 
   line 22: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/Scheduler$;
   0      6      1    a       Lscala/actors/Actor;


public void managedBlock(scala.concurrent.ManagedBlocker);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#159; //Method scala/actors/scheduler/DelegatingScheduler$class.managedBlock:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/concurrent/ManagedBlocker;)V
   5:	return
  LineNumberTable: 
   line 22: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/Scheduler$;
   0      6      1    blocker       Lscala/concurrent/ManagedBlocker;


public void onTerminate(scala.actors.Reactor, scala.Function0);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#166; //Method scala/actors/scheduler/DelegatingScheduler$class.onTerminate:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/Reactor;Lscala/Function0;)V
   6:	return
  LineNumberTable: 
   line 22: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/actors/Scheduler$;
   0      7      1    actor       Lscala/actors/Reactor;
   0      7      2    f       Lscala/Function0;


public void terminated(scala.actors.Reactor);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#174; //Method scala/actors/scheduler/DelegatingScheduler$class.terminated:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/Reactor;)V
   5:	return
  LineNumberTable: 
   line 22: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/Scheduler$;
   0      6      1    actor       Lscala/actors/Reactor;


public void newActor(scala.actors.Reactor);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#177; //Method scala/actors/scheduler/DelegatingScheduler$class.newActor:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/Reactor;)V
   5:	return
  LineNumberTable: 
   line 22: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/Scheduler$;
   0      6      1    actor       Lscala/actors/Reactor;


public void shutdown();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#180; //Method scala/actors/scheduler/DelegatingScheduler$class.shutdown:(Lscala/actors/scheduler/DelegatingScheduler;)V
   4:	return
  LineNumberTable: 
   line 22: 0


public void executeFromActor(java.lang.Runnable);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#185; //Method scala/actors/scheduler/DelegatingScheduler$class.executeFromActor:(Lscala/actors/scheduler/DelegatingScheduler;Ljava/lang/Runnable;)V
   5:	return
  LineNumberTable: 
   line 22: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/Scheduler$;
   0      6      1    task       Ljava/lang/Runnable;


public void execute(java.lang.Runnable);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#190; //Method scala/actors/scheduler/DelegatingScheduler$class.execute:(Lscala/actors/scheduler/DelegatingScheduler;Ljava/lang/Runnable;)V
   5:	return
  LineNumberTable: 
   line 22: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/Scheduler$;
   0      6      1    task       Ljava/lang/Runnable;


public void execute(scala.Function0);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#193; //Method scala/actors/scheduler/DelegatingScheduler$class.execute:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/Function0;)V
   5:	return
  LineNumberTable: 
   line 22: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/Scheduler$;
   0      6      1    fun       Lscala/Function0;


public boolean isActive();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#199; //Method scala/actors/scheduler/DelegatingScheduler$class.isActive:(Lscala/actors/scheduler/DelegatingScheduler;)Z
   4:	ireturn
  LineNumberTable: 
   line 22: 0


public final void impl_$eq(scala.actors.IScheduler);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#203; //Method scala/actors/scheduler/DelegatingScheduler$class.impl_$eq:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/IScheduler;)V
   5:	return
  LineNumberTable: 
   line 22: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/Scheduler$;
   0      6      1    scheduler       Lscala/actors/IScheduler;


public final scala.actors.IScheduler impl();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#208; //Method scala/actors/scheduler/DelegatingScheduler$class.impl:(Lscala/actors/scheduler/DelegatingScheduler;)Lscala/actors/IScheduler;
   4:	areturn
  LineNumberTable: 
   line 22: 0


public void sched_$eq(scala.actors.IScheduler);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	putfield	#59; //Field sched:Lscala/actors/IScheduler;
   5:	return
  LineNumberTable: 
   line 22: 0


public scala.actors.IScheduler sched();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#59; //Field sched:Lscala/actors/IScheduler;
   4:	areturn
  LineNumberTable: 
   line 22: 0


}

