public class scala.actors.FJTask$Wrap extends scala.actors.FJTask
  InnerClass: 
   public #18= #4 of #5; //Wrap=class scala/actors/FJTask$Wrap of class scala/actors/FJTask
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Method	#5.#13;	//  scala/actors/FJTask."<init>":()V
const #2 = Field	#4.#14;	//  scala/actors/FJTask$Wrap.runnable:Ljava/lang/Runnable;
const #3 = InterfaceMethod	#15.#16;	//  java/lang/Runnable.run:()V
const #4 = class	#17;	//  scala/actors/FJTask$Wrap
const #5 = class	#20;	//  scala/actors/FJTask
const #6 = Asciz	runnable;
const #7 = Asciz	Ljava/lang/Runnable;;
const #8 = Asciz	<init>;
const #9 = Asciz	(Ljava/lang/Runnable;)V;
const #10 = Asciz	Code;
const #11 = Asciz	run;
const #12 = Asciz	()V;
const #13 = NameAndType	#8:#12;//  "<init>":()V
const #14 = NameAndType	#6:#7;//  runnable:Ljava/lang/Runnable;
const #15 = class	#21;	//  java/lang/Runnable
const #16 = NameAndType	#11:#12;//  run:()V
const #17 = Asciz	scala/actors/FJTask$Wrap;
const #18 = Asciz	Wrap;
const #19 = Asciz	InnerClasses;
const #20 = Asciz	scala/actors/FJTask;
const #21 = Asciz	java/lang/Runnable;

{
protected final java.lang.Runnable runnable;

public scala.actors.FJTask$Wrap(java.lang.Runnable);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	invokespecial	#1; //Method scala/actors/FJTask."<init>":()V
   4:	aload_0
   5:	aload_1
   6:	putfield	#2; //Field runnable:Ljava/lang/Runnable;
   9:	return

public void run();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#2; //Field runnable:Ljava/lang/Runnable;
   4:	invokeinterface	#3,  1; //InterfaceMethod java/lang/Runnable.run:()V
   9:	return

}

