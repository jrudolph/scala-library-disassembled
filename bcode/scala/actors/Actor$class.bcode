Compiled from "Actor.scala"
public abstract class scala.actors.Actor$class extends java.lang.Object
  SourceFile: "Actor.scala"
  Scala: length = 0x
   
  InnerClass: 
   public final #566= #489 of #30; //$anon$5=class scala/actors/Actor$$anon$5 of class scala/actors/Actor
   public final #567= #360 of #30; //$anon$6=class scala/actors/Actor$$anon$6 of class scala/actors/Actor
   public final #568= #249 of #30; //$anon$3=class scala/actors/Actor$$anon$3 of class scala/actors/Actor
   public final #569= #516 of #30; //$anonfun$1=class scala/actors/Actor$$anonfun$1 of class scala/actors/Actor
   public final #570= #503 of #30; //$anonfun$4=class scala/actors/Actor$$anonfun$4 of class scala/actors/Actor
   public final #571= #500 of #30; //$anonfun$6=class scala/actors/Actor$$anonfun$6 of class scala/actors/Actor
   public final #572= #486 of #30; //$anonfun$5=class scala/actors/Actor$$anonfun$5 of class scala/actors/Actor
   public final #573= #483 of #30; //$anonfun$3=class scala/actors/Actor$$anonfun$3 of class scala/actors/Actor
   public final #574= #468 of #30; //$anonfun$2=class scala/actors/Actor$$anonfun$2 of class scala/actors/Actor
   public final #575= #391 of #30; //$anonfun$9=class scala/actors/Actor$$anonfun$9 of class scala/actors/Actor
   public final #576= #338 of #30; //$anonfun$8=class scala/actors/Actor$$anonfun$8 of class scala/actors/Actor
   public final #577= #333 of #30; //$anonfun$7=class scala/actors/Actor$$anonfun$7 of class scala/actors/Actor
   public final #578= #388 of #30; //$anonfun$11=class scala/actors/Actor$$anonfun$11 of class scala/actors/Actor
   public final #579= #348 of #30; //$anonfun$10=class scala/actors/Actor$$anonfun$10 of class scala/actors/Actor
   public final #580= #152 of #30; //$anonfun$12=class scala/actors/Actor$$anonfun$12 of class scala/actors/Actor
   public final #581= #263 of #30; //$anonfun$link$1=class scala/actors/Actor$$anonfun$link$1 of class scala/actors/Actor
   public final #582= #244 of #30; //$anonfun$link$2=class scala/actors/Actor$$anonfun$link$2 of class scala/actors/Actor
   public final #583= #450 of #30; //$anonfun$react$2=class scala/actors/Actor$$anonfun$react$2 of class scala/actors/Actor
   public final #584= #447 of #30; //$anonfun$react$1=class scala/actors/Actor$$anonfun$react$1 of class scala/actors/Actor
   public final #585= #302 of #30; //$anonfun$$qmark$1=class scala/actors/Actor$$anonfun$$qmark$1 of class scala/actors/Actor
   public final #586= #209 of #30; //$anonfun$unlink$1=class scala/actors/Actor$$anonfun$unlink$1 of class scala/actors/Actor
   public final #587= #519 of #30; //$anonfun$receive$2=class scala/actors/Actor$$anonfun$receive$2 of class scala/actors/Actor
   public final #588= #513 of #30; //$anonfun$receive$1=class scala/actors/Actor$$anonfun$receive$1 of class scala/actors/Actor
   public final #589= #199 of #30; //$anonfun$unlinkFrom$1=class scala/actors/Actor$$anonfun$unlinkFrom$1 of class scala/actors/Actor
   public final #590= #164 of #30; //$anonfun$exitLinked$1=class scala/actors/Actor$$anonfun$exitLinked$1 of class scala/actors/Actor
   public final #591= #545 of #30; //$anonfun$startSearch$1=class scala/actors/Actor$$anonfun$startSearch$1 of class scala/actors/Actor
   public final #592= #324 of #30; //$anonfun$reactWithin$2=class scala/actors/Actor$$anonfun$reactWithin$2 of class scala/actors/Actor
   public final #593= #311 of #30; //$anonfun$reactWithin$1=class scala/actors/Actor$$anonfun$reactWithin$1 of class scala/actors/Actor
   public final #594= #465 of #30; //$anonfun$receiveWithin$2=class scala/actors/Actor$$anonfun$receiveWithin$2 of class scala/actors/Actor
   public final #595= #460 of #30; //$anonfun$receiveWithin$1=class scala/actors/Actor$$anonfun$receiveWithin$1 of class scala/actors/Actor
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Actor.scala;
const #3 = Asciz	<clinit>;
const #4 = Asciz	()V;
const #5 = Asciz	Code;
const #6 = Asciz	scala/Symbol$;
const #7 = class	#6;	//  scala/Symbol$
const #8 = Asciz	MODULE$;
const #9 = Asciz	Lscala/Symbol$;;
const #10 = NameAndType	#8:#9;//  MODULE$:Lscala/Symbol$;
const #11 = Field	#7.#10;	//  scala/Symbol$.MODULE$:Lscala/Symbol$;
const #12 = Asciz	LineNumberTable;
const #13 = Asciz	normal;
const #14 = String	#13;	//  normal
const #15 = Asciz	apply;
const #16 = Asciz	(Ljava/lang/Object;)Ljava/lang/Object;;
const #17 = NameAndType	#15:#16;//  apply:(Ljava/lang/Object;)Ljava/lang/Object;
const #18 = Method	#7.#17;	//  scala/Symbol$.apply:(Ljava/lang/Object;)Ljava/lang/Object;
const #19 = Asciz	scala/Symbol;
const #20 = class	#19;	//  scala/Symbol
const #21 = Asciz	scala/actors/Actor$class;
const #22 = class	#21;	//  scala/actors/Actor$class
const #23 = Asciz	symbol$1;
const #24 = Asciz	Lscala/Symbol;;
const #25 = NameAndType	#23:#24;//  symbol$1:Lscala/Symbol;
const #26 = Field	#22.#25;	//  scala/actors/Actor$class.symbol$1:Lscala/Symbol;
const #27 = Asciz	$init$;
const #28 = Asciz	(Lscala/actors/Actor;)V;
const #29 = Asciz	scala/actors/Actor;
const #30 = class	#29;	//  scala/actors/Actor
const #31 = Asciz	scala$actors$Actor$$isSuspended_$eq;
const #32 = Asciz	(Z)V;
const #33 = NameAndType	#31:#32;//  scala$actors$Actor$$isSuspended_$eq:(Z)V
const #34 = InterfaceMethod	#30.#33;	//  scala/actors/Actor.scala$actors$Actor$$isSuspended_$eq:(Z)V
const #35 = Asciz	scala/None$;
const #36 = class	#35;	//  scala/None$
const #37 = Asciz	Lscala/None$;;
const #38 = NameAndType	#8:#37;//  MODULE$:Lscala/None$;
const #39 = Field	#36.#38;	//  scala/None$.MODULE$:Lscala/None$;
const #40 = Asciz	scala$actors$Actor$$received_$eq;
const #41 = Asciz	(Lscala/Option;)V;
const #42 = NameAndType	#40:#41;//  scala$actors$Actor$$received_$eq:(Lscala/Option;)V
const #43 = InterfaceMethod	#30.#42;	//  scala/actors/Actor.scala$actors$Actor$$received_$eq:(Lscala/Option;)V
const #44 = Asciz	scala$actors$Actor$$onTimeout_$eq;
const #45 = NameAndType	#44:#41;//  scala$actors$Actor$$onTimeout_$eq:(Lscala/Option;)V
const #46 = InterfaceMethod	#30.#45;	//  scala/actors/Actor.scala$actors$Actor$$onTimeout_$eq:(Lscala/Option;)V
const #47 = Asciz	scala/collection/immutable/Nil$;
const #48 = class	#47;	//  scala/collection/immutable/Nil$
const #49 = Asciz	Lscala/collection/immutable/Nil$;;
const #50 = NameAndType	#8:#49;//  MODULE$:Lscala/collection/immutable/Nil$;
const #51 = Field	#48.#50;	//  scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
const #52 = Asciz	links_$eq;
const #53 = Asciz	(Lscala/collection/immutable/List;)V;
const #54 = NameAndType	#52:#53;//  links_$eq:(Lscala/collection/immutable/List;)V
const #55 = InterfaceMethod	#30.#54;	//  scala/actors/Actor.links_$eq:(Lscala/collection/immutable/List;)V
const #56 = Asciz	trapExit_$eq;
const #57 = NameAndType	#56:#32;//  trapExit_$eq:(Z)V
const #58 = InterfaceMethod	#30.#57;	//  scala/actors/Actor.trapExit_$eq:(Z)V
const #59 = Asciz	exitReason_$eq;
const #60 = Asciz	(Ljava/lang/Object;)V;
const #61 = NameAndType	#59:#60;//  exitReason_$eq:(Ljava/lang/Object;)V
const #62 = InterfaceMethod	#30.#61;	//  scala/actors/Actor.exitReason_$eq:(Ljava/lang/Object;)V
const #63 = Asciz	shouldExit_$eq;
const #64 = NameAndType	#63:#32;//  shouldExit_$eq:(Z)V
const #65 = InterfaceMethod	#30.#64;	//  scala/actors/Actor.shouldExit_$eq:(Z)V
const #66 = Asciz	$this;
const #67 = Asciz	Lscala/actors/Actor;;
const #68 = Asciz	LocalVariableTable;
const #69 = Asciz	liftedTree1$1;
const #70 = Asciz	java/lang/Object;
const #71 = class	#70;	//  java/lang/Object
const #72 = Asciz	wait;
const #73 = NameAndType	#72:#4;//  wait:()V
const #74 = Method	#71.#73;	//  java/lang/Object.wait:()V
const #75 = Asciz	java/lang/InterruptedException;
const #76 = class	#75;	//  java/lang/InterruptedException
const #77 = Asciz	onTerminate;
const #78 = Asciz	(Lscala/actors/Actor;Lscala/Function0;)V;
const #79 = Asciz	scheduler;
const #80 = Asciz	()Lscala/actors/IScheduler;;
const #81 = NameAndType	#79:#80;//  scheduler:()Lscala/actors/IScheduler;
const #82 = InterfaceMethod	#30.#81;	//  scala/actors/Actor.scheduler:()Lscala/actors/IScheduler;
const #83 = Asciz	scala/actors/IScheduler;
const #84 = class	#83;	//  scala/actors/IScheduler
const #85 = Asciz	(Lscala/actors/Reactor;Lscala/Function0;)V;
const #86 = NameAndType	#77:#85;//  onTerminate:(Lscala/actors/Reactor;Lscala/Function0;)V
const #87 = InterfaceMethod	#84.#86;	//  scala/actors/IScheduler.onTerminate:(Lscala/actors/Reactor;Lscala/Function0;)V
const #88 = Asciz	f;
const #89 = Asciz	Lscala/Function0;;
const #90 = Asciz	exit;
const #91 = Asciz	(Lscala/actors/Actor;Lscala/actors/AbstractActor;Ljava/lang/Object;)V;
const #92 = Asciz	trapExit;
const #93 = Asciz	()Z;
const #94 = NameAndType	#92:#93;//  trapExit:()Z
const #95 = InterfaceMethod	#30.#94;	//  scala/actors/Actor.trapExit:()Z
const #96 = Asciz	scala/actors/Exit;
const #97 = class	#96;	//  scala/actors/Exit
const #98 = Asciz	<init>;
const #99 = Asciz	(Lscala/actors/AbstractActor;Ljava/lang/Object;)V;
const #100 = NameAndType	#98:#99;//  "<init>":(Lscala/actors/AbstractActor;Ljava/lang/Object;)V
const #101 = Method	#97.#100;	//  scala/actors/Exit."<init>":(Lscala/actors/AbstractActor;Ljava/lang/Object;)V
const #102 = Asciz	scala/actors/ReplyReactor;
const #103 = class	#102;	//  scala/actors/ReplyReactor
const #104 = Asciz	$bang;
const #105 = NameAndType	#104:#60;//  $bang:(Ljava/lang/Object;)V
const #106 = InterfaceMethod	#103.#105;	//  scala/actors/ReplyReactor.$bang:(Ljava/lang/Object;)V
const #107 = Asciz	equals;
const #108 = Asciz	(Ljava/lang/Object;)Z;
const #109 = NameAndType	#107:#108;//  equals:(Ljava/lang/Object;)Z
const #110 = Method	#71.#109;	//  java/lang/Object.equals:(Ljava/lang/Object;)Z
const #111 = Asciz	scala$actors$Actor$$isSuspended;
const #112 = NameAndType	#111:#93;//  scala$actors$Actor$$isSuspended:()Z
const #113 = InterfaceMethod	#30.#112;	//  scala/actors/Actor.scala$actors$Actor$$isSuspended:()Z
const #114 = Asciz	scala$actors$Actor$$resumeActor;
const #115 = NameAndType	#114:#28;//  scala$actors$Actor$$resumeActor:(Lscala/actors/Actor;)V
const #116 = Method	#22.#115;	//  scala/actors/Actor$class.scala$actors$Actor$$resumeActor:(Lscala/actors/Actor;)V
const #117 = Asciz	scala/actors/Reactor;
const #118 = class	#117;	//  scala/actors/Reactor
const #119 = Asciz	waitingFor;
const #120 = Asciz	()Lscala/Function1;;
const #121 = NameAndType	#119:#120;//  waitingFor:()Lscala/Function1;
const #122 = InterfaceMethod	#118.#121;	//  scala/actors/Reactor.waitingFor:()Lscala/Function1;
const #123 = Asciz	waitingForNone;
const #124 = NameAndType	#123:#120;//  waitingForNone:()Lscala/Function1;
const #125 = InterfaceMethod	#118.#124;	//  scala/actors/Reactor.waitingForNone:()Lscala/Function1;
const #126 = Asciz	continuation;
const #127 = Asciz	()Lscala/PartialFunction;;
const #128 = NameAndType	#126:#127;//  continuation:()Lscala/PartialFunction;
const #129 = InterfaceMethod	#118.#128;	//  scala/actors/Reactor.continuation:()Lscala/PartialFunction;
const #130 = Asciz	scheduleActor;
const #131 = Asciz	(Lscala/PartialFunction;Ljava/lang/Object;)V;
const #132 = NameAndType	#130:#131;//  scheduleActor:(Lscala/PartialFunction;Ljava/lang/Object;)V
const #133 = InterfaceMethod	#30.#132;	//  scala/actors/Actor.scheduleActor:(Lscala/PartialFunction;Ljava/lang/Object;)V
const #134 = Asciz	from;
const #135 = Asciz	Lscala/actors/AbstractActor;;
const #136 = Asciz	reason;
const #137 = Asciz	Ljava/lang/Object;;
const #138 = Asciz	exitLinked;
const #139 = Asciz	(Lscala/actors/Actor;Ljava/lang/Object;)V;
const #140 = NameAndType	#138:#4;//  exitLinked:()V
const #141 = InterfaceMethod	#30.#140;	//  scala/actors/Actor.exitLinked:()V
const #142 = Asciz	scala/actors/AbstractActor;
const #143 = class	#142;	//  scala/actors/AbstractActor
const #144 = Asciz	exiting_$eq;
const #145 = NameAndType	#144:#32;//  exiting_$eq:(Z)V
const #146 = InterfaceMethod	#143.#145;	//  scala/actors/AbstractActor.exiting_$eq:(Z)V
const #147 = Asciz	links;
const #148 = Asciz	()Lscala/collection/immutable/List;;
const #149 = NameAndType	#147:#148;//  links:()Lscala/collection/immutable/List;
const #150 = InterfaceMethod	#30.#149;	//  scala/actors/Actor.links:()Lscala/collection/immutable/List;
const #151 = Asciz	scala/actors/Actor$$anonfun$12;
const #152 = class	#151;	//  scala/actors/Actor$$anonfun$12
const #153 = NameAndType	#98:#28;//  "<init>":(Lscala/actors/Actor;)V
const #154 = Method	#152.#153;	//  scala/actors/Actor$$anonfun$12."<init>":(Lscala/actors/Actor;)V
const #155 = Asciz	scala/collection/TraversableLike;
const #156 = class	#155;	//  scala/collection/TraversableLike
const #157 = Asciz	filterNot;
const #158 = Asciz	(Lscala/Function1;)Ljava/lang/Object;;
const #159 = NameAndType	#157:#158;//  filterNot:(Lscala/Function1;)Ljava/lang/Object;
const #160 = InterfaceMethod	#156.#159;	//  scala/collection/TraversableLike.filterNot:(Lscala/Function1;)Ljava/lang/Object;
const #161 = Asciz	scala/collection/immutable/List;
const #162 = class	#161;	//  scala/collection/immutable/List
const #163 = Asciz	scala/actors/Actor$$anonfun$exitLinked$1;
const #164 = class	#163;	//  scala/actors/Actor$$anonfun$exitLinked$1
const #165 = Method	#164.#153;	//  scala/actors/Actor$$anonfun$exitLinked$1."<init>":(Lscala/actors/Actor;)V
const #166 = Asciz	scala/collection/LinearSeqLike;
const #167 = class	#166;	//  scala/collection/LinearSeqLike
const #168 = Asciz	foreach;
const #169 = Asciz	(Lscala/Function1;)V;
const #170 = NameAndType	#168:#169;//  foreach:(Lscala/Function1;)V
const #171 = InterfaceMethod	#167.#170;	//  scala/collection/LinearSeqLike.foreach:(Lscala/Function1;)V
const #172 = Asciz	mylinks;
const #173 = Asciz	Lscala/collection/immutable/List;;
const #174 = Asciz	(Lscala/actors/Actor;)Lscala/runtime/Nothing$;;
const #175 = Asciz	scala/collection/IterableLike;
const #176 = class	#175;	//  scala/collection/IterableLike
const #177 = Asciz	isEmpty;
const #178 = NameAndType	#177:#93;//  isEmpty:()Z
const #179 = InterfaceMethod	#176.#178;	//  scala/collection/IterableLike.isEmpty:()Z
const #180 = Asciz	terminated;
const #181 = NameAndType	#180:#4;//  terminated:()V
const #182 = InterfaceMethod	#118.#181;	//  scala/actors/Reactor.terminated:()V
const #183 = Asciz	scala/actors/Actor$;
const #184 = class	#183;	//  scala/actors/Actor$
const #185 = Asciz	Lscala/actors/Actor$;;
const #186 = NameAndType	#8:#185;//  MODULE$:Lscala/actors/Actor$;
const #187 = Field	#184.#186;	//  scala/actors/Actor$.MODULE$:Lscala/actors/Actor$;
const #188 = Asciz	suspendException;
const #189 = Asciz	()Lscala/actors/SuspendActorException;;
const #190 = NameAndType	#188:#189;//  suspendException:()Lscala/actors/SuspendActorException;
const #191 = Method	#184.#190;	//  scala/actors/Actor$.suspendException:()Lscala/actors/SuspendActorException;
const #192 = Asciz	(Lscala/actors/Actor;Ljava/lang/Object;)Lscala/runtime/Nothing$;;
const #193 = Asciz	()Lscala/runtime/Nothing$;;
const #194 = NameAndType	#90:#193;//  exit:()Lscala/runtime/Nothing$;
const #195 = InterfaceMethod	#30.#194;	//  scala/actors/Actor.exit:()Lscala/runtime/Nothing$;
const #196 = Asciz	unlinkFrom;
const #197 = Asciz	(Lscala/actors/Actor;Lscala/actors/AbstractActor;)V;
const #198 = Asciz	scala/actors/Actor$$anonfun$unlinkFrom$1;
const #199 = class	#198;	//  scala/actors/Actor$$anonfun$unlinkFrom$1
const #200 = NameAndType	#98:#197;//  "<init>":(Lscala/actors/Actor;Lscala/actors/AbstractActor;)V
const #201 = Method	#199.#200;	//  scala/actors/Actor$$anonfun$unlinkFrom$1."<init>":(Lscala/actors/Actor;Lscala/actors/AbstractActor;)V
const #202 = Asciz	from$2;
const #203 = Asciz	unlink;
const #204 = Asciz	rawSelf;
const #205 = Asciz	(Lscala/actors/IScheduler;)Lscala/actors/Reactor;;
const #206 = NameAndType	#204:#205;//  rawSelf:(Lscala/actors/IScheduler;)Lscala/actors/Reactor;
const #207 = Method	#184.#206;	//  scala/actors/Actor$.rawSelf:(Lscala/actors/IScheduler;)Lscala/actors/Reactor;
const #208 = Asciz	scala/actors/Actor$$anonfun$unlink$1;
const #209 = class	#208;	//  scala/actors/Actor$$anonfun$unlink$1
const #210 = Method	#209.#153;	//  scala/actors/Actor$$anonfun$unlink$1."<init>":(Lscala/actors/Actor;)V
const #211 = Asciz	java/lang/AssertionError;
const #212 = class	#211;	//  java/lang/AssertionError
const #213 = Asciz	scala/collection/mutable/StringBuilder;
const #214 = class	#213;	//  scala/collection/mutable/StringBuilder
const #215 = NameAndType	#98:#4;//  "<init>":()V
const #216 = Method	#214.#215;	//  scala/collection/mutable/StringBuilder."<init>":()V
const #217 = Asciz	assertion failed: ;
const #218 = String	#217;	//  assertion failed: 
const #219 = Asciz	append;
const #220 = Asciz	(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;;
const #221 = NameAndType	#219:#220;//  append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
const #222 = Method	#214.#221;	//  scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
const #223 = Asciz	unlink called on actor different from self;
const #224 = String	#223;	//  unlink called on actor different from self
const #225 = Asciz	toString;
const #226 = Asciz	()Ljava/lang/String;;
const #227 = NameAndType	#225:#226;//  toString:()Ljava/lang/String;
const #228 = Method	#214.#227;	//  scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
const #229 = NameAndType	#98:#60;//  "<init>":(Ljava/lang/Object;)V
const #230 = Method	#212.#229;	//  java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
const #231 = Asciz	(Lscala/actors/AbstractActor;)V;
const #232 = NameAndType	#196:#231;//  unlinkFrom:(Lscala/actors/AbstractActor;)V
const #233 = InterfaceMethod	#30.#232;	//  scala/actors/Actor.unlinkFrom:(Lscala/actors/AbstractActor;)V
const #234 = InterfaceMethod	#143.#232;	//  scala/actors/AbstractActor.unlinkFrom:(Lscala/actors/AbstractActor;)V
const #235 = Asciz	linkTo;
const #236 = Asciz	$colon$colon;
const #237 = Asciz	(Ljava/lang/Object;)Lscala/collection/immutable/List;;
const #238 = NameAndType	#236:#237;//  $colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
const #239 = Method	#162.#238;	//  scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
const #240 = Asciz	to;
const #241 = Asciz	link;
const #242 = Asciz	(Lscala/actors/Actor;Lscala/Function0;)Lscala/actors/Actor;;
const #243 = Asciz	scala/actors/Actor$$anonfun$link$2;
const #244 = class	#243;	//  scala/actors/Actor$$anonfun$link$2
const #245 = Method	#244.#153;	//  scala/actors/Actor$$anonfun$link$2."<init>":(Lscala/actors/Actor;)V
const #246 = Asciz	link called on actor different from self;
const #247 = String	#246;	//  link called on actor different from self
const #248 = Asciz	scala/actors/Actor$$anon$3;
const #249 = class	#248;	//  scala/actors/Actor$$anon$3
const #250 = NameAndType	#98:#78;//  "<init>":(Lscala/actors/Actor;Lscala/Function0;)V
const #251 = Method	#249.#250;	//  scala/actors/Actor$$anon$3."<init>":(Lscala/actors/Actor;Lscala/Function0;)V
const #252 = Asciz	(Lscala/actors/AbstractActor;)Lscala/actors/AbstractActor;;
const #253 = NameAndType	#241:#252;//  link:(Lscala/actors/AbstractActor;)Lscala/actors/AbstractActor;
const #254 = InterfaceMethod	#30.#253;	//  scala/actors/Actor.link:(Lscala/actors/AbstractActor;)Lscala/actors/AbstractActor;
const #255 = Asciz	start;
const #256 = Asciz	()Lscala/actors/Actor;;
const #257 = NameAndType	#255:#256;//  start:()Lscala/actors/Actor;
const #258 = InterfaceMethod	#30.#257;	//  scala/actors/Actor.start:()Lscala/actors/Actor;
const #259 = Asciz	body$6;
const #260 = Asciz	a;
const #261 = Asciz	(Lscala/actors/Actor;Lscala/actors/AbstractActor;)Lscala/actors/AbstractActor;;
const #262 = Asciz	scala/actors/Actor$$anonfun$link$1;
const #263 = class	#262;	//  scala/actors/Actor$$anonfun$link$1
const #264 = Method	#263.#153;	//  scala/actors/Actor$$anonfun$link$1."<init>":(Lscala/actors/Actor;)V
const #265 = NameAndType	#235:#231;//  linkTo:(Lscala/actors/AbstractActor;)V
const #266 = InterfaceMethod	#30.#265;	//  scala/actors/Actor.linkTo:(Lscala/actors/AbstractActor;)V
const #267 = InterfaceMethod	#143.#265;	//  scala/actors/AbstractActor.linkTo:(Lscala/actors/AbstractActor;)V
const #268 = Asciz	(Lscala/actors/Actor;)Lscala/actors/Actor;;
const #269 = Asciz	newActor;
const #270 = Asciz	(Lscala/actors/Reactor;)V;
const #271 = NameAndType	#269:#270;//  newActor:(Lscala/actors/Reactor;)V
const #272 = InterfaceMethod	#84.#271;	//  scala/actors/IScheduler.newActor:(Lscala/actors/Reactor;)V
const #273 = Asciz	scala/actors/Reaction;
const #274 = class	#273;	//  scala/actors/Reaction
const #275 = Method	#274.#153;	//  scala/actors/Reaction."<init>":(Lscala/actors/Actor;)V
const #276 = Asciz	execute;
const #277 = Asciz	(Ljava/lang/Runnable;)V;
const #278 = NameAndType	#276:#277;//  execute:(Ljava/lang/Runnable;)V
const #279 = InterfaceMethod	#84.#278;	//  scala/actors/IScheduler.execute:(Ljava/lang/Runnable;)V
const #280 = Asciz	notify;
const #281 = NameAndType	#280:#4;//  notify:()V
const #282 = Method	#71.#281;	//  java/lang/Object.notify:()V
const #283 = Asciz	scala$actors$Actor$$suspendActor;
const #284 = NameAndType	#69:#28;//  liftedTree1$1:(Lscala/actors/Actor;)V
const #285 = Method	#22.#284;	//  scala/actors/Actor$class.liftedTree1$1:(Lscala/actors/Actor;)V
const #286 = Asciz	shouldExit;
const #287 = NameAndType	#286:#93;//  shouldExit:()Z
const #288 = InterfaceMethod	#30.#287;	//  scala/actors/Actor.shouldExit:()Z
const #289 = Asciz	(Lscala/actors/Actor;Lscala/PartialFunction;Ljava/lang/Object;)V;
const #290 = NameAndType	#98:#289;//  "<init>":(Lscala/actors/Actor;Lscala/PartialFunction;Ljava/lang/Object;)V
const #291 = Method	#274.#290;	//  scala/actors/Reaction."<init>":(Lscala/actors/Actor;Lscala/PartialFunction;Ljava/lang/Object;)V
const #292 = Asciz	executeFromActor;
const #293 = NameAndType	#292:#277;//  executeFromActor:(Ljava/lang/Runnable;)V
const #294 = InterfaceMethod	#84.#293;	//  scala/actors/IScheduler.executeFromActor:(Ljava/lang/Runnable;)V
const #295 = Asciz	Lscala/PartialFunction;;
const #296 = Asciz	msg;
const #297 = Asciz	task;
const #298 = Asciz	Lscala/actors/Reaction;;
const #299 = Asciz	$qmark;
const #300 = Asciz	(Lscala/actors/Actor;)Ljava/lang/Object;;
const #301 = Asciz	scala/actors/Actor$$anonfun$$qmark$1;
const #302 = class	#301;	//  scala/actors/Actor$$anonfun$$qmark$1
const #303 = Method	#302.#153;	//  scala/actors/Actor$$anonfun$$qmark$1."<init>":(Lscala/actors/Actor;)V
const #304 = Asciz	receive;
const #305 = Asciz	(Lscala/PartialFunction;)Ljava/lang/Object;;
const #306 = NameAndType	#304:#305;//  receive:(Lscala/PartialFunction;)Ljava/lang/Object;
const #307 = InterfaceMethod	#30.#306;	//  scala/actors/Actor.receive:(Lscala/PartialFunction;)Ljava/lang/Object;
const #308 = Asciz	reactWithin;
const #309 = Asciz	(Lscala/actors/Actor;JLscala/PartialFunction;)Lscala/runtime/Nothing$;;
const #310 = Asciz	scala/actors/Actor$$anonfun$reactWithin$1;
const #311 = class	#310;	//  scala/actors/Actor$$anonfun$reactWithin$1
const #312 = Method	#311.#153;	//  scala/actors/Actor$$anonfun$reactWithin$1."<init>":(Lscala/actors/Actor;)V
const #313 = Asciz	react on channel belonging to other actor;
const #314 = String	#313;	//  react on channel belonging to other actor
const #315 = Asciz	mailbox;
const #316 = Asciz	()Lscala/actors/MQueue;;
const #317 = NameAndType	#315:#316;//  mailbox:()Lscala/actors/MQueue;
const #318 = InterfaceMethod	#118.#317;	//  scala/actors/Reactor.mailbox:()Lscala/actors/MQueue;
const #319 = Asciz	drainSendBuffer;
const #320 = Asciz	(Lscala/actors/MQueue;)V;
const #321 = NameAndType	#319:#320;//  drainSendBuffer:(Lscala/actors/MQueue;)V
const #322 = InterfaceMethod	#118.#321;	//  scala/actors/Reactor.drainSendBuffer:(Lscala/actors/MQueue;)V
const #323 = Asciz	scala/actors/Actor$$anonfun$reactWithin$2;
const #324 = class	#323;	//  scala/actors/Actor$$anonfun$reactWithin$2
const #325 = Method	#324.#153;	//  scala/actors/Actor$$anonfun$reactWithin$2."<init>":(Lscala/actors/Actor;)V
const #326 = Asciz	scala/actors/MQueue;
const #327 = class	#326;	//  scala/actors/MQueue
const #328 = Asciz	extractFirst;
const #329 = Asciz	(Lscala/Function2;)Lscala/actors/MQueueElement;;
const #330 = NameAndType	#328:#329;//  extractFirst:(Lscala/Function2;)Lscala/actors/MQueueElement;
const #331 = Method	#327.#330;	//  scala/actors/MQueue.extractFirst:(Lscala/Function2;)Lscala/actors/MQueueElement;
const #332 = Asciz	scala/actors/Actor$$anonfun$7;
const #333 = class	#332;	//  scala/actors/Actor$$anonfun$7
const #334 = Asciz	(Lscala/actors/Actor;Lscala/PartialFunction;)V;
const #335 = NameAndType	#98:#334;//  "<init>":(Lscala/actors/Actor;Lscala/PartialFunction;)V
const #336 = Method	#333.#335;	//  scala/actors/Actor$$anonfun$7."<init>":(Lscala/actors/Actor;Lscala/PartialFunction;)V
const #337 = Asciz	scala/actors/Actor$$anonfun$8;
const #338 = class	#337;	//  scala/actors/Actor$$anonfun$8
const #339 = Method	#338.#335;	//  scala/actors/Actor$$anonfun$8."<init>":(Lscala/actors/Actor;Lscala/PartialFunction;)V
const #340 = Asciz	sendBuffer;
const #341 = Asciz	()Lscala/collection/mutable/Queue;;
const #342 = NameAndType	#340:#341;//  sendBuffer:()Lscala/collection/mutable/Queue;
const #343 = InterfaceMethod	#118.#342;	//  scala/actors/Reactor.sendBuffer:()Lscala/collection/mutable/Queue;
const #344 = Asciz	scala/collection/mutable/Queue;
const #345 = class	#344;	//  scala/collection/mutable/Queue
const #346 = Method	#345.#178;	//  scala/collection/mutable/Queue.isEmpty:()Z
const #347 = Asciz	scala/actors/Actor$$anonfun$10;
const #348 = class	#347;	//  scala/actors/Actor$$anonfun$10
const #349 = Method	#348.#335;	//  scala/actors/Actor$$anonfun$10."<init>":(Lscala/actors/Actor;Lscala/PartialFunction;)V
const #350 = Asciz	waitingFor_$eq;
const #351 = NameAndType	#350:#169;//  waitingFor_$eq:(Lscala/Function1;)V
const #352 = InterfaceMethod	#118.#351;	//  scala/actors/Reactor.waitingFor_$eq:(Lscala/Function1;)V
const #353 = Asciz	continuation_$eq;
const #354 = Asciz	(Lscala/PartialFunction;)V;
const #355 = NameAndType	#353:#354;//  continuation_$eq:(Lscala/PartialFunction;)V
const #356 = InterfaceMethod	#118.#355;	//  scala/actors/Reactor.continuation_$eq:(Lscala/PartialFunction;)V
const #357 = Asciz	scala/Some;
const #358 = class	#357;	//  scala/Some
const #359 = Asciz	scala/actors/Actor$$anon$6;
const #360 = class	#359;	//  scala/actors/Actor$$anon$6
const #361 = Asciz	(Lscala/actors/Actor;Lscala/actors/Actor;)V;
const #362 = NameAndType	#98:#361;//  "<init>":(Lscala/actors/Actor;Lscala/actors/Actor;)V
const #363 = Method	#360.#362;	//  scala/actors/Actor$$anon$6."<init>":(Lscala/actors/Actor;Lscala/actors/Actor;)V
const #364 = Method	#358.#229;	//  scala/Some."<init>":(Ljava/lang/Object;)V
const #365 = Asciz	timer;
const #366 = Asciz	()Ljava/util/Timer;;
const #367 = NameAndType	#365:#366;//  timer:()Ljava/util/Timer;
const #368 = Method	#184.#367;	//  scala/actors/Actor$.timer:()Ljava/util/Timer;
const #369 = Asciz	scala$actors$Actor$$onTimeout;
const #370 = Asciz	()Lscala/Option;;
const #371 = NameAndType	#369:#370;//  scala$actors$Actor$$onTimeout:()Lscala/Option;
const #372 = InterfaceMethod	#30.#371;	//  scala/actors/Actor.scala$actors$Actor$$onTimeout:()Lscala/Option;
const #373 = Asciz	scala/Option;
const #374 = class	#373;	//  scala/Option
const #375 = Asciz	get;
const #376 = Asciz	()Ljava/lang/Object;;
const #377 = NameAndType	#375:#376;//  get:()Ljava/lang/Object;
const #378 = Method	#374.#377;	//  scala/Option.get:()Ljava/lang/Object;
const #379 = Asciz	java/util/TimerTask;
const #380 = class	#379;	//  java/util/TimerTask
const #381 = Asciz	java/util/Timer;
const #382 = class	#381;	//  java/util/Timer
const #383 = Asciz	schedule;
const #384 = Asciz	(Ljava/util/TimerTask;J)V;
const #385 = NameAndType	#383:#384;//  schedule:(Ljava/util/TimerTask;J)V
const #386 = Method	#382.#385;	//  java/util/Timer.schedule:(Ljava/util/TimerTask;J)V
const #387 = Asciz	scala/actors/Actor$$anonfun$11;
const #388 = class	#387;	//  scala/actors/Actor$$anonfun$11
const #389 = Method	#388.#153;	//  scala/actors/Actor$$anonfun$11."<init>":(Lscala/actors/Actor;)V
const #390 = Asciz	scala/actors/Actor$$anonfun$9;
const #391 = class	#390;	//  scala/actors/Actor$$anonfun$9
const #392 = Method	#391.#153;	//  scala/actors/Actor$$anonfun$9."<init>":(Lscala/actors/Actor;)V
const #393 = Asciz	scala/Function0;
const #394 = class	#393;	//  scala/Function0
const #395 = NameAndType	#15:#376;//  apply:()Ljava/lang/Object;
const #396 = InterfaceMethod	#394.#395;	//  scala/Function0.apply:()Ljava/lang/Object;
const #397 = Asciz	scala/collection/immutable/List$;
const #398 = class	#397;	//  scala/collection/immutable/List$
const #399 = Asciz	Lscala/collection/immutable/List$;;
const #400 = NameAndType	#8:#399;//  MODULE$:Lscala/collection/immutable/List$;
const #401 = Field	#398.#400;	//  scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
const #402 = Asciz	scala/Predef$;
const #403 = class	#402;	//  scala/Predef$
const #404 = Asciz	Lscala/Predef$;;
const #405 = NameAndType	#8:#404;//  MODULE$:Lscala/Predef$;
const #406 = Field	#403.#405;	//  scala/Predef$.MODULE$:Lscala/Predef$;
const #407 = Asciz	scala/actors/OutputChannel;
const #408 = class	#407;	//  scala/actors/OutputChannel
const #409 = Asciz	scala/actors/MQueueElement;
const #410 = class	#409;	//  scala/actors/MQueueElement
const #411 = Asciz	session;
const #412 = Asciz	()Lscala/actors/OutputChannel;;
const #413 = NameAndType	#411:#412;//  session:()Lscala/actors/OutputChannel;
const #414 = Method	#410.#413;	//  scala/actors/MQueueElement.session:()Lscala/actors/OutputChannel;
const #415 = Asciz	[Ljava/lang/Object;;
const #416 = class	#415;	//  "[Ljava/lang/Object;"
const #417 = Asciz	wrapRefArray;
const #418 = Asciz	([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;;
const #419 = NameAndType	#417:#418;//  wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
const #420 = Method	#403.#419;	//  scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
const #421 = Asciz	(Lscala/collection/Seq;)Lscala/collection/immutable/List;;
const #422 = NameAndType	#15:#421;//  apply:(Lscala/collection/Seq;)Lscala/collection/immutable/List;
const #423 = Method	#398.#422;	//  scala/collection/immutable/List$.apply:(Lscala/collection/Seq;)Lscala/collection/immutable/List;
const #424 = Asciz	senders_$eq;
const #425 = NameAndType	#424:#53;//  senders_$eq:(Lscala/collection/immutable/List;)V
const #426 = InterfaceMethod	#103.#425;	//  scala/actors/ReplyReactor.senders_$eq:(Lscala/collection/immutable/List;)V
const #427 = NameAndType	#296:#376;//  msg:()Ljava/lang/Object;
const #428 = Method	#410.#427;	//  scala/actors/MQueueElement.msg:()Ljava/lang/Object;
const #429 = Asciz	scala/runtime/BoxedUnit;
const #430 = class	#429;	//  scala/runtime/BoxedUnit
const #431 = Asciz	UNIT;
const #432 = Asciz	Lscala/runtime/BoxedUnit;;
const #433 = NameAndType	#431:#432;//  UNIT:Lscala/runtime/BoxedUnit;
const #434 = Field	#430.#433;	//  scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
const #435 = Asciz	msec;
const #436 = Asciz	J;
const #437 = Asciz	f$3;
const #438 = Asciz	receiveTimeout;
const #439 = Asciz	todo;
const #440 = Asciz	qel;
const #441 = Asciz	Lscala/actors/MQueueElement;;
const #442 = Asciz	done;
const #443 = Asciz	Z;
const #444 = Asciz	react;
const #445 = Asciz	(Lscala/actors/Actor;Lscala/PartialFunction;)Lscala/runtime/Nothing$;;
const #446 = Asciz	scala/actors/Actor$$anonfun$react$1;
const #447 = class	#446;	//  scala/actors/Actor$$anonfun$react$1
const #448 = Method	#447.#153;	//  scala/actors/Actor$$anonfun$react$1."<init>":(Lscala/actors/Actor;)V
const #449 = Asciz	scala/actors/Actor$$anonfun$react$2;
const #450 = class	#449;	//  scala/actors/Actor$$anonfun$react$2
const #451 = Method	#450.#335;	//  scala/actors/Actor$$anonfun$react$2."<init>":(Lscala/actors/Actor;Lscala/PartialFunction;)V
const #452 = Asciz	searchMailbox;
const #453 = Asciz	(Lscala/actors/MQueue;Lscala/Function1;Z)V;
const #454 = NameAndType	#452:#453;//  searchMailbox:(Lscala/actors/MQueue;Lscala/Function1;Z)V
const #455 = InterfaceMethod	#103.#454;	//  scala/actors/ReplyReactor.searchMailbox:(Lscala/actors/MQueue;Lscala/Function1;Z)V
const #456 = Asciz	f$4;
const #457 = Asciz	receiveWithin;
const #458 = Asciz	(Lscala/actors/Actor;JLscala/PartialFunction;)Ljava/lang/Object;;
const #459 = Asciz	scala/actors/Actor$$anonfun$receiveWithin$1;
const #460 = class	#459;	//  scala/actors/Actor$$anonfun$receiveWithin$1
const #461 = Method	#460.#153;	//  scala/actors/Actor$$anonfun$receiveWithin$1."<init>":(Lscala/actors/Actor;)V
const #462 = Asciz	receive from channel belonging to other actor;
const #463 = String	#462;	//  receive from channel belonging to other actor
const #464 = Asciz	scala/actors/Actor$$anonfun$receiveWithin$2;
const #465 = class	#464;	//  scala/actors/Actor$$anonfun$receiveWithin$2
const #466 = Method	#465.#153;	//  scala/actors/Actor$$anonfun$receiveWithin$2."<init>":(Lscala/actors/Actor;)V
const #467 = Asciz	scala/actors/Actor$$anonfun$2;
const #468 = class	#467;	//  scala/actors/Actor$$anonfun$2
const #469 = Method	#468.#335;	//  scala/actors/Actor$$anonfun$2."<init>":(Lscala/actors/Actor;Lscala/PartialFunction;)V
const #470 = Asciz	scala$actors$Actor$$received;
const #471 = NameAndType	#470:#370;//  scala$actors$Actor$$received:()Lscala/Option;
const #472 = InterfaceMethod	#30.#471;	//  scala/actors/Actor.scala$actors$Actor$$received:()Lscala/Option;
const #473 = Asciz	scala/Function1;
const #474 = class	#473;	//  scala/Function1
const #475 = InterfaceMethod	#474.#17;	//  scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
const #476 = Asciz	senders;
const #477 = NameAndType	#476:#148;//  senders:()Lscala/collection/immutable/List;
const #478 = InterfaceMethod	#103.#477;	//  scala/actors/ReplyReactor.senders:()Lscala/collection/immutable/List;
const #479 = Asciz	tail;
const #480 = NameAndType	#479:#376;//  tail:()Ljava/lang/Object;
const #481 = InterfaceMethod	#156.#480;	//  scala/collection/TraversableLike.tail:()Ljava/lang/Object;
const #482 = Asciz	scala/actors/Actor$$anonfun$3;
const #483 = class	#482;	//  scala/actors/Actor$$anonfun$3
const #484 = Method	#483.#335;	//  scala/actors/Actor$$anonfun$3."<init>":(Lscala/actors/Actor;Lscala/PartialFunction;)V
const #485 = Asciz	scala/actors/Actor$$anonfun$5;
const #486 = class	#485;	//  scala/actors/Actor$$anonfun$5
const #487 = Method	#486.#335;	//  scala/actors/Actor$$anonfun$5."<init>":(Lscala/actors/Actor;Lscala/PartialFunction;)V
const #488 = Asciz	scala/actors/Actor$$anon$5;
const #489 = class	#488;	//  scala/actors/Actor$$anon$5
const #490 = Method	#489.#362;	//  scala/actors/Actor$$anon$5."<init>":(Lscala/actors/Actor;Lscala/actors/Actor;)V
const #491 = Asciz	scala$actors$Actor$$blocker;
const #492 = Asciz	()Lscala/actors/Actor$blocker$;;
const #493 = NameAndType	#491:#492;//  scala$actors$Actor$$blocker:()Lscala/actors/Actor$blocker$;
const #494 = InterfaceMethod	#30.#493;	//  scala/actors/Actor.scala$actors$Actor$$blocker:()Lscala/actors/Actor$blocker$;
const #495 = Asciz	managedBlock;
const #496 = Asciz	(Lscala/concurrent/ManagedBlocker;)V;
const #497 = NameAndType	#495:#496;//  managedBlock:(Lscala/concurrent/ManagedBlocker;)V
const #498 = InterfaceMethod	#84.#497;	//  scala/actors/IScheduler.managedBlock:(Lscala/concurrent/ManagedBlocker;)V
const #499 = Asciz	scala/actors/Actor$$anonfun$6;
const #500 = class	#499;	//  scala/actors/Actor$$anonfun$6
const #501 = Method	#500.#153;	//  scala/actors/Actor$$anonfun$6."<init>":(Lscala/actors/Actor;)V
const #502 = Asciz	scala/actors/Actor$$anonfun$4;
const #503 = class	#502;	//  scala/actors/Actor$$anonfun$4
const #504 = Method	#503.#153;	//  scala/actors/Actor$$anonfun$4."<init>":(Lscala/actors/Actor;)V
const #505 = Method	#374.#178;	//  scala/Option.isEmpty:()Z
const #506 = Asciz	cancel;
const #507 = NameAndType	#506:#93;//  cancel:()Z
const #508 = Method	#380.#507;	//  java/util/TimerTask.cancel:()Z
const #509 = Asciz	f$2;
const #510 = Asciz	result;
const #511 = Asciz	(Lscala/actors/Actor;Lscala/PartialFunction;)Ljava/lang/Object;;
const #512 = Asciz	scala/actors/Actor$$anonfun$receive$1;
const #513 = class	#512;	//  scala/actors/Actor$$anonfun$receive$1
const #514 = Method	#513.#153;	//  scala/actors/Actor$$anonfun$receive$1."<init>":(Lscala/actors/Actor;)V
const #515 = Asciz	scala/actors/Actor$$anonfun$1;
const #516 = class	#515;	//  scala/actors/Actor$$anonfun$1
const #517 = Method	#516.#335;	//  scala/actors/Actor$$anonfun$1."<init>":(Lscala/actors/Actor;Lscala/PartialFunction;)V
const #518 = Asciz	scala/actors/Actor$$anonfun$receive$2;
const #519 = class	#518;	//  scala/actors/Actor$$anonfun$receive$2
const #520 = Method	#519.#335;	//  scala/actors/Actor$$anonfun$receive$2."<init>":(Lscala/actors/Actor;Lscala/PartialFunction;)V
const #521 = Asciz	f$1;
const #522 = Asciz	resumeReceiver;
const #523 = Asciz	(Lscala/actors/Actor;Lscala/Tuple2;Z)V;
const #524 = Asciz	scala/Tuple2;
const #525 = class	#524;	//  scala/Tuple2
const #526 = Asciz	_2;
const #527 = NameAndType	#526:#376;//  _2:()Ljava/lang/Object;
const #528 = Method	#525.#527;	//  scala/Tuple2._2:()Ljava/lang/Object;
const #529 = Asciz	scala$actors$Actor$$super$resumeReceiver;
const #530 = Asciz	(Lscala/Tuple2;Z)V;
const #531 = NameAndType	#529:#530;//  scala$actors$Actor$$super$resumeReceiver:(Lscala/Tuple2;Z)V
const #532 = InterfaceMethod	#30.#531;	//  scala/actors/Actor.scala$actors$Actor$$super$resumeReceiver:(Lscala/Tuple2;Z)V
const #533 = Asciz	item;
const #534 = Asciz	Lscala/Tuple2;;
const #535 = Asciz	onSameThread;
const #536 = Asciz	makeReaction;
const #537 = Asciz	(Lscala/actors/Actor;Lscala/Function0;)Ljava/lang/Runnable;;
const #538 = Asciz	scala/actors/ActorTask;
const #539 = class	#538;	//  scala/actors/ActorTask
const #540 = Method	#539.#250;	//  scala/actors/ActorTask."<init>":(Lscala/actors/Actor;Lscala/Function0;)V
const #541 = Asciz	fun;
const #542 = Asciz	startSearch;
const #543 = Asciz	(Lscala/actors/Actor;Ljava/lang/Object;Lscala/actors/OutputChannel;Lscala/Function1;)Lscala/Function0;;
const #544 = Asciz	scala/actors/Actor$$anonfun$startSearch$1;
const #545 = class	#544;	//  scala/actors/Actor$$anonfun$startSearch$1
const #546 = Asciz	(Lscala/actors/Actor;Ljava/lang/Object;Lscala/actors/OutputChannel;)V;
const #547 = NameAndType	#98:#546;//  "<init>":(Lscala/actors/Actor;Ljava/lang/Object;Lscala/actors/OutputChannel;)V
const #548 = Method	#545.#547;	//  scala/actors/Actor$$anonfun$startSearch$1."<init>":(Lscala/actors/Actor;Ljava/lang/Object;Lscala/actors/OutputChannel;)V
const #549 = Asciz	scala$actors$Actor$$super$startSearch;
const #550 = Asciz	(Ljava/lang/Object;Lscala/actors/OutputChannel;Lscala/Function1;)Lscala/Function0;;
const #551 = NameAndType	#549:#550;//  scala$actors$Actor$$super$startSearch:(Ljava/lang/Object;Lscala/actors/OutputChannel;Lscala/Function1;)Lscala/Function0;
const #552 = InterfaceMethod	#30.#551;	//  scala/actors/Actor.scala$actors$Actor$$super$startSearch:(Ljava/lang/Object;Lscala/actors/OutputChannel;Lscala/Function1;)Lscala/Function0;
const #553 = Asciz	msg$1;
const #554 = Asciz	replyTo$1;
const #555 = Asciz	Lscala/actors/OutputChannel;;
const #556 = Asciz	handler;
const #557 = Asciz	Lscala/Function1;;
const #558 = Asciz	(Lscala/actors/Actor;)Lscala/actors/IScheduler;;
const #559 = Asciz	scala/actors/Scheduler$;
const #560 = class	#559;	//  scala/actors/Scheduler$
const #561 = Asciz	Lscala/actors/Scheduler$;;
const #562 = NameAndType	#8:#561;//  MODULE$:Lscala/actors/Scheduler$;
const #563 = Field	#560.#562;	//  scala/actors/Scheduler$.MODULE$:Lscala/actors/Scheduler$;
const #564 = Asciz	Scala;
const #565 = Asciz	InnerClasses;
const #566 = Asciz	$anon$5;
const #567 = Asciz	$anon$6;
const #568 = Asciz	$anon$3;
const #569 = Asciz	$anonfun$1;
const #570 = Asciz	$anonfun$4;
const #571 = Asciz	$anonfun$6;
const #572 = Asciz	$anonfun$5;
const #573 = Asciz	$anonfun$3;
const #574 = Asciz	$anonfun$2;
const #575 = Asciz	$anonfun$9;
const #576 = Asciz	$anonfun$8;
const #577 = Asciz	$anonfun$7;
const #578 = Asciz	$anonfun$11;
const #579 = Asciz	$anonfun$10;
const #580 = Asciz	$anonfun$12;
const #581 = Asciz	$anonfun$link$1;
const #582 = Asciz	$anonfun$link$2;
const #583 = Asciz	$anonfun$react$2;
const #584 = Asciz	$anonfun$react$1;
const #585 = Asciz	$anonfun$$qmark$1;
const #586 = Asciz	$anonfun$unlink$1;
const #587 = Asciz	$anonfun$receive$2;
const #588 = Asciz	$anonfun$receive$1;
const #589 = Asciz	$anonfun$unlinkFrom$1;
const #590 = Asciz	$anonfun$exitLinked$1;
const #591 = Asciz	$anonfun$startSearch$1;
const #592 = Asciz	$anonfun$reactWithin$2;
const #593 = Asciz	$anonfun$reactWithin$1;
const #594 = Asciz	$anonfun$receiveWithin$2;
const #595 = Asciz	$anonfun$receiveWithin$1;

{
public static {};
  Code:
   Stack=2, Locals=0, Args_size=0
   0:	getstatic	#11; //Field scala/Symbol$.MODULE$:Lscala/Symbol$;
   3:	ldc	#14; //String normal
   5:	invokevirtual	#18; //Method scala/Symbol$.apply:(Ljava/lang/Object;)Ljava/lang/Object;
   8:	checkcast	#20; //class scala/Symbol
   11:	putstatic	#26; //Field symbol$1:Lscala/Symbol;
   14:	return
  LineNumberTable: 
   line 697: 0


public static void $init$(scala.actors.Actor);
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	iconst_0
   2:	invokeinterface	#34,  2; //InterfaceMethod scala/actors/Actor.scala$actors$Actor$$isSuspended_$eq:(Z)V
   7:	aload_0
   8:	getstatic	#39; //Field scala/None$.MODULE$:Lscala/None$;
   11:	invokeinterface	#43,  2; //InterfaceMethod scala/actors/Actor.scala$actors$Actor$$received_$eq:(Lscala/Option;)V
   16:	aload_0
   17:	getstatic	#39; //Field scala/None$.MODULE$:Lscala/None$;
   20:	invokeinterface	#46,  2; //InterfaceMethod scala/actors/Actor.scala$actors$Actor$$onTimeout_$eq:(Lscala/Option;)V
   25:	aload_0
   26:	getstatic	#51; //Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
   29:	invokeinterface	#55,  2; //InterfaceMethod scala/actors/Actor.links_$eq:(Lscala/collection/immutable/List;)V
   34:	aload_0
   35:	iconst_0
   36:	invokeinterface	#58,  2; //InterfaceMethod scala/actors/Actor.trapExit_$eq:(Z)V
   41:	aload_0
   42:	getstatic	#26; //Field symbol$1:Lscala/Symbol;
   45:	invokeinterface	#62,  2; //InterfaceMethod scala/actors/Actor.exitReason_$eq:(Ljava/lang/Object;)V
   50:	aload_0
   51:	iconst_0
   52:	invokeinterface	#65,  2; //InterfaceMethod scala/actors/Actor.shouldExit_$eq:(Z)V
   57:	return
  LineNumberTable: 
   line 386: 0
   line 393: 7
   line 399: 16
   line 707: 25
   line 756: 34
   line 757: 41
   line 758: 50

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      58      0    $this       Lscala/actors/Actor;


public static void onTerminate(scala.actors.Actor, scala.Function0);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	aload_0
   1:	invokeinterface	#82,  1; //InterfaceMethod scala/actors/Actor.scheduler:()Lscala/actors/IScheduler;
   6:	aload_0
   7:	aload_1
   8:	invokeinterface	#87,  3; //InterfaceMethod scala/actors/IScheduler.onTerminate:(Lscala/actors/Reactor;Lscala/Function0;)V
   13:	return
  LineNumberTable: 
   line 836: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      14      0    $this       Lscala/actors/Actor;
   0      14      1    f       Lscala/Function0;


public static void exit(scala.actors.Actor, scala.actors.AbstractActor, java.lang.Object);
  Code:
   Stack=5, Locals=4, Args_size=3
   0:	aload_0
   1:	invokeinterface	#95,  1; //InterfaceMethod scala/actors/Actor.trapExit:()Z
   6:	ifeq	27
   9:	aload_0
   10:	new	#97; //class scala/actors/Exit
   13:	dup
   14:	aload_1
   15:	aload_2
   16:	invokespecial	#101; //Method scala/actors/Exit."<init>":(Lscala/actors/AbstractActor;Ljava/lang/Object;)V
   19:	invokeinterface	#106,  2; //InterfaceMethod scala/actors/ReplyReactor.$bang:(Ljava/lang/Object;)V
   24:	goto	118
   27:	aload_2
   28:	getstatic	#26; //Field symbol$1:Lscala/Symbol;
   31:	astore_3
   32:	dup
   33:	ifnonnull	44
   36:	pop
   37:	aload_3
   38:	ifnull	118
   41:	goto	51
   44:	aload_3
   45:	invokevirtual	#110; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   48:	ifne	118
   51:	aload_0
   52:	dup
   53:	pop
   54:	monitorenter
   55:	aload_0
   56:	iconst_1
   57:	invokeinterface	#65,  2; //InterfaceMethod scala/actors/Actor.shouldExit_$eq:(Z)V
   62:	aload_0
   63:	aload_2
   64:	invokeinterface	#62,  2; //InterfaceMethod scala/actors/Actor.exitReason_$eq:(Ljava/lang/Object;)V
   69:	aload_0
   70:	invokeinterface	#113,  1; //InterfaceMethod scala/actors/Actor.scala$actors$Actor$$isSuspended:()Z
   75:	ifeq	85
   78:	aload_0
   79:	invokestatic	#116; //Method scala$actors$Actor$$resumeActor:(Lscala/actors/Actor;)V
   82:	goto	116
   85:	aload_0
   86:	invokeinterface	#122,  1; //InterfaceMethod scala/actors/Reactor.waitingFor:()Lscala/Function1;
   91:	aload_0
   92:	invokeinterface	#125,  1; //InterfaceMethod scala/actors/Reactor.waitingForNone:()Lscala/Function1;
   97:	if_acmpeq	116
   100:	aload_0
   101:	aload_0
   102:	invokeinterface	#129,  1; //InterfaceMethod scala/actors/Reactor.continuation:()Lscala/PartialFunction;
   107:	aconst_null
   108:	invokeinterface	#133,  3; //InterfaceMethod scala/actors/Actor.scheduleActor:(Lscala/PartialFunction;Ljava/lang/Object;)V
   113:	goto	116
   116:	aload_0
   117:	monitorexit
   118:	return
   119:	aload_0
   120:	monitorexit
   121:	athrow
  Exception table:
   from   to  target type
    55   118   119   any
  LineNumberTable: 
   line 814: 0
   line 815: 9
   line 817: 27
   line 818: 51
   line 819: 55
   line 820: 62
   line 824: 69
   line 825: 78
   line 826: 85
   line 827: 100
   line 814: 116
   line 818: 117
   line 814: 118
   line 818: 120

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      122      0    $this       Lscala/actors/Actor;
   0      122      1    from       Lscala/actors/AbstractActor;
   0      122      2    reason       Ljava/lang/Object;


public static void exitLinked(scala.actors.Actor, java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokeinterface	#62,  2; //InterfaceMethod scala/actors/Actor.exitReason_$eq:(Ljava/lang/Object;)V
   7:	aload_0
   8:	invokeinterface	#141,  1; //InterfaceMethod scala/actors/Actor.exitLinked:()V
   13:	return
  LineNumberTable: 
   line 808: 0
   line 809: 7

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      14      0    $this       Lscala/actors/Actor;
   0      14      1    reason       Ljava/lang/Object;


public static void exitLinked(scala.actors.Actor);
  Code:
   Stack=4, Locals=2, Args_size=1
   0:	aload_0
   1:	iconst_1
   2:	invokeinterface	#146,  2; //InterfaceMethod scala/actors/AbstractActor.exiting_$eq:(Z)V
   7:	aload_0
   8:	invokeinterface	#150,  1; //InterfaceMethod scala/actors/Actor.links:()Lscala/collection/immutable/List;
   13:	new	#152; //class scala/actors/Actor$$anonfun$12
   16:	dup
   17:	aload_0
   18:	invokespecial	#154; //Method scala/actors/Actor$$anonfun$12."<init>":(Lscala/actors/Actor;)V
   21:	invokeinterface	#160,  2; //InterfaceMethod scala/collection/TraversableLike.filterNot:(Lscala/Function1;)Ljava/lang/Object;
   26:	checkcast	#162; //class scala/collection/immutable/List
   29:	astore_1
   30:	aload_1
   31:	new	#164; //class scala/actors/Actor$$anonfun$exitLinked$1
   34:	dup
   35:	aload_0
   36:	invokespecial	#165; //Method scala/actors/Actor$$anonfun$exitLinked$1."<init>":(Lscala/actors/Actor;)V
   39:	invokeinterface	#171,  2; //InterfaceMethod scala/collection/LinearSeqLike.foreach:(Lscala/Function1;)V
   44:	return
  LineNumberTable: 
   line 795: 0
   line 797: 7
   line 799: 30

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      45      0    $this       Lscala/actors/Actor;
   30      14      1    mylinks       Lscala/collection/immutable/List;


public static scala.runtime.Nothing$ exit(scala.actors.Actor);
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokeinterface	#150,  1; //InterfaceMethod scala/actors/Actor.links:()Lscala/collection/immutable/List;
   6:	invokeinterface	#179,  1; //InterfaceMethod scala/collection/IterableLike.isEmpty:()Z
   11:	ifne	20
   14:	aload_0
   15:	invokeinterface	#141,  1; //InterfaceMethod scala/actors/Actor.exitLinked:()V
   20:	aload_0
   21:	invokeinterface	#182,  1; //InterfaceMethod scala/actors/Reactor.terminated:()V
   26:	getstatic	#187; //Field scala/actors/Actor$.MODULE$:Lscala/actors/Actor$;
   29:	invokevirtual	#191; //Method scala/actors/Actor$.suspendException:()Lscala/actors/SuspendActorException;
   32:	athrow
  LineNumberTable: 
   line 787: 0
   line 788: 14
   line 789: 20
   line 790: 26

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      33      0    $this       Lscala/actors/Actor;


public static scala.runtime.Nothing$ exit(scala.actors.Actor, java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokeinterface	#62,  2; //InterfaceMethod scala/actors/Actor.exitReason_$eq:(Ljava/lang/Object;)V
   7:	aload_0
   8:	invokeinterface	#195,  1; //InterfaceMethod scala/actors/Actor.exit:()Lscala/runtime/Nothing$;
   13:	areturn
  LineNumberTable: 
   line 778: 0
   line 779: 7

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      14      0    $this       Lscala/actors/Actor;
   0      14      1    reason       Ljava/lang/Object;


public static void unlinkFrom(scala.actors.Actor, scala.actors.AbstractActor);
  Code:
   Stack=6, Locals=2, Args_size=2
   0:	aload_0
   1:	dup
   2:	pop
   3:	monitorenter
   4:	aload_0
   5:	aload_0
   6:	invokeinterface	#150,  1; //InterfaceMethod scala/actors/Actor.links:()Lscala/collection/immutable/List;
   11:	new	#199; //class scala/actors/Actor$$anonfun$unlinkFrom$1
   14:	dup
   15:	aload_0
   16:	aload_1
   17:	invokespecial	#201; //Method scala/actors/Actor$$anonfun$unlinkFrom$1."<init>":(Lscala/actors/Actor;Lscala/actors/AbstractActor;)V
   20:	invokeinterface	#160,  2; //InterfaceMethod scala/collection/TraversableLike.filterNot:(Lscala/Function1;)Ljava/lang/Object;
   25:	checkcast	#162; //class scala/collection/immutable/List
   28:	invokeinterface	#55,  2; //InterfaceMethod scala/actors/Actor.links_$eq:(Lscala/collection/immutable/List;)V
   33:	aload_0
   34:	monitorexit
   35:	return
   36:	aload_0
   37:	monitorexit
   38:	athrow
  Exception table:
   from   to  target type
     4    35    36   any
  LineNumberTable: 
   line 752: 0
   line 753: 4
   line 752: 34

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      39      0    $this       Lscala/actors/Actor;
   0      39      1    from$2       Lscala/actors/AbstractActor;


public static void unlink(scala.actors.Actor, scala.actors.AbstractActor);
  Code:
   Stack=4, Locals=5, Args_size=2
   0:	getstatic	#187; //Field scala/actors/Actor$.MODULE$:Lscala/actors/Actor$;
   3:	aload_0
   4:	invokeinterface	#82,  1; //InterfaceMethod scala/actors/Actor.scheduler:()Lscala/actors/IScheduler;
   9:	astore_3
   10:	astore_2
   11:	aload_2
   12:	aload_3
   13:	invokevirtual	#207; //Method scala/actors/Actor$.rawSelf:(Lscala/actors/IScheduler;)Lscala/actors/Reactor;
   16:	checkcast	#30; //class scala/actors/Actor
   19:	dup
   20:	ifnonnull	31
   23:	pop
   24:	aload_0
   25:	ifnull	38
   28:	goto	42
   31:	aload_0
   32:	invokevirtual	#110; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   35:	ifeq	42
   38:	iconst_1
   39:	goto	43
   42:	iconst_0
   43:	new	#209; //class scala/actors/Actor$$anonfun$unlink$1
   46:	dup
   47:	pop
   48:	aload_0
   49:	invokespecial	#210; //Method scala/actors/Actor$$anonfun$unlink$1."<init>":(Lscala/actors/Actor;)V
   52:	istore	4
   54:	iload	4
   56:	ifne	87
   59:	new	#212; //class java/lang/AssertionError
   62:	dup
   63:	new	#214; //class scala/collection/mutable/StringBuilder
   66:	dup
   67:	invokespecial	#216; //Method scala/collection/mutable/StringBuilder."<init>":()V
   70:	ldc	#218; //String assertion failed: 
   72:	invokevirtual	#222; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   75:	ldc	#224; //String unlink called on actor different from self
   77:	invokevirtual	#222; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   80:	invokevirtual	#228; //Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
   83:	invokespecial	#230; //Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
   86:	athrow
   87:	aload_0
   88:	aload_1
   89:	invokeinterface	#233,  2; //InterfaceMethod scala/actors/Actor.unlinkFrom:(Lscala/actors/AbstractActor;)V
   94:	aload_1
   95:	aload_0
   96:	invokeinterface	#234,  2; //InterfaceMethod scala/actors/AbstractActor.unlinkFrom:(Lscala/actors/AbstractActor;)V
   101:	return
  LineNumberTable: 
   line 747: 0
   line 748: 87
   line 749: 94

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      102      0    $this       Lscala/actors/Actor;
   0      102      1    from       Lscala/actors/AbstractActor;


public static void linkTo(scala.actors.Actor, scala.actors.AbstractActor);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	aload_0
   1:	dup
   2:	pop
   3:	monitorenter
   4:	aload_0
   5:	aload_0
   6:	invokeinterface	#150,  1; //InterfaceMethod scala/actors/Actor.links:()Lscala/collection/immutable/List;
   11:	aload_1
   12:	invokevirtual	#239; //Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
   15:	invokeinterface	#55,  2; //InterfaceMethod scala/actors/Actor.links_$eq:(Lscala/collection/immutable/List;)V
   20:	aload_0
   21:	monitorexit
   22:	return
   23:	aload_0
   24:	monitorexit
   25:	athrow
  Exception table:
   from   to  target type
     4    22    23   any
  LineNumberTable: 
   line 739: 0
   line 740: 4
   line 739: 21

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      26      0    $this       Lscala/actors/Actor;
   0      26      1    to       Lscala/actors/AbstractActor;


public static scala.actors.Actor link(scala.actors.Actor, scala.Function0);
  Code:
   Stack=4, Locals=6, Args_size=2
   0:	getstatic	#187; //Field scala/actors/Actor$.MODULE$:Lscala/actors/Actor$;
   3:	aload_0
   4:	invokeinterface	#82,  1; //InterfaceMethod scala/actors/Actor.scheduler:()Lscala/actors/IScheduler;
   9:	astore_3
   10:	astore_2
   11:	aload_2
   12:	aload_3
   13:	invokevirtual	#207; //Method scala/actors/Actor$.rawSelf:(Lscala/actors/IScheduler;)Lscala/actors/Reactor;
   16:	checkcast	#30; //class scala/actors/Actor
   19:	dup
   20:	ifnonnull	31
   23:	pop
   24:	aload_0
   25:	ifnull	38
   28:	goto	42
   31:	aload_0
   32:	invokevirtual	#110; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   35:	ifeq	42
   38:	iconst_1
   39:	goto	43
   42:	iconst_0
   43:	new	#244; //class scala/actors/Actor$$anonfun$link$2
   46:	dup
   47:	pop
   48:	aload_0
   49:	invokespecial	#245; //Method scala/actors/Actor$$anonfun$link$2."<init>":(Lscala/actors/Actor;)V
   52:	istore	4
   54:	iload	4
   56:	ifne	87
   59:	new	#212; //class java/lang/AssertionError
   62:	dup
   63:	new	#214; //class scala/collection/mutable/StringBuilder
   66:	dup
   67:	invokespecial	#216; //Method scala/collection/mutable/StringBuilder."<init>":()V
   70:	ldc	#218; //String assertion failed: 
   72:	invokevirtual	#222; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   75:	ldc	#247; //String link called on actor different from self
   77:	invokevirtual	#222; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   80:	invokevirtual	#228; //Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
   83:	invokespecial	#230; //Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
   86:	athrow
   87:	new	#249; //class scala/actors/Actor$$anon$3
   90:	dup
   91:	aload_0
   92:	aload_1
   93:	invokespecial	#251; //Method scala/actors/Actor$$anon$3."<init>":(Lscala/actors/Actor;Lscala/Function0;)V
   96:	astore	5
   98:	aload_0
   99:	aload	5
   101:	checkcast	#143; //class scala/actors/AbstractActor
   104:	invokeinterface	#254,  2; //InterfaceMethod scala/actors/Actor.link:(Lscala/actors/AbstractActor;)Lscala/actors/AbstractActor;
   109:	pop
   110:	aload	5
   112:	checkcast	#30; //class scala/actors/Actor
   115:	invokeinterface	#258,  1; //InterfaceMethod scala/actors/Actor.start:()Lscala/actors/Actor;
   120:	pop
   121:	aload	5
   123:	checkcast	#30; //class scala/actors/Actor
   126:	areturn
  LineNumberTable: 
   line 729: 0
   line 730: 87
   line 734: 98
   line 736: 99
   line 734: 101
   line 735: 110
   line 736: 121

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      127      0    $this       Lscala/actors/Actor;
   0      127      1    body$6       Lscala/Function0;
   98      28      5    a       Ljava/lang/Object;


public static scala.actors.AbstractActor link(scala.actors.Actor, scala.actors.AbstractActor);
  Code:
   Stack=4, Locals=5, Args_size=2
   0:	getstatic	#187; //Field scala/actors/Actor$.MODULE$:Lscala/actors/Actor$;
   3:	aload_0
   4:	invokeinterface	#82,  1; //InterfaceMethod scala/actors/Actor.scheduler:()Lscala/actors/IScheduler;
   9:	astore_3
   10:	astore_2
   11:	aload_2
   12:	aload_3
   13:	invokevirtual	#207; //Method scala/actors/Actor$.rawSelf:(Lscala/actors/IScheduler;)Lscala/actors/Reactor;
   16:	checkcast	#30; //class scala/actors/Actor
   19:	dup
   20:	ifnonnull	31
   23:	pop
   24:	aload_0
   25:	ifnull	38
   28:	goto	42
   31:	aload_0
   32:	invokevirtual	#110; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   35:	ifeq	42
   38:	iconst_1
   39:	goto	43
   42:	iconst_0
   43:	new	#263; //class scala/actors/Actor$$anonfun$link$1
   46:	dup
   47:	pop
   48:	aload_0
   49:	invokespecial	#264; //Method scala/actors/Actor$$anonfun$link$1."<init>":(Lscala/actors/Actor;)V
   52:	istore	4
   54:	iload	4
   56:	ifne	87
   59:	new	#212; //class java/lang/AssertionError
   62:	dup
   63:	new	#214; //class scala/collection/mutable/StringBuilder
   66:	dup
   67:	invokespecial	#216; //Method scala/collection/mutable/StringBuilder."<init>":()V
   70:	ldc	#218; //String assertion failed: 
   72:	invokevirtual	#222; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   75:	ldc	#247; //String link called on actor different from self
   77:	invokevirtual	#222; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   80:	invokevirtual	#228; //Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
   83:	invokespecial	#230; //Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
   86:	athrow
   87:	aload_0
   88:	aload_1
   89:	invokeinterface	#266,  2; //InterfaceMethod scala/actors/Actor.linkTo:(Lscala/actors/AbstractActor;)V
   94:	aload_1
   95:	aload_0
   96:	invokeinterface	#267,  2; //InterfaceMethod scala/actors/AbstractActor.linkTo:(Lscala/actors/AbstractActor;)V
   101:	aload_1
   102:	areturn
  LineNumberTable: 
   line 716: 0
   line 717: 87
   line 718: 94
   line 719: 101

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      103      0    $this       Lscala/actors/Actor;
   0      103      1    to       Lscala/actors/AbstractActor;


public static scala.actors.Actor start(scala.actors.Actor);
  Code:
   Stack=4, Locals=1, Args_size=1
   0:	aload_0
   1:	dup
   2:	pop
   3:	monitorenter
   4:	aload_0
   5:	getstatic	#26; //Field symbol$1:Lscala/Symbol;
   8:	invokeinterface	#62,  2; //InterfaceMethod scala/actors/Actor.exitReason_$eq:(Ljava/lang/Object;)V
   13:	aload_0
   14:	iconst_0
   15:	invokeinterface	#146,  2; //InterfaceMethod scala/actors/AbstractActor.exiting_$eq:(Z)V
   20:	aload_0
   21:	iconst_0
   22:	invokeinterface	#65,  2; //InterfaceMethod scala/actors/Actor.shouldExit_$eq:(Z)V
   27:	aload_0
   28:	invokeinterface	#82,  1; //InterfaceMethod scala/actors/Actor.scheduler:()Lscala/actors/IScheduler;
   33:	aload_0
   34:	invokeinterface	#272,  2; //InterfaceMethod scala/actors/IScheduler.newActor:(Lscala/actors/Reactor;)V
   39:	aload_0
   40:	invokeinterface	#82,  1; //InterfaceMethod scala/actors/Actor.scheduler:()Lscala/actors/IScheduler;
   45:	new	#274; //class scala/actors/Reaction
   48:	dup
   49:	aload_0
   50:	invokespecial	#275; //Method scala/actors/Reaction."<init>":(Lscala/actors/Actor;)V
   53:	invokeinterface	#279,  2; //InterfaceMethod scala/actors/IScheduler.execute:(Ljava/lang/Runnable;)V
   58:	aload_0
   59:	aload_0
   60:	monitorexit
   61:	checkcast	#30; //class scala/actors/Actor
   64:	areturn
   65:	aload_0
   66:	monitorexit
   67:	athrow
  Exception table:
   from   to  target type
     4    61    65   any
  LineNumberTable: 
   line 690: 0
   line 697: 4
   line 698: 13
   line 699: 20
   line 701: 27
   line 702: 39
   line 704: 58
   line 690: 60

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      68      0    $this       Lscala/actors/Actor;


public static final void scala$actors$Actor$$resumeActor(scala.actors.Actor);
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	iconst_0
   2:	invokeinterface	#34,  2; //InterfaceMethod scala/actors/Actor.scala$actors$Actor$$isSuspended_$eq:(Z)V
   7:	aload_0
   8:	invokevirtual	#282; //Method java/lang/Object.notify:()V
   11:	return
  LineNumberTable: 
   line 683: 0
   line 684: 7

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      12      0    $this       Lscala/actors/Actor;


public static final void scala$actors$Actor$$suspendActor(scala.actors.Actor);
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	dup
   2:	pop
   3:	monitorenter
   4:	aload_0
   5:	invokeinterface	#113,  1; //InterfaceMethod scala/actors/Actor.scala$actors$Actor$$isSuspended:()Z
   10:	ifeq	20
   13:	aload_0
   14:	invokestatic	#285; //Method liftedTree1$1:(Lscala/actors/Actor;)V
   17:	goto	4
   20:	aload_0
   21:	invokeinterface	#288,  1; //InterfaceMethod scala/actors/Actor.shouldExit:()Z
   26:	ifeq	36
   29:	aload_0
   30:	invokeinterface	#195,  1; //InterfaceMethod scala/actors/Actor.exit:()Lscala/runtime/Nothing$;
   35:	athrow
   36:	aload_0
   37:	monitorexit
   38:	return
   39:	aload_0
   40:	monitorexit
   41:	athrow
  Exception table:
   from   to  target type
     4    38    39   any
  LineNumberTable: 
   line 670: 0
   line 671: 4
   line 672: 13
   line 679: 20
   line 670: 36

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      42      0    $this       Lscala/actors/Actor;


public static void scheduleActor(scala.actors.Actor, scala.PartialFunction, java.lang.Object);
  Code:
   Stack=5, Locals=4, Args_size=3
   0:	aload_1
   1:	ifnonnull	13
   4:	aload_0
   5:	invokeinterface	#129,  1; //InterfaceMethod scala/actors/Reactor.continuation:()Lscala/PartialFunction;
   10:	ifnull	49
   13:	new	#274; //class scala/actors/Reaction
   16:	dup
   17:	aload_0
   18:	aload_1
   19:	ifnonnull	31
   22:	aload_0
   23:	invokeinterface	#129,  1; //InterfaceMethod scala/actors/Reactor.continuation:()Lscala/PartialFunction;
   28:	goto	32
   31:	aload_1
   32:	aload_2
   33:	invokespecial	#291; //Method scala/actors/Reaction."<init>":(Lscala/actors/Actor;Lscala/PartialFunction;Ljava/lang/Object;)V
   36:	astore_3
   37:	aload_0
   38:	invokeinterface	#82,  1; //InterfaceMethod scala/actors/Actor.scheduler:()Lscala/actors/IScheduler;
   43:	aload_3
   44:	invokeinterface	#294,  2; //InterfaceMethod scala/actors/IScheduler.executeFromActor:(Ljava/lang/Runnable;)V
   49:	return
  LineNumberTable: 
   line 650: 0
   line 654: 13
   line 655: 18
   line 656: 32
   line 654: 33
   line 657: 37
   line 650: 49

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      50      0    $this       Lscala/actors/Actor;
   0      50      1    f       Lscala/PartialFunction;
   0      50      2    msg       Ljava/lang/Object;
   37      12      3    task       Lscala/actors/Reaction;


public static java.lang.Object $qmark(scala.actors.Actor);
  Code:
   Stack=4, Locals=1, Args_size=1
   0:	aload_0
   1:	new	#302; //class scala/actors/Actor$$anonfun$$qmark$1
   4:	dup
   5:	aload_0
   6:	invokespecial	#303; //Method scala/actors/Actor$$anonfun$$qmark$1."<init>":(Lscala/actors/Actor;)V
   9:	invokeinterface	#307,  2; //InterfaceMethod scala/actors/Actor.receive:(Lscala/PartialFunction;)Ljava/lang/Object;
   14:	areturn
  LineNumberTable: 
   line 644: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      15      0    $this       Lscala/actors/Actor;


public static scala.runtime.Nothing$ reactWithin(scala.actors.Actor, long, scala.PartialFunction);
  Code:
   Stack=7, Locals=11, Args_size=3
   0:	getstatic	#187; //Field scala/actors/Actor$.MODULE$:Lscala/actors/Actor$;
   3:	aload_0
   4:	invokeinterface	#82,  1; //InterfaceMethod scala/actors/Actor.scheduler:()Lscala/actors/IScheduler;
   9:	astore	5
   11:	astore	4
   13:	aload	4
   15:	aload	5
   17:	invokevirtual	#207; //Method scala/actors/Actor$.rawSelf:(Lscala/actors/IScheduler;)Lscala/actors/Reactor;
   20:	checkcast	#30; //class scala/actors/Actor
   23:	dup
   24:	ifnonnull	35
   27:	pop
   28:	aload_0
   29:	ifnull	42
   32:	goto	46
   35:	aload_0
   36:	invokevirtual	#110; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   39:	ifeq	46
   42:	iconst_1
   43:	goto	47
   46:	iconst_0
   47:	new	#311; //class scala/actors/Actor$$anonfun$reactWithin$1
   50:	dup
   51:	pop
   52:	aload_0
   53:	invokespecial	#312; //Method scala/actors/Actor$$anonfun$reactWithin$1."<init>":(Lscala/actors/Actor;)V
   56:	istore	6
   58:	iload	6
   60:	ifne	92
   63:	new	#212; //class java/lang/AssertionError
   66:	dup
   67:	new	#214; //class scala/collection/mutable/StringBuilder
   70:	dup
   71:	invokespecial	#216; //Method scala/collection/mutable/StringBuilder."<init>":()V
   74:	ldc	#218; //String assertion failed: 
   76:	invokevirtual	#222; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   79:	ldc_w	#314; //String react on channel belonging to other actor
   82:	invokevirtual	#222; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   85:	invokevirtual	#228; //Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
   88:	invokespecial	#230; //Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
   91:	athrow
   92:	aload_0
   93:	dup
   94:	pop
   95:	monitorenter
   96:	aload_0
   97:	invokeinterface	#288,  1; //InterfaceMethod scala/actors/Actor.shouldExit:()Z
   102:	ifeq	112
   105:	aload_0
   106:	invokeinterface	#195,  1; //InterfaceMethod scala/actors/Actor.exit:()Lscala/runtime/Nothing$;
   111:	athrow
   112:	aload_0
   113:	aload_0
   114:	invokeinterface	#318,  1; //InterfaceMethod scala/actors/Reactor.mailbox:()Lscala/actors/MQueue;
   119:	invokeinterface	#322,  2; //InterfaceMethod scala/actors/Reactor.drainSendBuffer:(Lscala/actors/MQueue;)V
   124:	aload_0
   125:	monitorexit
   126:	aload_0
   127:	invokeinterface	#318,  1; //InterfaceMethod scala/actors/Reactor.mailbox:()Lscala/actors/MQueue;
   132:	new	#324; //class scala/actors/Actor$$anonfun$reactWithin$2
   135:	dup
   136:	aload_0
   137:	invokespecial	#325; //Method scala/actors/Actor$$anonfun$reactWithin$2."<init>":(Lscala/actors/Actor;)V
   140:	invokevirtual	#331; //Method scala/actors/MQueue.extractFirst:(Lscala/Function2;)Lscala/actors/MQueueElement;
   143:	pop
   144:	new	#333; //class scala/actors/Actor$$anonfun$7
   147:	dup
   148:	aload_0
   149:	aload_3
   150:	invokespecial	#336; //Method scala/actors/Actor$$anonfun$7."<init>":(Lscala/actors/Actor;Lscala/PartialFunction;)V
   153:	astore	7
   155:	iconst_0
   156:	istore	10
   158:	iload	10
   160:	ifeq	170
   163:	getstatic	#187; //Field scala/actors/Actor$.MODULE$:Lscala/actors/Actor$;
   166:	invokevirtual	#191; //Method scala/actors/Actor$.suspendException:()Lscala/actors/SuspendActorException;
   169:	athrow
   170:	aload_0
   171:	invokeinterface	#318,  1; //InterfaceMethod scala/actors/Reactor.mailbox:()Lscala/actors/MQueue;
   176:	new	#338; //class scala/actors/Actor$$anonfun$8
   179:	dup
   180:	aload_0
   181:	aload_3
   182:	invokespecial	#339; //Method scala/actors/Actor$$anonfun$8."<init>":(Lscala/actors/Actor;Lscala/PartialFunction;)V
   185:	invokevirtual	#331; //Method scala/actors/MQueue.extractFirst:(Lscala/Function2;)Lscala/actors/MQueueElement;
   188:	astore	9
   190:	aload	9
   192:	ifnonnull	342
   195:	aload_0
   196:	dup
   197:	pop
   198:	monitorenter
   199:	aload_0
   200:	invokeinterface	#343,  1; //InterfaceMethod scala/actors/Reactor.sendBuffer:()Lscala/collection/mutable/Queue;
   205:	invokevirtual	#346; //Method scala/collection/mutable/Queue.isEmpty:()Z
   208:	ifeq	305
   211:	lload_1
   212:	lconst_0
   213:	lcmp
   214:	ifne	225
   217:	iconst_1
   218:	istore	10
   220:	aload	7
   222:	goto	325
   225:	aload_0
   226:	new	#348; //class scala/actors/Actor$$anonfun$10
   229:	dup
   230:	aload_0
   231:	aload_3
   232:	invokespecial	#349; //Method scala/actors/Actor$$anonfun$10."<init>":(Lscala/actors/Actor;Lscala/PartialFunction;)V
   235:	invokeinterface	#352,  2; //InterfaceMethod scala/actors/Reactor.waitingFor_$eq:(Lscala/Function1;)V
   240:	aload_0
   241:	aload_3
   242:	invokeinterface	#356,  2; //InterfaceMethod scala/actors/Reactor.continuation_$eq:(Lscala/PartialFunction;)V
   247:	aload_0
   248:	new	#358; //class scala/Some
   251:	dup
   252:	new	#360; //class scala/actors/Actor$$anon$6
   255:	dup
   256:	aload_0
   257:	aload_0
   258:	invokespecial	#363; //Method scala/actors/Actor$$anon$6."<init>":(Lscala/actors/Actor;Lscala/actors/Actor;)V
   261:	invokespecial	#364; //Method scala/Some."<init>":(Ljava/lang/Object;)V
   264:	invokeinterface	#46,  2; //InterfaceMethod scala/actors/Actor.scala$actors$Actor$$onTimeout_$eq:(Lscala/Option;)V
   269:	getstatic	#187; //Field scala/actors/Actor$.MODULE$:Lscala/actors/Actor$;
   272:	invokevirtual	#368; //Method scala/actors/Actor$.timer:()Ljava/util/Timer;
   275:	aload_0
   276:	invokeinterface	#372,  1; //InterfaceMethod scala/actors/Actor.scala$actors$Actor$$onTimeout:()Lscala/Option;
   281:	invokevirtual	#378; //Method scala/Option.get:()Ljava/lang/Object;
   284:	checkcast	#380; //class java/util/TimerTask
   287:	lload_1
   288:	invokevirtual	#386; //Method java/util/Timer.schedule:(Ljava/util/TimerTask;J)V
   291:	iconst_1
   292:	istore	10
   294:	new	#388; //class scala/actors/Actor$$anonfun$11
   297:	dup
   298:	aload_0
   299:	invokespecial	#389; //Method scala/actors/Actor$$anonfun$11."<init>":(Lscala/actors/Actor;)V
   302:	goto	325
   305:	aload_0
   306:	aload_0
   307:	invokeinterface	#318,  1; //InterfaceMethod scala/actors/Reactor.mailbox:()Lscala/actors/MQueue;
   312:	invokeinterface	#322,  2; //InterfaceMethod scala/actors/Reactor.drainSendBuffer:(Lscala/actors/MQueue;)V
   317:	new	#391; //class scala/actors/Actor$$anonfun$9
   320:	dup
   321:	aload_0
   322:	invokespecial	#392; //Method scala/actors/Actor$$anonfun$9."<init>":(Lscala/actors/Actor;)V
   325:	aload_0
   326:	monitorexit
   327:	checkcast	#394; //class scala/Function0
   330:	astore	8
   332:	aload	8
   334:	invokeinterface	#396,  1; //InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
   339:	goto	393
   342:	aload_0
   343:	getstatic	#401; //Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
   346:	getstatic	#406; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   349:	iconst_1
   350:	anewarray	#408; //class scala/actors/OutputChannel
   353:	dup
   354:	iconst_0
   355:	aload	9
   357:	invokevirtual	#414; //Method scala/actors/MQueueElement.session:()Lscala/actors/OutputChannel;
   360:	aastore
   361:	checkcast	#416; //class "[Ljava/lang/Object;"
   364:	invokevirtual	#420; //Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
   367:	invokevirtual	#423; //Method scala/collection/immutable/List$.apply:(Lscala/collection/Seq;)Lscala/collection/immutable/List;
   370:	invokeinterface	#426,  2; //InterfaceMethod scala/actors/ReplyReactor.senders_$eq:(Lscala/collection/immutable/List;)V
   375:	aload_0
   376:	aload_3
   377:	aload	9
   379:	invokevirtual	#428; //Method scala/actors/MQueueElement.msg:()Ljava/lang/Object;
   382:	invokeinterface	#133,  3; //InterfaceMethod scala/actors/Actor.scheduleActor:(Lscala/PartialFunction;Ljava/lang/Object;)V
   387:	iconst_1
   388:	istore	10
   390:	getstatic	#434; //Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
   393:	pop
   394:	goto	158
   397:	aload_0
   398:	monitorexit
   399:	athrow
   400:	aload_0
   401:	monitorexit
   402:	athrow
  Exception table:
   from   to  target type
   199   327   400   any
    96   126   397   any
  LineNumberTable: 
   line 584: 0
   line 586: 92
   line 587: 96
   line 588: 112
   line 586: 125
   line 592: 126
   line 594: 144
   line 602: 155
   line 603: 158
   line 638: 163
   line 604: 170
   line 608: 190
   line 609: 195
   line 611: 199
   line 615: 211
   line 616: 217
   line 617: 220
   line 619: 225
   line 620: 240
   line 622: 247
   line 625: 269
   line 626: 291
   line 627: 294
   line 615: 302
   line 612: 305
   line 614: 317
   line 632: 325
   line 609: 326
   line 632: 327
   line 609: 330
   line 630: 332
   line 632: 342
   line 633: 375
   line 634: 387
   line 631: 390
   line 608: 393
   line 586: 398
   line 609: 401

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      403      0    $this       Lscala/actors/Actor;
   0      403      1    msec       J
   0      403      3    f$3       Lscala/PartialFunction;
   155      242      7    receiveTimeout       Lscala/Function0;
   400      3      7    receiveTimeout       Lscala/Function0;
   332      7      8    todo       Lscala/Function0;
   190      204      9    qel       Lscala/actors/MQueueElement;
   400      3      9    qel       Lscala/actors/MQueueElement;
   158      239      10    done       Z
   400      3      10    done       Z


public static scala.runtime.Nothing$ react(scala.actors.Actor, scala.PartialFunction);
  Code:
   Stack=6, Locals=5, Args_size=2
   0:	getstatic	#187; //Field scala/actors/Actor$.MODULE$:Lscala/actors/Actor$;
   3:	aload_0
   4:	invokeinterface	#82,  1; //InterfaceMethod scala/actors/Actor.scheduler:()Lscala/actors/IScheduler;
   9:	astore_3
   10:	astore_2
   11:	aload_2
   12:	aload_3
   13:	invokevirtual	#207; //Method scala/actors/Actor$.rawSelf:(Lscala/actors/IScheduler;)Lscala/actors/Reactor;
   16:	checkcast	#30; //class scala/actors/Actor
   19:	dup
   20:	ifnonnull	31
   23:	pop
   24:	aload_0
   25:	ifnull	38
   28:	goto	42
   31:	aload_0
   32:	invokevirtual	#110; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   35:	ifeq	42
   38:	iconst_1
   39:	goto	43
   42:	iconst_0
   43:	new	#447; //class scala/actors/Actor$$anonfun$react$1
   46:	dup
   47:	pop
   48:	aload_0
   49:	invokespecial	#448; //Method scala/actors/Actor$$anonfun$react$1."<init>":(Lscala/actors/Actor;)V
   52:	istore	4
   54:	iload	4
   56:	ifne	88
   59:	new	#212; //class java/lang/AssertionError
   62:	dup
   63:	new	#214; //class scala/collection/mutable/StringBuilder
   66:	dup
   67:	invokespecial	#216; //Method scala/collection/mutable/StringBuilder."<init>":()V
   70:	ldc	#218; //String assertion failed: 
   72:	invokevirtual	#222; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   75:	ldc_w	#314; //String react on channel belonging to other actor
   78:	invokevirtual	#222; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   81:	invokevirtual	#228; //Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
   84:	invokespecial	#230; //Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
   87:	athrow
   88:	aload_0
   89:	dup
   90:	pop
   91:	monitorenter
   92:	aload_0
   93:	invokeinterface	#288,  1; //InterfaceMethod scala/actors/Actor.shouldExit:()Z
   98:	ifeq	108
   101:	aload_0
   102:	invokeinterface	#195,  1; //InterfaceMethod scala/actors/Actor.exit:()Lscala/runtime/Nothing$;
   107:	athrow
   108:	aload_0
   109:	aload_0
   110:	invokeinterface	#318,  1; //InterfaceMethod scala/actors/Reactor.mailbox:()Lscala/actors/MQueue;
   115:	invokeinterface	#322,  2; //InterfaceMethod scala/actors/Reactor.drainSendBuffer:(Lscala/actors/MQueue;)V
   120:	aload_0
   121:	monitorexit
   122:	aload_0
   123:	aload_1
   124:	invokeinterface	#356,  2; //InterfaceMethod scala/actors/Reactor.continuation_$eq:(Lscala/PartialFunction;)V
   129:	aload_0
   130:	aload_0
   131:	invokeinterface	#318,  1; //InterfaceMethod scala/actors/Reactor.mailbox:()Lscala/actors/MQueue;
   136:	new	#450; //class scala/actors/Actor$$anonfun$react$2
   139:	dup
   140:	aload_0
   141:	aload_1
   142:	invokespecial	#451; //Method scala/actors/Actor$$anonfun$react$2."<init>":(Lscala/actors/Actor;Lscala/PartialFunction;)V
   145:	iconst_0
   146:	invokeinterface	#455,  4; //InterfaceMethod scala/actors/ReplyReactor.searchMailbox:(Lscala/actors/MQueue;Lscala/Function1;Z)V
   151:	getstatic	#187; //Field scala/actors/Actor$.MODULE$:Lscala/actors/Actor$;
   154:	invokevirtual	#191; //Method scala/actors/Actor$.suspendException:()Lscala/actors/SuspendActorException;
   157:	athrow
   158:	aload_0
   159:	monitorexit
   160:	athrow
  Exception table:
   from   to  target type
    92   122   158   any
  LineNumberTable: 
   line 563: 0
   line 564: 88
   line 565: 92
   line 566: 108
   line 564: 121
   line 568: 122
   line 569: 129
   line 570: 151
   line 564: 159

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      161      0    $this       Lscala/actors/Actor;
   0      161      1    f$4       Lscala/PartialFunction;


public static java.lang.Object receiveWithin(scala.actors.Actor, long, scala.PartialFunction);
  Code:
   Stack=7, Locals=13, Args_size=3
   0:	getstatic	#187; //Field scala/actors/Actor$.MODULE$:Lscala/actors/Actor$;
   3:	aload_0
   4:	invokeinterface	#82,  1; //InterfaceMethod scala/actors/Actor.scheduler:()Lscala/actors/IScheduler;
   9:	astore	5
   11:	astore	4
   13:	aload	4
   15:	aload	5
   17:	invokevirtual	#207; //Method scala/actors/Actor$.rawSelf:(Lscala/actors/IScheduler;)Lscala/actors/Reactor;
   20:	checkcast	#30; //class scala/actors/Actor
   23:	dup
   24:	ifnonnull	35
   27:	pop
   28:	aload_0
   29:	ifnull	42
   32:	goto	46
   35:	aload_0
   36:	invokevirtual	#110; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   39:	ifeq	46
   42:	iconst_1
   43:	goto	47
   46:	iconst_0
   47:	new	#460; //class scala/actors/Actor$$anonfun$receiveWithin$1
   50:	dup
   51:	pop
   52:	aload_0
   53:	invokespecial	#461; //Method scala/actors/Actor$$anonfun$receiveWithin$1."<init>":(Lscala/actors/Actor;)V
   56:	istore	6
   58:	iload	6
   60:	ifne	92
   63:	new	#212; //class java/lang/AssertionError
   66:	dup
   67:	new	#214; //class scala/collection/mutable/StringBuilder
   70:	dup
   71:	invokespecial	#216; //Method scala/collection/mutable/StringBuilder."<init>":()V
   74:	ldc	#218; //String assertion failed: 
   76:	invokevirtual	#222; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   79:	ldc_w	#463; //String receive from channel belonging to other actor
   82:	invokevirtual	#222; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   85:	invokevirtual	#228; //Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
   88:	invokespecial	#230; //Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
   91:	athrow
   92:	aload_0
   93:	dup
   94:	pop
   95:	monitorenter
   96:	aload_0
   97:	invokeinterface	#288,  1; //InterfaceMethod scala/actors/Actor.shouldExit:()Z
   102:	ifeq	112
   105:	aload_0
   106:	invokeinterface	#195,  1; //InterfaceMethod scala/actors/Actor.exit:()Lscala/runtime/Nothing$;
   111:	athrow
   112:	aload_0
   113:	aload_0
   114:	invokeinterface	#318,  1; //InterfaceMethod scala/actors/Reactor.mailbox:()Lscala/actors/MQueue;
   119:	invokeinterface	#322,  2; //InterfaceMethod scala/actors/Reactor.drainSendBuffer:(Lscala/actors/MQueue;)V
   124:	aload_0
   125:	monitorexit
   126:	aload_0
   127:	invokeinterface	#318,  1; //InterfaceMethod scala/actors/Reactor.mailbox:()Lscala/actors/MQueue;
   132:	new	#465; //class scala/actors/Actor$$anonfun$receiveWithin$2
   135:	dup
   136:	aload_0
   137:	invokespecial	#466; //Method scala/actors/Actor$$anonfun$receiveWithin$2."<init>":(Lscala/actors/Actor;)V
   140:	invokevirtual	#331; //Method scala/actors/MQueue.extractFirst:(Lscala/Function2;)Lscala/actors/MQueueElement;
   143:	pop
   144:	new	#468; //class scala/actors/Actor$$anonfun$2
   147:	dup
   148:	aload_0
   149:	aload_3
   150:	invokespecial	#469; //Method scala/actors/Actor$$anonfun$2."<init>":(Lscala/actors/Actor;Lscala/PartialFunction;)V
   153:	astore	8
   155:	iconst_0
   156:	istore	12
   158:	iload	12
   160:	ifeq	212
   163:	aload_3
   164:	aload_0
   165:	invokeinterface	#472,  1; //InterfaceMethod scala/actors/Actor.scala$actors$Actor$$received:()Lscala/Option;
   170:	invokevirtual	#378; //Method scala/Option.get:()Ljava/lang/Object;
   173:	invokeinterface	#475,  2; //InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
   178:	astore	7
   180:	aload_0
   181:	getstatic	#39; //Field scala/None$.MODULE$:Lscala/None$;
   184:	invokeinterface	#43,  2; //InterfaceMethod scala/actors/Actor.scala$actors$Actor$$received_$eq:(Lscala/Option;)V
   189:	aload_0
   190:	aload_0
   191:	invokeinterface	#478,  1; //InterfaceMethod scala/actors/ReplyReactor.senders:()Lscala/collection/immutable/List;
   196:	invokeinterface	#481,  1; //InterfaceMethod scala/collection/TraversableLike.tail:()Ljava/lang/Object;
   201:	checkcast	#162; //class scala/collection/immutable/List
   204:	invokeinterface	#426,  2; //InterfaceMethod scala/actors/ReplyReactor.senders_$eq:(Lscala/collection/immutable/List;)V
   209:	aload	7
   211:	areturn
   212:	aload_0
   213:	invokeinterface	#318,  1; //InterfaceMethod scala/actors/Reactor.mailbox:()Lscala/actors/MQueue;
   218:	new	#483; //class scala/actors/Actor$$anonfun$3
   221:	dup
   222:	aload_0
   223:	aload_3
   224:	invokespecial	#484; //Method scala/actors/Actor$$anonfun$3."<init>":(Lscala/actors/Actor;Lscala/PartialFunction;)V
   227:	invokevirtual	#331; //Method scala/actors/MQueue.extractFirst:(Lscala/Function2;)Lscala/actors/MQueueElement;
   230:	astore	10
   232:	aload	10
   234:	ifnonnull	419
   237:	aload_0
   238:	dup
   239:	pop
   240:	monitorenter
   241:	aload_0
   242:	invokeinterface	#343,  1; //InterfaceMethod scala/actors/Reactor.sendBuffer:()Lscala/collection/mutable/Queue;
   247:	invokevirtual	#346; //Method scala/collection/mutable/Queue.isEmpty:()Z
   250:	ifeq	382
   253:	lload_1
   254:	lconst_0
   255:	lcmp
   256:	ifne	267
   259:	iconst_1
   260:	istore	12
   262:	aload	8
   264:	goto	402
   267:	aload_0
   268:	new	#486; //class scala/actors/Actor$$anonfun$5
   271:	dup
   272:	aload_0
   273:	aload_3
   274:	invokespecial	#487; //Method scala/actors/Actor$$anonfun$5."<init>":(Lscala/actors/Actor;Lscala/PartialFunction;)V
   277:	invokeinterface	#352,  2; //InterfaceMethod scala/actors/Reactor.waitingFor_$eq:(Lscala/Function1;)V
   282:	aload_0
   283:	getstatic	#39; //Field scala/None$.MODULE$:Lscala/None$;
   286:	invokeinterface	#43,  2; //InterfaceMethod scala/actors/Actor.scala$actors$Actor$$received_$eq:(Lscala/Option;)V
   291:	aload_0
   292:	iconst_1
   293:	invokeinterface	#34,  2; //InterfaceMethod scala/actors/Actor.scala$actors$Actor$$isSuspended_$eq:(Z)V
   298:	aload_0
   299:	new	#358; //class scala/Some
   302:	dup
   303:	new	#489; //class scala/actors/Actor$$anon$5
   306:	dup
   307:	aload_0
   308:	aload_0
   309:	invokespecial	#490; //Method scala/actors/Actor$$anon$5."<init>":(Lscala/actors/Actor;Lscala/actors/Actor;)V
   312:	invokespecial	#364; //Method scala/Some."<init>":(Ljava/lang/Object;)V
   315:	invokeinterface	#46,  2; //InterfaceMethod scala/actors/Actor.scala$actors$Actor$$onTimeout_$eq:(Lscala/Option;)V
   320:	getstatic	#187; //Field scala/actors/Actor$.MODULE$:Lscala/actors/Actor$;
   323:	invokevirtual	#368; //Method scala/actors/Actor$.timer:()Ljava/util/Timer;
   326:	aload_0
   327:	invokeinterface	#372,  1; //InterfaceMethod scala/actors/Actor.scala$actors$Actor$$onTimeout:()Lscala/Option;
   332:	invokevirtual	#378; //Method scala/Option.get:()Ljava/lang/Object;
   335:	checkcast	#380; //class java/util/TimerTask
   338:	lload_1
   339:	invokevirtual	#386; //Method java/util/Timer.schedule:(Ljava/util/TimerTask;J)V
   342:	aload_0
   343:	invokeinterface	#82,  1; //InterfaceMethod scala/actors/Actor.scheduler:()Lscala/actors/IScheduler;
   348:	aload_0
   349:	invokeinterface	#494,  1; //InterfaceMethod scala/actors/Actor.scala$actors$Actor$$blocker:()Lscala/actors/Actor$blocker$;
   354:	invokeinterface	#498,  2; //InterfaceMethod scala/actors/IScheduler.managedBlock:(Lscala/concurrent/ManagedBlocker;)V
   359:	aload_0
   360:	aload_0
   361:	invokeinterface	#318,  1; //InterfaceMethod scala/actors/Reactor.mailbox:()Lscala/actors/MQueue;
   366:	invokeinterface	#322,  2; //InterfaceMethod scala/actors/Reactor.drainSendBuffer:(Lscala/actors/MQueue;)V
   371:	new	#500; //class scala/actors/Actor$$anonfun$6
   374:	dup
   375:	aload_0
   376:	invokespecial	#501; //Method scala/actors/Actor$$anonfun$6."<init>":(Lscala/actors/Actor;)V
   379:	goto	402
   382:	aload_0
   383:	aload_0
   384:	invokeinterface	#318,  1; //InterfaceMethod scala/actors/Reactor.mailbox:()Lscala/actors/MQueue;
   389:	invokeinterface	#322,  2; //InterfaceMethod scala/actors/Reactor.drainSendBuffer:(Lscala/actors/MQueue;)V
   394:	new	#503; //class scala/actors/Actor$$anonfun$4
   397:	dup
   398:	aload_0
   399:	invokespecial	#504; //Method scala/actors/Actor$$anonfun$4."<init>":(Lscala/actors/Actor;)V
   402:	aload_0
   403:	monitorexit
   404:	checkcast	#394; //class scala/Function0
   407:	astore	9
   409:	aload	9
   411:	invokeinterface	#396,  1; //InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
   416:	goto	513
   419:	aload_0
   420:	dup
   421:	pop
   422:	monitorenter
   423:	aload_0
   424:	invokeinterface	#372,  1; //InterfaceMethod scala/actors/Actor.scala$actors$Actor$$onTimeout:()Lscala/Option;
   429:	invokevirtual	#505; //Method scala/Option.isEmpty:()Z
   432:	ifeq	438
   435:	goto	463
   438:	aload_0
   439:	invokeinterface	#372,  1; //InterfaceMethod scala/actors/Actor.scala$actors$Actor$$onTimeout:()Lscala/Option;
   444:	invokevirtual	#378; //Method scala/Option.get:()Ljava/lang/Object;
   447:	checkcast	#380; //class java/util/TimerTask
   450:	invokevirtual	#508; //Method java/util/TimerTask.cancel:()Z
   453:	pop
   454:	aload_0
   455:	getstatic	#39; //Field scala/None$.MODULE$:Lscala/None$;
   458:	invokeinterface	#46,  2; //InterfaceMethod scala/actors/Actor.scala$actors$Actor$$onTimeout_$eq:(Lscala/Option;)V
   463:	aload_0
   464:	monitorexit
   465:	aload_0
   466:	new	#358; //class scala/Some
   469:	dup
   470:	aload	10
   472:	invokevirtual	#428; //Method scala/actors/MQueueElement.msg:()Ljava/lang/Object;
   475:	invokespecial	#364; //Method scala/Some."<init>":(Ljava/lang/Object;)V
   478:	invokeinterface	#43,  2; //InterfaceMethod scala/actors/Actor.scala$actors$Actor$$received_$eq:(Lscala/Option;)V
   483:	aload_0
   484:	aload	10
   486:	invokevirtual	#414; //Method scala/actors/MQueueElement.session:()Lscala/actors/OutputChannel;
   489:	astore	11
   491:	aload_0
   492:	invokeinterface	#478,  1; //InterfaceMethod scala/actors/ReplyReactor.senders:()Lscala/collection/immutable/List;
   497:	aload	11
   499:	invokevirtual	#239; //Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
   502:	invokeinterface	#426,  2; //InterfaceMethod scala/actors/ReplyReactor.senders_$eq:(Lscala/collection/immutable/List;)V
   507:	iconst_1
   508:	istore	12
   510:	getstatic	#434; //Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
   513:	pop
   514:	goto	158
   517:	aload_0
   518:	monitorexit
   519:	athrow
   520:	aload_0
   521:	monitorexit
   522:	athrow
   523:	aload_0
   524:	monitorexit
   525:	athrow
  Exception table:
   from   to  target type
   423   465   523   any
   241   404   520   any
    96   126   517   any
  LineNumberTable: 
   line 483: 0
   line 485: 92
   line 486: 96
   line 487: 112
   line 485: 125
   line 491: 126
   line 493: 144
   line 501: 155
   line 502: 158
   line 548: 163
   line 549: 180
   line 550: 189
   line 551: 209
   line 503: 212
   line 509: 232
   line 510: 237
   line 512: 241
   line 516: 253
   line 517: 259
   line 518: 262
   line 520: 267
   line 521: 282
   line 522: 291
   line 524: 298
   line 527: 320
   line 528: 342
   line 529: 359
   line 531: 371
   line 516: 379
   line 513: 382
   line 515: 394
   line 536: 402
   line 510: 403
   line 536: 404
   line 510: 407
   line 534: 409
   line 536: 419
   line 537: 423
   line 538: 438
   line 539: 454
   line 542: 463
   line 536: 464
   line 542: 465
   line 543: 483
   line 544: 507
   line 535: 510
   line 509: 513
   line 485: 518
   line 510: 521
   line 536: 524

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      526      0    $this       Lscala/actors/Actor;
   0      526      1    msec       J
   0      526      3    f$2       Lscala/PartialFunction;
   180      31      7    result       Ljava/lang/Object;
   155      56      8    receiveTimeout       Lscala/Function0;
   212      305      8    receiveTimeout       Lscala/Function0;
   520      6      8    receiveTimeout       Lscala/Function0;
   409      7      9    todo       Lscala/Function0;
   232      282      10    qel       Lscala/actors/MQueueElement;
   520      6      10    qel       Lscala/actors/MQueueElement;
   158      53      12    done       Z
   212      305      12    done       Z
   520      6      12    done       Z


public static java.lang.Object receive(scala.actors.Actor, scala.PartialFunction);
  Code:
   Stack=5, Locals=9, Args_size=2
   0:	getstatic	#187; //Field scala/actors/Actor$.MODULE$:Lscala/actors/Actor$;
   3:	aload_0
   4:	invokeinterface	#82,  1; //InterfaceMethod scala/actors/Actor.scheduler:()Lscala/actors/IScheduler;
   9:	astore_3
   10:	astore_2
   11:	aload_2
   12:	aload_3
   13:	invokevirtual	#207; //Method scala/actors/Actor$.rawSelf:(Lscala/actors/IScheduler;)Lscala/actors/Reactor;
   16:	checkcast	#30; //class scala/actors/Actor
   19:	dup
   20:	ifnonnull	31
   23:	pop
   24:	aload_0
   25:	ifnull	38
   28:	goto	42
   31:	aload_0
   32:	invokevirtual	#110; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   35:	ifeq	42
   38:	iconst_1
   39:	goto	43
   42:	iconst_0
   43:	new	#513; //class scala/actors/Actor$$anonfun$receive$1
   46:	dup
   47:	pop
   48:	aload_0
   49:	invokespecial	#514; //Method scala/actors/Actor$$anonfun$receive$1."<init>":(Lscala/actors/Actor;)V
   52:	istore	4
   54:	iload	4
   56:	ifne	88
   59:	new	#212; //class java/lang/AssertionError
   62:	dup
   63:	new	#214; //class scala/collection/mutable/StringBuilder
   66:	dup
   67:	invokespecial	#216; //Method scala/collection/mutable/StringBuilder."<init>":()V
   70:	ldc	#218; //String assertion failed: 
   72:	invokevirtual	#222; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   75:	ldc_w	#463; //String receive from channel belonging to other actor
   78:	invokevirtual	#222; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   81:	invokevirtual	#228; //Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
   84:	invokespecial	#230; //Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
   87:	athrow
   88:	aload_0
   89:	dup
   90:	pop
   91:	monitorenter
   92:	aload_0
   93:	invokeinterface	#288,  1; //InterfaceMethod scala/actors/Actor.shouldExit:()Z
   98:	ifeq	108
   101:	aload_0
   102:	invokeinterface	#195,  1; //InterfaceMethod scala/actors/Actor.exit:()Lscala/runtime/Nothing$;
   107:	athrow
   108:	aload_0
   109:	aload_0
   110:	invokeinterface	#318,  1; //InterfaceMethod scala/actors/Reactor.mailbox:()Lscala/actors/MQueue;
   115:	invokeinterface	#322,  2; //InterfaceMethod scala/actors/Reactor.drainSendBuffer:(Lscala/actors/MQueue;)V
   120:	aload_0
   121:	monitorexit
   122:	iconst_0
   123:	istore	8
   125:	iload	8
   127:	ifeq	179
   130:	aload_1
   131:	aload_0
   132:	invokeinterface	#472,  1; //InterfaceMethod scala/actors/Actor.scala$actors$Actor$$received:()Lscala/Option;
   137:	invokevirtual	#378; //Method scala/Option.get:()Ljava/lang/Object;
   140:	invokeinterface	#475,  2; //InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
   145:	astore	5
   147:	aload_0
   148:	getstatic	#39; //Field scala/None$.MODULE$:Lscala/None$;
   151:	invokeinterface	#43,  2; //InterfaceMethod scala/actors/Actor.scala$actors$Actor$$received_$eq:(Lscala/Option;)V
   156:	aload_0
   157:	aload_0
   158:	invokeinterface	#478,  1; //InterfaceMethod scala/actors/ReplyReactor.senders:()Lscala/collection/immutable/List;
   163:	invokeinterface	#481,  1; //InterfaceMethod scala/collection/TraversableLike.tail:()Ljava/lang/Object;
   168:	checkcast	#162; //class scala/collection/immutable/List
   171:	invokeinterface	#426,  2; //InterfaceMethod scala/actors/ReplyReactor.senders_$eq:(Lscala/collection/immutable/List;)V
   176:	aload	5
   178:	areturn
   179:	aload_0
   180:	invokeinterface	#318,  1; //InterfaceMethod scala/actors/Reactor.mailbox:()Lscala/actors/MQueue;
   185:	new	#516; //class scala/actors/Actor$$anonfun$1
   188:	dup
   189:	aload_0
   190:	aload_1
   191:	invokespecial	#517; //Method scala/actors/Actor$$anonfun$1."<init>":(Lscala/actors/Actor;Lscala/PartialFunction;)V
   194:	invokevirtual	#331; //Method scala/actors/MQueue.extractFirst:(Lscala/Function2;)Lscala/actors/MQueueElement;
   197:	astore	6
   199:	aload	6
   201:	ifnonnull	291
   204:	aload_0
   205:	dup
   206:	pop
   207:	monitorenter
   208:	aload_0
   209:	invokeinterface	#343,  1; //InterfaceMethod scala/actors/Reactor.sendBuffer:()Lscala/collection/mutable/Queue;
   214:	invokevirtual	#346; //Method scala/collection/mutable/Queue.isEmpty:()Z
   217:	ifeq	274
   220:	aload_0
   221:	new	#519; //class scala/actors/Actor$$anonfun$receive$2
   224:	dup
   225:	aload_0
   226:	aload_1
   227:	invokespecial	#520; //Method scala/actors/Actor$$anonfun$receive$2."<init>":(Lscala/actors/Actor;Lscala/PartialFunction;)V
   230:	invokeinterface	#352,  2; //InterfaceMethod scala/actors/Reactor.waitingFor_$eq:(Lscala/Function1;)V
   235:	aload_0
   236:	iconst_1
   237:	invokeinterface	#34,  2; //InterfaceMethod scala/actors/Actor.scala$actors$Actor$$isSuspended_$eq:(Z)V
   242:	aload_0
   243:	invokeinterface	#82,  1; //InterfaceMethod scala/actors/Actor.scheduler:()Lscala/actors/IScheduler;
   248:	aload_0
   249:	invokeinterface	#494,  1; //InterfaceMethod scala/actors/Actor.scala$actors$Actor$$blocker:()Lscala/actors/Actor$blocker$;
   254:	invokeinterface	#498,  2; //InterfaceMethod scala/actors/IScheduler.managedBlock:(Lscala/concurrent/ManagedBlocker;)V
   259:	aload_0
   260:	aload_0
   261:	invokeinterface	#318,  1; //InterfaceMethod scala/actors/Reactor.mailbox:()Lscala/actors/MQueue;
   266:	invokeinterface	#322,  2; //InterfaceMethod scala/actors/Reactor.drainSendBuffer:(Lscala/actors/MQueue;)V
   271:	goto	286
   274:	aload_0
   275:	aload_0
   276:	invokeinterface	#318,  1; //InterfaceMethod scala/actors/Reactor.mailbox:()Lscala/actors/MQueue;
   281:	invokeinterface	#322,  2; //InterfaceMethod scala/actors/Reactor.drainSendBuffer:(Lscala/actors/MQueue;)V
   286:	aload_0
   287:	monitorexit
   288:	goto	336
   291:	aload_0
   292:	new	#358; //class scala/Some
   295:	dup
   296:	aload	6
   298:	invokevirtual	#428; //Method scala/actors/MQueueElement.msg:()Ljava/lang/Object;
   301:	invokespecial	#364; //Method scala/Some."<init>":(Ljava/lang/Object;)V
   304:	invokeinterface	#43,  2; //InterfaceMethod scala/actors/Actor.scala$actors$Actor$$received_$eq:(Lscala/Option;)V
   309:	aload_0
   310:	aload	6
   312:	invokevirtual	#414; //Method scala/actors/MQueueElement.session:()Lscala/actors/OutputChannel;
   315:	astore	7
   317:	aload_0
   318:	invokeinterface	#478,  1; //InterfaceMethod scala/actors/ReplyReactor.senders:()Lscala/collection/immutable/List;
   323:	aload	7
   325:	invokevirtual	#239; //Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
   328:	invokeinterface	#426,  2; //InterfaceMethod scala/actors/ReplyReactor.senders_$eq:(Lscala/collection/immutable/List;)V
   333:	iconst_1
   334:	istore	8
   336:	goto	125
   339:	aload_0
   340:	monitorexit
   341:	athrow
   342:	aload_0
   343:	monitorexit
   344:	athrow
  Exception table:
   from   to  target type
   208   291   342   any
    92   122   339   any
  LineNumberTable: 
   line 432: 0
   line 434: 88
   line 435: 92
   line 436: 108
   line 434: 121
   line 439: 122
   line 440: 125
   line 468: 130
   line 469: 147
   line 470: 156
   line 471: 176
   line 441: 179
   line 447: 199
   line 448: 204
   line 450: 208
   line 454: 220
   line 455: 235
   line 456: 242
   line 457: 259
   line 450: 271
   line 451: 274
   line 462: 286
   line 448: 287
   line 462: 291
   line 463: 309
   line 464: 333
   line 447: 336
   line 434: 340
   line 448: 343

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      345      0    $this       Lscala/actors/Actor;
   0      345      1    f$1       Lscala/PartialFunction;
   147      31      5    result       Ljava/lang/Object;
   199      137      6    qel       Lscala/actors/MQueueElement;
   342      3      6    qel       Lscala/actors/MQueueElement;
   125      53      8    done       Z
   179      160      8    done       Z
   342      3      8    done       Z


public static void resumeReceiver(scala.actors.Actor, scala.Tuple2, boolean);
  Code:
   Stack=7, Locals=3, Args_size=3
   0:	aload_0
   1:	dup
   2:	pop
   3:	monitorenter
   4:	aload_0
   5:	invokeinterface	#372,  1; //InterfaceMethod scala/actors/Actor.scala$actors$Actor$$onTimeout:()Lscala/Option;
   10:	invokevirtual	#505; //Method scala/Option.isEmpty:()Z
   13:	ifeq	19
   16:	goto	44
   19:	aload_0
   20:	invokeinterface	#372,  1; //InterfaceMethod scala/actors/Actor.scala$actors$Actor$$onTimeout:()Lscala/Option;
   25:	invokevirtual	#378; //Method scala/Option.get:()Ljava/lang/Object;
   28:	checkcast	#380; //class java/util/TimerTask
   31:	invokevirtual	#508; //Method java/util/TimerTask.cancel:()Z
   34:	pop
   35:	aload_0
   36:	getstatic	#39; //Field scala/None$.MODULE$:Lscala/None$;
   39:	invokeinterface	#46,  2; //InterfaceMethod scala/actors/Actor.scala$actors$Actor$$onTimeout_$eq:(Lscala/Option;)V
   44:	aload_0
   45:	monitorexit
   46:	aload_0
   47:	getstatic	#401; //Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
   50:	getstatic	#406; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   53:	iconst_1
   54:	anewarray	#408; //class scala/actors/OutputChannel
   57:	dup
   58:	iconst_0
   59:	aload_1
   60:	invokevirtual	#528; //Method scala/Tuple2._2:()Ljava/lang/Object;
   63:	checkcast	#408; //class scala/actors/OutputChannel
   66:	aastore
   67:	checkcast	#416; //class "[Ljava/lang/Object;"
   70:	invokevirtual	#420; //Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
   73:	invokevirtual	#423; //Method scala/collection/immutable/List$.apply:(Lscala/collection/Seq;)Lscala/collection/immutable/List;
   76:	invokeinterface	#426,  2; //InterfaceMethod scala/actors/ReplyReactor.senders_$eq:(Lscala/collection/immutable/List;)V
   81:	aload_0
   82:	aload_1
   83:	iload_2
   84:	invokeinterface	#532,  3; //InterfaceMethod scala/actors/Actor.scala$actors$Actor$$super$resumeReceiver:(Lscala/Tuple2;Z)V
   89:	return
   90:	aload_0
   91:	monitorexit
   92:	athrow
  Exception table:
   from   to  target type
     4    46    90   any
  LineNumberTable: 
   line 415: 0
   line 416: 4
   line 417: 19
   line 418: 35
   line 421: 44
   line 415: 45
   line 421: 46
   line 422: 81
   line 415: 91

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      93      0    $this       Lscala/actors/Actor;
   0      93      1    item       Lscala/Tuple2;
   0      93      2    onSameThread       Z


public static java.lang.Runnable makeReaction(scala.actors.Actor, scala.Function0);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#539; //class scala/actors/ActorTask
   3:	dup
   4:	aload_0
   5:	aload_1
   6:	invokespecial	#540; //Method scala/actors/ActorTask."<init>":(Lscala/actors/Actor;Lscala/Function0;)V
   9:	areturn
  LineNumberTable: 
   line 412: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    $this       Lscala/actors/Actor;
   0      10      1    fun       Lscala/Function0;


public static scala.Function0 startSearch(scala.actors.Actor, java.lang.Object, scala.actors.OutputChannel, scala.Function1);
  Code:
   Stack=5, Locals=4, Args_size=4
   0:	aload_0
   1:	invokeinterface	#113,  1; //InterfaceMethod scala/actors/Actor.scala$actors$Actor$$isSuspended:()Z
   6:	ifeq	22
   9:	new	#545; //class scala/actors/Actor$$anonfun$startSearch$1
   12:	dup
   13:	aload_0
   14:	aload_1
   15:	aload_2
   16:	invokespecial	#548; //Method scala/actors/Actor$$anonfun$startSearch$1."<init>":(Lscala/actors/Actor;Ljava/lang/Object;Lscala/actors/OutputChannel;)V
   19:	goto	31
   22:	aload_0
   23:	aload_1
   24:	aload_2
   25:	aload_3
   26:	invokeinterface	#552,  4; //InterfaceMethod scala/actors/Actor.scala$actors$Actor$$super$startSearch:(Ljava/lang/Object;Lscala/actors/OutputChannel;Lscala/Function1;)Lscala/Function0;
   31:	areturn
  LineNumberTable: 
   line 404: 0
   line 405: 9
   line 409: 22
   line 404: 31

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      32      0    $this       Lscala/actors/Actor;
   0      32      1    msg$1       Ljava/lang/Object;
   0      32      2    replyTo$1       Lscala/actors/OutputChannel;
   0      32      3    handler       Lscala/Function1;


public static scala.actors.IScheduler scheduler(scala.actors.Actor);
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	getstatic	#563; //Field scala/actors/Scheduler$.MODULE$:Lscala/actors/Scheduler$;
   3:	areturn
  LineNumberTable: 
   line 401: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      4      0    $this       Lscala/actors/Actor;


}

