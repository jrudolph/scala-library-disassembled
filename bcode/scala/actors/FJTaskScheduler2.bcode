Compiled from "FJTaskScheduler2.scala"
public class scala.actors.FJTaskScheduler2 extends java.lang.Thread implements scala.actors.ActorGC,scala.ScalaObject
  SourceFile: "FJTaskScheduler2.scala"
  ScalaSig: length = 0x574
   05 00 FFFFFF81 2A 06 08 01 02 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF80 00 07 02 10
   46 4A 54 61 73 6B 53 63 68 65 64 75 6C 65 72 32
   0A 02 03 04 01 06 61 63 74 6F 72 73 0A 01 05 01
   05 73 63 61 6C 61 03 00 13 04 00 08 10 14 10 02
   09 0E 0D 01 0A 0A 02 0B 0C 01 04 6C 61 6E 67 0A
   01 0D 01 04 6A 61 76 61 09 02 0F 0A 02 06 54 68
   72 65 61 64 10 02 11 12 0D 01 02 09 02 13 02 02
   07 41 63 74 6F 72 47 43 10 02 15 16 0D 01 04 09
   02 17 04 02 0B 53 63 61 6C 61 4F 62 6A 65 63 74
   08 08 19 00 FFFFFF82 FFFFFFC2 FFFFFF80 FFFFFF84 00 1A 01 0C 69 6E 69 74
   43 6F 72 65 53 69 7A 65 15 01 1B 10 02 15 1C 09
   02 1D 04 02 03 49 6E 74 08 08 1F 00 FFFFFF82 FFFFFF80 FFFFFFA0 FFFFFF80
   04 1B 01 0D 69 6E 69 74 43 6F 72 65 53 69 7A 65
   20 08 08 21 00 FFFFFF82 FFFFFFC2 FFFFFF80 FFFFFF84 00 1A 01 07 6D 61 78
   53 69 7A 65 08 08 23 00 FFFFFF82 FFFFFF80 FFFFFFA0 FFFFFF80 04 1B 01 08
   6D 61 78 53 69 7A 65 20 08 08 25 00 FFFFFF82 FFFFFF80 FFFFFFA0 FFFFFF80
   04 26 01 06 64 61 65 6D 6F 6E 10 02 15 27 09 02
   28 04 02 07 42 6F 6F 6C 65 61 6E 08 05 2A 00 FFFFFF84
   00 2B 01 06 3C 69 6E 69 74 3E 14 04 2C 2D 2E 2F
   10 02 11 00 08 05 19 29 FFFFFFC0 00 1B 08 05 21 29 FFFFFFC0
   00 1B 08 05 25 29 FFFFFFC0 00 26 08 05 2A 00 FFFFFF84 00 31
   14 01 2C 08 05 2A 00 FFFFFF84 00 33 14 02 2C 34 08 05
   25 32 FFFFFFC0 00 26 08 07 36 00 FFFFFFC0 FFFFFF80 FFFFFF84 00 37 01 0A
   70 72 69 6E 74 53 74 61 74 73 15 01 26 08 07 39
   00 FFFFFFC0 FFFFFF80 FFFFFF84 00 3A 01 0E 70 72 69 6E 74 53 74 61
   74 73 5F 24 65 71 14 02 3B 3E 10 02 15 3C 09 02
   3D 04 02 04 55 6E 69 74 08 07 3F 38 FFFFFF81 FFFFFF80 FFFFFFC0 00
   26 01 03 78 24 31 08 06 41 00 FFFFFFA0 FFFFFFA0 04 26 01 0B
   70 72 69 6E 74 53 74 61 74 73 20 08 07 43 00 FFFFFFC0
   FFFFFF80 FFFFFF84 04 1A 01 08 63 6F 72 65 53 69 7A 65 08 07
   45 00 FFFFFFC0 FFFFFF80 FFFFFF84 04 46 01 0C 63 6F 72 65 53 69 7A
   65 5F 24 65 71 14 02 3B 47 08 07 3F 44 FFFFFF81 FFFFFF80 FFFFFFC0
   00 1B 08 06 49 00 FFFFFFA0 FFFFFFA0 04 1B 01 09 63 6F 72 65
   53 69 7A 65 20 08 07 4B 00 FFFFFFC2 FFFFFF80 FFFFFF84 04 4C 01 08
   65 78 65 63 75 74 6F 72 15 01 4D 10 02 11 4E 09
   02 4F 02 02 11 46 4A 54 61 73 6B 52 75 6E 6E 65
   72 47 72 6F 75 70 08 06 51 00 FFFFFFA0 FFFFFF80 04 4D 01 09
   65 78 65 63 75 74 6F 72 20 08 07 53 00 FFFFFFC0 FFFFFF80 FFFFFF84
   04 37 01 0B 74 65 72 6D 69 6E 61 74 69 6E 67 08
   07 55 00 FFFFFFC0 FFFFFF80 FFFFFF84 04 56 01 0F 74 65 72 6D 69 6E
   61 74 69 6E 67 5F 24 65 71 14 02 3B 57 08 07 3F
   54 FFFFFF81 FFFFFF80 FFFFFFC0 00 26 08 06 59 00 FFFFFFA0 FFFFFFA0 04 26 01 0C
   74 65 72 6D 69 6E 61 74 69 6E 67 20 08 07 5B 00
   FFFFFFC0 FFFFFF80 FFFFFF84 04 37 01 0A 73 75 73 70 65 6E 64 69 6E
   67 08 07 5D 00 FFFFFFC0 FFFFFF80 FFFFFF84 04 5E 01 0E 73 75 73 70
   65 6E 64 69 6E 67 5F 24 65 71 14 02 3B 5F 08 07
   3F 5C FFFFFF81 FFFFFF80 FFFFFFC0 00 26 08 06 61 00 FFFFFFA0 FFFFFFA0 04 26 01
   0B 73 75 73 70 65 6E 64 69 6E 67 20 08 07 63 00
   FFFFFFC0 FFFFFF80 FFFFFF84 04 1A 01 0E 73 75 62 6D 69 74 74 65 64
   54 61 73 6B 73 08 07 65 00 FFFFFFC0 FFFFFF80 FFFFFF84 04 66 01 12
   73 75 62 6D 69 74 74 65 64 54 61 73 6B 73 5F 24
   65 71 14 02 3B 67 08 07 3F 64 FFFFFF81 FFFFFF80 FFFFFFC0 00 1B 08
   06 69 00 FFFFFFA0 FFFFFFA0 04 1B 01 0F 73 75 62 6D 69 74 74
   65 64 54 61 73 6B 73 20 08 05 6B 00 FFFFFF84 00 6C 01
   0E 70 72 69 6E 74 41 63 74 6F 72 44 75 6D 70 15
   01 3B 08 07 6E 00 FFFFFFC2 FFFFFF80 FFFFFF84 04 1A 01 0A 43 48 45
   43 4B 5F 46 52 45 51 08 06 70 00 FFFFFFA0 FFFFFF80 04 1B 01
   0B 43 48 45 43 4B 5F 46 52 45 51 20 08 05 72 00
   FFFFFF84 00 73 01 08 6F 6E 4C 6F 63 6B 75 70 14 02 3B
   74 08 05 75 71 FFFFFFC0 00 76 01 07 68 61 6E 64 6C 65
   72 10 03 15 77 3B 09 02 78 04 02 09 46 75 6E 63
   74 69 6F 6E 30 08 05 72 00 FFFFFF84 00 7A 14 02 7B 7D
   14 02 3B 7C 08 05 75 79 FFFFFFC0 00 76 08 05 7E 79 FFFFFFC0
   00 1B 01 06 6D 69 6C 6C 69 73 08 09 FFFFFF81 00 00 FFFFFFC0
   FFFFFF80 FFFFFF84 04 FFFFFF81 01 01 0D 6C 6F 63 6B 75 70 48 61 6E
   64 6C 65 72 15 01 76 08 09 FFFFFF81 03 00 FFFFFFC0 FFFFFF80 FFFFFF84 04
   FFFFFF81 04 01 11 6C 6F 63 6B 75 70 48 61 6E 64 6C 65
   72 5F 24 65 71 14 03 3B FFFFFF81 05 08 08 3F FFFFFF81 02 FFFFFF81
   FFFFFF80 FFFFFFC0 00 76 08 07 FFFFFF81 07 00 FFFFFFA0 FFFFFFA0 04 76 01 0E 6C
   6F 63 6B 75 70 48 61 6E 64 6C 65 72 20 08 06 FFFFFF81
   09 00 FFFFFF84 04 37 01 11 61 6C 6C 57 6F 72 6B 65 72
   73 42 6C 6F 63 6B 65 64 08 07 FFFFFF81 0B 00 FFFFFF84 20 FFFFFF81
   0C 01 03 72 75 6E 14 01 3B 08 07 FFFFFF81 0E 00 FFFFFF84 00
   FFFFFF81 0F 01 07 65 78 65 63 75 74 65 14 03 3B FFFFFF81 10
   08 08 FFFFFF81 11 FFFFFF81 0D FFFFFFC0 00 FFFFFF81 12 01 04 74 61 73 6B
   10 03 09 FFFFFF81 13 09 03 FFFFFF81 14 0A 02 08 52 75 6E 6E
   61 62 6C 65 08 07 FFFFFF81 16 00 FFFFFF84 00 FFFFFF81 17 01 10 65
   78 65 63 75 74 65 46 72 6F 6D 41 63 74 6F 72 14
   03 3B FFFFFF81 18 08 08 FFFFFF81 11 FFFFFF81 15 FFFFFFC0 00 FFFFFF81 12 08 07
   FFFFFF81 0E 00 FFFFFF84 00 FFFFFF81 1A 14 03 3B FFFFFF81 1B 08 09 FFFFFF81 1C
   FFFFFF81 19 FFFFFF84 FFFFFFC0 00 FFFFFF81 1D 01 03 66 75 6E 10 04 15 FFFFFF81
   1E 3B 09 03 FFFFFF81 1F 04 02 08 3C 62 79 6E 61 6D 65
   3E 08 07 FFFFFF81 21 00 FFFFFF84 00 FFFFFF81 0C 01 08 73 68 75 74
   64 6F 77 6E 08 07 FFFFFF81 23 00 FFFFFF84 00 FFFFFF81 24 01 08 73
   6E 61 70 73 68 6F 74 14 02 FFFFFF81 25 10 03 11 FFFFFF81 26
   09 03 FFFFFF81 27 02 02 0B 4C 69 6E 6B 65 64 51 75 65
   75 65 08 06 FFFFFF81 29 00 FFFFFF84 00 37 01 08 69 73 41 63
   74 69 76 65 
  InnerClass: 
   public final #310= #136 of #31; //$anon$1=class scala/actors/FJTaskScheduler2$$anon$1 of class scala/actors/FJTaskScheduler2
   public final #311= #214 of #31; //$anonfun$allWorkersBlocked$1=class scala/actors/FJTaskScheduler2$$anonfun$allWorkersBlocked$1 of class scala/actors/FJTaskScheduler2
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	FJTaskScheduler2.scala;
const #3 = Asciz	scala$actors$ActorGC$$refSet;
const #4 = Asciz	Lscala/collection/mutable/HashSet;;
const #5 = Asciz	scala$actors$ActorGC$$refQ;
const #6 = Asciz	Ljava/lang/ref/ReferenceQueue;;
const #7 = Asciz	scala$actors$ActorGC$$termHandlers;
const #8 = Asciz	Lscala/collection/mutable/HashMap;;
const #9 = Asciz	scala$actors$ActorGC$$pendingReactions;
const #10 = Asciz	I;
const #11 = Asciz	lockupHandler;
const #12 = Asciz	Lscala/Function0;;
const #13 = Asciz	Lscala/Function0<Ljava/lang/Object;>;;
const #14 = Asciz	Signature;
const #15 = Asciz	CHECK_FREQ;
const #16 = Asciz	submittedTasks;
const #17 = Asciz	suspending;
const #18 = Asciz	Z;
const #19 = Asciz	terminating;
const #20 = Asciz	executor;
const #21 = Asciz	Lscala/actors/FJTaskRunnerGroup;;
const #22 = Asciz	coreSize;
const #23 = Asciz	printStats;
const #24 = Asciz	maxSize;
const #25 = Asciz	initCoreSize;
const #26 = Asciz	<init>;
const #27 = Asciz	(IIZ)V;
const #28 = Asciz	Code;
const #29 = Asciz	LineNumberTable;
const #30 = Asciz	scala/actors/FJTaskScheduler2;
const #31 = class	#30;	//  scala/actors/FJTaskScheduler2
const #32 = NameAndType	#25:#10;//  initCoreSize:I
const #33 = Field	#31.#32;	//  scala/actors/FJTaskScheduler2.initCoreSize:I
const #34 = NameAndType	#24:#10;//  maxSize:I
const #35 = Field	#31.#34;	//  scala/actors/FJTaskScheduler2.maxSize:I
const #36 = Asciz	java/lang/Thread;
const #37 = class	#36;	//  java/lang/Thread
const #38 = Asciz	()V;
const #39 = NameAndType	#26:#38;//  "<init>":()V
const #40 = Method	#37.#39;	//  java/lang/Thread."<init>":()V
const #41 = Asciz	scala/actors/IScheduler$class;
const #42 = class	#41;	//  scala/actors/IScheduler$class
const #43 = Asciz	$init$;
const #44 = Asciz	(Lscala/actors/IScheduler;)V;
const #45 = NameAndType	#43:#44;//  $init$:(Lscala/actors/IScheduler;)V
const #46 = Method	#42.#45;	//  scala/actors/IScheduler$class.$init$:(Lscala/actors/IScheduler;)V
const #47 = Asciz	scala/actors/ActorGC$class;
const #48 = class	#47;	//  scala/actors/ActorGC$class
const #49 = Asciz	(Lscala/actors/ActorGC;)V;
const #50 = NameAndType	#43:#49;//  $init$:(Lscala/actors/ActorGC;)V
const #51 = Method	#48.#50;	//  scala/actors/ActorGC$class.$init$:(Lscala/actors/ActorGC;)V
const #52 = Asciz	setDaemon;
const #53 = Asciz	(Z)V;
const #54 = NameAndType	#52:#53;//  setDaemon:(Z)V
const #55 = Method	#31.#54;	//  scala/actors/FJTaskScheduler2.setDaemon:(Z)V
const #56 = NameAndType	#23:#18;//  printStats:Z
const #57 = Field	#31.#56;	//  scala/actors/FJTaskScheduler2.printStats:Z
const #58 = NameAndType	#22:#10;//  coreSize:I
const #59 = Field	#31.#58;	//  scala/actors/FJTaskScheduler2.coreSize:I
const #60 = Asciz	scala/actors/FJTaskRunnerGroup;
const #61 = class	#60;	//  scala/actors/FJTaskRunnerGroup
const #62 = Asciz	()I;
const #63 = NameAndType	#22:#62;//  coreSize:()I
const #64 = Method	#31.#63;	//  scala/actors/FJTaskScheduler2.coreSize:()I
const #65 = Asciz	(I)V;
const #66 = NameAndType	#26:#65;//  "<init>":(I)V
const #67 = Method	#61.#66;	//  scala/actors/FJTaskRunnerGroup."<init>":(I)V
const #68 = NameAndType	#20:#21;//  executor:Lscala/actors/FJTaskRunnerGroup;
const #69 = Field	#31.#68;	//  scala/actors/FJTaskScheduler2.executor:Lscala/actors/FJTaskRunnerGroup;
const #70 = NameAndType	#19:#18;//  terminating:Z
const #71 = Field	#31.#70;	//  scala/actors/FJTaskScheduler2.terminating:Z
const #72 = NameAndType	#17:#18;//  suspending:Z
const #73 = Field	#31.#72;	//  scala/actors/FJTaskScheduler2.suspending:Z
const #74 = NameAndType	#16:#10;//  submittedTasks:I
const #75 = Field	#31.#74;	//  scala/actors/FJTaskScheduler2.submittedTasks:I
const #76 = int	100;
const #77 = NameAndType	#15:#10;//  CHECK_FREQ:I
const #78 = Field	#31.#77;	//  scala/actors/FJTaskScheduler2.CHECK_FREQ:I
const #79 = NameAndType	#11:#12;//  lockupHandler:Lscala/Function0;
const #80 = Field	#31.#79;	//  scala/actors/FJTaskScheduler2.lockupHandler:Lscala/Function0;
const #81 = Asciz	this;
const #82 = Asciz	Lscala/actors/FJTaskScheduler2;;
const #83 = Asciz	daemon;
const #84 = Asciz	LocalVariableTable;
const #85 = Asciz	liftedTree1$1;
const #86 = Asciz	scala/Predef$;
const #87 = class	#86;	//  scala/Predef$
const #88 = Asciz	MODULE$;
const #89 = Asciz	Lscala/Predef$;;
const #90 = NameAndType	#88:#89;//  MODULE$:Lscala/Predef$;
const #91 = Field	#87.#90;	//  scala/Predef$.MODULE$:Lscala/Predef$;
const #92 = NameAndType	#15:#62;//  CHECK_FREQ:()I
const #93 = Method	#31.#92;	//  scala/actors/FJTaskScheduler2.CHECK_FREQ:()I
const #94 = Asciz	int2long;
const #95 = Asciz	(I)J;
const #96 = NameAndType	#94:#95;//  int2long:(I)J
const #97 = Method	#87.#96;	//  scala/Predef$.int2long:(I)J
const #98 = Asciz	wait;
const #99 = Asciz	(J)V;
const #100 = NameAndType	#98:#99;//  wait:(J)V
const #101 = Method	#31.#100;	//  scala/actors/FJTaskScheduler2.wait:(J)V
const #102 = Asciz	()Z;
const #103 = NameAndType	#19:#102;//  terminating:()Z
const #104 = Method	#31.#103;	//  scala/actors/FJTaskScheduler2.terminating:()Z
const #105 = Asciz	scala/actors/scheduler/QuitException;
const #106 = class	#105;	//  scala/actors/scheduler/QuitException
const #107 = Method	#106.#39;	//  scala/actors/scheduler/QuitException."<init>":()V
const #108 = Asciz	java/lang/InterruptedException;
const #109 = class	#108;	//  java/lang/InterruptedException
const #110 = Asciz	isActive;
const #111 = NameAndType	#17:#102;//  suspending:()Z
const #112 = Method	#31.#111;	//  scala/actors/FJTaskScheduler2.suspending:()Z
const #113 = Asciz	snapshot;
const #114 = Asciz	()Lscala/actors/LinkedQueue;;
const #115 = Asciz	suspending_$eq;
const #116 = NameAndType	#115:#53;//  suspending_$eq:(Z)V
const #117 = Method	#31.#116;	//  scala/actors/FJTaskScheduler2.suspending_$eq:(Z)V
const #118 = Asciz	()Lscala/actors/FJTaskRunnerGroup;;
const #119 = NameAndType	#20:#118;//  executor:()Lscala/actors/FJTaskRunnerGroup;
const #120 = Method	#31.#119;	//  scala/actors/FJTaskScheduler2.executor:()Lscala/actors/FJTaskRunnerGroup;
const #121 = NameAndType	#113:#114;//  snapshot:()Lscala/actors/LinkedQueue;
const #122 = Method	#61.#121;	//  scala/actors/FJTaskRunnerGroup.snapshot:()Lscala/actors/LinkedQueue;
const #123 = Asciz	shutdown;
const #124 = Asciz	terminating_$eq;
const #125 = NameAndType	#124:#53;//  terminating_$eq:(Z)V
const #126 = Method	#31.#125;	//  scala/actors/FJTaskScheduler2.terminating_$eq:(Z)V
const #127 = Asciz	scala/runtime/BoxedUnit;
const #128 = class	#127;	//  scala/runtime/BoxedUnit
const #129 = Asciz	UNIT;
const #130 = Asciz	Lscala/runtime/BoxedUnit;;
const #131 = NameAndType	#129:#130;//  UNIT:Lscala/runtime/BoxedUnit;
const #132 = Field	#128.#131;	//  scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
const #133 = Asciz	execute;
const #134 = Asciz	(Lscala/Function0;)V;
const #135 = Asciz	scala/actors/FJTaskScheduler2$$anon$1;
const #136 = class	#135;	//  scala/actors/FJTaskScheduler2$$anon$1
const #137 = Asciz	(Lscala/actors/FJTaskScheduler2;Lscala/Function0;)V;
const #138 = NameAndType	#26:#137;//  "<init>":(Lscala/actors/FJTaskScheduler2;Lscala/Function0;)V
const #139 = Method	#136.#138;	//  scala/actors/FJTaskScheduler2$$anon$1."<init>":(Lscala/actors/FJTaskScheduler2;Lscala/Function0;)V
const #140 = Asciz	(Ljava/lang/Runnable;)V;
const #141 = NameAndType	#133:#140;//  execute:(Ljava/lang/Runnable;)V
const #142 = Method	#61.#141;	//  scala/actors/FJTaskRunnerGroup.execute:(Ljava/lang/Runnable;)V
const #143 = Asciz	fun$1;
const #144 = Asciz	(Lscala/Function0<Ljava/lang/Object;>;)V;
const #145 = Asciz	executeFromActor;
const #146 = Method	#31.#141;	//  scala/actors/FJTaskScheduler2.execute:(Ljava/lang/Runnable;)V
const #147 = Asciz	task;
const #148 = Asciz	Ljava/lang/Runnable;;
const #149 = Asciz	run;
const #150 = NameAndType	#85:#38;//  liftedTree1$1:()V
const #151 = Method	#31.#150;	//  scala/actors/FJTaskScheduler2.liftedTree1$1:()V
const #152 = Asciz	scala/actors/ActorGC;
const #153 = class	#152;	//  scala/actors/ActorGC
const #154 = Asciz	gc;
const #155 = NameAndType	#154:#38;//  gc:()V
const #156 = InterfaceMethod	#153.#155;	//  scala/actors/ActorGC.gc:()V
const #157 = NameAndType	#24:#62;//  maxSize:()I
const #158 = Method	#31.#157;	//  scala/actors/FJTaskScheduler2.maxSize:()I
const #159 = Asciz	allWorkersBlocked;
const #160 = NameAndType	#159:#102;//  allWorkersBlocked:()Z
const #161 = Method	#31.#160;	//  scala/actors/FJTaskScheduler2.allWorkersBlocked:()Z
const #162 = Asciz	checkPoolSize;
const #163 = NameAndType	#162:#102;//  checkPoolSize:()Z
const #164 = Method	#61.#163;	//  scala/actors/FJTaskRunnerGroup.checkPoolSize:()Z
const #165 = Asciz	coreSize_$eq;
const #166 = NameAndType	#165:#65;//  coreSize_$eq:(I)V
const #167 = Method	#31.#166;	//  scala/actors/FJTaskScheduler2.coreSize_$eq:(I)V
const #168 = Asciz	allTerminated;
const #169 = NameAndType	#168:#102;//  allTerminated:()Z
const #170 = InterfaceMethod	#153.#169;	//  scala/actors/ActorGC.allTerminated:()Z
const #171 = Asciz	getActiveCount;
const #172 = NameAndType	#171:#62;//  getActiveCount:()I
const #173 = Method	#61.#172;	//  scala/actors/FJTaskRunnerGroup.getActiveCount:()I
const #174 = Asciz	scala/actors/Debug$;
const #175 = class	#174;	//  scala/actors/Debug$
const #176 = Asciz	Lscala/actors/Debug$;;
const #177 = NameAndType	#88:#176;//  MODULE$:Lscala/actors/Debug$;
const #178 = Field	#175.#177;	//  scala/actors/Debug$.MODULE$:Lscala/actors/Debug$;
const #179 = Asciz	any2stringadd;
const #180 = Asciz	(Ljava/lang/Object;)Lscala/runtime/StringAdd;;
const #181 = NameAndType	#179:#180;//  any2stringadd:(Ljava/lang/Object;)Lscala/runtime/StringAdd;
const #182 = Method	#87.#181;	//  scala/Predef$.any2stringadd:(Ljava/lang/Object;)Lscala/runtime/StringAdd;
const #183 = Asciz	: initiating shutdown...;
const #184 = String	#183;	//  : initiating shutdown...
const #185 = Asciz	scala/runtime/StringAdd;
const #186 = class	#185;	//  scala/runtime/StringAdd
const #187 = Asciz	$plus;
const #188 = Asciz	(Ljava/lang/String;)Ljava/lang/String;;
const #189 = NameAndType	#187:#188;//  $plus:(Ljava/lang/String;)Ljava/lang/String;
const #190 = Method	#186.#189;	//  scala/runtime/StringAdd.$plus:(Ljava/lang/String;)Ljava/lang/String;
const #191 = Asciz	info;
const #192 = Asciz	(Ljava/lang/String;)V;
const #193 = NameAndType	#191:#192;//  info:(Ljava/lang/String;)V
const #194 = Method	#175.#193;	//  scala/actors/Debug$.info:(Ljava/lang/String;)V
const #195 = NameAndType	#23:#102;//  printStats:()Z
const #196 = Method	#31.#195;	//  scala/actors/FJTaskScheduler2.printStats:()Z
const #197 = Asciz	stats;
const #198 = NameAndType	#197:#38;//  stats:()V
const #199 = Method	#61.#198;	//  scala/actors/FJTaskRunnerGroup.stats:()V
const #200 = Asciz	scala/runtime/ScalaRunTime$;
const #201 = class	#200;	//  scala/runtime/ScalaRunTime$
const #202 = Asciz	Lscala/runtime/ScalaRunTime$;;
const #203 = NameAndType	#88:#202;//  MODULE$:Lscala/runtime/ScalaRunTime$;
const #204 = Field	#201.#203;	//  scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
const #205 = Asciz	threads;
const #206 = Asciz	[Lscala/actors/FJTaskRunner;;
const #207 = NameAndType	#205:#206;//  threads:[Lscala/actors/FJTaskRunner;
const #208 = Field	#61.#207;	//  scala/actors/FJTaskRunnerGroup.threads:[Lscala/actors/FJTaskRunner;
const #209 = Asciz	boxArray;
const #210 = Asciz	(Ljava/lang/Object;)Lscala/runtime/BoxedArray;;
const #211 = NameAndType	#209:#210;//  boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
const #212 = Method	#201.#211;	//  scala/runtime/ScalaRunTime$.boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
const #213 = Asciz	scala/actors/FJTaskScheduler2$$anonfun$allWorkersBlocked$1;
const #214 = class	#213;	//  scala/actors/FJTaskScheduler2$$anonfun$allWorkersBlocked$1
const #215 = Asciz	(Lscala/actors/FJTaskScheduler2;)V;
const #216 = NameAndType	#26:#215;//  "<init>":(Lscala/actors/FJTaskScheduler2;)V
const #217 = Method	#214.#216;	//  scala/actors/FJTaskScheduler2$$anonfun$allWorkersBlocked$1."<init>":(Lscala/actors/FJTaskScheduler2;)V
const #218 = Asciz	scala/collection/generic/VectorTemplate;
const #219 = class	#218;	//  scala/collection/generic/VectorTemplate
const #220 = Asciz	forall;
const #221 = Asciz	(Lscala/Function1;)Z;
const #222 = NameAndType	#220:#221;//  forall:(Lscala/Function1;)Z
const #223 = InterfaceMethod	#219.#222;	//  scala/collection/generic/VectorTemplate.forall:(Lscala/Function1;)Z
const #224 = Asciz	lockupHandler_$eq;
const #225 = Asciz	()Lscala/Function0;;
const #226 = Asciz	()Lscala/Function0<Ljava/lang/Object;>;;
const #227 = Asciz	onLockup;
const #228 = Asciz	(ILscala/Function0;)V;
const #229 = NameAndType	#224:#134;//  lockupHandler_$eq:(Lscala/Function0;)V
const #230 = Method	#31.#229;	//  scala/actors/FJTaskScheduler2.lockupHandler_$eq:(Lscala/Function0;)V
const #231 = Asciz	millis;
const #232 = Asciz	handler;
const #233 = Asciz	(ILscala/Function0<Ljava/lang/Object;>;)V;
const #234 = Asciz	printActorDump;
const #235 = Asciz	submittedTasks_$eq;
const #236 = Asciz	printStats_$eq;
const #237 = Asciz	scala/actors/scheduler/ThreadPoolConfig$;
const #238 = class	#237;	//  scala/actors/scheduler/ThreadPoolConfig$
const #239 = Asciz	Lscala/actors/scheduler/ThreadPoolConfig$;;
const #240 = NameAndType	#88:#239;//  MODULE$:Lscala/actors/scheduler/ThreadPoolConfig$;
const #241 = Field	#238.#240;	//  scala/actors/scheduler/ThreadPoolConfig$.MODULE$:Lscala/actors/scheduler/ThreadPoolConfig$;
const #242 = Asciz	corePoolSize;
const #243 = NameAndType	#242:#62;//  corePoolSize:()I
const #244 = Method	#238.#243;	//  scala/actors/scheduler/ThreadPoolConfig$.corePoolSize:()I
const #245 = Asciz	maxPoolSize;
const #246 = NameAndType	#245:#62;//  maxPoolSize:()I
const #247 = Method	#238.#246;	//  scala/actors/scheduler/ThreadPoolConfig$.maxPoolSize:()I
const #248 = NameAndType	#26:#27;//  "<init>":(IIZ)V
const #249 = Method	#31.#248;	//  scala/actors/FJTaskScheduler2."<init>":(IIZ)V
const #250 = Asciz	managedBlock;
const #251 = Asciz	(Lscala/actors/ManagedBlocker;)V;
const #252 = Asciz	(Lscala/actors/IScheduler;Lscala/actors/ManagedBlocker;)V;
const #253 = NameAndType	#250:#252;//  managedBlock:(Lscala/actors/IScheduler;Lscala/actors/ManagedBlocker;)V
const #254 = Method	#42.#253;	//  scala/actors/IScheduler$class.managedBlock:(Lscala/actors/IScheduler;Lscala/actors/ManagedBlocker;)V
const #255 = Asciz	blocker;
const #256 = Asciz	Lscala/actors/ManagedBlocker;;
const #257 = Asciz	setPendingCount;
const #258 = Asciz	(Lscala/actors/ActorGC;I)V;
const #259 = NameAndType	#257:#258;//  setPendingCount:(Lscala/actors/ActorGC;I)V
const #260 = Method	#48.#259;	//  scala/actors/ActorGC$class.setPendingCount:(Lscala/actors/ActorGC;I)V
const #261 = Asciz	cnt;
const #262 = Asciz	getPendingCount;
const #263 = Asciz	(Lscala/actors/ActorGC;)I;
const #264 = NameAndType	#262:#263;//  getPendingCount:(Lscala/actors/ActorGC;)I
const #265 = Method	#48.#264;	//  scala/actors/ActorGC$class.getPendingCount:(Lscala/actors/ActorGC;)I
const #266 = Asciz	terminated;
const #267 = Asciz	(Lscala/actors/Reactor;)V;
const #268 = Asciz	(Lscala/actors/ActorGC;Lscala/actors/Reactor;)V;
const #269 = NameAndType	#266:#268;//  terminated:(Lscala/actors/ActorGC;Lscala/actors/Reactor;)V
const #270 = Method	#48.#269;	//  scala/actors/ActorGC$class.terminated:(Lscala/actors/ActorGC;Lscala/actors/Reactor;)V
const #271 = Asciz	a;
const #272 = Asciz	Lscala/actors/Reactor;;
const #273 = Asciz	onTerminate;
const #274 = Asciz	(Lscala/actors/Reactor;Lscala/Function0;)V;
const #275 = Asciz	(Lscala/actors/ActorGC;Lscala/actors/Reactor;Lscala/Function0;)V;
const #276 = NameAndType	#273:#275;//  onTerminate:(Lscala/actors/ActorGC;Lscala/actors/Reactor;Lscala/Function0;)V
const #277 = Method	#48.#276;	//  scala/actors/ActorGC$class.onTerminate:(Lscala/actors/ActorGC;Lscala/actors/Reactor;Lscala/Function0;)V
const #278 = Asciz	f;
const #279 = Asciz	(Lscala/actors/ActorGC;)Z;
const #280 = NameAndType	#168:#279;//  allTerminated:(Lscala/actors/ActorGC;)Z
const #281 = Method	#48.#280;	//  scala/actors/ActorGC$class.allTerminated:(Lscala/actors/ActorGC;)Z
const #282 = Asciz	status;
const #283 = NameAndType	#282:#49;//  status:(Lscala/actors/ActorGC;)V
const #284 = Method	#48.#283;	//  scala/actors/ActorGC$class.status:(Lscala/actors/ActorGC;)V
const #285 = NameAndType	#154:#49;//  gc:(Lscala/actors/ActorGC;)V
const #286 = Method	#48.#285;	//  scala/actors/ActorGC$class.gc:(Lscala/actors/ActorGC;)V
const #287 = Asciz	newActor;
const #288 = NameAndType	#287:#268;//  newActor:(Lscala/actors/ActorGC;Lscala/actors/Reactor;)V
const #289 = Method	#48.#288;	//  scala/actors/ActorGC$class.newActor:(Lscala/actors/ActorGC;Lscala/actors/Reactor;)V
const #290 = Asciz	scala$actors$ActorGC$_setter_$scala$actors$ActorGC$$refSet_$eq;
const #291 = Asciz	(Lscala/collection/mutable/HashSet;)V;
const #292 = NameAndType	#3:#4;//  scala$actors$ActorGC$$refSet:Lscala/collection/mutable/HashSet;
const #293 = Field	#31.#292;	//  scala/actors/FJTaskScheduler2.scala$actors$ActorGC$$refSet:Lscala/collection/mutable/HashSet;
const #294 = Asciz	scala$actors$ActorGC$_setter_$scala$actors$ActorGC$$refQ_$eq;
const #295 = Asciz	(Ljava/lang/ref/ReferenceQueue;)V;
const #296 = NameAndType	#5:#6;//  scala$actors$ActorGC$$refQ:Ljava/lang/ref/ReferenceQueue;
const #297 = Field	#31.#296;	//  scala/actors/FJTaskScheduler2.scala$actors$ActorGC$$refQ:Ljava/lang/ref/ReferenceQueue;
const #298 = Asciz	scala$actors$ActorGC$_setter_$scala$actors$ActorGC$$termHandlers_$eq;
const #299 = Asciz	(Lscala/collection/mutable/HashMap;)V;
const #300 = NameAndType	#7:#8;//  scala$actors$ActorGC$$termHandlers:Lscala/collection/mutable/HashMap;
const #301 = Field	#31.#300;	//  scala/actors/FJTaskScheduler2.scala$actors$ActorGC$$termHandlers:Lscala/collection/mutable/HashMap;
const #302 = Asciz	()Lscala/collection/mutable/HashSet;;
const #303 = Asciz	()Ljava/lang/ref/ReferenceQueue;;
const #304 = Asciz	()Lscala/collection/mutable/HashMap;;
const #305 = Asciz	scala$actors$ActorGC$$pendingReactions_$eq;
const #306 = NameAndType	#9:#10;//  scala$actors$ActorGC$$pendingReactions:I
const #307 = Field	#31.#306;	//  scala/actors/FJTaskScheduler2.scala$actors$ActorGC$$pendingReactions:I
const #308 = Asciz	ScalaSig;
const #309 = Asciz	InnerClasses;
const #310 = Asciz	$anon$1;
const #311 = Asciz	$anonfun$allWorkersBlocked$1;
const #312 = Asciz	scala/ScalaObject;
const #313 = class	#312;	//  scala/ScalaObject

{
public scala.actors.FJTaskScheduler2(int, int, boolean);
  Code:
   Stack=4, Locals=4, Args_size=4
   0:	aload_0
   1:	iload_1
   2:	putfield	#33; //Field initCoreSize:I
   5:	aload_0
   6:	iload_2
   7:	putfield	#35; //Field maxSize:I
   10:	aload_0
   11:	invokespecial	#40; //Method java/lang/Thread."<init>":()V
   14:	aload_0
   15:	invokestatic	#46; //Method scala/actors/IScheduler$class.$init$:(Lscala/actors/IScheduler;)V
   18:	aload_0
   19:	invokestatic	#51; //Method scala/actors/ActorGC$class.$init$:(Lscala/actors/ActorGC;)V
   22:	aload_0
   23:	iload_3
   24:	invokevirtual	#55; //Method setDaemon:(Z)V
   27:	aload_0
   28:	iconst_0
   29:	putfield	#57; //Field printStats:Z
   32:	aload_0
   33:	iload_1
   34:	putfield	#59; //Field coreSize:I
   37:	aload_0
   38:	new	#61; //class scala/actors/FJTaskRunnerGroup
   41:	dup
   42:	aload_0
   43:	invokespecial	#64; //Method coreSize:()I
   46:	invokespecial	#67; //Method scala/actors/FJTaskRunnerGroup."<init>":(I)V
   49:	putfield	#69; //Field executor:Lscala/actors/FJTaskRunnerGroup;
   52:	aload_0
   53:	iconst_0
   54:	putfield	#71; //Field terminating:Z
   57:	aload_0
   58:	iconst_0
   59:	putfield	#73; //Field suspending:Z
   62:	aload_0
   63:	iconst_0
   64:	putfield	#75; //Field submittedTasks:I
   67:	aload_0
   68:	ldc	#76; //int 100
   70:	putfield	#78; //Field CHECK_FREQ:I
   73:	aload_0
   74:	aconst_null
   75:	pop
   76:	aconst_null
   77:	putfield	#80; //Field lockupHandler:Lscala/Function0;
   80:	return
  LineNumberTable: 
   line 29: 0
   line 30: 22
   line 39: 27
   line 41: 32
   line 43: 37
   line 44: 38
   line 43: 49
   line 46: 52
   line 47: 57
   line 49: 62
   line 53: 67
   line 63: 73

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      81      0    this       Lscala/actors/FJTaskScheduler2;
   0      81      1    initCoreSize       I
   0      81      2    maxSize       I
   0      81      3    daemon       Z


public boolean isActive();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokespecial	#104; //Method terminating:()Z
   4:	ifne	14
   7:	aload_0
   8:	invokespecial	#112; //Method suspending:()Z
   11:	ifeq	18
   14:	iconst_0
   15:	goto	19
   18:	iconst_1
   19:	ireturn
  LineNumberTable: 
   line 143: 0


public scala.actors.LinkedQueue snapshot();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	iconst_1
   2:	invokespecial	#117; //Method suspending_$eq:(Z)V
   5:	aload_0
   6:	invokespecial	#120; //Method executor:()Lscala/actors/FJTaskRunnerGroup;
   9:	invokevirtual	#122; //Method scala/actors/FJTaskRunnerGroup.snapshot:()Lscala/actors/LinkedQueue;
   12:	areturn
  LineNumberTable: 
   line 139: 0
   line 140: 5


public void shutdown();
  Code:
   Stack=2, Locals=2, Args_size=1
   0:	aload_0
   1:	dup
   2:	astore_1
   3:	monitorenter
   4:	aload_0
   5:	iconst_1
   6:	invokespecial	#126; //Method terminating_$eq:(Z)V
   9:	getstatic	#132; //Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
   12:	pop
   13:	aload_1
   14:	monitorexit
   15:	return
   16:	aload_1
   17:	monitorexit
   18:	athrow
  Exception table:
   from   to  target type
     4    15    16   any
  LineNumberTable: 
   line 134: 0
   line 135: 4
   line 134: 14


public void execute(scala.Function0);
  Code:
   Stack=5, Locals=2, Args_size=2
   0:	aload_0
   1:	invokespecial	#120; //Method executor:()Lscala/actors/FJTaskRunnerGroup;
   4:	new	#136; //class scala/actors/FJTaskScheduler2$$anon$1
   7:	dup
   8:	aload_0
   9:	aload_1
   10:	invokespecial	#139; //Method scala/actors/FJTaskScheduler2$$anon$1."<init>":(Lscala/actors/FJTaskScheduler2;Lscala/Function0;)V
   13:	invokevirtual	#142; //Method scala/actors/FJTaskRunnerGroup.execute:(Ljava/lang/Runnable;)V
   16:	return
  LineNumberTable: 
   line 128: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      17      0    this       Lscala/actors/FJTaskScheduler2;
   0      17      1    fun$1       Lscala/Function0;

  Signature: length = 0x2
   00 FFFFFF90 

public void executeFromActor(java.lang.Runnable);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokevirtual	#146; //Method execute:(Ljava/lang/Runnable;)V
   5:	return
  LineNumberTable: 
   line 125: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/FJTaskScheduler2;
   0      6      1    task       Ljava/lang/Runnable;


public void execute(java.lang.Runnable);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	invokespecial	#120; //Method executor:()Lscala/actors/FJTaskRunnerGroup;
   4:	aload_1
   5:	invokevirtual	#142; //Method scala/actors/FJTaskRunnerGroup.execute:(Ljava/lang/Runnable;)V
   8:	return
  LineNumberTable: 
   line 122: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/actors/FJTaskScheduler2;
   0      9      1    task       Ljava/lang/Runnable;


public void run();
  Code:
   Stack=3, Locals=2, Args_size=1
   0:	aload_0
   1:	invokespecial	#104; //Method terminating:()Z
   4:	ifne	157
   7:	aload_0
   8:	dup
   9:	astore_1
   10:	monitorenter
   11:	aload_0
   12:	invokespecial	#151; //Method liftedTree1$1:()V
   15:	aload_0
   16:	invokespecial	#112; //Method suspending:()Z
   19:	ifeq	28
   22:	getstatic	#132; //Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
   25:	goto	133
   28:	aload_0
   29:	invokeinterface	#156,  1; //InterfaceMethod scala/actors/ActorGC.gc:()V
   34:	aload_0
   35:	invokespecial	#64; //Method coreSize:()I
   38:	aload_0
   39:	invokevirtual	#158; //Method maxSize:()I
   42:	if_icmpge	78
   45:	aload_0
   46:	invokespecial	#161; //Method allWorkersBlocked:()Z
   49:	ifeq	78
   52:	aload_0
   53:	invokespecial	#120; //Method executor:()Lscala/actors/FJTaskRunnerGroup;
   56:	invokevirtual	#164; //Method scala/actors/FJTaskRunnerGroup.checkPoolSize:()Z
   59:	ifeq	78
   62:	aload_0
   63:	aload_0
   64:	invokespecial	#64; //Method coreSize:()I
   67:	iconst_1
   68:	iadd
   69:	invokespecial	#167; //Method coreSize_$eq:(I)V
   72:	getstatic	#132; //Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
   75:	goto	133
   78:	aload_0
   79:	invokeinterface	#170,  1; //InterfaceMethod scala/actors/ActorGC.allTerminated:()Z
   84:	ifeq	130
   87:	aload_0
   88:	invokespecial	#120; //Method executor:()Lscala/actors/FJTaskRunnerGroup;
   91:	invokevirtual	#173; //Method scala/actors/FJTaskRunnerGroup.getActiveCount:()I
   94:	iconst_0
   95:	if_icmpne	124
   98:	getstatic	#178; //Field scala/actors/Debug$.MODULE$:Lscala/actors/Debug$;
   101:	getstatic	#91; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   104:	aload_0
   105:	invokevirtual	#182; //Method scala/Predef$.any2stringadd:(Ljava/lang/Object;)Lscala/runtime/StringAdd;
   108:	ldc	#184; //String : initiating shutdown...
   110:	invokevirtual	#190; //Method scala/runtime/StringAdd.$plus:(Ljava/lang/String;)Ljava/lang/String;
   113:	invokevirtual	#194; //Method scala/actors/Debug$.info:(Ljava/lang/String;)V
   116:	new	#106; //class scala/actors/scheduler/QuitException
   119:	dup
   120:	invokespecial	#107; //Method scala/actors/scheduler/QuitException."<init>":()V
   123:	athrow
   124:	getstatic	#132; //Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
   127:	goto	133
   130:	getstatic	#132; //Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
   133:	pop
   134:	aload_1
   135:	monitorexit
   136:	goto	0
   139:	aload_1
   140:	monitorexit
   141:	athrow
   142:	pop
   143:	aload_0
   144:	invokevirtual	#196; //Method printStats:()Z
   147:	ifeq	157
   150:	aload_0
   151:	invokespecial	#120; //Method executor:()Lscala/actors/FJTaskRunnerGroup;
   154:	invokevirtual	#199; //Method scala/actors/FJTaskRunnerGroup.stats:()V
   157:	return
  Exception table:
   from   to  target type
    11   139   139   any
     0   142   142   Class scala/actors/scheduler/QuitException

  LineNumberTable: 
   line 73: 0
   line 74: 7
   line 75: 11
   line 82: 15
   line 84: 28
   line 87: 34
   line 88: 45
   line 89: 52
   line 91: 62
   line 94: 78
   line 96: 87
   line 97: 98
   line 103: 116
   line 96: 124
   line 94: 130
   line 82: 133
   line 74: 135
   line 114: 139
   line 74: 140
   line 114: 142
   line 72: 157


public void onLockup(int, scala.Function0);
  Code:
   Stack=2, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_2
   2:	invokespecial	#230; //Method lockupHandler_$eq:(Lscala/Function0;)V
   5:	return
  LineNumberTable: 
   line 60: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/FJTaskScheduler2;
   0      6      1    millis       I
   0      6      2    handler       Lscala/Function0;

  Signature: length = 0x2
   00 FFFFFFE9 

public void onLockup(scala.Function0);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokespecial	#230; //Method lockupHandler_$eq:(Lscala/Function0;)V
   5:	return
  LineNumberTable: 
   line 56: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/FJTaskScheduler2;
   0      6      1    handler       Lscala/Function0;

  Signature: length = 0x2
   00 FFFFFF90 

public void printActorDump();
  Code:
   Stack=0, Locals=1, Args_size=1
   0:	return
  LineNumberTable: 
   line 51: 0


public void printStats_$eq(boolean);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	putfield	#57; //Field printStats:Z
   5:	return
  LineNumberTable: 
   line 39: 0


public boolean printStats();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#57; //Field printStats:Z
   4:	ireturn
  LineNumberTable: 
   line 39: 0


public scala.actors.FJTaskScheduler2(boolean);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	aload_0
   1:	getstatic	#241; //Field scala/actors/scheduler/ThreadPoolConfig$.MODULE$:Lscala/actors/scheduler/ThreadPoolConfig$;
   4:	invokevirtual	#244; //Method scala/actors/scheduler/ThreadPoolConfig$.corePoolSize:()I
   7:	getstatic	#241; //Field scala/actors/scheduler/ThreadPoolConfig$.MODULE$:Lscala/actors/scheduler/ThreadPoolConfig$;
   10:	invokevirtual	#247; //Method scala/actors/scheduler/ThreadPoolConfig$.maxPoolSize:()I
   13:	iload_1
   14:	invokespecial	#249; //Method "<init>":(IIZ)V
   17:	return
  LineNumberTable: 
   line 37: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      18      0    this       Lscala/actors/FJTaskScheduler2;
   0      18      1    daemon       Z


public scala.actors.FJTaskScheduler2();
  Code:
   Stack=4, Locals=1, Args_size=1
   0:	aload_0
   1:	getstatic	#241; //Field scala/actors/scheduler/ThreadPoolConfig$.MODULE$:Lscala/actors/scheduler/ThreadPoolConfig$;
   4:	invokevirtual	#244; //Method scala/actors/scheduler/ThreadPoolConfig$.corePoolSize:()I
   7:	getstatic	#241; //Field scala/actors/scheduler/ThreadPoolConfig$.MODULE$:Lscala/actors/scheduler/ThreadPoolConfig$;
   10:	invokevirtual	#247; //Method scala/actors/scheduler/ThreadPoolConfig$.maxPoolSize:()I
   13:	iconst_0
   14:	invokespecial	#249; //Method "<init>":(IIZ)V
   17:	return
  LineNumberTable: 
   line 34: 0


public int maxSize();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#35; //Field maxSize:I
   4:	ireturn
  LineNumberTable: 
   line 29: 0


public int initCoreSize();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#33; //Field initCoreSize:I
   4:	ireturn
  LineNumberTable: 
   line 29: 0


public void managedBlock(scala.actors.ManagedBlocker);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#254; //Method scala/actors/IScheduler$class.managedBlock:(Lscala/actors/IScheduler;Lscala/actors/ManagedBlocker;)V
   5:	return
  LineNumberTable: 
   line 29: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/FJTaskScheduler2;
   0      6      1    blocker       Lscala/actors/ManagedBlocker;


public void setPendingCount(int);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	invokestatic	#260; //Method scala/actors/ActorGC$class.setPendingCount:(Lscala/actors/ActorGC;I)V
   5:	return
  LineNumberTable: 
   line 29: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/FJTaskScheduler2;
   0      6      1    cnt       I


public int getPendingCount();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#265; //Method scala/actors/ActorGC$class.getPendingCount:(Lscala/actors/ActorGC;)I
   4:	ireturn
  LineNumberTable: 
   line 29: 0


public void terminated(scala.actors.Reactor);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#270; //Method scala/actors/ActorGC$class.terminated:(Lscala/actors/ActorGC;Lscala/actors/Reactor;)V
   5:	return
  LineNumberTable: 
   line 29: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/FJTaskScheduler2;
   0      6      1    a       Lscala/actors/Reactor;


public void onTerminate(scala.actors.Reactor, scala.Function0);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#277; //Method scala/actors/ActorGC$class.onTerminate:(Lscala/actors/ActorGC;Lscala/actors/Reactor;Lscala/Function0;)V
   6:	return
  LineNumberTable: 
   line 29: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/actors/FJTaskScheduler2;
   0      7      1    a       Lscala/actors/Reactor;
   0      7      2    f       Lscala/Function0;


public boolean allTerminated();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#281; //Method scala/actors/ActorGC$class.allTerminated:(Lscala/actors/ActorGC;)Z
   4:	ireturn
  LineNumberTable: 
   line 29: 0


public void status();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#284; //Method scala/actors/ActorGC$class.status:(Lscala/actors/ActorGC;)V
   4:	return
  LineNumberTable: 
   line 29: 0


public void gc();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#286; //Method scala/actors/ActorGC$class.gc:(Lscala/actors/ActorGC;)V
   4:	return
  LineNumberTable: 
   line 29: 0


public void newActor(scala.actors.Reactor);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#289; //Method scala/actors/ActorGC$class.newActor:(Lscala/actors/ActorGC;Lscala/actors/Reactor;)V
   5:	return
  LineNumberTable: 
   line 29: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/FJTaskScheduler2;
   0      6      1    a       Lscala/actors/Reactor;


public void scala$actors$ActorGC$_setter_$scala$actors$ActorGC$$refSet_$eq(scala.collection.mutable.HashSet);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	putfield	#293; //Field scala$actors$ActorGC$$refSet:Lscala/collection/mutable/HashSet;
   5:	return
  LineNumberTable: 
   line 29: 0


public void scala$actors$ActorGC$_setter_$scala$actors$ActorGC$$refQ_$eq(java.lang.ref.ReferenceQueue);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	putfield	#297; //Field scala$actors$ActorGC$$refQ:Ljava/lang/ref/ReferenceQueue;
   5:	return
  LineNumberTable: 
   line 29: 0


public void scala$actors$ActorGC$_setter_$scala$actors$ActorGC$$termHandlers_$eq(scala.collection.mutable.HashMap);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	putfield	#301; //Field scala$actors$ActorGC$$termHandlers:Lscala/collection/mutable/HashMap;
   5:	return
  LineNumberTable: 
   line 29: 0


public final scala.collection.mutable.HashSet scala$actors$ActorGC$$refSet();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#293; //Field scala$actors$ActorGC$$refSet:Lscala/collection/mutable/HashSet;
   4:	areturn
  LineNumberTable: 
   line 29: 0


public final java.lang.ref.ReferenceQueue scala$actors$ActorGC$$refQ();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#297; //Field scala$actors$ActorGC$$refQ:Ljava/lang/ref/ReferenceQueue;
   4:	areturn
  LineNumberTable: 
   line 29: 0


public final scala.collection.mutable.HashMap scala$actors$ActorGC$$termHandlers();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#301; //Field scala$actors$ActorGC$$termHandlers:Lscala/collection/mutable/HashMap;
   4:	areturn
  LineNumberTable: 
   line 29: 0


public final void scala$actors$ActorGC$$pendingReactions_$eq(int);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	putfield	#307; //Field scala$actors$ActorGC$$pendingReactions:I
   5:	return
  LineNumberTable: 
   line 29: 0


public final int scala$actors$ActorGC$$pendingReactions();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#307; //Field scala$actors$ActorGC$$pendingReactions:I
   4:	ireturn
  LineNumberTable: 
   line 29: 0


}

