public abstract class scala.actors.FJTask extends java.lang.Object implements java.lang.Runnable
  InnerClass: 
   public #28= #23 of #25; //Par2=class scala/actors/FJTask$Par2 of class scala/actors/FJTask
   public #30= #21 of #25; //Seq2=class scala/actors/FJTask$Seq2 of class scala/actors/FJTask
   public #31= #19 of #25; //Par=class scala/actors/FJTask$Par of class scala/actors/FJTask
   public #32= #17 of #25; //Seq=class scala/actors/FJTask$Seq of class scala/actors/FJTask
   public #34= #33 of #25; //Wrap=class scala/actors/FJTask$Wrap of class scala/actors/FJTask
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Method	#26.#62;	//  java/lang/Object."<init>":()V
const #2 = Method	#63.#64;	//  java/lang/Thread.currentThread:()Ljava/lang/Thread;
const #3 = class	#65;	//  scala/actors/FJTaskRunner
const #4 = Method	#25.#66;	//  scala/actors/FJTask.getFJTaskRunner:()Lscala/actors/FJTaskRunner;
const #5 = Method	#3.#67;	//  scala/actors/FJTaskRunner.getGroup:()Lscala/actors/IFJTaskRunnerGroup;
const #6 = Field	#25.#68;	//  scala/actors/FJTask.done:Z
const #7 = Method	#25.#69;	//  scala/actors/FJTask.setDone:()V
const #8 = Method	#25.#70;	//  scala/actors/FJTask.getFJTaskRunnerGroup:()Lscala/actors/IFJTaskRunnerGroup;
const #9 = InterfaceMethod	#71.#72;	//  scala/actors/IFJTaskRunnerGroup.executeTask:(Lscala/actors/FJTask;)V
const #10 = Method	#3.#73;	//  scala/actors/FJTaskRunner.push:(Lscala/actors/FJTask;)V
const #11 = Method	#3.#74;	//  scala/actors/FJTaskRunner.taskYield:()V
const #12 = Method	#3.#75;	//  scala/actors/FJTaskRunner.taskJoin:(Lscala/actors/FJTask;)V
const #13 = Method	#25.#76;	//  scala/actors/FJTask.isDone:()Z
const #14 = Method	#25.#77;	//  scala/actors/FJTask.run:()V
const #15 = Method	#3.#78;	//  scala/actors/FJTaskRunner.coInvoke:(Lscala/actors/FJTask;Lscala/actors/FJTask;)V
const #16 = Method	#3.#79;	//  scala/actors/FJTaskRunner.coInvoke:([Lscala/actors/FJTask;)V
const #17 = class	#80;	//  scala/actors/FJTask$Seq
const #18 = Method	#17.#81;	//  scala/actors/FJTask$Seq."<init>":([Lscala/actors/FJTask;)V
const #19 = class	#82;	//  scala/actors/FJTask$Par
const #20 = Method	#19.#81;	//  scala/actors/FJTask$Par."<init>":([Lscala/actors/FJTask;)V
const #21 = class	#83;	//  scala/actors/FJTask$Seq2
const #22 = Method	#21.#84;	//  scala/actors/FJTask$Seq2."<init>":(Lscala/actors/FJTask;Lscala/actors/FJTask;)V
const #23 = class	#85;	//  scala/actors/FJTask$Par2
const #24 = Method	#23.#84;	//  scala/actors/FJTask$Par2."<init>":(Lscala/actors/FJTask;Lscala/actors/FJTask;)V
const #25 = class	#86;	//  scala/actors/FJTask
const #26 = class	#87;	//  java/lang/Object
const #27 = class	#88;	//  java/lang/Runnable
const #28 = Asciz	Par2;
const #29 = Asciz	InnerClasses;
const #30 = Asciz	Seq2;
const #31 = Asciz	Par;
const #32 = Asciz	Seq;
const #33 = class	#89;	//  scala/actors/FJTask$Wrap
const #34 = Asciz	Wrap;
const #35 = Asciz	done;
const #36 = Asciz	Z;
const #37 = Asciz	<init>;
const #38 = Asciz	()V;
const #39 = Asciz	Code;
const #40 = Asciz	getFJTaskRunner;
const #41 = Asciz	()Lscala/actors/FJTaskRunner;;
const #42 = Asciz	getFJTaskRunnerGroup;
const #43 = Asciz	()Lscala/actors/IFJTaskRunnerGroup;;
const #44 = Asciz	isDone;
const #45 = Asciz	()Z;
const #46 = Asciz	setDone;
const #47 = Asciz	cancel;
const #48 = Asciz	reset;
const #49 = Asciz	start;
const #50 = Asciz	fork;
const #51 = Asciz	yield;
const #52 = Asciz	join;
const #53 = Asciz	invoke;
const #54 = Asciz	(Lscala/actors/FJTask;)V;
const #55 = Asciz	coInvoke;
const #56 = Asciz	(Lscala/actors/FJTask;Lscala/actors/FJTask;)V;
const #57 = Asciz	([Lscala/actors/FJTask;)V;
const #58 = Asciz	seq;
const #59 = Asciz	([Lscala/actors/FJTask;)Lscala/actors/FJTask;;
const #60 = Asciz	par;
const #61 = Asciz	(Lscala/actors/FJTask;Lscala/actors/FJTask;)Lscala/actors/FJTask;;
const #62 = NameAndType	#37:#38;//  "<init>":()V
const #63 = class	#90;	//  java/lang/Thread
const #64 = NameAndType	#91:#92;//  currentThread:()Ljava/lang/Thread;
const #65 = Asciz	scala/actors/FJTaskRunner;
const #66 = NameAndType	#40:#41;//  getFJTaskRunner:()Lscala/actors/FJTaskRunner;
const #67 = NameAndType	#93:#43;//  getGroup:()Lscala/actors/IFJTaskRunnerGroup;
const #68 = NameAndType	#35:#36;//  done:Z
const #69 = NameAndType	#46:#38;//  setDone:()V
const #70 = NameAndType	#42:#43;//  getFJTaskRunnerGroup:()Lscala/actors/IFJTaskRunnerGroup;
const #71 = class	#94;	//  scala/actors/IFJTaskRunnerGroup
const #72 = NameAndType	#95:#54;//  executeTask:(Lscala/actors/FJTask;)V
const #73 = NameAndType	#96:#54;//  push:(Lscala/actors/FJTask;)V
const #74 = NameAndType	#97:#38;//  taskYield:()V
const #75 = NameAndType	#98:#54;//  taskJoin:(Lscala/actors/FJTask;)V
const #76 = NameAndType	#44:#45;//  isDone:()Z
const #77 = NameAndType	#99:#38;//  run:()V
const #78 = NameAndType	#55:#56;//  coInvoke:(Lscala/actors/FJTask;Lscala/actors/FJTask;)V
const #79 = NameAndType	#55:#57;//  coInvoke:([Lscala/actors/FJTask;)V
const #80 = Asciz	scala/actors/FJTask$Seq;
const #81 = NameAndType	#37:#57;//  "<init>":([Lscala/actors/FJTask;)V
const #82 = Asciz	scala/actors/FJTask$Par;
const #83 = Asciz	scala/actors/FJTask$Seq2;
const #84 = NameAndType	#37:#56;//  "<init>":(Lscala/actors/FJTask;Lscala/actors/FJTask;)V
const #85 = Asciz	scala/actors/FJTask$Par2;
const #86 = Asciz	scala/actors/FJTask;
const #87 = Asciz	java/lang/Object;
const #88 = Asciz	java/lang/Runnable;
const #89 = Asciz	scala/actors/FJTask$Wrap;
const #90 = Asciz	java/lang/Thread;
const #91 = Asciz	currentThread;
const #92 = Asciz	()Ljava/lang/Thread;;
const #93 = Asciz	getGroup;
const #94 = Asciz	scala/actors/IFJTaskRunnerGroup;
const #95 = Asciz	executeTask;
const #96 = Asciz	push;
const #97 = Asciz	taskYield;
const #98 = Asciz	taskJoin;
const #99 = Asciz	run;

{
public scala.actors.FJTask();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokespecial	#1; //Method java/lang/Object."<init>":()V
   4:	return

public static scala.actors.FJTaskRunner getFJTaskRunner();
  Code:
   Stack=1, Locals=0, Args_size=0
   0:	invokestatic	#2; //Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
   3:	checkcast	#3; //class scala/actors/FJTaskRunner
   6:	checkcast	#3; //class scala/actors/FJTaskRunner
   9:	areturn

public static scala.actors.IFJTaskRunnerGroup getFJTaskRunnerGroup();
  Code:
   Stack=1, Locals=0, Args_size=0
   0:	invokestatic	#4; //Method getFJTaskRunner:()Lscala/actors/FJTaskRunner;
   3:	invokevirtual	#5; //Method scala/actors/FJTaskRunner.getGroup:()Lscala/actors/IFJTaskRunnerGroup;
   6:	areturn

public final boolean isDone();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#6; //Field done:Z
   4:	ireturn

protected final void setDone();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	iconst_1
   2:	putfield	#6; //Field done:Z
   5:	return

public void cancel();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#7; //Method setDone:()V
   4:	return

public void reset();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	iconst_0
   2:	putfield	#6; //Field done:Z
   5:	return

public void start();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	invokestatic	#8; //Method getFJTaskRunnerGroup:()Lscala/actors/IFJTaskRunnerGroup;
   3:	aload_0
   4:	invokeinterface	#9,  2; //InterfaceMethod scala/actors/IFJTaskRunnerGroup.executeTask:(Lscala/actors/FJTask;)V
   9:	return

public void fork();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	invokestatic	#4; //Method getFJTaskRunner:()Lscala/actors/FJTaskRunner;
   3:	aload_0
   4:	invokevirtual	#10; //Method scala/actors/FJTaskRunner.push:(Lscala/actors/FJTask;)V
   7:	return

public static void yield();
  Code:
   Stack=1, Locals=0, Args_size=0
   0:	invokestatic	#4; //Method getFJTaskRunner:()Lscala/actors/FJTaskRunner;
   3:	invokevirtual	#11; //Method scala/actors/FJTaskRunner.taskYield:()V
   6:	return

public void join();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	invokestatic	#4; //Method getFJTaskRunner:()Lscala/actors/FJTaskRunner;
   3:	aload_0
   4:	invokevirtual	#12; //Method scala/actors/FJTaskRunner.taskJoin:(Lscala/actors/FJTask;)V
   7:	return

public static void invoke(scala.actors.FJTask);
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#13; //Method isDone:()Z
   4:	ifne	15
   7:	aload_0
   8:	invokevirtual	#14; //Method run:()V
   11:	aload_0
   12:	invokevirtual	#7; //Method setDone:()V
   15:	return

public static void coInvoke(scala.actors.FJTask, scala.actors.FJTask);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	invokestatic	#4; //Method getFJTaskRunner:()Lscala/actors/FJTaskRunner;
   3:	aload_0
   4:	aload_1
   5:	invokevirtual	#15; //Method scala/actors/FJTaskRunner.coInvoke:(Lscala/actors/FJTask;Lscala/actors/FJTask;)V
   8:	return

public static void coInvoke(scala.actors.FJTask[]);
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	invokestatic	#4; //Method getFJTaskRunner:()Lscala/actors/FJTaskRunner;
   3:	aload_0
   4:	invokevirtual	#16; //Method scala/actors/FJTaskRunner.coInvoke:([Lscala/actors/FJTask;)V
   7:	return

public static scala.actors.FJTask seq(scala.actors.FJTask[]);
  Code:
   Stack=3, Locals=1, Args_size=1
   0:	new	#17; //class scala/actors/FJTask$Seq
   3:	dup
   4:	aload_0
   5:	invokespecial	#18; //Method scala/actors/FJTask$Seq."<init>":([Lscala/actors/FJTask;)V
   8:	areturn

public static scala.actors.FJTask par(scala.actors.FJTask[]);
  Code:
   Stack=3, Locals=1, Args_size=1
   0:	new	#19; //class scala/actors/FJTask$Par
   3:	dup
   4:	aload_0
   5:	invokespecial	#20; //Method scala/actors/FJTask$Par."<init>":([Lscala/actors/FJTask;)V
   8:	areturn

public static scala.actors.FJTask seq(scala.actors.FJTask, scala.actors.FJTask);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#21; //class scala/actors/FJTask$Seq2
   3:	dup
   4:	aload_0
   5:	aload_1
   6:	invokespecial	#22; //Method scala/actors/FJTask$Seq2."<init>":(Lscala/actors/FJTask;Lscala/actors/FJTask;)V
   9:	areturn

public static scala.actors.FJTask par(scala.actors.FJTask, scala.actors.FJTask);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#23; //class scala/actors/FJTask$Par2
   3:	dup
   4:	aload_0
   5:	aload_1
   6:	invokespecial	#24; //Method scala/actors/FJTask$Par2."<init>":(Lscala/actors/FJTask;Lscala/actors/FJTask;)V
   9:	areturn

}

