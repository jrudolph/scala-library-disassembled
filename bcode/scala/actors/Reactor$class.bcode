Compiled from "Reactor.scala"
public abstract class scala.actors.Reactor$class extends java.lang.Object
  SourceFile: "Reactor.scala"
  Scala: length = 0x
   
  InnerClass: 
   public final #330= #178 of #14; //$anonfun$4=class scala/actors/Reactor$$anonfun$4 of class scala/actors/Reactor
   public final #331= #31 of #14; //$anonfun$1=class scala/actors/Reactor$$anonfun$1 of class scala/actors/Reactor
   public final #332= #280 of #14; //$anonfun$2=class scala/actors/Reactor$$anonfun$2 of class scala/actors/Reactor
   public final #333= #46 of #14; //$anonfun$5=class scala/actors/Reactor$$anonfun$5 of class scala/actors/Reactor
   public final #334= #298 of #14; //$anonfun$3=class scala/actors/Reactor$$anonfun$3 of class scala/actors/Reactor
   public final #335= #89 of #14; //$anonfun$seq$1=class scala/actors/Reactor$$anonfun$seq$1 of class scala/actors/Reactor
   public final #336= #147 of #14; //$anonfun$react$1=class scala/actors/Reactor$$anonfun$react$1 of class scala/actors/Reactor
   public final #337= #110 of #14; //$anonfun$start$1=class scala/actors/Reactor$$anonfun$start$1 of class scala/actors/Reactor
   public final #338= #167 of #14; //$anonfun$react$2=class scala/actors/Reactor$$anonfun$react$2 of class scala/actors/Reactor
   public final #339= #187 of #14; //$anonfun$searchMailbox$1=class scala/actors/Reactor$$anonfun$searchMailbox$1 of class scala/actors/Reactor
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Reactor.scala;
const #3 = Asciz	$init$;
const #4 = Asciz	(Lscala/actors/Reactor;)V;
const #5 = Asciz	Code;
const #6 = Asciz	LineNumberTable;
const #7 = Asciz	scala/actors/MessageQueue;
const #8 = class	#7;	//  scala/actors/MessageQueue
const #9 = Asciz	<init>;
const #10 = Asciz	()V;
const #11 = NameAndType	#9:#10;//  "<init>":()V
const #12 = Method	#8.#11;	//  scala/actors/MessageQueue."<init>":()V
const #13 = Asciz	scala/actors/Reactor;
const #14 = class	#13;	//  scala/actors/Reactor
const #15 = Asciz	scala$actors$Reactor$_setter_$mailbox_$eq;
const #16 = Asciz	(Lscala/actors/MessageQueue;)V;
const #17 = NameAndType	#15:#16;//  scala$actors$Reactor$_setter_$mailbox_$eq:(Lscala/actors/MessageQueue;)V
const #18 = InterfaceMethod	#14.#17;	//  scala/actors/Reactor.scala$actors$Reactor$_setter_$mailbox_$eq:(Lscala/actors/MessageQueue;)V
const #19 = Asciz	scala/collection/mutable/Queue;
const #20 = class	#19;	//  scala/collection/mutable/Queue
const #21 = Method	#20.#11;	//  scala/collection/mutable/Queue."<init>":()V
const #22 = Asciz	sendBuffer_$eq;
const #23 = Asciz	(Lscala/collection/mutable/Queue;)V;
const #24 = NameAndType	#22:#23;//  sendBuffer_$eq:(Lscala/collection/mutable/Queue;)V
const #25 = InterfaceMethod	#14.#24;	//  scala/actors/Reactor.sendBuffer_$eq:(Lscala/collection/mutable/Queue;)V
const #26 = Asciz	continuation_$eq;
const #27 = Asciz	(Lscala/PartialFunction;)V;
const #28 = NameAndType	#26:#27;//  continuation_$eq:(Lscala/PartialFunction;)V
const #29 = InterfaceMethod	#14.#28;	//  scala/actors/Reactor.continuation_$eq:(Lscala/PartialFunction;)V
const #30 = Asciz	scala/actors/Reactor$$anonfun$1;
const #31 = class	#30;	//  scala/actors/Reactor$$anonfun$1
const #32 = NameAndType	#9:#4;//  "<init>":(Lscala/actors/Reactor;)V
const #33 = Method	#31.#32;	//  scala/actors/Reactor$$anonfun$1."<init>":(Lscala/actors/Reactor;)V
const #34 = Asciz	scala$actors$Reactor$_setter_$waitingForNone_$eq;
const #35 = Asciz	(Lscala/Function1;)V;
const #36 = NameAndType	#34:#35;//  scala$actors$Reactor$_setter_$waitingForNone_$eq:(Lscala/Function1;)V
const #37 = InterfaceMethod	#14.#36;	//  scala/actors/Reactor.scala$actors$Reactor$_setter_$waitingForNone_$eq:(Lscala/Function1;)V
const #38 = Asciz	waitingForNone;
const #39 = Asciz	()Lscala/Function1;;
const #40 = NameAndType	#38:#39;//  waitingForNone:()Lscala/Function1;
const #41 = InterfaceMethod	#14.#40;	//  scala/actors/Reactor.waitingForNone:()Lscala/Function1;
const #42 = Asciz	waitingFor_$eq;
const #43 = NameAndType	#42:#35;//  waitingFor_$eq:(Lscala/Function1;)V
const #44 = InterfaceMethod	#14.#43;	//  scala/actors/Reactor.waitingFor_$eq:(Lscala/Function1;)V
const #45 = Asciz	scala/actors/Reactor$$anonfun$5;
const #46 = class	#45;	//  scala/actors/Reactor$$anonfun$5
const #47 = Method	#46.#32;	//  scala/actors/Reactor$$anonfun$5."<init>":(Lscala/actors/Reactor;)V
const #48 = Asciz	kill_$eq;
const #49 = Asciz	(Lscala/Function0;)V;
const #50 = NameAndType	#48:#49;//  kill_$eq:(Lscala/Function0;)V
const #51 = InterfaceMethod	#14.#50;	//  scala/actors/Reactor.kill_$eq:(Lscala/Function0;)V
const #52 = Asciz	$this;
const #53 = Asciz	Lscala/actors/Reactor;;
const #54 = Asciz	LocalVariableTable;
const #55 = Asciz	terminated;
const #56 = Asciz	scheduler;
const #57 = Asciz	()Lscala/actors/IScheduler;;
const #58 = NameAndType	#56:#57;//  scheduler:()Lscala/actors/IScheduler;
const #59 = InterfaceMethod	#14.#58;	//  scala/actors/Reactor.scheduler:()Lscala/actors/IScheduler;
const #60 = Asciz	scala/actors/IScheduler;
const #61 = class	#60;	//  scala/actors/IScheduler
const #62 = NameAndType	#55:#4;//  terminated:(Lscala/actors/Reactor;)V
const #63 = InterfaceMethod	#61.#62;	//  scala/actors/IScheduler.terminated:(Lscala/actors/Reactor;)V
const #64 = Asciz	exit;
const #65 = Asciz	(Lscala/actors/Reactor;)Lscala/runtime/Nothing$;;
const #66 = NameAndType	#55:#10;//  terminated:()V
const #67 = InterfaceMethod	#14.#66;	//  scala/actors/Reactor.terminated:()V
const #68 = Asciz	scala/actors/Actor$;
const #69 = class	#68;	//  scala/actors/Actor$
const #70 = Asciz	MODULE$;
const #71 = Asciz	Lscala/actors/Actor$;;
const #72 = NameAndType	#70:#71;//  MODULE$:Lscala/actors/Actor$;
const #73 = Field	#69.#72;	//  scala/actors/Actor$.MODULE$:Lscala/actors/Actor$;
const #74 = Asciz	suspendException;
const #75 = Asciz	()Lscala/actors/SuspendActorException;;
const #76 = NameAndType	#74:#75;//  suspendException:()Lscala/actors/SuspendActorException;
const #77 = Method	#69.#76;	//  scala/actors/Actor$.suspendException:()Lscala/actors/SuspendActorException;
const #78 = Asciz	seq;
const #79 = Asciz	(Lscala/actors/Reactor;Lscala/Function0;Lscala/Function0;)V;
const #80 = Asciz	rawSelf;
const #81 = Asciz	(Lscala/actors/IScheduler;)Lscala/actors/Reactor;;
const #82 = NameAndType	#80:#81;//  rawSelf:(Lscala/actors/IScheduler;)Lscala/actors/Reactor;
const #83 = Method	#69.#82;	//  scala/actors/Actor$.rawSelf:(Lscala/actors/IScheduler;)Lscala/actors/Reactor;
const #84 = Asciz	kill;
const #85 = Asciz	()Lscala/Function0;;
const #86 = NameAndType	#84:#85;//  kill:()Lscala/Function0;
const #87 = InterfaceMethod	#14.#86;	//  scala/actors/Reactor.kill:()Lscala/Function0;
const #88 = Asciz	scala/actors/Reactor$$anonfun$seq$1;
const #89 = class	#88;	//  scala/actors/Reactor$$anonfun$seq$1
const #90 = Asciz	(Lscala/actors/Reactor;Lscala/Function0;Lscala/actors/Reactor;Lscala/Function0;)V;
const #91 = NameAndType	#9:#90;//  "<init>":(Lscala/actors/Reactor;Lscala/Function0;Lscala/actors/Reactor;Lscala/Function0;)V
const #92 = Method	#89.#91;	//  scala/actors/Reactor$$anonfun$seq$1."<init>":(Lscala/actors/Reactor;Lscala/Function0;Lscala/actors/Reactor;Lscala/Function0;)V
const #93 = Asciz	scala/Function0;
const #94 = class	#93;	//  scala/Function0
const #95 = Asciz	apply;
const #96 = Asciz	()Ljava/lang/Object;;
const #97 = NameAndType	#95:#96;//  apply:()Ljava/lang/Object;
const #98 = InterfaceMethod	#94.#97;	//  scala/Function0.apply:()Ljava/lang/Object;
const #99 = Asciz	scala/actors/KillActorException;
const #100 = class	#99;	//  scala/actors/KillActorException
const #101 = Method	#100.#11;	//  scala/actors/KillActorException."<init>":()V
const #102 = Asciz	first;
const #103 = Asciz	Lscala/Function0;;
const #104 = Asciz	next$1;
const #105 = Asciz	s$1;
const #106 = Asciz	killNext$1;
const #107 = Asciz	start;
const #108 = Asciz	(Lscala/actors/Reactor;)Lscala/actors/Reactor;;
const #109 = Asciz	scala/actors/Reactor$$anonfun$start$1;
const #110 = class	#109;	//  scala/actors/Reactor$$anonfun$start$1
const #111 = Method	#110.#32;	//  scala/actors/Reactor$$anonfun$start$1."<init>":(Lscala/actors/Reactor;)V
const #112 = Asciz	execute;
const #113 = NameAndType	#112:#49;//  execute:(Lscala/Function0;)V
const #114 = InterfaceMethod	#61.#113;	//  scala/actors/IScheduler.execute:(Lscala/Function0;)V
const #115 = Asciz	scheduleActor;
const #116 = Asciz	(Lscala/actors/Reactor;Lscala/PartialFunction;Ljava/lang/Object;)V;
const #117 = Asciz	scala/actors/LightReaction;
const #118 = class	#117;	//  scala/actors/LightReaction
const #119 = Asciz	continuation;
const #120 = Asciz	()Lscala/PartialFunction;;
const #121 = NameAndType	#119:#120;//  continuation:()Lscala/PartialFunction;
const #122 = InterfaceMethod	#14.#121;	//  scala/actors/Reactor.continuation:()Lscala/PartialFunction;
const #123 = NameAndType	#9:#116;//  "<init>":(Lscala/actors/Reactor;Lscala/PartialFunction;Ljava/lang/Object;)V
const #124 = Method	#118.#123;	//  scala/actors/LightReaction."<init>":(Lscala/actors/Reactor;Lscala/PartialFunction;Ljava/lang/Object;)V
const #125 = Asciz	executeFromActor;
const #126 = Asciz	(Ljava/lang/Runnable;)V;
const #127 = NameAndType	#125:#126;//  executeFromActor:(Ljava/lang/Runnable;)V
const #128 = InterfaceMethod	#61.#127;	//  scala/actors/IScheduler.executeFromActor:(Ljava/lang/Runnable;)V
const #129 = Asciz	f;
const #130 = Asciz	Lscala/PartialFunction;;
const #131 = Asciz	msg;
const #132 = Asciz	Ljava/lang/Object;;
const #133 = Asciz	react;
const #134 = Asciz	(Lscala/actors/Reactor;Lscala/PartialFunction;)Lscala/runtime/Nothing$;;
const #135 = Asciz	scala/Predef$;
const #136 = class	#135;	//  scala/Predef$
const #137 = Asciz	Lscala/Predef$;;
const #138 = NameAndType	#70:#137;//  MODULE$:Lscala/Predef$;
const #139 = Field	#136.#138;	//  scala/Predef$.MODULE$:Lscala/Predef$;
const #140 = Asciz	java/lang/Object;
const #141 = class	#140;	//  java/lang/Object
const #142 = Asciz	equals;
const #143 = Asciz	(Ljava/lang/Object;)Z;
const #144 = NameAndType	#142:#143;//  equals:(Ljava/lang/Object;)Z
const #145 = Method	#141.#144;	//  java/lang/Object.equals:(Ljava/lang/Object;)Z
const #146 = Asciz	scala/actors/Reactor$$anonfun$react$1;
const #147 = class	#146;	//  scala/actors/Reactor$$anonfun$react$1
const #148 = Method	#147.#32;	//  scala/actors/Reactor$$anonfun$react$1."<init>":(Lscala/actors/Reactor;)V
const #149 = Asciz	assert;
const #150 = Asciz	(ZLscala/Function0;)V;
const #151 = NameAndType	#149:#150;//  assert:(ZLscala/Function0;)V
const #152 = Method	#136.#151;	//  scala/Predef$.assert:(ZLscala/Function0;)V
const #153 = Asciz	mailbox;
const #154 = Asciz	()Lscala/actors/MessageQueue;;
const #155 = NameAndType	#153:#154;//  mailbox:()Lscala/actors/MessageQueue;
const #156 = InterfaceMethod	#14.#155;	//  scala/actors/Reactor.mailbox:()Lscala/actors/MessageQueue;
const #157 = Asciz	drainSendBuffer;
const #158 = NameAndType	#157:#16;//  drainSendBuffer:(Lscala/actors/MessageQueue;)V
const #159 = InterfaceMethod	#14.#158;	//  scala/actors/Reactor.drainSendBuffer:(Lscala/actors/MessageQueue;)V
const #160 = Asciz	scala/runtime/BoxedUnit;
const #161 = class	#160;	//  scala/runtime/BoxedUnit
const #162 = Asciz	UNIT;
const #163 = Asciz	Lscala/runtime/BoxedUnit;;
const #164 = NameAndType	#162:#163;//  UNIT:Lscala/runtime/BoxedUnit;
const #165 = Field	#161.#164;	//  scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
const #166 = Asciz	scala/actors/Reactor$$anonfun$react$2;
const #167 = class	#166;	//  scala/actors/Reactor$$anonfun$react$2
const #168 = Asciz	(Lscala/actors/Reactor;Lscala/PartialFunction;)V;
const #169 = NameAndType	#9:#168;//  "<init>":(Lscala/actors/Reactor;Lscala/PartialFunction;)V
const #170 = Method	#167.#169;	//  scala/actors/Reactor$$anonfun$react$2."<init>":(Lscala/actors/Reactor;Lscala/PartialFunction;)V
const #171 = Asciz	searchMailbox;
const #172 = Asciz	(Lscala/actors/MessageQueue;Lscala/Function1;Z)V;
const #173 = NameAndType	#171:#172;//  searchMailbox:(Lscala/actors/MessageQueue;Lscala/Function1;Z)V
const #174 = InterfaceMethod	#14.#173;	//  scala/actors/Reactor.searchMailbox:(Lscala/actors/MessageQueue;Lscala/Function1;Z)V
const #175 = Asciz	f$1;
const #176 = Asciz	(Lscala/actors/Reactor;Lscala/actors/MessageQueue;Lscala/Function1;Z)V;
const #177 = Asciz	scala/actors/Reactor$$anonfun$4;
const #178 = class	#177;	//  scala/actors/Reactor$$anonfun$4
const #179 = Asciz	(Lscala/actors/Reactor;Lscala/Function1;)V;
const #180 = NameAndType	#9:#179;//  "<init>":(Lscala/actors/Reactor;Lscala/Function1;)V
const #181 = Method	#178.#180;	//  scala/actors/Reactor$$anonfun$4."<init>":(Lscala/actors/Reactor;Lscala/Function1;)V
const #182 = Asciz	extractFirst;
const #183 = Asciz	(Lscala/Function1;)Lscala/actors/MessageQueueElement;;
const #184 = NameAndType	#182:#183;//  extractFirst:(Lscala/Function1;)Lscala/actors/MessageQueueElement;
const #185 = Method	#8.#184;	//  scala/actors/MessageQueue.extractFirst:(Lscala/Function1;)Lscala/actors/MessageQueueElement;
const #186 = Asciz	scala/actors/Reactor$$anonfun$searchMailbox$1;
const #187 = class	#186;	//  scala/actors/Reactor$$anonfun$searchMailbox$1
const #188 = Method	#187.#32;	//  scala/actors/Reactor$$anonfun$searchMailbox$1."<init>":(Lscala/actors/Reactor;)V
const #189 = Asciz	foreach;
const #190 = Asciz	(Lscala/Function2;)V;
const #191 = NameAndType	#189:#190;//  foreach:(Lscala/Function2;)V
const #192 = Method	#8.#191;	//  scala/actors/MessageQueue.foreach:(Lscala/Function2;)V
const #193 = Asciz	sendBuffer;
const #194 = Asciz	()Lscala/collection/mutable/Queue;;
const #195 = NameAndType	#193:#194;//  sendBuffer:()Lscala/collection/mutable/Queue;
const #196 = InterfaceMethod	#14.#195;	//  scala/actors/Reactor.sendBuffer:()Lscala/collection/mutable/Queue;
const #197 = Asciz	isEmpty;
const #198 = Asciz	()Z;
const #199 = NameAndType	#197:#198;//  isEmpty:()Z
const #200 = Method	#20.#199;	//  scala/collection/mutable/Queue.isEmpty:()Z
const #201 = Asciz	scala/Tuple2;
const #202 = class	#201;	//  scala/Tuple2
const #203 = Asciz	scala/actors/MessageQueueElement;
const #204 = class	#203;	//  scala/actors/MessageQueueElement
const #205 = NameAndType	#131:#96;//  msg:()Ljava/lang/Object;
const #206 = Method	#204.#205;	//  scala/actors/MessageQueueElement.msg:()Ljava/lang/Object;
const #207 = Asciz	session;
const #208 = Asciz	()Lscala/actors/OutputChannel;;
const #209 = NameAndType	#207:#208;//  session:()Lscala/actors/OutputChannel;
const #210 = Method	#204.#209;	//  scala/actors/MessageQueueElement.session:()Lscala/actors/OutputChannel;
const #211 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)V;
const #212 = NameAndType	#9:#211;//  "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
const #213 = Method	#202.#212;	//  scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
const #214 = Asciz	resumeReceiver;
const #215 = Asciz	(Lscala/Tuple2;Z)V;
const #216 = NameAndType	#214:#215;//  resumeReceiver:(Lscala/Tuple2;Z)V
const #217 = InterfaceMethod	#14.#216;	//  scala/actors/Reactor.resumeReceiver:(Lscala/Tuple2;Z)V
const #218 = Asciz	startMbox;
const #219 = Asciz	Lscala/actors/MessageQueue;;
const #220 = Asciz	handlesMessage$1;
const #221 = Asciz	Lscala/Function1;;
const #222 = Asciz	resumeOnSameThread;
const #223 = Asciz	Z;
const #224 = Asciz	tmpMbox;
const #225 = Asciz	done;
const #226 = Asciz	qel;
const #227 = Asciz	Lscala/actors/MessageQueueElement;;
const #228 = Asciz	(Lscala/actors/Reactor;Lscala/actors/MessageQueue;)V;
const #229 = Asciz	dequeue;
const #230 = NameAndType	#229:#96;//  dequeue:()Ljava/lang/Object;
const #231 = Method	#20.#230;	//  scala/collection/mutable/Queue.dequeue:()Ljava/lang/Object;
const #232 = Asciz	_1;
const #233 = NameAndType	#232:#96;//  _1:()Ljava/lang/Object;
const #234 = Method	#202.#233;	//  scala/Tuple2._1:()Ljava/lang/Object;
const #235 = Asciz	_2;
const #236 = NameAndType	#235:#96;//  _2:()Ljava/lang/Object;
const #237 = Method	#202.#236;	//  scala/Tuple2._2:()Ljava/lang/Object;
const #238 = Asciz	scala/actors/OutputChannel;
const #239 = class	#238;	//  scala/actors/OutputChannel
const #240 = Asciz	append;
const #241 = Asciz	(Ljava/lang/Object;Lscala/actors/OutputChannel;)V;
const #242 = NameAndType	#240:#241;//  append:(Ljava/lang/Object;Lscala/actors/OutputChannel;)V
const #243 = Method	#8.#242;	//  scala/actors/MessageQueue.append:(Ljava/lang/Object;Lscala/actors/OutputChannel;)V
const #244 = Asciz	mbox;
const #245 = Asciz	item;
const #246 = Asciz	Lscala/Tuple2;;
const #247 = Asciz	receiver;
const #248 = Asciz	(Lscala/actors/Reactor;)Lscala/actors/Actor;;
const #249 = Asciz	scala/actors/Actor;
const #250 = class	#249;	//  scala/actors/Actor
const #251 = Asciz	forward;
const #252 = Asciz	(Lscala/actors/Reactor;Ljava/lang/Object;)V;
const #253 = Asciz	send;
const #254 = NameAndType	#253:#241;//  send:(Ljava/lang/Object;Lscala/actors/OutputChannel;)V
const #255 = InterfaceMethod	#14.#254;	//  scala/actors/Reactor.send:(Ljava/lang/Object;Lscala/actors/OutputChannel;)V
const #256 = Asciz	$bang;
const #257 = Asciz	(Lscala/actors/Reactor;Lscala/Tuple2;Z)V;
const #258 = Asciz	scala/Function1;
const #259 = class	#258;	//  scala/Function1
const #260 = Asciz	(Ljava/lang/Object;)Ljava/lang/Object;;
const #261 = NameAndType	#95:#260;//  apply:(Ljava/lang/Object;)Ljava/lang/Object;
const #262 = InterfaceMethod	#259.#261;	//  scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
const #263 = Asciz	(Lscala/PartialFunction;Ljava/lang/Object;)V;
const #264 = NameAndType	#115:#263;//  scheduleActor:(Lscala/PartialFunction;Ljava/lang/Object;)V
const #265 = InterfaceMethod	#14.#264;	//  scala/actors/Reactor.scheduleActor:(Lscala/PartialFunction;Ljava/lang/Object;)V
const #266 = Asciz	onSameThread;
const #267 = Asciz	makeReaction;
const #268 = Asciz	(Lscala/actors/Reactor;Lscala/Function0;)Ljava/lang/Runnable;;
const #269 = Asciz	scala/actors/ReactorTask;
const #270 = class	#269;	//  scala/actors/ReactorTask
const #271 = Asciz	(Lscala/actors/Reactor;Lscala/Function0;)V;
const #272 = NameAndType	#9:#271;//  "<init>":(Lscala/actors/Reactor;Lscala/Function0;)V
const #273 = Method	#270.#272;	//  scala/actors/ReactorTask."<init>":(Lscala/actors/Reactor;Lscala/Function0;)V
const #274 = Asciz	fun;
const #275 = Asciz	(Lscala/actors/Reactor;Ljava/lang/Object;Lscala/actors/OutputChannel;)V;
const #276 = Asciz	waitingFor;
const #277 = NameAndType	#276:#39;//  waitingFor:()Lscala/Function1;
const #278 = InterfaceMethod	#14.#277;	//  scala/actors/Reactor.waitingFor:()Lscala/Function1;
const #279 = Asciz	scala/actors/Reactor$$anonfun$2;
const #280 = class	#279;	//  scala/actors/Reactor$$anonfun$2
const #281 = Asciz	(Lscala/actors/Reactor;Ljava/lang/Object;Lscala/actors/OutputChannel;Lscala/Function1;)V;
const #282 = NameAndType	#9:#281;//  "<init>":(Lscala/actors/Reactor;Ljava/lang/Object;Lscala/actors/OutputChannel;Lscala/Function1;)V
const #283 = Method	#280.#282;	//  scala/actors/Reactor$$anonfun$2."<init>":(Lscala/actors/Reactor;Ljava/lang/Object;Lscala/actors/OutputChannel;Lscala/Function1;)V
const #284 = Asciz	scala/runtime/ScalaRunTime$;
const #285 = class	#284;	//  scala/runtime/ScalaRunTime$
const #286 = Asciz	Lscala/runtime/ScalaRunTime$;;
const #287 = NameAndType	#70:#286;//  MODULE$:Lscala/runtime/ScalaRunTime$;
const #288 = Field	#285.#287;	//  scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
const #289 = Asciz	boxArray;
const #290 = Asciz	(Ljava/lang/Object;)Lscala/runtime/BoxedArray;;
const #291 = NameAndType	#289:#290;//  boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
const #292 = Method	#285.#291;	//  scala/runtime/ScalaRunTime$.boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
const #293 = Asciz	enqueue;
const #294 = Asciz	(Lscala/collection/Sequence;)V;
const #295 = NameAndType	#293:#294;//  enqueue:(Lscala/collection/Sequence;)V
const #296 = Method	#20.#295;	//  scala/collection/mutable/Queue.enqueue:(Lscala/collection/Sequence;)V
const #297 = Asciz	scala/actors/Reactor$$anonfun$3;
const #298 = class	#297;	//  scala/actors/Reactor$$anonfun$3
const #299 = Method	#298.#32;	//  scala/actors/Reactor$$anonfun$3."<init>":(Lscala/actors/Reactor;)V
const #300 = Asciz	msg$1;
const #301 = Asciz	replyTo$1;
const #302 = Asciz	Lscala/actors/OutputChannel;;
const #303 = Asciz	todo;
const #304 = Asciz	savedWaitingFor$1;
const #305 = Asciz	mailboxSize;
const #306 = Asciz	(Lscala/actors/Reactor;)I;
const #307 = Asciz	size;
const #308 = Asciz	()I;
const #309 = NameAndType	#307:#308;//  size:()I
const #310 = Method	#8.#309;	//  scala/actors/MessageQueue.size:()I
const #311 = Asciz	(Lscala/actors/Reactor;)Lscala/actors/IScheduler;;
const #312 = Asciz	scala/actors/Scheduler$;
const #313 = class	#312;	//  scala/actors/Scheduler$
const #314 = Asciz	Lscala/actors/Scheduler$;;
const #315 = NameAndType	#70:#314;//  MODULE$:Lscala/actors/Scheduler$;
const #316 = Field	#313.#315;	//  scala/actors/Scheduler$.MODULE$:Lscala/actors/Scheduler$;
const #317 = Asciz	exceptionHandler;
const #318 = Asciz	(Lscala/actors/Reactor;)Lscala/PartialFunction;;
const #319 = Asciz	Map;
const #320 = Asciz	()Lscala/collection/immutable/Map$;;
const #321 = NameAndType	#319:#320;//  Map:()Lscala/collection/immutable/Map$;
const #322 = Method	#136.#321;	//  scala/Predef$.Map:()Lscala/collection/immutable/Map$;
const #323 = Asciz	scala/collection/immutable/Map$;
const #324 = class	#323;	//  scala/collection/immutable/Map$
const #325 = Asciz	(Lscala/collection/Sequence;)Lscala/collection/Map;;
const #326 = NameAndType	#95:#325;//  apply:(Lscala/collection/Sequence;)Lscala/collection/Map;
const #327 = Method	#324.#326;	//  scala/collection/immutable/Map$.apply:(Lscala/collection/Sequence;)Lscala/collection/Map;
const #328 = Asciz	Scala;
const #329 = Asciz	InnerClasses;
const #330 = Asciz	$anonfun$4;
const #331 = Asciz	$anonfun$1;
const #332 = Asciz	$anonfun$2;
const #333 = Asciz	$anonfun$5;
const #334 = Asciz	$anonfun$3;
const #335 = Asciz	$anonfun$seq$1;
const #336 = Asciz	$anonfun$react$1;
const #337 = Asciz	$anonfun$start$1;
const #338 = Asciz	$anonfun$react$2;
const #339 = Asciz	$anonfun$searchMailbox$1;
const #340 = Asciz	scala/actors/Reactor$class;
const #341 = class	#340;	//  scala/actors/Reactor$class

{
public static void $init$(scala.actors.Reactor);
  Code:
   Stack=4, Locals=1, Args_size=1
   0:	aload_0
   1:	new	#8; //class scala/actors/MessageQueue
   4:	dup
   5:	invokespecial	#12; //Method scala/actors/MessageQueue."<init>":()V
   8:	invokeinterface	#18,  2; //InterfaceMethod scala/actors/Reactor.scala$actors$Reactor$_setter_$mailbox_$eq:(Lscala/actors/MessageQueue;)V
   13:	aload_0
   14:	new	#20; //class scala/collection/mutable/Queue
   17:	dup
   18:	invokespecial	#21; //Method scala/collection/mutable/Queue."<init>":()V
   21:	invokeinterface	#25,  2; //InterfaceMethod scala/actors/Reactor.sendBuffer_$eq:(Lscala/collection/mutable/Queue;)V
   26:	aload_0
   27:	aconst_null
   28:	pop
   29:	aconst_null
   30:	invokeinterface	#29,  2; //InterfaceMethod scala/actors/Reactor.continuation_$eq:(Lscala/PartialFunction;)V
   35:	aload_0
   36:	new	#31; //class scala/actors/Reactor$$anonfun$1
   39:	dup
   40:	aload_0
   41:	invokespecial	#33; //Method scala/actors/Reactor$$anonfun$1."<init>":(Lscala/actors/Reactor;)V
   44:	invokeinterface	#37,  2; //InterfaceMethod scala/actors/Reactor.scala$actors$Reactor$_setter_$waitingForNone_$eq:(Lscala/Function1;)V
   49:	aload_0
   50:	aload_0
   51:	invokeinterface	#41,  1; //InterfaceMethod scala/actors/Reactor.waitingForNone:()Lscala/Function1;
   56:	invokeinterface	#44,  2; //InterfaceMethod scala/actors/Reactor.waitingFor_$eq:(Lscala/Function1;)V
   61:	aload_0
   62:	new	#46; //class scala/actors/Reactor$$anonfun$5
   65:	dup
   66:	aload_0
   67:	invokespecial	#47; //Method scala/actors/Reactor$$anonfun$5."<init>":(Lscala/actors/Reactor;)V
   70:	invokeinterface	#51,  2; //InterfaceMethod scala/actors/Reactor.kill_$eq:(Lscala/Function0;)V
   75:	return
  LineNumberTable: 
   line 23: 0
   line 25: 13
   line 30: 26
   line 39: 35
   line 40: 49
   line 168: 61
   line 169: 62
   line 168: 70

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      76      0    $this       Lscala/actors/Reactor;


public static void terminated(scala.actors.Reactor);
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	invokeinterface	#59,  1; //InterfaceMethod scala/actors/Reactor.scheduler:()Lscala/actors/IScheduler;
   6:	aload_0
   7:	invokeinterface	#63,  2; //InterfaceMethod scala/actors/IScheduler.terminated:(Lscala/actors/Reactor;)V
   12:	return
  LineNumberTable: 
   line 193: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      13      0    $this       Lscala/actors/Reactor;


public static scala.runtime.Nothing$ exit(scala.actors.Reactor);
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokeinterface	#67,  1; //InterfaceMethod scala/actors/Reactor.terminated:()V
   6:	getstatic	#73; //Field scala/actors/Actor$.MODULE$:Lscala/actors/Actor$;
   9:	invokevirtual	#77; //Method scala/actors/Actor$.suspendException:()Lscala/actors/SuspendActorException;
   12:	athrow
  LineNumberTable: 
   line 188: 0
   line 189: 6

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      13      0    $this       Lscala/actors/Reactor;


public static void seq(scala.actors.Reactor, scala.Function0, scala.Function0);
  Code:
   Stack=7, Locals=5, Args_size=3
   0:	getstatic	#73; //Field scala/actors/Actor$.MODULE$:Lscala/actors/Actor$;
   3:	aload_0
   4:	invokeinterface	#59,  1; //InterfaceMethod scala/actors/Reactor.scheduler:()Lscala/actors/IScheduler;
   9:	invokevirtual	#83; //Method scala/actors/Actor$.rawSelf:(Lscala/actors/IScheduler;)Lscala/actors/Reactor;
   12:	astore_3
   13:	aload_3
   14:	invokeinterface	#87,  1; //InterfaceMethod scala/actors/Reactor.kill:()Lscala/Function0;
   19:	astore	4
   21:	aload_3
   22:	new	#89; //class scala/actors/Reactor$$anonfun$seq$1
   25:	dup
   26:	aload_0
   27:	aload_2
   28:	aload_3
   29:	aload	4
   31:	invokespecial	#92; //Method scala/actors/Reactor$$anonfun$seq$1."<init>":(Lscala/actors/Reactor;Lscala/Function0;Lscala/actors/Reactor;Lscala/Function0;)V
   34:	invokeinterface	#51,  2; //InterfaceMethod scala/actors/Reactor.kill_$eq:(Lscala/Function0;)V
   39:	aload_1
   40:	invokeinterface	#98,  1; //InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
   45:	pop
   46:	new	#100; //class scala/actors/KillActorException
   49:	dup
   50:	invokespecial	#101; //Method scala/actors/KillActorException."<init>":()V
   53:	athrow
  LineNumberTable: 
   line 172: 0
   line 173: 13
   line 174: 21
   line 183: 39
   line 184: 46

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      54      0    $this       Lscala/actors/Reactor;
   0      54      1    first       Lscala/Function0;
   0      54      2    next$1       Lscala/Function0;
   13      41      3    s$1       Lscala/actors/Reactor;
   21      33      4    killNext$1       Lscala/Function0;


public static scala.actors.Reactor start(scala.actors.Reactor);
  Code:
   Stack=4, Locals=1, Args_size=1
   0:	aload_0
   1:	invokeinterface	#59,  1; //InterfaceMethod scala/actors/Reactor.scheduler:()Lscala/actors/IScheduler;
   6:	new	#110; //class scala/actors/Reactor$$anonfun$start$1
   9:	dup
   10:	aload_0
   11:	invokespecial	#111; //Method scala/actors/Reactor$$anonfun$start$1."<init>":(Lscala/actors/Reactor;)V
   14:	invokeinterface	#114,  2; //InterfaceMethod scala/actors/IScheduler.execute:(Lscala/Function0;)V
   19:	aload_0
   20:	areturn
  LineNumberTable: 
   line 157: 0
   line 161: 19

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      21      0    $this       Lscala/actors/Reactor;


public static void scheduleActor(scala.actors.Reactor, scala.PartialFunction, java.lang.Object);
  Code:
   Stack=6, Locals=3, Args_size=3
   0:	aload_0
   1:	invokeinterface	#59,  1; //InterfaceMethod scala/actors/Reactor.scheduler:()Lscala/actors/IScheduler;
   6:	new	#118; //class scala/actors/LightReaction
   9:	dup
   10:	aload_0
   11:	aload_1
   12:	ifnonnull	24
   15:	aload_0
   16:	invokeinterface	#122,  1; //InterfaceMethod scala/actors/Reactor.continuation:()Lscala/PartialFunction;
   21:	goto	25
   24:	aload_1
   25:	aload_2
   26:	invokespecial	#124; //Method scala/actors/LightReaction."<init>":(Lscala/actors/Reactor;Lscala/PartialFunction;Ljava/lang/Object;)V
   29:	invokeinterface	#128,  2; //InterfaceMethod scala/actors/IScheduler.executeFromActor:(Ljava/lang/Runnable;)V
   34:	return
  LineNumberTable: 
   line 151: 0
   line 152: 11
   line 153: 25
   line 151: 26

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      35      0    $this       Lscala/actors/Reactor;
   0      35      1    f       Lscala/PartialFunction;
   0      35      2    msg       Ljava/lang/Object;


public static scala.runtime.Nothing$ react(scala.actors.Reactor, scala.PartialFunction);
  Code:
   Stack=6, Locals=4, Args_size=2
   0:	getstatic	#139; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   3:	getstatic	#73; //Field scala/actors/Actor$.MODULE$:Lscala/actors/Actor$;
   6:	aload_0
   7:	invokeinterface	#59,  1; //InterfaceMethod scala/actors/Reactor.scheduler:()Lscala/actors/IScheduler;
   12:	invokevirtual	#83; //Method scala/actors/Actor$.rawSelf:(Lscala/actors/IScheduler;)Lscala/actors/Reactor;
   15:	aload_0
   16:	astore_2
   17:	dup
   18:	ifnonnull	29
   21:	pop
   22:	aload_2
   23:	ifnull	36
   26:	goto	40
   29:	aload_2
   30:	invokevirtual	#145; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   33:	ifeq	40
   36:	iconst_1
   37:	goto	41
   40:	iconst_0
   41:	new	#147; //class scala/actors/Reactor$$anonfun$react$1
   44:	dup
   45:	aload_0
   46:	invokespecial	#148; //Method scala/actors/Reactor$$anonfun$react$1."<init>":(Lscala/actors/Reactor;)V
   49:	invokevirtual	#152; //Method scala/Predef$.assert:(ZLscala/Function0;)V
   52:	aload_0
   53:	dup
   54:	astore_3
   55:	monitorenter
   56:	aload_0
   57:	aload_0
   58:	invokeinterface	#156,  1; //InterfaceMethod scala/actors/Reactor.mailbox:()Lscala/actors/MessageQueue;
   63:	invokeinterface	#159,  2; //InterfaceMethod scala/actors/Reactor.drainSendBuffer:(Lscala/actors/MessageQueue;)V
   68:	getstatic	#165; //Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
   71:	pop
   72:	aload_3
   73:	monitorexit
   74:	aload_0
   75:	aload_1
   76:	invokeinterface	#29,  2; //InterfaceMethod scala/actors/Reactor.continuation_$eq:(Lscala/PartialFunction;)V
   81:	aload_0
   82:	aload_0
   83:	invokeinterface	#156,  1; //InterfaceMethod scala/actors/Reactor.mailbox:()Lscala/actors/MessageQueue;
   88:	new	#167; //class scala/actors/Reactor$$anonfun$react$2
   91:	dup
   92:	aload_0
   93:	aload_1
   94:	invokespecial	#170; //Method scala/actors/Reactor$$anonfun$react$2."<init>":(Lscala/actors/Reactor;Lscala/PartialFunction;)V
   97:	iconst_0
   98:	invokeinterface	#174,  4; //InterfaceMethod scala/actors/Reactor.searchMailbox:(Lscala/actors/MessageQueue;Lscala/Function1;Z)V
   103:	getstatic	#73; //Field scala/actors/Actor$.MODULE$:Lscala/actors/Actor$;
   106:	invokevirtual	#77; //Method scala/actors/Actor$.suspendException:()Lscala/actors/SuspendActorException;
   109:	athrow
   110:	aload_3
   111:	monitorexit
   112:	athrow
  Exception table:
   from   to  target type
    56    74   110   any
  LineNumberTable: 
   line 140: 0
   line 141: 52
   line 142: 74
   line 143: 81
   line 144: 103
   line 141: 111

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      113      0    $this       Lscala/actors/Reactor;
   0      113      1    f$1       Lscala/PartialFunction;


public static void searchMailbox(scala.actors.Reactor, scala.actors.MessageQueue, scala.Function1, boolean);
  Code:
   Stack=5, Locals=8, Args_size=4
   0:	aload_1
   1:	astore	4
   3:	iconst_0
   4:	istore	5
   6:	iload	5
   8:	ifeq	12
   11:	return
   12:	aload	4
   14:	new	#178; //class scala/actors/Reactor$$anonfun$4
   17:	dup
   18:	aload_0
   19:	aload_2
   20:	invokespecial	#181; //Method scala/actors/Reactor$$anonfun$4."<init>":(Lscala/actors/Reactor;Lscala/Function1;)V
   23:	invokevirtual	#185; //Method scala/actors/MessageQueue.extractFirst:(Lscala/Function1;)Lscala/actors/MessageQueueElement;
   26:	astore	6
   28:	aload	4
   30:	aload_0
   31:	invokeinterface	#156,  1; //InterfaceMethod scala/actors/Reactor.mailbox:()Lscala/actors/MessageQueue;
   36:	if_acmpeq	52
   39:	aload	4
   41:	new	#187; //class scala/actors/Reactor$$anonfun$searchMailbox$1
   44:	dup
   45:	aload_0
   46:	invokespecial	#188; //Method scala/actors/Reactor$$anonfun$searchMailbox$1."<init>":(Lscala/actors/Reactor;)V
   49:	invokevirtual	#192; //Method scala/actors/MessageQueue.foreach:(Lscala/Function2;)V
   52:	aload	6
   54:	ifnonnull	116
   57:	aload_0
   58:	dup
   59:	astore	7
   61:	monitorenter
   62:	aload_0
   63:	invokeinterface	#196,  1; //InterfaceMethod scala/actors/Reactor.sendBuffer:()Lscala/collection/mutable/Queue;
   68:	invokevirtual	#200; //Method scala/collection/mutable/Queue.isEmpty:()Z
   71:	ifeq	90
   74:	aload_0
   75:	aload_2
   76:	invokeinterface	#44,  2; //InterfaceMethod scala/actors/Reactor.waitingFor_$eq:(Lscala/Function1;)V
   81:	iconst_1
   82:	istore	5
   84:	getstatic	#165; //Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
   87:	goto	110
   90:	new	#8; //class scala/actors/MessageQueue
   93:	dup
   94:	invokespecial	#12; //Method scala/actors/MessageQueue."<init>":()V
   97:	astore	4
   99:	aload_0
   100:	aload	4
   102:	invokeinterface	#159,  2; //InterfaceMethod scala/actors/Reactor.drainSendBuffer:(Lscala/actors/MessageQueue;)V
   107:	getstatic	#165; //Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
   110:	aload	7
   112:	monitorexit
   113:	goto	146
   116:	aload_0
   117:	new	#202; //class scala/Tuple2
   120:	dup
   121:	aload	6
   123:	invokevirtual	#206; //Method scala/actors/MessageQueueElement.msg:()Ljava/lang/Object;
   126:	aload	6
   128:	invokevirtual	#210; //Method scala/actors/MessageQueueElement.session:()Lscala/actors/OutputChannel;
   131:	invokespecial	#213; //Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
   134:	iload_3
   135:	invokeinterface	#217,  3; //InterfaceMethod scala/actors/Reactor.resumeReceiver:(Lscala/Tuple2;Z)V
   140:	iconst_1
   141:	istore	5
   143:	getstatic	#165; //Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
   146:	pop
   147:	goto	6
   150:	aload	7
   152:	monitorexit
   153:	athrow
  Exception table:
   from   to  target type
    62   116   150   any
  LineNumberTable: 
   line 114: 0
   line 115: 3
   line 116: 6
   line 113: 11
   line 117: 12
   line 118: 28
   line 119: 39
   line 120: 52
   line 121: 57
   line 123: 62
   line 128: 74
   line 129: 81
   line 124: 90
   line 125: 99
   line 133: 110
   line 121: 112
   line 133: 116
   line 134: 140
   line 132: 143
   line 120: 146
   line 116: 147
   line 121: 152

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      154      0    $this       Lscala/actors/Reactor;
   0      154      1    startMbox       Lscala/actors/MessageQueue;
   0      154      2    handlesMessage$1       Lscala/Function1;
   0      154      3    resumeOnSameThread       Z
   3      151      4    tmpMbox       Lscala/actors/MessageQueue;
   6      148      5    done       Z
   28      119      6    qel       Lscala/actors/MessageQueueElement;
   150      4      6    qel       Lscala/actors/MessageQueueElement;


public static void drainSendBuffer(scala.actors.Reactor, scala.actors.MessageQueue);
  Code:
   Stack=3, Locals=3, Args_size=2
   0:	aload_0
   1:	invokeinterface	#196,  1; //InterfaceMethod scala/actors/Reactor.sendBuffer:()Lscala/collection/mutable/Queue;
   6:	invokevirtual	#200; //Method scala/collection/mutable/Queue.isEmpty:()Z
   9:	ifeq	13
   12:	return
   13:	aload_0
   14:	invokeinterface	#196,  1; //InterfaceMethod scala/actors/Reactor.sendBuffer:()Lscala/collection/mutable/Queue;
   19:	invokevirtual	#231; //Method scala/collection/mutable/Queue.dequeue:()Ljava/lang/Object;
   22:	checkcast	#202; //class scala/Tuple2
   25:	astore_2
   26:	aload_1
   27:	aload_2
   28:	invokevirtual	#234; //Method scala/Tuple2._1:()Ljava/lang/Object;
   31:	aload_2
   32:	invokevirtual	#237; //Method scala/Tuple2._2:()Ljava/lang/Object;
   35:	checkcast	#239; //class scala/actors/OutputChannel
   38:	invokevirtual	#243; //Method scala/actors/MessageQueue.append:(Ljava/lang/Object;Lscala/actors/OutputChannel;)V
   41:	goto	0
  LineNumberTable: 
   line 104: 0
   line 105: 13
   line 106: 26
   line 104: 41

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      44      0    $this       Lscala/actors/Reactor;
   0      44      1    mbox       Lscala/actors/MessageQueue;
   26      15      2    item       Lscala/Tuple2;


public static scala.actors.Actor receiver(scala.actors.Reactor);
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	checkcast	#250; //class scala/actors/Actor
   4:	areturn
  LineNumberTable: 
   line 101: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    $this       Lscala/actors/Reactor;


public static void forward(scala.actors.Reactor, java.lang.Object);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	aconst_null
   3:	pop
   4:	aconst_null
   5:	invokeinterface	#255,  3; //InterfaceMethod scala/actors/Reactor.send:(Ljava/lang/Object;Lscala/actors/OutputChannel;)V
   10:	return
  LineNumberTable: 
   line 98: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      11      0    $this       Lscala/actors/Reactor;
   0      11      1    msg       Ljava/lang/Object;


public static void $bang(scala.actors.Reactor, java.lang.Object);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	aconst_null
   3:	pop
   4:	aconst_null
   5:	invokeinterface	#255,  3; //InterfaceMethod scala/actors/Reactor.send:(Ljava/lang/Object;Lscala/actors/OutputChannel;)V
   10:	return
  LineNumberTable: 
   line 94: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      11      0    $this       Lscala/actors/Reactor;
   0      11      1    msg       Ljava/lang/Object;


public static void resumeReceiver(scala.actors.Reactor, scala.Tuple2, boolean);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	iload_2
   1:	ifeq	23
   4:	aload_0
   5:	invokeinterface	#122,  1; //InterfaceMethod scala/actors/Reactor.continuation:()Lscala/PartialFunction;
   10:	aload_1
   11:	invokevirtual	#234; //Method scala/Tuple2._1:()Ljava/lang/Object;
   14:	invokeinterface	#262,  2; //InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
   19:	pop
   20:	goto	36
   23:	aload_0
   24:	aconst_null
   25:	pop
   26:	aconst_null
   27:	aload_1
   28:	invokevirtual	#234; //Method scala/Tuple2._1:()Ljava/lang/Object;
   31:	invokeinterface	#265,  3; //InterfaceMethod scala/actors/Reactor.scheduleActor:(Lscala/PartialFunction;Ljava/lang/Object;)V
   36:	return
  LineNumberTable: 
   line 87: 0
   line 88: 4
   line 90: 23
   line 87: 36

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      37      0    $this       Lscala/actors/Reactor;
   0      37      1    item       Lscala/Tuple2;
   0      37      2    onSameThread       Z


public static java.lang.Runnable makeReaction(scala.actors.Reactor, scala.Function0);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#270; //class scala/actors/ReactorTask
   3:	dup
   4:	aload_0
   5:	aload_1
   6:	invokespecial	#273; //Method scala/actors/ReactorTask."<init>":(Lscala/actors/Reactor;Lscala/Function0;)V
   9:	areturn
  LineNumberTable: 
   line 83: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    $this       Lscala/actors/Reactor;
   0      10      1    fun       Lscala/Function0;


public static void send(scala.actors.Reactor, java.lang.Object, scala.actors.OutputChannel);
  Code:
   Stack=9, Locals=6, Args_size=3
   0:	aload_0
   1:	dup
   2:	astore	4
   4:	monitorenter
   5:	aload_0
   6:	invokeinterface	#278,  1; //InterfaceMethod scala/actors/Reactor.waitingFor:()Lscala/Function1;
   11:	aload_0
   12:	invokeinterface	#41,  1; //InterfaceMethod scala/actors/Reactor.waitingForNone:()Lscala/Function1;
   17:	if_acmpeq	55
   20:	aload_0
   21:	invokeinterface	#278,  1; //InterfaceMethod scala/actors/Reactor.waitingFor:()Lscala/Function1;
   26:	astore	5
   28:	aload_0
   29:	aload_0
   30:	invokeinterface	#41,  1; //InterfaceMethod scala/actors/Reactor.waitingForNone:()Lscala/Function1;
   35:	invokeinterface	#44,  2; //InterfaceMethod scala/actors/Reactor.waitingFor_$eq:(Lscala/Function1;)V
   40:	new	#280; //class scala/actors/Reactor$$anonfun$2
   43:	dup
   44:	aload_0
   45:	aload_1
   46:	aload_2
   47:	aload	5
   49:	invokespecial	#283; //Method scala/actors/Reactor$$anonfun$2."<init>":(Lscala/actors/Reactor;Ljava/lang/Object;Lscala/actors/OutputChannel;Lscala/Function1;)V
   52:	goto	94
   55:	aload_0
   56:	invokeinterface	#196,  1; //InterfaceMethod scala/actors/Reactor.sendBuffer:()Lscala/collection/mutable/Queue;
   61:	getstatic	#288; //Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   64:	iconst_1
   65:	anewarray	#202; //class scala/Tuple2
   68:	dup
   69:	iconst_0
   70:	new	#202; //class scala/Tuple2
   73:	dup
   74:	aload_1
   75:	aload_2
   76:	invokespecial	#213; //Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
   79:	aastore
   80:	invokevirtual	#292; //Method scala/runtime/ScalaRunTime$.boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
   83:	invokevirtual	#296; //Method scala/collection/mutable/Queue.enqueue:(Lscala/collection/Sequence;)V
   86:	new	#298; //class scala/actors/Reactor$$anonfun$3
   89:	dup
   90:	aload_0
   91:	invokespecial	#299; //Method scala/actors/Reactor$$anonfun$3."<init>":(Lscala/actors/Reactor;)V
   94:	aload	4
   96:	monitorexit
   97:	checkcast	#94; //class scala/Function0
   100:	astore_3
   101:	aload_3
   102:	invokeinterface	#98,  1; //InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
   107:	pop
   108:	return
   109:	aload	4
   111:	monitorexit
   112:	athrow
  Exception table:
   from   to  target type
     5    97   109   any
  LineNumberTable: 
   line 65: 0
   line 66: 5
   line 67: 20
   line 68: 28
   line 69: 40
   line 75: 55
   line 76: 86
   line 65: 96
   line 79: 101
   line 65: 111

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      113      0    $this       Lscala/actors/Reactor;
   0      113      1    msg$1       Ljava/lang/Object;
   0      113      2    replyTo$1       Lscala/actors/OutputChannel;
   101      7      3    todo       Lscala/Function0;
   28      24      5    savedWaitingFor$1       Lscala/Function1;


public static int mailboxSize(scala.actors.Reactor);
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokeinterface	#156,  1; //InterfaceMethod scala/actors/Reactor.mailbox:()Lscala/actors/MessageQueue;
   6:	invokevirtual	#310; //Method scala/actors/MessageQueue.size:()I
   9:	ireturn
  LineNumberTable: 
   line 55: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    $this       Lscala/actors/Reactor;


public static scala.actors.IScheduler scheduler(scala.actors.Reactor);
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	getstatic	#316; //Field scala/actors/Scheduler$.MODULE$:Lscala/actors/Scheduler$;
   3:	areturn
  LineNumberTable: 
   line 52: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      4      0    $this       Lscala/actors/Reactor;


public static scala.PartialFunction exceptionHandler(scala.actors.Reactor);
  Code:
   Stack=3, Locals=1, Args_size=1
   0:	getstatic	#139; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   3:	invokevirtual	#322; //Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
   6:	getstatic	#288; //Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   9:	iconst_0
   10:	anewarray	#202; //class scala/Tuple2
   13:	invokevirtual	#292; //Method scala/runtime/ScalaRunTime$.boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
   16:	invokevirtual	#327; //Method scala/collection/immutable/Map$.apply:(Lscala/collection/Sequence;)Lscala/collection/Map;
   19:	areturn
  LineNumberTable: 
   line 49: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      20      0    $this       Lscala/actors/Reactor;


}

