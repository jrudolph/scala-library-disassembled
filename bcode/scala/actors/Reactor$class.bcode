Compiled from "Reactor.scala"
public abstract class scala.actors.Reactor$class extends java.lang.Object
  SourceFile: "Reactor.scala"
  Scala: length = 0x
   
  InnerClass: 
   public final #354= #322 of #16; //$anonfun$2=class scala/actors/Reactor$$anonfun$2 of class scala/actors/Reactor
   public final #355= #191 of #16; //$anonfun$3=class scala/actors/Reactor$$anonfun$3 of class scala/actors/Reactor
   public final #356= #133 of #16; //$anonfun$4=class scala/actors/Reactor$$anonfun$4 of class scala/actors/Reactor
   public final #357= #119 of #16; //$anonfun$5=class scala/actors/Reactor$$anonfun$5 of class scala/actors/Reactor
   public final #358= #50 of #16; //$anonfun$6=class scala/actors/Reactor$$anonfun$6 of class scala/actors/Reactor
   public final #359= #35 of #16; //$anonfun$1=class scala/actors/Reactor$$anonfun$1 of class scala/actors/Reactor
   public final #360= #93 of #16; //$anonfun$seq$1=class scala/actors/Reactor$$anonfun$seq$1 of class scala/actors/Reactor
   public final #361= #180 of #16; //$anonfun$react$2=class scala/actors/Reactor$$anonfun$react$2 of class scala/actors/Reactor
   public final #362= #291 of #16; //$anonfun$startSearch$1=class scala/actors/Reactor$$anonfun$startSearch$1 of class scala/actors/Reactor
   public final #363= #200 of #16; //$anonfun$searchMailbox$1=class scala/actors/Reactor$$anonfun$searchMailbox$1 of class scala/actors/Reactor
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Reactor.scala;
const #3 = Asciz	$init$;
const #4 = Asciz	(Lscala/actors/Reactor;)V;
const #5 = Asciz	Code;
const #6 = Asciz	LineNumberTable;
const #7 = Asciz	scala/actors/MessageQueue;
const #8 = class	#7;	//  scala/actors/MessageQueue
const #9 = Asciz	Reactor;
const #10 = String	#9;	//  Reactor
const #11 = Asciz	<init>;
const #12 = Asciz	(Ljava/lang/String;)V;
const #13 = NameAndType	#11:#12;//  "<init>":(Ljava/lang/String;)V
const #14 = Method	#8.#13;	//  scala/actors/MessageQueue."<init>":(Ljava/lang/String;)V
const #15 = Asciz	scala/actors/Reactor;
const #16 = class	#15;	//  scala/actors/Reactor
const #17 = Asciz	scala$actors$Reactor$_setter_$mailbox_$eq;
const #18 = Asciz	(Lscala/actors/MessageQueue;)V;
const #19 = NameAndType	#17:#18;//  scala$actors$Reactor$_setter_$mailbox_$eq:(Lscala/actors/MessageQueue;)V
const #20 = InterfaceMethod	#16.#19;	//  scala/actors/Reactor.scala$actors$Reactor$_setter_$mailbox_$eq:(Lscala/actors/MessageQueue;)V
const #21 = Asciz	scala/collection/mutable/Queue;
const #22 = class	#21;	//  scala/collection/mutable/Queue
const #23 = Asciz	()V;
const #24 = NameAndType	#11:#23;//  "<init>":()V
const #25 = Method	#22.#24;	//  scala/collection/mutable/Queue."<init>":()V
const #26 = Asciz	scala$actors$Reactor$_setter_$sendBuffer_$eq;
const #27 = Asciz	(Lscala/collection/mutable/Queue;)V;
const #28 = NameAndType	#26:#27;//  scala$actors$Reactor$_setter_$sendBuffer_$eq:(Lscala/collection/mutable/Queue;)V
const #29 = InterfaceMethod	#16.#28;	//  scala/actors/Reactor.scala$actors$Reactor$_setter_$sendBuffer_$eq:(Lscala/collection/mutable/Queue;)V
const #30 = Asciz	continuation_$eq;
const #31 = Asciz	(Lscala/PartialFunction;)V;
const #32 = NameAndType	#30:#31;//  continuation_$eq:(Lscala/PartialFunction;)V
const #33 = InterfaceMethod	#16.#32;	//  scala/actors/Reactor.continuation_$eq:(Lscala/PartialFunction;)V
const #34 = Asciz	scala/actors/Reactor$$anonfun$1;
const #35 = class	#34;	//  scala/actors/Reactor$$anonfun$1
const #36 = NameAndType	#11:#4;//  "<init>":(Lscala/actors/Reactor;)V
const #37 = Method	#35.#36;	//  scala/actors/Reactor$$anonfun$1."<init>":(Lscala/actors/Reactor;)V
const #38 = Asciz	scala$actors$Reactor$_setter_$waitingForNone_$eq;
const #39 = Asciz	(Lscala/Function1;)V;
const #40 = NameAndType	#38:#39;//  scala$actors$Reactor$_setter_$waitingForNone_$eq:(Lscala/Function1;)V
const #41 = InterfaceMethod	#16.#40;	//  scala/actors/Reactor.scala$actors$Reactor$_setter_$waitingForNone_$eq:(Lscala/Function1;)V
const #42 = Asciz	waitingForNone;
const #43 = Asciz	()Lscala/Function1;;
const #44 = NameAndType	#42:#43;//  waitingForNone:()Lscala/Function1;
const #45 = InterfaceMethod	#16.#44;	//  scala/actors/Reactor.waitingForNone:()Lscala/Function1;
const #46 = Asciz	waitingFor_$eq;
const #47 = NameAndType	#46:#39;//  waitingFor_$eq:(Lscala/Function1;)V
const #48 = InterfaceMethod	#16.#47;	//  scala/actors/Reactor.waitingFor_$eq:(Lscala/Function1;)V
const #49 = Asciz	scala/actors/Reactor$$anonfun$6;
const #50 = class	#49;	//  scala/actors/Reactor$$anonfun$6
const #51 = Method	#50.#36;	//  scala/actors/Reactor$$anonfun$6."<init>":(Lscala/actors/Reactor;)V
const #52 = Asciz	kill_$eq;
const #53 = Asciz	(Lscala/Function0;)V;
const #54 = NameAndType	#52:#53;//  kill_$eq:(Lscala/Function0;)V
const #55 = InterfaceMethod	#16.#54;	//  scala/actors/Reactor.kill_$eq:(Lscala/Function0;)V
const #56 = Asciz	$this;
const #57 = Asciz	Lscala/actors/Reactor;;
const #58 = Asciz	LocalVariableTable;
const #59 = Asciz	terminated;
const #60 = Asciz	scheduler;
const #61 = Asciz	()Lscala/actors/IScheduler;;
const #62 = NameAndType	#60:#61;//  scheduler:()Lscala/actors/IScheduler;
const #63 = InterfaceMethod	#16.#62;	//  scala/actors/Reactor.scheduler:()Lscala/actors/IScheduler;
const #64 = Asciz	scala/actors/IScheduler;
const #65 = class	#64;	//  scala/actors/IScheduler
const #66 = NameAndType	#59:#4;//  terminated:(Lscala/actors/Reactor;)V
const #67 = InterfaceMethod	#65.#66;	//  scala/actors/IScheduler.terminated:(Lscala/actors/Reactor;)V
const #68 = Asciz	exit;
const #69 = Asciz	(Lscala/actors/Reactor;)Lscala/runtime/Nothing$;;
const #70 = NameAndType	#59:#23;//  terminated:()V
const #71 = InterfaceMethod	#16.#70;	//  scala/actors/Reactor.terminated:()V
const #72 = Asciz	scala/actors/Actor$;
const #73 = class	#72;	//  scala/actors/Actor$
const #74 = Asciz	MODULE$;
const #75 = Asciz	Lscala/actors/Actor$;;
const #76 = NameAndType	#74:#75;//  MODULE$:Lscala/actors/Actor$;
const #77 = Field	#73.#76;	//  scala/actors/Actor$.MODULE$:Lscala/actors/Actor$;
const #78 = Asciz	suspendException;
const #79 = Asciz	()Lscala/actors/SuspendActorException;;
const #80 = NameAndType	#78:#79;//  suspendException:()Lscala/actors/SuspendActorException;
const #81 = Method	#73.#80;	//  scala/actors/Actor$.suspendException:()Lscala/actors/SuspendActorException;
const #82 = Asciz	seq;
const #83 = Asciz	(Lscala/actors/Reactor;Lscala/Function0;Lscala/Function0;)V;
const #84 = Asciz	rawSelf;
const #85 = Asciz	(Lscala/actors/IScheduler;)Lscala/actors/Reactor;;
const #86 = NameAndType	#84:#85;//  rawSelf:(Lscala/actors/IScheduler;)Lscala/actors/Reactor;
const #87 = Method	#73.#86;	//  scala/actors/Actor$.rawSelf:(Lscala/actors/IScheduler;)Lscala/actors/Reactor;
const #88 = Asciz	kill;
const #89 = Asciz	()Lscala/Function0;;
const #90 = NameAndType	#88:#89;//  kill:()Lscala/Function0;
const #91 = InterfaceMethod	#16.#90;	//  scala/actors/Reactor.kill:()Lscala/Function0;
const #92 = Asciz	scala/actors/Reactor$$anonfun$seq$1;
const #93 = class	#92;	//  scala/actors/Reactor$$anonfun$seq$1
const #94 = Asciz	(Lscala/actors/Reactor;Lscala/Function0;Lscala/actors/Reactor;Lscala/Function0;)V;
const #95 = NameAndType	#11:#94;//  "<init>":(Lscala/actors/Reactor;Lscala/Function0;Lscala/actors/Reactor;Lscala/Function0;)V
const #96 = Method	#93.#95;	//  scala/actors/Reactor$$anonfun$seq$1."<init>":(Lscala/actors/Reactor;Lscala/Function0;Lscala/actors/Reactor;Lscala/Function0;)V
const #97 = Asciz	scala/Function0;
const #98 = class	#97;	//  scala/Function0
const #99 = Asciz	apply;
const #100 = Asciz	()Ljava/lang/Object;;
const #101 = NameAndType	#99:#100;//  apply:()Ljava/lang/Object;
const #102 = InterfaceMethod	#98.#101;	//  scala/Function0.apply:()Ljava/lang/Object;
const #103 = Asciz	scala/actors/KillActorException;
const #104 = class	#103;	//  scala/actors/KillActorException
const #105 = Method	#104.#24;	//  scala/actors/KillActorException."<init>":()V
const #106 = Asciz	first;
const #107 = Asciz	Lscala/Function0;;
const #108 = Asciz	next$1;
const #109 = Asciz	s$1;
const #110 = Asciz	killNext$1;
const #111 = Asciz	start;
const #112 = Asciz	(Lscala/actors/Reactor;)Lscala/actors/Reactor;;
const #113 = Asciz	newActor;
const #114 = NameAndType	#113:#4;//  newActor:(Lscala/actors/Reactor;)V
const #115 = InterfaceMethod	#65.#114;	//  scala/actors/IScheduler.newActor:(Lscala/actors/Reactor;)V
const #116 = Asciz	scala/actors/ReactorTask;
const #117 = class	#116;	//  scala/actors/ReactorTask
const #118 = Asciz	scala/actors/Reactor$$anonfun$5;
const #119 = class	#118;	//  scala/actors/Reactor$$anonfun$5
const #120 = Method	#119.#36;	//  scala/actors/Reactor$$anonfun$5."<init>":(Lscala/actors/Reactor;)V
const #121 = Asciz	(Lscala/actors/Reactor;Lscala/Function0;)V;
const #122 = NameAndType	#11:#121;//  "<init>":(Lscala/actors/Reactor;Lscala/Function0;)V
const #123 = Method	#117.#122;	//  scala/actors/ReactorTask."<init>":(Lscala/actors/Reactor;Lscala/Function0;)V
const #124 = Asciz	execute;
const #125 = Asciz	(Ljava/lang/Runnable;)V;
const #126 = NameAndType	#124:#125;//  execute:(Ljava/lang/Runnable;)V
const #127 = InterfaceMethod	#65.#126;	//  scala/actors/IScheduler.execute:(Ljava/lang/Runnable;)V
const #128 = Asciz	task;
const #129 = Asciz	Lscala/actors/ReactorTask;;
const #130 = Asciz	scheduleActor;
const #131 = Asciz	(Lscala/actors/Reactor;Lscala/PartialFunction;Ljava/lang/Object;)V;
const #132 = Asciz	scala/actors/Reactor$$anonfun$4;
const #133 = class	#132;	//  scala/actors/Reactor$$anonfun$4
const #134 = NameAndType	#11:#131;//  "<init>":(Lscala/actors/Reactor;Lscala/PartialFunction;Ljava/lang/Object;)V
const #135 = Method	#133.#134;	//  scala/actors/Reactor$$anonfun$4."<init>":(Lscala/actors/Reactor;Lscala/PartialFunction;Ljava/lang/Object;)V
const #136 = Asciz	executeFromActor;
const #137 = NameAndType	#136:#125;//  executeFromActor:(Ljava/lang/Runnable;)V
const #138 = InterfaceMethod	#65.#137;	//  scala/actors/IScheduler.executeFromActor:(Ljava/lang/Runnable;)V
const #139 = Asciz	handler$2;
const #140 = Asciz	Lscala/PartialFunction;;
const #141 = Asciz	msg$2;
const #142 = Asciz	Ljava/lang/Object;;
const #143 = Asciz	fun;
const #144 = Asciz	react;
const #145 = Asciz	(Lscala/actors/Reactor;Lscala/PartialFunction;)Lscala/runtime/Nothing$;;
const #146 = Asciz	java/lang/Object;
const #147 = class	#146;	//  java/lang/Object
const #148 = Asciz	equals;
const #149 = Asciz	(Ljava/lang/Object;)Z;
const #150 = NameAndType	#148:#149;//  equals:(Ljava/lang/Object;)Z
const #151 = Method	#147.#150;	//  java/lang/Object.equals:(Ljava/lang/Object;)Z
const #152 = Asciz	java/lang/AssertionError;
const #153 = class	#152;	//  java/lang/AssertionError
const #154 = Asciz	scala/collection/mutable/StringBuilder;
const #155 = class	#154;	//  scala/collection/mutable/StringBuilder
const #156 = Method	#155.#24;	//  scala/collection/mutable/StringBuilder."<init>":()V
const #157 = Asciz	assertion failed: ;
const #158 = String	#157;	//  assertion failed: 
const #159 = Asciz	append;
const #160 = Asciz	(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;;
const #161 = NameAndType	#159:#160;//  append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
const #162 = Method	#155.#161;	//  scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
const #163 = Asciz	react on channel belonging to other actor;
const #164 = String	#163;	//  react on channel belonging to other actor
const #165 = Asciz	toString;
const #166 = Asciz	()Ljava/lang/String;;
const #167 = NameAndType	#165:#166;//  toString:()Ljava/lang/String;
const #168 = Method	#155.#167;	//  scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
const #169 = Asciz	(Ljava/lang/Object;)V;
const #170 = NameAndType	#11:#169;//  "<init>":(Ljava/lang/Object;)V
const #171 = Method	#153.#170;	//  java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
const #172 = Asciz	mailbox;
const #173 = Asciz	()Lscala/actors/MessageQueue;;
const #174 = NameAndType	#172:#173;//  mailbox:()Lscala/actors/MessageQueue;
const #175 = InterfaceMethod	#16.#174;	//  scala/actors/Reactor.mailbox:()Lscala/actors/MessageQueue;
const #176 = Asciz	drainSendBuffer;
const #177 = NameAndType	#176:#18;//  drainSendBuffer:(Lscala/actors/MessageQueue;)V
const #178 = InterfaceMethod	#16.#177;	//  scala/actors/Reactor.drainSendBuffer:(Lscala/actors/MessageQueue;)V
const #179 = Asciz	scala/actors/Reactor$$anonfun$react$2;
const #180 = class	#179;	//  scala/actors/Reactor$$anonfun$react$2
const #181 = Asciz	(Lscala/actors/Reactor;Lscala/PartialFunction;)V;
const #182 = NameAndType	#11:#181;//  "<init>":(Lscala/actors/Reactor;Lscala/PartialFunction;)V
const #183 = Method	#180.#182;	//  scala/actors/Reactor$$anonfun$react$2."<init>":(Lscala/actors/Reactor;Lscala/PartialFunction;)V
const #184 = Asciz	searchMailbox;
const #185 = Asciz	(Lscala/actors/MessageQueue;Lscala/Function1;Z)V;
const #186 = NameAndType	#184:#185;//  searchMailbox:(Lscala/actors/MessageQueue;Lscala/Function1;Z)V
const #187 = InterfaceMethod	#16.#186;	//  scala/actors/Reactor.searchMailbox:(Lscala/actors/MessageQueue;Lscala/Function1;Z)V
const #188 = Asciz	f$1;
const #189 = Asciz	(Lscala/actors/Reactor;Lscala/actors/MessageQueue;Lscala/Function1;Z)V;
const #190 = Asciz	scala/actors/Reactor$$anonfun$3;
const #191 = class	#190;	//  scala/actors/Reactor$$anonfun$3
const #192 = Asciz	(Lscala/actors/Reactor;Lscala/Function1;)V;
const #193 = NameAndType	#11:#192;//  "<init>":(Lscala/actors/Reactor;Lscala/Function1;)V
const #194 = Method	#191.#193;	//  scala/actors/Reactor$$anonfun$3."<init>":(Lscala/actors/Reactor;Lscala/Function1;)V
const #195 = Asciz	extractFirst;
const #196 = Asciz	(Lscala/Function2;)Lscala/actors/MessageQueueElement;;
const #197 = NameAndType	#195:#196;//  extractFirst:(Lscala/Function2;)Lscala/actors/MessageQueueElement;
const #198 = Method	#8.#197;	//  scala/actors/MessageQueue.extractFirst:(Lscala/Function2;)Lscala/actors/MessageQueueElement;
const #199 = Asciz	scala/actors/Reactor$$anonfun$searchMailbox$1;
const #200 = class	#199;	//  scala/actors/Reactor$$anonfun$searchMailbox$1
const #201 = Method	#200.#36;	//  scala/actors/Reactor$$anonfun$searchMailbox$1."<init>":(Lscala/actors/Reactor;)V
const #202 = Asciz	foreach;
const #203 = Asciz	(Lscala/Function2;)V;
const #204 = NameAndType	#202:#203;//  foreach:(Lscala/Function2;)V
const #205 = Method	#8.#204;	//  scala/actors/MessageQueue.foreach:(Lscala/Function2;)V
const #206 = Asciz	sendBuffer;
const #207 = Asciz	()Lscala/collection/mutable/Queue;;
const #208 = NameAndType	#206:#207;//  sendBuffer:()Lscala/collection/mutable/Queue;
const #209 = InterfaceMethod	#16.#208;	//  scala/actors/Reactor.sendBuffer:()Lscala/collection/mutable/Queue;
const #210 = Asciz	isEmpty;
const #211 = Asciz	()Z;
const #212 = NameAndType	#210:#211;//  isEmpty:()Z
const #213 = Method	#22.#212;	//  scala/collection/mutable/Queue.isEmpty:()Z
const #214 = Asciz	Temp;
const #215 = String	#214;	//  Temp
const #216 = Asciz	scala/Tuple2;
const #217 = class	#216;	//  scala/Tuple2
const #218 = Asciz	scala/actors/MessageQueueElement;
const #219 = class	#218;	//  scala/actors/MessageQueueElement
const #220 = Asciz	msg;
const #221 = NameAndType	#220:#100;//  msg:()Ljava/lang/Object;
const #222 = Method	#219.#221;	//  scala/actors/MessageQueueElement.msg:()Ljava/lang/Object;
const #223 = Asciz	session;
const #224 = Asciz	()Lscala/actors/OutputChannel;;
const #225 = NameAndType	#223:#224;//  session:()Lscala/actors/OutputChannel;
const #226 = Method	#219.#225;	//  scala/actors/MessageQueueElement.session:()Lscala/actors/OutputChannel;
const #227 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)V;
const #228 = NameAndType	#11:#227;//  "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
const #229 = Method	#217.#228;	//  scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
const #230 = Asciz	resumeReceiver;
const #231 = Asciz	(Lscala/Tuple2;Z)V;
const #232 = NameAndType	#230:#231;//  resumeReceiver:(Lscala/Tuple2;Z)V
const #233 = InterfaceMethod	#16.#232;	//  scala/actors/Reactor.resumeReceiver:(Lscala/Tuple2;Z)V
const #234 = Asciz	startMbox;
const #235 = Asciz	Lscala/actors/MessageQueue;;
const #236 = Asciz	handlesMessage$1;
const #237 = Asciz	Lscala/Function1;;
const #238 = Asciz	resumeOnSameThread;
const #239 = Asciz	Z;
const #240 = Asciz	tmpMbox;
const #241 = Asciz	qel;
const #242 = Asciz	Lscala/actors/MessageQueueElement;;
const #243 = Asciz	done;
const #244 = Asciz	(Lscala/actors/Reactor;Lscala/actors/MessageQueue;)V;
const #245 = Asciz	dequeue;
const #246 = NameAndType	#245:#100;//  dequeue:()Ljava/lang/Object;
const #247 = Method	#22.#246;	//  scala/collection/mutable/Queue.dequeue:()Ljava/lang/Object;
const #248 = Asciz	_1;
const #249 = NameAndType	#248:#100;//  _1:()Ljava/lang/Object;
const #250 = Method	#217.#249;	//  scala/Tuple2._1:()Ljava/lang/Object;
const #251 = Asciz	_2;
const #252 = NameAndType	#251:#100;//  _2:()Ljava/lang/Object;
const #253 = Method	#217.#252;	//  scala/Tuple2._2:()Ljava/lang/Object;
const #254 = Asciz	scala/actors/OutputChannel;
const #255 = class	#254;	//  scala/actors/OutputChannel
const #256 = Asciz	(Ljava/lang/Object;Lscala/actors/OutputChannel;)V;
const #257 = NameAndType	#159:#256;//  append:(Ljava/lang/Object;Lscala/actors/OutputChannel;)V
const #258 = Method	#8.#257;	//  scala/actors/MessageQueue.append:(Ljava/lang/Object;Lscala/actors/OutputChannel;)V
const #259 = Asciz	mbox;
const #260 = Asciz	item;
const #261 = Asciz	Lscala/Tuple2;;
const #262 = Asciz	receiver;
const #263 = Asciz	(Lscala/actors/Reactor;)Lscala/actors/Actor;;
const #264 = Asciz	scala/actors/Actor;
const #265 = class	#264;	//  scala/actors/Actor
const #266 = Asciz	forward;
const #267 = Asciz	(Lscala/actors/Reactor;Ljava/lang/Object;)V;
const #268 = Asciz	send;
const #269 = NameAndType	#268:#256;//  send:(Ljava/lang/Object;Lscala/actors/OutputChannel;)V
const #270 = InterfaceMethod	#16.#269;	//  scala/actors/Reactor.send:(Ljava/lang/Object;Lscala/actors/OutputChannel;)V
const #271 = Asciz	$bang;
const #272 = Asciz	(Lscala/actors/Reactor;Lscala/Tuple2;Z)V;
const #273 = Asciz	continuation;
const #274 = Asciz	()Lscala/PartialFunction;;
const #275 = NameAndType	#273:#274;//  continuation:()Lscala/PartialFunction;
const #276 = InterfaceMethod	#16.#275;	//  scala/actors/Reactor.continuation:()Lscala/PartialFunction;
const #277 = Asciz	scala/Function1;
const #278 = class	#277;	//  scala/Function1
const #279 = Asciz	(Ljava/lang/Object;)Ljava/lang/Object;;
const #280 = NameAndType	#99:#279;//  apply:(Ljava/lang/Object;)Ljava/lang/Object;
const #281 = InterfaceMethod	#278.#280;	//  scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
const #282 = Asciz	(Lscala/PartialFunction;Ljava/lang/Object;)V;
const #283 = NameAndType	#130:#282;//  scheduleActor:(Lscala/PartialFunction;Ljava/lang/Object;)V
const #284 = InterfaceMethod	#16.#283;	//  scala/actors/Reactor.scheduleActor:(Lscala/PartialFunction;Ljava/lang/Object;)V
const #285 = Asciz	onSameThread;
const #286 = Asciz	makeReaction;
const #287 = Asciz	(Lscala/actors/Reactor;Lscala/Function0;)Ljava/lang/Runnable;;
const #288 = Asciz	startSearch;
const #289 = Asciz	(Lscala/actors/Reactor;Ljava/lang/Object;Lscala/actors/OutputChannel;Lscala/Function1;)Lscala/Function0;;
const #290 = Asciz	scala/actors/Reactor$$anonfun$startSearch$1;
const #291 = class	#290;	//  scala/actors/Reactor$$anonfun$startSearch$1
const #292 = Asciz	(Lscala/actors/Reactor;Ljava/lang/Object;Lscala/actors/OutputChannel;Lscala/Function1;)V;
const #293 = NameAndType	#11:#292;//  "<init>":(Lscala/actors/Reactor;Ljava/lang/Object;Lscala/actors/OutputChannel;Lscala/Function1;)V
const #294 = Method	#291.#293;	//  scala/actors/Reactor$$anonfun$startSearch$1."<init>":(Lscala/actors/Reactor;Ljava/lang/Object;Lscala/actors/OutputChannel;Lscala/Function1;)V
const #295 = Asciz	msg$1;
const #296 = Asciz	replyTo$1;
const #297 = Asciz	Lscala/actors/OutputChannel;;
const #298 = Asciz	handler$1;
const #299 = Asciz	(Lscala/actors/Reactor;Ljava/lang/Object;Lscala/actors/OutputChannel;)V;
const #300 = Asciz	waitingFor;
const #301 = NameAndType	#300:#43;//  waitingFor:()Lscala/Function1;
const #302 = InterfaceMethod	#16.#301;	//  scala/actors/Reactor.waitingFor:()Lscala/Function1;
const #303 = Asciz	(Ljava/lang/Object;Lscala/actors/OutputChannel;Lscala/Function1;)Lscala/Function0;;
const #304 = NameAndType	#288:#303;//  startSearch:(Ljava/lang/Object;Lscala/actors/OutputChannel;Lscala/Function1;)Lscala/Function0;
const #305 = InterfaceMethod	#16.#304;	//  scala/actors/Reactor.startSearch:(Ljava/lang/Object;Lscala/actors/OutputChannel;Lscala/Function1;)Lscala/Function0;
const #306 = Asciz	scala/Predef$;
const #307 = class	#306;	//  scala/Predef$
const #308 = Asciz	Lscala/Predef$;;
const #309 = NameAndType	#74:#308;//  MODULE$:Lscala/Predef$;
const #310 = Field	#307.#309;	//  scala/Predef$.MODULE$:Lscala/Predef$;
const #311 = Asciz	[Ljava/lang/Object;;
const #312 = class	#311;	//  "[Ljava/lang/Object;"
const #313 = Asciz	wrapRefArray;
const #314 = Asciz	([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;;
const #315 = NameAndType	#313:#314;//  wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
const #316 = Method	#307.#315;	//  scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
const #317 = Asciz	enqueue;
const #318 = Asciz	(Lscala/collection/Seq;)V;
const #319 = NameAndType	#317:#318;//  enqueue:(Lscala/collection/Seq;)V
const #320 = Method	#22.#319;	//  scala/collection/mutable/Queue.enqueue:(Lscala/collection/Seq;)V
const #321 = Asciz	scala/actors/Reactor$$anonfun$2;
const #322 = class	#321;	//  scala/actors/Reactor$$anonfun$2
const #323 = Method	#322.#36;	//  scala/actors/Reactor$$anonfun$2."<init>":(Lscala/actors/Reactor;)V
const #324 = Asciz	replyTo;
const #325 = Asciz	savedWaitingFor;
const #326 = Asciz	todo;
const #327 = Asciz	mailboxSize;
const #328 = Asciz	(Lscala/actors/Reactor;)I;
const #329 = Asciz	size;
const #330 = Asciz	()I;
const #331 = NameAndType	#329:#330;//  size:()I
const #332 = Method	#8.#331;	//  scala/actors/MessageQueue.size:()I
const #333 = Asciz	(Lscala/actors/Reactor;)Lscala/actors/IScheduler;;
const #334 = Asciz	scala/actors/Reactor$;
const #335 = class	#334;	//  scala/actors/Reactor$
const #336 = Asciz	Lscala/actors/Reactor$;;
const #337 = NameAndType	#74:#336;//  MODULE$:Lscala/actors/Reactor$;
const #338 = Field	#335.#337;	//  scala/actors/Reactor$.MODULE$:Lscala/actors/Reactor$;
const #339 = NameAndType	#60:#100;//  scheduler:()Ljava/lang/Object;
const #340 = Method	#335.#339;	//  scala/actors/Reactor$.scheduler:()Ljava/lang/Object;
const #341 = Asciz	exceptionHandler;
const #342 = Asciz	(Lscala/actors/Reactor;)Lscala/PartialFunction;;
const #343 = Asciz	Map;
const #344 = Asciz	()Lscala/collection/immutable/Map$;;
const #345 = NameAndType	#343:#344;//  Map:()Lscala/collection/immutable/Map$;
const #346 = Method	#307.#345;	//  scala/Predef$.Map:()Lscala/collection/immutable/Map$;
const #347 = Asciz	scala/collection/immutable/Map$;
const #348 = class	#347;	//  scala/collection/immutable/Map$
const #349 = Asciz	(Lscala/collection/Seq;)Lscala/collection/Map;;
const #350 = NameAndType	#99:#349;//  apply:(Lscala/collection/Seq;)Lscala/collection/Map;
const #351 = Method	#348.#350;	//  scala/collection/immutable/Map$.apply:(Lscala/collection/Seq;)Lscala/collection/Map;
const #352 = Asciz	Scala;
const #353 = Asciz	InnerClasses;
const #354 = Asciz	$anonfun$2;
const #355 = Asciz	$anonfun$3;
const #356 = Asciz	$anonfun$4;
const #357 = Asciz	$anonfun$5;
const #358 = Asciz	$anonfun$6;
const #359 = Asciz	$anonfun$1;
const #360 = Asciz	$anonfun$seq$1;
const #361 = Asciz	$anonfun$react$2;
const #362 = Asciz	$anonfun$startSearch$1;
const #363 = Asciz	$anonfun$searchMailbox$1;
const #364 = Asciz	scala/actors/Reactor$class;
const #365 = class	#364;	//  scala/actors/Reactor$class

{
public static void $init$(scala.actors.Reactor);
  Code:
   Stack=4, Locals=1, Args_size=1
   0:	aload_0
   1:	new	#8; //class scala/actors/MessageQueue
   4:	dup
   5:	ldc	#10; //String Reactor
   7:	invokespecial	#14; //Method scala/actors/MessageQueue."<init>":(Ljava/lang/String;)V
   10:	invokeinterface	#20,  2; //InterfaceMethod scala/actors/Reactor.scala$actors$Reactor$_setter_$mailbox_$eq:(Lscala/actors/MessageQueue;)V
   15:	aload_0
   16:	new	#22; //class scala/collection/mutable/Queue
   19:	dup
   20:	invokespecial	#25; //Method scala/collection/mutable/Queue."<init>":()V
   23:	invokeinterface	#29,  2; //InterfaceMethod scala/actors/Reactor.scala$actors$Reactor$_setter_$sendBuffer_$eq:(Lscala/collection/mutable/Queue;)V
   28:	aload_0
   29:	aconst_null
   30:	invokeinterface	#33,  2; //InterfaceMethod scala/actors/Reactor.continuation_$eq:(Lscala/PartialFunction;)V
   35:	aload_0
   36:	new	#35; //class scala/actors/Reactor$$anonfun$1
   39:	dup
   40:	aload_0
   41:	invokespecial	#37; //Method scala/actors/Reactor$$anonfun$1."<init>":(Lscala/actors/Reactor;)V
   44:	invokeinterface	#41,  2; //InterfaceMethod scala/actors/Reactor.scala$actors$Reactor$_setter_$waitingForNone_$eq:(Lscala/Function1;)V
   49:	aload_0
   50:	aload_0
   51:	invokeinterface	#45,  1; //InterfaceMethod scala/actors/Reactor.waitingForNone:()Lscala/Function1;
   56:	invokeinterface	#48,  2; //InterfaceMethod scala/actors/Reactor.waitingFor_$eq:(Lscala/Function1;)V
   61:	aload_0
   62:	new	#50; //class scala/actors/Reactor$$anonfun$6
   65:	dup
   66:	aload_0
   67:	invokespecial	#51; //Method scala/actors/Reactor$$anonfun$6."<init>":(Lscala/actors/Reactor;)V
   70:	invokeinterface	#55,  2; //InterfaceMethod scala/actors/Reactor.kill_$eq:(Lscala/Function0;)V
   75:	return
  LineNumberTable: 
   line 35: 0
   line 38: 15
   line 44: 28
   line 53: 35
   line 56: 49
   line 193: 61
   line 194: 62
   line 193: 70

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      76      0    $this       Lscala/actors/Reactor;


public static void terminated(scala.actors.Reactor);
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	invokeinterface	#63,  1; //InterfaceMethod scala/actors/Reactor.scheduler:()Lscala/actors/IScheduler;
   6:	aload_0
   7:	invokeinterface	#67,  2; //InterfaceMethod scala/actors/IScheduler.terminated:(Lscala/actors/Reactor;)V
   12:	return
  LineNumberTable: 
   line 218: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      13      0    $this       Lscala/actors/Reactor;


public static scala.runtime.Nothing$ exit(scala.actors.Reactor);
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokeinterface	#71,  1; //InterfaceMethod scala/actors/Reactor.terminated:()V
   6:	getstatic	#77; //Field scala/actors/Actor$.MODULE$:Lscala/actors/Actor$;
   9:	invokevirtual	#81; //Method scala/actors/Actor$.suspendException:()Lscala/actors/SuspendActorException;
   12:	athrow
  LineNumberTable: 
   line 213: 0
   line 214: 6

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      13      0    $this       Lscala/actors/Reactor;


public static void seq(scala.actors.Reactor, scala.Function0, scala.Function0);
  Code:
   Stack=7, Locals=5, Args_size=3
   0:	getstatic	#77; //Field scala/actors/Actor$.MODULE$:Lscala/actors/Actor$;
   3:	aload_0
   4:	invokeinterface	#63,  1; //InterfaceMethod scala/actors/Reactor.scheduler:()Lscala/actors/IScheduler;
   9:	invokevirtual	#87; //Method scala/actors/Actor$.rawSelf:(Lscala/actors/IScheduler;)Lscala/actors/Reactor;
   12:	astore_3
   13:	aload_3
   14:	invokeinterface	#91,  1; //InterfaceMethod scala/actors/Reactor.kill:()Lscala/Function0;
   19:	astore	4
   21:	aload_3
   22:	new	#93; //class scala/actors/Reactor$$anonfun$seq$1
   25:	dup
   26:	aload_0
   27:	aload_2
   28:	aload_3
   29:	aload	4
   31:	invokespecial	#96; //Method scala/actors/Reactor$$anonfun$seq$1."<init>":(Lscala/actors/Reactor;Lscala/Function0;Lscala/actors/Reactor;Lscala/Function0;)V
   34:	invokeinterface	#55,  2; //InterfaceMethod scala/actors/Reactor.kill_$eq:(Lscala/Function0;)V
   39:	aload_1
   40:	invokeinterface	#102,  1; //InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
   45:	pop
   46:	new	#104; //class scala/actors/KillActorException
   49:	dup
   50:	invokespecial	#105; //Method scala/actors/KillActorException."<init>":()V
   53:	athrow
  LineNumberTable: 
   line 197: 0
   line 198: 13
   line 199: 21
   line 208: 39
   line 209: 46

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      54      0    $this       Lscala/actors/Reactor;
   0      54      1    first       Lscala/Function0;
   0      54      2    next$1       Lscala/Function0;
   13      41      3    s$1       Lscala/actors/Reactor;
   21      33      4    killNext$1       Lscala/Function0;


public static scala.actors.Reactor start(scala.actors.Reactor);
  Code:
   Stack=6, Locals=2, Args_size=1
   0:	aload_0
   1:	invokeinterface	#63,  1; //InterfaceMethod scala/actors/Reactor.scheduler:()Lscala/actors/IScheduler;
   6:	aload_0
   7:	invokeinterface	#115,  2; //InterfaceMethod scala/actors/IScheduler.newActor:(Lscala/actors/Reactor;)V
   12:	new	#117; //class scala/actors/ReactorTask
   15:	dup
   16:	aload_0
   17:	new	#119; //class scala/actors/Reactor$$anonfun$5
   20:	dup
   21:	aload_0
   22:	invokespecial	#120; //Method scala/actors/Reactor$$anonfun$5."<init>":(Lscala/actors/Reactor;)V
   25:	invokespecial	#123; //Method scala/actors/ReactorTask."<init>":(Lscala/actors/Reactor;Lscala/Function0;)V
   28:	astore_1
   29:	aload_0
   30:	invokeinterface	#63,  1; //InterfaceMethod scala/actors/Reactor.scheduler:()Lscala/actors/IScheduler;
   35:	aload_1
   36:	invokeinterface	#127,  2; //InterfaceMethod scala/actors/IScheduler.execute:(Ljava/lang/Runnable;)V
   41:	aload_0
   42:	areturn
  LineNumberTable: 
   line 182: 0
   line 183: 12
   line 184: 29
   line 185: 41

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      43      0    $this       Lscala/actors/Reactor;
   29      13      1    task       Lscala/actors/ReactorTask;


public static void scheduleActor(scala.actors.Reactor, scala.PartialFunction, java.lang.Object);
  Code:
   Stack=5, Locals=5, Args_size=3
   0:	new	#133; //class scala/actors/Reactor$$anonfun$4
   3:	dup
   4:	aload_0
   5:	aload_1
   6:	aload_2
   7:	invokespecial	#135; //Method scala/actors/Reactor$$anonfun$4."<init>":(Lscala/actors/Reactor;Lscala/PartialFunction;Ljava/lang/Object;)V
   10:	astore_3
   11:	new	#117; //class scala/actors/ReactorTask
   14:	dup
   15:	aload_0
   16:	aload_3
   17:	invokespecial	#123; //Method scala/actors/ReactorTask."<init>":(Lscala/actors/Reactor;Lscala/Function0;)V
   20:	astore	4
   22:	aload_0
   23:	invokeinterface	#63,  1; //InterfaceMethod scala/actors/Reactor.scheduler:()Lscala/actors/IScheduler;
   28:	aload	4
   30:	invokeinterface	#138,  2; //InterfaceMethod scala/actors/IScheduler.executeFromActor:(Ljava/lang/Runnable;)V
   35:	return
  LineNumberTable: 
   line 176: 0
   line 177: 11
   line 178: 22

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      36      0    $this       Lscala/actors/Reactor;
   0      36      1    handler$2       Lscala/PartialFunction;
   0      36      2    msg$2       Ljava/lang/Object;
   11      24      3    fun       Lscala/Function0;
   22      13      4    task       Lscala/actors/ReactorTask;


public static scala.runtime.Nothing$ react(scala.actors.Reactor, scala.PartialFunction);
  Code:
   Stack=6, Locals=3, Args_size=2
   0:	getstatic	#77; //Field scala/actors/Actor$.MODULE$:Lscala/actors/Actor$;
   3:	aload_0
   4:	invokeinterface	#63,  1; //InterfaceMethod scala/actors/Reactor.scheduler:()Lscala/actors/IScheduler;
   9:	invokevirtual	#87; //Method scala/actors/Actor$.rawSelf:(Lscala/actors/IScheduler;)Lscala/actors/Reactor;
   12:	dup
   13:	ifnonnull	24
   16:	pop
   17:	aload_0
   18:	ifnull	31
   21:	goto	35
   24:	aload_0
   25:	invokevirtual	#151; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   28:	ifeq	35
   31:	iconst_1
   32:	goto	36
   35:	iconst_0
   36:	istore_2
   37:	iload_2
   38:	ifne	69
   41:	new	#153; //class java/lang/AssertionError
   44:	dup
   45:	new	#155; //class scala/collection/mutable/StringBuilder
   48:	dup
   49:	invokespecial	#156; //Method scala/collection/mutable/StringBuilder."<init>":()V
   52:	ldc	#158; //String assertion failed: 
   54:	invokevirtual	#162; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   57:	ldc	#164; //String react on channel belonging to other actor
   59:	invokevirtual	#162; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   62:	invokevirtual	#168; //Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
   65:	invokespecial	#171; //Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
   68:	athrow
   69:	aload_0
   70:	dup
   71:	pop
   72:	monitorenter
   73:	aload_0
   74:	aload_0
   75:	invokeinterface	#175,  1; //InterfaceMethod scala/actors/Reactor.mailbox:()Lscala/actors/MessageQueue;
   80:	invokeinterface	#178,  2; //InterfaceMethod scala/actors/Reactor.drainSendBuffer:(Lscala/actors/MessageQueue;)V
   85:	aload_0
   86:	monitorexit
   87:	aload_0
   88:	aload_1
   89:	invokeinterface	#33,  2; //InterfaceMethod scala/actors/Reactor.continuation_$eq:(Lscala/PartialFunction;)V
   94:	aload_0
   95:	aload_0
   96:	invokeinterface	#175,  1; //InterfaceMethod scala/actors/Reactor.mailbox:()Lscala/actors/MessageQueue;
   101:	new	#180; //class scala/actors/Reactor$$anonfun$react$2
   104:	dup
   105:	aload_0
   106:	aload_1
   107:	invokespecial	#183; //Method scala/actors/Reactor$$anonfun$react$2."<init>":(Lscala/actors/Reactor;Lscala/PartialFunction;)V
   110:	iconst_0
   111:	invokeinterface	#187,  4; //InterfaceMethod scala/actors/Reactor.searchMailbox:(Lscala/actors/MessageQueue;Lscala/Function1;Z)V
   116:	getstatic	#77; //Field scala/actors/Actor$.MODULE$:Lscala/actors/Actor$;
   119:	invokevirtual	#81; //Method scala/actors/Actor$.suspendException:()Lscala/actors/SuspendActorException;
   122:	athrow
   123:	aload_0
   124:	monitorexit
   125:	athrow
  Exception table:
   from   to  target type
    73    87   123   any
  LineNumberTable: 
   line 163: 0
   line 164: 69
   line 165: 87
   line 166: 94
   line 167: 116
   line 164: 124

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      126      0    $this       Lscala/actors/Reactor;
   0      126      1    f$1       Lscala/PartialFunction;


public static void searchMailbox(scala.actors.Reactor, scala.actors.MessageQueue, scala.Function1, boolean);
  Code:
   Stack=5, Locals=7, Args_size=4
   0:	aload_1
   1:	astore	4
   3:	iconst_0
   4:	istore	6
   6:	iload	6
   8:	ifeq	12
   11:	return
   12:	aload	4
   14:	new	#191; //class scala/actors/Reactor$$anonfun$3
   17:	dup
   18:	aload_0
   19:	aload_2
   20:	invokespecial	#194; //Method scala/actors/Reactor$$anonfun$3."<init>":(Lscala/actors/Reactor;Lscala/Function1;)V
   23:	invokevirtual	#198; //Method scala/actors/MessageQueue.extractFirst:(Lscala/Function2;)Lscala/actors/MessageQueueElement;
   26:	astore	5
   28:	aload	4
   30:	aload_0
   31:	invokeinterface	#175,  1; //InterfaceMethod scala/actors/Reactor.mailbox:()Lscala/actors/MessageQueue;
   36:	if_acmpeq	52
   39:	aload	4
   41:	new	#200; //class scala/actors/Reactor$$anonfun$searchMailbox$1
   44:	dup
   45:	aload_0
   46:	invokespecial	#201; //Method scala/actors/Reactor$$anonfun$searchMailbox$1."<init>":(Lscala/actors/Reactor;)V
   49:	invokevirtual	#205; //Method scala/actors/MessageQueue.foreach:(Lscala/Function2;)V
   52:	aload	5
   54:	ifnonnull	110
   57:	aload_0
   58:	dup
   59:	pop
   60:	monitorenter
   61:	aload_0
   62:	invokeinterface	#209,  1; //InterfaceMethod scala/actors/Reactor.sendBuffer:()Lscala/collection/mutable/Queue;
   67:	invokevirtual	#213; //Method scala/collection/mutable/Queue.isEmpty:()Z
   70:	ifeq	86
   73:	aload_0
   74:	aload_2
   75:	invokeinterface	#48,  2; //InterfaceMethod scala/actors/Reactor.waitingFor_$eq:(Lscala/Function1;)V
   80:	iconst_1
   81:	istore	6
   83:	goto	105
   86:	new	#8; //class scala/actors/MessageQueue
   89:	dup
   90:	ldc	#215; //String Temp
   92:	invokespecial	#14; //Method scala/actors/MessageQueue."<init>":(Ljava/lang/String;)V
   95:	astore	4
   97:	aload_0
   98:	aload	4
   100:	invokeinterface	#178,  2; //InterfaceMethod scala/actors/Reactor.drainSendBuffer:(Lscala/actors/MessageQueue;)V
   105:	aload_0
   106:	monitorexit
   107:	goto	137
   110:	aload_0
   111:	new	#217; //class scala/Tuple2
   114:	dup
   115:	aload	5
   117:	invokevirtual	#222; //Method scala/actors/MessageQueueElement.msg:()Ljava/lang/Object;
   120:	aload	5
   122:	invokevirtual	#226; //Method scala/actors/MessageQueueElement.session:()Lscala/actors/OutputChannel;
   125:	invokespecial	#229; //Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
   128:	iload_3
   129:	invokeinterface	#233,  3; //InterfaceMethod scala/actors/Reactor.resumeReceiver:(Lscala/Tuple2;Z)V
   134:	iconst_1
   135:	istore	6
   137:	goto	6
   140:	aload_0
   141:	monitorexit
   142:	athrow
  Exception table:
   from   to  target type
    61   110   140   any
  LineNumberTable: 
   line 137: 0
   line 138: 3
   line 139: 6
   line 136: 11
   line 140: 12
   line 141: 28
   line 142: 39
   line 143: 52
   line 144: 57
   line 146: 61
   line 151: 73
   line 152: 80
   line 146: 83
   line 147: 86
   line 148: 97
   line 156: 105
   line 144: 106
   line 156: 110
   line 157: 134
   line 143: 137
   line 144: 141

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      143      0    $this       Lscala/actors/Reactor;
   0      143      1    startMbox       Lscala/actors/MessageQueue;
   0      143      2    handlesMessage$1       Lscala/Function1;
   0      143      3    resumeOnSameThread       Z
   3      140      4    tmpMbox       Lscala/actors/MessageQueue;
   28      109      5    qel       Lscala/actors/MessageQueueElement;
   140      3      5    qel       Lscala/actors/MessageQueueElement;
   6      137      6    done       Z


public static void drainSendBuffer(scala.actors.Reactor, scala.actors.MessageQueue);
  Code:
   Stack=3, Locals=3, Args_size=2
   0:	aload_0
   1:	invokeinterface	#209,  1; //InterfaceMethod scala/actors/Reactor.sendBuffer:()Lscala/collection/mutable/Queue;
   6:	invokevirtual	#213; //Method scala/collection/mutable/Queue.isEmpty:()Z
   9:	ifeq	13
   12:	return
   13:	aload_0
   14:	invokeinterface	#209,  1; //InterfaceMethod scala/actors/Reactor.sendBuffer:()Lscala/collection/mutable/Queue;
   19:	invokevirtual	#247; //Method scala/collection/mutable/Queue.dequeue:()Ljava/lang/Object;
   22:	checkcast	#217; //class scala/Tuple2
   25:	astore_2
   26:	aload_1
   27:	aload_2
   28:	invokevirtual	#250; //Method scala/Tuple2._1:()Ljava/lang/Object;
   31:	aload_2
   32:	invokevirtual	#253; //Method scala/Tuple2._2:()Ljava/lang/Object;
   35:	checkcast	#255; //class scala/actors/OutputChannel
   38:	invokevirtual	#258; //Method scala/actors/MessageQueue.append:(Ljava/lang/Object;Lscala/actors/OutputChannel;)V
   41:	goto	0
  LineNumberTable: 
   line 127: 0
   line 128: 13
   line 129: 26

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      44      0    $this       Lscala/actors/Reactor;
   0      44      1    mbox       Lscala/actors/MessageQueue;
   26      15      2    item       Lscala/Tuple2;


public static scala.actors.Actor receiver(scala.actors.Reactor);
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	checkcast	#265; //class scala/actors/Actor
   4:	areturn
  LineNumberTable: 
   line 123: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    $this       Lscala/actors/Reactor;


public static void forward(scala.actors.Reactor, java.lang.Object);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	aconst_null
   3:	invokeinterface	#270,  3; //InterfaceMethod scala/actors/Reactor.send:(Ljava/lang/Object;Lscala/actors/OutputChannel;)V
   8:	return
  LineNumberTable: 
   line 120: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    $this       Lscala/actors/Reactor;
   0      9      1    msg       Ljava/lang/Object;


public static void $bang(scala.actors.Reactor, java.lang.Object);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	aconst_null
   3:	invokeinterface	#270,  3; //InterfaceMethod scala/actors/Reactor.send:(Ljava/lang/Object;Lscala/actors/OutputChannel;)V
   8:	return
  LineNumberTable: 
   line 116: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    $this       Lscala/actors/Reactor;
   0      9      1    msg       Ljava/lang/Object;


public static void resumeReceiver(scala.actors.Reactor, scala.Tuple2, boolean);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	iload_2
   1:	ifeq	23
   4:	aload_0
   5:	invokeinterface	#276,  1; //InterfaceMethod scala/actors/Reactor.continuation:()Lscala/PartialFunction;
   10:	aload_1
   11:	invokevirtual	#250; //Method scala/Tuple2._1:()Ljava/lang/Object;
   14:	invokeinterface	#281,  2; //InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
   19:	pop
   20:	goto	39
   23:	aload_0
   24:	aload_0
   25:	invokeinterface	#276,  1; //InterfaceMethod scala/actors/Reactor.continuation:()Lscala/PartialFunction;
   30:	aload_1
   31:	invokevirtual	#250; //Method scala/Tuple2._1:()Ljava/lang/Object;
   34:	invokeinterface	#284,  3; //InterfaceMethod scala/actors/Reactor.scheduleActor:(Lscala/PartialFunction;Ljava/lang/Object;)V
   39:	return
  LineNumberTable: 
   line 109: 0
   line 110: 4
   line 112: 23
   line 109: 39

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      40      0    $this       Lscala/actors/Reactor;
   0      40      1    item       Lscala/Tuple2;
   0      40      2    onSameThread       Z


public static java.lang.Runnable makeReaction(scala.actors.Reactor, scala.Function0);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#117; //class scala/actors/ReactorTask
   3:	dup
   4:	aload_0
   5:	aload_1
   6:	invokespecial	#123; //Method scala/actors/ReactorTask."<init>":(Lscala/actors/Reactor;Lscala/Function0;)V
   9:	areturn
  LineNumberTable: 
   line 102: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    $this       Lscala/actors/Reactor;
   0      10      1    fun       Lscala/Function0;


public static scala.Function0 startSearch(scala.actors.Reactor, java.lang.Object, scala.actors.OutputChannel, scala.Function1);
  Code:
   Stack=6, Locals=4, Args_size=4
   0:	new	#291; //class scala/actors/Reactor$$anonfun$startSearch$1
   3:	dup
   4:	aload_0
   5:	aload_1
   6:	aload_2
   7:	aload_3
   8:	invokespecial	#294; //Method scala/actors/Reactor$$anonfun$startSearch$1."<init>":(Lscala/actors/Reactor;Ljava/lang/Object;Lscala/actors/OutputChannel;Lscala/Function1;)V
   11:	areturn
  LineNumberTable: 
   line 95: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      12      0    $this       Lscala/actors/Reactor;
   0      12      1    msg$1       Ljava/lang/Object;
   0      12      2    replyTo$1       Lscala/actors/OutputChannel;
   0      12      3    handler$1       Lscala/Function1;


public static void send(scala.actors.Reactor, java.lang.Object, scala.actors.OutputChannel);
  Code:
   Stack=9, Locals=5, Args_size=3
   0:	aload_0
   1:	dup
   2:	pop
   3:	monitorenter
   4:	aload_0
   5:	invokeinterface	#302,  1; //InterfaceMethod scala/actors/Reactor.waitingFor:()Lscala/Function1;
   10:	aload_0
   11:	invokeinterface	#45,  1; //InterfaceMethod scala/actors/Reactor.waitingForNone:()Lscala/Function1;
   16:	if_acmpeq	50
   19:	aload_0
   20:	invokeinterface	#302,  1; //InterfaceMethod scala/actors/Reactor.waitingFor:()Lscala/Function1;
   25:	astore_3
   26:	aload_0
   27:	aload_0
   28:	invokeinterface	#45,  1; //InterfaceMethod scala/actors/Reactor.waitingForNone:()Lscala/Function1;
   33:	invokeinterface	#48,  2; //InterfaceMethod scala/actors/Reactor.waitingFor_$eq:(Lscala/Function1;)V
   38:	aload_0
   39:	aload_1
   40:	aload_2
   41:	aload_3
   42:	invokeinterface	#305,  4; //InterfaceMethod scala/actors/Reactor.startSearch:(Ljava/lang/Object;Lscala/actors/OutputChannel;Lscala/Function1;)Lscala/Function0;
   47:	goto	92
   50:	aload_0
   51:	invokeinterface	#209,  1; //InterfaceMethod scala/actors/Reactor.sendBuffer:()Lscala/collection/mutable/Queue;
   56:	getstatic	#310; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   59:	iconst_1
   60:	anewarray	#217; //class scala/Tuple2
   63:	dup
   64:	iconst_0
   65:	new	#217; //class scala/Tuple2
   68:	dup
   69:	aload_1
   70:	aload_2
   71:	invokespecial	#229; //Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
   74:	aastore
   75:	checkcast	#312; //class "[Ljava/lang/Object;"
   78:	invokevirtual	#316; //Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
   81:	invokevirtual	#320; //Method scala/collection/mutable/Queue.enqueue:(Lscala/collection/Seq;)V
   84:	new	#322; //class scala/actors/Reactor$$anonfun$2
   87:	dup
   88:	aload_0
   89:	invokespecial	#323; //Method scala/actors/Reactor$$anonfun$2."<init>":(Lscala/actors/Reactor;)V
   92:	aload_0
   93:	monitorexit
   94:	checkcast	#98; //class scala/Function0
   97:	astore	4
   99:	aload	4
   101:	invokeinterface	#102,  1; //InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
   106:	pop
   107:	return
   108:	aload_0
   109:	monitorexit
   110:	athrow
  Exception table:
   from   to  target type
     4    94   108   any
  LineNumberTable: 
   line 81: 0
   line 82: 4
   line 83: 19
   line 84: 26
   line 85: 38
   line 87: 50
   line 88: 84
   line 81: 93
   line 91: 99
   line 81: 109

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      111      0    $this       Lscala/actors/Reactor;
   0      111      1    msg       Ljava/lang/Object;
   0      111      2    replyTo       Lscala/actors/OutputChannel;
   26      21      3    savedWaitingFor       Lscala/Function1;
   99      8      4    todo       Lscala/Function0;


public static int mailboxSize(scala.actors.Reactor);
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokeinterface	#175,  1; //InterfaceMethod scala/actors/Reactor.mailbox:()Lscala/actors/MessageQueue;
   6:	invokevirtual	#332; //Method scala/actors/MessageQueue.size:()I
   9:	ireturn
  LineNumberTable: 
   line 71: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    $this       Lscala/actors/Reactor;


public static scala.actors.IScheduler scheduler(scala.actors.Reactor);
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	getstatic	#338; //Field scala/actors/Reactor$.MODULE$:Lscala/actors/Reactor$;
   3:	invokevirtual	#340; //Method scala/actors/Reactor$.scheduler:()Ljava/lang/Object;
   6:	checkcast	#65; //class scala/actors/IScheduler
   9:	areturn
  LineNumberTable: 
   line 68: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    $this       Lscala/actors/Reactor;


public static scala.PartialFunction exceptionHandler(scala.actors.Reactor);
  Code:
   Stack=3, Locals=1, Args_size=1
   0:	getstatic	#310; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   3:	invokevirtual	#346; //Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
   6:	getstatic	#310; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   9:	iconst_0
   10:	anewarray	#217; //class scala/Tuple2
   13:	checkcast	#312; //class "[Ljava/lang/Object;"
   16:	invokevirtual	#316; //Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
   19:	invokevirtual	#351; //Method scala/collection/immutable/Map$.apply:(Lscala/collection/Seq;)Lscala/collection/Map;
   22:	areturn
  LineNumberTable: 
   line 65: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      23      0    $this       Lscala/actors/Reactor;


}

