Compiled from "DefaultThreadPoolScheduler.scala"
public class scala.actors.scheduler.DefaultThreadPoolScheduler extends scala.actors.scheduler.ThreadPoolScheduler implements scala.ScalaObject
  SourceFile: "DefaultThreadPoolScheduler.scala"
  ScalaSig: length = 0xCF
   05 00 1C 06 09 01 02 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF80 00 04 08 02 1A
   44 65 66 61 75 6C 74 54 68 72 65 61 64 50 6F 6F
   6C 53 63 68 65 64 75 6C 65 72 0A 02 03 04 01 09
   73 63 68 65 64 75 6C 65 72 0A 02 05 06 01 06 61
   63 74 6F 72 73 0A 01 07 01 05 73 63 61 6C 61 13
   03 00 09 0D 10 02 0A 0B 0D 01 02 09 02 0C 02 02
   13 54 68 72 65 61 64 50 6F 6F 6C 53 63 68 65 64
   75 6C 65 72 10 02 0E 0F 0D 01 06 09 02 10 06 02
   0B 53 63 61 6C 61 4F 62 6A 65 63 74 08 08 12 00
   FFFFFF82 FFFFFF80 FFFFFFA0 FFFFFF80 04 14 01 06 64 61 65 6D 6F 6E 03 00
   10 02 0E 15 09 02 16 06 02 07 42 6F 6F 6C 65 61
   6E 08 05 18 00 FFFFFF84 00 19 01 06 3C 69 6E 69 74 3E
   14 02 1A 1B 10 02 0A 00 08 05 12 17 FFFFFFC0 00 14 
  InnerClass: 
   public final #72= #23 of #10; //$anon$1=class scala/actors/scheduler/DefaultThreadPoolScheduler$$anon$1 of class scala/actors/scheduler/DefaultThreadPoolScheduler
   public #73= #53 of #28; //CallerRunsPolicy=class java/util/concurrent/ThreadPoolExecutor$CallerRunsPolicy of class java/util/concurrent/ThreadPoolExecutor
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	DefaultThreadPoolScheduler.scala;
const #3 = Asciz	scala$actors$scheduler$DefaultThreadPoolScheduler$$daemon;
const #4 = Asciz	Z;
const #5 = Asciz	<init>;
const #6 = Asciz	(Z)V;
const #7 = Asciz	Code;
const #8 = Asciz	LineNumberTable;
const #9 = Asciz	scala/actors/scheduler/DefaultThreadPoolScheduler;
const #10 = class	#9;	//  scala/actors/scheduler/DefaultThreadPoolScheduler
const #11 = NameAndType	#3:#4;//  scala$actors$scheduler$DefaultThreadPoolScheduler$$daemon:Z
const #12 = Field	#10.#11;	//  scala/actors/scheduler/DefaultThreadPoolScheduler.scala$actors$scheduler$DefaultThreadPoolScheduler$$daemon:Z
const #13 = Asciz	scala/actors/scheduler/ThreadPoolScheduler;
const #14 = class	#13;	//  scala/actors/scheduler/ThreadPoolScheduler
const #15 = NameAndType	#5:#6;//  "<init>":(Z)V
const #16 = Method	#14.#15;	//  scala/actors/scheduler/ThreadPoolScheduler."<init>":(Z)V
const #17 = Asciz	java/util/concurrent/LinkedBlockingQueue;
const #18 = class	#17;	//  java/util/concurrent/LinkedBlockingQueue
const #19 = Asciz	()V;
const #20 = NameAndType	#5:#19;//  "<init>":()V
const #21 = Method	#18.#20;	//  java/util/concurrent/LinkedBlockingQueue."<init>":()V
const #22 = Asciz	scala/actors/scheduler/DefaultThreadPoolScheduler$$anon$1;
const #23 = class	#22;	//  scala/actors/scheduler/DefaultThreadPoolScheduler$$anon$1
const #24 = Asciz	(Lscala/actors/scheduler/DefaultThreadPoolScheduler;)V;
const #25 = NameAndType	#5:#24;//  "<init>":(Lscala/actors/scheduler/DefaultThreadPoolScheduler;)V
const #26 = Method	#23.#25;	//  scala/actors/scheduler/DefaultThreadPoolScheduler$$anon$1."<init>":(Lscala/actors/scheduler/DefaultThreadPoolScheduler;)V
const #27 = Asciz	java/util/concurrent/ThreadPoolExecutor;
const #28 = class	#27;	//  java/util/concurrent/ThreadPoolExecutor
const #29 = Asciz	scala/actors/scheduler/ThreadPoolConfig$;
const #30 = class	#29;	//  scala/actors/scheduler/ThreadPoolConfig$
const #31 = Asciz	MODULE$;
const #32 = Asciz	Lscala/actors/scheduler/ThreadPoolConfig$;;
const #33 = NameAndType	#31:#32;//  MODULE$:Lscala/actors/scheduler/ThreadPoolConfig$;
const #34 = Field	#30.#33;	//  scala/actors/scheduler/ThreadPoolConfig$.MODULE$:Lscala/actors/scheduler/ThreadPoolConfig$;
const #35 = Asciz	corePoolSize;
const #36 = Asciz	()I;
const #37 = NameAndType	#35:#36;//  corePoolSize:()I
const #38 = Method	#30.#37;	//  scala/actors/scheduler/ThreadPoolConfig$.corePoolSize:()I
const #39 = Asciz	maxPoolSize;
const #40 = NameAndType	#39:#36;//  maxPoolSize:()I
const #41 = Method	#30.#40;	//  scala/actors/scheduler/ThreadPoolConfig$.maxPoolSize:()I
const #42 = long	60000l;
const #44 = Asciz	java/util/concurrent/TimeUnit;
const #45 = class	#44;	//  java/util/concurrent/TimeUnit
const #46 = Asciz	MILLISECONDS;
const #47 = Asciz	Ljava/util/concurrent/TimeUnit;;
const #48 = NameAndType	#46:#47;//  MILLISECONDS:Ljava/util/concurrent/TimeUnit;
const #49 = Field	#45.#48;	//  java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
const #50 = Asciz	java/util/concurrent/ThreadFactory;
const #51 = class	#50;	//  java/util/concurrent/ThreadFactory
const #52 = Asciz	java/util/concurrent/ThreadPoolExecutor$CallerRunsPolicy;
const #53 = class	#52;	//  java/util/concurrent/ThreadPoolExecutor$CallerRunsPolicy
const #54 = Method	#53.#20;	//  java/util/concurrent/ThreadPoolExecutor$CallerRunsPolicy."<init>":()V
const #55 = Asciz	(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;Ljava/util/concurrent/RejectedExecutionHandler;)V;
const #56 = NameAndType	#5:#55;//  "<init>":(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;Ljava/util/concurrent/RejectedExecutionHandler;)V
const #57 = Method	#28.#56;	//  java/util/concurrent/ThreadPoolExecutor."<init>":(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;Ljava/util/concurrent/RejectedExecutionHandler;)V
const #58 = Asciz	executor_$eq;
const #59 = Asciz	(Ljava/util/concurrent/ThreadPoolExecutor;)V;
const #60 = NameAndType	#58:#59;//  executor_$eq:(Ljava/util/concurrent/ThreadPoolExecutor;)V
const #61 = Method	#10.#60;	//  scala/actors/scheduler/DefaultThreadPoolScheduler.executor_$eq:(Ljava/util/concurrent/ThreadPoolExecutor;)V
const #62 = Asciz	this;
const #63 = Asciz	Lscala/actors/scheduler/DefaultThreadPoolScheduler;;
const #64 = Asciz	daemon;
const #65 = Asciz	workQueue;
const #66 = Asciz	Ljava/util/concurrent/LinkedBlockingQueue;;
const #67 = Asciz	threadFactory;
const #68 = Asciz	Ljava/lang/Object;;
const #69 = Asciz	LocalVariableTable;
const #70 = Asciz	ScalaSig;
const #71 = Asciz	InnerClasses;
const #72 = Asciz	$anon$1;
const #73 = Asciz	CallerRunsPolicy;
const #74 = Asciz	scala/ScalaObject;
const #75 = class	#74;	//  scala/ScalaObject

{
public final boolean scala$actors$scheduler$DefaultThreadPoolScheduler$$daemon;

public scala.actors.scheduler.DefaultThreadPoolScheduler(boolean);
  Code:
   Stack=12, Locals=4, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	putfield	#12; //Field scala$actors$scheduler$DefaultThreadPoolScheduler$$daemon:Z
   5:	aload_0
   6:	iload_1
   7:	invokespecial	#16; //Method scala/actors/scheduler/ThreadPoolScheduler."<init>":(Z)V
   10:	aload_0
   11:	new	#18; //class java/util/concurrent/LinkedBlockingQueue
   14:	dup
   15:	invokespecial	#21; //Method java/util/concurrent/LinkedBlockingQueue."<init>":()V
   18:	astore_2
   19:	new	#23; //class scala/actors/scheduler/DefaultThreadPoolScheduler$$anon$1
   22:	dup
   23:	aload_0
   24:	invokespecial	#26; //Method scala/actors/scheduler/DefaultThreadPoolScheduler$$anon$1."<init>":(Lscala/actors/scheduler/DefaultThreadPoolScheduler;)V
   27:	astore_3
   28:	new	#28; //class java/util/concurrent/ThreadPoolExecutor
   31:	dup
   32:	getstatic	#34; //Field scala/actors/scheduler/ThreadPoolConfig$.MODULE$:Lscala/actors/scheduler/ThreadPoolConfig$;
   35:	invokevirtual	#38; //Method scala/actors/scheduler/ThreadPoolConfig$.corePoolSize:()I
   38:	getstatic	#34; //Field scala/actors/scheduler/ThreadPoolConfig$.MODULE$:Lscala/actors/scheduler/ThreadPoolConfig$;
   41:	invokevirtual	#41; //Method scala/actors/scheduler/ThreadPoolConfig$.maxPoolSize:()I
   44:	ldc2_w	#42; //long 60000l
   47:	getstatic	#49; //Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
   50:	aload_2
   51:	aload_3
   52:	checkcast	#51; //class java/util/concurrent/ThreadFactory
   55:	new	#53; //class java/util/concurrent/ThreadPoolExecutor$CallerRunsPolicy
   58:	dup
   59:	invokespecial	#54; //Method java/util/concurrent/ThreadPoolExecutor$CallerRunsPolicy."<init>":()V
   62:	invokespecial	#57; //Method java/util/concurrent/ThreadPoolExecutor."<init>":(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;Ljava/util/concurrent/RejectedExecutionHandler;)V
   65:	invokevirtual	#61; //Method executor_$eq:(Ljava/util/concurrent/ThreadPoolExecutor;)V
   68:	return
  LineNumberTable: 
   line 27: 0
   line 29: 10
   line 30: 11
   line 32: 19
   line 40: 28
   line 41: 38
   line 42: 44
   line 43: 47
   line 44: 50
   line 45: 51
   line 46: 55
   line 40: 62
   line 29: 65

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      69      0    this       Lscala/actors/scheduler/DefaultThreadPoolScheduler;
   0      69      1    daemon       Z
   19      46      2    workQueue       Ljava/util/concurrent/LinkedBlockingQueue;
   28      37      3    threadFactory       Ljava/lang/Object;


}

