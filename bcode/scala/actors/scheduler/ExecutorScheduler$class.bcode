Compiled from "ExecutorScheduler.scala"
public abstract class scala.actors.scheduler.ExecutorScheduler$class extends java.lang.Object
  SourceFile: "ExecutorScheduler.scala"
  Scala: length = 0x
   
  InnerClass: 
   public #52= #32 of #51; //RunCallable=class scala/actors/scheduler/ExecutorScheduler$RunCallable of class scala/actors/scheduler/ExecutorScheduler
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	ExecutorScheduler.scala;
const #3 = Asciz	$init$;
const #4 = Asciz	(Lscala/actors/scheduler/ExecutorScheduler;)V;
const #5 = Asciz	Code;
const #6 = Asciz	LineNumberTable;
const #7 = Asciz	$this;
const #8 = Asciz	Lscala/actors/scheduler/ExecutorScheduler;;
const #9 = Asciz	LocalVariableTable;
const #10 = Asciz	isActive;
const #11 = Asciz	(Lscala/actors/scheduler/ExecutorScheduler;)Z;
const #12 = Asciz	scala/concurrent/ThreadPoolRunner;
const #13 = class	#12;	//  scala/concurrent/ThreadPoolRunner
const #14 = Asciz	executor;
const #15 = Asciz	()Ljava/util/concurrent/ExecutorService;;
const #16 = NameAndType	#14:#15;//  executor:()Ljava/util/concurrent/ExecutorService;
const #17 = InterfaceMethod	#13.#16;	//  scala/concurrent/ThreadPoolRunner.executor:()Ljava/util/concurrent/ExecutorService;
const #18 = Asciz	java/util/concurrent/ExecutorService;
const #19 = class	#18;	//  java/util/concurrent/ExecutorService
const #20 = Asciz	isShutdown;
const #21 = Asciz	()Z;
const #22 = NameAndType	#20:#21;//  isShutdown:()Z
const #23 = InterfaceMethod	#19.#22;	//  java/util/concurrent/ExecutorService.isShutdown:()Z
const #24 = Asciz	onShutdown;
const #25 = Asciz	shutdown;
const #26 = Asciz	()V;
const #27 = NameAndType	#25:#26;//  shutdown:()V
const #28 = InterfaceMethod	#19.#27;	//  java/util/concurrent/ExecutorService.shutdown:()V
const #29 = Asciz	execute;
const #30 = Asciz	(Lscala/actors/scheduler/ExecutorScheduler;Lscala/Function0;)V;
const #31 = Asciz	scala/actors/scheduler/ExecutorScheduler$RunCallable;
const #32 = class	#31;	//  scala/actors/scheduler/ExecutorScheduler$RunCallable
const #33 = Asciz	<init>;
const #34 = NameAndType	#33:#30;//  "<init>":(Lscala/actors/scheduler/ExecutorScheduler;Lscala/Function0;)V
const #35 = Method	#32.#34;	//  scala/actors/scheduler/ExecutorScheduler$RunCallable."<init>":(Lscala/actors/scheduler/ExecutorScheduler;Lscala/Function0;)V
const #36 = Asciz	scala/concurrent/ThreadPoolRunner$class;
const #37 = class	#36;	//  scala/concurrent/ThreadPoolRunner$class
const #38 = Asciz	(Lscala/concurrent/ThreadPoolRunner;Ljava/util/concurrent/Callable;)V;
const #39 = NameAndType	#29:#38;//  execute:(Lscala/concurrent/ThreadPoolRunner;Ljava/util/concurrent/Callable;)V
const #40 = Method	#37.#39;	//  scala/concurrent/ThreadPoolRunner$class.execute:(Lscala/concurrent/ThreadPoolRunner;Ljava/util/concurrent/Callable;)V
const #41 = Asciz	fun;
const #42 = Asciz	Lscala/Function0;;
const #43 = Asciz	(Lscala/actors/scheduler/ExecutorScheduler;Ljava/lang/Runnable;)V;
const #44 = Asciz	java/util/concurrent/Callable;
const #45 = class	#44;	//  java/util/concurrent/Callable
const #46 = Asciz	task;
const #47 = Asciz	Ljava/lang/Runnable;;
const #48 = Asciz	Scala;
const #49 = Asciz	InnerClasses;
const #50 = Asciz	scala/actors/scheduler/ExecutorScheduler;
const #51 = class	#50;	//  scala/actors/scheduler/ExecutorScheduler
const #52 = Asciz	RunCallable;
const #53 = Asciz	scala/actors/scheduler/ExecutorScheduler$class;
const #54 = class	#53;	//  scala/actors/scheduler/ExecutorScheduler$class
const #55 = Asciz	java/lang/Object;
const #56 = class	#55;	//  java/lang/Object

{
public static void $init$(scala.actors.scheduler.ExecutorScheduler);
  Code:
   Stack=0, Locals=1, Args_size=1
   0:	return
  LineNumberTable: 
   line 23: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      1      0    $this       Lscala/actors/scheduler/ExecutorScheduler;


public static boolean isActive(scala.actors.scheduler.ExecutorScheduler);
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokeinterface	#17,  1; //InterfaceMethod scala/concurrent/ThreadPoolRunner.executor:()Ljava/util/concurrent/ExecutorService;
   6:	ifnull	27
   9:	aload_0
   10:	invokeinterface	#17,  1; //InterfaceMethod scala/concurrent/ThreadPoolRunner.executor:()Ljava/util/concurrent/ExecutorService;
   15:	invokeinterface	#23,  1; //InterfaceMethod java/util/concurrent/ExecutorService.isShutdown:()Z
   20:	ifne	27
   23:	iconst_1
   24:	goto	28
   27:	iconst_0
   28:	ireturn
  LineNumberTable: 
   line 51: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      29      0    $this       Lscala/actors/scheduler/ExecutorScheduler;


public static void onShutdown(scala.actors.scheduler.ExecutorScheduler);
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokeinterface	#17,  1; //InterfaceMethod scala/concurrent/ThreadPoolRunner.executor:()Ljava/util/concurrent/ExecutorService;
   6:	invokeinterface	#28,  1; //InterfaceMethod java/util/concurrent/ExecutorService.shutdown:()V
   11:	return
  LineNumberTable: 
   line 45: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      12      0    $this       Lscala/actors/scheduler/ExecutorScheduler;


public static void execute(scala.actors.scheduler.ExecutorScheduler, scala.Function0);
  Code:
   Stack=5, Locals=2, Args_size=2
   0:	aload_0
   1:	new	#32; //class scala/actors/scheduler/ExecutorScheduler$RunCallable
   4:	dup
   5:	aload_0
   6:	aload_1
   7:	invokespecial	#35; //Method scala/actors/scheduler/ExecutorScheduler$RunCallable."<init>":(Lscala/actors/scheduler/ExecutorScheduler;Lscala/Function0;)V
   10:	invokestatic	#40; //Method scala/concurrent/ThreadPoolRunner$class.execute:(Lscala/concurrent/ThreadPoolRunner;Ljava/util/concurrent/Callable;)V
   13:	return
  LineNumberTable: 
   line 39: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      14      0    $this       Lscala/actors/scheduler/ExecutorScheduler;
   0      14      1    fun       Lscala/Function0;


public static void execute(scala.actors.scheduler.ExecutorScheduler, java.lang.Runnable);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	checkcast	#45; //class java/util/concurrent/Callable
   5:	invokestatic	#40; //Method scala/concurrent/ThreadPoolRunner$class.execute:(Lscala/concurrent/ThreadPoolRunner;Ljava/util/concurrent/Callable;)V
   8:	return
  LineNumberTable: 
   line 26: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    $this       Lscala/actors/scheduler/ExecutorScheduler;
   0      9      1    task       Ljava/lang/Runnable;


}

