Compiled from "ForkJoinScheduler.scala"
public final class scala.actors.scheduler.ForkJoinScheduler$$anon$1 extends scala.concurrent.forkjoin.RecursiveAction
  SourceFile: "ForkJoinScheduler.scala"
  Scala: length = 0x
   
  InnerClass: 
   public final #33= #10 of #32; //$anon$1=class scala/actors/scheduler/ForkJoinScheduler$$anon$1 of class scala/actors/scheduler/ForkJoinScheduler
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	ForkJoinScheduler.scala;
const #3 = Asciz	task$1;
const #4 = Asciz	Ljava/lang/Runnable;;
const #5 = Asciz	<init>;
const #6 = Asciz	(Lscala/actors/scheduler/ForkJoinScheduler;Ljava/lang/Runnable;)V;
const #7 = Asciz	Code;
const #8 = Asciz	LineNumberTable;
const #9 = Asciz	scala/actors/scheduler/ForkJoinScheduler$$anon$1;
const #10 = class	#9;	//  scala/actors/scheduler/ForkJoinScheduler$$anon$1
const #11 = NameAndType	#3:#4;//  task$1:Ljava/lang/Runnable;
const #12 = Field	#10.#11;	//  scala/actors/scheduler/ForkJoinScheduler$$anon$1.task$1:Ljava/lang/Runnable;
const #13 = Asciz	scala/concurrent/forkjoin/RecursiveAction;
const #14 = class	#13;	//  scala/concurrent/forkjoin/RecursiveAction
const #15 = Asciz	()V;
const #16 = NameAndType	#5:#15;//  "<init>":()V
const #17 = Method	#14.#16;	//  scala/concurrent/forkjoin/RecursiveAction."<init>":()V
const #18 = Asciz	this;
const #19 = Asciz	Lscala/actors/scheduler/ForkJoinScheduler$$anon$1;;
const #20 = Asciz	$outer;
const #21 = Asciz	Lscala/actors/scheduler/ForkJoinScheduler;;
const #22 = Asciz	LocalVariableTable;
const #23 = Asciz	compute;
const #24 = Asciz	java/lang/Runnable;
const #25 = class	#24;	//  java/lang/Runnable
const #26 = Asciz	run;
const #27 = NameAndType	#26:#15;//  run:()V
const #28 = InterfaceMethod	#25.#27;	//  java/lang/Runnable.run:()V
const #29 = Asciz	Scala;
const #30 = Asciz	InnerClasses;
const #31 = Asciz	scala/actors/scheduler/ForkJoinScheduler;
const #32 = class	#31;	//  scala/actors/scheduler/ForkJoinScheduler
const #33 = Asciz	$anon$1;

{
public scala.actors.scheduler.ForkJoinScheduler$$anon$1(scala.actors.scheduler.ForkJoinScheduler, java.lang.Runnable);
  Code:
   Stack=2, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_2
   2:	putfield	#12; //Field task$1:Ljava/lang/Runnable;
   5:	aload_0
   6:	invokespecial	#17; //Method scala/concurrent/forkjoin/RecursiveAction."<init>":()V
   9:	return
  LineNumberTable: 
   line 110: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    this       Lscala/actors/scheduler/ForkJoinScheduler$$anon$1;
   0      10      1    $outer       Lscala/actors/scheduler/ForkJoinScheduler;


public void compute();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#12; //Field task$1:Ljava/lang/Runnable;
   4:	invokeinterface	#28,  1; //InterfaceMethod java/lang/Runnable.run:()V
   9:	return
  LineNumberTable: 
   line 111: 0


}

