Compiled from "ThreadPoolScheduler.scala"
public class scala.actors.scheduler.ThreadPoolScheduler extends java.lang.Thread implements scala.actors.scheduler.ExecutorScheduler,scala.actors.scheduler.TerminationMonitor,scala.ScalaObject
  SourceFile: "ThreadPoolScheduler.scala"
  ScalaSig: length = 0x2B9
   05 00 5E 06 08 01 02 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF80 00 09 02 13 54
   68 72 65 61 64 50 6F 6F 6C 53 63 68 65 64 75 6C
   65 72 0A 02 03 04 01 09 73 63 68 65 64 75 6C 65
   72 0A 02 05 06 01 06 61 63 74 6F 72 73 0A 01 07
   01 05 73 63 61 6C 61 03 00 13 05 00 0A 12 16 19
   10 02 0B 10 0D 01 0C 0A 02 0D 0E 01 04 6C 61 6E
   67 0A 01 0F 01 04 6A 61 76 61 09 02 11 0C 02 06
   54 68 72 65 61 64 10 02 13 14 0D 01 02 09 02 15
   02 02 11 45 78 65 63 75 74 6F 72 53 63 68 65 64
   75 6C 65 72 10 02 13 17 09 02 18 02 02 12 54 65
   72 6D 69 6E 61 74 69 6F 6E 4D 6F 6E 69 74 6F 72
   10 02 1A 1B 0D 01 06 09 02 1C 06 02 0B 53 63 61
   6C 61 4F 62 6A 65 63 74 08 08 1E 00 FFFFFF82 FFFFFFC0 FFFFFF80 FFFFFF84
   08 1F 01 08 65 78 65 63 75 74 6F 72 15 01 20 10
   02 21 26 0D 01 22 0A 02 23 24 01 0A 63 6F 6E 63
   75 72 72 65 6E 74 0A 02 25 0E 01 04 75 74 69 6C
   09 02 27 22 02 12 54 68 72 65 61 64 50 6F 6F 6C
   45 78 65 63 75 74 6F 72 08 08 29 00 FFFFFF82 FFFFFFC0 FFFFFF80 FFFFFF84
   08 2A 01 0C 65 78 65 63 75 74 6F 72 5F 24 65 71
   14 02 2B 2E 10 02 1A 2C 09 02 2D 06 02 04 55 6E
   69 74 08 07 2F 28 FFFFFF81 FFFFFF80 FFFFFFC0 00 20 01 03 78 24 31
   08 08 31 00 FFFFFF82 FFFFFF80 FFFFFFA0 FFFFFFA0 04 20 01 09 65 78 65 63
   75 74 6F 72 20 08 08 33 00 FFFFFF82 FFFFFFC2 FFFFFF80 FFFFFF84 08 34 01
   09 74 65 72 6D 69 6E 61 74 65 15 01 35 10 02 1A
   36 09 02 37 06 02 07 42 6F 6F 6C 65 61 6E 08 08
   39 00 FFFFFF82 FFFFFF80 FFFFFFA0 FFFFFF80 04 35 01 0A 74 65 72 6D 69 6E
   61 74 65 20 08 08 3B 00 FFFFFF82 FFFFFFC2 FFFFFF80 FFFFFF84 08 34 01 06
   64 61 65 6D 6F 6E 08 08 3D 00 FFFFFF82 FFFFFF80 FFFFFFA0 FFFFFF80 04 35
   01 07 64 61 65 6D 6F 6E 20 08 05 3F 00 FFFFFF84 00 40
   01 06 3C 69 6E 69 74 3E 14 04 41 42 43 44 10 02
   13 00 08 05 1E 3E FFFFFFC0 00 20 08 05 33 3E FFFFFFC0 00 35
   08 05 3B 3E FFFFFFC0 00 35 08 07 46 00 FFFFFFC0 FFFFFF80 FFFFFF84 04 34
   01 0B 74 65 72 6D 69 6E 61 74 69 6E 67 08 07 48
   00 FFFFFFC0 FFFFFF80 FFFFFF84 04 49 01 0F 74 65 72 6D 69 6E 61 74
   69 6E 67 5F 24 65 71 14 02 2B 4A 08 07 2F 47 FFFFFF81
   FFFFFF80 FFFFFFC0 00 35 08 06 4C 00 FFFFFFA0 FFFFFFA0 04 35 01 0C 74 65
   72 6D 69 6E 61 74 69 6E 67 20 08 07 4E 00 FFFFFFC2 FFFFFF80
   FFFFFF84 08 4F 01 0A 43 48 45 43 4B 5F 46 52 45 51 15
   01 50 10 02 1A 51 09 02 52 06 02 03 49 6E 74 08
   06 54 00 FFFFFFA0 FFFFFF80 04 50 01 0B 43 48 45 43 4B 5F 46
   52 45 51 20 08 05 3F 00 FFFFFF84 00 56 14 02 41 57 08
   05 58 55 FFFFFFC0 00 35 01 01 64 08 05 5A 00 FFFFFF84 20 5B
   01 03 72 75 6E 14 01 2B 08 05 5D 00 FFFFFF84 00 5B 01
   08 73 68 75 74 64 6F 77 6E 
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	ThreadPoolScheduler.scala;
const #3 = Asciz	scala$actors$scheduler$TerminationMonitor$$started;
const #4 = Asciz	Z;
const #5 = Asciz	terminationHandlers;
const #6 = Asciz	Lscala/collection/mutable/HashMap;;
const #7 = Asciz	activeActors;
const #8 = Asciz	I;
const #9 = Asciz	CHECK_FREQ;
const #10 = Asciz	terminating;
const #11 = Asciz	daemon;
const #12 = Asciz	terminate;
const #13 = Asciz	executor;
const #14 = Asciz	Ljava/util/concurrent/ThreadPoolExecutor;;
const #15 = Asciz	<init>;
const #16 = Asciz	(Ljava/util/concurrent/ThreadPoolExecutor;ZZ)V;
const #17 = Asciz	Code;
const #18 = Asciz	LineNumberTable;
const #19 = Asciz	scala/actors/scheduler/ThreadPoolScheduler;
const #20 = class	#19;	//  scala/actors/scheduler/ThreadPoolScheduler
const #21 = NameAndType	#13:#14;//  executor:Ljava/util/concurrent/ThreadPoolExecutor;
const #22 = Field	#20.#21;	//  scala/actors/scheduler/ThreadPoolScheduler.executor:Ljava/util/concurrent/ThreadPoolExecutor;
const #23 = NameAndType	#12:#4;//  terminate:Z
const #24 = Field	#20.#23;	//  scala/actors/scheduler/ThreadPoolScheduler.terminate:Z
const #25 = NameAndType	#11:#4;//  daemon:Z
const #26 = Field	#20.#25;	//  scala/actors/scheduler/ThreadPoolScheduler.daemon:Z
const #27 = Asciz	java/lang/Thread;
const #28 = class	#27;	//  java/lang/Thread
const #29 = Asciz	()V;
const #30 = NameAndType	#15:#29;//  "<init>":()V
const #31 = Method	#28.#30;	//  java/lang/Thread."<init>":()V
const #32 = Asciz	scala/actors/IScheduler$class;
const #33 = class	#32;	//  scala/actors/IScheduler$class
const #34 = Asciz	$init$;
const #35 = Asciz	(Lscala/actors/IScheduler;)V;
const #36 = NameAndType	#34:#35;//  $init$:(Lscala/actors/IScheduler;)V
const #37 = Method	#33.#36;	//  scala/actors/IScheduler$class.$init$:(Lscala/actors/IScheduler;)V
const #38 = Asciz	scala/concurrent/TaskRunner$class;
const #39 = class	#38;	//  scala/concurrent/TaskRunner$class
const #40 = Asciz	(Lscala/concurrent/TaskRunner;)V;
const #41 = NameAndType	#34:#40;//  $init$:(Lscala/concurrent/TaskRunner;)V
const #42 = Method	#39.#41;	//  scala/concurrent/TaskRunner$class.$init$:(Lscala/concurrent/TaskRunner;)V
const #43 = Asciz	scala/concurrent/ThreadPoolRunner$class;
const #44 = class	#43;	//  scala/concurrent/ThreadPoolRunner$class
const #45 = Asciz	(Lscala/concurrent/ThreadPoolRunner;)V;
const #46 = NameAndType	#34:#45;//  $init$:(Lscala/concurrent/ThreadPoolRunner;)V
const #47 = Method	#44.#46;	//  scala/concurrent/ThreadPoolRunner$class.$init$:(Lscala/concurrent/ThreadPoolRunner;)V
const #48 = Asciz	scala/actors/scheduler/ExecutorScheduler$class;
const #49 = class	#48;	//  scala/actors/scheduler/ExecutorScheduler$class
const #50 = Asciz	(Lscala/actors/scheduler/ExecutorScheduler;)V;
const #51 = NameAndType	#34:#50;//  $init$:(Lscala/actors/scheduler/ExecutorScheduler;)V
const #52 = Method	#49.#51;	//  scala/actors/scheduler/ExecutorScheduler$class.$init$:(Lscala/actors/scheduler/ExecutorScheduler;)V
const #53 = Asciz	scala/actors/scheduler/TerminationMonitor$class;
const #54 = class	#53;	//  scala/actors/scheduler/TerminationMonitor$class
const #55 = Asciz	(Lscala/actors/scheduler/TerminationMonitor;)V;
const #56 = NameAndType	#34:#55;//  $init$:(Lscala/actors/scheduler/TerminationMonitor;)V
const #57 = Method	#54.#56;	//  scala/actors/scheduler/TerminationMonitor$class.$init$:(Lscala/actors/scheduler/TerminationMonitor;)V
const #58 = Asciz	setDaemon;
const #59 = Asciz	(Z)V;
const #60 = NameAndType	#58:#59;//  setDaemon:(Z)V
const #61 = Method	#20.#60;	//  scala/actors/scheduler/ThreadPoolScheduler.setDaemon:(Z)V
const #62 = NameAndType	#10:#4;//  terminating:Z
const #63 = Field	#20.#62;	//  scala/actors/scheduler/ThreadPoolScheduler.terminating:Z
const #64 = int	10;
const #65 = NameAndType	#9:#8;//  CHECK_FREQ:I
const #66 = Field	#20.#65;	//  scala/actors/scheduler/ThreadPoolScheduler.CHECK_FREQ:I
const #67 = Asciz	this;
const #68 = Asciz	Lscala/actors/scheduler/ThreadPoolScheduler;;
const #69 = Asciz	LocalVariableTable;
const #70 = Asciz	liftedTree1$1;
const #71 = Asciz	()I;
const #72 = NameAndType	#9:#71;//  CHECK_FREQ:()I
const #73 = Method	#20.#72;	//  scala/actors/scheduler/ThreadPoolScheduler.CHECK_FREQ:()I
const #74 = Asciz	wait;
const #75 = Asciz	(J)V;
const #76 = NameAndType	#74:#75;//  wait:(J)V
const #77 = Method	#20.#76;	//  scala/actors/scheduler/ThreadPoolScheduler.wait:(J)V
const #78 = Asciz	java/lang/InterruptedException;
const #79 = class	#78;	//  java/lang/InterruptedException
const #80 = Asciz	()Ljava/util/concurrent/ExecutorService;;
const #81 = Asciz	()Ljava/util/concurrent/ThreadPoolExecutor;;
const #82 = NameAndType	#13:#81;//  executor:()Ljava/util/concurrent/ThreadPoolExecutor;
const #83 = Method	#20.#82;	//  scala/actors/scheduler/ThreadPoolScheduler.executor:()Ljava/util/concurrent/ThreadPoolExecutor;
const #84 = Asciz	functionAsTask;
const #85 = Asciz	(Lscala/Function0;)Ljava/lang/Object;;
const #86 = Asciz	scala/concurrent/ThreadPoolRunner;
const #87 = class	#86;	//  scala/concurrent/ThreadPoolRunner
const #88 = Asciz	(Lscala/Function0;)Ljava/util/concurrent/Callable;;
const #89 = NameAndType	#84:#88;//  functionAsTask:(Lscala/Function0;)Ljava/util/concurrent/Callable;
const #90 = InterfaceMethod	#87.#89;	//  scala/concurrent/ThreadPoolRunner.functionAsTask:(Lscala/Function0;)Ljava/util/concurrent/Callable;
const #91 = Asciz	fun;
const #92 = Asciz	Lscala/Function0;;
const #93 = Asciz	futureAsFunction;
const #94 = Asciz	(Ljava/lang/Object;)Lscala/Function0;;
const #95 = Asciz	java/util/concurrent/Future;
const #96 = class	#95;	//  java/util/concurrent/Future
const #97 = Asciz	(Ljava/util/concurrent/Future;)Lscala/Function0;;
const #98 = NameAndType	#93:#97;//  futureAsFunction:(Ljava/util/concurrent/Future;)Lscala/Function0;
const #99 = InterfaceMethod	#87.#98;	//  scala/concurrent/ThreadPoolRunner.futureAsFunction:(Ljava/util/concurrent/Future;)Lscala/Function0;
const #100 = Asciz	x;
const #101 = Asciz	Ljava/lang/Object;;
const #102 = Asciz	submit;
const #103 = Asciz	(Ljava/lang/Object;)Ljava/lang/Object;;
const #104 = Asciz	java/util/concurrent/Callable;
const #105 = class	#104;	//  java/util/concurrent/Callable
const #106 = Asciz	(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;;
const #107 = NameAndType	#102:#106;//  submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
const #108 = InterfaceMethod	#87.#107;	//  scala/concurrent/ThreadPoolRunner.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
const #109 = Asciz	task;
const #110 = Asciz	execute;
const #111 = Asciz	(Ljava/lang/Object;)V;
const #112 = Asciz	(Ljava/util/concurrent/Callable;)V;
const #113 = NameAndType	#110:#112;//  execute:(Ljava/util/concurrent/Callable;)V
const #114 = InterfaceMethod	#87.#113;	//  scala/concurrent/ThreadPoolRunner.execute:(Ljava/util/concurrent/Callable;)V
const #115 = Asciz	shutdown;
const #116 = Asciz	terminating_$eq;
const #117 = NameAndType	#116:#59;//  terminating_$eq:(Z)V
const #118 = Method	#20.#117;	//  scala/actors/scheduler/ThreadPoolScheduler.terminating_$eq:(Z)V
const #119 = Asciz	run;
const #120 = NameAndType	#70:#29;//  liftedTree1$1:()V
const #121 = Method	#20.#120;	//  scala/actors/scheduler/ThreadPoolScheduler.liftedTree1$1:()V
const #122 = Asciz	()Z;
const #123 = NameAndType	#10:#122;//  terminating:()Z
const #124 = Method	#20.#123;	//  scala/actors/scheduler/ThreadPoolScheduler.terminating:()Z
const #125 = NameAndType	#12:#122;//  terminate:()Z
const #126 = Method	#20.#125;	//  scala/actors/scheduler/ThreadPoolScheduler.terminate:()Z
const #127 = Asciz	scala/actors/scheduler/TerminationMonitor;
const #128 = class	#127;	//  scala/actors/scheduler/TerminationMonitor
const #129 = Asciz	allTerminated;
const #130 = NameAndType	#129:#122;//  allTerminated:()Z
const #131 = InterfaceMethod	#128.#130;	//  scala/actors/scheduler/TerminationMonitor.allTerminated:()Z
const #132 = Asciz	scala/actors/scheduler/QuitException;
const #133 = class	#132;	//  scala/actors/scheduler/QuitException
const #134 = Method	#133.#30;	//  scala/actors/scheduler/QuitException."<init>":()V
const #135 = Asciz	gc;
const #136 = NameAndType	#135:#29;//  gc:()V
const #137 = InterfaceMethod	#128.#136;	//  scala/actors/scheduler/TerminationMonitor.gc:()V
const #138 = Asciz	scala/actors/Debug$;
const #139 = class	#138;	//  scala/actors/Debug$
const #140 = Asciz	MODULE$;
const #141 = Asciz	Lscala/actors/Debug$;;
const #142 = NameAndType	#140:#141;//  MODULE$:Lscala/actors/Debug$;
const #143 = Field	#139.#142;	//  scala/actors/Debug$.MODULE$:Lscala/actors/Debug$;
const #144 = Asciz	scala/runtime/StringAdd;
const #145 = class	#144;	//  scala/runtime/StringAdd
const #146 = NameAndType	#15:#111;//  "<init>":(Ljava/lang/Object;)V
const #147 = Method	#145.#146;	//  scala/runtime/StringAdd."<init>":(Ljava/lang/Object;)V
const #148 = Asciz	: initiating shutdown...;
const #149 = String	#148;	//  : initiating shutdown...
const #150 = Asciz	$plus;
const #151 = Asciz	(Ljava/lang/String;)Ljava/lang/String;;
const #152 = NameAndType	#150:#151;//  $plus:(Ljava/lang/String;)Ljava/lang/String;
const #153 = Method	#145.#152;	//  scala/runtime/StringAdd.$plus:(Ljava/lang/String;)Ljava/lang/String;
const #154 = Asciz	info;
const #155 = Asciz	(Ljava/lang/String;)V;
const #156 = NameAndType	#154:#155;//  info:(Ljava/lang/String;)V
const #157 = Method	#139.#156;	//  scala/actors/Debug$.info:(Ljava/lang/String;)V
const #158 = Asciz	scala/actors/scheduler/ExecutorScheduler;
const #159 = class	#158;	//  scala/actors/scheduler/ExecutorScheduler
const #160 = Asciz	onShutdown;
const #161 = NameAndType	#160:#29;//  onShutdown:()V
const #162 = InterfaceMethod	#159.#161;	//  scala/actors/scheduler/ExecutorScheduler.onShutdown:()V
const #163 = NameAndType	#15:#16;//  "<init>":(Ljava/util/concurrent/ThreadPoolExecutor;ZZ)V
const #164 = Method	#20.#163;	//  scala/actors/scheduler/ThreadPoolScheduler."<init>":(Ljava/util/concurrent/ThreadPoolExecutor;ZZ)V
const #165 = Asciz	d;
const #166 = Asciz	executor_$eq;
const #167 = Asciz	(Ljava/util/concurrent/ThreadPoolExecutor;)V;
const #168 = Asciz	printActorDump;
const #169 = NameAndType	#168:#35;//  printActorDump:(Lscala/actors/IScheduler;)V
const #170 = Method	#33.#169;	//  scala/actors/IScheduler$class.printActorDump:(Lscala/actors/IScheduler;)V
const #171 = Asciz	onLockup;
const #172 = Asciz	(ILscala/Function0;)V;
const #173 = Asciz	(Lscala/actors/IScheduler;ILscala/Function0;)V;
const #174 = NameAndType	#171:#173;//  onLockup:(Lscala/actors/IScheduler;ILscala/Function0;)V
const #175 = Method	#33.#174;	//  scala/actors/IScheduler$class.onLockup:(Lscala/actors/IScheduler;ILscala/Function0;)V
const #176 = Asciz	millis;
const #177 = Asciz	handler;
const #178 = Asciz	(Lscala/Function0;)V;
const #179 = Asciz	(Lscala/actors/IScheduler;Lscala/Function0;)V;
const #180 = NameAndType	#171:#179;//  onLockup:(Lscala/actors/IScheduler;Lscala/Function0;)V
const #181 = Method	#33.#180;	//  scala/actors/IScheduler$class.onLockup:(Lscala/actors/IScheduler;Lscala/Function0;)V
const #182 = Asciz	tick;
const #183 = Asciz	(Lscala/actors/Actor;)V;
const #184 = Asciz	(Lscala/actors/IScheduler;Lscala/actors/Actor;)V;
const #185 = NameAndType	#182:#184;//  tick:(Lscala/actors/IScheduler;Lscala/actors/Actor;)V
const #186 = Method	#33.#185;	//  scala/actors/IScheduler$class.tick:(Lscala/actors/IScheduler;Lscala/actors/Actor;)V
const #187 = Asciz	a;
const #188 = Asciz	Lscala/actors/Actor;;
const #189 = Asciz	executeFromActor;
const #190 = Asciz	(Ljava/lang/Runnable;)V;
const #191 = Asciz	(Lscala/actors/IScheduler;Ljava/lang/Runnable;)V;
const #192 = NameAndType	#189:#191;//  executeFromActor:(Lscala/actors/IScheduler;Ljava/lang/Runnable;)V
const #193 = Method	#33.#192;	//  scala/actors/IScheduler$class.executeFromActor:(Lscala/actors/IScheduler;Ljava/lang/Runnable;)V
const #194 = Asciz	Ljava/lang/Runnable;;
const #195 = Asciz	tryCatch;
const #196 = Asciz	(Lscala/Function0;)Lscala/Either;;
const #197 = Asciz	(Lscala/concurrent/TaskRunner;Lscala/Function0;)Lscala/Either;;
const #198 = NameAndType	#195:#197;//  tryCatch:(Lscala/concurrent/TaskRunner;Lscala/Function0;)Lscala/Either;
const #199 = Method	#39.#198;	//  scala/concurrent/TaskRunner$class.tryCatch:(Lscala/concurrent/TaskRunner;Lscala/Function0;)Lscala/Either;
const #200 = Asciz	body;
const #201 = Asciz	managedBlock;
const #202 = Asciz	(Lscala/concurrent/ManagedBlocker;)V;
const #203 = Asciz	(Lscala/concurrent/ThreadPoolRunner;Lscala/concurrent/ManagedBlocker;)V;
const #204 = NameAndType	#201:#203;//  managedBlock:(Lscala/concurrent/ThreadPoolRunner;Lscala/concurrent/ManagedBlocker;)V
const #205 = Method	#44.#204;	//  scala/concurrent/ThreadPoolRunner$class.managedBlock:(Lscala/concurrent/ThreadPoolRunner;Lscala/concurrent/ManagedBlocker;)V
const #206 = Asciz	blocker;
const #207 = Asciz	Lscala/concurrent/ManagedBlocker;;
const #208 = Asciz	(Lscala/concurrent/ThreadPoolRunner;Ljava/util/concurrent/Callable;)V;
const #209 = NameAndType	#110:#208;//  execute:(Lscala/concurrent/ThreadPoolRunner;Ljava/util/concurrent/Callable;)V
const #210 = Method	#44.#209;	//  scala/concurrent/ThreadPoolRunner$class.execute:(Lscala/concurrent/ThreadPoolRunner;Ljava/util/concurrent/Callable;)V
const #211 = Asciz	Ljava/util/concurrent/Callable;;
const #212 = Asciz	(Lscala/concurrent/ThreadPoolRunner;Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;;
const #213 = NameAndType	#102:#212;//  submit:(Lscala/concurrent/ThreadPoolRunner;Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
const #214 = Method	#44.#213;	//  scala/concurrent/ThreadPoolRunner$class.submit:(Lscala/concurrent/ThreadPoolRunner;Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
const #215 = Asciz	(Lscala/concurrent/ThreadPoolRunner;Ljava/util/concurrent/Future;)Lscala/Function0;;
const #216 = NameAndType	#93:#215;//  futureAsFunction:(Lscala/concurrent/ThreadPoolRunner;Ljava/util/concurrent/Future;)Lscala/Function0;
const #217 = Method	#44.#216;	//  scala/concurrent/ThreadPoolRunner$class.futureAsFunction:(Lscala/concurrent/ThreadPoolRunner;Ljava/util/concurrent/Future;)Lscala/Function0;
const #218 = Asciz	Ljava/util/concurrent/Future;;
const #219 = Asciz	(Lscala/concurrent/ThreadPoolRunner;Lscala/Function0;)Ljava/util/concurrent/Callable;;
const #220 = NameAndType	#84:#219;//  functionAsTask:(Lscala/concurrent/ThreadPoolRunner;Lscala/Function0;)Ljava/util/concurrent/Callable;
const #221 = Method	#44.#220;	//  scala/concurrent/ThreadPoolRunner$class.functionAsTask:(Lscala/concurrent/ThreadPoolRunner;Lscala/Function0;)Ljava/util/concurrent/Callable;
const #222 = Asciz	isActive;
const #223 = Asciz	(Lscala/actors/scheduler/ExecutorScheduler;)Z;
const #224 = NameAndType	#222:#223;//  isActive:(Lscala/actors/scheduler/ExecutorScheduler;)Z
const #225 = Method	#49.#224;	//  scala/actors/scheduler/ExecutorScheduler$class.isActive:(Lscala/actors/scheduler/ExecutorScheduler;)Z
const #226 = NameAndType	#160:#50;//  onShutdown:(Lscala/actors/scheduler/ExecutorScheduler;)V
const #227 = Method	#49.#226;	//  scala/actors/scheduler/ExecutorScheduler$class.onShutdown:(Lscala/actors/scheduler/ExecutorScheduler;)V
const #228 = Asciz	(Lscala/actors/scheduler/ExecutorScheduler;Lscala/Function0;)V;
const #229 = NameAndType	#110:#228;//  execute:(Lscala/actors/scheduler/ExecutorScheduler;Lscala/Function0;)V
const #230 = Method	#49.#229;	//  scala/actors/scheduler/ExecutorScheduler$class.execute:(Lscala/actors/scheduler/ExecutorScheduler;Lscala/Function0;)V
const #231 = Asciz	(Lscala/actors/scheduler/ExecutorScheduler;Ljava/lang/Runnable;)V;
const #232 = NameAndType	#110:#231;//  execute:(Lscala/actors/scheduler/ExecutorScheduler;Ljava/lang/Runnable;)V
const #233 = Method	#49.#232;	//  scala/actors/scheduler/ExecutorScheduler$class.execute:(Lscala/actors/scheduler/ExecutorScheduler;Ljava/lang/Runnable;)V
const #234 = NameAndType	#135:#55;//  gc:(Lscala/actors/scheduler/TerminationMonitor;)V
const #235 = Method	#54.#234;	//  scala/actors/scheduler/TerminationMonitor$class.gc:(Lscala/actors/scheduler/TerminationMonitor;)V
const #236 = Asciz	(Lscala/actors/scheduler/TerminationMonitor;)Z;
const #237 = NameAndType	#129:#236;//  allTerminated:(Lscala/actors/scheduler/TerminationMonitor;)Z
const #238 = Method	#54.#237;	//  scala/actors/scheduler/TerminationMonitor$class.allTerminated:(Lscala/actors/scheduler/TerminationMonitor;)Z
const #239 = Asciz	terminated;
const #240 = Asciz	(Lscala/actors/Reactor;)V;
const #241 = Asciz	(Lscala/actors/scheduler/TerminationMonitor;Lscala/actors/Reactor;)V;
const #242 = NameAndType	#239:#241;//  terminated:(Lscala/actors/scheduler/TerminationMonitor;Lscala/actors/Reactor;)V
const #243 = Method	#54.#242;	//  scala/actors/scheduler/TerminationMonitor$class.terminated:(Lscala/actors/scheduler/TerminationMonitor;Lscala/actors/Reactor;)V
const #244 = Asciz	Lscala/actors/Reactor;;
const #245 = Asciz	onTerminate;
const #246 = Asciz	(Lscala/actors/Reactor;Lscala/Function0;)V;
const #247 = Asciz	(Lscala/actors/scheduler/TerminationMonitor;Lscala/actors/Reactor;Lscala/Function0;)V;
const #248 = NameAndType	#245:#247;//  onTerminate:(Lscala/actors/scheduler/TerminationMonitor;Lscala/actors/Reactor;Lscala/Function0;)V
const #249 = Method	#54.#248;	//  scala/actors/scheduler/TerminationMonitor$class.onTerminate:(Lscala/actors/scheduler/TerminationMonitor;Lscala/actors/Reactor;Lscala/Function0;)V
const #250 = Asciz	f;
const #251 = Asciz	newActor;
const #252 = NameAndType	#251:#241;//  newActor:(Lscala/actors/scheduler/TerminationMonitor;Lscala/actors/Reactor;)V
const #253 = Method	#54.#252;	//  scala/actors/scheduler/TerminationMonitor$class.newActor:(Lscala/actors/scheduler/TerminationMonitor;Lscala/actors/Reactor;)V
const #254 = Asciz	scala$actors$scheduler$TerminationMonitor$_setter_$terminationHandlers_$eq;
const #255 = Asciz	(Lscala/collection/mutable/HashMap;)V;
const #256 = NameAndType	#5:#6;//  terminationHandlers:Lscala/collection/mutable/HashMap;
const #257 = Field	#20.#256;	//  scala/actors/scheduler/ThreadPoolScheduler.terminationHandlers:Lscala/collection/mutable/HashMap;
const #258 = Asciz	scala$actors$scheduler$TerminationMonitor$$started_$eq;
const #259 = NameAndType	#3:#4;//  scala$actors$scheduler$TerminationMonitor$$started:Z
const #260 = Field	#20.#259;	//  scala/actors/scheduler/ThreadPoolScheduler.scala$actors$scheduler$TerminationMonitor$$started:Z
const #261 = Asciz	()Lscala/collection/mutable/HashMap;;
const #262 = Asciz	activeActors_$eq;
const #263 = Asciz	(I)V;
const #264 = NameAndType	#7:#8;//  activeActors:I
const #265 = Field	#20.#264;	//  scala/actors/scheduler/ThreadPoolScheduler.activeActors:I
const #266 = Asciz	ScalaSig;
const #267 = Asciz	scala/ScalaObject;
const #268 = class	#267;	//  scala/ScalaObject

{
public scala.actors.scheduler.ThreadPoolScheduler(java.util.concurrent.ThreadPoolExecutor, boolean, boolean);
  Code:
   Stack=2, Locals=4, Args_size=4
   0:	aload_0
   1:	aload_1
   2:	putfield	#22; //Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
   5:	aload_0
   6:	iload_2
   7:	putfield	#24; //Field terminate:Z
   10:	aload_0
   11:	iload_3
   12:	putfield	#26; //Field daemon:Z
   15:	aload_0
   16:	invokespecial	#31; //Method java/lang/Thread."<init>":()V
   19:	aload_0
   20:	invokestatic	#37; //Method scala/actors/IScheduler$class.$init$:(Lscala/actors/IScheduler;)V
   23:	aload_0
   24:	invokestatic	#42; //Method scala/concurrent/TaskRunner$class.$init$:(Lscala/concurrent/TaskRunner;)V
   27:	aload_0
   28:	invokestatic	#47; //Method scala/concurrent/ThreadPoolRunner$class.$init$:(Lscala/concurrent/ThreadPoolRunner;)V
   31:	aload_0
   32:	invokestatic	#52; //Method scala/actors/scheduler/ExecutorScheduler$class.$init$:(Lscala/actors/scheduler/ExecutorScheduler;)V
   35:	aload_0
   36:	invokestatic	#57; //Method scala/actors/scheduler/TerminationMonitor$class.$init$:(Lscala/actors/scheduler/TerminationMonitor;)V
   39:	aload_0
   40:	iload_3
   41:	invokevirtual	#61; //Method setDaemon:(Z)V
   44:	aload_0
   45:	iconst_0
   46:	putfield	#63; //Field terminating:Z
   49:	aload_0
   50:	ldc	#64; //int 10
   52:	putfield	#66; //Field CHECK_FREQ:I
   55:	return
  LineNumberTable: 
   line 31: 0
   line 32: 5
   line 33: 10
   line 31: 15
   line 36: 39
   line 38: 44
   line 39: 49

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      56      0    this       Lscala/actors/scheduler/ThreadPoolScheduler;
   0      56      1    executor       Ljava/util/concurrent/ThreadPoolExecutor;
   0      56      2    terminate       Z
   0      56      3    daemon       Z


public java.util.concurrent.ExecutorService executor();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#83; //Method executor:()Ljava/util/concurrent/ThreadPoolExecutor;
   4:	areturn
  LineNumberTable: 
   line 31: 0


public java.lang.Object functionAsTask(scala.Function0);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokeinterface	#90,  2; //InterfaceMethod scala/concurrent/ThreadPoolRunner.functionAsTask:(Lscala/Function0;)Ljava/util/concurrent/Callable;
   7:	areturn
  LineNumberTable: 
   line 31: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      8      0    this       Lscala/actors/scheduler/ThreadPoolScheduler;
   0      8      1    fun       Lscala/Function0;


public scala.Function0 futureAsFunction(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	checkcast	#96; //class java/util/concurrent/Future
   5:	invokeinterface	#99,  2; //InterfaceMethod scala/concurrent/ThreadPoolRunner.futureAsFunction:(Ljava/util/concurrent/Future;)Lscala/Function0;
   10:	areturn
  LineNumberTable: 
   line 31: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      11      0    this       Lscala/actors/scheduler/ThreadPoolScheduler;
   0      11      1    x       Ljava/lang/Object;


public java.lang.Object submit(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	checkcast	#105; //class java/util/concurrent/Callable
   5:	invokeinterface	#108,  2; //InterfaceMethod scala/concurrent/ThreadPoolRunner.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
   10:	areturn
  LineNumberTable: 
   line 31: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      11      0    this       Lscala/actors/scheduler/ThreadPoolScheduler;
   0      11      1    task       Ljava/lang/Object;


public void execute(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	checkcast	#105; //class java/util/concurrent/Callable
   5:	invokeinterface	#114,  2; //InterfaceMethod scala/concurrent/ThreadPoolRunner.execute:(Ljava/util/concurrent/Callable;)V
   10:	return
  LineNumberTable: 
   line 31: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      11      0    this       Lscala/actors/scheduler/ThreadPoolScheduler;
   0      11      1    task       Ljava/lang/Object;


public void shutdown();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	dup
   2:	pop
   3:	monitorenter
   4:	aload_0
   5:	iconst_1
   6:	invokespecial	#118; //Method terminating_$eq:(Z)V
   9:	aload_0
   10:	monitorexit
   11:	return
   12:	aload_0
   13:	monitorexit
   14:	athrow
  Exception table:
   from   to  target type
     4    11    12   any
  LineNumberTable: 
   line 77: 0
   line 78: 4
   line 77: 10


public void run();
  Code:
   Stack=4, Locals=1, Args_size=1
   0:	aload_0
   1:	dup
   2:	pop
   3:	monitorenter
   4:	aload_0
   5:	invokespecial	#121; //Method liftedTree1$1:()V
   8:	aload_0
   9:	invokespecial	#124; //Method terminating:()Z
   12:	ifne	31
   15:	aload_0
   16:	invokevirtual	#126; //Method terminate:()Z
   19:	ifeq	39
   22:	aload_0
   23:	invokeinterface	#131,  1; //InterfaceMethod scala/actors/scheduler/TerminationMonitor.allTerminated:()Z
   28:	ifeq	39
   31:	new	#133; //class scala/actors/scheduler/QuitException
   34:	dup
   35:	invokespecial	#134; //Method scala/actors/scheduler/QuitException."<init>":()V
   38:	athrow
   39:	aload_0
   40:	invokeinterface	#137,  1; //InterfaceMethod scala/actors/scheduler/TerminationMonitor.gc:()V
   45:	aload_0
   46:	monitorexit
   47:	goto	0
   50:	aload_0
   51:	monitorexit
   52:	athrow
   53:	pop
   54:	getstatic	#143; //Field scala/actors/Debug$.MODULE$:Lscala/actors/Debug$;
   57:	new	#145; //class scala/runtime/StringAdd
   60:	dup
   61:	aload_0
   62:	invokespecial	#147; //Method scala/runtime/StringAdd."<init>":(Ljava/lang/Object;)V
   65:	ldc	#149; //String : initiating shutdown...
   67:	invokevirtual	#153; //Method scala/runtime/StringAdd.$plus:(Ljava/lang/String;)Ljava/lang/String;
   70:	invokevirtual	#157; //Method scala/actors/Debug$.info:(Ljava/lang/String;)V
   73:	aload_0
   74:	invokeinterface	#162,  1; //InterfaceMethod scala/actors/scheduler/ExecutorScheduler.onShutdown:()V
   79:	return
  Exception table:
   from   to  target type
     4    50    50   any
     0    53    53   Class scala/actors/scheduler/QuitException

  LineNumberTable: 
   line 53: 0
   line 54: 4
   line 60: 8
   line 61: 31
   line 63: 39
   line 53: 46
   line 68: 54
   line 70: 73
   line 51: 79


public scala.actors.scheduler.ThreadPoolScheduler(boolean);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	aload_0
   1:	aconst_null
   2:	iconst_1
   3:	iload_1
   4:	invokespecial	#164; //Method "<init>":(Ljava/util/concurrent/ThreadPoolExecutor;ZZ)V
   7:	return
  LineNumberTable: 
   line 47: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      8      0    this       Lscala/actors/scheduler/ThreadPoolScheduler;
   0      8      1    d       Z


public int CHECK_FREQ();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#66; //Field CHECK_FREQ:I
   4:	ireturn
  LineNumberTable: 
   line 39: 0


public boolean daemon();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#26; //Field daemon:Z
   4:	ireturn
  LineNumberTable: 
   line 33: 0


public boolean terminate();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#24; //Field terminate:Z
   4:	ireturn
  LineNumberTable: 
   line 32: 0


public void executor_$eq(java.util.concurrent.ThreadPoolExecutor);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	putfield	#22; //Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
   5:	return
  LineNumberTable: 
   line 31: 0


public java.util.concurrent.ThreadPoolExecutor executor();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#22; //Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
   4:	areturn
  LineNumberTable: 
   line 31: 0


public void printActorDump();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#170; //Method scala/actors/IScheduler$class.printActorDump:(Lscala/actors/IScheduler;)V
   4:	return
  LineNumberTable: 
   line 31: 0


public void onLockup(int, scala.Function0);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	iload_1
   2:	aload_2
   3:	invokestatic	#175; //Method scala/actors/IScheduler$class.onLockup:(Lscala/actors/IScheduler;ILscala/Function0;)V
   6:	return
  LineNumberTable: 
   line 31: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/actors/scheduler/ThreadPoolScheduler;
   0      7      1    millis       I
   0      7      2    handler       Lscala/Function0;


public void onLockup(scala.Function0);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#181; //Method scala/actors/IScheduler$class.onLockup:(Lscala/actors/IScheduler;Lscala/Function0;)V
   5:	return
  LineNumberTable: 
   line 31: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/scheduler/ThreadPoolScheduler;
   0      6      1    handler       Lscala/Function0;


public void tick(scala.actors.Actor);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#186; //Method scala/actors/IScheduler$class.tick:(Lscala/actors/IScheduler;Lscala/actors/Actor;)V
   5:	return
  LineNumberTable: 
   line 31: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/scheduler/ThreadPoolScheduler;
   0      6      1    a       Lscala/actors/Actor;


public void executeFromActor(java.lang.Runnable);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#193; //Method scala/actors/IScheduler$class.executeFromActor:(Lscala/actors/IScheduler;Ljava/lang/Runnable;)V
   5:	return
  LineNumberTable: 
   line 31: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/scheduler/ThreadPoolScheduler;
   0      6      1    task       Ljava/lang/Runnable;


public scala.Either tryCatch(scala.Function0);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#199; //Method scala/concurrent/TaskRunner$class.tryCatch:(Lscala/concurrent/TaskRunner;Lscala/Function0;)Lscala/Either;
   5:	areturn
  LineNumberTable: 
   line 31: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/scheduler/ThreadPoolScheduler;
   0      6      1    body       Lscala/Function0;


public void managedBlock(scala.concurrent.ManagedBlocker);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#205; //Method scala/concurrent/ThreadPoolRunner$class.managedBlock:(Lscala/concurrent/ThreadPoolRunner;Lscala/concurrent/ManagedBlocker;)V
   5:	return
  LineNumberTable: 
   line 31: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/scheduler/ThreadPoolScheduler;
   0      6      1    blocker       Lscala/concurrent/ManagedBlocker;


public void execute(java.util.concurrent.Callable);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#210; //Method scala/concurrent/ThreadPoolRunner$class.execute:(Lscala/concurrent/ThreadPoolRunner;Ljava/util/concurrent/Callable;)V
   5:	return
  LineNumberTable: 
   line 31: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/scheduler/ThreadPoolScheduler;
   0      6      1    task       Ljava/util/concurrent/Callable;


public java.util.concurrent.Future submit(java.util.concurrent.Callable);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#214; //Method scala/concurrent/ThreadPoolRunner$class.submit:(Lscala/concurrent/ThreadPoolRunner;Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
   5:	areturn
  LineNumberTable: 
   line 31: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/scheduler/ThreadPoolScheduler;
   0      6      1    task       Ljava/util/concurrent/Callable;


public scala.Function0 futureAsFunction(java.util.concurrent.Future);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#217; //Method scala/concurrent/ThreadPoolRunner$class.futureAsFunction:(Lscala/concurrent/ThreadPoolRunner;Ljava/util/concurrent/Future;)Lscala/Function0;
   5:	areturn
  LineNumberTable: 
   line 31: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/scheduler/ThreadPoolScheduler;
   0      6      1    x       Ljava/util/concurrent/Future;


public java.util.concurrent.Callable functionAsTask(scala.Function0);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#221; //Method scala/concurrent/ThreadPoolRunner$class.functionAsTask:(Lscala/concurrent/ThreadPoolRunner;Lscala/Function0;)Ljava/util/concurrent/Callable;
   5:	areturn
  LineNumberTable: 
   line 31: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/scheduler/ThreadPoolScheduler;
   0      6      1    fun       Lscala/Function0;


public boolean isActive();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#225; //Method scala/actors/scheduler/ExecutorScheduler$class.isActive:(Lscala/actors/scheduler/ExecutorScheduler;)Z
   4:	ireturn
  LineNumberTable: 
   line 31: 0


public void onShutdown();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#227; //Method scala/actors/scheduler/ExecutorScheduler$class.onShutdown:(Lscala/actors/scheduler/ExecutorScheduler;)V
   4:	return
  LineNumberTable: 
   line 31: 0


public void execute(scala.Function0);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#230; //Method scala/actors/scheduler/ExecutorScheduler$class.execute:(Lscala/actors/scheduler/ExecutorScheduler;Lscala/Function0;)V
   5:	return
  LineNumberTable: 
   line 31: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/scheduler/ThreadPoolScheduler;
   0      6      1    fun       Lscala/Function0;


public void execute(java.lang.Runnable);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#233; //Method scala/actors/scheduler/ExecutorScheduler$class.execute:(Lscala/actors/scheduler/ExecutorScheduler;Ljava/lang/Runnable;)V
   5:	return
  LineNumberTable: 
   line 31: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/scheduler/ThreadPoolScheduler;
   0      6      1    task       Ljava/lang/Runnable;


public void gc();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#235; //Method scala/actors/scheduler/TerminationMonitor$class.gc:(Lscala/actors/scheduler/TerminationMonitor;)V
   4:	return
  LineNumberTable: 
   line 31: 0


public boolean allTerminated();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#238; //Method scala/actors/scheduler/TerminationMonitor$class.allTerminated:(Lscala/actors/scheduler/TerminationMonitor;)Z
   4:	ireturn
  LineNumberTable: 
   line 31: 0


public void terminated(scala.actors.Reactor);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#243; //Method scala/actors/scheduler/TerminationMonitor$class.terminated:(Lscala/actors/scheduler/TerminationMonitor;Lscala/actors/Reactor;)V
   5:	return
  LineNumberTable: 
   line 31: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/scheduler/ThreadPoolScheduler;
   0      6      1    a       Lscala/actors/Reactor;


public void onTerminate(scala.actors.Reactor, scala.Function0);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#249; //Method scala/actors/scheduler/TerminationMonitor$class.onTerminate:(Lscala/actors/scheduler/TerminationMonitor;Lscala/actors/Reactor;Lscala/Function0;)V
   6:	return
  LineNumberTable: 
   line 31: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/actors/scheduler/ThreadPoolScheduler;
   0      7      1    a       Lscala/actors/Reactor;
   0      7      2    f       Lscala/Function0;


public void newActor(scala.actors.Reactor);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#253; //Method scala/actors/scheduler/TerminationMonitor$class.newActor:(Lscala/actors/scheduler/TerminationMonitor;Lscala/actors/Reactor;)V
   5:	return
  LineNumberTable: 
   line 31: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/scheduler/ThreadPoolScheduler;
   0      6      1    a       Lscala/actors/Reactor;


public void scala$actors$scheduler$TerminationMonitor$_setter_$terminationHandlers_$eq(scala.collection.mutable.HashMap);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	putfield	#257; //Field terminationHandlers:Lscala/collection/mutable/HashMap;
   5:	return
  LineNumberTable: 
   line 31: 0


public final void scala$actors$scheduler$TerminationMonitor$$started_$eq(boolean);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	putfield	#260; //Field scala$actors$scheduler$TerminationMonitor$$started:Z
   5:	return
  LineNumberTable: 
   line 31: 0


public final boolean scala$actors$scheduler$TerminationMonitor$$started();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#260; //Field scala$actors$scheduler$TerminationMonitor$$started:Z
   4:	ireturn
  LineNumberTable: 
   line 31: 0


public scala.collection.mutable.HashMap terminationHandlers();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#257; //Field terminationHandlers:Lscala/collection/mutable/HashMap;
   4:	areturn
  LineNumberTable: 
   line 31: 0


public void activeActors_$eq(int);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	putfield	#265; //Field activeActors:I
   5:	return
  LineNumberTable: 
   line 31: 0


public int activeActors();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#265; //Field activeActors:I
   4:	ireturn
  LineNumberTable: 
   line 31: 0


}

