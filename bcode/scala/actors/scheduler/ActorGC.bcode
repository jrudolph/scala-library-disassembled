Compiled from "ActorGC.scala"
public interface scala.actors.scheduler.ActorGC extends scala.actors.scheduler.TerminationMonitor,scala.ScalaObject
  SourceFile: "ActorGC.scala"
  ScalaSig: length = 0x3
   05 00 00 
  RuntimeVisibleAnnotations: length = 0xB
   00 01 00 1E 00 01 00 1F 73 00 20 
  InnerClass: 
   public final $anonfun$terminated$1=class scala/actors/scheduler/ActorGC$$anonfun$terminated$1 of class scala/actors/scheduler/ActorGC
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	ActorGC.scala;
Asciz	scala$actors$scheduler$ActorGC$_setter_$scala$actors$scheduler$ActorGC$$refQ_$eq;
Asciz	(Ljava/lang/ref/ReferenceQueue;)V;
Asciz	scala$actors$scheduler$ActorGC$_setter_$scala$actors$scheduler$ActorGC$$refSet_$eq;
Asciz	(Lscala/collection/mutable/HashSet;)V;
Asciz	scala$actors$scheduler$ActorGC$$super$terminated;
Asciz	(Lscala/actors/Reactor;)V;
Asciz	scala$actors$scheduler$ActorGC$$refQ;
Asciz	()Ljava/lang/ref/ReferenceQueue;;
Asciz	scala$actors$scheduler$ActorGC$$refSet;
Asciz	()Lscala/collection/mutable/HashSet;;
Asciz	newActor;
Asciz	(Lscala/actors/Reactor<*>;)V;
Asciz	Signature;
Asciz	gc;
Asciz	()V;
Asciz	status;
Asciz	allActorsTerminated;
Asciz	()Z;
Asciz	onTerminate;
Asciz	(Lscala/actors/Reactor;Lscala/Function0;)V;
Asciz	(Lscala/actors/Reactor<*>;Lscala/Function0<Ljava/lang/Object;>;)V;
Asciz	terminated;
Asciz	getPendingCount;
Asciz	()I;
Asciz	setPendingCount;
Asciz	(I)V;
Asciz	ScalaSig;
Asciz	Lscala/reflect/ScalaSignature;;
Asciz	bytes;
Asciz	a!C\tCAz\t5\r^8sS!aM.3vY(BA\t7\r^8sg*\tq!AtGdm\tQ!C\tAi9\tA\1oO*\tq\"kCZBA\t\ry%M[3diB1F%QC)X.8bi&|g.T8oSR|'15\ta!\r\tY1kY1mC>'.Z2uY\"!N\5uIQ\tQ=%qD+:LGC\"\tI\tI,g-UGAAeJR!A\nI,g-)K\tq!+4fet7-Z)vKV,C/\tYC&D\tiC!AqC\mZ3\n=$A+sC\W\r*fC$xN[AaA\r!!:fMFb%I!Ne47+;Y2a?A$BA;iW^1cYT!a\r|G\3di&|g.>q\t9*Y:i'$GA E!\r!IQBU3gKJ,gnY3\r#E\t#\t!B\n\tAHIANe47+;!#\tI&1J>$.8hi\"O!qWm^!di>HCAPF\n1*\t\"*\t#bAA4d!\"H/;vg\"1aC!\t]1#7m$xN]:UKJlN\1uK,\t/eK!A\t{w\3b]\")AC!;YqN+fe6Lg.;f)\tqF\r?\"1mCAA\t/\tlBA2!a$-8b[t\")\I\"4\t:A;fe6Lg.;fIRQ!\r!U!\tB6,GU3oI&twmQ8v]R,\t/5L!A%sGqA!]g$+8eS:<7i\;oiRQDg>\r\G:$\"C;I<yAX]3sIQ,'/\5oCR,G\ro\")aS%a\r\nurlhC>\t\tA=qXMZ5oK6,g MCA\tyHAJ'DW\rZ;mKJ;
Asciz	RuntimeVisibleAnnotations;
Asciz	InnerClasses;
Asciz	scala/actors/scheduler/ActorGC$$anonfun$terminated$1;
class	scala/actors/scheduler/ActorGC$$anonfun$terminated$1
Asciz	scala/actors/scheduler/ActorGC;
class	scala/actors/scheduler/ActorGC
Asciz	$anonfun$terminated$1;
Asciz	java/lang/Object;
class	java/lang/Object
Asciz	scala/actors/scheduler/TerminationMonitor;
class	scala/actors/scheduler/TerminationMonitor
Asciz	scala/ScalaObject;
class	scala/ScalaObject

{
public abstract void scala$actors$scheduler$ActorGC$_setter_$scala$actors$scheduler$ActorGC$$refQ_$eq(java.lang.ref.ReferenceQueue);
  Signature: (Ljava/lang/ref/ReferenceQueue;)V

public abstract void scala$actors$scheduler$ActorGC$_setter_$scala$actors$scheduler$ActorGC$$refSet_$eq(scala.collection.mutable.HashSet);
  Signature: (Lscala/collection/mutable/HashSet;)V

public abstract void scala$actors$scheduler$ActorGC$$super$terminated(scala.actors.Reactor);
  Signature: (Lscala/actors/Reactor;)V

public abstract java.lang.ref.ReferenceQueue scala$actors$scheduler$ActorGC$$refQ();
  Signature: ()Ljava/lang/ref/ReferenceQueue;

public abstract scala.collection.mutable.HashSet scala$actors$scheduler$ActorGC$$refSet();
  Signature: ()Lscala/collection/mutable/HashSet;

public abstract void newActor(scala.actors.Reactor);
  Signature: (Lscala/actors/Reactor;)V
  Signature: length = 0x2
   00 0E 

public abstract void gc();
  Signature: ()V

public abstract void status();
  Signature: ()V

public abstract boolean allActorsTerminated();
  Signature: ()Z

public abstract void onTerminate(scala.actors.Reactor, scala.Function0);
  Signature: (Lscala/actors/Reactor;Lscala/Function0;)V
  Signature: length = 0x2
   00 17 

public abstract void terminated(scala.actors.Reactor);
  Signature: (Lscala/actors/Reactor;)V
  Signature: length = 0x2
   00 0E 

public abstract int getPendingCount();
  Signature: ()I

public abstract void setPendingCount(int);
  Signature: (I)V

}

