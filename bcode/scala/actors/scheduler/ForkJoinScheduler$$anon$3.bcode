Compiled from "ForkJoinScheduler.scala"
public final class scala.actors.scheduler.ForkJoinScheduler$$anon$3 extends java.lang.Object implements scala.concurrent.forkjoin.ForkJoinPool$ManagedBlocker
  SourceFile: "ForkJoinScheduler.scala"
  Scala: length = 0x
   
  InnerClass: 
   public final #36= #10 of #35; //$anon$3=class scala/actors/scheduler/ForkJoinScheduler$$anon$3 of class scala/actors/scheduler/ForkJoinScheduler
   public abstract #41= #38 of #40; //ManagedBlocker=class scala/concurrent/forkjoin/ForkJoinPool$ManagedBlocker of class scala/concurrent/forkjoin/ForkJoinPool
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	ForkJoinScheduler.scala;
const #3 = Asciz	blocker$1;
const #4 = Asciz	Lscala/concurrent/ManagedBlocker;;
const #5 = Asciz	<init>;
const #6 = Asciz	(Lscala/actors/scheduler/ForkJoinScheduler;Lscala/concurrent/ManagedBlocker;)V;
const #7 = Asciz	Code;
const #8 = Asciz	LineNumberTable;
const #9 = Asciz	scala/actors/scheduler/ForkJoinScheduler$$anon$3;
const #10 = class	#9;	//  scala/actors/scheduler/ForkJoinScheduler$$anon$3
const #11 = NameAndType	#3:#4;//  blocker$1:Lscala/concurrent/ManagedBlocker;
const #12 = Field	#10.#11;	//  scala/actors/scheduler/ForkJoinScheduler$$anon$3.blocker$1:Lscala/concurrent/ManagedBlocker;
const #13 = Asciz	java/lang/Object;
const #14 = class	#13;	//  java/lang/Object
const #15 = Asciz	()V;
const #16 = NameAndType	#5:#15;//  "<init>":()V
const #17 = Method	#14.#16;	//  java/lang/Object."<init>":()V
const #18 = Asciz	this;
const #19 = Asciz	Lscala/actors/scheduler/ForkJoinScheduler$$anon$3;;
const #20 = Asciz	$outer;
const #21 = Asciz	Lscala/actors/scheduler/ForkJoinScheduler;;
const #22 = Asciz	LocalVariableTable;
const #23 = Asciz	isReleasable;
const #24 = Asciz	()Z;
const #25 = Asciz	scala/concurrent/ManagedBlocker;
const #26 = class	#25;	//  scala/concurrent/ManagedBlocker
const #27 = NameAndType	#23:#24;//  isReleasable:()Z
const #28 = InterfaceMethod	#26.#27;	//  scala/concurrent/ManagedBlocker.isReleasable:()Z
const #29 = Asciz	block;
const #30 = NameAndType	#29:#24;//  block:()Z
const #31 = InterfaceMethod	#26.#30;	//  scala/concurrent/ManagedBlocker.block:()Z
const #32 = Asciz	Scala;
const #33 = Asciz	InnerClasses;
const #34 = Asciz	scala/actors/scheduler/ForkJoinScheduler;
const #35 = class	#34;	//  scala/actors/scheduler/ForkJoinScheduler
const #36 = Asciz	$anon$3;
const #37 = Asciz	scala/concurrent/forkjoin/ForkJoinPool$ManagedBlocker;
const #38 = class	#37;	//  scala/concurrent/forkjoin/ForkJoinPool$ManagedBlocker
const #39 = Asciz	scala/concurrent/forkjoin/ForkJoinPool;
const #40 = class	#39;	//  scala/concurrent/forkjoin/ForkJoinPool
const #41 = Asciz	ManagedBlocker;

{
public scala.actors.scheduler.ForkJoinScheduler$$anon$3(scala.actors.scheduler.ForkJoinScheduler, scala.concurrent.ManagedBlocker);
  Code:
   Stack=2, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_2
   2:	putfield	#12; //Field blocker$1:Lscala/concurrent/ManagedBlocker;
   5:	aload_0
   6:	invokespecial	#17; //Method java/lang/Object."<init>":()V
   9:	return
  LineNumberTable: 
   line 136: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    this       Lscala/actors/scheduler/ForkJoinScheduler$$anon$3;
   0      10      1    $outer       Lscala/actors/scheduler/ForkJoinScheduler;


public boolean isReleasable();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#12; //Field blocker$1:Lscala/concurrent/ManagedBlocker;
   4:	invokeinterface	#28,  1; //InterfaceMethod scala/concurrent/ManagedBlocker.isReleasable:()Z
   9:	ireturn
  LineNumberTable: 
   line 138: 0


public boolean block();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#12; //Field blocker$1:Lscala/concurrent/ManagedBlocker;
   4:	invokeinterface	#31,  1; //InterfaceMethod scala/concurrent/ManagedBlocker.block:()Z
   9:	ireturn
  LineNumberTable: 
   line 137: 0


}

