Compiled from "DaemonScheduler.scala"
public final class scala.actors.scheduler.DaemonScheduler$ extends java.lang.Object implements scala.actors.scheduler.DelegatingScheduler,scala.ScalaObject
  SourceFile: "DaemonScheduler.scala"
  Scala: length = 0x
   
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	DaemonScheduler.scala;
const #3 = Asciz	Scala;
const #4 = Asciz	MODULE$;
const #5 = Asciz	Lscala/actors/scheduler/DaemonScheduler$;;
const #6 = Asciz	<clinit>;
const #7 = Asciz	()V;
const #8 = Asciz	Code;
const #9 = Asciz	scala/actors/scheduler/DaemonScheduler$;
const #10 = class	#9;	//  scala/actors/scheduler/DaemonScheduler$
const #11 = Asciz	<init>;
const #12 = NameAndType	#11:#7;//  "<init>":()V
const #13 = Method	#10.#12;	//  scala/actors/scheduler/DaemonScheduler$."<init>":()V
const #14 = Asciz	sched;
const #15 = Asciz	Lscala/actors/IScheduler;;
const #16 = Asciz	LineNumberTable;
const #17 = Asciz	java/lang/Object;
const #18 = class	#17;	//  java/lang/Object
const #19 = Method	#18.#12;	//  java/lang/Object."<init>":()V
const #20 = NameAndType	#4:#5;//  MODULE$:Lscala/actors/scheduler/DaemonScheduler$;
const #21 = Field	#10.#20;	//  scala/actors/scheduler/DaemonScheduler$.MODULE$:Lscala/actors/scheduler/DaemonScheduler$;
const #22 = Asciz	scala/actors/IScheduler$class;
const #23 = class	#22;	//  scala/actors/IScheduler$class
const #24 = Asciz	$init$;
const #25 = Asciz	(Lscala/actors/IScheduler;)V;
const #26 = NameAndType	#24:#25;//  $init$:(Lscala/actors/IScheduler;)V
const #27 = Method	#23.#26;	//  scala/actors/IScheduler$class.$init$:(Lscala/actors/IScheduler;)V
const #28 = Asciz	scala/actors/scheduler/DelegatingScheduler$class;
const #29 = class	#28;	//  scala/actors/scheduler/DelegatingScheduler$class
const #30 = Asciz	(Lscala/actors/scheduler/DelegatingScheduler;)V;
const #31 = NameAndType	#24:#30;//  $init$:(Lscala/actors/scheduler/DelegatingScheduler;)V
const #32 = Method	#29.#31;	//  scala/actors/scheduler/DelegatingScheduler$class.$init$:(Lscala/actors/scheduler/DelegatingScheduler;)V
const #33 = Asciz	makeNewScheduler;
const #34 = Asciz	()Lscala/actors/IScheduler;;
const #35 = Asciz	java.vm.vendor;
const #36 = String	#35;	//  java.vm.vendor
const #37 = Asciz	java/lang/System;
const #38 = class	#37;	//  java/lang/System
const #39 = Asciz	getProperty;
const #40 = Asciz	(Ljava/lang/String;)Ljava/lang/String;;
const #41 = NameAndType	#39:#40;//  getProperty:(Ljava/lang/String;)Ljava/lang/String;
const #42 = Method	#38.#41;	//  java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
const #43 = Asciz	IBM;
const #44 = String	#43;	//  IBM
const #45 = Asciz	java/lang/String;
const #46 = class	#45;	//  java/lang/String
const #47 = Asciz	indexOf;
const #48 = Asciz	(Ljava/lang/String;)I;
const #49 = NameAndType	#47:#48;//  indexOf:(Ljava/lang/String;)I
const #50 = Method	#46.#49;	//  java/lang/String.indexOf:(Ljava/lang/String;)I
const #51 = Asciz	scala/actors/Debug$;
const #52 = class	#51;	//  scala/actors/Debug$
const #53 = Asciz	Lscala/actors/Debug$;;
const #54 = NameAndType	#4:#53;//  MODULE$:Lscala/actors/Debug$;
const #55 = Field	#52.#54;	//  scala/actors/Debug$.MODULE$:Lscala/actors/Debug$;
const #56 = Asciz	scala/collection/mutable/StringBuilder;
const #57 = class	#56;	//  scala/collection/mutable/StringBuilder
const #58 = Method	#57.#12;	//  scala/collection/mutable/StringBuilder."<init>":()V
const #59 = Asciz	scala/runtime/StringAdd;
const #60 = class	#59;	//  scala/runtime/StringAdd
const #61 = Asciz	(Ljava/lang/Object;)V;
const #62 = NameAndType	#11:#61;//  "<init>":(Ljava/lang/Object;)V
const #63 = Method	#60.#62;	//  scala/runtime/StringAdd."<init>":(Ljava/lang/Object;)V
const #64 = Asciz	: running on a ;
const #65 = String	#64;	//  : running on a 
const #66 = Asciz	$plus;
const #67 = NameAndType	#66:#40;//  $plus:(Ljava/lang/String;)Ljava/lang/String;
const #68 = Method	#60.#67;	//  scala/runtime/StringAdd.$plus:(Ljava/lang/String;)Ljava/lang/String;
const #69 = Asciz	append;
const #70 = Asciz	(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;;
const #71 = NameAndType	#69:#70;//  append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
const #72 = Method	#57.#71;	//  scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
const #73 = Asciz	 JVM;
const #74 = String	#73;	//   JVM
const #75 = Asciz	toString;
const #76 = Asciz	()Ljava/lang/String;;
const #77 = NameAndType	#75:#76;//  toString:()Ljava/lang/String;
const #78 = Method	#57.#77;	//  scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
const #79 = Asciz	info;
const #80 = Asciz	(Ljava/lang/String;)V;
const #81 = NameAndType	#79:#80;//  info:(Ljava/lang/String;)V
const #82 = Method	#52.#81;	//  scala/actors/Debug$.info:(Ljava/lang/String;)V
const #83 = Asciz	scala/actors/scheduler/ResizableThreadPoolScheduler;
const #84 = class	#83;	//  scala/actors/scheduler/ResizableThreadPoolScheduler
const #85 = Asciz	(Z)V;
const #86 = NameAndType	#11:#85;//  "<init>":(Z)V
const #87 = Method	#84.#86;	//  scala/actors/scheduler/ResizableThreadPoolScheduler."<init>":(Z)V
const #88 = Asciz	start;
const #89 = NameAndType	#88:#7;//  start:()V
const #90 = Method	#84.#89;	//  scala/actors/scheduler/ResizableThreadPoolScheduler.start:()V
const #91 = Asciz	scala/actors/scheduler/ForkJoinScheduler;
const #92 = class	#91;	//  scala/actors/scheduler/ForkJoinScheduler
const #93 = Method	#92.#86;	//  scala/actors/scheduler/ForkJoinScheduler."<init>":(Z)V
const #94 = Method	#92.#89;	//  scala/actors/scheduler/ForkJoinScheduler.start:()V
const #95 = Asciz	: starting new ;
const #96 = String	#95;	//  : starting new 
const #97 = Asciz	 [;
const #98 = String	#97;	//   [
const #99 = Asciz	getClass;
const #100 = Asciz	()Ljava/lang/Class;;
const #101 = NameAndType	#99:#100;//  getClass:()Ljava/lang/Class;
const #102 = Method	#18.#101;	//  java/lang/Object.getClass:()Ljava/lang/Class;
const #103 = Asciz	];
const #104 = String	#103;	//  ]
const #105 = Asciz	this;
const #106 = Asciz	jvmVendor;
const #107 = Asciz	Ljava/lang/String;;
const #108 = Asciz	s;
const #109 = Asciz	Lscala/actors/scheduler/ResizableThreadPoolScheduler;;
const #110 = Asciz	Lscala/actors/scheduler/ForkJoinScheduler;;
const #111 = Asciz	LocalVariableTable;
const #112 = Asciz	printActorDump;
const #113 = NameAndType	#112:#25;//  printActorDump:(Lscala/actors/IScheduler;)V
const #114 = Method	#23.#113;	//  scala/actors/IScheduler$class.printActorDump:(Lscala/actors/IScheduler;)V
const #115 = Asciz	onLockup;
const #116 = Asciz	(ILscala/Function0;)V;
const #117 = Asciz	(Lscala/actors/IScheduler;ILscala/Function0;)V;
const #118 = NameAndType	#115:#117;//  onLockup:(Lscala/actors/IScheduler;ILscala/Function0;)V
const #119 = Method	#23.#118;	//  scala/actors/IScheduler$class.onLockup:(Lscala/actors/IScheduler;ILscala/Function0;)V
const #120 = Asciz	millis;
const #121 = Asciz	I;
const #122 = Asciz	handler;
const #123 = Asciz	Lscala/Function0;;
const #124 = Asciz	(Lscala/Function0;)V;
const #125 = Asciz	(Lscala/actors/IScheduler;Lscala/Function0;)V;
const #126 = NameAndType	#115:#125;//  onLockup:(Lscala/actors/IScheduler;Lscala/Function0;)V
const #127 = Method	#23.#126;	//  scala/actors/IScheduler$class.onLockup:(Lscala/actors/IScheduler;Lscala/Function0;)V
const #128 = Asciz	tick;
const #129 = Asciz	(Lscala/actors/Actor;)V;
const #130 = Asciz	(Lscala/actors/IScheduler;Lscala/actors/Actor;)V;
const #131 = NameAndType	#128:#130;//  tick:(Lscala/actors/IScheduler;Lscala/actors/Actor;)V
const #132 = Method	#23.#131;	//  scala/actors/IScheduler$class.tick:(Lscala/actors/IScheduler;Lscala/actors/Actor;)V
const #133 = Asciz	a;
const #134 = Asciz	Lscala/actors/Actor;;
const #135 = Asciz	managedBlock;
const #136 = Asciz	(Lscala/concurrent/ManagedBlocker;)V;
const #137 = Asciz	(Lscala/actors/scheduler/DelegatingScheduler;Lscala/concurrent/ManagedBlocker;)V;
const #138 = NameAndType	#135:#137;//  managedBlock:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/concurrent/ManagedBlocker;)V
const #139 = Method	#29.#138;	//  scala/actors/scheduler/DelegatingScheduler$class.managedBlock:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/concurrent/ManagedBlocker;)V
const #140 = Asciz	blocker;
const #141 = Asciz	Lscala/concurrent/ManagedBlocker;;
const #142 = Asciz	onTerminate;
const #143 = Asciz	(Lscala/actors/Reactor;Lscala/Function0;)V;
const #144 = Asciz	(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/Reactor;Lscala/Function0;)V;
const #145 = NameAndType	#142:#144;//  onTerminate:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/Reactor;Lscala/Function0;)V
const #146 = Method	#29.#145;	//  scala/actors/scheduler/DelegatingScheduler$class.onTerminate:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/Reactor;Lscala/Function0;)V
const #147 = Asciz	actor;
const #148 = Asciz	Lscala/actors/Reactor;;
const #149 = Asciz	f;
const #150 = Asciz	terminated;
const #151 = Asciz	(Lscala/actors/Reactor;)V;
const #152 = Asciz	(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/Reactor;)V;
const #153 = NameAndType	#150:#152;//  terminated:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/Reactor;)V
const #154 = Method	#29.#153;	//  scala/actors/scheduler/DelegatingScheduler$class.terminated:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/Reactor;)V
const #155 = Asciz	newActor;
const #156 = NameAndType	#155:#152;//  newActor:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/Reactor;)V
const #157 = Method	#29.#156;	//  scala/actors/scheduler/DelegatingScheduler$class.newActor:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/Reactor;)V
const #158 = Asciz	shutdown;
const #159 = NameAndType	#158:#30;//  shutdown:(Lscala/actors/scheduler/DelegatingScheduler;)V
const #160 = Method	#29.#159;	//  scala/actors/scheduler/DelegatingScheduler$class.shutdown:(Lscala/actors/scheduler/DelegatingScheduler;)V
const #161 = Asciz	executeFromActor;
const #162 = Asciz	(Ljava/lang/Runnable;)V;
const #163 = Asciz	(Lscala/actors/scheduler/DelegatingScheduler;Ljava/lang/Runnable;)V;
const #164 = NameAndType	#161:#163;//  executeFromActor:(Lscala/actors/scheduler/DelegatingScheduler;Ljava/lang/Runnable;)V
const #165 = Method	#29.#164;	//  scala/actors/scheduler/DelegatingScheduler$class.executeFromActor:(Lscala/actors/scheduler/DelegatingScheduler;Ljava/lang/Runnable;)V
const #166 = Asciz	task;
const #167 = Asciz	Ljava/lang/Runnable;;
const #168 = Asciz	execute;
const #169 = NameAndType	#168:#163;//  execute:(Lscala/actors/scheduler/DelegatingScheduler;Ljava/lang/Runnable;)V
const #170 = Method	#29.#169;	//  scala/actors/scheduler/DelegatingScheduler$class.execute:(Lscala/actors/scheduler/DelegatingScheduler;Ljava/lang/Runnable;)V
const #171 = Asciz	(Lscala/actors/scheduler/DelegatingScheduler;Lscala/Function0;)V;
const #172 = NameAndType	#168:#171;//  execute:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/Function0;)V
const #173 = Method	#29.#172;	//  scala/actors/scheduler/DelegatingScheduler$class.execute:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/Function0;)V
const #174 = Asciz	fun;
const #175 = Asciz	isActive;
const #176 = Asciz	()Z;
const #177 = Asciz	(Lscala/actors/scheduler/DelegatingScheduler;)Z;
const #178 = NameAndType	#175:#177;//  isActive:(Lscala/actors/scheduler/DelegatingScheduler;)Z
const #179 = Method	#29.#178;	//  scala/actors/scheduler/DelegatingScheduler$class.isActive:(Lscala/actors/scheduler/DelegatingScheduler;)Z
const #180 = Asciz	impl_$eq;
const #181 = Asciz	(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/IScheduler;)V;
const #182 = NameAndType	#180:#181;//  impl_$eq:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/IScheduler;)V
const #183 = Method	#29.#182;	//  scala/actors/scheduler/DelegatingScheduler$class.impl_$eq:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/IScheduler;)V
const #184 = Asciz	scheduler;
const #185 = Asciz	impl;
const #186 = Asciz	(Lscala/actors/scheduler/DelegatingScheduler;)Lscala/actors/IScheduler;;
const #187 = NameAndType	#185:#186;//  impl:(Lscala/actors/scheduler/DelegatingScheduler;)Lscala/actors/IScheduler;
const #188 = Method	#29.#187;	//  scala/actors/scheduler/DelegatingScheduler$class.impl:(Lscala/actors/scheduler/DelegatingScheduler;)Lscala/actors/IScheduler;
const #189 = Asciz	sched_$eq;
const #190 = NameAndType	#14:#15;//  sched:Lscala/actors/IScheduler;
const #191 = Field	#10.#190;	//  scala/actors/scheduler/DaemonScheduler$.sched:Lscala/actors/IScheduler;
const #192 = Asciz	scala/actors/scheduler/DelegatingScheduler;
const #193 = class	#192;	//  scala/actors/scheduler/DelegatingScheduler
const #194 = Asciz	scala/ScalaObject;
const #195 = class	#194;	//  scala/ScalaObject

{
public static final scala.actors.scheduler.DaemonScheduler$ MODULE$;

public static {};
  Code:
   Stack=1, Locals=0, Args_size=0
   0:	new	#10; //class scala/actors/scheduler/DaemonScheduler$
   3:	invokespecial	#13; //Method "<init>":()V
   6:	return

public scala.actors.IScheduler makeNewScheduler();
  Code:
   Stack=5, Locals=5, Args_size=1
   0:	ldc	#36; //String java.vm.vendor
   2:	invokestatic	#42; //Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
   5:	astore_1
   6:	aload_1
   7:	ldc	#44; //String IBM
   9:	invokevirtual	#50; //Method java/lang/String.indexOf:(Ljava/lang/String;)I
   12:	iconst_m1
   13:	if_icmpeq	74
   16:	getstatic	#55; //Field scala/actors/Debug$.MODULE$:Lscala/actors/Debug$;
   19:	new	#57; //class scala/collection/mutable/StringBuilder
   22:	dup
   23:	invokespecial	#58; //Method scala/collection/mutable/StringBuilder."<init>":()V
   26:	new	#60; //class scala/runtime/StringAdd
   29:	dup
   30:	aload_0
   31:	invokespecial	#63; //Method scala/runtime/StringAdd."<init>":(Ljava/lang/Object;)V
   34:	ldc	#65; //String : running on a 
   36:	invokevirtual	#68; //Method scala/runtime/StringAdd.$plus:(Ljava/lang/String;)Ljava/lang/String;
   39:	invokevirtual	#72; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   42:	aload_1
   43:	invokevirtual	#72; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   46:	ldc	#74; //String  JVM
   48:	invokevirtual	#72; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   51:	invokevirtual	#78; //Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
   54:	invokevirtual	#82; //Method scala/actors/Debug$.info:(Ljava/lang/String;)V
   57:	new	#84; //class scala/actors/scheduler/ResizableThreadPoolScheduler
   60:	dup
   61:	iconst_1
   62:	invokespecial	#87; //Method scala/actors/scheduler/ResizableThreadPoolScheduler."<init>":(Z)V
   65:	astore_2
   66:	aload_2
   67:	invokevirtual	#90; //Method scala/actors/scheduler/ResizableThreadPoolScheduler.start:()V
   70:	aload_2
   71:	goto	88
   74:	new	#92; //class scala/actors/scheduler/ForkJoinScheduler
   77:	dup
   78:	iconst_1
   79:	invokespecial	#93; //Method scala/actors/scheduler/ForkJoinScheduler."<init>":(Z)V
   82:	astore_3
   83:	aload_3
   84:	invokevirtual	#94; //Method scala/actors/scheduler/ForkJoinScheduler.start:()V
   87:	aload_3
   88:	astore	4
   90:	getstatic	#55; //Field scala/actors/Debug$.MODULE$:Lscala/actors/Debug$;
   93:	new	#57; //class scala/collection/mutable/StringBuilder
   96:	dup
   97:	invokespecial	#58; //Method scala/collection/mutable/StringBuilder."<init>":()V
   100:	new	#60; //class scala/runtime/StringAdd
   103:	dup
   104:	aload_0
   105:	invokespecial	#63; //Method scala/runtime/StringAdd."<init>":(Ljava/lang/Object;)V
   108:	ldc	#96; //String : starting new 
   110:	invokevirtual	#68; //Method scala/runtime/StringAdd.$plus:(Ljava/lang/String;)Ljava/lang/String;
   113:	invokevirtual	#72; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   116:	aload	4
   118:	invokevirtual	#72; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   121:	ldc	#98; //String  [
   123:	invokevirtual	#72; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   126:	aload	4
   128:	invokevirtual	#102; //Method java/lang/Object.getClass:()Ljava/lang/Class;
   131:	invokevirtual	#72; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   134:	ldc	#104; //String ]
   136:	invokevirtual	#72; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   139:	invokevirtual	#78; //Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
   142:	invokevirtual	#82; //Method scala/actors/Debug$.info:(Ljava/lang/String;)V
   145:	aload	4
   147:	areturn
  LineNumberTable: 
   line 21: 0
   line 22: 6
   line 23: 16
   line 25: 57
   line 27: 66
   line 26: 67
   line 27: 70
   line 29: 74
   line 31: 83
   line 30: 84
   line 31: 87
   line 22: 88
   line 33: 90
   line 34: 145

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      148      0    this       Lscala/actors/scheduler/DaemonScheduler$;
   6      141      1    jvmVendor       Ljava/lang/String;
   66      5      2    s       Lscala/actors/scheduler/ResizableThreadPoolScheduler;
   83      5      3    s       Lscala/actors/scheduler/ForkJoinScheduler;
   90      57      4    sched       Lscala/actors/IScheduler;


public void printActorDump();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#114; //Method scala/actors/IScheduler$class.printActorDump:(Lscala/actors/IScheduler;)V
   4:	return
  LineNumberTable: 
   line 17: 0


public void onLockup(int, scala.Function0);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	iload_1
   2:	aload_2
   3:	invokestatic	#119; //Method scala/actors/IScheduler$class.onLockup:(Lscala/actors/IScheduler;ILscala/Function0;)V
   6:	return
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/actors/scheduler/DaemonScheduler$;
   0      7      1    millis       I
   0      7      2    handler       Lscala/Function0;


public void onLockup(scala.Function0);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#127; //Method scala/actors/IScheduler$class.onLockup:(Lscala/actors/IScheduler;Lscala/Function0;)V
   5:	return
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/scheduler/DaemonScheduler$;
   0      6      1    handler       Lscala/Function0;


public void tick(scala.actors.Actor);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#132; //Method scala/actors/IScheduler$class.tick:(Lscala/actors/IScheduler;Lscala/actors/Actor;)V
   5:	return
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/scheduler/DaemonScheduler$;
   0      6      1    a       Lscala/actors/Actor;


public void managedBlock(scala.concurrent.ManagedBlocker);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#139; //Method scala/actors/scheduler/DelegatingScheduler$class.managedBlock:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/concurrent/ManagedBlocker;)V
   5:	return
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/scheduler/DaemonScheduler$;
   0      6      1    blocker       Lscala/concurrent/ManagedBlocker;


public void onTerminate(scala.actors.Reactor, scala.Function0);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#146; //Method scala/actors/scheduler/DelegatingScheduler$class.onTerminate:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/Reactor;Lscala/Function0;)V
   6:	return
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/actors/scheduler/DaemonScheduler$;
   0      7      1    actor       Lscala/actors/Reactor;
   0      7      2    f       Lscala/Function0;


public void terminated(scala.actors.Reactor);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#154; //Method scala/actors/scheduler/DelegatingScheduler$class.terminated:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/Reactor;)V
   5:	return
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/scheduler/DaemonScheduler$;
   0      6      1    actor       Lscala/actors/Reactor;


public void newActor(scala.actors.Reactor);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#157; //Method scala/actors/scheduler/DelegatingScheduler$class.newActor:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/Reactor;)V
   5:	return
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/scheduler/DaemonScheduler$;
   0      6      1    actor       Lscala/actors/Reactor;


public void shutdown();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#160; //Method scala/actors/scheduler/DelegatingScheduler$class.shutdown:(Lscala/actors/scheduler/DelegatingScheduler;)V
   4:	return
  LineNumberTable: 
   line 17: 0


public void executeFromActor(java.lang.Runnable);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#165; //Method scala/actors/scheduler/DelegatingScheduler$class.executeFromActor:(Lscala/actors/scheduler/DelegatingScheduler;Ljava/lang/Runnable;)V
   5:	return
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/scheduler/DaemonScheduler$;
   0      6      1    task       Ljava/lang/Runnable;


public void execute(java.lang.Runnable);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#170; //Method scala/actors/scheduler/DelegatingScheduler$class.execute:(Lscala/actors/scheduler/DelegatingScheduler;Ljava/lang/Runnable;)V
   5:	return
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/scheduler/DaemonScheduler$;
   0      6      1    task       Ljava/lang/Runnable;


public void execute(scala.Function0);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#173; //Method scala/actors/scheduler/DelegatingScheduler$class.execute:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/Function0;)V
   5:	return
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/scheduler/DaemonScheduler$;
   0      6      1    fun       Lscala/Function0;


public boolean isActive();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#179; //Method scala/actors/scheduler/DelegatingScheduler$class.isActive:(Lscala/actors/scheduler/DelegatingScheduler;)Z
   4:	ireturn
  LineNumberTable: 
   line 17: 0


public final void impl_$eq(scala.actors.IScheduler);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#183; //Method scala/actors/scheduler/DelegatingScheduler$class.impl_$eq:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/IScheduler;)V
   5:	return
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/scheduler/DaemonScheduler$;
   0      6      1    scheduler       Lscala/actors/IScheduler;


public final scala.actors.IScheduler impl();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#188; //Method scala/actors/scheduler/DelegatingScheduler$class.impl:(Lscala/actors/scheduler/DelegatingScheduler;)Lscala/actors/IScheduler;
   4:	areturn
  LineNumberTable: 
   line 17: 0


public void sched_$eq(scala.actors.IScheduler);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	putfield	#191; //Field sched:Lscala/actors/IScheduler;
   5:	return
  LineNumberTable: 
   line 17: 0


public scala.actors.IScheduler sched();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#191; //Field sched:Lscala/actors/IScheduler;
   4:	areturn
  LineNumberTable: 
   line 17: 0


}

