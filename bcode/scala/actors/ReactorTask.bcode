Compiled from "ReactorTask.scala"
public class scala.actors.ReactorTask extends java.lang.Object implements java.lang.Runnable,scala.ScalaObject
  SourceFile: "ReactorTask.scala"
  ScalaSig: length = 0x18A
   05 00 3F 06 08 01 02 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF80 00 07 02 0B 52
   65 61 63 74 6F 72 54 61 73 6B 0A 02 03 04 01 06
   61 63 74 6F 72 73 0A 01 05 01 05 73 63 61 6C 61
   03 00 13 04 00 08 10 13 10 02 09 0E 0D 01 0A 0A
   02 0B 0C 01 04 6C 61 6E 67 0A 01 0D 01 04 6A 61
   76 61 09 02 0F 0A 02 06 4F 62 6A 65 63 74 10 02
   09 11 09 02 12 0A 02 08 52 75 6E 6E 61 62 6C 65
   10 02 14 15 0D 01 04 09 02 16 04 02 0B 53 63 61
   6C 61 4F 62 6A 65 63 74 08 05 18 00 FFFFFF84 00 19 01
   06 3C 69 6E 69 74 3E 14 01 1A 10 02 1B 00 0D 01
   02 08 07 1D 00 FFFFFFC0 FFFFFF80 FFFFFF84 04 1E 01 07 72 65 61 63
   74 6F 72 15 01 1F 10 02 1B 20 09 02 21 02 02 07
   52 65 61 63 74 6F 72 08 07 23 00 FFFFFFC0 FFFFFF80 FFFFFF84 04 24
   01 0B 72 65 61 63 74 6F 72 5F 24 65 71 14 02 25
   28 10 02 14 26 09 02 27 04 02 04 55 6E 69 74 08
   07 29 22 FFFFFF81 FFFFFF80 FFFFFFC0 00 1F 01 03 78 24 31 08 06 2B
   00 FFFFFFA0 FFFFFFA0 04 1F 01 08 72 65 61 63 74 6F 72 20 08
   07 2D 00 FFFFFFC0 FFFFFF80 FFFFFF84 04 2E 01 03 66 75 6E 15 01 2F
   10 03 14 30 25 09 02 31 04 02 09 46 75 6E 63 74
   69 6F 6E 30 08 07 33 00 FFFFFFC0 FFFFFF80 FFFFFF84 04 34 01 07 66
   75 6E 5F 24 65 71 14 02 25 35 08 07 29 32 FFFFFF81 FFFFFF80
   FFFFFFC0 00 2F 08 06 37 00 FFFFFFA0 FFFFFFA0 04 2F 01 04 66 75 6E
   20 08 05 18 00 FFFFFF84 00 39 14 03 1A 3A 3B 08 05 1D
   38 FFFFFFC0 00 1F 08 05 2D 38 FFFFFFC0 00 2F 08 05 3D 00 FFFFFF84
   00 3E 01 03 72 75 6E 14 01 25 
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	ReactorTask.scala;
const #3 = Asciz	fun;
const #4 = Asciz	Lscala/Function0;;
const #5 = Asciz	Lscala/Function0<Ljava/lang/Object;>;;
const #6 = Asciz	Signature;
const #7 = Asciz	reactor;
const #8 = Asciz	Lscala/actors/Reactor;;
const #9 = Asciz	<init>;
const #10 = Asciz	()V;
const #11 = Asciz	Code;
const #12 = Asciz	LineNumberTable;
const #13 = Asciz	java/lang/Object;
const #14 = class	#13;	//  java/lang/Object
const #15 = NameAndType	#9:#10;//  "<init>":()V
const #16 = Method	#14.#15;	//  java/lang/Object."<init>":()V
const #17 = Asciz	scala/actors/ReactorTask;
const #18 = class	#17;	//  scala/actors/ReactorTask
const #19 = NameAndType	#7:#8;//  reactor:Lscala/actors/Reactor;
const #20 = Field	#18.#19;	//  scala/actors/ReactorTask.reactor:Lscala/actors/Reactor;
const #21 = NameAndType	#3:#4;//  fun:Lscala/Function0;
const #22 = Field	#18.#21;	//  scala/actors/ReactorTask.fun:Lscala/Function0;
const #23 = Asciz	gd1$1;
const #24 = Asciz	(Ljava/lang/Exception;)Z;
const #25 = Asciz	()Lscala/actors/Reactor;;
const #26 = NameAndType	#7:#25;//  reactor:()Lscala/actors/Reactor;
const #27 = Method	#18.#26;	//  scala/actors/ReactorTask.reactor:()Lscala/actors/Reactor;
const #28 = Asciz	scala/actors/Reactor;
const #29 = class	#28;	//  scala/actors/Reactor
const #30 = Asciz	exceptionHandler;
const #31 = Asciz	()Lscala/PartialFunction;;
const #32 = NameAndType	#30:#31;//  exceptionHandler:()Lscala/PartialFunction;
const #33 = InterfaceMethod	#29.#32;	//  scala/actors/Reactor.exceptionHandler:()Lscala/PartialFunction;
const #34 = Asciz	scala/PartialFunction;
const #35 = class	#34;	//  scala/PartialFunction
const #36 = Asciz	isDefinedAt;
const #37 = Asciz	(Ljava/lang/Object;)Z;
const #38 = NameAndType	#36:#37;//  isDefinedAt:(Ljava/lang/Object;)Z
const #39 = InterfaceMethod	#35.#38;	//  scala/PartialFunction.isDefinedAt:(Ljava/lang/Object;)Z
const #40 = Asciz	run;
const #41 = Asciz	scala/actors/Actor$;
const #42 = class	#41;	//  scala/actors/Actor$
const #43 = Asciz	MODULE$;
const #44 = Asciz	Lscala/actors/Actor$;;
const #45 = NameAndType	#43:#44;//  MODULE$:Lscala/actors/Actor$;
const #46 = Field	#42.#45;	//  scala/actors/Actor$.MODULE$:Lscala/actors/Actor$;
const #47 = Asciz	tl;
const #48 = Asciz	()Ljava/lang/ThreadLocal;;
const #49 = NameAndType	#47:#48;//  tl:()Ljava/lang/ThreadLocal;
const #50 = Method	#42.#49;	//  scala/actors/Actor$.tl:()Ljava/lang/ThreadLocal;
const #51 = Asciz	java/lang/ThreadLocal;
const #52 = class	#51;	//  java/lang/ThreadLocal
const #53 = Asciz	get;
const #54 = Asciz	()Ljava/lang/Object;;
const #55 = NameAndType	#53:#54;//  get:()Ljava/lang/Object;
const #56 = Method	#52.#55;	//  java/lang/ThreadLocal.get:()Ljava/lang/Object;
const #57 = Asciz	set;
const #58 = Asciz	(Ljava/lang/Object;)V;
const #59 = NameAndType	#57:#58;//  set:(Ljava/lang/Object;)V
const #60 = Method	#52.#59;	//  java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
const #61 = Asciz	()Lscala/Function0;;
const #62 = NameAndType	#3:#61;//  fun:()Lscala/Function0;
const #63 = Method	#18.#62;	//  scala/actors/ReactorTask.fun:()Lscala/Function0;
const #64 = Asciz	scala/Function0;
const #65 = class	#64;	//  scala/Function0
const #66 = Asciz	apply;
const #67 = NameAndType	#66:#54;//  apply:()Ljava/lang/Object;
const #68 = InterfaceMethod	#65.#67;	//  scala/Function0.apply:()Ljava/lang/Object;
const #69 = Asciz	java/lang/Exception;
const #70 = class	#69;	//  java/lang/Exception
const #71 = NameAndType	#23:#24;//  gd1$1:(Ljava/lang/Exception;)Z
const #72 = Method	#18.#71;	//  scala/actors/ReactorTask.gd1$1:(Ljava/lang/Exception;)Z
const #73 = Asciz	scala/Function1;
const #74 = class	#73;	//  scala/Function1
const #75 = Asciz	(Ljava/lang/Object;)Ljava/lang/Object;;
const #76 = NameAndType	#66:#75;//  apply:(Ljava/lang/Object;)Ljava/lang/Object;
const #77 = InterfaceMethod	#74.#76;	//  scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
const #78 = Asciz	scala/runtime/BoxedUnit;
const #79 = class	#78;	//  scala/runtime/BoxedUnit
const #80 = Asciz	UNIT;
const #81 = Asciz	Lscala/runtime/BoxedUnit;;
const #82 = NameAndType	#80:#81;//  UNIT:Lscala/runtime/BoxedUnit;
const #83 = Field	#79.#82;	//  scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
const #84 = Asciz	kill;
const #85 = NameAndType	#84:#61;//  kill:()Lscala/Function0;
const #86 = InterfaceMethod	#29.#85;	//  scala/actors/Reactor.kill:()Lscala/Function0;
const #87 = Asciz	reactor_$eq;
const #88 = Asciz	(Lscala/actors/Reactor;)V;
const #89 = NameAndType	#87:#88;//  reactor_$eq:(Lscala/actors/Reactor;)V
const #90 = Method	#18.#89;	//  scala/actors/ReactorTask.reactor_$eq:(Lscala/actors/Reactor;)V
const #91 = Asciz	fun_$eq;
const #92 = Asciz	(Lscala/Function0;)V;
const #93 = NameAndType	#91:#92;//  fun_$eq:(Lscala/Function0;)V
const #94 = Method	#18.#93;	//  scala/actors/ReactorTask.fun_$eq:(Lscala/Function0;)V
const #95 = Asciz	scala/actors/Debug$;
const #96 = class	#95;	//  scala/actors/Debug$
const #97 = Asciz	Lscala/actors/Debug$;;
const #98 = NameAndType	#43:#97;//  MODULE$:Lscala/actors/Debug$;
const #99 = Field	#96.#98;	//  scala/actors/Debug$.MODULE$:Lscala/actors/Debug$;
const #100 = Asciz	scala/collection/mutable/StringBuilder;
const #101 = class	#100;	//  scala/collection/mutable/StringBuilder
const #102 = Method	#101.#15;	//  scala/collection/mutable/StringBuilder."<init>":()V
const #103 = Asciz	scala/Predef$;
const #104 = class	#103;	//  scala/Predef$
const #105 = Asciz	Lscala/Predef$;;
const #106 = NameAndType	#43:#105;//  MODULE$:Lscala/Predef$;
const #107 = Field	#104.#106;	//  scala/Predef$.MODULE$:Lscala/Predef$;
const #108 = Asciz	any2stringadd;
const #109 = Asciz	(Ljava/lang/Object;)Lscala/runtime/StringAdd;;
const #110 = NameAndType	#108:#109;//  any2stringadd:(Ljava/lang/Object;)Lscala/runtime/StringAdd;
const #111 = Method	#104.#110;	//  scala/Predef$.any2stringadd:(Ljava/lang/Object;)Lscala/runtime/StringAdd;
const #112 = Asciz	: caught ;
const #113 = String	#112;	//  : caught 
const #114 = Asciz	scala/runtime/StringAdd;
const #115 = class	#114;	//  scala/runtime/StringAdd
const #116 = Asciz	$plus;
const #117 = Asciz	(Ljava/lang/String;)Ljava/lang/String;;
const #118 = NameAndType	#116:#117;//  $plus:(Ljava/lang/String;)Ljava/lang/String;
const #119 = Method	#115.#118;	//  scala/runtime/StringAdd.$plus:(Ljava/lang/String;)Ljava/lang/String;
const #120 = Asciz	append;
const #121 = Asciz	(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;;
const #122 = NameAndType	#120:#121;//  append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
const #123 = Method	#101.#122;	//  scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
const #124 = Asciz	toString;
const #125 = Asciz	()Ljava/lang/String;;
const #126 = NameAndType	#124:#125;//  toString:()Ljava/lang/String;
const #127 = Method	#101.#126;	//  scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
const #128 = Asciz	info;
const #129 = Asciz	(Ljava/lang/String;)V;
const #130 = NameAndType	#128:#129;//  info:(Ljava/lang/String;)V
const #131 = Method	#96.#130;	//  scala/actors/Debug$.info:(Ljava/lang/String;)V
const #132 = Asciz	terminated;
const #133 = NameAndType	#132:#10;//  terminated:()V
const #134 = InterfaceMethod	#29.#133;	//  scala/actors/Reactor.terminated:()V
const #135 = Asciz	java/lang/Throwable;
const #136 = class	#135;	//  java/lang/Throwable
const #137 = Asciz	scala/actors/KillActorException;
const #138 = class	#137;	//  scala/actors/KillActorException
const #139 = Asciz	scala/actors/SuspendActorException;
const #140 = class	#139;	//  scala/actors/SuspendActorException
const #141 = Asciz	this;
const #142 = Asciz	Lscala/actors/ReactorTask;;
const #143 = Asciz	saved;
const #144 = Asciz	exceptionResult1;
const #145 = Asciz	Ljava/lang/Object;;
const #146 = Asciz	exceptionResult2;
const #147 = Asciz	temp1;
const #148 = Asciz	Ljava/lang/Throwable;;
const #149 = Asciz	temp2;
const #150 = Asciz	Ljava/lang/Exception;;
const #151 = Asciz	e;
const #152 = Asciz	LocalVariableTable;
const #153 = Asciz	(Lscala/actors/Reactor;Lscala/Function0;)V;
const #154 = Method	#18.#15;	//  scala/actors/ReactorTask."<init>":()V
const #155 = Asciz	(Lscala/actors/Reactor;Lscala/Function0<Ljava/lang/Object;>;)V;
const #156 = Asciz	(Lscala/Function0<Ljava/lang/Object;>;)V;
const #157 = Asciz	()Lscala/Function0<Ljava/lang/Object;>;;
const #158 = Asciz	ScalaSig;
const #159 = Asciz	java/lang/Runnable;
const #160 = class	#159;	//  java/lang/Runnable
const #161 = Asciz	scala/ScalaObject;
const #162 = class	#161;	//  scala/ScalaObject

{
public scala.actors.ReactorTask();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	invokespecial	#16; //Method java/lang/Object."<init>":()V
   4:	aload_0
   5:	aconst_null
   6:	pop
   7:	aconst_null
   8:	putfield	#20; //Field reactor:Lscala/actors/Reactor;
   11:	aload_0
   12:	aconst_null
   13:	pop
   14:	aconst_null
   15:	putfield	#22; //Field fun:Lscala/Function0;
   18:	return
  LineNumberTable: 
   line 22: 0
   line 24: 4
   line 25: 11


public void run();
  Code:
   Stack=4, Locals=10, Args_size=1
   0:	getstatic	#46; //Field scala/actors/Actor$.MODULE$:Lscala/actors/Actor$;
   3:	invokevirtual	#50; //Method scala/actors/Actor$.tl:()Ljava/lang/ThreadLocal;
   6:	invokevirtual	#56; //Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
   9:	checkcast	#29; //class scala/actors/Reactor
   12:	astore_1
   13:	getstatic	#46; //Field scala/actors/Actor$.MODULE$:Lscala/actors/Actor$;
   16:	invokevirtual	#50; //Method scala/actors/Actor$.tl:()Ljava/lang/ThreadLocal;
   19:	aload_0
   20:	invokespecial	#27; //Method reactor:()Lscala/actors/Reactor;
   23:	invokevirtual	#60; //Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
   26:	aconst_null
   27:	astore	4
   29:	aconst_null
   30:	astore	5
   32:	aload_0
   33:	invokespecial	#63; //Method fun:()Lscala/Function0;
   36:	invokeinterface	#68,  1; //InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
   41:	astore	5
   43:	goto	98
   46:	astore	6
   48:	aload	6
   50:	astore	7
   52:	aload	7
   54:	instanceof	#70; //class java/lang/Exception
   57:	ifeq	108
   60:	aload	7
   62:	checkcast	#70; //class java/lang/Exception
   65:	astore	8
   67:	aload	8
   69:	astore	9
   71:	aload_0
   72:	aload	9
   74:	invokespecial	#72; //Method gd1$1:(Ljava/lang/Exception;)Z
   77:	ifeq	105
   80:	aload_0
   81:	invokespecial	#27; //Method reactor:()Lscala/actors/Reactor;
   84:	invokeinterface	#33,  1; //InterfaceMethod scala/actors/Reactor.exceptionHandler:()Lscala/PartialFunction;
   89:	aload	8
   91:	invokeinterface	#77,  2; //InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
   96:	astore	5
   98:	aload	5
   100:	astore	4
   102:	goto	117
   105:	aload	6
   107:	athrow
   108:	aload	6
   110:	athrow
   111:	pop
   112:	getstatic	#83; //Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
   115:	astore	4
   117:	aload	4
   119:	pop
   120:	aload_0
   121:	invokespecial	#27; //Method reactor:()Lscala/actors/Reactor;
   124:	invokeinterface	#86,  1; //InterfaceMethod scala/actors/Reactor.kill:()Lscala/Function0;
   129:	invokeinterface	#68,  1; //InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
   134:	pop
   135:	getstatic	#46; //Field scala/actors/Actor$.MODULE$:Lscala/actors/Actor$;
   138:	invokevirtual	#50; //Method scala/actors/Actor$.tl:()Ljava/lang/ThreadLocal;
   141:	aload_1
   142:	invokevirtual	#60; //Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
   145:	aload_0
   146:	aconst_null
   147:	pop
   148:	aconst_null
   149:	invokespecial	#90; //Method reactor_$eq:(Lscala/actors/Reactor;)V
   152:	aload_0
   153:	aconst_null
   154:	pop
   155:	aconst_null
   156:	invokespecial	#94; //Method fun_$eq:(Lscala/Function0;)V
   159:	goto	262
   162:	pop
   163:	getstatic	#46; //Field scala/actors/Actor$.MODULE$:Lscala/actors/Actor$;
   166:	invokevirtual	#50; //Method scala/actors/Actor$.tl:()Ljava/lang/ThreadLocal;
   169:	aload_1
   170:	invokevirtual	#60; //Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
   173:	aload_0
   174:	aconst_null
   175:	pop
   176:	aconst_null
   177:	invokespecial	#90; //Method reactor_$eq:(Lscala/actors/Reactor;)V
   180:	aload_0
   181:	aconst_null
   182:	pop
   183:	aconst_null
   184:	invokespecial	#94; //Method fun_$eq:(Lscala/Function0;)V
   187:	goto	262
   190:	astore_2
   191:	getstatic	#99; //Field scala/actors/Debug$.MODULE$:Lscala/actors/Debug$;
   194:	new	#101; //class scala/collection/mutable/StringBuilder
   197:	dup
   198:	invokespecial	#102; //Method scala/collection/mutable/StringBuilder."<init>":()V
   201:	getstatic	#107; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   204:	aload_0
   205:	invokespecial	#27; //Method reactor:()Lscala/actors/Reactor;
   208:	invokevirtual	#111; //Method scala/Predef$.any2stringadd:(Ljava/lang/Object;)Lscala/runtime/StringAdd;
   211:	ldc	#113; //String : caught 
   213:	invokevirtual	#119; //Method scala/runtime/StringAdd.$plus:(Ljava/lang/String;)Ljava/lang/String;
   216:	invokevirtual	#123; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   219:	aload_2
   220:	invokevirtual	#123; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   223:	invokevirtual	#127; //Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
   226:	invokevirtual	#131; //Method scala/actors/Debug$.info:(Ljava/lang/String;)V
   229:	aload_0
   230:	invokespecial	#27; //Method reactor:()Lscala/actors/Reactor;
   233:	invokeinterface	#134,  1; //InterfaceMethod scala/actors/Reactor.terminated:()V
   238:	getstatic	#46; //Field scala/actors/Actor$.MODULE$:Lscala/actors/Actor$;
   241:	invokevirtual	#50; //Method scala/actors/Actor$.tl:()Ljava/lang/ThreadLocal;
   244:	aload_1
   245:	invokevirtual	#60; //Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
   248:	aload_0
   249:	aconst_null
   250:	pop
   251:	aconst_null
   252:	invokespecial	#90; //Method reactor_$eq:(Lscala/actors/Reactor;)V
   255:	aload_0
   256:	aconst_null
   257:	pop
   258:	aconst_null
   259:	invokespecial	#94; //Method fun_$eq:(Lscala/Function0;)V
   262:	return
   263:	astore_3
   264:	getstatic	#46; //Field scala/actors/Actor$.MODULE$:Lscala/actors/Actor$;
   267:	invokevirtual	#50; //Method scala/actors/Actor$.tl:()Ljava/lang/ThreadLocal;
   270:	aload_1
   271:	invokevirtual	#60; //Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
   274:	aload_0
   275:	aconst_null
   276:	pop
   277:	aconst_null
   278:	invokespecial	#90; //Method reactor_$eq:(Lscala/actors/Reactor;)V
   281:	aload_0
   282:	aconst_null
   283:	pop
   284:	aconst_null
   285:	invokespecial	#94; //Method fun_$eq:(Lscala/Function0;)V
   288:	aload_3
   289:	athrow
  Exception table:
   from   to  target type
    32    46    46   Class java/lang/Throwable

    29   111   111   Class scala/actors/KillActorException

    26   162   162   Class scala/actors/SuspendActorException

    26   162   190   Class java/lang/Exception

    26   262   263   any
  LineNumberTable: 
   line 34: 0
   line 35: 13
   line 39: 26
   line 37: 27
   line 39: 29
   line 38: 30
   line 39: 32
   line 38: 46
   line 41: 67
   line 38: 71
   line 42: 80
   line 41: 89
   line 42: 91
   line 38: 96
   line 53: 111
   line 45: 112
   line 53: 117
   line 47: 120
   line 58: 135
   line 59: 145
   line 60: 152
   line 53: 162
   line 58: 163
   line 59: 173
   line 60: 180
   line 53: 190
   line 54: 191
   line 55: 229
   line 58: 238
   line 59: 248
   line 60: 255
   line 33: 262
   line 58: 264
   line 59: 274
   line 60: 281

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      290      0    this       Lscala/actors/ReactorTask;
   13      277      1    saved       Lscala/actors/Reactor;
   29      91      4    exceptionResult1       Ljava/lang/Object;
   32      68      5    exceptionResult2       Ljava/lang/Object;
   105      6      5    exceptionResult2       Ljava/lang/Object;
   52      46      7    temp1       Ljava/lang/Throwable;
   105      6      7    temp1       Ljava/lang/Throwable;
   67      29      8    temp2       Ljava/lang/Exception;
   105      3      8    temp2       Ljava/lang/Exception;
   71      25      9    e       Ljava/lang/Exception;
   105      3      9    e       Ljava/lang/Exception;


public scala.actors.ReactorTask(scala.actors.Reactor, scala.Function0);
  Code:
   Stack=2, Locals=3, Args_size=3
   0:	aload_0
   1:	invokespecial	#154; //Method "<init>":()V
   4:	aload_0
   5:	aload_1
   6:	invokespecial	#90; //Method reactor_$eq:(Lscala/actors/Reactor;)V
   9:	aload_0
   10:	aload_2
   11:	invokespecial	#94; //Method fun_$eq:(Lscala/Function0;)V
   14:	return
  LineNumberTable: 
   line 28: 0
   line 29: 4
   line 30: 9

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      15      0    this       Lscala/actors/ReactorTask;
   0      15      1    reactor       Lscala/actors/Reactor;
   0      15      2    fun       Lscala/Function0;

  Signature: length = 0x2
   00 FFFFFF9B 

}

