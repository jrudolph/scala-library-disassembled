Compiled from "Reactor.scala"
public final class scala.actors.Reactor$$anon$1 extends java.lang.Object implements scala.actors.scheduler.DelegatingScheduler
  SourceFile: "Reactor.scala"
  Scala: length = 0x
   
  InnerClass: 
   public final #172= #165 of #171; //$anon$1=class scala/actors/Reactor$$anon$1 of class scala/actors/Reactor
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Reactor.scala;
const #3 = Asciz	sched;
const #4 = Asciz	Lscala/actors/IScheduler;;
const #5 = Asciz	<init>;
const #6 = Asciz	()V;
const #7 = Asciz	Code;
const #8 = Asciz	LineNumberTable;
const #9 = Asciz	java/lang/Object;
const #10 = class	#9;	//  java/lang/Object
const #11 = NameAndType	#5:#6;//  "<init>":()V
const #12 = Method	#10.#11;	//  java/lang/Object."<init>":()V
const #13 = Asciz	scala/actors/IScheduler$class;
const #14 = class	#13;	//  scala/actors/IScheduler$class
const #15 = Asciz	$init$;
const #16 = Asciz	(Lscala/actors/IScheduler;)V;
const #17 = NameAndType	#15:#16;//  $init$:(Lscala/actors/IScheduler;)V
const #18 = Method	#14.#17;	//  scala/actors/IScheduler$class.$init$:(Lscala/actors/IScheduler;)V
const #19 = Asciz	scala/actors/scheduler/DelegatingScheduler$class;
const #20 = class	#19;	//  scala/actors/scheduler/DelegatingScheduler$class
const #21 = Asciz	(Lscala/actors/scheduler/DelegatingScheduler;)V;
const #22 = NameAndType	#15:#21;//  $init$:(Lscala/actors/scheduler/DelegatingScheduler;)V
const #23 = Method	#20.#22;	//  scala/actors/scheduler/DelegatingScheduler$class.$init$:(Lscala/actors/scheduler/DelegatingScheduler;)V
const #24 = Asciz	makeNewScheduler;
const #25 = Asciz	()Lscala/actors/IScheduler;;
const #26 = Asciz	scala/actors/scheduler/DefaultThreadPoolScheduler;
const #27 = class	#26;	//  scala/actors/scheduler/DefaultThreadPoolScheduler
const #28 = Asciz	(Z)V;
const #29 = NameAndType	#5:#28;//  "<init>":(Z)V
const #30 = Method	#27.#29;	//  scala/actors/scheduler/DefaultThreadPoolScheduler."<init>":(Z)V
const #31 = Asciz	scala/actors/Debug$;
const #32 = class	#31;	//  scala/actors/Debug$
const #33 = Asciz	MODULE$;
const #34 = Asciz	Lscala/actors/Debug$;;
const #35 = NameAndType	#33:#34;//  MODULE$:Lscala/actors/Debug$;
const #36 = Field	#32.#35;	//  scala/actors/Debug$.MODULE$:Lscala/actors/Debug$;
const #37 = Asciz	scala/collection/mutable/StringBuilder;
const #38 = class	#37;	//  scala/collection/mutable/StringBuilder
const #39 = Method	#38.#11;	//  scala/collection/mutable/StringBuilder."<init>":()V
const #40 = Asciz	scala/Predef$;
const #41 = class	#40;	//  scala/Predef$
const #42 = Asciz	Lscala/Predef$;;
const #43 = NameAndType	#33:#42;//  MODULE$:Lscala/Predef$;
const #44 = Field	#41.#43;	//  scala/Predef$.MODULE$:Lscala/Predef$;
const #45 = Asciz	any2stringadd;
const #46 = Asciz	(Ljava/lang/Object;)Lscala/runtime/StringAdd;;
const #47 = NameAndType	#45:#46;//  any2stringadd:(Ljava/lang/Object;)Lscala/runtime/StringAdd;
const #48 = Method	#41.#47;	//  scala/Predef$.any2stringadd:(Ljava/lang/Object;)Lscala/runtime/StringAdd;
const #49 = Asciz	: starting new ;
const #50 = String	#49;	//  : starting new 
const #51 = Asciz	scala/runtime/StringAdd;
const #52 = class	#51;	//  scala/runtime/StringAdd
const #53 = Asciz	$plus;
const #54 = Asciz	(Ljava/lang/String;)Ljava/lang/String;;
const #55 = NameAndType	#53:#54;//  $plus:(Ljava/lang/String;)Ljava/lang/String;
const #56 = Method	#52.#55;	//  scala/runtime/StringAdd.$plus:(Ljava/lang/String;)Ljava/lang/String;
const #57 = Asciz	append;
const #58 = Asciz	(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;;
const #59 = NameAndType	#57:#58;//  append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
const #60 = Method	#38.#59;	//  scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
const #61 = Asciz	 [;
const #62 = String	#61;	//   [
const #63 = Asciz	getClass;
const #64 = Asciz	()Ljava/lang/Class;;
const #65 = NameAndType	#63:#64;//  getClass:()Ljava/lang/Class;
const #66 = Method	#27.#65;	//  scala/actors/scheduler/DefaultThreadPoolScheduler.getClass:()Ljava/lang/Class;
const #67 = Asciz	];
const #68 = String	#67;	//  ]
const #69 = Asciz	toString;
const #70 = Asciz	()Ljava/lang/String;;
const #71 = NameAndType	#69:#70;//  toString:()Ljava/lang/String;
const #72 = Method	#38.#71;	//  scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
const #73 = Asciz	info;
const #74 = Asciz	(Ljava/lang/String;)V;
const #75 = NameAndType	#73:#74;//  info:(Ljava/lang/String;)V
const #76 = Method	#32.#75;	//  scala/actors/Debug$.info:(Ljava/lang/String;)V
const #77 = Asciz	start;
const #78 = NameAndType	#77:#6;//  start:()V
const #79 = Method	#27.#78;	//  scala/actors/scheduler/DefaultThreadPoolScheduler.start:()V
const #80 = Asciz	this;
const #81 = Asciz	Lscala/actors/Reactor$$anon$1;;
const #82 = Asciz	s;
const #83 = Asciz	Lscala/actors/scheduler/DefaultThreadPoolScheduler;;
const #84 = Asciz	LocalVariableTable;
const #85 = Asciz	printActorDump;
const #86 = NameAndType	#85:#16;//  printActorDump:(Lscala/actors/IScheduler;)V
const #87 = Method	#14.#86;	//  scala/actors/IScheduler$class.printActorDump:(Lscala/actors/IScheduler;)V
const #88 = Asciz	Deprecated;
const #89 = Asciz	onLockup;
const #90 = Asciz	(ILscala/Function0;)V;
const #91 = Asciz	(Lscala/actors/IScheduler;ILscala/Function0;)V;
const #92 = NameAndType	#89:#91;//  onLockup:(Lscala/actors/IScheduler;ILscala/Function0;)V
const #93 = Method	#14.#92;	//  scala/actors/IScheduler$class.onLockup:(Lscala/actors/IScheduler;ILscala/Function0;)V
const #94 = Asciz	millis;
const #95 = Asciz	I;
const #96 = Asciz	handler;
const #97 = Asciz	Lscala/Function0;;
const #98 = Asciz	(Lscala/Function0;)V;
const #99 = Asciz	(Lscala/actors/IScheduler;Lscala/Function0;)V;
const #100 = NameAndType	#89:#99;//  onLockup:(Lscala/actors/IScheduler;Lscala/Function0;)V
const #101 = Method	#14.#100;	//  scala/actors/IScheduler$class.onLockup:(Lscala/actors/IScheduler;Lscala/Function0;)V
const #102 = Asciz	tick;
const #103 = Asciz	(Lscala/actors/Actor;)V;
const #104 = Asciz	(Lscala/actors/IScheduler;Lscala/actors/Actor;)V;
const #105 = NameAndType	#102:#104;//  tick:(Lscala/actors/IScheduler;Lscala/actors/Actor;)V
const #106 = Method	#14.#105;	//  scala/actors/IScheduler$class.tick:(Lscala/actors/IScheduler;Lscala/actors/Actor;)V
const #107 = Asciz	a;
const #108 = Asciz	Lscala/actors/Actor;;
const #109 = Asciz	managedBlock;
const #110 = Asciz	(Lscala/concurrent/ManagedBlocker;)V;
const #111 = Asciz	(Lscala/actors/scheduler/DelegatingScheduler;Lscala/concurrent/ManagedBlocker;)V;
const #112 = NameAndType	#109:#111;//  managedBlock:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/concurrent/ManagedBlocker;)V
const #113 = Method	#20.#112;	//  scala/actors/scheduler/DelegatingScheduler$class.managedBlock:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/concurrent/ManagedBlocker;)V
const #114 = Asciz	blocker;
const #115 = Asciz	Lscala/concurrent/ManagedBlocker;;
const #116 = Asciz	onTerminate;
const #117 = Asciz	(Lscala/actors/Reactor;Lscala/Function0;)V;
const #118 = Asciz	(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/Reactor;Lscala/Function0;)V;
const #119 = NameAndType	#116:#118;//  onTerminate:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/Reactor;Lscala/Function0;)V
const #120 = Method	#20.#119;	//  scala/actors/scheduler/DelegatingScheduler$class.onTerminate:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/Reactor;Lscala/Function0;)V
const #121 = Asciz	actor;
const #122 = Asciz	Lscala/actors/Reactor;;
const #123 = Asciz	f;
const #124 = Asciz	terminated;
const #125 = Asciz	(Lscala/actors/Reactor;)V;
const #126 = Asciz	(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/Reactor;)V;
const #127 = NameAndType	#124:#126;//  terminated:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/Reactor;)V
const #128 = Method	#20.#127;	//  scala/actors/scheduler/DelegatingScheduler$class.terminated:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/Reactor;)V
const #129 = Asciz	newActor;
const #130 = NameAndType	#129:#126;//  newActor:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/Reactor;)V
const #131 = Method	#20.#130;	//  scala/actors/scheduler/DelegatingScheduler$class.newActor:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/Reactor;)V
const #132 = Asciz	shutdown;
const #133 = NameAndType	#132:#21;//  shutdown:(Lscala/actors/scheduler/DelegatingScheduler;)V
const #134 = Method	#20.#133;	//  scala/actors/scheduler/DelegatingScheduler$class.shutdown:(Lscala/actors/scheduler/DelegatingScheduler;)V
const #135 = Asciz	executeFromActor;
const #136 = Asciz	(Ljava/lang/Runnable;)V;
const #137 = Asciz	(Lscala/actors/scheduler/DelegatingScheduler;Ljava/lang/Runnable;)V;
const #138 = NameAndType	#135:#137;//  executeFromActor:(Lscala/actors/scheduler/DelegatingScheduler;Ljava/lang/Runnable;)V
const #139 = Method	#20.#138;	//  scala/actors/scheduler/DelegatingScheduler$class.executeFromActor:(Lscala/actors/scheduler/DelegatingScheduler;Ljava/lang/Runnable;)V
const #140 = Asciz	task;
const #141 = Asciz	Ljava/lang/Runnable;;
const #142 = Asciz	execute;
const #143 = NameAndType	#142:#137;//  execute:(Lscala/actors/scheduler/DelegatingScheduler;Ljava/lang/Runnable;)V
const #144 = Method	#20.#143;	//  scala/actors/scheduler/DelegatingScheduler$class.execute:(Lscala/actors/scheduler/DelegatingScheduler;Ljava/lang/Runnable;)V
const #145 = Asciz	(Lscala/actors/scheduler/DelegatingScheduler;Lscala/Function0;)V;
const #146 = NameAndType	#142:#145;//  execute:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/Function0;)V
const #147 = Method	#20.#146;	//  scala/actors/scheduler/DelegatingScheduler$class.execute:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/Function0;)V
const #148 = Asciz	fun;
const #149 = Asciz	isActive;
const #150 = Asciz	()Z;
const #151 = Asciz	(Lscala/actors/scheduler/DelegatingScheduler;)Z;
const #152 = NameAndType	#149:#151;//  isActive:(Lscala/actors/scheduler/DelegatingScheduler;)Z
const #153 = Method	#20.#152;	//  scala/actors/scheduler/DelegatingScheduler$class.isActive:(Lscala/actors/scheduler/DelegatingScheduler;)Z
const #154 = Asciz	impl_$eq;
const #155 = Asciz	(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/IScheduler;)V;
const #156 = NameAndType	#154:#155;//  impl_$eq:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/IScheduler;)V
const #157 = Method	#20.#156;	//  scala/actors/scheduler/DelegatingScheduler$class.impl_$eq:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/IScheduler;)V
const #158 = Asciz	scheduler;
const #159 = Asciz	impl;
const #160 = Asciz	(Lscala/actors/scheduler/DelegatingScheduler;)Lscala/actors/IScheduler;;
const #161 = NameAndType	#159:#160;//  impl:(Lscala/actors/scheduler/DelegatingScheduler;)Lscala/actors/IScheduler;
const #162 = Method	#20.#161;	//  scala/actors/scheduler/DelegatingScheduler$class.impl:(Lscala/actors/scheduler/DelegatingScheduler;)Lscala/actors/IScheduler;
const #163 = Asciz	sched_$eq;
const #164 = Asciz	scala/actors/Reactor$$anon$1;
const #165 = class	#164;	//  scala/actors/Reactor$$anon$1
const #166 = NameAndType	#3:#4;//  sched:Lscala/actors/IScheduler;
const #167 = Field	#165.#166;	//  scala/actors/Reactor$$anon$1.sched:Lscala/actors/IScheduler;
const #168 = Asciz	Scala;
const #169 = Asciz	InnerClasses;
const #170 = Asciz	scala/actors/Reactor;
const #171 = class	#170;	//  scala/actors/Reactor
const #172 = Asciz	$anon$1;
const #173 = Asciz	scala/actors/scheduler/DelegatingScheduler;
const #174 = class	#173;	//  scala/actors/scheduler/DelegatingScheduler

{
public scala.actors.Reactor$$anon$1();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokespecial	#12; //Method java/lang/Object."<init>":()V
   4:	aload_0
   5:	invokestatic	#18; //Method scala/actors/IScheduler$class.$init$:(Lscala/actors/IScheduler;)V
   8:	aload_0
   9:	invokestatic	#23; //Method scala/actors/scheduler/DelegatingScheduler$class.$init$:(Lscala/actors/scheduler/DelegatingScheduler;)V
   12:	return
  LineNumberTable: 
   line 17: 0


public scala.actors.IScheduler makeNewScheduler();
  Code:
   Stack=4, Locals=2, Args_size=1
   0:	new	#27; //class scala/actors/scheduler/DefaultThreadPoolScheduler
   3:	dup
   4:	iconst_0
   5:	invokespecial	#30; //Method scala/actors/scheduler/DefaultThreadPoolScheduler."<init>":(Z)V
   8:	astore_1
   9:	getstatic	#36; //Field scala/actors/Debug$.MODULE$:Lscala/actors/Debug$;
   12:	new	#38; //class scala/collection/mutable/StringBuilder
   15:	dup
   16:	invokespecial	#39; //Method scala/collection/mutable/StringBuilder."<init>":()V
   19:	getstatic	#44; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   22:	aload_0
   23:	invokevirtual	#48; //Method scala/Predef$.any2stringadd:(Ljava/lang/Object;)Lscala/runtime/StringAdd;
   26:	ldc	#50; //String : starting new 
   28:	invokevirtual	#56; //Method scala/runtime/StringAdd.$plus:(Ljava/lang/String;)Ljava/lang/String;
   31:	invokevirtual	#60; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   34:	aload_1
   35:	invokevirtual	#60; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   38:	ldc	#62; //String  [
   40:	invokevirtual	#60; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   43:	aload_1
   44:	invokevirtual	#66; //Method scala/actors/scheduler/DefaultThreadPoolScheduler.getClass:()Ljava/lang/Class;
   47:	invokevirtual	#60; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   50:	ldc	#68; //String ]
   52:	invokevirtual	#60; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   55:	invokevirtual	#72; //Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
   58:	invokevirtual	#76; //Method scala/actors/Debug$.info:(Ljava/lang/String;)V
   61:	aload_1
   62:	invokevirtual	#79; //Method scala/actors/scheduler/DefaultThreadPoolScheduler.start:()V
   65:	aload_1
   66:	areturn
  LineNumberTable: 
   line 19: 0
   line 20: 9
   line 22: 34
   line 20: 35
   line 21: 61
   line 22: 65

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      67      0    this       Lscala/actors/Reactor$$anon$1;
   9      57      1    s       Lscala/actors/scheduler/DefaultThreadPoolScheduler;


public void printActorDump();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#87; //Method scala/actors/IScheduler$class.printActorDump:(Lscala/actors/IScheduler;)V
   4:	return
  LineNumberTable: 
   line 17: 0

  Deprecated: true

public void onLockup(int, scala.Function0);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	iload_1
   2:	aload_2
   3:	invokestatic	#93; //Method scala/actors/IScheduler$class.onLockup:(Lscala/actors/IScheduler;ILscala/Function0;)V
   6:	return
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/actors/Reactor$$anon$1;
   0      7      1    millis       I
   0      7      2    handler       Lscala/Function0;

  Deprecated: true

public void onLockup(scala.Function0);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#101; //Method scala/actors/IScheduler$class.onLockup:(Lscala/actors/IScheduler;Lscala/Function0;)V
   5:	return
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/Reactor$$anon$1;
   0      6      1    handler       Lscala/Function0;

  Deprecated: true

public void tick(scala.actors.Actor);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#106; //Method scala/actors/IScheduler$class.tick:(Lscala/actors/IScheduler;Lscala/actors/Actor;)V
   5:	return
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/Reactor$$anon$1;
   0      6      1    a       Lscala/actors/Actor;

  Deprecated: true

public void managedBlock(scala.concurrent.ManagedBlocker);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#113; //Method scala/actors/scheduler/DelegatingScheduler$class.managedBlock:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/concurrent/ManagedBlocker;)V
   5:	return
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/Reactor$$anon$1;
   0      6      1    blocker       Lscala/concurrent/ManagedBlocker;


public void onTerminate(scala.actors.Reactor, scala.Function0);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#120; //Method scala/actors/scheduler/DelegatingScheduler$class.onTerminate:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/Reactor;Lscala/Function0;)V
   6:	return
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/actors/Reactor$$anon$1;
   0      7      1    actor       Lscala/actors/Reactor;
   0      7      2    f       Lscala/Function0;


public void terminated(scala.actors.Reactor);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#128; //Method scala/actors/scheduler/DelegatingScheduler$class.terminated:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/Reactor;)V
   5:	return
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/Reactor$$anon$1;
   0      6      1    actor       Lscala/actors/Reactor;


public void newActor(scala.actors.Reactor);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#131; //Method scala/actors/scheduler/DelegatingScheduler$class.newActor:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/Reactor;)V
   5:	return
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/Reactor$$anon$1;
   0      6      1    actor       Lscala/actors/Reactor;


public void shutdown();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#134; //Method scala/actors/scheduler/DelegatingScheduler$class.shutdown:(Lscala/actors/scheduler/DelegatingScheduler;)V
   4:	return
  LineNumberTable: 
   line 17: 0


public void executeFromActor(java.lang.Runnable);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#139; //Method scala/actors/scheduler/DelegatingScheduler$class.executeFromActor:(Lscala/actors/scheduler/DelegatingScheduler;Ljava/lang/Runnable;)V
   5:	return
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/Reactor$$anon$1;
   0      6      1    task       Ljava/lang/Runnable;


public void execute(java.lang.Runnable);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#144; //Method scala/actors/scheduler/DelegatingScheduler$class.execute:(Lscala/actors/scheduler/DelegatingScheduler;Ljava/lang/Runnable;)V
   5:	return
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/Reactor$$anon$1;
   0      6      1    task       Ljava/lang/Runnable;


public void execute(scala.Function0);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#147; //Method scala/actors/scheduler/DelegatingScheduler$class.execute:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/Function0;)V
   5:	return
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/Reactor$$anon$1;
   0      6      1    fun       Lscala/Function0;


public boolean isActive();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#153; //Method scala/actors/scheduler/DelegatingScheduler$class.isActive:(Lscala/actors/scheduler/DelegatingScheduler;)Z
   4:	ireturn
  LineNumberTable: 
   line 17: 0


public final void impl_$eq(scala.actors.IScheduler);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#157; //Method scala/actors/scheduler/DelegatingScheduler$class.impl_$eq:(Lscala/actors/scheduler/DelegatingScheduler;Lscala/actors/IScheduler;)V
   5:	return
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/actors/Reactor$$anon$1;
   0      6      1    scheduler       Lscala/actors/IScheduler;


public final scala.actors.IScheduler impl();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#162; //Method scala/actors/scheduler/DelegatingScheduler$class.impl:(Lscala/actors/scheduler/DelegatingScheduler;)Lscala/actors/IScheduler;
   4:	areturn
  LineNumberTable: 
   line 17: 0


public void sched_$eq(scala.actors.IScheduler);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	putfield	#167; //Field sched:Lscala/actors/IScheduler;
   5:	return
  LineNumberTable: 
   line 17: 0


public scala.actors.IScheduler sched();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#167; //Field sched:Lscala/actors/IScheduler;
   4:	areturn
  LineNumberTable: 
   line 17: 0


}

