public interface scala.actors.threadpool.BlockingQueue extends scala.actors.threadpool.Queue
  minor version: 0
  major version: 49
  Constant pool:
class	scala/actors/threadpool/BlockingQueue
class	java/lang/Object
class	scala/actors/threadpool/Queue
Asciz	add;
Asciz	(Ljava/lang/Object;)Z;
Asciz	offer;
Asciz	put;
Asciz	(Ljava/lang/Object;)V;
Asciz	Exceptions;
class	java/lang/InterruptedException
Asciz	(Ljava/lang/Object;JLscala/actors/threadpool/TimeUnit;)Z;
Asciz	take;
Asciz	()Ljava/lang/Object;;
Asciz	poll;
Asciz	(JLscala/actors/threadpool/TimeUnit;)Ljava/lang/Object;;
Asciz	remainingCapacity;
Asciz	()I;
Asciz	remove;
Asciz	contains;
Asciz	drainTo;
Asciz	(Ljava/util/Collection;)I;
Asciz	(Ljava/util/Collection;I)I;
Asciz	scala/actors/threadpool/BlockingQueue;
Asciz	java/lang/Object;
Asciz	scala/actors/threadpool/Queue;
Asciz	java/lang/InterruptedException;

{
public abstract boolean add(java.lang.Object);
  Signature: (Ljava/lang/Object;)Z

public abstract boolean offer(java.lang.Object);
  Signature: (Ljava/lang/Object;)Z

public abstract void put(java.lang.Object)   throws java.lang.InterruptedException;
  Signature: (Ljava/lang/Object;)V
  Exceptions: 
   throws java.lang.InterruptedException
public abstract boolean offer(java.lang.Object, long, scala.actors.threadpool.TimeUnit)   throws java.lang.InterruptedException;
  Signature: (Ljava/lang/Object;JLscala/actors/threadpool/TimeUnit;)Z
  Exceptions: 
   throws java.lang.InterruptedException
public abstract java.lang.Object take()   throws java.lang.InterruptedException;
  Signature: ()Ljava/lang/Object;
  Exceptions: 
   throws java.lang.InterruptedException
public abstract java.lang.Object poll(long, scala.actors.threadpool.TimeUnit)   throws java.lang.InterruptedException;
  Signature: (JLscala/actors/threadpool/TimeUnit;)Ljava/lang/Object;
  Exceptions: 
   throws java.lang.InterruptedException
public abstract int remainingCapacity();
  Signature: ()I

public abstract boolean remove(java.lang.Object);
  Signature: (Ljava/lang/Object;)Z

public abstract boolean contains(java.lang.Object);
  Signature: (Ljava/lang/Object;)Z

public abstract int drainTo(java.util.Collection);
  Signature: (Ljava/util/Collection;)I

public abstract int drainTo(java.util.Collection, int);
  Signature: (Ljava/util/Collection;I)I

}

