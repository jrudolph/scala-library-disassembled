public class scala.actors.threadpool.LinkedBlockingQueue extends scala.actors.threadpool.AbstractQueue implements scala.actors.threadpool.BlockingQueue,java.io.Serializable
  InnerClass: 
   #58 of #53; //class scala/actors/threadpool/LinkedBlockingQueue$1 of class scala/actors/threadpool/LinkedBlockingQueue
   #61= #15 of #53; //SerializableLock=class scala/actors/threadpool/LinkedBlockingQueue$SerializableLock of class scala/actors/threadpool/LinkedBlockingQueue
   #62= #47 of #53; //Itr=class scala/actors/threadpool/LinkedBlockingQueue$Itr of class scala/actors/threadpool/LinkedBlockingQueue
   #63= #8 of #53; //Node=class scala/actors/threadpool/LinkedBlockingQueue$Node of class scala/actors/threadpool/LinkedBlockingQueue
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Field	#53.#133;	//  scala/actors/threadpool/LinkedBlockingQueue.capacity:I
const #2 = Field	#53.#134;	//  scala/actors/threadpool/LinkedBlockingQueue.count:I
const #3 = Field	#53.#135;	//  scala/actors/threadpool/LinkedBlockingQueue.last:Lscala/actors/threadpool/LinkedBlockingQueue$Node;
const #4 = Field	#53.#136;	//  scala/actors/threadpool/LinkedBlockingQueue.head:Lscala/actors/threadpool/LinkedBlockingQueue$Node;
const #5 = Field	#53.#137;	//  scala/actors/threadpool/LinkedBlockingQueue.takeLock:Ljava/lang/Object;
const #6 = Field	#53.#138;	//  scala/actors/threadpool/LinkedBlockingQueue.putLock:Ljava/lang/Object;
const #7 = Method	#37.#139;	//  java/lang/Object.notify:()V
const #8 = class	#140;	//  scala/actors/threadpool/LinkedBlockingQueue$Node
const #9 = Method	#8.#141;	//  scala/actors/threadpool/LinkedBlockingQueue$Node."<init>":(Ljava/lang/Object;)V
const #10 = Field	#8.#142;	//  scala/actors/threadpool/LinkedBlockingQueue$Node.next:Lscala/actors/threadpool/LinkedBlockingQueue$Node;
const #11 = Field	#8.#143;	//  scala/actors/threadpool/LinkedBlockingQueue$Node.item:Ljava/lang/Object;
const #12 = int	2147483647;
const #13 = Method	#53.#144;	//  scala/actors/threadpool/LinkedBlockingQueue."<init>":(I)V
const #14 = Method	#55.#145;	//  scala/actors/threadpool/AbstractQueue."<init>":()V
const #15 = class	#146;	//  scala/actors/threadpool/LinkedBlockingQueue$SerializableLock
const #16 = Method	#15.#147;	//  scala/actors/threadpool/LinkedBlockingQueue$SerializableLock."<init>":(Lscala/actors/threadpool/LinkedBlockingQueue$1;)V
const #17 = class	#148;	//  java/lang/IllegalArgumentException
const #18 = Method	#17.#145;	//  java/lang/IllegalArgumentException."<init>":()V
const #19 = InterfaceMethod	#149.#150;	//  java/util/Collection.iterator:()Ljava/util/Iterator;
const #20 = InterfaceMethod	#151.#152;	//  java/util/Iterator.hasNext:()Z
const #21 = InterfaceMethod	#151.#153;	//  java/util/Iterator.next:()Ljava/lang/Object;
const #22 = Method	#53.#154;	//  scala/actors/threadpool/LinkedBlockingQueue.add:(Ljava/lang/Object;)Z
const #23 = class	#155;	//  java/lang/NullPointerException
const #24 = Method	#23.#145;	//  java/lang/NullPointerException."<init>":()V
const #25 = Method	#37.#156;	//  java/lang/Object.wait:()V
const #26 = class	#157;	//  java/lang/InterruptedException
const #27 = Method	#53.#158;	//  scala/actors/threadpool/LinkedBlockingQueue.insert:(Ljava/lang/Object;)V
const #28 = Method	#53.#159;	//  scala/actors/threadpool/LinkedBlockingQueue.signalNotEmpty:()V
const #29 = Method	#160.#161;	//  scala/actors/threadpool/TimeUnit.toNanos:(J)J
const #30 = Method	#162.#163;	//  scala/actors/threadpool/helpers/Utils.nanoTime:()J
const #31 = Field	#160.#164;	//  scala/actors/threadpool/TimeUnit.NANOSECONDS:Lscala/actors/threadpool/TimeUnit;
const #32 = Method	#160.#165;	//  scala/actors/threadpool/TimeUnit.timedWait:(Ljava/lang/Object;J)V
const #33 = Method	#53.#166;	//  scala/actors/threadpool/LinkedBlockingQueue.extract:()Ljava/lang/Object;
const #34 = Method	#53.#167;	//  scala/actors/threadpool/LinkedBlockingQueue.signalNotFull:()V
const #35 = Method	#37.#168;	//  java/lang/Object.equals:(Ljava/lang/Object;)Z
const #36 = Method	#37.#169;	//  java/lang/Object.notifyAll:()V
const #37 = class	#170;	//  java/lang/Object
const #38 = Method	#37.#171;	//  java/lang/Object.getClass:()Ljava/lang/Class;
const #39 = Method	#172.#173;	//  java/lang/Class.getComponentType:()Ljava/lang/Class;
const #40 = Method	#174.#175;	//  java/lang/reflect/Array.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;
const #41 = class	#176;	//  "[Ljava/lang/Object;"
const #42 = Method	#55.#177;	//  scala/actors/threadpool/AbstractQueue.toString:()Ljava/lang/String;
const #43 = Field	#53.#178;	//  scala/actors/threadpool/LinkedBlockingQueue.$assertionsDisabled:Z
const #44 = class	#179;	//  java/lang/AssertionError
const #45 = Method	#44.#145;	//  java/lang/AssertionError."<init>":()V
const #46 = InterfaceMethod	#149.#154;	//  java/util/Collection.add:(Ljava/lang/Object;)Z
const #47 = class	#180;	//  scala/actors/threadpool/LinkedBlockingQueue$Itr
const #48 = Method	#47.#181;	//  scala/actors/threadpool/LinkedBlockingQueue$Itr."<init>":(Lscala/actors/threadpool/LinkedBlockingQueue;)V
const #49 = Method	#182.#183;	//  java/io/ObjectOutputStream.defaultWriteObject:()V
const #50 = Method	#182.#184;	//  java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
const #51 = Method	#185.#186;	//  java/io/ObjectInputStream.defaultReadObject:()V
const #52 = Method	#185.#187;	//  java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
const #53 = class	#188;	//  scala/actors/threadpool/LinkedBlockingQueue
const #54 = Method	#172.#189;	//  java/lang/Class.desiredAssertionStatus:()Z
const #55 = class	#190;	//  scala/actors/threadpool/AbstractQueue
const #56 = class	#191;	//  scala/actors/threadpool/BlockingQueue
const #57 = class	#192;	//  java/io/Serializable
const #58 = class	#193;	//  scala/actors/threadpool/LinkedBlockingQueue$1
const #59 = Asciz	;
const #60 = Asciz	InnerClasses;
const #61 = Asciz	SerializableLock;
const #62 = Asciz	Itr;
const #63 = Asciz	Node;
const #64 = Asciz	serialVersionUID;
const #65 = Asciz	J;
const #66 = Asciz	ConstantValue;
const #67 = long	-6903933977591709194l;
const #69 = Asciz	capacity;
const #70 = Asciz	I;
const #71 = Asciz	count;
const #72 = Asciz	head;
const #73 = Asciz	Lscala/actors/threadpool/LinkedBlockingQueue$Node;;
const #74 = Asciz	last;
const #75 = Asciz	takeLock;
const #76 = Asciz	Ljava/lang/Object;;
const #77 = Asciz	putLock;
const #78 = Asciz	$assertionsDisabled;
const #79 = Asciz	Z;
const #80 = Asciz	signalNotEmpty;
const #81 = Asciz	()V;
const #82 = Asciz	Code;
const #83 = Asciz	signalNotFull;
const #84 = Asciz	insert;
const #85 = Asciz	(Ljava/lang/Object;)V;
const #86 = Asciz	extract;
const #87 = Asciz	()Ljava/lang/Object;;
const #88 = Asciz	<init>;
const #89 = Asciz	(I)V;
const #90 = Asciz	(Ljava/util/Collection;)V;
const #91 = Asciz	size;
const #92 = Asciz	()I;
const #93 = Asciz	remainingCapacity;
const #94 = Asciz	put;
const #95 = Asciz	Exceptions;
const #96 = Asciz	offer;
const #97 = Asciz	(Ljava/lang/Object;JLscala/actors/threadpool/TimeUnit;)Z;
const #98 = Asciz	(Ljava/lang/Object;)Z;
const #99 = Asciz	take;
const #100 = Asciz	poll;
const #101 = Asciz	(JLscala/actors/threadpool/TimeUnit;)Ljava/lang/Object;;
const #102 = Asciz	peek;
const #103 = Asciz	remove;
const #104 = Asciz	toArray;
const #105 = Asciz	()[Ljava/lang/Object;;
const #106 = Asciz	([Ljava/lang/Object;)[Ljava/lang/Object;;
const #107 = Asciz	toString;
const #108 = Asciz	()Ljava/lang/String;;
const #109 = Asciz	clear;
const #110 = Asciz	drainTo;
const #111 = Asciz	(Ljava/util/Collection;)I;
const #112 = Asciz	(Ljava/util/Collection;I)I;
const #113 = Asciz	iterator;
const #114 = Asciz	()Ljava/util/Iterator;;
const #115 = Asciz	writeObject;
const #116 = Asciz	(Ljava/io/ObjectOutputStream;)V;
const #117 = class	#194;	//  java/io/IOException
const #118 = Asciz	readObject;
const #119 = Asciz	(Ljava/io/ObjectInputStream;)V;
const #120 = class	#195;	//  java/lang/ClassNotFoundException
const #121 = Asciz	access$100;
const #122 = Asciz	(Lscala/actors/threadpool/LinkedBlockingQueue;)Ljava/lang/Object;;
const #123 = Asciz	access$200;
const #124 = Asciz	access$300;
const #125 = Asciz	(Lscala/actors/threadpool/LinkedBlockingQueue;)Lscala/actors/threadpool/LinkedBlockingQueue$Node;;
const #126 = Asciz	access$400;
const #127 = Asciz	access$402;
const #128 = Asciz	(Lscala/actors/threadpool/LinkedBlockingQueue;Lscala/actors/threadpool/LinkedBlockingQueue$Node;)Lscala/actors/threadpool/LinkedBlockingQueue$Node;;
const #129 = Asciz	access$510;
const #130 = Asciz	(Lscala/actors/threadpool/LinkedBlockingQueue;)I;
const #131 = Asciz	access$600;
const #132 = Asciz	<clinit>;
const #133 = NameAndType	#69:#70;//  capacity:I
const #134 = NameAndType	#71:#70;//  count:I
const #135 = NameAndType	#74:#73;//  last:Lscala/actors/threadpool/LinkedBlockingQueue$Node;
const #136 = NameAndType	#72:#73;//  head:Lscala/actors/threadpool/LinkedBlockingQueue$Node;
const #137 = NameAndType	#75:#76;//  takeLock:Ljava/lang/Object;
const #138 = NameAndType	#77:#76;//  putLock:Ljava/lang/Object;
const #139 = NameAndType	#196:#81;//  notify:()V
const #140 = Asciz	scala/actors/threadpool/LinkedBlockingQueue$Node;
const #141 = NameAndType	#88:#85;//  "<init>":(Ljava/lang/Object;)V
const #142 = NameAndType	#197:#73;//  next:Lscala/actors/threadpool/LinkedBlockingQueue$Node;
const #143 = NameAndType	#198:#76;//  item:Ljava/lang/Object;
const #144 = NameAndType	#88:#89;//  "<init>":(I)V
const #145 = NameAndType	#88:#81;//  "<init>":()V
const #146 = Asciz	scala/actors/threadpool/LinkedBlockingQueue$SerializableLock;
const #147 = NameAndType	#88:#199;//  "<init>":(Lscala/actors/threadpool/LinkedBlockingQueue$1;)V
const #148 = Asciz	java/lang/IllegalArgumentException;
const #149 = class	#200;	//  java/util/Collection
const #150 = NameAndType	#113:#114;//  iterator:()Ljava/util/Iterator;
const #151 = class	#201;	//  java/util/Iterator
const #152 = NameAndType	#202:#203;//  hasNext:()Z
const #153 = NameAndType	#197:#87;//  next:()Ljava/lang/Object;
const #154 = NameAndType	#204:#98;//  add:(Ljava/lang/Object;)Z
const #155 = Asciz	java/lang/NullPointerException;
const #156 = NameAndType	#205:#81;//  wait:()V
const #157 = Asciz	java/lang/InterruptedException;
const #158 = NameAndType	#84:#85;//  insert:(Ljava/lang/Object;)V
const #159 = NameAndType	#80:#81;//  signalNotEmpty:()V
const #160 = class	#206;	//  scala/actors/threadpool/TimeUnit
const #161 = NameAndType	#207:#208;//  toNanos:(J)J
const #162 = class	#209;	//  scala/actors/threadpool/helpers/Utils
const #163 = NameAndType	#210:#211;//  nanoTime:()J
const #164 = NameAndType	#212:#213;//  NANOSECONDS:Lscala/actors/threadpool/TimeUnit;
const #165 = NameAndType	#214:#215;//  timedWait:(Ljava/lang/Object;J)V
const #166 = NameAndType	#86:#87;//  extract:()Ljava/lang/Object;
const #167 = NameAndType	#83:#81;//  signalNotFull:()V
const #168 = NameAndType	#216:#98;//  equals:(Ljava/lang/Object;)Z
const #169 = NameAndType	#217:#81;//  notifyAll:()V
const #170 = Asciz	java/lang/Object;
const #171 = NameAndType	#218:#219;//  getClass:()Ljava/lang/Class;
const #172 = class	#220;	//  java/lang/Class
const #173 = NameAndType	#221:#219;//  getComponentType:()Ljava/lang/Class;
const #174 = class	#222;	//  java/lang/reflect/Array
const #175 = NameAndType	#223:#224;//  newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;
const #176 = Asciz	[Ljava/lang/Object;;
const #177 = NameAndType	#107:#108;//  toString:()Ljava/lang/String;
const #178 = NameAndType	#78:#79;//  $assertionsDisabled:Z
const #179 = Asciz	java/lang/AssertionError;
const #180 = Asciz	scala/actors/threadpool/LinkedBlockingQueue$Itr;
const #181 = NameAndType	#88:#225;//  "<init>":(Lscala/actors/threadpool/LinkedBlockingQueue;)V
const #182 = class	#226;	//  java/io/ObjectOutputStream
const #183 = NameAndType	#227:#81;//  defaultWriteObject:()V
const #184 = NameAndType	#115:#85;//  writeObject:(Ljava/lang/Object;)V
const #185 = class	#228;	//  java/io/ObjectInputStream
const #186 = NameAndType	#229:#81;//  defaultReadObject:()V
const #187 = NameAndType	#118:#87;//  readObject:()Ljava/lang/Object;
const #188 = Asciz	scala/actors/threadpool/LinkedBlockingQueue;
const #189 = NameAndType	#230:#203;//  desiredAssertionStatus:()Z
const #190 = Asciz	scala/actors/threadpool/AbstractQueue;
const #191 = Asciz	scala/actors/threadpool/BlockingQueue;
const #192 = Asciz	java/io/Serializable;
const #193 = Asciz	scala/actors/threadpool/LinkedBlockingQueue$1;
const #194 = Asciz	java/io/IOException;
const #195 = Asciz	java/lang/ClassNotFoundException;
const #196 = Asciz	notify;
const #197 = Asciz	next;
const #198 = Asciz	item;
const #199 = Asciz	(Lscala/actors/threadpool/LinkedBlockingQueue$1;)V;
const #200 = Asciz	java/util/Collection;
const #201 = Asciz	java/util/Iterator;
const #202 = Asciz	hasNext;
const #203 = Asciz	()Z;
const #204 = Asciz	add;
const #205 = Asciz	wait;
const #206 = Asciz	scala/actors/threadpool/TimeUnit;
const #207 = Asciz	toNanos;
const #208 = Asciz	(J)J;
const #209 = Asciz	scala/actors/threadpool/helpers/Utils;
const #210 = Asciz	nanoTime;
const #211 = Asciz	()J;
const #212 = Asciz	NANOSECONDS;
const #213 = Asciz	Lscala/actors/threadpool/TimeUnit;;
const #214 = Asciz	timedWait;
const #215 = Asciz	(Ljava/lang/Object;J)V;
const #216 = Asciz	equals;
const #217 = Asciz	notifyAll;
const #218 = Asciz	getClass;
const #219 = Asciz	()Ljava/lang/Class;;
const #220 = Asciz	java/lang/Class;
const #221 = Asciz	getComponentType;
const #222 = Asciz	java/lang/reflect/Array;
const #223 = Asciz	newInstance;
const #224 = Asciz	(Ljava/lang/Class;I)Ljava/lang/Object;;
const #225 = Asciz	(Lscala/actors/threadpool/LinkedBlockingQueue;)V;
const #226 = Asciz	java/io/ObjectOutputStream;
const #227 = Asciz	defaultWriteObject;
const #228 = Asciz	java/io/ObjectInputStream;
const #229 = Asciz	defaultReadObject;
const #230 = Asciz	desiredAssertionStatus;

{
static final boolean $assertionsDisabled;

public scala.actors.threadpool.LinkedBlockingQueue();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	ldc	#12; //int 2147483647
   3:	invokespecial	#13; //Method "<init>":(I)V
   6:	return

public scala.actors.threadpool.LinkedBlockingQueue(int);
  Code:
   Stack=5, Locals=2, Args_size=2
   0:	aload_0
   1:	invokespecial	#14; //Method scala/actors/threadpool/AbstractQueue."<init>":()V
   4:	aload_0
   5:	iconst_0
   6:	putfield	#2; //Field count:I
   9:	aload_0
   10:	new	#15; //class scala/actors/threadpool/LinkedBlockingQueue$SerializableLock
   13:	dup
   14:	aconst_null
   15:	invokespecial	#16; //Method scala/actors/threadpool/LinkedBlockingQueue$SerializableLock."<init>":(Lscala/actors/threadpool/LinkedBlockingQueue$1;)V
   18:	putfield	#5; //Field takeLock:Ljava/lang/Object;
   21:	aload_0
   22:	new	#15; //class scala/actors/threadpool/LinkedBlockingQueue$SerializableLock
   25:	dup
   26:	aconst_null
   27:	invokespecial	#16; //Method scala/actors/threadpool/LinkedBlockingQueue$SerializableLock."<init>":(Lscala/actors/threadpool/LinkedBlockingQueue$1;)V
   30:	putfield	#6; //Field putLock:Ljava/lang/Object;
   33:	iload_1
   34:	ifgt	45
   37:	new	#17; //class java/lang/IllegalArgumentException
   40:	dup
   41:	invokespecial	#18; //Method java/lang/IllegalArgumentException."<init>":()V
   44:	athrow
   45:	aload_0
   46:	iload_1
   47:	putfield	#1; //Field capacity:I
   50:	aload_0
   51:	aload_0
   52:	new	#8; //class scala/actors/threadpool/LinkedBlockingQueue$Node
   55:	dup
   56:	aconst_null
   57:	invokespecial	#9; //Method scala/actors/threadpool/LinkedBlockingQueue$Node."<init>":(Ljava/lang/Object;)V
   60:	dup_x1
   61:	putfield	#4; //Field head:Lscala/actors/threadpool/LinkedBlockingQueue$Node;
   64:	putfield	#3; //Field last:Lscala/actors/threadpool/LinkedBlockingQueue$Node;
   67:	return

public scala.actors.threadpool.LinkedBlockingQueue(java.util.Collection);
  Code:
   Stack=2, Locals=4, Args_size=2
   0:	aload_0
   1:	ldc	#12; //int 2147483647
   3:	invokespecial	#13; //Method "<init>":(I)V
   6:	aload_1
   7:	invokeinterface	#19,  1; //InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
   12:	astore_2
   13:	aload_2
   14:	invokeinterface	#20,  1; //InterfaceMethod java/util/Iterator.hasNext:()Z
   19:	ifeq	38
   22:	aload_2
   23:	invokeinterface	#21,  1; //InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
   28:	astore_3
   29:	aload_0
   30:	aload_3
   31:	invokevirtual	#22; //Method add:(Ljava/lang/Object;)Z
   34:	pop
   35:	goto	13
   38:	return

public int size();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#2; //Field count:I
   4:	ireturn

public int remainingCapacity();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#1; //Field capacity:I
   4:	aload_0
   5:	getfield	#2; //Field count:I
   8:	isub
   9:	ireturn

public void put(java.lang.Object)   throws java.lang.InterruptedException;
  Code:
   Stack=4, Locals=7, Args_size=2
   0:	aload_1
   1:	ifnonnull	12
   4:	new	#23; //class java/lang/NullPointerException
   7:	dup
   8:	invokespecial	#24; //Method java/lang/NullPointerException."<init>":()V
   11:	athrow
   12:	iconst_m1
   13:	istore_2
   14:	aload_0
   15:	getfield	#6; //Field putLock:Ljava/lang/Object;
   18:	dup
   19:	astore_3
   20:	monitorenter
   21:	aload_0
   22:	getfield	#2; //Field count:I
   25:	aload_0
   26:	getfield	#1; //Field capacity:I
   29:	if_icmpne	42
   32:	aload_0
   33:	getfield	#6; //Field putLock:Ljava/lang/Object;
   36:	invokevirtual	#25; //Method java/lang/Object.wait:()V
   39:	goto	21
   42:	goto	57
   45:	astore	4
   47:	aload_0
   48:	getfield	#6; //Field putLock:Ljava/lang/Object;
   51:	invokevirtual	#7; //Method java/lang/Object.notify:()V
   54:	aload	4
   56:	athrow
   57:	aload_0
   58:	aload_1
   59:	invokespecial	#27; //Method insert:(Ljava/lang/Object;)V
   62:	aload_0
   63:	dup
   64:	astore	4
   66:	monitorenter
   67:	aload_0
   68:	dup
   69:	getfield	#2; //Field count:I
   72:	dup_x1
   73:	iconst_1
   74:	iadd
   75:	putfield	#2; //Field count:I
   78:	istore_2
   79:	aload	4
   81:	monitorexit
   82:	goto	93
   85:	astore	5
   87:	aload	4
   89:	monitorexit
   90:	aload	5
   92:	athrow
   93:	iload_2
   94:	iconst_1
   95:	iadd
   96:	aload_0
   97:	getfield	#1; //Field capacity:I
   100:	if_icmpge	110
   103:	aload_0
   104:	getfield	#6; //Field putLock:Ljava/lang/Object;
   107:	invokevirtual	#7; //Method java/lang/Object.notify:()V
   110:	aload_3
   111:	monitorexit
   112:	goto	122
   115:	astore	6
   117:	aload_3
   118:	monitorexit
   119:	aload	6
   121:	athrow
   122:	iload_2
   123:	ifne	130
   126:	aload_0
   127:	invokespecial	#28; //Method signalNotEmpty:()V
   130:	return
  Exception table:
   from   to  target type
    21    42    45   Class java/lang/InterruptedException

    67    82    85   any
    85    90    85   any
    21   112   115   any
   115   119   115   any
  Exceptions: 
   throws java.lang.InterruptedException
public boolean offer(java.lang.Object, long, scala.actors.threadpool.TimeUnit)   throws java.lang.InterruptedException;
  Code:
   Stack=4, Locals=14, Args_size=4
   0:	aload_1
   1:	ifnonnull	12
   4:	new	#23; //class java/lang/NullPointerException
   7:	dup
   8:	invokespecial	#24; //Method java/lang/NullPointerException."<init>":()V
   11:	athrow
   12:	aload	4
   14:	lload_2
   15:	invokevirtual	#29; //Method scala/actors/threadpool/TimeUnit.toNanos:(J)J
   18:	lstore	5
   20:	iconst_m1
   21:	istore	7
   23:	aload_0
   24:	getfield	#6; //Field putLock:Ljava/lang/Object;
   27:	dup
   28:	astore	8
   30:	monitorenter
   31:	invokestatic	#30; //Method scala/actors/threadpool/helpers/Utils.nanoTime:()J
   34:	lload	5
   36:	ladd
   37:	lstore	9
   39:	aload_0
   40:	getfield	#2; //Field count:I
   43:	aload_0
   44:	getfield	#1; //Field capacity:I
   47:	if_icmpge	108
   50:	aload_0
   51:	aload_1
   52:	invokespecial	#27; //Method insert:(Ljava/lang/Object;)V
   55:	aload_0
   56:	dup
   57:	astore	11
   59:	monitorenter
   60:	aload_0
   61:	dup
   62:	getfield	#2; //Field count:I
   65:	dup_x1
   66:	iconst_1
   67:	iadd
   68:	putfield	#2; //Field count:I
   71:	istore	7
   73:	aload	11
   75:	monitorexit
   76:	goto	87
   79:	astore	12
   81:	aload	11
   83:	monitorexit
   84:	aload	12
   86:	athrow
   87:	iload	7
   89:	iconst_1
   90:	iadd
   91:	aload_0
   92:	getfield	#1; //Field capacity:I
   95:	if_icmpge	155
   98:	aload_0
   99:	getfield	#6; //Field putLock:Ljava/lang/Object;
   102:	invokevirtual	#7; //Method java/lang/Object.notify:()V
   105:	goto	155
   108:	lload	5
   110:	lconst_0
   111:	lcmp
   112:	ifgt	120
   115:	iconst_0
   116:	aload	8
   118:	monitorexit
   119:	ireturn
   120:	getstatic	#31; //Field scala/actors/threadpool/TimeUnit.NANOSECONDS:Lscala/actors/threadpool/TimeUnit;
   123:	aload_0
   124:	getfield	#6; //Field putLock:Ljava/lang/Object;
   127:	lload	5
   129:	invokevirtual	#32; //Method scala/actors/threadpool/TimeUnit.timedWait:(Ljava/lang/Object;J)V
   132:	lload	9
   134:	invokestatic	#30; //Method scala/actors/threadpool/helpers/Utils.nanoTime:()J
   137:	lsub
   138:	lstore	5
   140:	goto	39
   143:	astore	11
   145:	aload_0
   146:	getfield	#6; //Field putLock:Ljava/lang/Object;
   149:	invokevirtual	#7; //Method java/lang/Object.notify:()V
   152:	aload	11
   154:	athrow
   155:	aload	8
   157:	monitorexit
   158:	goto	169
   161:	astore	13
   163:	aload	8
   165:	monitorexit
   166:	aload	13
   168:	athrow
   169:	iload	7
   171:	ifne	178
   174:	aload_0
   175:	invokespecial	#28; //Method signalNotEmpty:()V
   178:	iconst_1
   179:	ireturn
  Exception table:
   from   to  target type
    60    76    79   any
    79    84    79   any
   120   140   143   Class java/lang/InterruptedException

    31   119   161   any
   120   158   161   any
   161   166   161   any
  Exceptions: 
   throws java.lang.InterruptedException
public boolean offer(java.lang.Object);
  Code:
   Stack=4, Locals=7, Args_size=2
   0:	aload_1
   1:	ifnonnull	12
   4:	new	#23; //class java/lang/NullPointerException
   7:	dup
   8:	invokespecial	#24; //Method java/lang/NullPointerException."<init>":()V
   11:	athrow
   12:	aload_0
   13:	getfield	#2; //Field count:I
   16:	aload_0
   17:	getfield	#1; //Field capacity:I
   20:	if_icmpne	25
   23:	iconst_0
   24:	ireturn
   25:	iconst_m1
   26:	istore_2
   27:	aload_0
   28:	getfield	#6; //Field putLock:Ljava/lang/Object;
   31:	dup
   32:	astore_3
   33:	monitorenter
   34:	aload_0
   35:	getfield	#2; //Field count:I
   38:	aload_0
   39:	getfield	#1; //Field capacity:I
   42:	if_icmpge	98
   45:	aload_0
   46:	aload_1
   47:	invokespecial	#27; //Method insert:(Ljava/lang/Object;)V
   50:	aload_0
   51:	dup
   52:	astore	4
   54:	monitorenter
   55:	aload_0
   56:	dup
   57:	getfield	#2; //Field count:I
   60:	dup_x1
   61:	iconst_1
   62:	iadd
   63:	putfield	#2; //Field count:I
   66:	istore_2
   67:	aload	4
   69:	monitorexit
   70:	goto	81
   73:	astore	5
   75:	aload	4
   77:	monitorexit
   78:	aload	5
   80:	athrow
   81:	iload_2
   82:	iconst_1
   83:	iadd
   84:	aload_0
   85:	getfield	#1; //Field capacity:I
   88:	if_icmpge	98
   91:	aload_0
   92:	getfield	#6; //Field putLock:Ljava/lang/Object;
   95:	invokevirtual	#7; //Method java/lang/Object.notify:()V
   98:	aload_3
   99:	monitorexit
   100:	goto	110
   103:	astore	6
   105:	aload_3
   106:	monitorexit
   107:	aload	6
   109:	athrow
   110:	iload_2
   111:	ifne	118
   114:	aload_0
   115:	invokespecial	#28; //Method signalNotEmpty:()V
   118:	iload_2
   119:	iflt	126
   122:	iconst_1
   123:	goto	127
   126:	iconst_0
   127:	ireturn
  Exception table:
   from   to  target type
    55    70    73   any
    73    78    73   any
    34   100   103   any
   103   107   103   any

public java.lang.Object take()   throws java.lang.InterruptedException;
  Code:
   Stack=4, Locals=7, Args_size=1
   0:	iconst_m1
   1:	istore_2
   2:	aload_0
   3:	getfield	#5; //Field takeLock:Ljava/lang/Object;
   6:	dup
   7:	astore_3
   8:	monitorenter
   9:	aload_0
   10:	getfield	#2; //Field count:I
   13:	ifne	26
   16:	aload_0
   17:	getfield	#5; //Field takeLock:Ljava/lang/Object;
   20:	invokevirtual	#25; //Method java/lang/Object.wait:()V
   23:	goto	9
   26:	goto	41
   29:	astore	4
   31:	aload_0
   32:	getfield	#5; //Field takeLock:Ljava/lang/Object;
   35:	invokevirtual	#7; //Method java/lang/Object.notify:()V
   38:	aload	4
   40:	athrow
   41:	aload_0
   42:	invokespecial	#33; //Method extract:()Ljava/lang/Object;
   45:	astore_1
   46:	aload_0
   47:	dup
   48:	astore	4
   50:	monitorenter
   51:	aload_0
   52:	dup
   53:	getfield	#2; //Field count:I
   56:	dup_x1
   57:	iconst_1
   58:	isub
   59:	putfield	#2; //Field count:I
   62:	istore_2
   63:	aload	4
   65:	monitorexit
   66:	goto	77
   69:	astore	5
   71:	aload	4
   73:	monitorexit
   74:	aload	5
   76:	athrow
   77:	iload_2
   78:	iconst_1
   79:	if_icmple	89
   82:	aload_0
   83:	getfield	#5; //Field takeLock:Ljava/lang/Object;
   86:	invokevirtual	#7; //Method java/lang/Object.notify:()V
   89:	aload_3
   90:	monitorexit
   91:	goto	101
   94:	astore	6
   96:	aload_3
   97:	monitorexit
   98:	aload	6
   100:	athrow
   101:	iload_2
   102:	aload_0
   103:	getfield	#1; //Field capacity:I
   106:	if_icmpne	113
   109:	aload_0
   110:	invokespecial	#34; //Method signalNotFull:()V
   113:	aload_1
   114:	areturn
  Exception table:
   from   to  target type
     9    26    29   Class java/lang/InterruptedException

    51    66    69   any
    69    74    69   any
     9    91    94   any
    94    98    94   any
  Exceptions: 
   throws java.lang.InterruptedException
public java.lang.Object poll(long, scala.actors.threadpool.TimeUnit)   throws java.lang.InterruptedException;
  Code:
   Stack=4, Locals=14, Args_size=3
   0:	aconst_null
   1:	astore	4
   3:	iconst_m1
   4:	istore	5
   6:	aload_3
   7:	lload_1
   8:	invokevirtual	#29; //Method scala/actors/threadpool/TimeUnit.toNanos:(J)J
   11:	lstore	6
   13:	aload_0
   14:	getfield	#5; //Field takeLock:Ljava/lang/Object;
   17:	dup
   18:	astore	8
   20:	monitorenter
   21:	invokestatic	#30; //Method scala/actors/threadpool/helpers/Utils.nanoTime:()J
   24:	lload	6
   26:	ladd
   27:	lstore	9
   29:	aload_0
   30:	getfield	#2; //Field count:I
   33:	ifle	90
   36:	aload_0
   37:	invokespecial	#33; //Method extract:()Ljava/lang/Object;
   40:	astore	4
   42:	aload_0
   43:	dup
   44:	astore	11
   46:	monitorenter
   47:	aload_0
   48:	dup
   49:	getfield	#2; //Field count:I
   52:	dup_x1
   53:	iconst_1
   54:	isub
   55:	putfield	#2; //Field count:I
   58:	istore	5
   60:	aload	11
   62:	monitorexit
   63:	goto	74
   66:	astore	12
   68:	aload	11
   70:	monitorexit
   71:	aload	12
   73:	athrow
   74:	iload	5
   76:	iconst_1
   77:	if_icmple	137
   80:	aload_0
   81:	getfield	#5; //Field takeLock:Ljava/lang/Object;
   84:	invokevirtual	#7; //Method java/lang/Object.notify:()V
   87:	goto	137
   90:	lload	6
   92:	lconst_0
   93:	lcmp
   94:	ifgt	102
   97:	aconst_null
   98:	aload	8
   100:	monitorexit
   101:	areturn
   102:	getstatic	#31; //Field scala/actors/threadpool/TimeUnit.NANOSECONDS:Lscala/actors/threadpool/TimeUnit;
   105:	aload_0
   106:	getfield	#5; //Field takeLock:Ljava/lang/Object;
   109:	lload	6
   111:	invokevirtual	#32; //Method scala/actors/threadpool/TimeUnit.timedWait:(Ljava/lang/Object;J)V
   114:	lload	9
   116:	invokestatic	#30; //Method scala/actors/threadpool/helpers/Utils.nanoTime:()J
   119:	lsub
   120:	lstore	6
   122:	goto	29
   125:	astore	11
   127:	aload_0
   128:	getfield	#5; //Field takeLock:Ljava/lang/Object;
   131:	invokevirtual	#7; //Method java/lang/Object.notify:()V
   134:	aload	11
   136:	athrow
   137:	aload	8
   139:	monitorexit
   140:	goto	151
   143:	astore	13
   145:	aload	8
   147:	monitorexit
   148:	aload	13
   150:	athrow
   151:	iload	5
   153:	aload_0
   154:	getfield	#1; //Field capacity:I
   157:	if_icmpne	164
   160:	aload_0
   161:	invokespecial	#34; //Method signalNotFull:()V
   164:	aload	4
   166:	areturn
  Exception table:
   from   to  target type
    47    63    66   any
    66    71    66   any
   102   122   125   Class java/lang/InterruptedException

    21   101   143   any
   102   140   143   any
   143   148   143   any
  Exceptions: 
   throws java.lang.InterruptedException
public java.lang.Object poll();
  Code:
   Stack=4, Locals=7, Args_size=1
   0:	aload_0
   1:	getfield	#2; //Field count:I
   4:	ifne	9
   7:	aconst_null
   8:	areturn
   9:	aconst_null
   10:	astore_1
   11:	iconst_m1
   12:	istore_2
   13:	aload_0
   14:	getfield	#5; //Field takeLock:Ljava/lang/Object;
   17:	dup
   18:	astore_3
   19:	monitorenter
   20:	aload_0
   21:	getfield	#2; //Field count:I
   24:	ifle	75
   27:	aload_0
   28:	invokespecial	#33; //Method extract:()Ljava/lang/Object;
   31:	astore_1
   32:	aload_0
   33:	dup
   34:	astore	4
   36:	monitorenter
   37:	aload_0
   38:	dup
   39:	getfield	#2; //Field count:I
   42:	dup_x1
   43:	iconst_1
   44:	isub
   45:	putfield	#2; //Field count:I
   48:	istore_2
   49:	aload	4
   51:	monitorexit
   52:	goto	63
   55:	astore	5
   57:	aload	4
   59:	monitorexit
   60:	aload	5
   62:	athrow
   63:	iload_2
   64:	iconst_1
   65:	if_icmple	75
   68:	aload_0
   69:	getfield	#5; //Field takeLock:Ljava/lang/Object;
   72:	invokevirtual	#7; //Method java/lang/Object.notify:()V
   75:	aload_3
   76:	monitorexit
   77:	goto	87
   80:	astore	6
   82:	aload_3
   83:	monitorexit
   84:	aload	6
   86:	athrow
   87:	iload_2
   88:	aload_0
   89:	getfield	#1; //Field capacity:I
   92:	if_icmpne	99
   95:	aload_0
   96:	invokespecial	#34; //Method signalNotFull:()V
   99:	aload_1
   100:	areturn
  Exception table:
   from   to  target type
    37    52    55   any
    55    60    55   any
    20    77    80   any
    80    84    80   any

public java.lang.Object peek();
  Code:
   Stack=2, Locals=4, Args_size=1
   0:	aload_0
   1:	getfield	#2; //Field count:I
   4:	ifne	9
   7:	aconst_null
   8:	areturn
   9:	aload_0
   10:	getfield	#5; //Field takeLock:Ljava/lang/Object;
   13:	dup
   14:	astore_1
   15:	monitorenter
   16:	aload_0
   17:	getfield	#4; //Field head:Lscala/actors/threadpool/LinkedBlockingQueue$Node;
   20:	getfield	#10; //Field scala/actors/threadpool/LinkedBlockingQueue$Node.next:Lscala/actors/threadpool/LinkedBlockingQueue$Node;
   23:	astore_2
   24:	aload_2
   25:	ifnonnull	32
   28:	aconst_null
   29:	aload_1
   30:	monitorexit
   31:	areturn
   32:	aload_2
   33:	getfield	#11; //Field scala/actors/threadpool/LinkedBlockingQueue$Node.item:Ljava/lang/Object;
   36:	aload_1
   37:	monitorexit
   38:	areturn
   39:	astore_3
   40:	aload_1
   41:	monitorexit
   42:	aload_3
   43:	athrow
  Exception table:
   from   to  target type
    16    31    39   any
    32    38    39   any
    39    42    39   any

public boolean remove(java.lang.Object);
  Code:
   Stack=4, Locals=11, Args_size=2
   0:	aload_1
   1:	ifnonnull	6
   4:	iconst_0
   5:	ireturn
   6:	iconst_0
   7:	istore_2
   8:	aload_0
   9:	getfield	#6; //Field putLock:Ljava/lang/Object;
   12:	dup
   13:	astore_3
   14:	monitorenter
   15:	aload_0
   16:	getfield	#5; //Field takeLock:Ljava/lang/Object;
   19:	dup
   20:	astore	4
   22:	monitorenter
   23:	aload_0
   24:	getfield	#4; //Field head:Lscala/actors/threadpool/LinkedBlockingQueue$Node;
   27:	astore	5
   29:	aload_0
   30:	getfield	#4; //Field head:Lscala/actors/threadpool/LinkedBlockingQueue$Node;
   33:	getfield	#10; //Field scala/actors/threadpool/LinkedBlockingQueue$Node.next:Lscala/actors/threadpool/LinkedBlockingQueue$Node;
   36:	astore	6
   38:	aload	6
   40:	ifnull	74
   43:	aload_1
   44:	aload	6
   46:	getfield	#11; //Field scala/actors/threadpool/LinkedBlockingQueue$Node.item:Ljava/lang/Object;
   49:	invokevirtual	#35; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   52:	ifeq	60
   55:	iconst_1
   56:	istore_2
   57:	goto	74
   60:	aload	6
   62:	astore	5
   64:	aload	6
   66:	getfield	#10; //Field scala/actors/threadpool/LinkedBlockingQueue$Node.next:Lscala/actors/threadpool/LinkedBlockingQueue$Node;
   69:	astore	6
   71:	goto	38
   74:	iload_2
   75:	ifeq	153
   78:	aload	6
   80:	aconst_null
   81:	putfield	#11; //Field scala/actors/threadpool/LinkedBlockingQueue$Node.item:Ljava/lang/Object;
   84:	aload	5
   86:	aload	6
   88:	getfield	#10; //Field scala/actors/threadpool/LinkedBlockingQueue$Node.next:Lscala/actors/threadpool/LinkedBlockingQueue$Node;
   91:	putfield	#10; //Field scala/actors/threadpool/LinkedBlockingQueue$Node.next:Lscala/actors/threadpool/LinkedBlockingQueue$Node;
   94:	aload_0
   95:	getfield	#3; //Field last:Lscala/actors/threadpool/LinkedBlockingQueue$Node;
   98:	aload	6
   100:	if_acmpne	109
   103:	aload_0
   104:	aload	5
   106:	putfield	#3; //Field last:Lscala/actors/threadpool/LinkedBlockingQueue$Node;
   109:	aload_0
   110:	dup
   111:	astore	7
   113:	monitorenter
   114:	aload_0
   115:	dup
   116:	getfield	#2; //Field count:I
   119:	dup_x1
   120:	iconst_1
   121:	isub
   122:	putfield	#2; //Field count:I
   125:	aload_0
   126:	getfield	#1; //Field capacity:I
   129:	if_icmpne	139
   132:	aload_0
   133:	getfield	#6; //Field putLock:Ljava/lang/Object;
   136:	invokevirtual	#36; //Method java/lang/Object.notifyAll:()V
   139:	aload	7
   141:	monitorexit
   142:	goto	153
   145:	astore	8
   147:	aload	7
   149:	monitorexit
   150:	aload	8
   152:	athrow
   153:	aload	4
   155:	monitorexit
   156:	goto	167
   159:	astore	9
   161:	aload	4
   163:	monitorexit
   164:	aload	9
   166:	athrow
   167:	aload_3
   168:	monitorexit
   169:	goto	179
   172:	astore	10
   174:	aload_3
   175:	monitorexit
   176:	aload	10
   178:	athrow
   179:	iload_2
   180:	ireturn
  Exception table:
   from   to  target type
   114   142   145   any
   145   150   145   any
    23   156   159   any
   159   164   159   any
    15   169   172   any
   172   176   172   any

public java.lang.Object[] toArray();
  Code:
   Stack=3, Locals=9, Args_size=1
   0:	aload_0
   1:	getfield	#6; //Field putLock:Ljava/lang/Object;
   4:	dup
   5:	astore_1
   6:	monitorenter
   7:	aload_0
   8:	getfield	#5; //Field takeLock:Ljava/lang/Object;
   11:	dup
   12:	astore_2
   13:	monitorenter
   14:	aload_0
   15:	getfield	#2; //Field count:I
   18:	istore_3
   19:	iload_3
   20:	anewarray	#37; //class java/lang/Object
   23:	astore	4
   25:	iconst_0
   26:	istore	5
   28:	aload_0
   29:	getfield	#4; //Field head:Lscala/actors/threadpool/LinkedBlockingQueue$Node;
   32:	getfield	#10; //Field scala/actors/threadpool/LinkedBlockingQueue$Node.next:Lscala/actors/threadpool/LinkedBlockingQueue$Node;
   35:	astore	6
   37:	aload	6
   39:	ifnull	65
   42:	aload	4
   44:	iload	5
   46:	iinc	5, 1
   49:	aload	6
   51:	getfield	#11; //Field scala/actors/threadpool/LinkedBlockingQueue$Node.item:Ljava/lang/Object;
   54:	aastore
   55:	aload	6
   57:	getfield	#10; //Field scala/actors/threadpool/LinkedBlockingQueue$Node.next:Lscala/actors/threadpool/LinkedBlockingQueue$Node;
   60:	astore	6
   62:	goto	37
   65:	aload	4
   67:	aload_2
   68:	monitorexit
   69:	aload_1
   70:	monitorexit
   71:	areturn
   72:	astore	7
   74:	aload_2
   75:	monitorexit
   76:	aload	7
   78:	athrow
   79:	astore	8
   81:	aload_1
   82:	monitorexit
   83:	aload	8
   85:	athrow
  Exception table:
   from   to  target type
    14    69    72   any
    72    76    72   any
     7    71    79   any
    72    83    79   any

public java.lang.Object[] toArray(java.lang.Object[]);
  Code:
   Stack=3, Locals=9, Args_size=2
   0:	aload_0
   1:	getfield	#6; //Field putLock:Ljava/lang/Object;
   4:	dup
   5:	astore_2
   6:	monitorenter
   7:	aload_0
   8:	getfield	#5; //Field takeLock:Ljava/lang/Object;
   11:	dup
   12:	astore_3
   13:	monitorenter
   14:	aload_0
   15:	getfield	#2; //Field count:I
   18:	istore	4
   20:	aload_1
   21:	arraylength
   22:	iload	4
   24:	if_icmpge	46
   27:	aload_1
   28:	invokevirtual	#38; //Method java/lang/Object.getClass:()Ljava/lang/Class;
   31:	invokevirtual	#39; //Method java/lang/Class.getComponentType:()Ljava/lang/Class;
   34:	iload	4
   36:	invokestatic	#40; //Method java/lang/reflect/Array.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;
   39:	checkcast	#41; //class "[Ljava/lang/Object;"
   42:	checkcast	#41; //class "[Ljava/lang/Object;"
   45:	astore_1
   46:	iconst_0
   47:	istore	5
   49:	aload_0
   50:	getfield	#4; //Field head:Lscala/actors/threadpool/LinkedBlockingQueue$Node;
   53:	getfield	#10; //Field scala/actors/threadpool/LinkedBlockingQueue$Node.next:Lscala/actors/threadpool/LinkedBlockingQueue$Node;
   56:	astore	6
   58:	aload	6
   60:	ifnull	85
   63:	aload_1
   64:	iload	5
   66:	iinc	5, 1
   69:	aload	6
   71:	getfield	#11; //Field scala/actors/threadpool/LinkedBlockingQueue$Node.item:Ljava/lang/Object;
   74:	aastore
   75:	aload	6
   77:	getfield	#10; //Field scala/actors/threadpool/LinkedBlockingQueue$Node.next:Lscala/actors/threadpool/LinkedBlockingQueue$Node;
   80:	astore	6
   82:	goto	58
   85:	aload_1
   86:	arraylength
   87:	iload	5
   89:	if_icmple	97
   92:	aload_1
   93:	iload	5
   95:	aconst_null
   96:	aastore
   97:	aload_1
   98:	aload_3
   99:	monitorexit
   100:	aload_2
   101:	monitorexit
   102:	areturn
   103:	astore	7
   105:	aload_3
   106:	monitorexit
   107:	aload	7
   109:	athrow
   110:	astore	8
   112:	aload_2
   113:	monitorexit
   114:	aload	8
   116:	athrow
  Exception table:
   from   to  target type
    14   100   103   any
   103   107   103   any
     7   102   110   any
   103   114   110   any

public java.lang.String toString();
  Code:
   Stack=2, Locals=5, Args_size=1
   0:	aload_0
   1:	getfield	#6; //Field putLock:Ljava/lang/Object;
   4:	dup
   5:	astore_1
   6:	monitorenter
   7:	aload_0
   8:	getfield	#5; //Field takeLock:Ljava/lang/Object;
   11:	dup
   12:	astore_2
   13:	monitorenter
   14:	aload_0
   15:	invokespecial	#42; //Method scala/actors/threadpool/AbstractQueue.toString:()Ljava/lang/String;
   18:	aload_2
   19:	monitorexit
   20:	aload_1
   21:	monitorexit
   22:	areturn
   23:	astore_3
   24:	aload_2
   25:	monitorexit
   26:	aload_3
   27:	athrow
   28:	astore	4
   30:	aload_1
   31:	monitorexit
   32:	aload	4
   34:	athrow
  Exception table:
   from   to  target type
    14    20    23   any
    23    26    23   any
     7    22    28   any
    23    32    28   any

public void clear();
  Code:
   Stack=2, Locals=8, Args_size=1
   0:	aload_0
   1:	getfield	#6; //Field putLock:Ljava/lang/Object;
   4:	dup
   5:	astore_1
   6:	monitorenter
   7:	aload_0
   8:	getfield	#5; //Field takeLock:Ljava/lang/Object;
   11:	dup
   12:	astore_2
   13:	monitorenter
   14:	aload_0
   15:	getfield	#4; //Field head:Lscala/actors/threadpool/LinkedBlockingQueue$Node;
   18:	aconst_null
   19:	putfield	#10; //Field scala/actors/threadpool/LinkedBlockingQueue$Node.next:Lscala/actors/threadpool/LinkedBlockingQueue$Node;
   22:	getstatic	#43; //Field $assertionsDisabled:Z
   25:	ifne	46
   28:	aload_0
   29:	getfield	#4; //Field head:Lscala/actors/threadpool/LinkedBlockingQueue$Node;
   32:	getfield	#11; //Field scala/actors/threadpool/LinkedBlockingQueue$Node.item:Ljava/lang/Object;
   35:	ifnull	46
   38:	new	#44; //class java/lang/AssertionError
   41:	dup
   42:	invokespecial	#45; //Method java/lang/AssertionError."<init>":()V
   45:	athrow
   46:	aload_0
   47:	aload_0
   48:	getfield	#4; //Field head:Lscala/actors/threadpool/LinkedBlockingQueue$Node;
   51:	putfield	#3; //Field last:Lscala/actors/threadpool/LinkedBlockingQueue$Node;
   54:	aload_0
   55:	dup
   56:	astore	4
   58:	monitorenter
   59:	aload_0
   60:	getfield	#2; //Field count:I
   63:	istore_3
   64:	aload_0
   65:	iconst_0
   66:	putfield	#2; //Field count:I
   69:	aload	4
   71:	monitorexit
   72:	goto	83
   75:	astore	5
   77:	aload	4
   79:	monitorexit
   80:	aload	5
   82:	athrow
   83:	iload_3
   84:	aload_0
   85:	getfield	#1; //Field capacity:I
   88:	if_icmpne	98
   91:	aload_0
   92:	getfield	#6; //Field putLock:Ljava/lang/Object;
   95:	invokevirtual	#36; //Method java/lang/Object.notifyAll:()V
   98:	aload_2
   99:	monitorexit
   100:	goto	110
   103:	astore	6
   105:	aload_2
   106:	monitorexit
   107:	aload	6
   109:	athrow
   110:	aload_1
   111:	monitorexit
   112:	goto	122
   115:	astore	7
   117:	aload_1
   118:	monitorexit
   119:	aload	7
   121:	athrow
   122:	return
  Exception table:
   from   to  target type
    59    72    75   any
    75    80    75   any
    14   100   103   any
   103   107   103   any
     7   112   115   any
   115   119   115   any

public int drainTo(java.util.Collection);
  Code:
   Stack=2, Locals=10, Args_size=2
   0:	aload_1
   1:	ifnonnull	12
   4:	new	#23; //class java/lang/NullPointerException
   7:	dup
   8:	invokespecial	#24; //Method java/lang/NullPointerException."<init>":()V
   11:	athrow
   12:	aload_1
   13:	aload_0
   14:	if_acmpne	25
   17:	new	#17; //class java/lang/IllegalArgumentException
   20:	dup
   21:	invokespecial	#18; //Method java/lang/IllegalArgumentException."<init>":()V
   24:	athrow
   25:	aload_0
   26:	getfield	#6; //Field putLock:Ljava/lang/Object;
   29:	dup
   30:	astore_3
   31:	monitorenter
   32:	aload_0
   33:	getfield	#5; //Field takeLock:Ljava/lang/Object;
   36:	dup
   37:	astore	4
   39:	monitorenter
   40:	aload_0
   41:	getfield	#4; //Field head:Lscala/actors/threadpool/LinkedBlockingQueue$Node;
   44:	getfield	#10; //Field scala/actors/threadpool/LinkedBlockingQueue$Node.next:Lscala/actors/threadpool/LinkedBlockingQueue$Node;
   47:	astore_2
   48:	aload_0
   49:	getfield	#4; //Field head:Lscala/actors/threadpool/LinkedBlockingQueue$Node;
   52:	aconst_null
   53:	putfield	#10; //Field scala/actors/threadpool/LinkedBlockingQueue$Node.next:Lscala/actors/threadpool/LinkedBlockingQueue$Node;
   56:	getstatic	#43; //Field $assertionsDisabled:Z
   59:	ifne	80
   62:	aload_0
   63:	getfield	#4; //Field head:Lscala/actors/threadpool/LinkedBlockingQueue$Node;
   66:	getfield	#11; //Field scala/actors/threadpool/LinkedBlockingQueue$Node.item:Ljava/lang/Object;
   69:	ifnull	80
   72:	new	#44; //class java/lang/AssertionError
   75:	dup
   76:	invokespecial	#45; //Method java/lang/AssertionError."<init>":()V
   79:	athrow
   80:	aload_0
   81:	aload_0
   82:	getfield	#4; //Field head:Lscala/actors/threadpool/LinkedBlockingQueue$Node;
   85:	putfield	#3; //Field last:Lscala/actors/threadpool/LinkedBlockingQueue$Node;
   88:	aload_0
   89:	dup
   90:	astore	6
   92:	monitorenter
   93:	aload_0
   94:	getfield	#2; //Field count:I
   97:	istore	5
   99:	aload_0
   100:	iconst_0
   101:	putfield	#2; //Field count:I
   104:	aload	6
   106:	monitorexit
   107:	goto	118
   110:	astore	7
   112:	aload	6
   114:	monitorexit
   115:	aload	7
   117:	athrow
   118:	iload	5
   120:	aload_0
   121:	getfield	#1; //Field capacity:I
   124:	if_icmpne	134
   127:	aload_0
   128:	getfield	#6; //Field putLock:Ljava/lang/Object;
   131:	invokevirtual	#36; //Method java/lang/Object.notifyAll:()V
   134:	aload	4
   136:	monitorexit
   137:	goto	148
   140:	astore	8
   142:	aload	4
   144:	monitorexit
   145:	aload	8
   147:	athrow
   148:	aload_3
   149:	monitorexit
   150:	goto	160
   153:	astore	9
   155:	aload_3
   156:	monitorexit
   157:	aload	9
   159:	athrow
   160:	iconst_0
   161:	istore_3
   162:	aload_2
   163:	astore	4
   165:	aload	4
   167:	ifnull	201
   170:	aload_1
   171:	aload	4
   173:	getfield	#11; //Field scala/actors/threadpool/LinkedBlockingQueue$Node.item:Ljava/lang/Object;
   176:	invokeinterface	#46,  2; //InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
   181:	pop
   182:	aload	4
   184:	aconst_null
   185:	putfield	#11; //Field scala/actors/threadpool/LinkedBlockingQueue$Node.item:Ljava/lang/Object;
   188:	iinc	3, 1
   191:	aload	4
   193:	getfield	#10; //Field scala/actors/threadpool/LinkedBlockingQueue$Node.next:Lscala/actors/threadpool/LinkedBlockingQueue$Node;
   196:	astore	4
   198:	goto	165
   201:	iload_3
   202:	ireturn
  Exception table:
   from   to  target type
    93   107   110   any
   110   115   110   any
    40   137   140   any
   140   145   140   any
    32   150   153   any
   153   157   153   any

public int drainTo(java.util.Collection, int);
  Code:
   Stack=3, Locals=12, Args_size=3
   0:	aload_1
   1:	ifnonnull	12
   4:	new	#23; //class java/lang/NullPointerException
   7:	dup
   8:	invokespecial	#24; //Method java/lang/NullPointerException."<init>":()V
   11:	athrow
   12:	aload_1
   13:	aload_0
   14:	if_acmpne	25
   17:	new	#17; //class java/lang/IllegalArgumentException
   20:	dup
   21:	invokespecial	#18; //Method java/lang/IllegalArgumentException."<init>":()V
   24:	athrow
   25:	aload_0
   26:	getfield	#6; //Field putLock:Ljava/lang/Object;
   29:	dup
   30:	astore_3
   31:	monitorenter
   32:	aload_0
   33:	getfield	#5; //Field takeLock:Ljava/lang/Object;
   36:	dup
   37:	astore	4
   39:	monitorenter
   40:	iconst_0
   41:	istore	5
   43:	aload_0
   44:	getfield	#4; //Field head:Lscala/actors/threadpool/LinkedBlockingQueue$Node;
   47:	getfield	#10; //Field scala/actors/threadpool/LinkedBlockingQueue$Node.next:Lscala/actors/threadpool/LinkedBlockingQueue$Node;
   50:	astore	6
   52:	aload	6
   54:	ifnull	94
   57:	iload	5
   59:	iload_2
   60:	if_icmpge	94
   63:	aload_1
   64:	aload	6
   66:	getfield	#11; //Field scala/actors/threadpool/LinkedBlockingQueue$Node.item:Ljava/lang/Object;
   69:	invokeinterface	#46,  2; //InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
   74:	pop
   75:	aload	6
   77:	aconst_null
   78:	putfield	#11; //Field scala/actors/threadpool/LinkedBlockingQueue$Node.item:Ljava/lang/Object;
   81:	aload	6
   83:	getfield	#10; //Field scala/actors/threadpool/LinkedBlockingQueue$Node.next:Lscala/actors/threadpool/LinkedBlockingQueue$Node;
   86:	astore	6
   88:	iinc	5, 1
   91:	goto	52
   94:	iload	5
   96:	ifeq	197
   99:	aload_0
   100:	getfield	#4; //Field head:Lscala/actors/threadpool/LinkedBlockingQueue$Node;
   103:	aload	6
   105:	putfield	#10; //Field scala/actors/threadpool/LinkedBlockingQueue$Node.next:Lscala/actors/threadpool/LinkedBlockingQueue$Node;
   108:	getstatic	#43; //Field $assertionsDisabled:Z
   111:	ifne	132
   114:	aload_0
   115:	getfield	#4; //Field head:Lscala/actors/threadpool/LinkedBlockingQueue$Node;
   118:	getfield	#11; //Field scala/actors/threadpool/LinkedBlockingQueue$Node.item:Ljava/lang/Object;
   121:	ifnull	132
   124:	new	#44; //class java/lang/AssertionError
   127:	dup
   128:	invokespecial	#45; //Method java/lang/AssertionError."<init>":()V
   131:	athrow
   132:	aload	6
   134:	ifnonnull	145
   137:	aload_0
   138:	aload_0
   139:	getfield	#4; //Field head:Lscala/actors/threadpool/LinkedBlockingQueue$Node;
   142:	putfield	#3; //Field last:Lscala/actors/threadpool/LinkedBlockingQueue$Node;
   145:	aload_0
   146:	dup
   147:	astore	8
   149:	monitorenter
   150:	aload_0
   151:	getfield	#2; //Field count:I
   154:	istore	7
   156:	aload_0
   157:	dup
   158:	getfield	#2; //Field count:I
   161:	iload	5
   163:	isub
   164:	putfield	#2; //Field count:I
   167:	aload	8
   169:	monitorexit
   170:	goto	181
   173:	astore	9
   175:	aload	8
   177:	monitorexit
   178:	aload	9
   180:	athrow
   181:	iload	7
   183:	aload_0
   184:	getfield	#1; //Field capacity:I
   187:	if_icmpne	197
   190:	aload_0
   191:	getfield	#6; //Field putLock:Ljava/lang/Object;
   194:	invokevirtual	#36; //Method java/lang/Object.notifyAll:()V
   197:	iload	5
   199:	aload	4
   201:	monitorexit
   202:	aload_3
   203:	monitorexit
   204:	ireturn
   205:	astore	10
   207:	aload	4
   209:	monitorexit
   210:	aload	10
   212:	athrow
   213:	astore	11
   215:	aload_3
   216:	monitorexit
   217:	aload	11
   219:	athrow
  Exception table:
   from   to  target type
   150   170   173   any
   173   178   173   any
    40   202   205   any
   205   210   205   any
    32   204   213   any
   205   217   213   any

public java.util.Iterator iterator();
  Code:
   Stack=3, Locals=1, Args_size=1
   0:	new	#47; //class scala/actors/threadpool/LinkedBlockingQueue$Itr
   3:	dup
   4:	aload_0
   5:	invokespecial	#48; //Method scala/actors/threadpool/LinkedBlockingQueue$Itr."<init>":(Lscala/actors/threadpool/LinkedBlockingQueue;)V
   8:	areturn

static java.lang.Object access$100(scala.actors.threadpool.LinkedBlockingQueue);
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#6; //Field putLock:Ljava/lang/Object;
   4:	areturn

static java.lang.Object access$200(scala.actors.threadpool.LinkedBlockingQueue);
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#5; //Field takeLock:Ljava/lang/Object;
   4:	areturn

static scala.actors.threadpool.LinkedBlockingQueue$Node access$300(scala.actors.threadpool.LinkedBlockingQueue);
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#4; //Field head:Lscala/actors/threadpool/LinkedBlockingQueue$Node;
   4:	areturn

static scala.actors.threadpool.LinkedBlockingQueue$Node access$400(scala.actors.threadpool.LinkedBlockingQueue);
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#3; //Field last:Lscala/actors/threadpool/LinkedBlockingQueue$Node;
   4:	areturn

static scala.actors.threadpool.LinkedBlockingQueue$Node access$402(scala.actors.threadpool.LinkedBlockingQueue, scala.actors.threadpool.LinkedBlockingQueue$Node);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	dup_x1
   3:	putfield	#3; //Field last:Lscala/actors/threadpool/LinkedBlockingQueue$Node;
   6:	areturn

static int access$510(scala.actors.threadpool.LinkedBlockingQueue);
  Code:
   Stack=4, Locals=1, Args_size=1
   0:	aload_0
   1:	dup
   2:	getfield	#2; //Field count:I
   5:	dup_x1
   6:	iconst_1
   7:	isub
   8:	putfield	#2; //Field count:I
   11:	ireturn

static int access$600(scala.actors.threadpool.LinkedBlockingQueue);
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#1; //Field capacity:I
   4:	ireturn

static {};
  Code:
   Stack=1, Locals=0, Args_size=0
   0:	ldc_w	#53; //class scala/actors/threadpool/LinkedBlockingQueue
   3:	invokevirtual	#54; //Method java/lang/Class.desiredAssertionStatus:()Z
   6:	ifne	13
   9:	iconst_1
   10:	goto	14
   13:	iconst_0
   14:	putstatic	#43; //Field $assertionsDisabled:Z
   17:	return

}

