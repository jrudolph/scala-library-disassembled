class scala.actors.threadpool.Executors$PrivilegedThreadFactory$1$1 extends java.lang.Object implements java.security.PrivilegedAction
  EnclosingMethod: length = 0x4
   00 0D 00 17 
  InnerClass: 
   #13; //class scala/actors/threadpool/Executors$PrivilegedThreadFactory$1
   #9; //class scala/actors/threadpool/Executors$PrivilegedThreadFactory$1$1
   #43= #29 of #45; //PrivilegedThreadFactory=class scala/actors/threadpool/Executors$PrivilegedThreadFactory of class scala/actors/threadpool/Executors
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Field	#9.#24;	//  scala/actors/threadpool/Executors$PrivilegedThreadFactory$1$1.this$1:Lscala/actors/threadpool/Executors$PrivilegedThreadFactory$1;
const #2 = Method	#10.#25;	//  java/lang/Object."<init>":()V
const #3 = Method	#26.#27;	//  java/lang/Thread.currentThread:()Ljava/lang/Thread;
const #4 = Field	#13.#28;	//  scala/actors/threadpool/Executors$PrivilegedThreadFactory$1.this$0:Lscala/actors/threadpool/Executors$PrivilegedThreadFactory;
const #5 = Method	#29.#30;	//  scala/actors/threadpool/Executors$PrivilegedThreadFactory.access$700:(Lscala/actors/threadpool/Executors$PrivilegedThreadFactory;)Ljava/lang/ClassLoader;
const #6 = Method	#26.#31;	//  java/lang/Thread.setContextClassLoader:(Ljava/lang/ClassLoader;)V
const #7 = Field	#13.#32;	//  scala/actors/threadpool/Executors$PrivilegedThreadFactory$1.val$r:Ljava/lang/Runnable;
const #8 = InterfaceMethod	#33.#23;	//  java/lang/Runnable.run:()V
const #9 = class	#34;	//  scala/actors/threadpool/Executors$PrivilegedThreadFactory$1$1
const #10 = class	#35;	//  java/lang/Object
const #11 = class	#36;	//  java/security/PrivilegedAction
const #12 = Asciz	this$1;
const #13 = class	#37;	//  scala/actors/threadpool/Executors$PrivilegedThreadFactory$1
const #14 = Asciz	;
const #15 = Asciz	InnerClasses;
const #16 = Asciz	Lscala/actors/threadpool/Executors$PrivilegedThreadFactory$1;;
const #17 = Asciz	<init>;
const #18 = Asciz	(Lscala/actors/threadpool/Executors$PrivilegedThreadFactory$1;)V;
const #19 = Asciz	Code;
const #20 = Asciz	run;
const #21 = Asciz	()Ljava/lang/Object;;
const #22 = Asciz	EnclosingMethod;
const #23 = NameAndType	#20:#38;//  run:()V
const #24 = NameAndType	#12:#16;//  this$1:Lscala/actors/threadpool/Executors$PrivilegedThreadFactory$1;
const #25 = NameAndType	#17:#38;//  "<init>":()V
const #26 = class	#39;	//  java/lang/Thread
const #27 = NameAndType	#40:#41;//  currentThread:()Ljava/lang/Thread;
const #28 = NameAndType	#42:#44;//  this$0:Lscala/actors/threadpool/Executors$PrivilegedThreadFactory;
const #29 = class	#46;	//  scala/actors/threadpool/Executors$PrivilegedThreadFactory
const #30 = NameAndType	#47:#48;//  access$700:(Lscala/actors/threadpool/Executors$PrivilegedThreadFactory;)Ljava/lang/ClassLoader;
const #31 = NameAndType	#49:#50;//  setContextClassLoader:(Ljava/lang/ClassLoader;)V
const #32 = NameAndType	#51:#52;//  val$r:Ljava/lang/Runnable;
const #33 = class	#53;	//  java/lang/Runnable
const #34 = Asciz	scala/actors/threadpool/Executors$PrivilegedThreadFactory$1$1;
const #35 = Asciz	java/lang/Object;
const #36 = Asciz	java/security/PrivilegedAction;
const #37 = Asciz	scala/actors/threadpool/Executors$PrivilegedThreadFactory$1;
const #38 = Asciz	()V;
const #39 = Asciz	java/lang/Thread;
const #40 = Asciz	currentThread;
const #41 = Asciz	()Ljava/lang/Thread;;
const #42 = Asciz	this$0;
const #43 = Asciz	PrivilegedThreadFactory;
const #44 = Asciz	Lscala/actors/threadpool/Executors$PrivilegedThreadFactory;;
const #45 = class	#54;	//  scala/actors/threadpool/Executors
const #46 = Asciz	scala/actors/threadpool/Executors$PrivilegedThreadFactory;
const #47 = Asciz	access$700;
const #48 = Asciz	(Lscala/actors/threadpool/Executors$PrivilegedThreadFactory;)Ljava/lang/ClassLoader;;
const #49 = Asciz	setContextClassLoader;
const #50 = Asciz	(Ljava/lang/ClassLoader;)V;
const #51 = Asciz	val$r;
const #52 = Asciz	Ljava/lang/Runnable;;
const #53 = Asciz	java/lang/Runnable;
const #54 = Asciz	scala/actors/threadpool/Executors;

{
final scala.actors.threadpool.Executors$PrivilegedThreadFactory$1 this$1;

scala.actors.threadpool.Executors$PrivilegedThreadFactory$1$1(scala.actors.threadpool.Executors$PrivilegedThreadFactory$1);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	putfield	#1; //Field this$1:Lscala/actors/threadpool/Executors$PrivilegedThreadFactory$1;
   5:	aload_0
   6:	invokespecial	#2; //Method java/lang/Object."<init>":()V
   9:	return

public java.lang.Object run();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	invokestatic	#3; //Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
   3:	aload_0
   4:	getfield	#1; //Field this$1:Lscala/actors/threadpool/Executors$PrivilegedThreadFactory$1;
   7:	getfield	#4; //Field scala/actors/threadpool/Executors$PrivilegedThreadFactory$1.this$0:Lscala/actors/threadpool/Executors$PrivilegedThreadFactory;
   10:	invokestatic	#5; //Method scala/actors/threadpool/Executors$PrivilegedThreadFactory.access$700:(Lscala/actors/threadpool/Executors$PrivilegedThreadFactory;)Ljava/lang/ClassLoader;
   13:	invokevirtual	#6; //Method java/lang/Thread.setContextClassLoader:(Ljava/lang/ClassLoader;)V
   16:	aload_0
   17:	getfield	#1; //Field this$1:Lscala/actors/threadpool/Executors$PrivilegedThreadFactory$1;
   20:	getfield	#7; //Field scala/actors/threadpool/Executors$PrivilegedThreadFactory$1.val$r:Ljava/lang/Runnable;
   23:	invokeinterface	#8,  1; //InterfaceMethod java/lang/Runnable.run:()V
   28:	aconst_null
   29:	areturn

}

