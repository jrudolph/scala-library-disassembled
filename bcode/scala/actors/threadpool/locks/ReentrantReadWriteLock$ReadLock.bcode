public class scala.actors.threadpool.locks.ReentrantReadWriteLock$ReadLock extends java.lang.Object implements scala.actors.threadpool.locks.Lock,java.io.Serializable
  InnerClass: 
   public #100= #37 of #66; //ReadLock=class scala/actors/threadpool/locks/ReentrantReadWriteLock$ReadLock of class scala/actors/threadpool/locks/ReentrantReadWriteLock
   abstract #107= #68 of #66; //Sync=class scala/actors/threadpool/locks/ReentrantReadWriteLock$Sync of class scala/actors/threadpool/locks/ReentrantReadWriteLock
   public #120= #79 of #66; //WriteLock=class scala/actors/threadpool/locks/ReentrantReadWriteLock$WriteLock of class scala/actors/threadpool/locks/ReentrantReadWriteLock
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Method	#38.#63;	//  java/lang/Object."<init>":()V
const #2 = class	#64;	//  java/lang/NullPointerException
const #3 = Method	#2.#63;	//  java/lang/NullPointerException."<init>":()V
const #4 = Field	#37.#65;	//  scala/actors/threadpool/locks/ReentrantReadWriteLock$ReadLock.lock:Lscala/actors/threadpool/locks/ReentrantReadWriteLock;
const #5 = Field	#66.#67;	//  scala/actors/threadpool/locks/ReentrantReadWriteLock.sync:Lscala/actors/threadpool/locks/ReentrantReadWriteLock$Sync;
const #6 = Method	#68.#69;	//  scala/actors/threadpool/locks/ReentrantReadWriteLock$Sync.startReadFromNewReader:()Z
const #7 = Method	#70.#71;	//  java/lang/Thread.interrupted:()Z
const #8 = Method	#38.#72;	//  java/lang/Object.wait:()V
const #9 = class	#73;	//  java/lang/InterruptedException
const #10 = Method	#68.#74;	//  scala/actors/threadpool/locks/ReentrantReadWriteLock$Sync.startReadFromWaitingReader:()Z
const #11 = Method	#70.#75;	//  java/lang/Thread.currentThread:()Ljava/lang/Thread;
const #12 = Method	#70.#76;	//  java/lang/Thread.interrupt:()V
const #13 = Method	#9.#63;	//  java/lang/InterruptedException."<init>":()V
const #14 = Method	#68.#77;	//  scala/actors/threadpool/locks/ReentrantReadWriteLock$Sync.cancelledWaitingReader:()V
const #15 = Field	#66.#78;	//  scala/actors/threadpool/locks/ReentrantReadWriteLock.writerLock_:Lscala/actors/threadpool/locks/ReentrantReadWriteLock$WriteLock;
const #16 = Method	#79.#80;	//  scala/actors/threadpool/locks/ReentrantReadWriteLock$WriteLock.signalWaiters:()V
const #17 = Method	#68.#81;	//  scala/actors/threadpool/locks/ReentrantReadWriteLock$Sync.startRead:()Z
const #18 = Method	#82.#83;	//  scala/actors/threadpool/TimeUnit.toNanos:(J)J
const #19 = Method	#84.#85;	//  scala/actors/threadpool/helpers/Utils.nanoTime:()J
const #20 = Field	#82.#86;	//  scala/actors/threadpool/TimeUnit.NANOSECONDS:Lscala/actors/threadpool/TimeUnit;
const #21 = Method	#82.#87;	//  scala/actors/threadpool/TimeUnit.timedWait:(Ljava/lang/Object;J)V
const #22 = Method	#68.#88;	//  scala/actors/threadpool/locks/ReentrantReadWriteLock$Sync.endRead:()I
const #23 = Field	#66.#89;	//  scala/actors/threadpool/locks/ReentrantReadWriteLock.readerLock_:Lscala/actors/threadpool/locks/ReentrantReadWriteLock$ReadLock;
const #24 = Method	#37.#80;	//  scala/actors/threadpool/locks/ReentrantReadWriteLock$ReadLock.signalWaiters:()V
const #25 = class	#90;	//  java/lang/UnsupportedOperationException
const #26 = Method	#25.#63;	//  java/lang/UnsupportedOperationException."<init>":()V
const #27 = Method	#38.#91;	//  java/lang/Object.notifyAll:()V
const #28 = Method	#66.#92;	//  scala/actors/threadpool/locks/ReentrantReadWriteLock.getReadLockCount:()I
const #29 = class	#93;	//  java/lang/StringBuilder
const #30 = Method	#29.#63;	//  java/lang/StringBuilder."<init>":()V
const #31 = Method	#38.#94;	//  java/lang/Object.toString:()Ljava/lang/String;
const #32 = Method	#29.#95;	//  java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
const #33 = String	#96;	//  [Read locks = 
const #34 = Method	#29.#97;	//  java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
const #35 = String	#98;	//  ]
const #36 = Method	#29.#94;	//  java/lang/StringBuilder.toString:()Ljava/lang/String;
const #37 = class	#99;	//  scala/actors/threadpool/locks/ReentrantReadWriteLock$ReadLock
const #38 = class	#102;	//  java/lang/Object
const #39 = class	#103;	//  scala/actors/threadpool/locks/Lock
const #40 = class	#104;	//  java/io/Serializable
const #41 = Asciz	serialVersionUID;
const #42 = Asciz	J;
const #43 = Asciz	ConstantValue;
const #44 = long	-5992448646407690164l;
const #46 = Asciz	lock;
const #47 = Asciz	Lscala/actors/threadpool/locks/ReentrantReadWriteLock;;
const #48 = Asciz	<init>;
const #49 = Asciz	(Lscala/actors/threadpool/locks/ReentrantReadWriteLock;)V;
const #50 = Asciz	Code;
const #51 = Asciz	()V;
const #52 = Asciz	lockInterruptibly;
const #53 = Asciz	Exceptions;
const #54 = Asciz	tryLock;
const #55 = Asciz	()Z;
const #56 = Asciz	(JLscala/actors/threadpool/TimeUnit;)Z;
const #57 = Asciz	unlock;
const #58 = Asciz	newCondition;
const #59 = Asciz	()Lscala/actors/threadpool/locks/Condition;;
const #60 = Asciz	signalWaiters;
const #61 = Asciz	toString;
const #62 = Asciz	()Ljava/lang/String;;
const #63 = NameAndType	#48:#51;//  "<init>":()V
const #64 = Asciz	java/lang/NullPointerException;
const #65 = NameAndType	#46:#47;//  lock:Lscala/actors/threadpool/locks/ReentrantReadWriteLock;
const #66 = class	#105;	//  scala/actors/threadpool/locks/ReentrantReadWriteLock
const #67 = NameAndType	#106:#108;//  sync:Lscala/actors/threadpool/locks/ReentrantReadWriteLock$Sync;
const #68 = class	#109;	//  scala/actors/threadpool/locks/ReentrantReadWriteLock$Sync
const #69 = NameAndType	#110:#55;//  startReadFromNewReader:()Z
const #70 = class	#111;	//  java/lang/Thread
const #71 = NameAndType	#112:#55;//  interrupted:()Z
const #72 = NameAndType	#113:#51;//  wait:()V
const #73 = Asciz	java/lang/InterruptedException;
const #74 = NameAndType	#114:#55;//  startReadFromWaitingReader:()Z
const #75 = NameAndType	#115:#116;//  currentThread:()Ljava/lang/Thread;
const #76 = NameAndType	#117:#51;//  interrupt:()V
const #77 = NameAndType	#118:#51;//  cancelledWaitingReader:()V
const #78 = NameAndType	#119:#121;//  writerLock_:Lscala/actors/threadpool/locks/ReentrantReadWriteLock$WriteLock;
const #79 = class	#122;	//  scala/actors/threadpool/locks/ReentrantReadWriteLock$WriteLock
const #80 = NameAndType	#60:#51;//  signalWaiters:()V
const #81 = NameAndType	#123:#55;//  startRead:()Z
const #82 = class	#124;	//  scala/actors/threadpool/TimeUnit
const #83 = NameAndType	#125:#126;//  toNanos:(J)J
const #84 = class	#127;	//  scala/actors/threadpool/helpers/Utils
const #85 = NameAndType	#128:#129;//  nanoTime:()J
const #86 = NameAndType	#130:#131;//  NANOSECONDS:Lscala/actors/threadpool/TimeUnit;
const #87 = NameAndType	#132:#133;//  timedWait:(Ljava/lang/Object;J)V
const #88 = NameAndType	#134:#135;//  endRead:()I
const #89 = NameAndType	#136:#137;//  readerLock_:Lscala/actors/threadpool/locks/ReentrantReadWriteLock$ReadLock;
const #90 = Asciz	java/lang/UnsupportedOperationException;
const #91 = NameAndType	#138:#51;//  notifyAll:()V
const #92 = NameAndType	#139:#135;//  getReadLockCount:()I
const #93 = Asciz	java/lang/StringBuilder;
const #94 = NameAndType	#61:#62;//  toString:()Ljava/lang/String;
const #95 = NameAndType	#140:#141;//  append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
const #96 = Asciz	[Read locks = ;
const #97 = NameAndType	#140:#142;//  append:(I)Ljava/lang/StringBuilder;
const #98 = Asciz	];
const #99 = Asciz	scala/actors/threadpool/locks/ReentrantReadWriteLock$ReadLock;
const #100 = Asciz	ReadLock;
const #101 = Asciz	InnerClasses;
const #102 = Asciz	java/lang/Object;
const #103 = Asciz	scala/actors/threadpool/locks/Lock;
const #104 = Asciz	java/io/Serializable;
const #105 = Asciz	scala/actors/threadpool/locks/ReentrantReadWriteLock;
const #106 = Asciz	sync;
const #107 = Asciz	Sync;
const #108 = Asciz	Lscala/actors/threadpool/locks/ReentrantReadWriteLock$Sync;;
const #109 = Asciz	scala/actors/threadpool/locks/ReentrantReadWriteLock$Sync;
const #110 = Asciz	startReadFromNewReader;
const #111 = Asciz	java/lang/Thread;
const #112 = Asciz	interrupted;
const #113 = Asciz	wait;
const #114 = Asciz	startReadFromWaitingReader;
const #115 = Asciz	currentThread;
const #116 = Asciz	()Ljava/lang/Thread;;
const #117 = Asciz	interrupt;
const #118 = Asciz	cancelledWaitingReader;
const #119 = Asciz	writerLock_;
const #120 = Asciz	WriteLock;
const #121 = Asciz	Lscala/actors/threadpool/locks/ReentrantReadWriteLock$WriteLock;;
const #122 = Asciz	scala/actors/threadpool/locks/ReentrantReadWriteLock$WriteLock;
const #123 = Asciz	startRead;
const #124 = Asciz	scala/actors/threadpool/TimeUnit;
const #125 = Asciz	toNanos;
const #126 = Asciz	(J)J;
const #127 = Asciz	scala/actors/threadpool/helpers/Utils;
const #128 = Asciz	nanoTime;
const #129 = Asciz	()J;
const #130 = Asciz	NANOSECONDS;
const #131 = Asciz	Lscala/actors/threadpool/TimeUnit;;
const #132 = Asciz	timedWait;
const #133 = Asciz	(Ljava/lang/Object;J)V;
const #134 = Asciz	endRead;
const #135 = Asciz	()I;
const #136 = Asciz	readerLock_;
const #137 = Asciz	Lscala/actors/threadpool/locks/ReentrantReadWriteLock$ReadLock;;
const #138 = Asciz	notifyAll;
const #139 = Asciz	getReadLockCount;
const #140 = Asciz	append;
const #141 = Asciz	(Ljava/lang/String;)Ljava/lang/StringBuilder;;
const #142 = Asciz	(I)Ljava/lang/StringBuilder;;

{
final scala.actors.threadpool.locks.ReentrantReadWriteLock lock;

protected scala.actors.threadpool.locks.ReentrantReadWriteLock$ReadLock(scala.actors.threadpool.locks.ReentrantReadWriteLock);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	invokespecial	#1; //Method java/lang/Object."<init>":()V
   4:	aload_1
   5:	ifnonnull	16
   8:	new	#2; //class java/lang/NullPointerException
   11:	dup
   12:	invokespecial	#3; //Method java/lang/NullPointerException."<init>":()V
   15:	athrow
   16:	aload_0
   17:	aload_1
   18:	putfield	#4; //Field lock:Lscala/actors/threadpool/locks/ReentrantReadWriteLock;
   21:	return

public void lock();
  Code:
   Stack=2, Locals=6, Args_size=1
   0:	aload_0
   1:	dup
   2:	astore_1
   3:	monitorenter
   4:	aload_0
   5:	getfield	#4; //Field lock:Lscala/actors/threadpool/locks/ReentrantReadWriteLock;
   8:	getfield	#5; //Field scala/actors/threadpool/locks/ReentrantReadWriteLock.sync:Lscala/actors/threadpool/locks/ReentrantReadWriteLock$Sync;
   11:	invokevirtual	#6; //Method scala/actors/threadpool/locks/ReentrantReadWriteLock$Sync.startReadFromNewReader:()Z
   14:	ifeq	20
   17:	aload_1
   18:	monitorexit
   19:	return
   20:	invokestatic	#7; //Method java/lang/Thread.interrupted:()Z
   23:	istore_2
   24:	aload_0
   25:	invokevirtual	#8; //Method java/lang/Object.wait:()V
   28:	goto	34
   31:	astore_3
   32:	iconst_1
   33:	istore_2
   34:	aload_0
   35:	getfield	#4; //Field lock:Lscala/actors/threadpool/locks/ReentrantReadWriteLock;
   38:	getfield	#5; //Field scala/actors/threadpool/locks/ReentrantReadWriteLock.sync:Lscala/actors/threadpool/locks/ReentrantReadWriteLock$Sync;
   41:	invokevirtual	#10; //Method scala/actors/threadpool/locks/ReentrantReadWriteLock$Sync.startReadFromWaitingReader:()Z
   44:	ifeq	24
   47:	iload_2
   48:	ifeq	57
   51:	invokestatic	#11; //Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
   54:	invokevirtual	#12; //Method java/lang/Thread.interrupt:()V
   57:	aload_1
   58:	monitorexit
   59:	return
   60:	astore	4
   62:	iload_2
   63:	ifeq	72
   66:	invokestatic	#11; //Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
   69:	invokevirtual	#12; //Method java/lang/Thread.interrupt:()V
   72:	aload	4
   74:	athrow
   75:	astore	5
   77:	aload_1
   78:	monitorexit
   79:	aload	5
   81:	athrow
  Exception table:
   from   to  target type
    24    28    31   Class java/lang/InterruptedException

    24    47    60   any
    60    62    60   any
     4    19    75   any
    20    59    75   any
    60    79    75   any

public void lockInterruptibly()   throws java.lang.InterruptedException;
  Code:
   Stack=2, Locals=5, Args_size=1
   0:	invokestatic	#7; //Method java/lang/Thread.interrupted:()Z
   3:	ifeq	14
   6:	new	#9; //class java/lang/InterruptedException
   9:	dup
   10:	invokespecial	#13; //Method java/lang/InterruptedException."<init>":()V
   13:	athrow
   14:	aconst_null
   15:	astore_1
   16:	aload_0
   17:	dup
   18:	astore_2
   19:	monitorenter
   20:	aload_0
   21:	getfield	#4; //Field lock:Lscala/actors/threadpool/locks/ReentrantReadWriteLock;
   24:	getfield	#5; //Field scala/actors/threadpool/locks/ReentrantReadWriteLock.sync:Lscala/actors/threadpool/locks/ReentrantReadWriteLock$Sync;
   27:	invokevirtual	#6; //Method scala/actors/threadpool/locks/ReentrantReadWriteLock$Sync.startReadFromNewReader:()Z
   30:	ifne	72
   33:	aload_0
   34:	invokevirtual	#8; //Method java/lang/Object.wait:()V
   37:	aload_0
   38:	getfield	#4; //Field lock:Lscala/actors/threadpool/locks/ReentrantReadWriteLock;
   41:	getfield	#5; //Field scala/actors/threadpool/locks/ReentrantReadWriteLock.sync:Lscala/actors/threadpool/locks/ReentrantReadWriteLock$Sync;
   44:	invokevirtual	#10; //Method scala/actors/threadpool/locks/ReentrantReadWriteLock$Sync.startReadFromWaitingReader:()Z
   47:	ifeq	53
   50:	aload_2
   51:	monitorexit
   52:	return
   53:	goto	33
   56:	astore_3
   57:	aload_0
   58:	getfield	#4; //Field lock:Lscala/actors/threadpool/locks/ReentrantReadWriteLock;
   61:	getfield	#5; //Field scala/actors/threadpool/locks/ReentrantReadWriteLock.sync:Lscala/actors/threadpool/locks/ReentrantReadWriteLock$Sync;
   64:	invokevirtual	#14; //Method scala/actors/threadpool/locks/ReentrantReadWriteLock$Sync.cancelledWaitingReader:()V
   67:	aload_3
   68:	astore_1
   69:	goto	72
   72:	aload_2
   73:	monitorexit
   74:	goto	84
   77:	astore	4
   79:	aload_2
   80:	monitorexit
   81:	aload	4
   83:	athrow
   84:	aload_1
   85:	ifnull	100
   88:	aload_0
   89:	getfield	#4; //Field lock:Lscala/actors/threadpool/locks/ReentrantReadWriteLock;
   92:	getfield	#15; //Field scala/actors/threadpool/locks/ReentrantReadWriteLock.writerLock_:Lscala/actors/threadpool/locks/ReentrantReadWriteLock$WriteLock;
   95:	invokevirtual	#16; //Method scala/actors/threadpool/locks/ReentrantReadWriteLock$WriteLock.signalWaiters:()V
   98:	aload_1
   99:	athrow
   100:	return
  Exception table:
   from   to  target type
    33    50    56   Class java/lang/InterruptedException

    20    52    77   any
    53    74    77   any
    77    81    77   any
  Exceptions: 
   throws java.lang.InterruptedException
public boolean tryLock();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#4; //Field lock:Lscala/actors/threadpool/locks/ReentrantReadWriteLock;
   4:	getfield	#5; //Field scala/actors/threadpool/locks/ReentrantReadWriteLock.sync:Lscala/actors/threadpool/locks/ReentrantReadWriteLock$Sync;
   7:	invokevirtual	#17; //Method scala/actors/threadpool/locks/ReentrantReadWriteLock$Sync.startRead:()Z
   10:	ireturn

public boolean tryLock(long, scala.actors.threadpool.TimeUnit)   throws java.lang.InterruptedException;
  Code:
   Stack=4, Locals=12, Args_size=3
   0:	invokestatic	#7; //Method java/lang/Thread.interrupted:()Z
   3:	ifeq	14
   6:	new	#9; //class java/lang/InterruptedException
   9:	dup
   10:	invokespecial	#13; //Method java/lang/InterruptedException."<init>":()V
   13:	athrow
   14:	aconst_null
   15:	astore	4
   17:	aload_3
   18:	lload_1
   19:	invokevirtual	#18; //Method scala/actors/threadpool/TimeUnit.toNanos:(J)J
   22:	lstore	5
   24:	aload_0
   25:	dup
   26:	astore	7
   28:	monitorenter
   29:	lload	5
   31:	lconst_0
   32:	lcmp
   33:	ifgt	50
   36:	aload_0
   37:	getfield	#4; //Field lock:Lscala/actors/threadpool/locks/ReentrantReadWriteLock;
   40:	getfield	#5; //Field scala/actors/threadpool/locks/ReentrantReadWriteLock.sync:Lscala/actors/threadpool/locks/ReentrantReadWriteLock$Sync;
   43:	invokevirtual	#17; //Method scala/actors/threadpool/locks/ReentrantReadWriteLock$Sync.startRead:()Z
   46:	aload	7
   48:	monitorexit
   49:	ireturn
   50:	aload_0
   51:	getfield	#4; //Field lock:Lscala/actors/threadpool/locks/ReentrantReadWriteLock;
   54:	getfield	#5; //Field scala/actors/threadpool/locks/ReentrantReadWriteLock.sync:Lscala/actors/threadpool/locks/ReentrantReadWriteLock$Sync;
   57:	invokevirtual	#6; //Method scala/actors/threadpool/locks/ReentrantReadWriteLock$Sync.startReadFromNewReader:()Z
   60:	ifeq	68
   63:	iconst_1
   64:	aload	7
   66:	monitorexit
   67:	ireturn
   68:	invokestatic	#19; //Method scala/actors/threadpool/helpers/Utils.nanoTime:()J
   71:	lload	5
   73:	ladd
   74:	lstore	8
   76:	getstatic	#20; //Field scala/actors/threadpool/TimeUnit.NANOSECONDS:Lscala/actors/threadpool/TimeUnit;
   79:	aload_0
   80:	lload	5
   82:	invokevirtual	#21; //Method scala/actors/threadpool/TimeUnit.timedWait:(Ljava/lang/Object;J)V
   85:	goto	107
   88:	astore	10
   90:	aload_0
   91:	getfield	#4; //Field lock:Lscala/actors/threadpool/locks/ReentrantReadWriteLock;
   94:	getfield	#5; //Field scala/actors/threadpool/locks/ReentrantReadWriteLock.sync:Lscala/actors/threadpool/locks/ReentrantReadWriteLock$Sync;
   97:	invokevirtual	#14; //Method scala/actors/threadpool/locks/ReentrantReadWriteLock$Sync.cancelledWaitingReader:()V
   100:	aload	10
   102:	astore	4
   104:	goto	153
   107:	aload_0
   108:	getfield	#4; //Field lock:Lscala/actors/threadpool/locks/ReentrantReadWriteLock;
   111:	getfield	#5; //Field scala/actors/threadpool/locks/ReentrantReadWriteLock.sync:Lscala/actors/threadpool/locks/ReentrantReadWriteLock$Sync;
   114:	invokevirtual	#10; //Method scala/actors/threadpool/locks/ReentrantReadWriteLock$Sync.startReadFromWaitingReader:()Z
   117:	ifeq	125
   120:	iconst_1
   121:	aload	7
   123:	monitorexit
   124:	ireturn
   125:	lload	8
   127:	invokestatic	#19; //Method scala/actors/threadpool/helpers/Utils.nanoTime:()J
   130:	lsub
   131:	lstore	5
   133:	lload	5
   135:	lconst_0
   136:	lcmp
   137:	ifgt	76
   140:	aload_0
   141:	getfield	#4; //Field lock:Lscala/actors/threadpool/locks/ReentrantReadWriteLock;
   144:	getfield	#5; //Field scala/actors/threadpool/locks/ReentrantReadWriteLock.sync:Lscala/actors/threadpool/locks/ReentrantReadWriteLock$Sync;
   147:	invokevirtual	#14; //Method scala/actors/threadpool/locks/ReentrantReadWriteLock$Sync.cancelledWaitingReader:()V
   150:	goto	153
   153:	aload	7
   155:	monitorexit
   156:	goto	167
   159:	astore	11
   161:	aload	7
   163:	monitorexit
   164:	aload	11
   166:	athrow
   167:	aload_0
   168:	getfield	#4; //Field lock:Lscala/actors/threadpool/locks/ReentrantReadWriteLock;
   171:	getfield	#15; //Field scala/actors/threadpool/locks/ReentrantReadWriteLock.writerLock_:Lscala/actors/threadpool/locks/ReentrantReadWriteLock$WriteLock;
   174:	invokevirtual	#16; //Method scala/actors/threadpool/locks/ReentrantReadWriteLock$WriteLock.signalWaiters:()V
   177:	aload	4
   179:	ifnull	185
   182:	aload	4
   184:	athrow
   185:	iconst_0
   186:	ireturn
  Exception table:
   from   to  target type
    76    85    88   Class java/lang/InterruptedException

    29    49   159   any
    50    67   159   any
    68   124   159   any
   125   156   159   any
   159   164   159   any
  Exceptions: 
   throws java.lang.InterruptedException
public void unlock();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#4; //Field lock:Lscala/actors/threadpool/locks/ReentrantReadWriteLock;
   4:	getfield	#5; //Field scala/actors/threadpool/locks/ReentrantReadWriteLock.sync:Lscala/actors/threadpool/locks/ReentrantReadWriteLock$Sync;
   7:	invokevirtual	#22; //Method scala/actors/threadpool/locks/ReentrantReadWriteLock$Sync.endRead:()I
   10:	tableswitch{ //0 to 2
		0: 36;
		1: 37;
		2: 48;
		default: 59 }
   36:	return
   37:	aload_0
   38:	getfield	#4; //Field lock:Lscala/actors/threadpool/locks/ReentrantReadWriteLock;
   41:	getfield	#23; //Field scala/actors/threadpool/locks/ReentrantReadWriteLock.readerLock_:Lscala/actors/threadpool/locks/ReentrantReadWriteLock$ReadLock;
   44:	invokevirtual	#24; //Method signalWaiters:()V
   47:	return
   48:	aload_0
   49:	getfield	#4; //Field lock:Lscala/actors/threadpool/locks/ReentrantReadWriteLock;
   52:	getfield	#15; //Field scala/actors/threadpool/locks/ReentrantReadWriteLock.writerLock_:Lscala/actors/threadpool/locks/ReentrantReadWriteLock$WriteLock;
   55:	invokevirtual	#16; //Method scala/actors/threadpool/locks/ReentrantReadWriteLock$WriteLock.signalWaiters:()V
   58:	return
   59:	return

public scala.actors.threadpool.locks.Condition newCondition();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	new	#25; //class java/lang/UnsupportedOperationException
   3:	dup
   4:	invokespecial	#26; //Method java/lang/UnsupportedOperationException."<init>":()V
   7:	athrow

synchronized void signalWaiters();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#27; //Method java/lang/Object.notifyAll:()V
   4:	return

public java.lang.String toString();
  Code:
   Stack=2, Locals=2, Args_size=1
   0:	aload_0
   1:	getfield	#4; //Field lock:Lscala/actors/threadpool/locks/ReentrantReadWriteLock;
   4:	invokevirtual	#28; //Method scala/actors/threadpool/locks/ReentrantReadWriteLock.getReadLockCount:()I
   7:	istore_1
   8:	new	#29; //class java/lang/StringBuilder
   11:	dup
   12:	invokespecial	#30; //Method java/lang/StringBuilder."<init>":()V
   15:	aload_0
   16:	invokespecial	#31; //Method java/lang/Object.toString:()Ljava/lang/String;
   19:	invokevirtual	#32; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   22:	ldc	#33; //String [Read locks = 
   24:	invokevirtual	#32; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   27:	iload_1
   28:	invokevirtual	#34; //Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
   31:	ldc	#35; //String ]
   33:	invokevirtual	#32; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   36:	invokevirtual	#36; //Method java/lang/StringBuilder.toString:()Ljava/lang/String;
   39:	areturn

}

