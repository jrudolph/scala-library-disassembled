public interface scala.actors.threadpool.locks.Lock
  minor version: 0
  major version: 49
  Constant pool:
const #1 = class	#14;	//  scala/actors/threadpool/locks/Lock
const #2 = class	#15;	//  java/lang/Object
const #3 = Asciz	lock;
const #4 = Asciz	()V;
const #5 = Asciz	lockInterruptibly;
const #6 = Asciz	Exceptions;
const #7 = class	#16;	//  java/lang/InterruptedException
const #8 = Asciz	tryLock;
const #9 = Asciz	()Z;
const #10 = Asciz	(JLscala/actors/threadpool/TimeUnit;)Z;
const #11 = Asciz	unlock;
const #12 = Asciz	newCondition;
const #13 = Asciz	()Lscala/actors/threadpool/locks/Condition;;
const #14 = Asciz	scala/actors/threadpool/locks/Lock;
const #15 = Asciz	java/lang/Object;
const #16 = Asciz	java/lang/InterruptedException;

{
public abstract void lock();

public abstract void lockInterruptibly()   throws java.lang.InterruptedException;
  Exceptions: 
   throws java.lang.InterruptedException
public abstract boolean tryLock();

public abstract boolean tryLock(long, scala.actors.threadpool.TimeUnit)   throws java.lang.InterruptedException;
  Exceptions: 
   throws java.lang.InterruptedException
public abstract void unlock();

public abstract scala.actors.threadpool.locks.Condition newCondition();

}

