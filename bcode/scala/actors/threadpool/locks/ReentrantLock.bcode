public class scala.actors.threadpool.locks.ReentrantLock extends java.lang.Object implements scala.actors.threadpool.locks.Lock,java.io.Serializable,scala.actors.threadpool.locks.CondVar$ExclusiveLock
  InnerClass: 
   final FairSync=class scala/actors/threadpool/locks/ReentrantLock$FairSync of class scala/actors/threadpool/locks/ReentrantLock
   final NonfairSync=class scala/actors/threadpool/locks/ReentrantLock$NonfairSync of class scala/actors/threadpool/locks/ReentrantLock
   abstract Sync=class scala/actors/threadpool/locks/ReentrantLock$Sync of class scala/actors/threadpool/locks/ReentrantLock
   abstract ExclusiveLock=class scala/actors/threadpool/locks/CondVar$ExclusiveLock of class scala/actors/threadpool/locks/CondVar
  minor version: 0
  major version: 49
  Constant pool:
Method	java/lang/Object."<init>":()V
class	scala/actors/threadpool/locks/ReentrantLock$NonfairSync
Method	scala/actors/threadpool/locks/ReentrantLock$NonfairSync."<init>":()V
Field	scala/actors/threadpool/locks/ReentrantLock.sync:Lscala/actors/threadpool/locks/ReentrantLock$Sync;
class	scala/actors/threadpool/locks/ReentrantLock$FairSync
Method	scala/actors/threadpool/locks/ReentrantLock$FairSync."<init>":()V
Method	scala/actors/threadpool/locks/ReentrantLock$Sync.lock:()V
Method	scala/actors/threadpool/locks/ReentrantLock$Sync.lockInterruptibly:()V
Method	scala/actors/threadpool/locks/ReentrantLock$Sync.tryLock:()Z
Method	scala/actors/threadpool/TimeUnit.toNanos:(J)J
Method	scala/actors/threadpool/locks/ReentrantLock$Sync.tryLock:(J)Z
Method	scala/actors/threadpool/locks/ReentrantLock$Sync.unlock:()V
Method	scala/actors/threadpool/locks/ReentrantLock.isFair:()Z
class	scala/actors/threadpool/locks/FIFOCondVar
Method	scala/actors/threadpool/locks/FIFOCondVar."<init>":(Lscala/actors/threadpool/locks/CondVar$ExclusiveLock;)V
class	scala/actors/threadpool/locks/CondVar
Method	scala/actors/threadpool/locks/CondVar."<init>":(Lscala/actors/threadpool/locks/CondVar$ExclusiveLock;)V
Method	scala/actors/threadpool/locks/ReentrantLock$Sync.getHoldCount:()I
Method	scala/actors/threadpool/locks/ReentrantLock$Sync.isHeldByCurrentThread:()Z
Method	scala/actors/threadpool/locks/ReentrantLock$Sync.isLocked:()Z
Method	scala/actors/threadpool/locks/ReentrantLock$Sync.isFair:()Z
Method	scala/actors/threadpool/locks/ReentrantLock$Sync.getOwner:()Ljava/lang/Thread;
Method	scala/actors/threadpool/locks/ReentrantLock$Sync.hasQueuedThreads:()Z
Method	scala/actors/threadpool/locks/ReentrantLock$Sync.isQueued:(Ljava/lang/Thread;)Z
Method	scala/actors/threadpool/locks/ReentrantLock$Sync.getQueueLength:()I
Method	scala/actors/threadpool/locks/ReentrantLock$Sync.getQueuedThreads:()Ljava/util/Collection;
Method	scala/actors/threadpool/locks/ReentrantLock.asCondVar:(Lscala/actors/threadpool/locks/Condition;)Lscala/actors/threadpool/locks/CondVar;
Method	scala/actors/threadpool/locks/CondVar.hasWaiters:()Z
Method	scala/actors/threadpool/locks/CondVar.getWaitQueueLength:()I
Method	scala/actors/threadpool/locks/CondVar.getWaitingThreads:()Ljava/util/Collection;
Method	scala/actors/threadpool/locks/ReentrantLock.getOwner:()Ljava/lang/Thread;
class	java/lang/StringBuilder
Method	java/lang/StringBuilder."<init>":()V
Method	java/lang/Object.toString:()Ljava/lang/String;
Method	java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
String	[Unlocked]
String	[Locked by thread 
Method	java/lang/Thread.getName:()Ljava/lang/String;
String	]
Method	java/lang/StringBuilder.toString:()Ljava/lang/String;
class	java/lang/NullPointerException
Method	java/lang/NullPointerException."<init>":()V
class	java/lang/IllegalArgumentException
String	not owner
Method	java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
Field	scala/actors/threadpool/locks/CondVar.lock:Lscala/actors/threadpool/locks/CondVar$ExclusiveLock;
class	scala/actors/threadpool/locks/ReentrantLock
class	java/lang/Object
class	scala/actors/threadpool/locks/Lock
class	java/io/Serializable
class	scala/actors/threadpool/locks/CondVar$ExclusiveLock
Asciz	FairSync;
Asciz	InnerClasses;
Asciz	NonfairSync;
class	scala/actors/threadpool/locks/ReentrantLock$Sync
Asciz	Sync;
Asciz	serialVersionUID;
Asciz	J;
Asciz	ConstantValue;
long	7373984872572414699l;
Asciz	sync;
Asciz	Lscala/actors/threadpool/locks/ReentrantLock$Sync;;
Asciz	<init>;
Asciz	()V;
Asciz	Code;
Asciz	(Z)V;
Asciz	lock;
Asciz	lockInterruptibly;
Asciz	Exceptions;
class	java/lang/InterruptedException
Asciz	tryLock;
Asciz	()Z;
Asciz	(JLscala/actors/threadpool/TimeUnit;)Z;
Asciz	unlock;
Asciz	newCondition;
Asciz	()Lscala/actors/threadpool/locks/Condition;;
Asciz	getHoldCount;
Asciz	()I;
Asciz	isHeldByCurrentThread;
Asciz	isLocked;
Asciz	isFair;
Asciz	getOwner;
Asciz	()Ljava/lang/Thread;;
Asciz	hasQueuedThreads;
Asciz	hasQueuedThread;
Asciz	(Ljava/lang/Thread;)Z;
Asciz	getQueueLength;
Asciz	getQueuedThreads;
Asciz	()Ljava/util/Collection;;
Asciz	hasWaiters;
Asciz	(Lscala/actors/threadpool/locks/Condition;)Z;
Asciz	getWaitQueueLength;
Asciz	(Lscala/actors/threadpool/locks/Condition;)I;
Asciz	getWaitingThreads;
Asciz	(Lscala/actors/threadpool/locks/Condition;)Ljava/util/Collection;;
Asciz	toString;
Asciz	()Ljava/lang/String;;
Asciz	asCondVar;
Asciz	(Lscala/actors/threadpool/locks/Condition;)Lscala/actors/threadpool/locks/CondVar;;
NameAndType	"<init>":()V
Asciz	scala/actors/threadpool/locks/ReentrantLock$NonfairSync;
NameAndType	sync:Lscala/actors/threadpool/locks/ReentrantLock$Sync;
Asciz	scala/actors/threadpool/locks/ReentrantLock$FairSync;
NameAndType	lock:()V
NameAndType	lockInterruptibly:()V
NameAndType	tryLock:()Z
class	scala/actors/threadpool/TimeUnit
NameAndType	toNanos:(J)J
NameAndType	tryLock:(J)Z
NameAndType	unlock:()V
NameAndType	isFair:()Z
Asciz	scala/actors/threadpool/locks/FIFOCondVar;
NameAndType	"<init>":(Lscala/actors/threadpool/locks/CondVar$ExclusiveLock;)V
Asciz	scala/actors/threadpool/locks/CondVar;
NameAndType	getHoldCount:()I
NameAndType	isHeldByCurrentThread:()Z
NameAndType	isLocked:()Z
NameAndType	getOwner:()Ljava/lang/Thread;
NameAndType	hasQueuedThreads:()Z
NameAndType	isQueued:(Ljava/lang/Thread;)Z
NameAndType	getQueueLength:()I
NameAndType	getQueuedThreads:()Ljava/util/Collection;
NameAndType	asCondVar:(Lscala/actors/threadpool/locks/Condition;)Lscala/actors/threadpool/locks/CondVar;
NameAndType	hasWaiters:()Z
NameAndType	getWaitQueueLength:()I
NameAndType	getWaitingThreads:()Ljava/util/Collection;
Asciz	java/lang/StringBuilder;
NameAndType	toString:()Ljava/lang/String;
NameAndType	append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
Asciz	[Unlocked];
Asciz	[Locked by thread ;
class	java/lang/Thread
NameAndType	getName:()Ljava/lang/String;
Asciz	];
Asciz	java/lang/NullPointerException;
Asciz	java/lang/IllegalArgumentException;
Asciz	not owner;
NameAndType	"<init>":(Ljava/lang/String;)V
NameAndType	lock:Lscala/actors/threadpool/locks/CondVar$ExclusiveLock;
Asciz	scala/actors/threadpool/locks/ReentrantLock;
Asciz	java/lang/Object;
Asciz	scala/actors/threadpool/locks/Lock;
Asciz	java/io/Serializable;
Asciz	scala/actors/threadpool/locks/CondVar$ExclusiveLock;
Asciz	ExclusiveLock;
Asciz	scala/actors/threadpool/locks/ReentrantLock$Sync;
Asciz	java/lang/InterruptedException;
Asciz	scala/actors/threadpool/TimeUnit;
Asciz	toNanos;
Asciz	(J)J;
Asciz	(J)Z;
Asciz	(Lscala/actors/threadpool/locks/CondVar$ExclusiveLock;)V;
Asciz	isQueued;
Asciz	append;
Asciz	(Ljava/lang/String;)Ljava/lang/StringBuilder;;
Asciz	java/lang/Thread;
Asciz	getName;
Asciz	(Ljava/lang/String;)V;
Asciz	Lscala/actors/threadpool/locks/CondVar$ExclusiveLock;;

{
private static final long serialVersionUID;
  Signature: J
  Constant value: long 7373984872572414699l
private final scala.actors.threadpool.locks.ReentrantLock$Sync sync;
  Signature: Lscala/actors/threadpool/locks/ReentrantLock$Sync;

public scala.actors.threadpool.locks.ReentrantLock();
  Signature: ()V
  Code:
   Stack=3, Locals=1, Args_size=1
	aload_0
	invokespecial	Method java/lang/Object."<init>":()V
	aload_0
	new	class scala/actors/threadpool/locks/ReentrantLock$NonfairSync
	dup
	invokespecial	Method scala/actors/threadpool/locks/ReentrantLock$NonfairSync."<init>":()V
	putfield	Field sync:Lscala/actors/threadpool/locks/ReentrantLock$Sync;
	return
  Labels:

public scala.actors.threadpool.locks.ReentrantLock(boolean);
  Signature: (Z)V
  Code:
   Stack=3, Locals=2, Args_size=2
	aload_0
	invokespecial	Method java/lang/Object."<init>":()V
	aload_0
	iload_1
	ifeq	l1 // new
	new	class scala/actors/threadpool/locks/ReentrantLock$FairSync
	dup
	invokespecial	Method scala/actors/threadpool/locks/ReentrantLock$FairSync."<init>":()V
	goto	l2 // putfield
l1	new	class scala/actors/threadpool/locks/ReentrantLock$NonfairSync
	dup
	invokespecial	Method scala/actors/threadpool/locks/ReentrantLock$NonfairSync."<init>":()V
l2	putfield	Field sync:Lscala/actors/threadpool/locks/ReentrantLock$Sync;
	return
  Labels:
   	l1 = 19 // new
   	l2 = 26 // putfield

public void lock();
  Signature: ()V
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field sync:Lscala/actors/threadpool/locks/ReentrantLock$Sync;
	invokevirtual	Method scala/actors/threadpool/locks/ReentrantLock$Sync.lock:()V
	return
  Labels:

public void lockInterruptibly()   throws java.lang.InterruptedException;
  Signature: ()V
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field sync:Lscala/actors/threadpool/locks/ReentrantLock$Sync;
	invokevirtual	Method scala/actors/threadpool/locks/ReentrantLock$Sync.lockInterruptibly:()V
	return
  Labels:
  Exceptions: 
   throws java.lang.InterruptedException
public boolean tryLock();
  Signature: ()Z
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field sync:Lscala/actors/threadpool/locks/ReentrantLock$Sync;
	invokevirtual	Method scala/actors/threadpool/locks/ReentrantLock$Sync.tryLock:()Z
	ireturn
  Labels:

public boolean tryLock(long, scala.actors.threadpool.TimeUnit)   throws java.lang.InterruptedException;
  Signature: (JLscala/actors/threadpool/TimeUnit;)Z
  Code:
   Stack=4, Locals=4, Args_size=3
	aload_0
	getfield	Field sync:Lscala/actors/threadpool/locks/ReentrantLock$Sync;
	aload_3
	lload_1
	invokevirtual	Method scala/actors/threadpool/TimeUnit.toNanos:(J)J
	invokevirtual	Method scala/actors/threadpool/locks/ReentrantLock$Sync.tryLock:(J)Z
	ireturn
  Labels:
  Exceptions: 
   throws java.lang.InterruptedException
public void unlock();
  Signature: ()V
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field sync:Lscala/actors/threadpool/locks/ReentrantLock$Sync;
	invokevirtual	Method scala/actors/threadpool/locks/ReentrantLock$Sync.unlock:()V
	return
  Labels:

public scala.actors.threadpool.locks.Condition newCondition();
  Signature: ()Lscala/actors/threadpool/locks/Condition;
  Code:
   Stack=3, Locals=1, Args_size=1
	aload_0
	invokevirtual	Method isFair:()Z
	ifeq	l1 // new
	new	class scala/actors/threadpool/locks/FIFOCondVar
	dup
	aload_0
	invokespecial	Method scala/actors/threadpool/locks/FIFOCondVar."<init>":(Lscala/actors/threadpool/locks/CondVar$ExclusiveLock;)V
	goto	l2 // areturn
l1	new	class scala/actors/threadpool/locks/CondVar
	dup
	aload_0
	invokespecial	Method scala/actors/threadpool/locks/CondVar."<init>":(Lscala/actors/threadpool/locks/CondVar$ExclusiveLock;)V
l2	areturn
  Labels:
   	l1 = 18 // new
   	l2 = 26 // areturn

public int getHoldCount();
  Signature: ()I
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field sync:Lscala/actors/threadpool/locks/ReentrantLock$Sync;
	invokevirtual	Method scala/actors/threadpool/locks/ReentrantLock$Sync.getHoldCount:()I
	ireturn
  Labels:

public boolean isHeldByCurrentThread();
  Signature: ()Z
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field sync:Lscala/actors/threadpool/locks/ReentrantLock$Sync;
	invokevirtual	Method scala/actors/threadpool/locks/ReentrantLock$Sync.isHeldByCurrentThread:()Z
	ireturn
  Labels:

public boolean isLocked();
  Signature: ()Z
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field sync:Lscala/actors/threadpool/locks/ReentrantLock$Sync;
	invokevirtual	Method scala/actors/threadpool/locks/ReentrantLock$Sync.isLocked:()Z
	ireturn
  Labels:

public final boolean isFair();
  Signature: ()Z
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field sync:Lscala/actors/threadpool/locks/ReentrantLock$Sync;
	invokevirtual	Method scala/actors/threadpool/locks/ReentrantLock$Sync.isFair:()Z
	ireturn
  Labels:

protected java.lang.Thread getOwner();
  Signature: ()Ljava/lang/Thread;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field sync:Lscala/actors/threadpool/locks/ReentrantLock$Sync;
	invokevirtual	Method scala/actors/threadpool/locks/ReentrantLock$Sync.getOwner:()Ljava/lang/Thread;
	areturn
  Labels:

public final boolean hasQueuedThreads();
  Signature: ()Z
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field sync:Lscala/actors/threadpool/locks/ReentrantLock$Sync;
	invokevirtual	Method scala/actors/threadpool/locks/ReentrantLock$Sync.hasQueuedThreads:()Z
	ireturn
  Labels:

public final boolean hasQueuedThread(java.lang.Thread);
  Signature: (Ljava/lang/Thread;)Z
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	getfield	Field sync:Lscala/actors/threadpool/locks/ReentrantLock$Sync;
	aload_1
	invokevirtual	Method scala/actors/threadpool/locks/ReentrantLock$Sync.isQueued:(Ljava/lang/Thread;)Z
	ireturn
  Labels:

public final int getQueueLength();
  Signature: ()I
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field sync:Lscala/actors/threadpool/locks/ReentrantLock$Sync;
	invokevirtual	Method scala/actors/threadpool/locks/ReentrantLock$Sync.getQueueLength:()I
	ireturn
  Labels:

protected java.util.Collection getQueuedThreads();
  Signature: ()Ljava/util/Collection;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field sync:Lscala/actors/threadpool/locks/ReentrantLock$Sync;
	invokevirtual	Method scala/actors/threadpool/locks/ReentrantLock$Sync.getQueuedThreads:()Ljava/util/Collection;
	areturn
  Labels:

public boolean hasWaiters(scala.actors.threadpool.locks.Condition);
  Signature: (Lscala/actors/threadpool/locks/Condition;)Z
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokespecial	Method asCondVar:(Lscala/actors/threadpool/locks/Condition;)Lscala/actors/threadpool/locks/CondVar;
	invokevirtual	Method scala/actors/threadpool/locks/CondVar.hasWaiters:()Z
	ireturn
  Labels:

public int getWaitQueueLength(scala.actors.threadpool.locks.Condition);
  Signature: (Lscala/actors/threadpool/locks/Condition;)I
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokespecial	Method asCondVar:(Lscala/actors/threadpool/locks/Condition;)Lscala/actors/threadpool/locks/CondVar;
	invokevirtual	Method scala/actors/threadpool/locks/CondVar.getWaitQueueLength:()I
	ireturn
  Labels:

protected java.util.Collection getWaitingThreads(scala.actors.threadpool.locks.Condition);
  Signature: (Lscala/actors/threadpool/locks/Condition;)Ljava/util/Collection;
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokespecial	Method asCondVar:(Lscala/actors/threadpool/locks/Condition;)Lscala/actors/threadpool/locks/CondVar;
	invokevirtual	Method scala/actors/threadpool/locks/CondVar.getWaitingThreads:()Ljava/util/Collection;
	areturn
  Labels:

public java.lang.String toString();
  Signature: ()Ljava/lang/String;
  Code:
   Stack=3, Locals=2, Args_size=1
	aload_0
	invokevirtual	Method getOwner:()Ljava/lang/Thread;
	astore_1
	new	class java/lang/StringBuilder
	dup
	invokespecial	Method java/lang/StringBuilder."<init>":()V
	aload_0
	invokespecial	Method java/lang/Object.toString:()Ljava/lang/String;
	invokevirtual	Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
	aload_1
	ifnonnull	l1 // new
	ldc	String [Unlocked]
	goto	l2 // invokevirtual
l1	new	class java/lang/StringBuilder
	dup
	invokespecial	Method java/lang/StringBuilder."<init>":()V
	ldc	String [Locked by thread 
	invokevirtual	Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
	aload_1
	invokevirtual	Method java/lang/Thread.getName:()Ljava/lang/String;
	invokevirtual	Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
	ldc	String ]
	invokevirtual	Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
	invokevirtual	Method java/lang/StringBuilder.toString:()Ljava/lang/String;
l2	invokevirtual	Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
	invokevirtual	Method java/lang/StringBuilder.toString:()Ljava/lang/String;
	areturn
  Labels:
   	l1 = 28 // new
   	l2 = 55 // invokevirtual

private scala.actors.threadpool.locks.CondVar asCondVar(scala.actors.threadpool.locks.Condition);
  Signature: (Lscala/actors/threadpool/locks/Condition;)Lscala/actors/threadpool/locks/CondVar;
  Code:
   Stack=3, Locals=3, Args_size=2
	aload_1
	ifnonnull	l1 // aload_1
	new	class java/lang/NullPointerException
	dup
	invokespecial	Method java/lang/NullPointerException."<init>":()V
	athrow
l1	aload_1
	instanceof	class scala/actors/threadpool/locks/CondVar
	ifne	l2 // aload_1
	new	class java/lang/IllegalArgumentException
	dup
	ldc	String not owner
	invokespecial	Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
	athrow
l2	aload_1
	checkcast	class scala/actors/threadpool/locks/CondVar
	astore_2
	aload_2
	getfield	Field scala/actors/threadpool/locks/CondVar.lock:Lscala/actors/threadpool/locks/CondVar$ExclusiveLock;
	aload_0
	if_acmpeq	l3 // aload_2
	new	class java/lang/IllegalArgumentException
	dup
	ldc	String not owner
	invokespecial	Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
	athrow
l3	aload_2
	areturn
  Labels:
   	l1 = 12 // aload_1
   	l2 = 29 // aload_1
   	l3 = 52 // aload_2

}

