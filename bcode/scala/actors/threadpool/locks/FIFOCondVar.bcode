class scala.actors.threadpool.locks.FIFOCondVar extends scala.actors.threadpool.locks.CondVar implements scala.actors.threadpool.locks.Condition,java.io.Serializable
  InnerClass: 
   public abstract #42= #41 of #75; //QueuedSync=class scala/actors/threadpool/helpers/WaitQueue$QueuedSync of class scala/actors/threadpool/helpers/WaitQueue
   abstract #49= #48 of #37; //ExclusiveLock=class scala/actors/threadpool/locks/CondVar$ExclusiveLock of class scala/actors/threadpool/locks/CondVar
   public #77= #9 of #75; //WaitNode=class scala/actors/threadpool/helpers/WaitQueue$WaitNode of class scala/actors/threadpool/helpers/WaitQueue
   #34; //class scala/actors/threadpool/locks/FIFOCondVar$1
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Method	#37.#68;	//  scala/actors/threadpool/locks/CondVar."<init>":(Lscala/actors/threadpool/locks/CondVar$ExclusiveLock;)V
const #2 = class	#69;	//  scala/actors/threadpool/helpers/FIFOWaitQueue
const #3 = Method	#2.#70;	//  scala/actors/threadpool/helpers/FIFOWaitQueue."<init>":()V
const #4 = Field	#36.#71;	//  scala/actors/threadpool/locks/FIFOCondVar.wq:Lscala/actors/threadpool/helpers/WaitQueue;
const #5 = Field	#36.#72;	//  scala/actors/threadpool/locks/FIFOCondVar.lock:Lscala/actors/threadpool/locks/CondVar$ExclusiveLock;
const #6 = InterfaceMethod	#48.#73;	//  scala/actors/threadpool/locks/CondVar$ExclusiveLock.getHoldCount:()I
const #7 = class	#74;	//  java/lang/IllegalMonitorStateException
const #8 = Method	#7.#70;	//  java/lang/IllegalMonitorStateException."<init>":()V
const #9 = class	#76;	//  scala/actors/threadpool/helpers/WaitQueue$WaitNode
const #10 = Method	#9.#70;	//  scala/actors/threadpool/helpers/WaitQueue$WaitNode."<init>":()V
const #11 = Method	#75.#78;	//  scala/actors/threadpool/helpers/WaitQueue.insert:(Lscala/actors/threadpool/helpers/WaitQueue$WaitNode;)V
const #12 = InterfaceMethod	#48.#79;	//  scala/actors/threadpool/locks/CondVar$ExclusiveLock.unlock:()V
const #13 = Field	#36.#80;	//  scala/actors/threadpool/locks/FIFOCondVar.sync:Lscala/actors/threadpool/helpers/WaitQueue$QueuedSync;
const #14 = Method	#9.#81;	//  scala/actors/threadpool/helpers/WaitQueue$WaitNode.doWaitUninterruptibly:(Lscala/actors/threadpool/helpers/WaitQueue$QueuedSync;)V
const #15 = InterfaceMethod	#48.#82;	//  scala/actors/threadpool/locks/CondVar$ExclusiveLock.lock:()V
const #16 = Method	#83.#84;	//  java/lang/Thread.interrupted:()Z
const #17 = class	#85;	//  java/lang/InterruptedException
const #18 = Method	#17.#70;	//  java/lang/InterruptedException."<init>":()V
const #19 = Method	#9.#86;	//  scala/actors/threadpool/helpers/WaitQueue$WaitNode.doWait:(Lscala/actors/threadpool/helpers/WaitQueue$QueuedSync;)V
const #20 = Method	#87.#88;	//  scala/actors/threadpool/TimeUnit.toNanos:(J)J
const #21 = Method	#9.#89;	//  scala/actors/threadpool/helpers/WaitQueue$WaitNode.doTimedWait:(Lscala/actors/threadpool/helpers/WaitQueue$QueuedSync;J)Z
const #22 = class	#90;	//  java/lang/NullPointerException
const #23 = Method	#22.#70;	//  java/lang/NullPointerException."<init>":()V
const #24 = Method	#91.#92;	//  java/util/Date.getTime:()J
const #25 = Method	#93.#94;	//  java/lang/System.currentTimeMillis:()J
const #26 = Field	#87.#95;	//  scala/actors/threadpool/TimeUnit.MILLISECONDS:Lscala/actors/threadpool/TimeUnit;
const #27 = Method	#36.#96;	//  scala/actors/threadpool/locks/FIFOCondVar.await:(JLscala/actors/threadpool/TimeUnit;)Z
const #28 = InterfaceMethod	#48.#97;	//  scala/actors/threadpool/locks/CondVar$ExclusiveLock.isHeldByCurrentThread:()Z
const #29 = Method	#75.#98;	//  scala/actors/threadpool/helpers/WaitQueue.extract:()Lscala/actors/threadpool/helpers/WaitQueue$WaitNode;
const #30 = Method	#9.#99;	//  scala/actors/threadpool/helpers/WaitQueue$WaitNode.signal:(Lscala/actors/threadpool/helpers/WaitQueue$QueuedSync;)Z
const #31 = Method	#75.#100;	//  scala/actors/threadpool/helpers/WaitQueue.hasNodes:()Z
const #32 = Method	#75.#101;	//  scala/actors/threadpool/helpers/WaitQueue.getLength:()I
const #33 = Method	#75.#102;	//  scala/actors/threadpool/helpers/WaitQueue.getWaitingThreads:()Ljava/util/Collection;
const #34 = class	#103;	//  scala/actors/threadpool/locks/FIFOCondVar$1
const #35 = Method	#34.#70;	//  scala/actors/threadpool/locks/FIFOCondVar$1."<init>":()V
const #36 = class	#105;	//  scala/actors/threadpool/locks/FIFOCondVar
const #37 = class	#106;	//  scala/actors/threadpool/locks/CondVar
const #38 = class	#107;	//  scala/actors/threadpool/locks/Condition
const #39 = class	#108;	//  java/io/Serializable
const #40 = Asciz	sync;
const #41 = class	#109;	//  scala/actors/threadpool/helpers/WaitQueue$QueuedSync
const #42 = Asciz	QueuedSync;
const #43 = Asciz	InnerClasses;
const #44 = Asciz	Lscala/actors/threadpool/helpers/WaitQueue$QueuedSync;;
const #45 = Asciz	wq;
const #46 = Asciz	Lscala/actors/threadpool/helpers/WaitQueue;;
const #47 = Asciz	<init>;
const #48 = class	#110;	//  scala/actors/threadpool/locks/CondVar$ExclusiveLock
const #49 = Asciz	ExclusiveLock;
const #50 = Asciz	(Lscala/actors/threadpool/locks/CondVar$ExclusiveLock;)V;
const #51 = Asciz	Code;
const #52 = Asciz	awaitUninterruptibly;
const #53 = Asciz	()V;
const #54 = Asciz	await;
const #55 = Asciz	Exceptions;
const #56 = Asciz	(JLscala/actors/threadpool/TimeUnit;)Z;
const #57 = Asciz	awaitUntil;
const #58 = Asciz	(Ljava/util/Date;)Z;
const #59 = Asciz	signal;
const #60 = Asciz	signalAll;
const #61 = Asciz	hasWaiters;
const #62 = Asciz	()Z;
const #63 = Asciz	getWaitQueueLength;
const #64 = Asciz	()I;
const #65 = Asciz	getWaitingThreads;
const #66 = Asciz	()Ljava/util/Collection;;
const #67 = Asciz	<clinit>;
const #68 = NameAndType	#47:#50;//  "<init>":(Lscala/actors/threadpool/locks/CondVar$ExclusiveLock;)V
const #69 = Asciz	scala/actors/threadpool/helpers/FIFOWaitQueue;
const #70 = NameAndType	#47:#53;//  "<init>":()V
const #71 = NameAndType	#45:#46;//  wq:Lscala/actors/threadpool/helpers/WaitQueue;
const #72 = NameAndType	#111:#112;//  lock:Lscala/actors/threadpool/locks/CondVar$ExclusiveLock;
const #73 = NameAndType	#113:#64;//  getHoldCount:()I
const #74 = Asciz	java/lang/IllegalMonitorStateException;
const #75 = class	#114;	//  scala/actors/threadpool/helpers/WaitQueue
const #76 = Asciz	scala/actors/threadpool/helpers/WaitQueue$WaitNode;
const #77 = Asciz	WaitNode;
const #78 = NameAndType	#115:#116;//  insert:(Lscala/actors/threadpool/helpers/WaitQueue$WaitNode;)V
const #79 = NameAndType	#117:#53;//  unlock:()V
const #80 = NameAndType	#40:#44;//  sync:Lscala/actors/threadpool/helpers/WaitQueue$QueuedSync;
const #81 = NameAndType	#118:#119;//  doWaitUninterruptibly:(Lscala/actors/threadpool/helpers/WaitQueue$QueuedSync;)V
const #82 = NameAndType	#111:#53;//  lock:()V
const #83 = class	#120;	//  java/lang/Thread
const #84 = NameAndType	#121:#62;//  interrupted:()Z
const #85 = Asciz	java/lang/InterruptedException;
const #86 = NameAndType	#122:#119;//  doWait:(Lscala/actors/threadpool/helpers/WaitQueue$QueuedSync;)V
const #87 = class	#123;	//  scala/actors/threadpool/TimeUnit
const #88 = NameAndType	#124:#125;//  toNanos:(J)J
const #89 = NameAndType	#126:#127;//  doTimedWait:(Lscala/actors/threadpool/helpers/WaitQueue$QueuedSync;J)Z
const #90 = Asciz	java/lang/NullPointerException;
const #91 = class	#128;	//  java/util/Date
const #92 = NameAndType	#129:#130;//  getTime:()J
const #93 = class	#131;	//  java/lang/System
const #94 = NameAndType	#132:#130;//  currentTimeMillis:()J
const #95 = NameAndType	#133:#134;//  MILLISECONDS:Lscala/actors/threadpool/TimeUnit;
const #96 = NameAndType	#54:#56;//  await:(JLscala/actors/threadpool/TimeUnit;)Z
const #97 = NameAndType	#135:#62;//  isHeldByCurrentThread:()Z
const #98 = NameAndType	#136:#137;//  extract:()Lscala/actors/threadpool/helpers/WaitQueue$WaitNode;
const #99 = NameAndType	#59:#138;//  signal:(Lscala/actors/threadpool/helpers/WaitQueue$QueuedSync;)Z
const #100 = NameAndType	#139:#62;//  hasNodes:()Z
const #101 = NameAndType	#140:#64;//  getLength:()I
const #102 = NameAndType	#65:#66;//  getWaitingThreads:()Ljava/util/Collection;
const #103 = Asciz	scala/actors/threadpool/locks/FIFOCondVar$1;
const #104 = Asciz	;
const #105 = Asciz	scala/actors/threadpool/locks/FIFOCondVar;
const #106 = Asciz	scala/actors/threadpool/locks/CondVar;
const #107 = Asciz	scala/actors/threadpool/locks/Condition;
const #108 = Asciz	java/io/Serializable;
const #109 = Asciz	scala/actors/threadpool/helpers/WaitQueue$QueuedSync;
const #110 = Asciz	scala/actors/threadpool/locks/CondVar$ExclusiveLock;
const #111 = Asciz	lock;
const #112 = Asciz	Lscala/actors/threadpool/locks/CondVar$ExclusiveLock;;
const #113 = Asciz	getHoldCount;
const #114 = Asciz	scala/actors/threadpool/helpers/WaitQueue;
const #115 = Asciz	insert;
const #116 = Asciz	(Lscala/actors/threadpool/helpers/WaitQueue$WaitNode;)V;
const #117 = Asciz	unlock;
const #118 = Asciz	doWaitUninterruptibly;
const #119 = Asciz	(Lscala/actors/threadpool/helpers/WaitQueue$QueuedSync;)V;
const #120 = Asciz	java/lang/Thread;
const #121 = Asciz	interrupted;
const #122 = Asciz	doWait;
const #123 = Asciz	scala/actors/threadpool/TimeUnit;
const #124 = Asciz	toNanos;
const #125 = Asciz	(J)J;
const #126 = Asciz	doTimedWait;
const #127 = Asciz	(Lscala/actors/threadpool/helpers/WaitQueue$QueuedSync;J)Z;
const #128 = Asciz	java/util/Date;
const #129 = Asciz	getTime;
const #130 = Asciz	()J;
const #131 = Asciz	java/lang/System;
const #132 = Asciz	currentTimeMillis;
const #133 = Asciz	MILLISECONDS;
const #134 = Asciz	Lscala/actors/threadpool/TimeUnit;;
const #135 = Asciz	isHeldByCurrentThread;
const #136 = Asciz	extract;
const #137 = Asciz	()Lscala/actors/threadpool/helpers/WaitQueue$WaitNode;;
const #138 = Asciz	(Lscala/actors/threadpool/helpers/WaitQueue$QueuedSync;)Z;
const #139 = Asciz	hasNodes;
const #140 = Asciz	getLength;

{
scala.actors.threadpool.locks.FIFOCondVar(scala.actors.threadpool.locks.CondVar$ExclusiveLock);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokespecial	#1; //Method scala/actors/threadpool/locks/CondVar."<init>":(Lscala/actors/threadpool/locks/CondVar$ExclusiveLock;)V
   5:	aload_0
   6:	new	#2; //class scala/actors/threadpool/helpers/FIFOWaitQueue
   9:	dup
   10:	invokespecial	#3; //Method scala/actors/threadpool/helpers/FIFOWaitQueue."<init>":()V
   13:	putfield	#4; //Field wq:Lscala/actors/threadpool/helpers/WaitQueue;
   16:	return

public void awaitUninterruptibly();
  Code:
   Stack=2, Locals=6, Args_size=1
   0:	aload_0
   1:	getfield	#5; //Field lock:Lscala/actors/threadpool/locks/CondVar$ExclusiveLock;
   4:	invokeinterface	#6,  1; //InterfaceMethod scala/actors/threadpool/locks/CondVar$ExclusiveLock.getHoldCount:()I
   9:	istore_1
   10:	iload_1
   11:	ifne	22
   14:	new	#7; //class java/lang/IllegalMonitorStateException
   17:	dup
   18:	invokespecial	#8; //Method java/lang/IllegalMonitorStateException."<init>":()V
   21:	athrow
   22:	new	#9; //class scala/actors/threadpool/helpers/WaitQueue$WaitNode
   25:	dup
   26:	invokespecial	#10; //Method scala/actors/threadpool/helpers/WaitQueue$WaitNode."<init>":()V
   29:	astore_2
   30:	aload_0
   31:	getfield	#4; //Field wq:Lscala/actors/threadpool/helpers/WaitQueue;
   34:	aload_2
   35:	invokevirtual	#11; //Method scala/actors/threadpool/helpers/WaitQueue.insert:(Lscala/actors/threadpool/helpers/WaitQueue$WaitNode;)V
   38:	iload_1
   39:	istore_3
   40:	iload_3
   41:	ifle	59
   44:	aload_0
   45:	getfield	#5; //Field lock:Lscala/actors/threadpool/locks/CondVar$ExclusiveLock;
   48:	invokeinterface	#12,  1; //InterfaceMethod scala/actors/threadpool/locks/CondVar$ExclusiveLock.unlock:()V
   53:	iinc	3, -1
   56:	goto	40
   59:	aload_2
   60:	getstatic	#13; //Field sync:Lscala/actors/threadpool/helpers/WaitQueue$QueuedSync;
   63:	invokevirtual	#14; //Method scala/actors/threadpool/helpers/WaitQueue$WaitNode.doWaitUninterruptibly:(Lscala/actors/threadpool/helpers/WaitQueue$QueuedSync;)V
   66:	iload_1
   67:	istore_3
   68:	iload_3
   69:	ifle	87
   72:	aload_0
   73:	getfield	#5; //Field lock:Lscala/actors/threadpool/locks/CondVar$ExclusiveLock;
   76:	invokeinterface	#15,  1; //InterfaceMethod scala/actors/threadpool/locks/CondVar$ExclusiveLock.lock:()V
   81:	iinc	3, -1
   84:	goto	68
   87:	goto	118
   90:	astore	4
   92:	iload_1
   93:	istore	5
   95:	iload	5
   97:	ifle	115
   100:	aload_0
   101:	getfield	#5; //Field lock:Lscala/actors/threadpool/locks/CondVar$ExclusiveLock;
   104:	invokeinterface	#15,  1; //InterfaceMethod scala/actors/threadpool/locks/CondVar$ExclusiveLock.lock:()V
   109:	iinc	5, -1
   112:	goto	95
   115:	aload	4
   117:	athrow
   118:	return
  Exception table:
   from   to  target type
    59    66    90   any
    90    92    90   any

public void await()   throws java.lang.InterruptedException;
  Code:
   Stack=2, Locals=6, Args_size=1
   0:	aload_0
   1:	getfield	#5; //Field lock:Lscala/actors/threadpool/locks/CondVar$ExclusiveLock;
   4:	invokeinterface	#6,  1; //InterfaceMethod scala/actors/threadpool/locks/CondVar$ExclusiveLock.getHoldCount:()I
   9:	istore_1
   10:	iload_1
   11:	ifne	22
   14:	new	#7; //class java/lang/IllegalMonitorStateException
   17:	dup
   18:	invokespecial	#8; //Method java/lang/IllegalMonitorStateException."<init>":()V
   21:	athrow
   22:	invokestatic	#16; //Method java/lang/Thread.interrupted:()Z
   25:	ifeq	36
   28:	new	#17; //class java/lang/InterruptedException
   31:	dup
   32:	invokespecial	#18; //Method java/lang/InterruptedException."<init>":()V
   35:	athrow
   36:	new	#9; //class scala/actors/threadpool/helpers/WaitQueue$WaitNode
   39:	dup
   40:	invokespecial	#10; //Method scala/actors/threadpool/helpers/WaitQueue$WaitNode."<init>":()V
   43:	astore_2
   44:	aload_0
   45:	getfield	#4; //Field wq:Lscala/actors/threadpool/helpers/WaitQueue;
   48:	aload_2
   49:	invokevirtual	#11; //Method scala/actors/threadpool/helpers/WaitQueue.insert:(Lscala/actors/threadpool/helpers/WaitQueue$WaitNode;)V
   52:	iload_1
   53:	istore_3
   54:	iload_3
   55:	ifle	73
   58:	aload_0
   59:	getfield	#5; //Field lock:Lscala/actors/threadpool/locks/CondVar$ExclusiveLock;
   62:	invokeinterface	#12,  1; //InterfaceMethod scala/actors/threadpool/locks/CondVar$ExclusiveLock.unlock:()V
   67:	iinc	3, -1
   70:	goto	54
   73:	aload_2
   74:	getstatic	#13; //Field sync:Lscala/actors/threadpool/helpers/WaitQueue$QueuedSync;
   77:	invokevirtual	#19; //Method scala/actors/threadpool/helpers/WaitQueue$WaitNode.doWait:(Lscala/actors/threadpool/helpers/WaitQueue$QueuedSync;)V
   80:	iload_1
   81:	istore_3
   82:	iload_3
   83:	ifle	101
   86:	aload_0
   87:	getfield	#5; //Field lock:Lscala/actors/threadpool/locks/CondVar$ExclusiveLock;
   90:	invokeinterface	#15,  1; //InterfaceMethod scala/actors/threadpool/locks/CondVar$ExclusiveLock.lock:()V
   95:	iinc	3, -1
   98:	goto	82
   101:	goto	132
   104:	astore	4
   106:	iload_1
   107:	istore	5
   109:	iload	5
   111:	ifle	129
   114:	aload_0
   115:	getfield	#5; //Field lock:Lscala/actors/threadpool/locks/CondVar$ExclusiveLock;
   118:	invokeinterface	#15,  1; //InterfaceMethod scala/actors/threadpool/locks/CondVar$ExclusiveLock.lock:()V
   123:	iinc	5, -1
   126:	goto	109
   129:	aload	4
   131:	athrow
   132:	return
  Exception table:
   from   to  target type
    73    80   104   any
   104   106   104   any
  Exceptions: 
   throws java.lang.InterruptedException
public boolean await(long, scala.actors.threadpool.TimeUnit)   throws java.lang.InterruptedException;
  Code:
   Stack=4, Locals=12, Args_size=3
   0:	aload_0
   1:	getfield	#5; //Field lock:Lscala/actors/threadpool/locks/CondVar$ExclusiveLock;
   4:	invokeinterface	#6,  1; //InterfaceMethod scala/actors/threadpool/locks/CondVar$ExclusiveLock.getHoldCount:()I
   9:	istore	4
   11:	iload	4
   13:	ifne	24
   16:	new	#7; //class java/lang/IllegalMonitorStateException
   19:	dup
   20:	invokespecial	#8; //Method java/lang/IllegalMonitorStateException."<init>":()V
   23:	athrow
   24:	invokestatic	#16; //Method java/lang/Thread.interrupted:()Z
   27:	ifeq	38
   30:	new	#17; //class java/lang/InterruptedException
   33:	dup
   34:	invokespecial	#18; //Method java/lang/InterruptedException."<init>":()V
   37:	athrow
   38:	aload_3
   39:	lload_1
   40:	invokevirtual	#20; //Method scala/actors/threadpool/TimeUnit.toNanos:(J)J
   43:	lstore	5
   45:	new	#9; //class scala/actors/threadpool/helpers/WaitQueue$WaitNode
   48:	dup
   49:	invokespecial	#10; //Method scala/actors/threadpool/helpers/WaitQueue$WaitNode."<init>":()V
   52:	astore	7
   54:	aload_0
   55:	getfield	#4; //Field wq:Lscala/actors/threadpool/helpers/WaitQueue;
   58:	aload	7
   60:	invokevirtual	#11; //Method scala/actors/threadpool/helpers/WaitQueue.insert:(Lscala/actors/threadpool/helpers/WaitQueue$WaitNode;)V
   63:	iconst_0
   64:	istore	8
   66:	iload	4
   68:	istore	9
   70:	iload	9
   72:	ifle	90
   75:	aload_0
   76:	getfield	#5; //Field lock:Lscala/actors/threadpool/locks/CondVar$ExclusiveLock;
   79:	invokeinterface	#12,  1; //InterfaceMethod scala/actors/threadpool/locks/CondVar$ExclusiveLock.unlock:()V
   84:	iinc	9, -1
   87:	goto	70
   90:	aload	7
   92:	getstatic	#13; //Field sync:Lscala/actors/threadpool/helpers/WaitQueue$QueuedSync;
   95:	lload	5
   97:	invokevirtual	#21; //Method scala/actors/threadpool/helpers/WaitQueue$WaitNode.doTimedWait:(Lscala/actors/threadpool/helpers/WaitQueue$QueuedSync;J)Z
   100:	istore	8
   102:	iload	4
   104:	istore	9
   106:	iload	9
   108:	ifle	126
   111:	aload_0
   112:	getfield	#5; //Field lock:Lscala/actors/threadpool/locks/CondVar$ExclusiveLock;
   115:	invokeinterface	#15,  1; //InterfaceMethod scala/actors/threadpool/locks/CondVar$ExclusiveLock.lock:()V
   120:	iinc	9, -1
   123:	goto	106
   126:	goto	158
   129:	astore	10
   131:	iload	4
   133:	istore	11
   135:	iload	11
   137:	ifle	155
   140:	aload_0
   141:	getfield	#5; //Field lock:Lscala/actors/threadpool/locks/CondVar$ExclusiveLock;
   144:	invokeinterface	#15,  1; //InterfaceMethod scala/actors/threadpool/locks/CondVar$ExclusiveLock.lock:()V
   149:	iinc	11, -1
   152:	goto	135
   155:	aload	10
   157:	athrow
   158:	iload	8
   160:	ireturn
  Exception table:
   from   to  target type
    90   102   129   any
   129   131   129   any
  Exceptions: 
   throws java.lang.InterruptedException
public boolean awaitUntil(java.util.Date)   throws java.lang.InterruptedException;
  Code:
   Stack=4, Locals=8, Args_size=2
   0:	aload_1
   1:	ifnonnull	12
   4:	new	#22; //class java/lang/NullPointerException
   7:	dup
   8:	invokespecial	#23; //Method java/lang/NullPointerException."<init>":()V
   11:	athrow
   12:	aload_1
   13:	invokevirtual	#24; //Method java/util/Date.getTime:()J
   16:	lstore_2
   17:	invokestatic	#25; //Method java/lang/System.currentTimeMillis:()J
   20:	lstore	4
   22:	lload_2
   23:	lload	4
   25:	lsub
   26:	lstore	6
   28:	aload_0
   29:	lload	6
   31:	getstatic	#26; //Field scala/actors/threadpool/TimeUnit.MILLISECONDS:Lscala/actors/threadpool/TimeUnit;
   34:	invokevirtual	#27; //Method await:(JLscala/actors/threadpool/TimeUnit;)Z
   37:	ireturn
  Exceptions: 
   throws java.lang.InterruptedException
public void signal();
  Code:
   Stack=2, Locals=2, Args_size=1
   0:	aload_0
   1:	getfield	#5; //Field lock:Lscala/actors/threadpool/locks/CondVar$ExclusiveLock;
   4:	invokeinterface	#28,  1; //InterfaceMethod scala/actors/threadpool/locks/CondVar$ExclusiveLock.isHeldByCurrentThread:()Z
   9:	ifne	20
   12:	new	#7; //class java/lang/IllegalMonitorStateException
   15:	dup
   16:	invokespecial	#8; //Method java/lang/IllegalMonitorStateException."<init>":()V
   19:	athrow
   20:	aload_0
   21:	getfield	#4; //Field wq:Lscala/actors/threadpool/helpers/WaitQueue;
   24:	invokevirtual	#29; //Method scala/actors/threadpool/helpers/WaitQueue.extract:()Lscala/actors/threadpool/helpers/WaitQueue$WaitNode;
   27:	astore_1
   28:	aload_1
   29:	ifnonnull	33
   32:	return
   33:	aload_1
   34:	getstatic	#13; //Field sync:Lscala/actors/threadpool/helpers/WaitQueue$QueuedSync;
   37:	invokevirtual	#30; //Method scala/actors/threadpool/helpers/WaitQueue$WaitNode.signal:(Lscala/actors/threadpool/helpers/WaitQueue$QueuedSync;)Z
   40:	ifeq	44
   43:	return
   44:	goto	20

public void signalAll();
  Code:
   Stack=2, Locals=2, Args_size=1
   0:	aload_0
   1:	getfield	#5; //Field lock:Lscala/actors/threadpool/locks/CondVar$ExclusiveLock;
   4:	invokeinterface	#28,  1; //InterfaceMethod scala/actors/threadpool/locks/CondVar$ExclusiveLock.isHeldByCurrentThread:()Z
   9:	ifne	20
   12:	new	#7; //class java/lang/IllegalMonitorStateException
   15:	dup
   16:	invokespecial	#8; //Method java/lang/IllegalMonitorStateException."<init>":()V
   19:	athrow
   20:	aload_0
   21:	getfield	#4; //Field wq:Lscala/actors/threadpool/helpers/WaitQueue;
   24:	invokevirtual	#29; //Method scala/actors/threadpool/helpers/WaitQueue.extract:()Lscala/actors/threadpool/helpers/WaitQueue$WaitNode;
   27:	astore_1
   28:	aload_1
   29:	ifnonnull	33
   32:	return
   33:	aload_1
   34:	getstatic	#13; //Field sync:Lscala/actors/threadpool/helpers/WaitQueue$QueuedSync;
   37:	invokevirtual	#30; //Method scala/actors/threadpool/helpers/WaitQueue$WaitNode.signal:(Lscala/actors/threadpool/helpers/WaitQueue$QueuedSync;)Z
   40:	pop
   41:	goto	20

protected boolean hasWaiters();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#5; //Field lock:Lscala/actors/threadpool/locks/CondVar$ExclusiveLock;
   4:	invokeinterface	#28,  1; //InterfaceMethod scala/actors/threadpool/locks/CondVar$ExclusiveLock.isHeldByCurrentThread:()Z
   9:	ifne	20
   12:	new	#7; //class java/lang/IllegalMonitorStateException
   15:	dup
   16:	invokespecial	#8; //Method java/lang/IllegalMonitorStateException."<init>":()V
   19:	athrow
   20:	aload_0
   21:	getfield	#4; //Field wq:Lscala/actors/threadpool/helpers/WaitQueue;
   24:	invokevirtual	#31; //Method scala/actors/threadpool/helpers/WaitQueue.hasNodes:()Z
   27:	ireturn

protected int getWaitQueueLength();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#5; //Field lock:Lscala/actors/threadpool/locks/CondVar$ExclusiveLock;
   4:	invokeinterface	#28,  1; //InterfaceMethod scala/actors/threadpool/locks/CondVar$ExclusiveLock.isHeldByCurrentThread:()Z
   9:	ifne	20
   12:	new	#7; //class java/lang/IllegalMonitorStateException
   15:	dup
   16:	invokespecial	#8; //Method java/lang/IllegalMonitorStateException."<init>":()V
   19:	athrow
   20:	aload_0
   21:	getfield	#4; //Field wq:Lscala/actors/threadpool/helpers/WaitQueue;
   24:	invokevirtual	#32; //Method scala/actors/threadpool/helpers/WaitQueue.getLength:()I
   27:	ireturn

protected java.util.Collection getWaitingThreads();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#5; //Field lock:Lscala/actors/threadpool/locks/CondVar$ExclusiveLock;
   4:	invokeinterface	#28,  1; //InterfaceMethod scala/actors/threadpool/locks/CondVar$ExclusiveLock.isHeldByCurrentThread:()Z
   9:	ifne	20
   12:	new	#7; //class java/lang/IllegalMonitorStateException
   15:	dup
   16:	invokespecial	#8; //Method java/lang/IllegalMonitorStateException."<init>":()V
   19:	athrow
   20:	aload_0
   21:	getfield	#4; //Field wq:Lscala/actors/threadpool/helpers/WaitQueue;
   24:	invokevirtual	#33; //Method scala/actors/threadpool/helpers/WaitQueue.getWaitingThreads:()Ljava/util/Collection;
   27:	areturn

static {};
  Code:
   Stack=2, Locals=0, Args_size=0
   0:	new	#34; //class scala/actors/threadpool/locks/FIFOCondVar$1
   3:	dup
   4:	invokespecial	#35; //Method scala/actors/threadpool/locks/FIFOCondVar$1."<init>":()V
   7:	putstatic	#13; //Field sync:Lscala/actors/threadpool/helpers/WaitQueue$QueuedSync;
   10:	return

}

