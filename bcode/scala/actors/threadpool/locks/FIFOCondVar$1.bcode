final class scala.actors.threadpool.locks.FIFOCondVar$1 extends java.lang.Object implements scala.actors.threadpool.helpers.WaitQueue$QueuedSync
  EnclosingMethod: length = 0x4
   00 10 00 00 
  InnerClass: 
   public #10= #9 of #21; //WaitNode=class scala/actors/threadpool/helpers/WaitQueue$WaitNode of class scala/actors/threadpool/helpers/WaitQueue
   #2; //class scala/actors/threadpool/locks/FIFOCondVar$1
   public abstract #23= #4 of #21; //QueuedSync=class scala/actors/threadpool/helpers/WaitQueue$QueuedSync of class scala/actors/threadpool/helpers/WaitQueue
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Method	#3.#17;	//  java/lang/Object."<init>":()V
const #2 = class	#18;	//  scala/actors/threadpool/locks/FIFOCondVar$1
const #3 = class	#20;	//  java/lang/Object
const #4 = class	#22;	//  scala/actors/threadpool/helpers/WaitQueue$QueuedSync
const #5 = Asciz	<init>;
const #6 = Asciz	()V;
const #7 = Asciz	Code;
const #8 = Asciz	recheck;
const #9 = class	#24;	//  scala/actors/threadpool/helpers/WaitQueue$WaitNode
const #10 = Asciz	WaitNode;
const #11 = Asciz	InnerClasses;
const #12 = Asciz	(Lscala/actors/threadpool/helpers/WaitQueue$WaitNode;)Z;
const #13 = Asciz	takeOver;
const #14 = Asciz	(Lscala/actors/threadpool/helpers/WaitQueue$WaitNode;)V;
const #15 = Asciz	EnclosingMethod;
const #16 = class	#25;	//  scala/actors/threadpool/locks/FIFOCondVar
const #17 = NameAndType	#5:#6;//  "<init>":()V
const #18 = Asciz	scala/actors/threadpool/locks/FIFOCondVar$1;
const #19 = Asciz	;
const #20 = Asciz	java/lang/Object;
const #21 = class	#26;	//  scala/actors/threadpool/helpers/WaitQueue
const #22 = Asciz	scala/actors/threadpool/helpers/WaitQueue$QueuedSync;
const #23 = Asciz	QueuedSync;
const #24 = Asciz	scala/actors/threadpool/helpers/WaitQueue$WaitNode;
const #25 = Asciz	scala/actors/threadpool/locks/FIFOCondVar;
const #26 = Asciz	scala/actors/threadpool/helpers/WaitQueue;

{
scala.actors.threadpool.locks.FIFOCondVar$1();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokespecial	#1; //Method java/lang/Object."<init>":()V
   4:	return

public boolean recheck(scala.actors.threadpool.helpers.WaitQueue$WaitNode);
  Code:
   Stack=1, Locals=2, Args_size=2
   0:	iconst_0
   1:	ireturn

public void takeOver(scala.actors.threadpool.helpers.WaitQueue$WaitNode);
  Code:
   Stack=0, Locals=2, Args_size=2
   0:	return

}

