public class scala.actors.threadpool.ThreadPoolExecutor$DiscardOldestPolicy extends java.lang.Object implements scala.actors.threadpool.RejectedExecutionHandler
  InnerClass: 
   public #22= #6 of #15; //DiscardOldestPolicy=class scala/actors/threadpool/ThreadPoolExecutor$DiscardOldestPolicy of class scala/actors/threadpool/ThreadPoolExecutor
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Method	#7.#14;	//  java/lang/Object."<init>":()V
const #2 = Method	#15.#16;	//  scala/actors/threadpool/ThreadPoolExecutor.isShutdown:()Z
const #3 = Method	#15.#17;	//  scala/actors/threadpool/ThreadPoolExecutor.getQueue:()Lscala/actors/threadpool/BlockingQueue;
const #4 = InterfaceMethod	#18.#19;	//  scala/actors/threadpool/BlockingQueue.poll:()Ljava/lang/Object;
const #5 = Method	#15.#20;	//  scala/actors/threadpool/ThreadPoolExecutor.execute:(Ljava/lang/Runnable;)V
const #6 = class	#21;	//  scala/actors/threadpool/ThreadPoolExecutor$DiscardOldestPolicy
const #7 = class	#24;	//  java/lang/Object
const #8 = class	#25;	//  scala/actors/threadpool/RejectedExecutionHandler
const #9 = Asciz	<init>;
const #10 = Asciz	()V;
const #11 = Asciz	Code;
const #12 = Asciz	rejectedExecution;
const #13 = Asciz	(Ljava/lang/Runnable;Lscala/actors/threadpool/ThreadPoolExecutor;)V;
const #14 = NameAndType	#9:#10;//  "<init>":()V
const #15 = class	#26;	//  scala/actors/threadpool/ThreadPoolExecutor
const #16 = NameAndType	#27:#28;//  isShutdown:()Z
const #17 = NameAndType	#29:#30;//  getQueue:()Lscala/actors/threadpool/BlockingQueue;
const #18 = class	#31;	//  scala/actors/threadpool/BlockingQueue
const #19 = NameAndType	#32:#33;//  poll:()Ljava/lang/Object;
const #20 = NameAndType	#34:#35;//  execute:(Ljava/lang/Runnable;)V
const #21 = Asciz	scala/actors/threadpool/ThreadPoolExecutor$DiscardOldestPolicy;
const #22 = Asciz	DiscardOldestPolicy;
const #23 = Asciz	InnerClasses;
const #24 = Asciz	java/lang/Object;
const #25 = Asciz	scala/actors/threadpool/RejectedExecutionHandler;
const #26 = Asciz	scala/actors/threadpool/ThreadPoolExecutor;
const #27 = Asciz	isShutdown;
const #28 = Asciz	()Z;
const #29 = Asciz	getQueue;
const #30 = Asciz	()Lscala/actors/threadpool/BlockingQueue;;
const #31 = Asciz	scala/actors/threadpool/BlockingQueue;
const #32 = Asciz	poll;
const #33 = Asciz	()Ljava/lang/Object;;
const #34 = Asciz	execute;
const #35 = Asciz	(Ljava/lang/Runnable;)V;

{
public scala.actors.threadpool.ThreadPoolExecutor$DiscardOldestPolicy();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokespecial	#1; //Method java/lang/Object."<init>":()V
   4:	return

public void rejectedExecution(java.lang.Runnable, scala.actors.threadpool.ThreadPoolExecutor);
  Code:
   Stack=2, Locals=3, Args_size=3
   0:	aload_2
   1:	invokevirtual	#2; //Method scala/actors/threadpool/ThreadPoolExecutor.isShutdown:()Z
   4:	ifne	22
   7:	aload_2
   8:	invokevirtual	#3; //Method scala/actors/threadpool/ThreadPoolExecutor.getQueue:()Lscala/actors/threadpool/BlockingQueue;
   11:	invokeinterface	#4,  1; //InterfaceMethod scala/actors/threadpool/BlockingQueue.poll:()Ljava/lang/Object;
   16:	pop
   17:	aload_2
   18:	aload_1
   19:	invokevirtual	#5; //Method scala/actors/threadpool/ThreadPoolExecutor.execute:(Ljava/lang/Runnable;)V
   22:	return

}

