abstract class scala.actors.threadpool.SynchronousQueue$WaitQueue extends java.lang.Object implements java.io.Serializable
  InnerClass: 
   final Node=class scala/actors/threadpool/SynchronousQueue$Node of class scala/actors/threadpool/SynchronousQueue
   abstract WaitQueue=class scala/actors/threadpool/SynchronousQueue$WaitQueue of class scala/actors/threadpool/SynchronousQueue
  minor version: 0
  major version: 49
  Constant pool:
Method	java/lang/Object."<init>":()V
class	scala/actors/threadpool/SynchronousQueue$WaitQueue
class	java/lang/Object
class	java/io/Serializable
Asciz	<init>;
Asciz	()V;
Asciz	Code;
Asciz	enq;
class	scala/actors/threadpool/SynchronousQueue$Node
Asciz	Node;
Asciz	InnerClasses;
Asciz	(Ljava/lang/Object;)Lscala/actors/threadpool/SynchronousQueue$Node;;
Asciz	deq;
Asciz	()Lscala/actors/threadpool/SynchronousQueue$Node;;
Asciz	unlink;
Asciz	(Lscala/actors/threadpool/SynchronousQueue$Node;)V;
Asciz	shouldUnlink;
Asciz	(Lscala/actors/threadpool/SynchronousQueue$Node;)Z;
NameAndType	"<init>":()V
class	scala/actors/threadpool/SynchronousQueue
Asciz	scala/actors/threadpool/SynchronousQueue$WaitQueue;
Asciz	WaitQueue;
Asciz	java/lang/Object;
Asciz	java/io/Serializable;
Asciz	scala/actors/threadpool/SynchronousQueue$Node;
Asciz	scala/actors/threadpool/SynchronousQueue;

{
scala.actors.threadpool.SynchronousQueue$WaitQueue();
  Signature: ()V
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokespecial	Method java/lang/Object."<init>":()V
	return
  Labels:

abstract scala.actors.threadpool.SynchronousQueue$Node enq(java.lang.Object);
  Signature: (Ljava/lang/Object;)Lscala/actors/threadpool/SynchronousQueue$Node;

abstract scala.actors.threadpool.SynchronousQueue$Node deq();
  Signature: ()Lscala/actors/threadpool/SynchronousQueue$Node;

abstract void unlink(scala.actors.threadpool.SynchronousQueue$Node);
  Signature: (Lscala/actors/threadpool/SynchronousQueue$Node;)V

abstract boolean shouldUnlink(scala.actors.threadpool.SynchronousQueue$Node);
  Signature: (Lscala/actors/threadpool/SynchronousQueue$Node;)Z

}

