class scala.actors.threadpool.Executors$DefaultThreadFactory extends java.lang.Object implements scala.actors.threadpool.ThreadFactory
  InnerClass: 
   #69= #26 of #67; //DefaultThreadFactory=class scala/actors/threadpool/Executors$DefaultThreadFactory of class scala/actors/threadpool/Executors
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Method	#27.#42;	//  java/lang/Object."<init>":()V
const #2 = class	#43;	//  scala/actors/threadpool/AtomicInteger
const #3 = Method	#2.#44;	//  scala/actors/threadpool/AtomicInteger."<init>":(I)V
const #4 = Field	#26.#45;	//  scala/actors/threadpool/Executors$DefaultThreadFactory.threadNumber:Lscala/actors/threadpool/AtomicInteger;
const #5 = Method	#46.#47;	//  java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
const #6 = Method	#48.#49;	//  java/lang/SecurityManager.getThreadGroup:()Ljava/lang/ThreadGroup;
const #7 = Method	#20.#50;	//  java/lang/Thread.currentThread:()Ljava/lang/Thread;
const #8 = Method	#20.#49;	//  java/lang/Thread.getThreadGroup:()Ljava/lang/ThreadGroup;
const #9 = Field	#26.#51;	//  scala/actors/threadpool/Executors$DefaultThreadFactory.group:Ljava/lang/ThreadGroup;
const #10 = class	#52;	//  java/lang/StringBuilder
const #11 = Method	#10.#42;	//  java/lang/StringBuilder."<init>":()V
const #12 = String	#53;	//  pool-
const #13 = Method	#10.#54;	//  java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
const #14 = Field	#26.#55;	//  scala/actors/threadpool/Executors$DefaultThreadFactory.poolNumber:Lscala/actors/threadpool/AtomicInteger;
const #15 = Method	#2.#56;	//  scala/actors/threadpool/AtomicInteger.getAndIncrement:()I
const #16 = Method	#10.#57;	//  java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
const #17 = String	#58;	//  -thread-
const #18 = Method	#10.#59;	//  java/lang/StringBuilder.toString:()Ljava/lang/String;
const #19 = Field	#26.#60;	//  scala/actors/threadpool/Executors$DefaultThreadFactory.namePrefix:Ljava/lang/String;
const #20 = class	#61;	//  java/lang/Thread
const #21 = Method	#20.#62;	//  java/lang/Thread."<init>":(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;Ljava/lang/String;J)V
const #22 = Method	#20.#63;	//  java/lang/Thread.isDaemon:()Z
const #23 = Method	#20.#64;	//  java/lang/Thread.setDaemon:(Z)V
const #24 = Method	#20.#65;	//  java/lang/Thread.getPriority:()I
const #25 = Method	#20.#66;	//  java/lang/Thread.setPriority:(I)V
const #26 = class	#68;	//  scala/actors/threadpool/Executors$DefaultThreadFactory
const #27 = class	#71;	//  java/lang/Object
const #28 = class	#72;	//  scala/actors/threadpool/ThreadFactory
const #29 = Asciz	poolNumber;
const #30 = Asciz	Lscala/actors/threadpool/AtomicInteger;;
const #31 = Asciz	group;
const #32 = Asciz	Ljava/lang/ThreadGroup;;
const #33 = Asciz	threadNumber;
const #34 = Asciz	namePrefix;
const #35 = Asciz	Ljava/lang/String;;
const #36 = Asciz	<init>;
const #37 = Asciz	()V;
const #38 = Asciz	Code;
const #39 = Asciz	newThread;
const #40 = Asciz	(Ljava/lang/Runnable;)Ljava/lang/Thread;;
const #41 = Asciz	<clinit>;
const #42 = NameAndType	#36:#37;//  "<init>":()V
const #43 = Asciz	scala/actors/threadpool/AtomicInteger;
const #44 = NameAndType	#36:#73;//  "<init>":(I)V
const #45 = NameAndType	#33:#30;//  threadNumber:Lscala/actors/threadpool/AtomicInteger;
const #46 = class	#74;	//  java/lang/System
const #47 = NameAndType	#75:#76;//  getSecurityManager:()Ljava/lang/SecurityManager;
const #48 = class	#77;	//  java/lang/SecurityManager
const #49 = NameAndType	#78:#79;//  getThreadGroup:()Ljava/lang/ThreadGroup;
const #50 = NameAndType	#80:#81;//  currentThread:()Ljava/lang/Thread;
const #51 = NameAndType	#31:#32;//  group:Ljava/lang/ThreadGroup;
const #52 = Asciz	java/lang/StringBuilder;
const #53 = Asciz	pool-;
const #54 = NameAndType	#82:#83;//  append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
const #55 = NameAndType	#29:#30;//  poolNumber:Lscala/actors/threadpool/AtomicInteger;
const #56 = NameAndType	#84:#85;//  getAndIncrement:()I
const #57 = NameAndType	#82:#86;//  append:(I)Ljava/lang/StringBuilder;
const #58 = Asciz	-thread-;
const #59 = NameAndType	#87:#88;//  toString:()Ljava/lang/String;
const #60 = NameAndType	#34:#35;//  namePrefix:Ljava/lang/String;
const #61 = Asciz	java/lang/Thread;
const #62 = NameAndType	#36:#89;//  "<init>":(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;Ljava/lang/String;J)V
const #63 = NameAndType	#90:#91;//  isDaemon:()Z
const #64 = NameAndType	#92:#93;//  setDaemon:(Z)V
const #65 = NameAndType	#94:#85;//  getPriority:()I
const #66 = NameAndType	#95:#73;//  setPriority:(I)V
const #67 = class	#96;	//  scala/actors/threadpool/Executors
const #68 = Asciz	scala/actors/threadpool/Executors$DefaultThreadFactory;
const #69 = Asciz	DefaultThreadFactory;
const #70 = Asciz	InnerClasses;
const #71 = Asciz	java/lang/Object;
const #72 = Asciz	scala/actors/threadpool/ThreadFactory;
const #73 = Asciz	(I)V;
const #74 = Asciz	java/lang/System;
const #75 = Asciz	getSecurityManager;
const #76 = Asciz	()Ljava/lang/SecurityManager;;
const #77 = Asciz	java/lang/SecurityManager;
const #78 = Asciz	getThreadGroup;
const #79 = Asciz	()Ljava/lang/ThreadGroup;;
const #80 = Asciz	currentThread;
const #81 = Asciz	()Ljava/lang/Thread;;
const #82 = Asciz	append;
const #83 = Asciz	(Ljava/lang/String;)Ljava/lang/StringBuilder;;
const #84 = Asciz	getAndIncrement;
const #85 = Asciz	()I;
const #86 = Asciz	(I)Ljava/lang/StringBuilder;;
const #87 = Asciz	toString;
const #88 = Asciz	()Ljava/lang/String;;
const #89 = Asciz	(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;Ljava/lang/String;J)V;
const #90 = Asciz	isDaemon;
const #91 = Asciz	()Z;
const #92 = Asciz	setDaemon;
const #93 = Asciz	(Z)V;
const #94 = Asciz	getPriority;
const #95 = Asciz	setPriority;
const #96 = Asciz	scala/actors/threadpool/Executors;

{
static final scala.actors.threadpool.AtomicInteger poolNumber;

final java.lang.ThreadGroup group;

final scala.actors.threadpool.AtomicInteger threadNumber;

final java.lang.String namePrefix;

scala.actors.threadpool.Executors$DefaultThreadFactory();
  Code:
   Stack=4, Locals=2, Args_size=1
   0:	aload_0
   1:	invokespecial	#1; //Method java/lang/Object."<init>":()V
   4:	aload_0
   5:	new	#2; //class scala/actors/threadpool/AtomicInteger
   8:	dup
   9:	iconst_1
   10:	invokespecial	#3; //Method scala/actors/threadpool/AtomicInteger."<init>":(I)V
   13:	putfield	#4; //Field threadNumber:Lscala/actors/threadpool/AtomicInteger;
   16:	invokestatic	#5; //Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
   19:	astore_1
   20:	aload_0
   21:	aload_1
   22:	ifnull	32
   25:	aload_1
   26:	invokevirtual	#6; //Method java/lang/SecurityManager.getThreadGroup:()Ljava/lang/ThreadGroup;
   29:	goto	38
   32:	invokestatic	#7; //Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
   35:	invokevirtual	#8; //Method java/lang/Thread.getThreadGroup:()Ljava/lang/ThreadGroup;
   38:	putfield	#9; //Field group:Ljava/lang/ThreadGroup;
   41:	aload_0
   42:	new	#10; //class java/lang/StringBuilder
   45:	dup
   46:	invokespecial	#11; //Method java/lang/StringBuilder."<init>":()V
   49:	ldc	#12; //String pool-
   51:	invokevirtual	#13; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   54:	getstatic	#14; //Field poolNumber:Lscala/actors/threadpool/AtomicInteger;
   57:	invokevirtual	#15; //Method scala/actors/threadpool/AtomicInteger.getAndIncrement:()I
   60:	invokevirtual	#16; //Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
   63:	ldc	#17; //String -thread-
   65:	invokevirtual	#13; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   68:	invokevirtual	#18; //Method java/lang/StringBuilder.toString:()Ljava/lang/String;
   71:	putfield	#19; //Field namePrefix:Ljava/lang/String;
   74:	return

public java.lang.Thread newThread(java.lang.Runnable);
  Code:
   Stack=7, Locals=3, Args_size=2
   0:	new	#20; //class java/lang/Thread
   3:	dup
   4:	aload_0
   5:	getfield	#9; //Field group:Ljava/lang/ThreadGroup;
   8:	aload_1
   9:	new	#10; //class java/lang/StringBuilder
   12:	dup
   13:	invokespecial	#11; //Method java/lang/StringBuilder."<init>":()V
   16:	aload_0
   17:	getfield	#19; //Field namePrefix:Ljava/lang/String;
   20:	invokevirtual	#13; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   23:	aload_0
   24:	getfield	#4; //Field threadNumber:Lscala/actors/threadpool/AtomicInteger;
   27:	invokevirtual	#15; //Method scala/actors/threadpool/AtomicInteger.getAndIncrement:()I
   30:	invokevirtual	#16; //Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
   33:	invokevirtual	#18; //Method java/lang/StringBuilder.toString:()Ljava/lang/String;
   36:	lconst_0
   37:	invokespecial	#21; //Method java/lang/Thread."<init>":(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;Ljava/lang/String;J)V
   40:	astore_2
   41:	aload_2
   42:	invokevirtual	#22; //Method java/lang/Thread.isDaemon:()Z
   45:	ifeq	53
   48:	aload_2
   49:	iconst_0
   50:	invokevirtual	#23; //Method java/lang/Thread.setDaemon:(Z)V
   53:	aload_2
   54:	invokevirtual	#24; //Method java/lang/Thread.getPriority:()I
   57:	iconst_5
   58:	if_icmpeq	66
   61:	aload_2
   62:	iconst_5
   63:	invokevirtual	#25; //Method java/lang/Thread.setPriority:(I)V
   66:	aload_2
   67:	areturn

static {};
  Code:
   Stack=3, Locals=0, Args_size=0
   0:	new	#2; //class scala/actors/threadpool/AtomicInteger
   3:	dup
   4:	iconst_1
   5:	invokespecial	#3; //Method scala/actors/threadpool/AtomicInteger."<init>":(I)V
   8:	putstatic	#14; //Field poolNumber:Lscala/actors/threadpool/AtomicInteger;
   11:	return

}

