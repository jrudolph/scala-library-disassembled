class scala.actors.threadpool.Executors$DefaultThreadFactory extends java.lang.Object implements scala.actors.threadpool.ThreadFactory
  InnerClass: 
   DefaultThreadFactory=class scala/actors/threadpool/Executors$DefaultThreadFactory of class scala/actors/threadpool/Executors
  minor version: 0
  major version: 49
  Constant pool:
Method	java/lang/Object."<init>":()V
class	scala/actors/threadpool/AtomicInteger
Method	scala/actors/threadpool/AtomicInteger."<init>":(I)V
Field	scala/actors/threadpool/Executors$DefaultThreadFactory.threadNumber:Lscala/actors/threadpool/AtomicInteger;
Method	java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
Method	java/lang/SecurityManager.getThreadGroup:()Ljava/lang/ThreadGroup;
Method	java/lang/Thread.currentThread:()Ljava/lang/Thread;
Method	java/lang/Thread.getThreadGroup:()Ljava/lang/ThreadGroup;
Field	scala/actors/threadpool/Executors$DefaultThreadFactory.group:Ljava/lang/ThreadGroup;
class	java/lang/StringBuilder
Method	java/lang/StringBuilder."<init>":()V
String	pool-
Method	java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
Field	scala/actors/threadpool/Executors$DefaultThreadFactory.poolNumber:Lscala/actors/threadpool/AtomicInteger;
Method	scala/actors/threadpool/AtomicInteger.getAndIncrement:()I
Method	java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
String	-thread-
Method	java/lang/StringBuilder.toString:()Ljava/lang/String;
Field	scala/actors/threadpool/Executors$DefaultThreadFactory.namePrefix:Ljava/lang/String;
class	java/lang/Thread
Method	java/lang/Thread."<init>":(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;Ljava/lang/String;J)V
Method	java/lang/Thread.isDaemon:()Z
Method	java/lang/Thread.setDaemon:(Z)V
Method	java/lang/Thread.getPriority:()I
Method	java/lang/Thread.setPriority:(I)V
class	scala/actors/threadpool/Executors$DefaultThreadFactory
class	java/lang/Object
class	scala/actors/threadpool/ThreadFactory
Asciz	poolNumber;
Asciz	Lscala/actors/threadpool/AtomicInteger;;
Asciz	group;
Asciz	Ljava/lang/ThreadGroup;;
Asciz	threadNumber;
Asciz	namePrefix;
Asciz	Ljava/lang/String;;
Asciz	<init>;
Asciz	()V;
Asciz	Code;
Asciz	newThread;
Asciz	(Ljava/lang/Runnable;)Ljava/lang/Thread;;
Asciz	<clinit>;
NameAndType	"<init>":()V
Asciz	scala/actors/threadpool/AtomicInteger;
NameAndType	"<init>":(I)V
NameAndType	threadNumber:Lscala/actors/threadpool/AtomicInteger;
class	java/lang/System
NameAndType	getSecurityManager:()Ljava/lang/SecurityManager;
class	java/lang/SecurityManager
NameAndType	getThreadGroup:()Ljava/lang/ThreadGroup;
NameAndType	currentThread:()Ljava/lang/Thread;
NameAndType	group:Ljava/lang/ThreadGroup;
Asciz	java/lang/StringBuilder;
Asciz	pool-;
NameAndType	append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
NameAndType	poolNumber:Lscala/actors/threadpool/AtomicInteger;
NameAndType	getAndIncrement:()I
NameAndType	append:(I)Ljava/lang/StringBuilder;
Asciz	-thread-;
NameAndType	toString:()Ljava/lang/String;
NameAndType	namePrefix:Ljava/lang/String;
Asciz	java/lang/Thread;
NameAndType	"<init>":(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;Ljava/lang/String;J)V
NameAndType	isDaemon:()Z
NameAndType	setDaemon:(Z)V
NameAndType	getPriority:()I
NameAndType	setPriority:(I)V
class	scala/actors/threadpool/Executors
Asciz	scala/actors/threadpool/Executors$DefaultThreadFactory;
Asciz	DefaultThreadFactory;
Asciz	InnerClasses;
Asciz	java/lang/Object;
Asciz	scala/actors/threadpool/ThreadFactory;
Asciz	(I)V;
Asciz	java/lang/System;
Asciz	getSecurityManager;
Asciz	()Ljava/lang/SecurityManager;;
Asciz	java/lang/SecurityManager;
Asciz	getThreadGroup;
Asciz	()Ljava/lang/ThreadGroup;;
Asciz	currentThread;
Asciz	()Ljava/lang/Thread;;
Asciz	append;
Asciz	(Ljava/lang/String;)Ljava/lang/StringBuilder;;
Asciz	getAndIncrement;
Asciz	()I;
Asciz	(I)Ljava/lang/StringBuilder;;
Asciz	toString;
Asciz	()Ljava/lang/String;;
Asciz	(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;Ljava/lang/String;J)V;
Asciz	isDaemon;
Asciz	()Z;
Asciz	setDaemon;
Asciz	(Z)V;
Asciz	getPriority;
Asciz	setPriority;
Asciz	scala/actors/threadpool/Executors;

{
static final scala.actors.threadpool.AtomicInteger poolNumber;
  Signature: Lscala/actors/threadpool/AtomicInteger;

final java.lang.ThreadGroup group;
  Signature: Ljava/lang/ThreadGroup;

final scala.actors.threadpool.AtomicInteger threadNumber;
  Signature: Lscala/actors/threadpool/AtomicInteger;

final java.lang.String namePrefix;
  Signature: Ljava/lang/String;

scala.actors.threadpool.Executors$DefaultThreadFactory();
  Signature: ()V
  Code:
   Stack=4, Locals=2, Args_size=1
	aload_0
	invokespecial	Method java/lang/Object."<init>":()V
	aload_0
	new	class scala/actors/threadpool/AtomicInteger
	dup
	iconst_1
	invokespecial	Method scala/actors/threadpool/AtomicInteger."<init>":(I)V
	putfield	Field threadNumber:Lscala/actors/threadpool/AtomicInteger;
	invokestatic	Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
	astore_1
	aload_0
	aload_1
	ifnull	l1 // invokestatic
	aload_1
	invokevirtual	Method java/lang/SecurityManager.getThreadGroup:()Ljava/lang/ThreadGroup;
	goto	l2 // putfield
l1	invokestatic	Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
	invokevirtual	Method java/lang/Thread.getThreadGroup:()Ljava/lang/ThreadGroup;
l2	putfield	Field group:Ljava/lang/ThreadGroup;
	aload_0
	new	class java/lang/StringBuilder
	dup
	invokespecial	Method java/lang/StringBuilder."<init>":()V
	ldc	String pool-
	invokevirtual	Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
	getstatic	Field poolNumber:Lscala/actors/threadpool/AtomicInteger;
	invokevirtual	Method scala/actors/threadpool/AtomicInteger.getAndIncrement:()I
	invokevirtual	Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
	ldc	String -thread-
	invokevirtual	Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
	invokevirtual	Method java/lang/StringBuilder.toString:()Ljava/lang/String;
	putfield	Field namePrefix:Ljava/lang/String;
	return
  Labels:
   	l1 = 32 // invokestatic
   	l2 = 38 // putfield

public java.lang.Thread newThread(java.lang.Runnable);
  Signature: (Ljava/lang/Runnable;)Ljava/lang/Thread;
  Code:
   Stack=7, Locals=3, Args_size=2
	new	class java/lang/Thread
	dup
	aload_0
	getfield	Field group:Ljava/lang/ThreadGroup;
	aload_1
	new	class java/lang/StringBuilder
	dup
	invokespecial	Method java/lang/StringBuilder."<init>":()V
	aload_0
	getfield	Field namePrefix:Ljava/lang/String;
	invokevirtual	Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
	aload_0
	getfield	Field threadNumber:Lscala/actors/threadpool/AtomicInteger;
	invokevirtual	Method scala/actors/threadpool/AtomicInteger.getAndIncrement:()I
	invokevirtual	Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
	invokevirtual	Method java/lang/StringBuilder.toString:()Ljava/lang/String;
	lconst_0
	invokespecial	Method java/lang/Thread."<init>":(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;Ljava/lang/String;J)V
	astore_2
	aload_2
	invokevirtual	Method java/lang/Thread.isDaemon:()Z
	ifeq	l1 // aload_2
	aload_2
	iconst_0
	invokevirtual	Method java/lang/Thread.setDaemon:(Z)V
l1	aload_2
	invokevirtual	Method java/lang/Thread.getPriority:()I
	iconst_5
	if_icmpeq	l2 // aload_2
	aload_2
	iconst_5
	invokevirtual	Method java/lang/Thread.setPriority:(I)V
l2	aload_2
	areturn
  Labels:
   	l1 = 53 // aload_2
   	l2 = 66 // aload_2

static {};
  Signature: ()V
  Code:
   Stack=3, Locals=0, Args_size=0
	new	class scala/actors/threadpool/AtomicInteger
	dup
	iconst_1
	invokespecial	Method scala/actors/threadpool/AtomicInteger."<init>":(I)V
	putstatic	Field poolNumber:Lscala/actors/threadpool/AtomicInteger;
	return
  Labels:

}

