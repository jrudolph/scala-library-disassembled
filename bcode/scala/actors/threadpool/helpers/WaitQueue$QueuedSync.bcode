public interface scala.actors.threadpool.helpers.WaitQueue$QueuedSync
  InnerClass: 
   public WaitNode=class scala/actors/threadpool/helpers/WaitQueue$WaitNode of class scala/actors/threadpool/helpers/WaitQueue
   public abstract QueuedSync=class scala/actors/threadpool/helpers/WaitQueue$QueuedSync of class scala/actors/threadpool/helpers/WaitQueue
  minor version: 0
  major version: 49
  Constant pool:
class	scala/actors/threadpool/helpers/WaitQueue$QueuedSync
class	java/lang/Object
Asciz	recheck;
class	scala/actors/threadpool/helpers/WaitQueue$WaitNode
Asciz	WaitNode;
Asciz	InnerClasses;
Asciz	(Lscala/actors/threadpool/helpers/WaitQueue$WaitNode;)Z;
Asciz	takeOver;
Asciz	(Lscala/actors/threadpool/helpers/WaitQueue$WaitNode;)V;
class	scala/actors/threadpool/helpers/WaitQueue
Asciz	scala/actors/threadpool/helpers/WaitQueue$QueuedSync;
Asciz	QueuedSync;
Asciz	java/lang/Object;
Asciz	scala/actors/threadpool/helpers/WaitQueue$WaitNode;
Asciz	scala/actors/threadpool/helpers/WaitQueue;

{
public abstract boolean recheck(scala.actors.threadpool.helpers.WaitQueue$WaitNode);
  Signature: (Lscala/actors/threadpool/helpers/WaitQueue$WaitNode;)Z

public abstract void takeOver(scala.actors.threadpool.helpers.WaitQueue$WaitNode);
  Signature: (Lscala/actors/threadpool/helpers/WaitQueue$WaitNode;)V

}

