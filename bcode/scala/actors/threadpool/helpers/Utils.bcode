public final class scala.actors.threadpool.helpers.Utils extends java.lang.Object
  InnerClass: 
   final #40= #37 of #39; //MillisProvider=class scala/actors/threadpool/helpers/Utils$MillisProvider of class scala/actors/threadpool/helpers/Utils
   final #42= #34 of #39; //SunPerfProvider=class scala/actors/threadpool/helpers/Utils$SunPerfProvider of class scala/actors/threadpool/helpers/Utils
   #22; //class scala/actors/threadpool/helpers/Utils$1
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Method	#39.#65;	//  scala/actors/threadpool/helpers/Utils.gcd:(JJ)J
const #2 = Method	#9.#66;	//  java/lang/Object."<init>":()V
const #3 = Field	#39.#67;	//  scala/actors/threadpool/helpers/Utils.nanoTimer:Lscala/actors/threadpool/helpers/NanoTimer;
const #4 = InterfaceMethod	#28.#68;	//  scala/actors/threadpool/helpers/NanoTimer.nanoTime:()J
const #5 = Method	#39.#68;	//  scala/actors/threadpool/helpers/Utils.nanoTime:()J
const #6 = Field	#69.#70;	//  scala/actors/threadpool/TimeUnit.NANOSECONDS:Lscala/actors/threadpool/TimeUnit;
const #7 = InterfaceMethod	#71.#72;	//  scala/actors/threadpool/locks/Condition.await:(JLscala/actors/threadpool/TimeUnit;)Z
const #8 = InterfaceMethod	#73.#74;	//  java/util/Collection.size:()I
const #9 = class	#75;	//  java/lang/Object
const #10 = InterfaceMethod	#73.#76;	//  java/util/Collection.iterator:()Ljava/util/Iterator;
const #11 = InterfaceMethod	#77.#78;	//  java/util/Iterator.hasNext:()Z
const #12 = InterfaceMethod	#77.#79;	//  java/util/Iterator.next:()Ljava/lang/Object;
const #13 = class	#80;	//  "[Ljava/lang/Object;"
const #14 = Method	#81.#82;	//  scala/actors/threadpool/Arrays.copyOf:([Ljava/lang/Object;ILjava/lang/Class;)[Ljava/lang/Object;
const #15 = int	2147483647;
const #16 = class	#83;	//  java/lang/OutOfMemoryError
const #17 = String	#84;	//  required array size too large
const #18 = Method	#16.#85;	//  java/lang/OutOfMemoryError."<init>":(Ljava/lang/String;)V
const #19 = Method	#9.#86;	//  java/lang/Object.getClass:()Ljava/lang/Class;
const #20 = Method	#87.#88;	//  java/lang/Class.getComponentType:()Ljava/lang/Class;
const #21 = Method	#89.#90;	//  java/lang/reflect/Array.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;
const #22 = class	#91;	//  scala/actors/threadpool/helpers/Utils$1
const #23 = Method	#22.#66;	//  scala/actors/threadpool/helpers/Utils$1."<init>":()V
const #24 = Method	#93.#94;	//  java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
const #25 = class	#95;	//  java/lang/String
const #26 = Method	#87.#96;	//  java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
const #27 = Method	#87.#97;	//  java/lang/Class.newInstance:()Ljava/lang/Object;
const #28 = class	#98;	//  scala/actors/threadpool/helpers/NanoTimer
const #29 = class	#99;	//  java/lang/Exception
const #30 = Field	#100.#101;	//  java/lang/System.err:Ljava/io/PrintStream;
const #31 = String	#102;	//  WARNING: unable to load the system-property-defined nanotime provider; switching to the default
const #32 = Method	#103.#104;	//  java/io/PrintStream.println:(Ljava/lang/String;)V
const #33 = Method	#29.#105;	//  java/lang/Exception.printStackTrace:()V
const #34 = class	#106;	//  scala/actors/threadpool/helpers/Utils$SunPerfProvider
const #35 = Method	#34.#66;	//  scala/actors/threadpool/helpers/Utils$SunPerfProvider."<init>":()V
const #36 = class	#107;	//  java/lang/Throwable
const #37 = class	#108;	//  scala/actors/threadpool/helpers/Utils$MillisProvider
const #38 = Method	#37.#66;	//  scala/actors/threadpool/helpers/Utils$MillisProvider."<init>":()V
const #39 = class	#109;	//  scala/actors/threadpool/helpers/Utils
const #40 = Asciz	MillisProvider;
const #41 = Asciz	InnerClasses;
const #42 = Asciz	SunPerfProvider;
const #43 = Asciz	nanoTimer;
const #44 = Asciz	Lscala/actors/threadpool/helpers/NanoTimer;;
const #45 = Asciz	providerProp;
const #46 = Asciz	Ljava/lang/String;;
const #47 = Asciz	ConstantValue;
const #48 = String	#110;	//  edu.emory.mathcs.backport.java.util.concurrent.NanoTimerProvider
const #49 = Asciz	<init>;
const #50 = Asciz	()V;
const #51 = Asciz	Code;
const #52 = Asciz	nanoTime;
const #53 = Asciz	()J;
const #54 = Asciz	awaitNanos;
const #55 = Asciz	(Lscala/actors/threadpool/locks/Condition;J)J;
const #56 = Asciz	Exceptions;
const #57 = class	#111;	//  java/lang/InterruptedException
const #58 = Asciz	gcd;
const #59 = Asciz	(JJ)J;
const #60 = Asciz	collectionToArray;
const #61 = Asciz	(Ljava/util/Collection;)[Ljava/lang/Object;;
const #62 = Asciz	(Ljava/util/Collection;[Ljava/lang/Object;)[Ljava/lang/Object;;
const #63 = Asciz	access$000;
const #64 = Asciz	<clinit>;
const #65 = NameAndType	#58:#59;//  gcd:(JJ)J
const #66 = NameAndType	#49:#50;//  "<init>":()V
const #67 = NameAndType	#43:#44;//  nanoTimer:Lscala/actors/threadpool/helpers/NanoTimer;
const #68 = NameAndType	#52:#53;//  nanoTime:()J
const #69 = class	#112;	//  scala/actors/threadpool/TimeUnit
const #70 = NameAndType	#113:#114;//  NANOSECONDS:Lscala/actors/threadpool/TimeUnit;
const #71 = class	#115;	//  scala/actors/threadpool/locks/Condition
const #72 = NameAndType	#116:#117;//  await:(JLscala/actors/threadpool/TimeUnit;)Z
const #73 = class	#118;	//  java/util/Collection
const #74 = NameAndType	#119:#120;//  size:()I
const #75 = Asciz	java/lang/Object;
const #76 = NameAndType	#121:#122;//  iterator:()Ljava/util/Iterator;
const #77 = class	#123;	//  java/util/Iterator
const #78 = NameAndType	#124:#125;//  hasNext:()Z
const #79 = NameAndType	#126:#127;//  next:()Ljava/lang/Object;
const #80 = Asciz	[Ljava/lang/Object;;
const #81 = class	#128;	//  scala/actors/threadpool/Arrays
const #82 = NameAndType	#129:#130;//  copyOf:([Ljava/lang/Object;ILjava/lang/Class;)[Ljava/lang/Object;
const #83 = Asciz	java/lang/OutOfMemoryError;
const #84 = Asciz	required array size too large;
const #85 = NameAndType	#49:#131;//  "<init>":(Ljava/lang/String;)V
const #86 = NameAndType	#132:#133;//  getClass:()Ljava/lang/Class;
const #87 = class	#134;	//  java/lang/Class
const #88 = NameAndType	#135:#133;//  getComponentType:()Ljava/lang/Class;
const #89 = class	#136;	//  java/lang/reflect/Array
const #90 = NameAndType	#137:#138;//  newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;
const #91 = Asciz	scala/actors/threadpool/helpers/Utils$1;
const #92 = Asciz	;
const #93 = class	#139;	//  java/security/AccessController
const #94 = NameAndType	#140:#141;//  doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
const #95 = Asciz	java/lang/String;
const #96 = NameAndType	#142:#143;//  forName:(Ljava/lang/String;)Ljava/lang/Class;
const #97 = NameAndType	#137:#127;//  newInstance:()Ljava/lang/Object;
const #98 = Asciz	scala/actors/threadpool/helpers/NanoTimer;
const #99 = Asciz	java/lang/Exception;
const #100 = class	#144;	//  java/lang/System
const #101 = NameAndType	#145:#146;//  err:Ljava/io/PrintStream;
const #102 = Asciz	WARNING: unable to load the system-property-defined nanotime provider; switching to the default;
const #103 = class	#147;	//  java/io/PrintStream
const #104 = NameAndType	#148:#131;//  println:(Ljava/lang/String;)V
const #105 = NameAndType	#149:#50;//  printStackTrace:()V
const #106 = Asciz	scala/actors/threadpool/helpers/Utils$SunPerfProvider;
const #107 = Asciz	java/lang/Throwable;
const #108 = Asciz	scala/actors/threadpool/helpers/Utils$MillisProvider;
const #109 = Asciz	scala/actors/threadpool/helpers/Utils;
const #110 = Asciz	edu.emory.mathcs.backport.java.util.concurrent.NanoTimerProvider;
const #111 = Asciz	java/lang/InterruptedException;
const #112 = Asciz	scala/actors/threadpool/TimeUnit;
const #113 = Asciz	NANOSECONDS;
const #114 = Asciz	Lscala/actors/threadpool/TimeUnit;;
const #115 = Asciz	scala/actors/threadpool/locks/Condition;
const #116 = Asciz	await;
const #117 = Asciz	(JLscala/actors/threadpool/TimeUnit;)Z;
const #118 = Asciz	java/util/Collection;
const #119 = Asciz	size;
const #120 = Asciz	()I;
const #121 = Asciz	iterator;
const #122 = Asciz	()Ljava/util/Iterator;;
const #123 = Asciz	java/util/Iterator;
const #124 = Asciz	hasNext;
const #125 = Asciz	()Z;
const #126 = Asciz	next;
const #127 = Asciz	()Ljava/lang/Object;;
const #128 = Asciz	scala/actors/threadpool/Arrays;
const #129 = Asciz	copyOf;
const #130 = Asciz	([Ljava/lang/Object;ILjava/lang/Class;)[Ljava/lang/Object;;
const #131 = Asciz	(Ljava/lang/String;)V;
const #132 = Asciz	getClass;
const #133 = Asciz	()Ljava/lang/Class;;
const #134 = Asciz	java/lang/Class;
const #135 = Asciz	getComponentType;
const #136 = Asciz	java/lang/reflect/Array;
const #137 = Asciz	newInstance;
const #138 = Asciz	(Ljava/lang/Class;I)Ljava/lang/Object;;
const #139 = Asciz	java/security/AccessController;
const #140 = Asciz	doPrivileged;
const #141 = Asciz	(Ljava/security/PrivilegedAction;)Ljava/lang/Object;;
const #142 = Asciz	forName;
const #143 = Asciz	(Ljava/lang/String;)Ljava/lang/Class;;
const #144 = Asciz	java/lang/System;
const #145 = Asciz	err;
const #146 = Asciz	Ljava/io/PrintStream;;
const #147 = Asciz	java/io/PrintStream;
const #148 = Asciz	println;
const #149 = Asciz	printStackTrace;

{
public static long nanoTime();
  Code:
   Stack=2, Locals=0, Args_size=0
   0:	getstatic	#3; //Field nanoTimer:Lscala/actors/threadpool/helpers/NanoTimer;
   3:	invokeinterface	#4,  1; //InterfaceMethod scala/actors/threadpool/helpers/NanoTimer.nanoTime:()J
   8:	lreturn

public static long awaitNanos(scala.actors.threadpool.locks.Condition, long)   throws java.lang.InterruptedException;
  Code:
   Stack=6, Locals=5, Args_size=2
   0:	lload_1
   1:	lconst_0
   2:	lcmp
   3:	ifgt	8
   6:	lload_1
   7:	lreturn
   8:	invokestatic	#5; //Method nanoTime:()J
   11:	lstore_3
   12:	aload_0
   13:	lload_1
   14:	getstatic	#6; //Field scala/actors/threadpool/TimeUnit.NANOSECONDS:Lscala/actors/threadpool/TimeUnit;
   17:	invokeinterface	#7,  4; //InterfaceMethod scala/actors/threadpool/locks/Condition.await:(JLscala/actors/threadpool/TimeUnit;)Z
   22:	pop
   23:	lload_1
   24:	invokestatic	#5; //Method nanoTime:()J
   27:	lload_3
   28:	lsub
   29:	lsub
   30:	lreturn
  Exceptions: 
   throws java.lang.InterruptedException
public static java.lang.Object[] collectionToArray(java.util.Collection);
  Code:
   Stack=3, Locals=6, Args_size=1
   0:	aload_0
   1:	invokeinterface	#8,  1; //InterfaceMethod java/util/Collection.size:()I
   6:	istore_1
   7:	iload_1
   8:	anewarray	#9; //class java/lang/Object
   11:	astore_2
   12:	aload_0
   13:	invokeinterface	#10,  1; //InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
   18:	astore_3
   19:	iconst_0
   20:	istore	4
   22:	iload	4
   24:	iload_1
   25:	if_icmpge	53
   28:	aload_3
   29:	invokeinterface	#11,  1; //InterfaceMethod java/util/Iterator.hasNext:()Z
   34:	ifeq	53
   37:	aload_2
   38:	iload	4
   40:	iinc	4, 1
   43:	aload_3
   44:	invokeinterface	#12,  1; //InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
   49:	aastore
   50:	goto	22
   53:	aload_3
   54:	invokeinterface	#11,  1; //InterfaceMethod java/util/Iterator.hasNext:()Z
   59:	ifne	80
   62:	iload	4
   64:	iload_1
   65:	if_icmpne	70
   68:	aload_2
   69:	areturn
   70:	aload_2
   71:	iload	4
   73:	ldc_w	#13; //class "[Ljava/lang/Object;"
   76:	invokestatic	#14; //Method scala/actors/threadpool/Arrays.copyOf:([Ljava/lang/Object;ILjava/lang/Class;)[Ljava/lang/Object;
   79:	areturn
   80:	aload_2
   81:	arraylength
   82:	iconst_2
   83:	idiv
   84:	iconst_1
   85:	iadd
   86:	iconst_3
   87:	imul
   88:	istore	5
   90:	iload	5
   92:	aload_2
   93:	arraylength
   94:	if_icmpge	121
   97:	aload_2
   98:	arraylength
   99:	ldc	#15; //int 2147483647
   101:	if_icmpge	111
   104:	ldc	#15; //int 2147483647
   106:	istore	5
   108:	goto	121
   111:	new	#16; //class java/lang/OutOfMemoryError
   114:	dup
   115:	ldc	#17; //String required array size too large
   117:	invokespecial	#18; //Method java/lang/OutOfMemoryError."<init>":(Ljava/lang/String;)V
   120:	athrow
   121:	aload_2
   122:	iload	5
   124:	ldc_w	#13; //class "[Ljava/lang/Object;"
   127:	invokestatic	#14; //Method scala/actors/threadpool/Arrays.copyOf:([Ljava/lang/Object;ILjava/lang/Class;)[Ljava/lang/Object;
   130:	astore_2
   131:	iload	5
   133:	istore_1
   134:	goto	22

public static java.lang.Object[] collectionToArray(java.util.Collection, java.lang.Object[]);
  Code:
   Stack=3, Locals=8, Args_size=2
   0:	aload_1
   1:	invokevirtual	#19; //Method java/lang/Object.getClass:()Ljava/lang/Class;
   4:	astore_2
   5:	aload_0
   6:	invokeinterface	#8,  1; //InterfaceMethod java/util/Collection.size:()I
   11:	istore_3
   12:	aload_1
   13:	arraylength
   14:	iload_3
   15:	if_icmplt	22
   18:	aload_1
   19:	goto	36
   22:	aload_2
   23:	invokevirtual	#20; //Method java/lang/Class.getComponentType:()Ljava/lang/Class;
   26:	iload_3
   27:	invokestatic	#21; //Method java/lang/reflect/Array.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;
   30:	checkcast	#13; //class "[Ljava/lang/Object;"
   33:	checkcast	#13; //class "[Ljava/lang/Object;"
   36:	astore	4
   38:	aload_0
   39:	invokeinterface	#10,  1; //InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
   44:	astore	5
   46:	iconst_0
   47:	istore	6
   49:	iload	6
   51:	iload_3
   52:	if_icmpge	83
   55:	aload	5
   57:	invokeinterface	#11,  1; //InterfaceMethod java/util/Iterator.hasNext:()Z
   62:	ifeq	83
   65:	aload	4
   67:	iload	6
   69:	iinc	6, 1
   72:	aload	5
   74:	invokeinterface	#12,  1; //InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
   79:	aastore
   80:	goto	49
   83:	aload	5
   85:	invokeinterface	#11,  1; //InterfaceMethod java/util/Iterator.hasNext:()Z
   90:	ifne	124
   93:	iload	6
   95:	iload_3
   96:	if_icmpne	102
   99:	aload	4
   101:	areturn
   102:	aload	4
   104:	aload_1
   105:	if_acmpne	115
   108:	aload_1
   109:	iload	6
   111:	aconst_null
   112:	aastore
   113:	aload_1
   114:	areturn
   115:	aload	4
   117:	iload	6
   119:	aload_2
   120:	invokestatic	#14; //Method scala/actors/threadpool/Arrays.copyOf:([Ljava/lang/Object;ILjava/lang/Class;)[Ljava/lang/Object;
   123:	areturn
   124:	aload	4
   126:	arraylength
   127:	iconst_2
   128:	idiv
   129:	iconst_1
   130:	iadd
   131:	iconst_3
   132:	imul
   133:	istore	7
   135:	iload	7
   137:	aload	4
   139:	arraylength
   140:	if_icmpge	168
   143:	aload	4
   145:	arraylength
   146:	ldc	#15; //int 2147483647
   148:	if_icmpge	158
   151:	ldc	#15; //int 2147483647
   153:	istore	7
   155:	goto	168
   158:	new	#16; //class java/lang/OutOfMemoryError
   161:	dup
   162:	ldc	#17; //String required array size too large
   164:	invokespecial	#18; //Method java/lang/OutOfMemoryError."<init>":(Ljava/lang/String;)V
   167:	athrow
   168:	aload	4
   170:	iload	7
   172:	aload_2
   173:	invokestatic	#14; //Method scala/actors/threadpool/Arrays.copyOf:([Ljava/lang/Object;ILjava/lang/Class;)[Ljava/lang/Object;
   176:	astore	4
   178:	iload	7
   180:	istore_3
   181:	goto	49

static long access$000(long, long);
  Code:
   Stack=4, Locals=4, Args_size=2
   0:	lload_0
   1:	lload_2
   2:	invokestatic	#1; //Method gcd:(JJ)J
   5:	lreturn

static {};
  Code:
   Stack=2, Locals=3, Args_size=0
   0:	aconst_null
   1:	astore_0
   2:	new	#22; //class scala/actors/threadpool/helpers/Utils$1
   5:	dup
   6:	invokespecial	#23; //Method scala/actors/threadpool/helpers/Utils$1."<init>":()V
   9:	invokestatic	#24; //Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
   12:	checkcast	#25; //class java/lang/String
   15:	astore_1
   16:	aload_1
   17:	ifnull	33
   20:	aload_1
   21:	invokestatic	#26; //Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
   24:	astore_2
   25:	aload_2
   26:	invokevirtual	#27; //Method java/lang/Class.newInstance:()Ljava/lang/Object;
   29:	checkcast	#28; //class scala/actors/threadpool/helpers/NanoTimer
   32:	astore_0
   33:	goto	49
   36:	astore_1
   37:	getstatic	#30; //Field java/lang/System.err:Ljava/io/PrintStream;
   40:	ldc	#31; //String WARNING: unable to load the system-property-defined nanotime provider; switching to the default
   42:	invokevirtual	#32; //Method java/io/PrintStream.println:(Ljava/lang/String;)V
   45:	aload_1
   46:	invokevirtual	#33; //Method java/lang/Exception.printStackTrace:()V
   49:	aload_0
   50:	ifnonnull	65
   53:	new	#34; //class scala/actors/threadpool/helpers/Utils$SunPerfProvider
   56:	dup
   57:	invokespecial	#35; //Method scala/actors/threadpool/helpers/Utils$SunPerfProvider."<init>":()V
   60:	astore_0
   61:	goto	65
   64:	astore_1
   65:	aload_0
   66:	ifnonnull	77
   69:	new	#37; //class scala/actors/threadpool/helpers/Utils$MillisProvider
   72:	dup
   73:	invokespecial	#38; //Method scala/actors/threadpool/helpers/Utils$MillisProvider."<init>":()V
   76:	astore_0
   77:	aload_0
   78:	putstatic	#3; //Field nanoTimer:Lscala/actors/threadpool/helpers/NanoTimer;
   81:	return
  Exception table:
   from   to  target type
     2    33    36   Class java/lang/Exception

    53    61    64   Class java/lang/Throwable


}

