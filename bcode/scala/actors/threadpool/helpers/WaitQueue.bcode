public abstract class scala.actors.threadpool.helpers.WaitQueue extends java.lang.Object
  InnerClass: 
   public WaitNode=class scala/actors/threadpool/helpers/WaitQueue$WaitNode of class scala/actors/threadpool/helpers/WaitQueue
   public abstract QueuedSync=class scala/actors/threadpool/helpers/WaitQueue$QueuedSync of class scala/actors/threadpool/helpers/WaitQueue
  minor version: 0
  major version: 49
  Constant pool:
Method	java/lang/Object."<init>":()V
class	scala/actors/threadpool/helpers/WaitQueue
class	java/lang/Object
class	scala/actors/threadpool/helpers/WaitQueue$WaitNode
Asciz	WaitNode;
Asciz	InnerClasses;
class	scala/actors/threadpool/helpers/WaitQueue$QueuedSync
Asciz	QueuedSync;
Asciz	<init>;
Asciz	()V;
Asciz	Code;
Asciz	insert;
Asciz	(Lscala/actors/threadpool/helpers/WaitQueue$WaitNode;)V;
Asciz	extract;
Asciz	()Lscala/actors/threadpool/helpers/WaitQueue$WaitNode;;
Asciz	putBack;
Asciz	hasNodes;
Asciz	()Z;
Asciz	getLength;
Asciz	()I;
Asciz	getWaitingThreads;
Asciz	()Ljava/util/Collection;;
Asciz	isWaiting;
Asciz	(Ljava/lang/Thread;)Z;
NameAndType	"<init>":()V
Asciz	scala/actors/threadpool/helpers/WaitQueue;
Asciz	java/lang/Object;
Asciz	scala/actors/threadpool/helpers/WaitQueue$WaitNode;
Asciz	scala/actors/threadpool/helpers/WaitQueue$QueuedSync;

{
public scala.actors.threadpool.helpers.WaitQueue();
  Signature: ()V
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokespecial	Method java/lang/Object."<init>":()V
	return
  Labels:

public abstract void insert(scala.actors.threadpool.helpers.WaitQueue$WaitNode);
  Signature: (Lscala/actors/threadpool/helpers/WaitQueue$WaitNode;)V

public abstract scala.actors.threadpool.helpers.WaitQueue$WaitNode extract();
  Signature: ()Lscala/actors/threadpool/helpers/WaitQueue$WaitNode;

public abstract void putBack(scala.actors.threadpool.helpers.WaitQueue$WaitNode);
  Signature: (Lscala/actors/threadpool/helpers/WaitQueue$WaitNode;)V

public abstract boolean hasNodes();
  Signature: ()Z

public abstract int getLength();
  Signature: ()I

public abstract java.util.Collection getWaitingThreads();
  Signature: ()Ljava/util/Collection;

public abstract boolean isWaiting(java.lang.Thread);
  Signature: (Ljava/lang/Thread;)Z

}

