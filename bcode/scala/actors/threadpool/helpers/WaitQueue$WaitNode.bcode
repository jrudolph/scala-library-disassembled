public class scala.actors.threadpool.helpers.WaitQueue$WaitNode extends java.lang.Object
  InnerClass: 
   public #21= #16 of #59; //WaitNode=class scala/actors/threadpool/helpers/WaitQueue$WaitNode of class scala/actors/threadpool/helpers/WaitQueue
   public abstract #33= #32 of #59; //QueuedSync=class scala/actors/threadpool/helpers/WaitQueue$QueuedSync of class scala/actors/threadpool/helpers/WaitQueue
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Method	#17.#41;	//  java/lang/Object."<init>":()V
const #2 = Field	#16.#42;	//  scala/actors/threadpool/helpers/WaitQueue$WaitNode.waiting:Z
const #3 = Field	#16.#43;	//  scala/actors/threadpool/helpers/WaitQueue$WaitNode.next:Lscala/actors/threadpool/helpers/WaitQueue$WaitNode;
const #4 = Method	#44.#45;	//  java/lang/Thread.currentThread:()Ljava/lang/Thread;
const #5 = Field	#16.#46;	//  scala/actors/threadpool/helpers/WaitQueue$WaitNode.owner:Ljava/lang/Thread;
const #6 = Method	#17.#47;	//  java/lang/Object.notify:()V
const #7 = InterfaceMethod	#32.#48;	//  scala/actors/threadpool/helpers/WaitQueue$QueuedSync.takeOver:(Lscala/actors/threadpool/helpers/WaitQueue$WaitNode;)V
const #8 = InterfaceMethod	#32.#49;	//  scala/actors/threadpool/helpers/WaitQueue$QueuedSync.recheck:(Lscala/actors/threadpool/helpers/WaitQueue$WaitNode;)Z
const #9 = Method	#50.#51;	//  scala/actors/threadpool/helpers/Utils.nanoTime:()J
const #10 = Field	#52.#53;	//  scala/actors/threadpool/TimeUnit.NANOSECONDS:Lscala/actors/threadpool/TimeUnit;
const #11 = Method	#52.#54;	//  scala/actors/threadpool/TimeUnit.timedWait:(Ljava/lang/Object;J)V
const #12 = class	#55;	//  java/lang/InterruptedException
const #13 = Method	#44.#56;	//  java/lang/Thread.interrupt:()V
const #14 = Method	#17.#57;	//  java/lang/Object.wait:()V
const #15 = Method	#44.#58;	//  java/lang/Thread.interrupted:()Z
const #16 = class	#60;	//  scala/actors/threadpool/helpers/WaitQueue$WaitNode
const #17 = class	#61;	//  java/lang/Object
const #18 = Asciz	waiting;
const #19 = Asciz	Z;
const #20 = Asciz	next;
const #21 = Asciz	WaitNode;
const #22 = Asciz	InnerClasses;
const #23 = Asciz	Lscala/actors/threadpool/helpers/WaitQueue$WaitNode;;
const #24 = Asciz	owner;
const #25 = Asciz	Ljava/lang/Thread;;
const #26 = Asciz	<init>;
const #27 = Asciz	()V;
const #28 = Asciz	Code;
const #29 = Asciz	getOwner;
const #30 = Asciz	()Ljava/lang/Thread;;
const #31 = Asciz	signal;
const #32 = class	#62;	//  scala/actors/threadpool/helpers/WaitQueue$QueuedSync
const #33 = Asciz	QueuedSync;
const #34 = Asciz	(Lscala/actors/threadpool/helpers/WaitQueue$QueuedSync;)Z;
const #35 = Asciz	doTimedWait;
const #36 = Asciz	(Lscala/actors/threadpool/helpers/WaitQueue$QueuedSync;J)Z;
const #37 = Asciz	Exceptions;
const #38 = Asciz	doWait;
const #39 = Asciz	(Lscala/actors/threadpool/helpers/WaitQueue$QueuedSync;)V;
const #40 = Asciz	doWaitUninterruptibly;
const #41 = NameAndType	#26:#27;//  "<init>":()V
const #42 = NameAndType	#18:#19;//  waiting:Z
const #43 = NameAndType	#20:#23;//  next:Lscala/actors/threadpool/helpers/WaitQueue$WaitNode;
const #44 = class	#63;	//  java/lang/Thread
const #45 = NameAndType	#64:#30;//  currentThread:()Ljava/lang/Thread;
const #46 = NameAndType	#24:#25;//  owner:Ljava/lang/Thread;
const #47 = NameAndType	#65:#27;//  notify:()V
const #48 = NameAndType	#66:#67;//  takeOver:(Lscala/actors/threadpool/helpers/WaitQueue$WaitNode;)V
const #49 = NameAndType	#68:#69;//  recheck:(Lscala/actors/threadpool/helpers/WaitQueue$WaitNode;)Z
const #50 = class	#70;	//  scala/actors/threadpool/helpers/Utils
const #51 = NameAndType	#71:#72;//  nanoTime:()J
const #52 = class	#73;	//  scala/actors/threadpool/TimeUnit
const #53 = NameAndType	#74:#75;//  NANOSECONDS:Lscala/actors/threadpool/TimeUnit;
const #54 = NameAndType	#76:#77;//  timedWait:(Ljava/lang/Object;J)V
const #55 = Asciz	java/lang/InterruptedException;
const #56 = NameAndType	#78:#27;//  interrupt:()V
const #57 = NameAndType	#79:#27;//  wait:()V
const #58 = NameAndType	#80:#81;//  interrupted:()Z
const #59 = class	#82;	//  scala/actors/threadpool/helpers/WaitQueue
const #60 = Asciz	scala/actors/threadpool/helpers/WaitQueue$WaitNode;
const #61 = Asciz	java/lang/Object;
const #62 = Asciz	scala/actors/threadpool/helpers/WaitQueue$QueuedSync;
const #63 = Asciz	java/lang/Thread;
const #64 = Asciz	currentThread;
const #65 = Asciz	notify;
const #66 = Asciz	takeOver;
const #67 = Asciz	(Lscala/actors/threadpool/helpers/WaitQueue$WaitNode;)V;
const #68 = Asciz	recheck;
const #69 = Asciz	(Lscala/actors/threadpool/helpers/WaitQueue$WaitNode;)Z;
const #70 = Asciz	scala/actors/threadpool/helpers/Utils;
const #71 = Asciz	nanoTime;
const #72 = Asciz	()J;
const #73 = Asciz	scala/actors/threadpool/TimeUnit;
const #74 = Asciz	NANOSECONDS;
const #75 = Asciz	Lscala/actors/threadpool/TimeUnit;;
const #76 = Asciz	timedWait;
const #77 = Asciz	(Ljava/lang/Object;J)V;
const #78 = Asciz	interrupt;
const #79 = Asciz	wait;
const #80 = Asciz	interrupted;
const #81 = Asciz	()Z;
const #82 = Asciz	scala/actors/threadpool/helpers/WaitQueue;

{
boolean waiting;

scala.actors.threadpool.helpers.WaitQueue$WaitNode next;

final java.lang.Thread owner;

public scala.actors.threadpool.helpers.WaitQueue$WaitNode();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	invokespecial	#1; //Method java/lang/Object."<init>":()V
   4:	aload_0
   5:	iconst_1
   6:	putfield	#2; //Field waiting:Z
   9:	aload_0
   10:	aconst_null
   11:	putfield	#3; //Field next:Lscala/actors/threadpool/helpers/WaitQueue$WaitNode;
   14:	aload_0
   15:	invokestatic	#4; //Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
   18:	putfield	#5; //Field owner:Ljava/lang/Thread;
   21:	return

public java.lang.Thread getOwner();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#5; //Field owner:Ljava/lang/Thread;
   4:	areturn

public synchronized boolean signal(scala.actors.threadpool.helpers.WaitQueue$QueuedSync);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	aload_0
   1:	getfield	#2; //Field waiting:Z
   4:	istore_2
   5:	iload_2
   6:	ifeq	25
   9:	aload_0
   10:	iconst_0
   11:	putfield	#2; //Field waiting:Z
   14:	aload_0
   15:	invokevirtual	#6; //Method java/lang/Object.notify:()V
   18:	aload_1
   19:	aload_0
   20:	invokeinterface	#7,  2; //InterfaceMethod scala/actors/threadpool/helpers/WaitQueue$QueuedSync.takeOver:(Lscala/actors/threadpool/helpers/WaitQueue$WaitNode;)V
   25:	iload_2
   26:	ireturn

public synchronized boolean doTimedWait(scala.actors.threadpool.helpers.WaitQueue$QueuedSync, long)   throws java.lang.InterruptedException;
  Code:
   Stack=4, Locals=7, Args_size=3
   0:	aload_1
   1:	aload_0
   2:	invokeinterface	#8,  2; //InterfaceMethod scala/actors/threadpool/helpers/WaitQueue$QueuedSync.recheck:(Lscala/actors/threadpool/helpers/WaitQueue$WaitNode;)Z
   7:	ifne	17
   10:	aload_0
   11:	getfield	#2; //Field waiting:Z
   14:	ifne	19
   17:	iconst_1
   18:	ireturn
   19:	lload_2
   20:	lconst_0
   21:	lcmp
   22:	ifgt	32
   25:	aload_0
   26:	iconst_0
   27:	putfield	#2; //Field waiting:Z
   30:	iconst_0
   31:	ireturn
   32:	invokestatic	#9; //Method scala/actors/threadpool/helpers/Utils.nanoTime:()J
   35:	lload_2
   36:	ladd
   37:	lstore	4
   39:	getstatic	#10; //Field scala/actors/threadpool/TimeUnit.NANOSECONDS:Lscala/actors/threadpool/TimeUnit;
   42:	aload_0
   43:	lload_2
   44:	invokevirtual	#11; //Method scala/actors/threadpool/TimeUnit.timedWait:(Ljava/lang/Object;J)V
   47:	aload_0
   48:	getfield	#2; //Field waiting:Z
   51:	ifne	56
   54:	iconst_1
   55:	ireturn
   56:	lload	4
   58:	invokestatic	#9; //Method scala/actors/threadpool/helpers/Utils.nanoTime:()J
   61:	lsub
   62:	lstore_2
   63:	lload_2
   64:	lconst_0
   65:	lcmp
   66:	ifgt	39
   69:	aload_0
   70:	iconst_0
   71:	putfield	#2; //Field waiting:Z
   74:	iconst_0
   75:	ireturn
   76:	astore	6
   78:	aload_0
   79:	getfield	#2; //Field waiting:Z
   82:	ifeq	93
   85:	aload_0
   86:	iconst_0
   87:	putfield	#2; //Field waiting:Z
   90:	aload	6
   92:	athrow
   93:	invokestatic	#4; //Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
   96:	invokevirtual	#13; //Method java/lang/Thread.interrupt:()V
   99:	iconst_1
   100:	ireturn
  Exception table:
   from   to  target type
    39    55    76   Class java/lang/InterruptedException

    56    75    76   Class java/lang/InterruptedException

  Exceptions: 
   throws java.lang.InterruptedException
public synchronized void doWait(scala.actors.threadpool.helpers.WaitQueue$QueuedSync)   throws java.lang.InterruptedException;
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	aload_1
   1:	aload_0
   2:	invokeinterface	#8,  2; //InterfaceMethod scala/actors/threadpool/helpers/WaitQueue$QueuedSync.recheck:(Lscala/actors/threadpool/helpers/WaitQueue$WaitNode;)Z
   7:	ifne	49
   10:	aload_0
   11:	getfield	#2; //Field waiting:Z
   14:	ifeq	24
   17:	aload_0
   18:	invokevirtual	#14; //Method java/lang/Object.wait:()V
   21:	goto	10
   24:	goto	49
   27:	astore_2
   28:	aload_0
   29:	getfield	#2; //Field waiting:Z
   32:	ifeq	42
   35:	aload_0
   36:	iconst_0
   37:	putfield	#2; //Field waiting:Z
   40:	aload_2
   41:	athrow
   42:	invokestatic	#4; //Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
   45:	invokevirtual	#13; //Method java/lang/Thread.interrupt:()V
   48:	return
   49:	return
  Exception table:
   from   to  target type
    10    24    27   Class java/lang/InterruptedException

  Exceptions: 
   throws java.lang.InterruptedException
public synchronized void doWaitUninterruptibly(scala.actors.threadpool.helpers.WaitQueue$QueuedSync);
  Code:
   Stack=2, Locals=5, Args_size=2
   0:	aload_1
   1:	aload_0
   2:	invokeinterface	#8,  2; //InterfaceMethod scala/actors/threadpool/helpers/WaitQueue$QueuedSync.recheck:(Lscala/actors/threadpool/helpers/WaitQueue$WaitNode;)Z
   7:	ifne	62
   10:	invokestatic	#15; //Method java/lang/Thread.interrupted:()Z
   13:	istore_2
   14:	aload_0
   15:	getfield	#2; //Field waiting:Z
   18:	ifeq	34
   21:	aload_0
   22:	invokevirtual	#14; //Method java/lang/Object.wait:()V
   25:	goto	14
   28:	astore_3
   29:	iconst_1
   30:	istore_2
   31:	goto	14
   34:	iload_2
   35:	ifeq	62
   38:	invokestatic	#4; //Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
   41:	invokevirtual	#13; //Method java/lang/Thread.interrupt:()V
   44:	goto	62
   47:	astore	4
   49:	iload_2
   50:	ifeq	59
   53:	invokestatic	#4; //Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
   56:	invokevirtual	#13; //Method java/lang/Thread.interrupt:()V
   59:	aload	4
   61:	athrow
   62:	return
  Exception table:
   from   to  target type
    21    25    28   Class java/lang/InterruptedException

    14    34    47   any
    47    49    47   any

}

