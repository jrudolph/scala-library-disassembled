class scala.actors.threadpool.Executors$PrivilegedThreadFactory extends scala.actors.threadpool.Executors$DefaultThreadFactory
  InnerClass: 
   #26= #14 of #48; //PrivilegedThreadFactory=class scala/actors/threadpool/Executors$PrivilegedThreadFactory of class scala/actors/threadpool/Executors
   #11; //class scala/actors/threadpool/Executors$PrivilegedThreadFactory$1
   #51= #15 of #48; //DefaultThreadFactory=class scala/actors/threadpool/Executors$DefaultThreadFactory of class scala/actors/threadpool/Executors
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Field	#14.#31;	//  scala/actors/threadpool/Executors$PrivilegedThreadFactory.acc:Ljava/security/AccessControlContext;
const #2 = Field	#14.#32;	//  scala/actors/threadpool/Executors$PrivilegedThreadFactory.ccl:Ljava/lang/ClassLoader;
const #3 = Method	#15.#33;	//  scala/actors/threadpool/Executors$DefaultThreadFactory."<init>":()V
const #4 = Method	#34.#35;	//  java/lang/Thread.currentThread:()Ljava/lang/Thread;
const #5 = Method	#34.#36;	//  java/lang/Thread.getContextClassLoader:()Ljava/lang/ClassLoader;
const #6 = Method	#37.#38;	//  java/security/AccessController.getContext:()Ljava/security/AccessControlContext;
const #7 = class	#39;	//  java/lang/RuntimePermission
const #8 = String	#40;	//  setContextClassLoader
const #9 = Method	#7.#41;	//  java/lang/RuntimePermission."<init>":(Ljava/lang/String;)V
const #10 = Method	#42.#43;	//  java/security/AccessControlContext.checkPermission:(Ljava/security/Permission;)V
const #11 = class	#44;	//  scala/actors/threadpool/Executors$PrivilegedThreadFactory$1
const #12 = Method	#11.#46;	//  scala/actors/threadpool/Executors$PrivilegedThreadFactory$1."<init>":(Lscala/actors/threadpool/Executors$PrivilegedThreadFactory;Ljava/lang/Runnable;)V
const #13 = Method	#15.#47;	//  scala/actors/threadpool/Executors$DefaultThreadFactory.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;
const #14 = class	#49;	//  scala/actors/threadpool/Executors$PrivilegedThreadFactory
const #15 = class	#50;	//  scala/actors/threadpool/Executors$DefaultThreadFactory
const #16 = Asciz	ccl;
const #17 = Asciz	Ljava/lang/ClassLoader;;
const #18 = Asciz	acc;
const #19 = Asciz	Ljava/security/AccessControlContext;;
const #20 = Asciz	<init>;
const #21 = Asciz	()V;
const #22 = Asciz	Code;
const #23 = Asciz	newThread;
const #24 = Asciz	(Ljava/lang/Runnable;)Ljava/lang/Thread;;
const #25 = Asciz	access$700;
const #26 = Asciz	PrivilegedThreadFactory;
const #27 = Asciz	InnerClasses;
const #28 = Asciz	(Lscala/actors/threadpool/Executors$PrivilegedThreadFactory;)Ljava/lang/ClassLoader;;
const #29 = Asciz	access$800;
const #30 = Asciz	(Lscala/actors/threadpool/Executors$PrivilegedThreadFactory;)Ljava/security/AccessControlContext;;
const #31 = NameAndType	#18:#19;//  acc:Ljava/security/AccessControlContext;
const #32 = NameAndType	#16:#17;//  ccl:Ljava/lang/ClassLoader;
const #33 = NameAndType	#20:#21;//  "<init>":()V
const #34 = class	#52;	//  java/lang/Thread
const #35 = NameAndType	#53:#54;//  currentThread:()Ljava/lang/Thread;
const #36 = NameAndType	#55:#56;//  getContextClassLoader:()Ljava/lang/ClassLoader;
const #37 = class	#57;	//  java/security/AccessController
const #38 = NameAndType	#58:#59;//  getContext:()Ljava/security/AccessControlContext;
const #39 = Asciz	java/lang/RuntimePermission;
const #40 = Asciz	setContextClassLoader;
const #41 = NameAndType	#20:#60;//  "<init>":(Ljava/lang/String;)V
const #42 = class	#61;	//  java/security/AccessControlContext
const #43 = NameAndType	#62:#63;//  checkPermission:(Ljava/security/Permission;)V
const #44 = Asciz	scala/actors/threadpool/Executors$PrivilegedThreadFactory$1;
const #45 = Asciz	;
const #46 = NameAndType	#20:#64;//  "<init>":(Lscala/actors/threadpool/Executors$PrivilegedThreadFactory;Ljava/lang/Runnable;)V
const #47 = NameAndType	#23:#24;//  newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;
const #48 = class	#65;	//  scala/actors/threadpool/Executors
const #49 = Asciz	scala/actors/threadpool/Executors$PrivilegedThreadFactory;
const #50 = Asciz	scala/actors/threadpool/Executors$DefaultThreadFactory;
const #51 = Asciz	DefaultThreadFactory;
const #52 = Asciz	java/lang/Thread;
const #53 = Asciz	currentThread;
const #54 = Asciz	()Ljava/lang/Thread;;
const #55 = Asciz	getContextClassLoader;
const #56 = Asciz	()Ljava/lang/ClassLoader;;
const #57 = Asciz	java/security/AccessController;
const #58 = Asciz	getContext;
const #59 = Asciz	()Ljava/security/AccessControlContext;;
const #60 = Asciz	(Ljava/lang/String;)V;
const #61 = Asciz	java/security/AccessControlContext;
const #62 = Asciz	checkPermission;
const #63 = Asciz	(Ljava/security/Permission;)V;
const #64 = Asciz	(Lscala/actors/threadpool/Executors$PrivilegedThreadFactory;Ljava/lang/Runnable;)V;
const #65 = Asciz	scala/actors/threadpool/Executors;

{
scala.actors.threadpool.Executors$PrivilegedThreadFactory();
  Code:
   Stack=4, Locals=1, Args_size=1
   0:	aload_0
   1:	invokespecial	#3; //Method scala/actors/threadpool/Executors$DefaultThreadFactory."<init>":()V
   4:	aload_0
   5:	invokestatic	#4; //Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
   8:	invokevirtual	#5; //Method java/lang/Thread.getContextClassLoader:()Ljava/lang/ClassLoader;
   11:	putfield	#2; //Field ccl:Ljava/lang/ClassLoader;
   14:	aload_0
   15:	invokestatic	#6; //Method java/security/AccessController.getContext:()Ljava/security/AccessControlContext;
   18:	putfield	#1; //Field acc:Ljava/security/AccessControlContext;
   21:	aload_0
   22:	getfield	#1; //Field acc:Ljava/security/AccessControlContext;
   25:	new	#7; //class java/lang/RuntimePermission
   28:	dup
   29:	ldc	#8; //String setContextClassLoader
   31:	invokespecial	#9; //Method java/lang/RuntimePermission."<init>":(Ljava/lang/String;)V
   34:	invokevirtual	#10; //Method java/security/AccessControlContext.checkPermission:(Ljava/security/Permission;)V
   37:	return

public java.lang.Thread newThread(java.lang.Runnable);
  Code:
   Stack=5, Locals=2, Args_size=2
   0:	aload_0
   1:	new	#11; //class scala/actors/threadpool/Executors$PrivilegedThreadFactory$1
   4:	dup
   5:	aload_0
   6:	aload_1
   7:	invokespecial	#12; //Method scala/actors/threadpool/Executors$PrivilegedThreadFactory$1."<init>":(Lscala/actors/threadpool/Executors$PrivilegedThreadFactory;Ljava/lang/Runnable;)V
   10:	invokespecial	#13; //Method scala/actors/threadpool/Executors$DefaultThreadFactory.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;
   13:	areturn

static java.lang.ClassLoader access$700(scala.actors.threadpool.Executors$PrivilegedThreadFactory);
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#2; //Field ccl:Ljava/lang/ClassLoader;
   4:	areturn

static java.security.AccessControlContext access$800(scala.actors.threadpool.Executors$PrivilegedThreadFactory);
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#1; //Field acc:Ljava/security/AccessControlContext;
   4:	areturn

}

