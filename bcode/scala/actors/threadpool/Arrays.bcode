public class scala.actors.threadpool.Arrays extends java.lang.Object
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Method	#59.#246;	//  java/lang/Object."<init>":()V
const #2 = Method	#247.#248;	//  java/util/Arrays.sort:([J)V
const #3 = Method	#247.#249;	//  java/util/Arrays.sort:([JII)V
const #4 = Method	#247.#250;	//  java/util/Arrays.sort:([I)V
const #5 = Method	#247.#251;	//  java/util/Arrays.sort:([III)V
const #6 = Method	#247.#252;	//  java/util/Arrays.sort:([S)V
const #7 = Method	#247.#253;	//  java/util/Arrays.sort:([SII)V
const #8 = Method	#247.#254;	//  java/util/Arrays.sort:([C)V
const #9 = Method	#247.#255;	//  java/util/Arrays.sort:([CII)V
const #10 = Method	#247.#256;	//  java/util/Arrays.sort:([B)V
const #11 = Method	#247.#257;	//  java/util/Arrays.sort:([BII)V
const #12 = Method	#247.#258;	//  java/util/Arrays.sort:([D)V
const #13 = Method	#247.#259;	//  java/util/Arrays.sort:([DII)V
const #14 = Method	#247.#260;	//  java/util/Arrays.sort:([F)V
const #15 = Method	#247.#261;	//  java/util/Arrays.sort:([FII)V
const #16 = Method	#247.#262;	//  java/util/Arrays.sort:([Ljava/lang/Object;)V
const #17 = Method	#247.#263;	//  java/util/Arrays.sort:([Ljava/lang/Object;II)V
const #18 = Method	#247.#264;	//  java/util/Arrays.sort:([Ljava/lang/Object;Ljava/util/Comparator;)V
const #19 = Method	#247.#265;	//  java/util/Arrays.sort:([Ljava/lang/Object;IILjava/util/Comparator;)V
const #20 = Method	#247.#266;	//  java/util/Arrays.binarySearch:([JJ)I
const #21 = Method	#247.#267;	//  java/util/Arrays.binarySearch:([II)I
const #22 = Method	#247.#268;	//  java/util/Arrays.binarySearch:([SS)I
const #23 = Method	#247.#269;	//  java/util/Arrays.binarySearch:([CC)I
const #24 = Method	#247.#270;	//  java/util/Arrays.binarySearch:([BB)I
const #25 = Method	#247.#271;	//  java/util/Arrays.binarySearch:([DD)I
const #26 = Method	#247.#272;	//  java/util/Arrays.binarySearch:([FF)I
const #27 = Method	#247.#273;	//  java/util/Arrays.binarySearch:([Ljava/lang/Object;Ljava/lang/Object;)I
const #28 = Method	#247.#274;	//  java/util/Arrays.binarySearch:([Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)I
const #29 = Method	#247.#275;	//  java/util/Arrays.equals:([J[J)Z
const #30 = Method	#247.#276;	//  java/util/Arrays.equals:([I[I)Z
const #31 = Method	#247.#277;	//  java/util/Arrays.equals:([S[S)Z
const #32 = Method	#247.#278;	//  java/util/Arrays.equals:([C[C)Z
const #33 = Method	#247.#279;	//  java/util/Arrays.equals:([B[B)Z
const #34 = Method	#247.#280;	//  java/util/Arrays.equals:([Z[Z)Z
const #35 = Method	#247.#281;	//  java/util/Arrays.equals:([D[D)Z
const #36 = Method	#247.#282;	//  java/util/Arrays.equals:([F[F)Z
const #37 = Method	#247.#283;	//  java/util/Arrays.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z
const #38 = Method	#247.#284;	//  java/util/Arrays.fill:([JJ)V
const #39 = Method	#247.#285;	//  java/util/Arrays.fill:([JIIJ)V
const #40 = Method	#247.#286;	//  java/util/Arrays.fill:([II)V
const #41 = Method	#247.#287;	//  java/util/Arrays.fill:([IIII)V
const #42 = Method	#247.#288;	//  java/util/Arrays.fill:([SS)V
const #43 = Method	#247.#289;	//  java/util/Arrays.fill:([SIIS)V
const #44 = Method	#247.#290;	//  java/util/Arrays.fill:([CC)V
const #45 = Method	#247.#291;	//  java/util/Arrays.fill:([CIIC)V
const #46 = Method	#247.#292;	//  java/util/Arrays.fill:([BB)V
const #47 = Method	#247.#293;	//  java/util/Arrays.fill:([BIIB)V
const #48 = Method	#247.#294;	//  java/util/Arrays.fill:([ZZ)V
const #49 = Method	#247.#295;	//  java/util/Arrays.fill:([ZIIZ)V
const #50 = Method	#247.#296;	//  java/util/Arrays.fill:([DD)V
const #51 = Method	#247.#297;	//  java/util/Arrays.fill:([DIID)V
const #52 = Method	#247.#298;	//  java/util/Arrays.fill:([FF)V
const #53 = Method	#247.#299;	//  java/util/Arrays.fill:([FIIF)V
const #54 = Method	#247.#300;	//  java/util/Arrays.fill:([Ljava/lang/Object;Ljava/lang/Object;)V
const #55 = Method	#247.#301;	//  java/util/Arrays.fill:([Ljava/lang/Object;IILjava/lang/Object;)V
const #56 = Method	#59.#302;	//  java/lang/Object.getClass:()Ljava/lang/Class;
const #57 = Method	#136.#303;	//  scala/actors/threadpool/Arrays.copyOf:([Ljava/lang/Object;ILjava/lang/Class;)[Ljava/lang/Object;
const #58 = class	#304;	//  "[Ljava/lang/Object;"
const #59 = class	#305;	//  java/lang/Object
const #60 = Method	#306.#307;	//  java/lang/Class.getComponentType:()Ljava/lang/Class;
const #61 = Method	#308.#309;	//  java/lang/reflect/Array.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;
const #62 = Method	#310.#311;	//  java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
const #63 = Method	#136.#312;	//  scala/actors/threadpool/Arrays.copyOfRange:([Ljava/lang/Object;IILjava/lang/Class;)[Ljava/lang/Object;
const #64 = class	#313;	//  java/lang/IllegalArgumentException
const #65 = class	#314;	//  java/lang/StringBuilder
const #66 = Method	#65.#246;	//  java/lang/StringBuilder."<init>":()V
const #67 = Method	#65.#315;	//  java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
const #68 = String	#316;	//   > 
const #69 = Method	#65.#317;	//  java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
const #70 = Method	#65.#318;	//  java/lang/StringBuilder.toString:()Ljava/lang/String;
const #71 = Method	#64.#319;	//  java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
const #72 = Method	#247.#320;	//  java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
const #73 = Method	#321.#322;	//  java/lang/Float.floatToIntBits:(F)I
const #74 = Method	#323.#324;	//  java/lang/Double.doubleToLongBits:(D)J
const #75 = Method	#59.#325;	//  java/lang/Object.hashCode:()I
const #76 = Method	#136.#326;	//  scala/actors/threadpool/Arrays.deepHashCode:([Ljava/lang/Object;)I
const #77 = class	#327;	//  "[B"
const #78 = Method	#136.#328;	//  scala/actors/threadpool/Arrays.hashCode:([B)I
const #79 = class	#329;	//  "[S"
const #80 = Method	#136.#330;	//  scala/actors/threadpool/Arrays.hashCode:([S)I
const #81 = class	#331;	//  "[I"
const #82 = Method	#136.#332;	//  scala/actors/threadpool/Arrays.hashCode:([I)I
const #83 = class	#333;	//  "[J"
const #84 = Method	#136.#334;	//  scala/actors/threadpool/Arrays.hashCode:([J)I
const #85 = class	#335;	//  "[C"
const #86 = Method	#136.#336;	//  scala/actors/threadpool/Arrays.hashCode:([C)I
const #87 = class	#337;	//  "[Z"
const #88 = Method	#136.#338;	//  scala/actors/threadpool/Arrays.hashCode:([Z)I
const #89 = class	#339;	//  "[F"
const #90 = Method	#136.#340;	//  scala/actors/threadpool/Arrays.hashCode:([F)I
const #91 = class	#341;	//  "[D"
const #92 = Method	#136.#342;	//  scala/actors/threadpool/Arrays.hashCode:([D)I
const #93 = Method	#306.#343;	//  java/lang/Class.isArray:()Z
const #94 = Method	#59.#344;	//  java/lang/Object.equals:(Ljava/lang/Object;)Z
const #95 = Method	#136.#345;	//  scala/actors/threadpool/Arrays.deepEquals:([Ljava/lang/Object;[Ljava/lang/Object;)Z
const #96 = Method	#136.#279;	//  scala/actors/threadpool/Arrays.equals:([B[B)Z
const #97 = Method	#136.#277;	//  scala/actors/threadpool/Arrays.equals:([S[S)Z
const #98 = Method	#136.#276;	//  scala/actors/threadpool/Arrays.equals:([I[I)Z
const #99 = Method	#136.#275;	//  scala/actors/threadpool/Arrays.equals:([J[J)Z
const #100 = Method	#136.#278;	//  scala/actors/threadpool/Arrays.equals:([C[C)Z
const #101 = Method	#136.#280;	//  scala/actors/threadpool/Arrays.equals:([Z[Z)Z
const #102 = Method	#136.#282;	//  scala/actors/threadpool/Arrays.equals:([F[F)Z
const #103 = Method	#136.#281;	//  scala/actors/threadpool/Arrays.equals:([D[D)Z
const #104 = String	#346;	//  null
const #105 = String	#347;	//  []
const #106 = class	#348;	//  java/lang/StringBuffer
const #107 = Method	#106.#246;	//  java/lang/StringBuffer."<init>":()V
const #108 = Method	#106.#349;	//  java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
const #109 = Method	#106.#350;	//  java/lang/StringBuffer.append:(J)Ljava/lang/StringBuffer;
const #110 = String	#351;	//  , 
const #111 = Method	#106.#352;	//  java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
const #112 = Method	#106.#318;	//  java/lang/StringBuffer.toString:()Ljava/lang/String;
const #113 = Method	#106.#353;	//  java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
const #114 = Method	#106.#354;	//  java/lang/StringBuffer.append:(Z)Ljava/lang/StringBuffer;
const #115 = Method	#106.#355;	//  java/lang/StringBuffer.append:(F)Ljava/lang/StringBuffer;
const #116 = Method	#106.#356;	//  java/lang/StringBuffer.append:(D)Ljava/lang/StringBuffer;
const #117 = Method	#106.#357;	//  java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
const #118 = class	#358;	//  java/util/ArrayList
const #119 = Method	#118.#246;	//  java/util/ArrayList."<init>":()V
const #120 = Method	#136.#359;	//  scala/actors/threadpool/Arrays.deepToString:([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/util/List;)V
const #121 = InterfaceMethod	#360.#361;	//  java/util/List.add:(Ljava/lang/Object;)Z
const #122 = Method	#59.#318;	//  java/lang/Object.toString:()Ljava/lang/String;
const #123 = InterfaceMethod	#360.#362;	//  java/util/List.contains:(Ljava/lang/Object;)Z
const #124 = String	#363;	//  [...]
const #125 = Method	#136.#364;	//  scala/actors/threadpool/Arrays.toString:([B)Ljava/lang/String;
const #126 = Method	#136.#365;	//  scala/actors/threadpool/Arrays.toString:([S)Ljava/lang/String;
const #127 = Method	#136.#366;	//  scala/actors/threadpool/Arrays.toString:([I)Ljava/lang/String;
const #128 = Method	#136.#367;	//  scala/actors/threadpool/Arrays.toString:([J)Ljava/lang/String;
const #129 = Method	#136.#368;	//  scala/actors/threadpool/Arrays.toString:([C)Ljava/lang/String;
const #130 = Method	#136.#369;	//  scala/actors/threadpool/Arrays.toString:([Z)Ljava/lang/String;
const #131 = Method	#136.#370;	//  scala/actors/threadpool/Arrays.toString:([F)Ljava/lang/String;
const #132 = Method	#136.#371;	//  scala/actors/threadpool/Arrays.toString:([D)Ljava/lang/String;
const #133 = String	#372;	//  
const #134 = InterfaceMethod	#360.#373;	//  java/util/List.size:()I
const #135 = InterfaceMethod	#360.#374;	//  java/util/List.remove:(I)Ljava/lang/Object;
const #136 = class	#375;	//  scala/actors/threadpool/Arrays
const #137 = Asciz	<init>;
const #138 = Asciz	()V;
const #139 = Asciz	Code;
const #140 = Asciz	sort;
const #141 = Asciz	([J)V;
const #142 = Asciz	([JII)V;
const #143 = Asciz	([I)V;
const #144 = Asciz	([III)V;
const #145 = Asciz	([S)V;
const #146 = Asciz	([SII)V;
const #147 = Asciz	([C)V;
const #148 = Asciz	([CII)V;
const #149 = Asciz	([B)V;
const #150 = Asciz	([BII)V;
const #151 = Asciz	([D)V;
const #152 = Asciz	([DII)V;
const #153 = Asciz	([F)V;
const #154 = Asciz	([FII)V;
const #155 = Asciz	([Ljava/lang/Object;)V;
const #156 = Asciz	([Ljava/lang/Object;II)V;
const #157 = Asciz	([Ljava/lang/Object;Ljava/util/Comparator;)V;
const #158 = Asciz	([Ljava/lang/Object;IILjava/util/Comparator;)V;
const #159 = Asciz	binarySearch;
const #160 = Asciz	([JJ)I;
const #161 = Asciz	([II)I;
const #162 = Asciz	([SS)I;
const #163 = Asciz	([CC)I;
const #164 = Asciz	([BB)I;
const #165 = Asciz	([DD)I;
const #166 = Asciz	([FF)I;
const #167 = Asciz	([Ljava/lang/Object;Ljava/lang/Object;)I;
const #168 = Asciz	([Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)I;
const #169 = Asciz	equals;
const #170 = Asciz	([J[J)Z;
const #171 = Asciz	([I[I)Z;
const #172 = Asciz	([S[S)Z;
const #173 = Asciz	([C[C)Z;
const #174 = Asciz	([B[B)Z;
const #175 = Asciz	([Z[Z)Z;
const #176 = Asciz	([D[D)Z;
const #177 = Asciz	([F[F)Z;
const #178 = Asciz	([Ljava/lang/Object;[Ljava/lang/Object;)Z;
const #179 = Asciz	fill;
const #180 = Asciz	([JJ)V;
const #181 = Asciz	([JIIJ)V;
const #182 = Asciz	([II)V;
const #183 = Asciz	([IIII)V;
const #184 = Asciz	([SS)V;
const #185 = Asciz	([SIIS)V;
const #186 = Asciz	([CC)V;
const #187 = Asciz	([CIIC)V;
const #188 = Asciz	([BB)V;
const #189 = Asciz	([BIIB)V;
const #190 = Asciz	([ZZ)V;
const #191 = Asciz	([ZIIZ)V;
const #192 = Asciz	([DD)V;
const #193 = Asciz	([DIID)V;
const #194 = Asciz	([FF)V;
const #195 = Asciz	([FIIF)V;
const #196 = Asciz	([Ljava/lang/Object;Ljava/lang/Object;)V;
const #197 = Asciz	([Ljava/lang/Object;IILjava/lang/Object;)V;
const #198 = Asciz	copyOf;
const #199 = Asciz	([Ljava/lang/Object;I)[Ljava/lang/Object;;
const #200 = Asciz	([Ljava/lang/Object;ILjava/lang/Class;)[Ljava/lang/Object;;
const #201 = Asciz	([BI)[B;
const #202 = Asciz	([SI)[S;
const #203 = Asciz	([II)[I;
const #204 = Asciz	([JI)[J;
const #205 = Asciz	([CI)[C;
const #206 = Asciz	([FI)[F;
const #207 = Asciz	([DI)[D;
const #208 = Asciz	([ZI)[Z;
const #209 = Asciz	copyOfRange;
const #210 = Asciz	([Ljava/lang/Object;II)[Ljava/lang/Object;;
const #211 = Asciz	([Ljava/lang/Object;IILjava/lang/Class;)[Ljava/lang/Object;;
const #212 = Asciz	([BII)[B;
const #213 = Asciz	([SII)[S;
const #214 = Asciz	([III)[I;
const #215 = Asciz	([JII)[J;
const #216 = Asciz	([CII)[C;
const #217 = Asciz	([FII)[F;
const #218 = Asciz	([DII)[D;
const #219 = Asciz	([ZII)[Z;
const #220 = Asciz	asList;
const #221 = Asciz	([Ljava/lang/Object;)Ljava/util/List;;
const #222 = Asciz	hashCode;
const #223 = Asciz	([J)I;
const #224 = Asciz	([I)I;
const #225 = Asciz	([S)I;
const #226 = Asciz	([C)I;
const #227 = Asciz	([B)I;
const #228 = Asciz	([Z)I;
const #229 = Asciz	([F)I;
const #230 = Asciz	([D)I;
const #231 = Asciz	([Ljava/lang/Object;)I;
const #232 = Asciz	deepHashCode;
const #233 = Asciz	deepEquals;
const #234 = Asciz	toString;
const #235 = Asciz	([J)Ljava/lang/String;;
const #236 = Asciz	([I)Ljava/lang/String;;
const #237 = Asciz	([S)Ljava/lang/String;;
const #238 = Asciz	([C)Ljava/lang/String;;
const #239 = Asciz	([B)Ljava/lang/String;;
const #240 = Asciz	([Z)Ljava/lang/String;;
const #241 = Asciz	([F)Ljava/lang/String;;
const #242 = Asciz	([D)Ljava/lang/String;;
const #243 = Asciz	([Ljava/lang/Object;)Ljava/lang/String;;
const #244 = Asciz	deepToString;
const #245 = Asciz	([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/util/List;)V;
const #246 = NameAndType	#137:#138;//  "<init>":()V
const #247 = class	#376;	//  java/util/Arrays
const #248 = NameAndType	#140:#141;//  sort:([J)V
const #249 = NameAndType	#140:#142;//  sort:([JII)V
const #250 = NameAndType	#140:#143;//  sort:([I)V
const #251 = NameAndType	#140:#144;//  sort:([III)V
const #252 = NameAndType	#140:#145;//  sort:([S)V
const #253 = NameAndType	#140:#146;//  sort:([SII)V
const #254 = NameAndType	#140:#147;//  sort:([C)V
const #255 = NameAndType	#140:#148;//  sort:([CII)V
const #256 = NameAndType	#140:#149;//  sort:([B)V
const #257 = NameAndType	#140:#150;//  sort:([BII)V
const #258 = NameAndType	#140:#151;//  sort:([D)V
const #259 = NameAndType	#140:#152;//  sort:([DII)V
const #260 = NameAndType	#140:#153;//  sort:([F)V
const #261 = NameAndType	#140:#154;//  sort:([FII)V
const #262 = NameAndType	#140:#155;//  sort:([Ljava/lang/Object;)V
const #263 = NameAndType	#140:#156;//  sort:([Ljava/lang/Object;II)V
const #264 = NameAndType	#140:#157;//  sort:([Ljava/lang/Object;Ljava/util/Comparator;)V
const #265 = NameAndType	#140:#158;//  sort:([Ljava/lang/Object;IILjava/util/Comparator;)V
const #266 = NameAndType	#159:#160;//  binarySearch:([JJ)I
const #267 = NameAndType	#159:#161;//  binarySearch:([II)I
const #268 = NameAndType	#159:#162;//  binarySearch:([SS)I
const #269 = NameAndType	#159:#163;//  binarySearch:([CC)I
const #270 = NameAndType	#159:#164;//  binarySearch:([BB)I
const #271 = NameAndType	#159:#165;//  binarySearch:([DD)I
const #272 = NameAndType	#159:#166;//  binarySearch:([FF)I
const #273 = NameAndType	#159:#167;//  binarySearch:([Ljava/lang/Object;Ljava/lang/Object;)I
const #274 = NameAndType	#159:#168;//  binarySearch:([Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)I
const #275 = NameAndType	#169:#170;//  equals:([J[J)Z
const #276 = NameAndType	#169:#171;//  equals:([I[I)Z
const #277 = NameAndType	#169:#172;//  equals:([S[S)Z
const #278 = NameAndType	#169:#173;//  equals:([C[C)Z
const #279 = NameAndType	#169:#174;//  equals:([B[B)Z
const #280 = NameAndType	#169:#175;//  equals:([Z[Z)Z
const #281 = NameAndType	#169:#176;//  equals:([D[D)Z
const #282 = NameAndType	#169:#177;//  equals:([F[F)Z
const #283 = NameAndType	#169:#178;//  equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z
const #284 = NameAndType	#179:#180;//  fill:([JJ)V
const #285 = NameAndType	#179:#181;//  fill:([JIIJ)V
const #286 = NameAndType	#179:#182;//  fill:([II)V
const #287 = NameAndType	#179:#183;//  fill:([IIII)V
const #288 = NameAndType	#179:#184;//  fill:([SS)V
const #289 = NameAndType	#179:#185;//  fill:([SIIS)V
const #290 = NameAndType	#179:#186;//  fill:([CC)V
const #291 = NameAndType	#179:#187;//  fill:([CIIC)V
const #292 = NameAndType	#179:#188;//  fill:([BB)V
const #293 = NameAndType	#179:#189;//  fill:([BIIB)V
const #294 = NameAndType	#179:#190;//  fill:([ZZ)V
const #295 = NameAndType	#179:#191;//  fill:([ZIIZ)V
const #296 = NameAndType	#179:#192;//  fill:([DD)V
const #297 = NameAndType	#179:#193;//  fill:([DIID)V
const #298 = NameAndType	#179:#194;//  fill:([FF)V
const #299 = NameAndType	#179:#195;//  fill:([FIIF)V
const #300 = NameAndType	#179:#196;//  fill:([Ljava/lang/Object;Ljava/lang/Object;)V
const #301 = NameAndType	#179:#197;//  fill:([Ljava/lang/Object;IILjava/lang/Object;)V
const #302 = NameAndType	#377:#378;//  getClass:()Ljava/lang/Class;
const #303 = NameAndType	#198:#200;//  copyOf:([Ljava/lang/Object;ILjava/lang/Class;)[Ljava/lang/Object;
const #304 = Asciz	[Ljava/lang/Object;;
const #305 = Asciz	java/lang/Object;
const #306 = class	#379;	//  java/lang/Class
const #307 = NameAndType	#380:#378;//  getComponentType:()Ljava/lang/Class;
const #308 = class	#381;	//  java/lang/reflect/Array
const #309 = NameAndType	#382:#383;//  newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;
const #310 = class	#384;	//  java/lang/System
const #311 = NameAndType	#385:#386;//  arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
const #312 = NameAndType	#209:#211;//  copyOfRange:([Ljava/lang/Object;IILjava/lang/Class;)[Ljava/lang/Object;
const #313 = Asciz	java/lang/IllegalArgumentException;
const #314 = Asciz	java/lang/StringBuilder;
const #315 = NameAndType	#387:#388;//  append:(I)Ljava/lang/StringBuilder;
const #316 = Asciz	 > ;
const #317 = NameAndType	#387:#389;//  append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
const #318 = NameAndType	#234:#390;//  toString:()Ljava/lang/String;
const #319 = NameAndType	#137:#391;//  "<init>":(Ljava/lang/String;)V
const #320 = NameAndType	#220:#221;//  asList:([Ljava/lang/Object;)Ljava/util/List;
const #321 = class	#392;	//  java/lang/Float
const #322 = NameAndType	#393:#394;//  floatToIntBits:(F)I
const #323 = class	#395;	//  java/lang/Double
const #324 = NameAndType	#396:#397;//  doubleToLongBits:(D)J
const #325 = NameAndType	#222:#398;//  hashCode:()I
const #326 = NameAndType	#232:#231;//  deepHashCode:([Ljava/lang/Object;)I
const #327 = Asciz	[B;
const #328 = NameAndType	#222:#227;//  hashCode:([B)I
const #329 = Asciz	[S;
const #330 = NameAndType	#222:#225;//  hashCode:([S)I
const #331 = Asciz	[I;
const #332 = NameAndType	#222:#224;//  hashCode:([I)I
const #333 = Asciz	[J;
const #334 = NameAndType	#222:#223;//  hashCode:([J)I
const #335 = Asciz	[C;
const #336 = NameAndType	#222:#226;//  hashCode:([C)I
const #337 = Asciz	[Z;
const #338 = NameAndType	#222:#228;//  hashCode:([Z)I
const #339 = Asciz	[F;
const #340 = NameAndType	#222:#229;//  hashCode:([F)I
const #341 = Asciz	[D;
const #342 = NameAndType	#222:#230;//  hashCode:([D)I
const #343 = NameAndType	#399:#400;//  isArray:()Z
const #344 = NameAndType	#169:#401;//  equals:(Ljava/lang/Object;)Z
const #345 = NameAndType	#233:#178;//  deepEquals:([Ljava/lang/Object;[Ljava/lang/Object;)Z
const #346 = Asciz	null;
const #347 = Asciz	[];
const #348 = Asciz	java/lang/StringBuffer;
const #349 = NameAndType	#387:#402;//  append:(C)Ljava/lang/StringBuffer;
const #350 = NameAndType	#387:#403;//  append:(J)Ljava/lang/StringBuffer;
const #351 = Asciz	, ;
const #352 = NameAndType	#387:#404;//  append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
const #353 = NameAndType	#387:#405;//  append:(I)Ljava/lang/StringBuffer;
const #354 = NameAndType	#387:#406;//  append:(Z)Ljava/lang/StringBuffer;
const #355 = NameAndType	#387:#407;//  append:(F)Ljava/lang/StringBuffer;
const #356 = NameAndType	#387:#408;//  append:(D)Ljava/lang/StringBuffer;
const #357 = NameAndType	#387:#409;//  append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
const #358 = Asciz	java/util/ArrayList;
const #359 = NameAndType	#244:#245;//  deepToString:([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/util/List;)V
const #360 = class	#410;	//  java/util/List
const #361 = NameAndType	#411:#401;//  add:(Ljava/lang/Object;)Z
const #362 = NameAndType	#412:#401;//  contains:(Ljava/lang/Object;)Z
const #363 = Asciz	[...];
const #364 = NameAndType	#234:#239;//  toString:([B)Ljava/lang/String;
const #365 = NameAndType	#234:#237;//  toString:([S)Ljava/lang/String;
const #366 = NameAndType	#234:#236;//  toString:([I)Ljava/lang/String;
const #367 = NameAndType	#234:#235;//  toString:([J)Ljava/lang/String;
const #368 = NameAndType	#234:#238;//  toString:([C)Ljava/lang/String;
const #369 = NameAndType	#234:#240;//  toString:([Z)Ljava/lang/String;
const #370 = NameAndType	#234:#241;//  toString:([F)Ljava/lang/String;
const #371 = NameAndType	#234:#242;//  toString:([D)Ljava/lang/String;
const #372 = Asciz	;
const #373 = NameAndType	#413:#398;//  size:()I
const #374 = NameAndType	#414:#415;//  remove:(I)Ljava/lang/Object;
const #375 = Asciz	scala/actors/threadpool/Arrays;
const #376 = Asciz	java/util/Arrays;
const #377 = Asciz	getClass;
const #378 = Asciz	()Ljava/lang/Class;;
const #379 = Asciz	java/lang/Class;
const #380 = Asciz	getComponentType;
const #381 = Asciz	java/lang/reflect/Array;
const #382 = Asciz	newInstance;
const #383 = Asciz	(Ljava/lang/Class;I)Ljava/lang/Object;;
const #384 = Asciz	java/lang/System;
const #385 = Asciz	arraycopy;
const #386 = Asciz	(Ljava/lang/Object;ILjava/lang/Object;II)V;
const #387 = Asciz	append;
const #388 = Asciz	(I)Ljava/lang/StringBuilder;;
const #389 = Asciz	(Ljava/lang/String;)Ljava/lang/StringBuilder;;
const #390 = Asciz	()Ljava/lang/String;;
const #391 = Asciz	(Ljava/lang/String;)V;
const #392 = Asciz	java/lang/Float;
const #393 = Asciz	floatToIntBits;
const #394 = Asciz	(F)I;
const #395 = Asciz	java/lang/Double;
const #396 = Asciz	doubleToLongBits;
const #397 = Asciz	(D)J;
const #398 = Asciz	()I;
const #399 = Asciz	isArray;
const #400 = Asciz	()Z;
const #401 = Asciz	(Ljava/lang/Object;)Z;
const #402 = Asciz	(C)Ljava/lang/StringBuffer;;
const #403 = Asciz	(J)Ljava/lang/StringBuffer;;
const #404 = Asciz	(Ljava/lang/String;)Ljava/lang/StringBuffer;;
const #405 = Asciz	(I)Ljava/lang/StringBuffer;;
const #406 = Asciz	(Z)Ljava/lang/StringBuffer;;
const #407 = Asciz	(F)Ljava/lang/StringBuffer;;
const #408 = Asciz	(D)Ljava/lang/StringBuffer;;
const #409 = Asciz	(Ljava/lang/Object;)Ljava/lang/StringBuffer;;
const #410 = Asciz	java/util/List;
const #411 = Asciz	add;
const #412 = Asciz	contains;
const #413 = Asciz	size;
const #414 = Asciz	remove;
const #415 = Asciz	(I)Ljava/lang/Object;;

{
public static void sort(long[]);
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#2; //Method java/util/Arrays.sort:([J)V
   4:	return

public static void sort(long[], int, int);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	iload_1
   2:	iload_2
   3:	invokestatic	#3; //Method java/util/Arrays.sort:([JII)V
   6:	return

public static void sort(int[]);
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#4; //Method java/util/Arrays.sort:([I)V
   4:	return

public static void sort(int[], int, int);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	iload_1
   2:	iload_2
   3:	invokestatic	#5; //Method java/util/Arrays.sort:([III)V
   6:	return

public static void sort(short[]);
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#6; //Method java/util/Arrays.sort:([S)V
   4:	return

public static void sort(short[], int, int);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	iload_1
   2:	iload_2
   3:	invokestatic	#7; //Method java/util/Arrays.sort:([SII)V
   6:	return

public static void sort(char[]);
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#8; //Method java/util/Arrays.sort:([C)V
   4:	return

public static void sort(char[], int, int);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	iload_1
   2:	iload_2
   3:	invokestatic	#9; //Method java/util/Arrays.sort:([CII)V
   6:	return

public static void sort(byte[]);
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#10; //Method java/util/Arrays.sort:([B)V
   4:	return

public static void sort(byte[], int, int);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	iload_1
   2:	iload_2
   3:	invokestatic	#11; //Method java/util/Arrays.sort:([BII)V
   6:	return

public static void sort(double[]);
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#12; //Method java/util/Arrays.sort:([D)V
   4:	return

public static void sort(double[], int, int);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	iload_1
   2:	iload_2
   3:	invokestatic	#13; //Method java/util/Arrays.sort:([DII)V
   6:	return

public static void sort(float[]);
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#14; //Method java/util/Arrays.sort:([F)V
   4:	return

public static void sort(float[], int, int);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	iload_1
   2:	iload_2
   3:	invokestatic	#15; //Method java/util/Arrays.sort:([FII)V
   6:	return

public static void sort(java.lang.Object[]);
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#16; //Method java/util/Arrays.sort:([Ljava/lang/Object;)V
   4:	return

public static void sort(java.lang.Object[], int, int);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	iload_1
   2:	iload_2
   3:	invokestatic	#17; //Method java/util/Arrays.sort:([Ljava/lang/Object;II)V
   6:	return

public static void sort(java.lang.Object[], java.util.Comparator);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#18; //Method java/util/Arrays.sort:([Ljava/lang/Object;Ljava/util/Comparator;)V
   5:	return

public static void sort(java.lang.Object[], int, int, java.util.Comparator);
  Code:
   Stack=4, Locals=4, Args_size=4
   0:	aload_0
   1:	iload_1
   2:	iload_2
   3:	aload_3
   4:	invokestatic	#19; //Method java/util/Arrays.sort:([Ljava/lang/Object;IILjava/util/Comparator;)V
   7:	return

public static int binarySearch(long[], long);
  Code:
   Stack=3, Locals=3, Args_size=2
   0:	aload_0
   1:	lload_1
   2:	invokestatic	#20; //Method java/util/Arrays.binarySearch:([JJ)I
   5:	ireturn

public static int binarySearch(int[], int);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	invokestatic	#21; //Method java/util/Arrays.binarySearch:([II)I
   5:	ireturn

public static int binarySearch(short[], short);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	invokestatic	#22; //Method java/util/Arrays.binarySearch:([SS)I
   5:	ireturn

public static int binarySearch(char[], char);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	invokestatic	#23; //Method java/util/Arrays.binarySearch:([CC)I
   5:	ireturn

public static int binarySearch(byte[], byte);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	invokestatic	#24; //Method java/util/Arrays.binarySearch:([BB)I
   5:	ireturn

public static int binarySearch(double[], double);
  Code:
   Stack=3, Locals=3, Args_size=2
   0:	aload_0
   1:	dload_1
   2:	invokestatic	#25; //Method java/util/Arrays.binarySearch:([DD)I
   5:	ireturn

public static int binarySearch(float[], float);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	fload_1
   2:	invokestatic	#26; //Method java/util/Arrays.binarySearch:([FF)I
   5:	ireturn

public static int binarySearch(java.lang.Object[], java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#27; //Method java/util/Arrays.binarySearch:([Ljava/lang/Object;Ljava/lang/Object;)I
   5:	ireturn

public static int binarySearch(java.lang.Object[], java.lang.Object, java.util.Comparator);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#28; //Method java/util/Arrays.binarySearch:([Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)I
   6:	ireturn

public static boolean equals(long[], long[]);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#29; //Method java/util/Arrays.equals:([J[J)Z
   5:	ireturn

public static boolean equals(int[], int[]);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#30; //Method java/util/Arrays.equals:([I[I)Z
   5:	ireturn

public static boolean equals(short[], short[]);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#31; //Method java/util/Arrays.equals:([S[S)Z
   5:	ireturn

public static boolean equals(char[], char[]);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#32; //Method java/util/Arrays.equals:([C[C)Z
   5:	ireturn

public static boolean equals(byte[], byte[]);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#33; //Method java/util/Arrays.equals:([B[B)Z
   5:	ireturn

public static boolean equals(boolean[], boolean[]);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#34; //Method java/util/Arrays.equals:([Z[Z)Z
   5:	ireturn

public static boolean equals(double[], double[]);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#35; //Method java/util/Arrays.equals:([D[D)Z
   5:	ireturn

public static boolean equals(float[], float[]);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#36; //Method java/util/Arrays.equals:([F[F)Z
   5:	ireturn

public static boolean equals(java.lang.Object[], java.lang.Object[]);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#37; //Method java/util/Arrays.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z
   5:	ireturn

public static void fill(long[], long);
  Code:
   Stack=3, Locals=3, Args_size=2
   0:	aload_0
   1:	lload_1
   2:	invokestatic	#38; //Method java/util/Arrays.fill:([JJ)V
   5:	return

public static void fill(long[], int, int, long);
  Code:
   Stack=5, Locals=5, Args_size=4
   0:	aload_0
   1:	iload_1
   2:	iload_2
   3:	lload_3
   4:	invokestatic	#39; //Method java/util/Arrays.fill:([JIIJ)V
   7:	return

public static void fill(int[], int);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	invokestatic	#40; //Method java/util/Arrays.fill:([II)V
   5:	return

public static void fill(int[], int, int, int);
  Code:
   Stack=4, Locals=4, Args_size=4
   0:	aload_0
   1:	iload_1
   2:	iload_2
   3:	iload_3
   4:	invokestatic	#41; //Method java/util/Arrays.fill:([IIII)V
   7:	return

public static void fill(short[], short);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	invokestatic	#42; //Method java/util/Arrays.fill:([SS)V
   5:	return

public static void fill(short[], int, int, short);
  Code:
   Stack=4, Locals=4, Args_size=4
   0:	aload_0
   1:	iload_1
   2:	iload_2
   3:	iload_3
   4:	invokestatic	#43; //Method java/util/Arrays.fill:([SIIS)V
   7:	return

public static void fill(char[], char);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	invokestatic	#44; //Method java/util/Arrays.fill:([CC)V
   5:	return

public static void fill(char[], int, int, char);
  Code:
   Stack=4, Locals=4, Args_size=4
   0:	aload_0
   1:	iload_1
   2:	iload_2
   3:	iload_3
   4:	invokestatic	#45; //Method java/util/Arrays.fill:([CIIC)V
   7:	return

public static void fill(byte[], byte);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	invokestatic	#46; //Method java/util/Arrays.fill:([BB)V
   5:	return

public static void fill(byte[], int, int, byte);
  Code:
   Stack=4, Locals=4, Args_size=4
   0:	aload_0
   1:	iload_1
   2:	iload_2
   3:	iload_3
   4:	invokestatic	#47; //Method java/util/Arrays.fill:([BIIB)V
   7:	return

public static void fill(boolean[], boolean);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	invokestatic	#48; //Method java/util/Arrays.fill:([ZZ)V
   5:	return

public static void fill(boolean[], int, int, boolean);
  Code:
   Stack=4, Locals=4, Args_size=4
   0:	aload_0
   1:	iload_1
   2:	iload_2
   3:	iload_3
   4:	invokestatic	#49; //Method java/util/Arrays.fill:([ZIIZ)V
   7:	return

public static void fill(double[], double);
  Code:
   Stack=3, Locals=3, Args_size=2
   0:	aload_0
   1:	dload_1
   2:	invokestatic	#50; //Method java/util/Arrays.fill:([DD)V
   5:	return

public static void fill(double[], int, int, double);
  Code:
   Stack=5, Locals=5, Args_size=4
   0:	aload_0
   1:	iload_1
   2:	iload_2
   3:	dload_3
   4:	invokestatic	#51; //Method java/util/Arrays.fill:([DIID)V
   7:	return

public static void fill(float[], float);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	fload_1
   2:	invokestatic	#52; //Method java/util/Arrays.fill:([FF)V
   5:	return

public static void fill(float[], int, int, float);
  Code:
   Stack=4, Locals=4, Args_size=4
   0:	aload_0
   1:	iload_1
   2:	iload_2
   3:	fload_3
   4:	invokestatic	#53; //Method java/util/Arrays.fill:([FIIF)V
   7:	return

public static void fill(java.lang.Object[], java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#54; //Method java/util/Arrays.fill:([Ljava/lang/Object;Ljava/lang/Object;)V
   5:	return

public static void fill(java.lang.Object[], int, int, java.lang.Object);
  Code:
   Stack=4, Locals=4, Args_size=4
   0:	aload_0
   1:	iload_1
   2:	iload_2
   3:	aload_3
   4:	invokestatic	#55; //Method java/util/Arrays.fill:([Ljava/lang/Object;IILjava/lang/Object;)V
   7:	return

public static java.lang.Object[] copyOf(java.lang.Object[], int);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	aload_0
   3:	invokevirtual	#56; //Method java/lang/Object.getClass:()Ljava/lang/Class;
   6:	invokestatic	#57; //Method copyOf:([Ljava/lang/Object;ILjava/lang/Class;)[Ljava/lang/Object;
   9:	areturn

public static java.lang.Object[] copyOf(java.lang.Object[], int, java.lang.Class);
  Code:
   Stack=5, Locals=5, Args_size=3
   0:	aload_2
   1:	ldc_w	#58; //class "[Ljava/lang/Object;"
   4:	if_acmpne	14
   7:	iload_1
   8:	anewarray	#59; //class java/lang/Object
   11:	goto	28
   14:	aload_2
   15:	invokevirtual	#60; //Method java/lang/Class.getComponentType:()Ljava/lang/Class;
   18:	iload_1
   19:	invokestatic	#61; //Method java/lang/reflect/Array.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;
   22:	checkcast	#58; //class "[Ljava/lang/Object;"
   25:	checkcast	#58; //class "[Ljava/lang/Object;"
   28:	astore_3
   29:	aload_0
   30:	arraylength
   31:	iload_1
   32:	if_icmpge	40
   35:	aload_0
   36:	arraylength
   37:	goto	41
   40:	iload_1
   41:	istore	4
   43:	aload_0
   44:	iconst_0
   45:	aload_3
   46:	iconst_0
   47:	iload	4
   49:	invokestatic	#62; //Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
   52:	aload_3
   53:	areturn

public static byte[] copyOf(byte[], int);
  Code:
   Stack=5, Locals=4, Args_size=2
   0:	iload_1
   1:	newarray byte
   3:	astore_2
   4:	aload_0
   5:	arraylength
   6:	iload_1
   7:	if_icmpge	15
   10:	aload_0
   11:	arraylength
   12:	goto	16
   15:	iload_1
   16:	istore_3
   17:	aload_0
   18:	iconst_0
   19:	aload_2
   20:	iconst_0
   21:	iload_3
   22:	invokestatic	#62; //Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
   25:	aload_2
   26:	areturn

public static short[] copyOf(short[], int);
  Code:
   Stack=5, Locals=4, Args_size=2
   0:	iload_1
   1:	newarray short
   3:	astore_2
   4:	aload_0
   5:	arraylength
   6:	iload_1
   7:	if_icmpge	15
   10:	aload_0
   11:	arraylength
   12:	goto	16
   15:	iload_1
   16:	istore_3
   17:	aload_0
   18:	iconst_0
   19:	aload_2
   20:	iconst_0
   21:	iload_3
   22:	invokestatic	#62; //Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
   25:	aload_2
   26:	areturn

public static int[] copyOf(int[], int);
  Code:
   Stack=5, Locals=4, Args_size=2
   0:	iload_1
   1:	newarray int
   3:	astore_2
   4:	aload_0
   5:	arraylength
   6:	iload_1
   7:	if_icmpge	15
   10:	aload_0
   11:	arraylength
   12:	goto	16
   15:	iload_1
   16:	istore_3
   17:	aload_0
   18:	iconst_0
   19:	aload_2
   20:	iconst_0
   21:	iload_3
   22:	invokestatic	#62; //Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
   25:	aload_2
   26:	areturn

public static long[] copyOf(long[], int);
  Code:
   Stack=5, Locals=4, Args_size=2
   0:	iload_1
   1:	newarray long
   3:	astore_2
   4:	aload_0
   5:	arraylength
   6:	iload_1
   7:	if_icmpge	15
   10:	aload_0
   11:	arraylength
   12:	goto	16
   15:	iload_1
   16:	istore_3
   17:	aload_0
   18:	iconst_0
   19:	aload_2
   20:	iconst_0
   21:	iload_3
   22:	invokestatic	#62; //Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
   25:	aload_2
   26:	areturn

public static char[] copyOf(char[], int);
  Code:
   Stack=5, Locals=4, Args_size=2
   0:	iload_1
   1:	newarray char
   3:	astore_2
   4:	aload_0
   5:	arraylength
   6:	iload_1
   7:	if_icmpge	15
   10:	aload_0
   11:	arraylength
   12:	goto	16
   15:	iload_1
   16:	istore_3
   17:	aload_0
   18:	iconst_0
   19:	aload_2
   20:	iconst_0
   21:	iload_3
   22:	invokestatic	#62; //Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
   25:	aload_2
   26:	areturn

public static float[] copyOf(float[], int);
  Code:
   Stack=5, Locals=4, Args_size=2
   0:	iload_1
   1:	newarray float
   3:	astore_2
   4:	aload_0
   5:	arraylength
   6:	iload_1
   7:	if_icmpge	15
   10:	aload_0
   11:	arraylength
   12:	goto	16
   15:	iload_1
   16:	istore_3
   17:	aload_0
   18:	iconst_0
   19:	aload_2
   20:	iconst_0
   21:	iload_3
   22:	invokestatic	#62; //Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
   25:	aload_2
   26:	areturn

public static double[] copyOf(double[], int);
  Code:
   Stack=5, Locals=4, Args_size=2
   0:	iload_1
   1:	newarray double
   3:	astore_2
   4:	aload_0
   5:	arraylength
   6:	iload_1
   7:	if_icmpge	15
   10:	aload_0
   11:	arraylength
   12:	goto	16
   15:	iload_1
   16:	istore_3
   17:	aload_0
   18:	iconst_0
   19:	aload_2
   20:	iconst_0
   21:	iload_3
   22:	invokestatic	#62; //Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
   25:	aload_2
   26:	areturn

public static boolean[] copyOf(boolean[], int);
  Code:
   Stack=5, Locals=4, Args_size=2
   0:	iload_1
   1:	newarray boolean
   3:	astore_2
   4:	aload_0
   5:	arraylength
   6:	iload_1
   7:	if_icmpge	15
   10:	aload_0
   11:	arraylength
   12:	goto	16
   15:	iload_1
   16:	istore_3
   17:	aload_0
   18:	iconst_0
   19:	aload_2
   20:	iconst_0
   21:	iload_3
   22:	invokestatic	#62; //Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
   25:	aload_2
   26:	areturn

public static java.lang.Object[] copyOfRange(java.lang.Object[], int, int);
  Code:
   Stack=4, Locals=3, Args_size=3
   0:	aload_0
   1:	iload_1
   2:	iload_2
   3:	aload_0
   4:	invokevirtual	#56; //Method java/lang/Object.getClass:()Ljava/lang/Class;
   7:	invokestatic	#63; //Method copyOfRange:([Ljava/lang/Object;IILjava/lang/Class;)[Ljava/lang/Object;
   10:	areturn

public static java.lang.Object[] copyOfRange(java.lang.Object[], int, int, java.lang.Class);
  Code:
   Stack=5, Locals=8, Args_size=4
   0:	iload_2
   1:	iload_1
   2:	isub
   3:	istore	4
   5:	iload	4
   7:	ifge	41
   10:	new	#64; //class java/lang/IllegalArgumentException
   13:	dup
   14:	new	#65; //class java/lang/StringBuilder
   17:	dup
   18:	invokespecial	#66; //Method java/lang/StringBuilder."<init>":()V
   21:	iload_1
   22:	invokevirtual	#67; //Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
   25:	ldc	#68; //String  > 
   27:	invokevirtual	#69; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   30:	iload_2
   31:	invokevirtual	#67; //Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
   34:	invokevirtual	#70; //Method java/lang/StringBuilder.toString:()Ljava/lang/String;
   37:	invokespecial	#71; //Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
   40:	athrow
   41:	aload_3
   42:	ldc_w	#58; //class "[Ljava/lang/Object;"
   45:	if_acmpne	56
   48:	iload	4
   50:	anewarray	#59; //class java/lang/Object
   53:	goto	71
   56:	aload_3
   57:	invokevirtual	#60; //Method java/lang/Class.getComponentType:()Ljava/lang/Class;
   60:	iload	4
   62:	invokestatic	#61; //Method java/lang/reflect/Array.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;
   65:	checkcast	#58; //class "[Ljava/lang/Object;"
   68:	checkcast	#58; //class "[Ljava/lang/Object;"
   71:	astore	5
   73:	aload_0
   74:	arraylength
   75:	iload_1
   76:	isub
   77:	istore	6
   79:	iload	6
   81:	iload	4
   83:	if_icmpge	91
   86:	iload	6
   88:	goto	93
   91:	iload	4
   93:	istore	7
   95:	aload_0
   96:	iload_1
   97:	aload	5
   99:	iconst_0
   100:	iload	7
   102:	invokestatic	#62; //Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
   105:	aload	5
   107:	areturn

public static byte[] copyOfRange(byte[], int, int);
  Code:
   Stack=5, Locals=7, Args_size=3
   0:	iload_2
   1:	iload_1
   2:	isub
   3:	istore_3
   4:	iload_3
   5:	ifge	39
   8:	new	#64; //class java/lang/IllegalArgumentException
   11:	dup
   12:	new	#65; //class java/lang/StringBuilder
   15:	dup
   16:	invokespecial	#66; //Method java/lang/StringBuilder."<init>":()V
   19:	iload_1
   20:	invokevirtual	#67; //Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
   23:	ldc	#68; //String  > 
   25:	invokevirtual	#69; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   28:	iload_2
   29:	invokevirtual	#67; //Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
   32:	invokevirtual	#70; //Method java/lang/StringBuilder.toString:()Ljava/lang/String;
   35:	invokespecial	#71; //Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
   38:	athrow
   39:	iload_3
   40:	newarray byte
   42:	astore	4
   44:	aload_0
   45:	arraylength
   46:	iload_1
   47:	isub
   48:	istore	5
   50:	iload	5
   52:	iload_3
   53:	if_icmpge	61
   56:	iload	5
   58:	goto	62
   61:	iload_3
   62:	istore	6
   64:	aload_0
   65:	iload_1
   66:	aload	4
   68:	iconst_0
   69:	iload	6
   71:	invokestatic	#62; //Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
   74:	aload	4
   76:	areturn

public static short[] copyOfRange(short[], int, int);
  Code:
   Stack=5, Locals=7, Args_size=3
   0:	iload_2
   1:	iload_1
   2:	isub
   3:	istore_3
   4:	iload_3
   5:	ifge	39
   8:	new	#64; //class java/lang/IllegalArgumentException
   11:	dup
   12:	new	#65; //class java/lang/StringBuilder
   15:	dup
   16:	invokespecial	#66; //Method java/lang/StringBuilder."<init>":()V
   19:	iload_1
   20:	invokevirtual	#67; //Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
   23:	ldc	#68; //String  > 
   25:	invokevirtual	#69; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   28:	iload_2
   29:	invokevirtual	#67; //Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
   32:	invokevirtual	#70; //Method java/lang/StringBuilder.toString:()Ljava/lang/String;
   35:	invokespecial	#71; //Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
   38:	athrow
   39:	iload_3
   40:	newarray short
   42:	astore	4
   44:	aload_0
   45:	arraylength
   46:	iload_1
   47:	isub
   48:	istore	5
   50:	iload	5
   52:	iload_3
   53:	if_icmpge	61
   56:	iload	5
   58:	goto	62
   61:	iload_3
   62:	istore	6
   64:	aload_0
   65:	iload_1
   66:	aload	4
   68:	iconst_0
   69:	iload	6
   71:	invokestatic	#62; //Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
   74:	aload	4
   76:	areturn

public static int[] copyOfRange(int[], int, int);
  Code:
   Stack=5, Locals=7, Args_size=3
   0:	iload_2
   1:	iload_1
   2:	isub
   3:	istore_3
   4:	iload_3
   5:	ifge	39
   8:	new	#64; //class java/lang/IllegalArgumentException
   11:	dup
   12:	new	#65; //class java/lang/StringBuilder
   15:	dup
   16:	invokespecial	#66; //Method java/lang/StringBuilder."<init>":()V
   19:	iload_1
   20:	invokevirtual	#67; //Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
   23:	ldc	#68; //String  > 
   25:	invokevirtual	#69; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   28:	iload_2
   29:	invokevirtual	#67; //Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
   32:	invokevirtual	#70; //Method java/lang/StringBuilder.toString:()Ljava/lang/String;
   35:	invokespecial	#71; //Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
   38:	athrow
   39:	iload_3
   40:	newarray int
   42:	astore	4
   44:	aload_0
   45:	arraylength
   46:	iload_1
   47:	isub
   48:	istore	5
   50:	iload	5
   52:	iload_3
   53:	if_icmpge	61
   56:	iload	5
   58:	goto	62
   61:	iload_3
   62:	istore	6
   64:	aload_0
   65:	iload_1
   66:	aload	4
   68:	iconst_0
   69:	iload	6
   71:	invokestatic	#62; //Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
   74:	aload	4
   76:	areturn

public static long[] copyOfRange(long[], int, int);
  Code:
   Stack=5, Locals=7, Args_size=3
   0:	iload_2
   1:	iload_1
   2:	isub
   3:	istore_3
   4:	iload_3
   5:	ifge	39
   8:	new	#64; //class java/lang/IllegalArgumentException
   11:	dup
   12:	new	#65; //class java/lang/StringBuilder
   15:	dup
   16:	invokespecial	#66; //Method java/lang/StringBuilder."<init>":()V
   19:	iload_1
   20:	invokevirtual	#67; //Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
   23:	ldc	#68; //String  > 
   25:	invokevirtual	#69; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   28:	iload_2
   29:	invokevirtual	#67; //Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
   32:	invokevirtual	#70; //Method java/lang/StringBuilder.toString:()Ljava/lang/String;
   35:	invokespecial	#71; //Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
   38:	athrow
   39:	iload_3
   40:	newarray long
   42:	astore	4
   44:	aload_0
   45:	arraylength
   46:	iload_1
   47:	isub
   48:	istore	5
   50:	iload	5
   52:	iload_3
   53:	if_icmpge	61
   56:	iload	5
   58:	goto	62
   61:	iload_3
   62:	istore	6
   64:	aload_0
   65:	iload_1
   66:	aload	4
   68:	iconst_0
   69:	iload	6
   71:	invokestatic	#62; //Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
   74:	aload	4
   76:	areturn

public static char[] copyOfRange(char[], int, int);
  Code:
   Stack=5, Locals=7, Args_size=3
   0:	iload_2
   1:	iload_1
   2:	isub
   3:	istore_3
   4:	iload_3
   5:	ifge	39
   8:	new	#64; //class java/lang/IllegalArgumentException
   11:	dup
   12:	new	#65; //class java/lang/StringBuilder
   15:	dup
   16:	invokespecial	#66; //Method java/lang/StringBuilder."<init>":()V
   19:	iload_1
   20:	invokevirtual	#67; //Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
   23:	ldc	#68; //String  > 
   25:	invokevirtual	#69; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   28:	iload_2
   29:	invokevirtual	#67; //Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
   32:	invokevirtual	#70; //Method java/lang/StringBuilder.toString:()Ljava/lang/String;
   35:	invokespecial	#71; //Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
   38:	athrow
   39:	iload_3
   40:	newarray char
   42:	astore	4
   44:	aload_0
   45:	arraylength
   46:	iload_1
   47:	isub
   48:	istore	5
   50:	iload	5
   52:	iload_3
   53:	if_icmpge	61
   56:	iload	5
   58:	goto	62
   61:	iload_3
   62:	istore	6
   64:	aload_0
   65:	iload_1
   66:	aload	4
   68:	iconst_0
   69:	iload	6
   71:	invokestatic	#62; //Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
   74:	aload	4
   76:	areturn

public static float[] copyOfRange(float[], int, int);
  Code:
   Stack=5, Locals=7, Args_size=3
   0:	iload_2
   1:	iload_1
   2:	isub
   3:	istore_3
   4:	iload_3
   5:	ifge	39
   8:	new	#64; //class java/lang/IllegalArgumentException
   11:	dup
   12:	new	#65; //class java/lang/StringBuilder
   15:	dup
   16:	invokespecial	#66; //Method java/lang/StringBuilder."<init>":()V
   19:	iload_1
   20:	invokevirtual	#67; //Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
   23:	ldc	#68; //String  > 
   25:	invokevirtual	#69; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   28:	iload_2
   29:	invokevirtual	#67; //Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
   32:	invokevirtual	#70; //Method java/lang/StringBuilder.toString:()Ljava/lang/String;
   35:	invokespecial	#71; //Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
   38:	athrow
   39:	iload_3
   40:	newarray float
   42:	astore	4
   44:	aload_0
   45:	arraylength
   46:	iload_1
   47:	isub
   48:	istore	5
   50:	iload	5
   52:	iload_3
   53:	if_icmpge	61
   56:	iload	5
   58:	goto	62
   61:	iload_3
   62:	istore	6
   64:	aload_0
   65:	iload_1
   66:	aload	4
   68:	iconst_0
   69:	iload	6
   71:	invokestatic	#62; //Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
   74:	aload	4
   76:	areturn

public static double[] copyOfRange(double[], int, int);
  Code:
   Stack=5, Locals=7, Args_size=3
   0:	iload_2
   1:	iload_1
   2:	isub
   3:	istore_3
   4:	iload_3
   5:	ifge	39
   8:	new	#64; //class java/lang/IllegalArgumentException
   11:	dup
   12:	new	#65; //class java/lang/StringBuilder
   15:	dup
   16:	invokespecial	#66; //Method java/lang/StringBuilder."<init>":()V
   19:	iload_1
   20:	invokevirtual	#67; //Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
   23:	ldc	#68; //String  > 
   25:	invokevirtual	#69; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   28:	iload_2
   29:	invokevirtual	#67; //Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
   32:	invokevirtual	#70; //Method java/lang/StringBuilder.toString:()Ljava/lang/String;
   35:	invokespecial	#71; //Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
   38:	athrow
   39:	iload_3
   40:	newarray double
   42:	astore	4
   44:	aload_0
   45:	arraylength
   46:	iload_1
   47:	isub
   48:	istore	5
   50:	iload	5
   52:	iload_3
   53:	if_icmpge	61
   56:	iload	5
   58:	goto	62
   61:	iload_3
   62:	istore	6
   64:	aload_0
   65:	iload_1
   66:	aload	4
   68:	iconst_0
   69:	iload	6
   71:	invokestatic	#62; //Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
   74:	aload	4
   76:	areturn

public static boolean[] copyOfRange(boolean[], int, int);
  Code:
   Stack=5, Locals=7, Args_size=3
   0:	iload_2
   1:	iload_1
   2:	isub
   3:	istore_3
   4:	iload_3
   5:	ifge	39
   8:	new	#64; //class java/lang/IllegalArgumentException
   11:	dup
   12:	new	#65; //class java/lang/StringBuilder
   15:	dup
   16:	invokespecial	#66; //Method java/lang/StringBuilder."<init>":()V
   19:	iload_1
   20:	invokevirtual	#67; //Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
   23:	ldc	#68; //String  > 
   25:	invokevirtual	#69; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   28:	iload_2
   29:	invokevirtual	#67; //Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
   32:	invokevirtual	#70; //Method java/lang/StringBuilder.toString:()Ljava/lang/String;
   35:	invokespecial	#71; //Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
   38:	athrow
   39:	iload_3
   40:	newarray boolean
   42:	astore	4
   44:	aload_0
   45:	arraylength
   46:	iload_1
   47:	isub
   48:	istore	5
   50:	iload	5
   52:	iload_3
   53:	if_icmpge	61
   56:	iload	5
   58:	goto	62
   61:	iload_3
   62:	istore	6
   64:	aload_0
   65:	iload_1
   66:	aload	4
   68:	iconst_0
   69:	iload	6
   71:	invokestatic	#62; //Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
   74:	aload	4
   76:	areturn

public static java.util.List asList(java.lang.Object[]);
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#72; //Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
   4:	areturn

public static int hashCode(long[]);
  Code:
   Stack=6, Locals=5, Args_size=1
   0:	aload_0
   1:	ifnonnull	6
   4:	iconst_0
   5:	ireturn
   6:	iconst_1
   7:	istore_1
   8:	iconst_0
   9:	istore_2
   10:	iload_2
   11:	aload_0
   12:	arraylength
   13:	if_icmpge	39
   16:	aload_0
   17:	iload_2
   18:	laload
   19:	lstore_3
   20:	bipush	31
   22:	iload_1
   23:	imul
   24:	lload_3
   25:	lload_3
   26:	bipush	32
   28:	lushr
   29:	lxor
   30:	l2i
   31:	iadd
   32:	istore_1
   33:	iinc	2, 1
   36:	goto	10
   39:	iload_1
   40:	ireturn

public static int hashCode(int[]);
  Code:
   Stack=3, Locals=3, Args_size=1
   0:	aload_0
   1:	ifnonnull	6
   4:	iconst_0
   5:	ireturn
   6:	iconst_1
   7:	istore_1
   8:	iconst_0
   9:	istore_2
   10:	iload_2
   11:	aload_0
   12:	arraylength
   13:	if_icmpge	31
   16:	bipush	31
   18:	iload_1
   19:	imul
   20:	aload_0
   21:	iload_2
   22:	iaload
   23:	iadd
   24:	istore_1
   25:	iinc	2, 1
   28:	goto	10
   31:	iload_1
   32:	ireturn

public static int hashCode(short[]);
  Code:
   Stack=3, Locals=3, Args_size=1
   0:	aload_0
   1:	ifnonnull	6
   4:	iconst_0
   5:	ireturn
   6:	iconst_1
   7:	istore_1
   8:	iconst_0
   9:	istore_2
   10:	iload_2
   11:	aload_0
   12:	arraylength
   13:	if_icmpge	31
   16:	bipush	31
   18:	iload_1
   19:	imul
   20:	aload_0
   21:	iload_2
   22:	saload
   23:	iadd
   24:	istore_1
   25:	iinc	2, 1
   28:	goto	10
   31:	iload_1
   32:	ireturn

public static int hashCode(char[]);
  Code:
   Stack=3, Locals=3, Args_size=1
   0:	aload_0
   1:	ifnonnull	6
   4:	iconst_0
   5:	ireturn
   6:	iconst_1
   7:	istore_1
   8:	iconst_0
   9:	istore_2
   10:	iload_2
   11:	aload_0
   12:	arraylength
   13:	if_icmpge	31
   16:	bipush	31
   18:	iload_1
   19:	imul
   20:	aload_0
   21:	iload_2
   22:	caload
   23:	iadd
   24:	istore_1
   25:	iinc	2, 1
   28:	goto	10
   31:	iload_1
   32:	ireturn

public static int hashCode(byte[]);
  Code:
   Stack=3, Locals=3, Args_size=1
   0:	aload_0
   1:	ifnonnull	6
   4:	iconst_0
   5:	ireturn
   6:	iconst_1
   7:	istore_1
   8:	iconst_0
   9:	istore_2
   10:	iload_2
   11:	aload_0
   12:	arraylength
   13:	if_icmpge	31
   16:	bipush	31
   18:	iload_1
   19:	imul
   20:	aload_0
   21:	iload_2
   22:	baload
   23:	iadd
   24:	istore_1
   25:	iinc	2, 1
   28:	goto	10
   31:	iload_1
   32:	ireturn

public static int hashCode(boolean[]);
  Code:
   Stack=3, Locals=3, Args_size=1
   0:	aload_0
   1:	ifnonnull	6
   4:	iconst_0
   5:	ireturn
   6:	iconst_1
   7:	istore_1
   8:	iconst_0
   9:	istore_2
   10:	iload_2
   11:	aload_0
   12:	arraylength
   13:	if_icmpge	43
   16:	bipush	31
   18:	iload_1
   19:	imul
   20:	aload_0
   21:	iload_2
   22:	baload
   23:	ifeq	32
   26:	sipush	1231
   29:	goto	35
   32:	sipush	1237
   35:	iadd
   36:	istore_1
   37:	iinc	2, 1
   40:	goto	10
   43:	iload_1
   44:	ireturn

public static int hashCode(float[]);
  Code:
   Stack=3, Locals=3, Args_size=1
   0:	aload_0
   1:	ifnonnull	6
   4:	iconst_0
   5:	ireturn
   6:	iconst_1
   7:	istore_1
   8:	iconst_0
   9:	istore_2
   10:	iload_2
   11:	aload_0
   12:	arraylength
   13:	if_icmpge	34
   16:	bipush	31
   18:	iload_1
   19:	imul
   20:	aload_0
   21:	iload_2
   22:	faload
   23:	invokestatic	#73; //Method java/lang/Float.floatToIntBits:(F)I
   26:	iadd
   27:	istore_1
   28:	iinc	2, 1
   31:	goto	10
   34:	iload_1
   35:	ireturn

public static int hashCode(double[]);
  Code:
   Stack=6, Locals=5, Args_size=1
   0:	aload_0
   1:	ifnonnull	6
   4:	iconst_0
   5:	ireturn
   6:	iconst_1
   7:	istore_1
   8:	iconst_0
   9:	istore_2
   10:	iload_2
   11:	aload_0
   12:	arraylength
   13:	if_icmpge	42
   16:	aload_0
   17:	iload_2
   18:	daload
   19:	invokestatic	#74; //Method java/lang/Double.doubleToLongBits:(D)J
   22:	lstore_3
   23:	bipush	31
   25:	iload_1
   26:	imul
   27:	lload_3
   28:	lload_3
   29:	bipush	32
   31:	lushr
   32:	lxor
   33:	l2i
   34:	iadd
   35:	istore_1
   36:	iinc	2, 1
   39:	goto	10
   42:	iload_1
   43:	ireturn

public static int hashCode(java.lang.Object[]);
  Code:
   Stack=2, Locals=4, Args_size=1
   0:	aload_0
   1:	ifnonnull	6
   4:	iconst_0
   5:	ireturn
   6:	iconst_1
   7:	istore_1
   8:	iconst_0
   9:	istore_2
   10:	iload_2
   11:	aload_0
   12:	arraylength
   13:	if_icmpge	44
   16:	aload_0
   17:	iload_2
   18:	aaload
   19:	astore_3
   20:	bipush	31
   22:	iload_1
   23:	imul
   24:	aload_3
   25:	ifnonnull	32
   28:	iconst_0
   29:	goto	36
   32:	aload_3
   33:	invokevirtual	#75; //Method java/lang/Object.hashCode:()I
   36:	iadd
   37:	istore_1
   38:	iinc	2, 1
   41:	goto	10
   44:	iload_1
   45:	ireturn

public static int deepHashCode(java.lang.Object[]);
  Code:
   Stack=2, Locals=4, Args_size=1
   0:	aload_0
   1:	ifnonnull	6
   4:	iconst_0
   5:	ireturn
   6:	iconst_1
   7:	istore_1
   8:	iconst_0
   9:	istore_2
   10:	iload_2
   11:	aload_0
   12:	arraylength
   13:	if_icmpge	224
   16:	aload_0
   17:	iload_2
   18:	aaload
   19:	astore_3
   20:	bipush	31
   22:	iload_1
   23:	imul
   24:	aload_3
   25:	instanceof	#58; //class "[Ljava/lang/Object;"
   28:	ifeq	44
   31:	aload_3
   32:	checkcast	#58; //class "[Ljava/lang/Object;"
   35:	checkcast	#58; //class "[Ljava/lang/Object;"
   38:	invokestatic	#76; //Method deepHashCode:([Ljava/lang/Object;)I
   41:	goto	216
   44:	aload_3
   45:	instanceof	#77; //class "[B"
   48:	ifeq	64
   51:	aload_3
   52:	checkcast	#77; //class "[B"
   55:	checkcast	#77; //class "[B"
   58:	invokestatic	#78; //Method hashCode:([B)I
   61:	goto	216
   64:	aload_3
   65:	instanceof	#79; //class "[S"
   68:	ifeq	84
   71:	aload_3
   72:	checkcast	#79; //class "[S"
   75:	checkcast	#79; //class "[S"
   78:	invokestatic	#80; //Method hashCode:([S)I
   81:	goto	216
   84:	aload_3
   85:	instanceof	#81; //class "[I"
   88:	ifeq	104
   91:	aload_3
   92:	checkcast	#81; //class "[I"
   95:	checkcast	#81; //class "[I"
   98:	invokestatic	#82; //Method hashCode:([I)I
   101:	goto	216
   104:	aload_3
   105:	instanceof	#83; //class "[J"
   108:	ifeq	124
   111:	aload_3
   112:	checkcast	#83; //class "[J"
   115:	checkcast	#83; //class "[J"
   118:	invokestatic	#84; //Method hashCode:([J)I
   121:	goto	216
   124:	aload_3
   125:	instanceof	#85; //class "[C"
   128:	ifeq	144
   131:	aload_3
   132:	checkcast	#85; //class "[C"
   135:	checkcast	#85; //class "[C"
   138:	invokestatic	#86; //Method hashCode:([C)I
   141:	goto	216
   144:	aload_3
   145:	instanceof	#87; //class "[Z"
   148:	ifeq	164
   151:	aload_3
   152:	checkcast	#87; //class "[Z"
   155:	checkcast	#87; //class "[Z"
   158:	invokestatic	#88; //Method hashCode:([Z)I
   161:	goto	216
   164:	aload_3
   165:	instanceof	#89; //class "[F"
   168:	ifeq	184
   171:	aload_3
   172:	checkcast	#89; //class "[F"
   175:	checkcast	#89; //class "[F"
   178:	invokestatic	#90; //Method hashCode:([F)I
   181:	goto	216
   184:	aload_3
   185:	instanceof	#91; //class "[D"
   188:	ifeq	204
   191:	aload_3
   192:	checkcast	#91; //class "[D"
   195:	checkcast	#91; //class "[D"
   198:	invokestatic	#92; //Method hashCode:([D)I
   201:	goto	216
   204:	aload_3
   205:	ifnull	215
   208:	aload_3
   209:	invokevirtual	#75; //Method java/lang/Object.hashCode:()I
   212:	goto	216
   215:	iconst_0
   216:	iadd
   217:	istore_1
   218:	iinc	2, 1
   221:	goto	10
   224:	iload_1
   225:	ireturn

public static boolean deepEquals(java.lang.Object[], java.lang.Object[]);
  Code:
   Stack=2, Locals=7, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	if_acmpne	7
   5:	iconst_1
   6:	ireturn
   7:	aload_0
   8:	ifnull	15
   11:	aload_1
   12:	ifnonnull	17
   15:	iconst_0
   16:	ireturn
   17:	aload_0
   18:	arraylength
   19:	istore_2
   20:	iload_2
   21:	aload_1
   22:	arraylength
   23:	if_icmpeq	28
   26:	iconst_0
   27:	ireturn
   28:	iconst_0
   29:	istore_3
   30:	iload_3
   31:	iload_2
   32:	if_icmpge	460
   35:	aload_0
   36:	iload_3
   37:	aaload
   38:	astore	4
   40:	aload_1
   41:	iload_3
   42:	aaload
   43:	astore	5
   45:	aload	4
   47:	aload	5
   49:	if_acmpne	55
   52:	goto	454
   55:	aload	4
   57:	ifnonnull	62
   60:	iconst_0
   61:	ireturn
   62:	aload	4
   64:	invokevirtual	#56; //Method java/lang/Object.getClass:()Ljava/lang/Class;
   67:	aload	5
   69:	invokevirtual	#56; //Method java/lang/Object.getClass:()Ljava/lang/Class;
   72:	if_acmpne	86
   75:	aload	4
   77:	invokevirtual	#56; //Method java/lang/Object.getClass:()Ljava/lang/Class;
   80:	invokevirtual	#93; //Method java/lang/Class.isArray:()Z
   83:	ifeq	96
   86:	aload	4
   88:	aload	5
   90:	invokevirtual	#94; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   93:	goto	445
   96:	aload	4
   98:	instanceof	#58; //class "[Ljava/lang/Object;"
   101:	ifeq	134
   104:	aload	5
   106:	instanceof	#58; //class "[Ljava/lang/Object;"
   109:	ifeq	134
   112:	aload	4
   114:	checkcast	#58; //class "[Ljava/lang/Object;"
   117:	checkcast	#58; //class "[Ljava/lang/Object;"
   120:	aload	5
   122:	checkcast	#58; //class "[Ljava/lang/Object;"
   125:	checkcast	#58; //class "[Ljava/lang/Object;"
   128:	invokestatic	#95; //Method deepEquals:([Ljava/lang/Object;[Ljava/lang/Object;)Z
   131:	goto	445
   134:	aload	4
   136:	instanceof	#77; //class "[B"
   139:	ifeq	172
   142:	aload	5
   144:	instanceof	#77; //class "[B"
   147:	ifeq	172
   150:	aload	4
   152:	checkcast	#77; //class "[B"
   155:	checkcast	#77; //class "[B"
   158:	aload	5
   160:	checkcast	#77; //class "[B"
   163:	checkcast	#77; //class "[B"
   166:	invokestatic	#96; //Method equals:([B[B)Z
   169:	goto	445
   172:	aload	4
   174:	instanceof	#79; //class "[S"
   177:	ifeq	210
   180:	aload	5
   182:	instanceof	#79; //class "[S"
   185:	ifeq	210
   188:	aload	4
   190:	checkcast	#79; //class "[S"
   193:	checkcast	#79; //class "[S"
   196:	aload	5
   198:	checkcast	#79; //class "[S"
   201:	checkcast	#79; //class "[S"
   204:	invokestatic	#97; //Method equals:([S[S)Z
   207:	goto	445
   210:	aload	4
   212:	instanceof	#81; //class "[I"
   215:	ifeq	248
   218:	aload	5
   220:	instanceof	#81; //class "[I"
   223:	ifeq	248
   226:	aload	4
   228:	checkcast	#81; //class "[I"
   231:	checkcast	#81; //class "[I"
   234:	aload	5
   236:	checkcast	#81; //class "[I"
   239:	checkcast	#81; //class "[I"
   242:	invokestatic	#98; //Method equals:([I[I)Z
   245:	goto	445
   248:	aload	4
   250:	instanceof	#83; //class "[J"
   253:	ifeq	286
   256:	aload	5
   258:	instanceof	#83; //class "[J"
   261:	ifeq	286
   264:	aload	4
   266:	checkcast	#83; //class "[J"
   269:	checkcast	#83; //class "[J"
   272:	aload	5
   274:	checkcast	#83; //class "[J"
   277:	checkcast	#83; //class "[J"
   280:	invokestatic	#99; //Method equals:([J[J)Z
   283:	goto	445
   286:	aload	4
   288:	instanceof	#85; //class "[C"
   291:	ifeq	324
   294:	aload	5
   296:	instanceof	#85; //class "[C"
   299:	ifeq	324
   302:	aload	4
   304:	checkcast	#85; //class "[C"
   307:	checkcast	#85; //class "[C"
   310:	aload	5
   312:	checkcast	#85; //class "[C"
   315:	checkcast	#85; //class "[C"
   318:	invokestatic	#100; //Method equals:([C[C)Z
   321:	goto	445
   324:	aload	4
   326:	instanceof	#87; //class "[Z"
   329:	ifeq	362
   332:	aload	5
   334:	instanceof	#87; //class "[Z"
   337:	ifeq	362
   340:	aload	4
   342:	checkcast	#87; //class "[Z"
   345:	checkcast	#87; //class "[Z"
   348:	aload	5
   350:	checkcast	#87; //class "[Z"
   353:	checkcast	#87; //class "[Z"
   356:	invokestatic	#101; //Method equals:([Z[Z)Z
   359:	goto	445
   362:	aload	4
   364:	instanceof	#89; //class "[F"
   367:	ifeq	400
   370:	aload	5
   372:	instanceof	#89; //class "[F"
   375:	ifeq	400
   378:	aload	4
   380:	checkcast	#89; //class "[F"
   383:	checkcast	#89; //class "[F"
   386:	aload	5
   388:	checkcast	#89; //class "[F"
   391:	checkcast	#89; //class "[F"
   394:	invokestatic	#102; //Method equals:([F[F)Z
   397:	goto	445
   400:	aload	4
   402:	instanceof	#91; //class "[D"
   405:	ifeq	438
   408:	aload	5
   410:	instanceof	#91; //class "[D"
   413:	ifeq	438
   416:	aload	4
   418:	checkcast	#91; //class "[D"
   421:	checkcast	#91; //class "[D"
   424:	aload	5
   426:	checkcast	#91; //class "[D"
   429:	checkcast	#91; //class "[D"
   432:	invokestatic	#103; //Method equals:([D[D)Z
   435:	goto	445
   438:	aload	4
   440:	aload	5
   442:	invokevirtual	#94; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   445:	istore	6
   447:	iload	6
   449:	ifne	454
   452:	iconst_0
   453:	ireturn
   454:	iinc	3, 1
   457:	goto	30
   460:	iconst_1
   461:	ireturn

public static java.lang.String toString(long[]);
  Code:
   Stack=3, Locals=3, Args_size=1
   0:	aload_0
   1:	ifnonnull	7
   4:	ldc	#104; //String null
   6:	areturn
   7:	aload_0
   8:	arraylength
   9:	ifne	15
   12:	ldc	#105; //String []
   14:	areturn
   15:	new	#106; //class java/lang/StringBuffer
   18:	dup
   19:	invokespecial	#107; //Method java/lang/StringBuffer."<init>":()V
   22:	astore_1
   23:	aload_1
   24:	bipush	91
   26:	invokevirtual	#108; //Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
   29:	aload_0
   30:	iconst_0
   31:	laload
   32:	invokevirtual	#109; //Method java/lang/StringBuffer.append:(J)Ljava/lang/StringBuffer;
   35:	pop
   36:	iconst_1
   37:	istore_2
   38:	iload_2
   39:	aload_0
   40:	arraylength
   41:	if_icmpge	63
   44:	aload_1
   45:	ldc	#110; //String , 
   47:	invokevirtual	#111; //Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
   50:	aload_0
   51:	iload_2
   52:	laload
   53:	invokevirtual	#109; //Method java/lang/StringBuffer.append:(J)Ljava/lang/StringBuffer;
   56:	pop
   57:	iinc	2, 1
   60:	goto	38
   63:	aload_1
   64:	bipush	93
   66:	invokevirtual	#108; //Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
   69:	pop
   70:	aload_1
   71:	invokevirtual	#112; //Method java/lang/StringBuffer.toString:()Ljava/lang/String;
   74:	areturn

public static java.lang.String toString(int[]);
  Code:
   Stack=3, Locals=3, Args_size=1
   0:	aload_0
   1:	ifnonnull	7
   4:	ldc	#104; //String null
   6:	areturn
   7:	aload_0
   8:	arraylength
   9:	ifne	15
   12:	ldc	#105; //String []
   14:	areturn
   15:	new	#106; //class java/lang/StringBuffer
   18:	dup
   19:	invokespecial	#107; //Method java/lang/StringBuffer."<init>":()V
   22:	astore_1
   23:	aload_1
   24:	bipush	91
   26:	invokevirtual	#108; //Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
   29:	aload_0
   30:	iconst_0
   31:	iaload
   32:	invokevirtual	#113; //Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
   35:	pop
   36:	iconst_1
   37:	istore_2
   38:	iload_2
   39:	aload_0
   40:	arraylength
   41:	if_icmpge	63
   44:	aload_1
   45:	ldc	#110; //String , 
   47:	invokevirtual	#111; //Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
   50:	aload_0
   51:	iload_2
   52:	iaload
   53:	invokevirtual	#113; //Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
   56:	pop
   57:	iinc	2, 1
   60:	goto	38
   63:	aload_1
   64:	bipush	93
   66:	invokevirtual	#108; //Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
   69:	pop
   70:	aload_1
   71:	invokevirtual	#112; //Method java/lang/StringBuffer.toString:()Ljava/lang/String;
   74:	areturn

public static java.lang.String toString(short[]);
  Code:
   Stack=3, Locals=3, Args_size=1
   0:	aload_0
   1:	ifnonnull	7
   4:	ldc	#104; //String null
   6:	areturn
   7:	aload_0
   8:	arraylength
   9:	ifne	15
   12:	ldc	#105; //String []
   14:	areturn
   15:	new	#106; //class java/lang/StringBuffer
   18:	dup
   19:	invokespecial	#107; //Method java/lang/StringBuffer."<init>":()V
   22:	astore_1
   23:	aload_1
   24:	bipush	91
   26:	invokevirtual	#108; //Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
   29:	aload_0
   30:	iconst_0
   31:	saload
   32:	invokevirtual	#113; //Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
   35:	pop
   36:	iconst_1
   37:	istore_2
   38:	iload_2
   39:	aload_0
   40:	arraylength
   41:	if_icmpge	63
   44:	aload_1
   45:	ldc	#110; //String , 
   47:	invokevirtual	#111; //Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
   50:	aload_0
   51:	iload_2
   52:	saload
   53:	invokevirtual	#113; //Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
   56:	pop
   57:	iinc	2, 1
   60:	goto	38
   63:	aload_1
   64:	bipush	93
   66:	invokevirtual	#108; //Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
   69:	pop
   70:	aload_1
   71:	invokevirtual	#112; //Method java/lang/StringBuffer.toString:()Ljava/lang/String;
   74:	areturn

public static java.lang.String toString(char[]);
  Code:
   Stack=3, Locals=3, Args_size=1
   0:	aload_0
   1:	ifnonnull	7
   4:	ldc	#104; //String null
   6:	areturn
   7:	aload_0
   8:	arraylength
   9:	ifne	15
   12:	ldc	#105; //String []
   14:	areturn
   15:	new	#106; //class java/lang/StringBuffer
   18:	dup
   19:	invokespecial	#107; //Method java/lang/StringBuffer."<init>":()V
   22:	astore_1
   23:	aload_1
   24:	bipush	91
   26:	invokevirtual	#108; //Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
   29:	aload_0
   30:	iconst_0
   31:	caload
   32:	invokevirtual	#108; //Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
   35:	pop
   36:	iconst_1
   37:	istore_2
   38:	iload_2
   39:	aload_0
   40:	arraylength
   41:	if_icmpge	63
   44:	aload_1
   45:	ldc	#110; //String , 
   47:	invokevirtual	#111; //Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
   50:	aload_0
   51:	iload_2
   52:	caload
   53:	invokevirtual	#108; //Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
   56:	pop
   57:	iinc	2, 1
   60:	goto	38
   63:	aload_1
   64:	bipush	93
   66:	invokevirtual	#108; //Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
   69:	pop
   70:	aload_1
   71:	invokevirtual	#112; //Method java/lang/StringBuffer.toString:()Ljava/lang/String;
   74:	areturn

public static java.lang.String toString(byte[]);
  Code:
   Stack=3, Locals=3, Args_size=1
   0:	aload_0
   1:	ifnonnull	7
   4:	ldc	#104; //String null
   6:	areturn
   7:	aload_0
   8:	arraylength
   9:	ifne	15
   12:	ldc	#105; //String []
   14:	areturn
   15:	new	#106; //class java/lang/StringBuffer
   18:	dup
   19:	invokespecial	#107; //Method java/lang/StringBuffer."<init>":()V
   22:	astore_1
   23:	aload_1
   24:	bipush	91
   26:	invokevirtual	#108; //Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
   29:	aload_0
   30:	iconst_0
   31:	baload
   32:	invokevirtual	#113; //Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
   35:	pop
   36:	iconst_1
   37:	istore_2
   38:	iload_2
   39:	aload_0
   40:	arraylength
   41:	if_icmpge	63
   44:	aload_1
   45:	ldc	#110; //String , 
   47:	invokevirtual	#111; //Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
   50:	aload_0
   51:	iload_2
   52:	baload
   53:	invokevirtual	#113; //Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
   56:	pop
   57:	iinc	2, 1
   60:	goto	38
   63:	aload_1
   64:	bipush	93
   66:	invokevirtual	#108; //Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
   69:	pop
   70:	aload_1
   71:	invokevirtual	#112; //Method java/lang/StringBuffer.toString:()Ljava/lang/String;
   74:	areturn

public static java.lang.String toString(boolean[]);
  Code:
   Stack=3, Locals=3, Args_size=1
   0:	aload_0
   1:	ifnonnull	7
   4:	ldc	#104; //String null
   6:	areturn
   7:	aload_0
   8:	arraylength
   9:	ifne	15
   12:	ldc	#105; //String []
   14:	areturn
   15:	new	#106; //class java/lang/StringBuffer
   18:	dup
   19:	invokespecial	#107; //Method java/lang/StringBuffer."<init>":()V
   22:	astore_1
   23:	aload_1
   24:	bipush	91
   26:	invokevirtual	#108; //Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
   29:	aload_0
   30:	iconst_0
   31:	baload
   32:	invokevirtual	#114; //Method java/lang/StringBuffer.append:(Z)Ljava/lang/StringBuffer;
   35:	pop
   36:	iconst_1
   37:	istore_2
   38:	iload_2
   39:	aload_0
   40:	arraylength
   41:	if_icmpge	63
   44:	aload_1
   45:	ldc	#110; //String , 
   47:	invokevirtual	#111; //Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
   50:	aload_0
   51:	iload_2
   52:	baload
   53:	invokevirtual	#114; //Method java/lang/StringBuffer.append:(Z)Ljava/lang/StringBuffer;
   56:	pop
   57:	iinc	2, 1
   60:	goto	38
   63:	aload_1
   64:	bipush	93
   66:	invokevirtual	#108; //Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
   69:	pop
   70:	aload_1
   71:	invokevirtual	#112; //Method java/lang/StringBuffer.toString:()Ljava/lang/String;
   74:	areturn

public static java.lang.String toString(float[]);
  Code:
   Stack=3, Locals=3, Args_size=1
   0:	aload_0
   1:	ifnonnull	7
   4:	ldc	#104; //String null
   6:	areturn
   7:	aload_0
   8:	arraylength
   9:	ifne	15
   12:	ldc	#105; //String []
   14:	areturn
   15:	new	#106; //class java/lang/StringBuffer
   18:	dup
   19:	invokespecial	#107; //Method java/lang/StringBuffer."<init>":()V
   22:	astore_1
   23:	aload_1
   24:	bipush	91
   26:	invokevirtual	#108; //Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
   29:	aload_0
   30:	iconst_0
   31:	faload
   32:	invokevirtual	#115; //Method java/lang/StringBuffer.append:(F)Ljava/lang/StringBuffer;
   35:	pop
   36:	iconst_1
   37:	istore_2
   38:	iload_2
   39:	aload_0
   40:	arraylength
   41:	if_icmpge	63
   44:	aload_1
   45:	ldc	#110; //String , 
   47:	invokevirtual	#111; //Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
   50:	aload_0
   51:	iload_2
   52:	faload
   53:	invokevirtual	#115; //Method java/lang/StringBuffer.append:(F)Ljava/lang/StringBuffer;
   56:	pop
   57:	iinc	2, 1
   60:	goto	38
   63:	aload_1
   64:	bipush	93
   66:	invokevirtual	#108; //Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
   69:	pop
   70:	aload_1
   71:	invokevirtual	#112; //Method java/lang/StringBuffer.toString:()Ljava/lang/String;
   74:	areturn

public static java.lang.String toString(double[]);
  Code:
   Stack=3, Locals=3, Args_size=1
   0:	aload_0
   1:	ifnonnull	7
   4:	ldc	#104; //String null
   6:	areturn
   7:	aload_0
   8:	arraylength
   9:	ifne	15
   12:	ldc	#105; //String []
   14:	areturn
   15:	new	#106; //class java/lang/StringBuffer
   18:	dup
   19:	invokespecial	#107; //Method java/lang/StringBuffer."<init>":()V
   22:	astore_1
   23:	aload_1
   24:	bipush	91
   26:	invokevirtual	#108; //Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
   29:	aload_0
   30:	iconst_0
   31:	daload
   32:	invokevirtual	#116; //Method java/lang/StringBuffer.append:(D)Ljava/lang/StringBuffer;
   35:	pop
   36:	iconst_1
   37:	istore_2
   38:	iload_2
   39:	aload_0
   40:	arraylength
   41:	if_icmpge	63
   44:	aload_1
   45:	ldc	#110; //String , 
   47:	invokevirtual	#111; //Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
   50:	aload_0
   51:	iload_2
   52:	daload
   53:	invokevirtual	#116; //Method java/lang/StringBuffer.append:(D)Ljava/lang/StringBuffer;
   56:	pop
   57:	iinc	2, 1
   60:	goto	38
   63:	aload_1
   64:	bipush	93
   66:	invokevirtual	#108; //Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
   69:	pop
   70:	aload_1
   71:	invokevirtual	#112; //Method java/lang/StringBuffer.toString:()Ljava/lang/String;
   74:	areturn

public static java.lang.String toString(java.lang.Object[]);
  Code:
   Stack=3, Locals=3, Args_size=1
   0:	aload_0
   1:	ifnonnull	7
   4:	ldc	#104; //String null
   6:	areturn
   7:	aload_0
   8:	arraylength
   9:	ifne	15
   12:	ldc	#105; //String []
   14:	areturn
   15:	new	#106; //class java/lang/StringBuffer
   18:	dup
   19:	invokespecial	#107; //Method java/lang/StringBuffer."<init>":()V
   22:	astore_1
   23:	aload_1
   24:	bipush	91
   26:	invokevirtual	#108; //Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
   29:	aload_0
   30:	iconst_0
   31:	aaload
   32:	invokevirtual	#117; //Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
   35:	pop
   36:	iconst_1
   37:	istore_2
   38:	iload_2
   39:	aload_0
   40:	arraylength
   41:	if_icmpge	63
   44:	aload_1
   45:	ldc	#110; //String , 
   47:	invokevirtual	#111; //Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
   50:	aload_0
   51:	iload_2
   52:	aaload
   53:	invokevirtual	#117; //Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
   56:	pop
   57:	iinc	2, 1
   60:	goto	38
   63:	aload_1
   64:	bipush	93
   66:	invokevirtual	#108; //Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
   69:	pop
   70:	aload_1
   71:	invokevirtual	#112; //Method java/lang/StringBuffer.toString:()Ljava/lang/String;
   74:	areturn

public static java.lang.String deepToString(java.lang.Object[]);
  Code:
   Stack=4, Locals=2, Args_size=1
   0:	aload_0
   1:	ifnonnull	7
   4:	ldc	#104; //String null
   6:	areturn
   7:	new	#106; //class java/lang/StringBuffer
   10:	dup
   11:	invokespecial	#107; //Method java/lang/StringBuffer."<init>":()V
   14:	astore_1
   15:	aload_0
   16:	aload_1
   17:	new	#118; //class java/util/ArrayList
   20:	dup
   21:	invokespecial	#119; //Method java/util/ArrayList."<init>":()V
   24:	invokestatic	#120; //Method deepToString:([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/util/List;)V
   27:	aload_1
   28:	invokevirtual	#112; //Method java/lang/StringBuffer.toString:()Ljava/lang/String;
   31:	areturn

}

