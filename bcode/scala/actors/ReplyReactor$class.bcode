Compiled from "ReplyReactor.scala"
public abstract class scala.actors.ReplyReactor$class extends java.lang.Object
  SourceFile: "ReplyReactor.scala"
  Scala: length = 0x
   
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	ReplyReactor.scala;
const #3 = Asciz	$init$;
const #4 = Asciz	(Lscala/actors/ReplyReactor;)V;
const #5 = Asciz	Code;
const #6 = Asciz	LineNumberTable;
const #7 = Asciz	scala/collection/immutable/Nil$;
const #8 = class	#7;	//  scala/collection/immutable/Nil$
const #9 = Asciz	MODULE$;
const #10 = Asciz	Lscala/collection/immutable/Nil$;;
const #11 = NameAndType	#9:#10;//  MODULE$:Lscala/collection/immutable/Nil$;
const #12 = Field	#8.#11;	//  scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
const #13 = Asciz	scala/actors/ReplyReactor;
const #14 = class	#13;	//  scala/actors/ReplyReactor
const #15 = Asciz	senders_$eq;
const #16 = Asciz	(Lscala/collection/immutable/List;)V;
const #17 = NameAndType	#15:#16;//  senders_$eq:(Lscala/collection/immutable/List;)V
const #18 = InterfaceMethod	#14.#17;	//  scala/actors/ReplyReactor.senders_$eq:(Lscala/collection/immutable/List;)V
const #19 = Asciz	$this;
const #20 = Asciz	Lscala/actors/ReplyReactor;;
const #21 = Asciz	LocalVariableTable;
const #22 = Asciz	resumeReceiver;
const #23 = Asciz	(Lscala/actors/ReplyReactor;Lscala/Tuple2;Z)V;
const #24 = Asciz	scala/collection/immutable/List$;
const #25 = class	#24;	//  scala/collection/immutable/List$
const #26 = Asciz	Lscala/collection/immutable/List$;;
const #27 = NameAndType	#9:#26;//  MODULE$:Lscala/collection/immutable/List$;
const #28 = Field	#25.#27;	//  scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
const #29 = Asciz	scala/runtime/ScalaRunTime$;
const #30 = class	#29;	//  scala/runtime/ScalaRunTime$
const #31 = Asciz	Lscala/runtime/ScalaRunTime$;;
const #32 = NameAndType	#9:#31;//  MODULE$:Lscala/runtime/ScalaRunTime$;
const #33 = Field	#30.#32;	//  scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
const #34 = Asciz	scala/actors/OutputChannel;
const #35 = class	#34;	//  scala/actors/OutputChannel
const #36 = Asciz	scala/Tuple2;
const #37 = class	#36;	//  scala/Tuple2
const #38 = Asciz	_2;
const #39 = Asciz	()Ljava/lang/Object;;
const #40 = NameAndType	#38:#39;//  _2:()Ljava/lang/Object;
const #41 = Method	#37.#40;	//  scala/Tuple2._2:()Ljava/lang/Object;
const #42 = Asciz	boxArray;
const #43 = Asciz	(Ljava/lang/Object;)Lscala/runtime/BoxedArray;;
const #44 = NameAndType	#42:#43;//  boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
const #45 = Method	#30.#44;	//  scala/runtime/ScalaRunTime$.boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
const #46 = Asciz	apply;
const #47 = Asciz	(Lscala/collection/Sequence;)Lscala/collection/immutable/List;;
const #48 = NameAndType	#46:#47;//  apply:(Lscala/collection/Sequence;)Lscala/collection/immutable/List;
const #49 = Method	#25.#48;	//  scala/collection/immutable/List$.apply:(Lscala/collection/Sequence;)Lscala/collection/immutable/List;
const #50 = Asciz	scala/actors/Reactor;
const #51 = class	#50;	//  scala/actors/Reactor
const #52 = Asciz	continuation;
const #53 = Asciz	()Lscala/PartialFunction;;
const #54 = NameAndType	#52:#53;//  continuation:()Lscala/PartialFunction;
const #55 = InterfaceMethod	#51.#54;	//  scala/actors/Reactor.continuation:()Lscala/PartialFunction;
const #56 = Asciz	_1;
const #57 = NameAndType	#56:#39;//  _1:()Ljava/lang/Object;
const #58 = Method	#37.#57;	//  scala/Tuple2._1:()Ljava/lang/Object;
const #59 = Asciz	scala/Function1;
const #60 = class	#59;	//  scala/Function1
const #61 = Asciz	(Ljava/lang/Object;)Ljava/lang/Object;;
const #62 = NameAndType	#46:#61;//  apply:(Ljava/lang/Object;)Ljava/lang/Object;
const #63 = InterfaceMethod	#60.#62;	//  scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
const #64 = Asciz	scheduleActor;
const #65 = Asciz	(Lscala/PartialFunction;Ljava/lang/Object;)V;
const #66 = NameAndType	#64:#65;//  scheduleActor:(Lscala/PartialFunction;Ljava/lang/Object;)V
const #67 = InterfaceMethod	#51.#66;	//  scala/actors/Reactor.scheduleActor:(Lscala/PartialFunction;Ljava/lang/Object;)V
const #68 = Asciz	item;
const #69 = Asciz	Lscala/Tuple2;;
const #70 = Asciz	onSameThread;
const #71 = Asciz	Z;
const #72 = Asciz	forward;
const #73 = Asciz	(Lscala/actors/ReplyReactor;Ljava/lang/Object;)V;
const #74 = Asciz	scala/actors/Actor$;
const #75 = class	#74;	//  scala/actors/Actor$
const #76 = Asciz	Lscala/actors/Actor$;;
const #77 = NameAndType	#9:#76;//  MODULE$:Lscala/actors/Actor$;
const #78 = Field	#75.#77;	//  scala/actors/Actor$.MODULE$:Lscala/actors/Actor$;
const #79 = Asciz	sender;
const #80 = Asciz	()Lscala/actors/OutputChannel;;
const #81 = NameAndType	#79:#80;//  sender:()Lscala/actors/OutputChannel;
const #82 = Method	#75.#81;	//  scala/actors/Actor$.sender:()Lscala/actors/OutputChannel;
const #83 = Asciz	send;
const #84 = Asciz	(Ljava/lang/Object;Lscala/actors/OutputChannel;)V;
const #85 = NameAndType	#83:#84;//  send:(Ljava/lang/Object;Lscala/actors/OutputChannel;)V
const #86 = InterfaceMethod	#51.#85;	//  scala/actors/Reactor.send:(Ljava/lang/Object;Lscala/actors/OutputChannel;)V
const #87 = Asciz	msg;
const #88 = Asciz	Ljava/lang/Object;;
const #89 = Asciz	$bang;
const #90 = Asciz	scheduler;
const #91 = Asciz	()Lscala/actors/IScheduler;;
const #92 = NameAndType	#90:#91;//  scheduler:()Lscala/actors/IScheduler;
const #93 = InterfaceMethod	#51.#92;	//  scala/actors/Reactor.scheduler:()Lscala/actors/IScheduler;
const #94 = Asciz	rawSelf;
const #95 = Asciz	(Lscala/actors/IScheduler;)Lscala/actors/Reactor;;
const #96 = NameAndType	#94:#95;//  rawSelf:(Lscala/actors/IScheduler;)Lscala/actors/Reactor;
const #97 = Method	#75.#96;	//  scala/actors/Actor$.rawSelf:(Lscala/actors/IScheduler;)Lscala/actors/Reactor;
const #98 = Asciz	reply;
const #99 = InterfaceMethod	#14.#81;	//  scala/actors/ReplyReactor.sender:()Lscala/actors/OutputChannel;
const #100 = Asciz	(Ljava/lang/Object;)V;
const #101 = NameAndType	#89:#100;//  $bang:(Ljava/lang/Object;)V
const #102 = InterfaceMethod	#35.#101;	//  scala/actors/OutputChannel.$bang:(Ljava/lang/Object;)V
const #103 = Asciz	(Lscala/actors/ReplyReactor;)Lscala/actors/OutputChannel;;
const #104 = Asciz	senders;
const #105 = Asciz	()Lscala/collection/immutable/List;;
const #106 = NameAndType	#104:#105;//  senders:()Lscala/collection/immutable/List;
const #107 = InterfaceMethod	#14.#106;	//  scala/actors/ReplyReactor.senders:()Lscala/collection/immutable/List;
const #108 = Asciz	scala/collection/generic/IterableTemplate;
const #109 = class	#108;	//  scala/collection/generic/IterableTemplate
const #110 = Asciz	head;
const #111 = NameAndType	#110:#39;//  head:()Ljava/lang/Object;
const #112 = InterfaceMethod	#109.#111;	//  scala/collection/generic/IterableTemplate.head:()Ljava/lang/Object;
const #113 = Asciz	Scala;
const #114 = Asciz	scala/actors/ReplyReactor$class;
const #115 = class	#114;	//  scala/actors/ReplyReactor$class
const #116 = Asciz	java/lang/Object;
const #117 = class	#116;	//  java/lang/Object

{
public static void $init$(scala.actors.ReplyReactor);
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	getstatic	#12; //Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
   4:	invokeinterface	#18,  2; //InterfaceMethod scala/actors/ReplyReactor.senders_$eq:(Lscala/collection/immutable/List;)V
   9:	return
  LineNumberTable: 
   line 27: 0
   line 28: 1
   line 27: 4

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    $this       Lscala/actors/ReplyReactor;


public static void resumeReceiver(scala.actors.ReplyReactor, scala.Tuple2, boolean);
  Code:
   Stack=7, Locals=3, Args_size=3
   0:	aload_0
   1:	getstatic	#28; //Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
   4:	getstatic	#33; //Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   7:	iconst_1
   8:	anewarray	#35; //class scala/actors/OutputChannel
   11:	dup
   12:	iconst_0
   13:	aload_1
   14:	invokevirtual	#41; //Method scala/Tuple2._2:()Ljava/lang/Object;
   17:	checkcast	#35; //class scala/actors/OutputChannel
   20:	aastore
   21:	invokevirtual	#45; //Method scala/runtime/ScalaRunTime$.boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
   24:	invokevirtual	#49; //Method scala/collection/immutable/List$.apply:(Lscala/collection/Sequence;)Lscala/collection/immutable/List;
   27:	invokeinterface	#18,  2; //InterfaceMethod scala/actors/ReplyReactor.senders_$eq:(Lscala/collection/immutable/List;)V
   32:	iload_2
   33:	ifeq	55
   36:	aload_0
   37:	invokeinterface	#55,  1; //InterfaceMethod scala/actors/Reactor.continuation:()Lscala/PartialFunction;
   42:	aload_1
   43:	invokevirtual	#58; //Method scala/Tuple2._1:()Ljava/lang/Object;
   46:	invokeinterface	#63,  2; //InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
   51:	pop
   52:	goto	68
   55:	aload_0
   56:	aconst_null
   57:	pop
   58:	aconst_null
   59:	aload_1
   60:	invokevirtual	#58; //Method scala/Tuple2._1:()Ljava/lang/Object;
   63:	invokeinterface	#67,  3; //InterfaceMethod scala/actors/Reactor.scheduleActor:(Lscala/PartialFunction;Ljava/lang/Object;)V
   68:	return
  LineNumberTable: 
   line 55: 0
   line 57: 32
   line 58: 36
   line 60: 55
   line 54: 68

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      69      0    $this       Lscala/actors/ReplyReactor;
   0      69      1    item       Lscala/Tuple2;
   0      69      2    onSameThread       Z


public static void forward(scala.actors.ReplyReactor, java.lang.Object);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	getstatic	#78; //Field scala/actors/Actor$.MODULE$:Lscala/actors/Actor$;
   5:	invokevirtual	#82; //Method scala/actors/Actor$.sender:()Lscala/actors/OutputChannel;
   8:	invokeinterface	#86,  3; //InterfaceMethod scala/actors/Reactor.send:(Ljava/lang/Object;Lscala/actors/OutputChannel;)V
   13:	return
  LineNumberTable: 
   line 51: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      14      0    $this       Lscala/actors/ReplyReactor;
   0      14      1    msg       Ljava/lang/Object;


public static void $bang(scala.actors.ReplyReactor, java.lang.Object);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	getstatic	#78; //Field scala/actors/Actor$.MODULE$:Lscala/actors/Actor$;
   5:	aload_0
   6:	invokeinterface	#93,  1; //InterfaceMethod scala/actors/Reactor.scheduler:()Lscala/actors/IScheduler;
   11:	invokevirtual	#97; //Method scala/actors/Actor$.rawSelf:(Lscala/actors/IScheduler;)Lscala/actors/Reactor;
   14:	invokeinterface	#86,  3; //InterfaceMethod scala/actors/Reactor.send:(Ljava/lang/Object;Lscala/actors/OutputChannel;)V
   19:	return
  LineNumberTable: 
   line 44: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      20      0    $this       Lscala/actors/ReplyReactor;
   0      20      1    msg       Ljava/lang/Object;


public static void reply(scala.actors.ReplyReactor, java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	invokeinterface	#99,  1; //InterfaceMethod scala/actors/ReplyReactor.sender:()Lscala/actors/OutputChannel;
   6:	aload_1
   7:	invokeinterface	#102,  2; //InterfaceMethod scala/actors/OutputChannel.$bang:(Ljava/lang/Object;)V
   12:	return
  LineNumberTable: 
   line 37: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      13      0    $this       Lscala/actors/ReplyReactor;
   0      13      1    msg       Ljava/lang/Object;


public static scala.actors.OutputChannel sender(scala.actors.ReplyReactor);
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokeinterface	#107,  1; //InterfaceMethod scala/actors/ReplyReactor.senders:()Lscala/collection/immutable/List;
   6:	invokeinterface	#112,  1; //InterfaceMethod scala/collection/generic/IterableTemplate.head:()Ljava/lang/Object;
   11:	checkcast	#35; //class scala/actors/OutputChannel
   14:	areturn
  LineNumberTable: 
   line 31: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      15      0    $this       Lscala/actors/ReplyReactor;


}

