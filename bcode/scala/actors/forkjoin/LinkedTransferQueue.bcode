public class scala.actors.forkjoin.LinkedTransferQueue extends java.util.AbstractQueue implements scala.actors.forkjoin.TransferQueue,java.io.Serializable
  Signature: length = 0x2
   00 FFFFFFCA 
  InnerClass: 
   #97= #50 of #80; //Itr=class scala/actors/forkjoin/LinkedTransferQueue$Itr of class scala/actors/forkjoin/LinkedTransferQueue
   final #99= #34 of #80; //PaddedAtomicReference=class scala/actors/forkjoin/LinkedTransferQueue$PaddedAtomicReference of class scala/actors/forkjoin/LinkedTransferQueue
   final #100= #9 of #80; //QNode=class scala/actors/forkjoin/LinkedTransferQueue$QNode of class scala/actors/forkjoin/LinkedTransferQueue
   #70; //class scala/actors/forkjoin/LinkedTransferQueue$1
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Method	#80.#203;	//  scala/actors/forkjoin/LinkedTransferQueue.getUnsafePrivileged:()Lsun/misc/Unsafe;
const #2 = Method	#80.#204;	//  scala/actors/forkjoin/LinkedTransferQueue.clean:(Lscala/actors/forkjoin/LinkedTransferQueue$QNode;Lscala/actors/forkjoin/LinkedTransferQueue$QNode;)V
const #3 = Method	#80.#205;	//  scala/actors/forkjoin/LinkedTransferQueue.traversalHead:()Lscala/actors/forkjoin/LinkedTransferQueue$QNode;
const #4 = Field	#80.#206;	//  scala/actors/forkjoin/LinkedTransferQueue.head:Lscala/actors/forkjoin/LinkedTransferQueue$PaddedAtomicReference;
const #5 = Method	#34.#207;	//  scala/actors/forkjoin/LinkedTransferQueue$PaddedAtomicReference.get:()Ljava/lang/Object;
const #6 = Method	#34.#208;	//  scala/actors/forkjoin/LinkedTransferQueue$PaddedAtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
const #7 = Method	#9.#209;	//  scala/actors/forkjoin/LinkedTransferQueue$QNode.clearNext:()V
const #8 = Field	#80.#210;	//  scala/actors/forkjoin/LinkedTransferQueue.tail:Lscala/actors/forkjoin/LinkedTransferQueue$PaddedAtomicReference;
const #9 = class	#211;	//  scala/actors/forkjoin/LinkedTransferQueue$QNode
const #10 = Field	#9.#212;	//  scala/actors/forkjoin/LinkedTransferQueue$QNode.isData:Z
const #11 = Method	#9.#213;	//  scala/actors/forkjoin/LinkedTransferQueue$QNode."<init>":(Ljava/lang/Object;Z)V
const #12 = Field	#9.#214;	//  scala/actors/forkjoin/LinkedTransferQueue$QNode.next:Lscala/actors/forkjoin/LinkedTransferQueue$QNode;
const #13 = Method	#9.#215;	//  scala/actors/forkjoin/LinkedTransferQueue$QNode.casNext:(Lscala/actors/forkjoin/LinkedTransferQueue$QNode;Lscala/actors/forkjoin/LinkedTransferQueue$QNode;)Z
const #14 = Method	#80.#216;	//  scala/actors/forkjoin/LinkedTransferQueue.awaitFulfill:(Lscala/actors/forkjoin/LinkedTransferQueue$QNode;Lscala/actors/forkjoin/LinkedTransferQueue$QNode;Ljava/lang/Object;IJ)Ljava/lang/Object;
const #15 = Method	#80.#217;	//  scala/actors/forkjoin/LinkedTransferQueue.advanceHead:(Lscala/actors/forkjoin/LinkedTransferQueue$QNode;Lscala/actors/forkjoin/LinkedTransferQueue$QNode;)Z
const #16 = Method	#9.#207;	//  scala/actors/forkjoin/LinkedTransferQueue$QNode.get:()Ljava/lang/Object;
const #17 = Method	#9.#208;	//  scala/actors/forkjoin/LinkedTransferQueue$QNode.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
const #18 = Field	#9.#218;	//  scala/actors/forkjoin/LinkedTransferQueue$QNode.waiter:Ljava/lang/Thread;
const #19 = Method	#219.#220;	//  java/util/concurrent/locks/LockSupport.unpark:(Ljava/lang/Thread;)V
const #20 = Method	#221.#222;	//  java/lang/System.nanoTime:()J
const #21 = Method	#223.#224;	//  java/lang/Thread.currentThread:()Ljava/lang/Thread;
const #22 = Method	#223.#225;	//  java/lang/Thread.isInterrupted:()Z
const #23 = Method	#9.#226;	//  scala/actors/forkjoin/LinkedTransferQueue$QNode.set:(Ljava/lang/Object;)V
const #24 = Field	#80.#227;	//  scala/actors/forkjoin/LinkedTransferQueue.maxTimedSpins:I
const #25 = Field	#80.#228;	//  scala/actors/forkjoin/LinkedTransferQueue.maxUntimedSpins:I
const #26 = Method	#219.#229;	//  java/util/concurrent/locks/LockSupport.park:()V
const #27 = long	1000l;
const #29 = Method	#219.#230;	//  java/util/concurrent/locks/LockSupport.parkNanos:(J)V
const #30 = Method	#80.#231;	//  scala/actors/forkjoin/LinkedTransferQueue.reclean:()Lscala/actors/forkjoin/LinkedTransferQueue$QNode;
const #31 = Method	#80.#232;	//  scala/actors/forkjoin/LinkedTransferQueue.getValidatedTail:()Lscala/actors/forkjoin/LinkedTransferQueue$QNode;
const #32 = Field	#80.#233;	//  scala/actors/forkjoin/LinkedTransferQueue.cleanMe:Lscala/actors/forkjoin/LinkedTransferQueue$PaddedAtomicReference;
const #33 = Method	#94.#234;	//  java/util/AbstractQueue."<init>":()V
const #34 = class	#235;	//  scala/actors/forkjoin/LinkedTransferQueue$PaddedAtomicReference
const #35 = Method	#34.#236;	//  scala/actors/forkjoin/LinkedTransferQueue$PaddedAtomicReference."<init>":(Ljava/lang/Object;)V
const #36 = Method	#80.#234;	//  scala/actors/forkjoin/LinkedTransferQueue."<init>":()V
const #37 = Method	#80.#237;	//  scala/actors/forkjoin/LinkedTransferQueue.addAll:(Ljava/util/Collection;)Z
const #38 = class	#238;	//  java/lang/NullPointerException
const #39 = Method	#38.#234;	//  java/lang/NullPointerException."<init>":()V
const #40 = Method	#223.#239;	//  java/lang/Thread.interrupted:()Z
const #41 = class	#240;	//  java/lang/InterruptedException
const #42 = Method	#41.#234;	//  java/lang/InterruptedException."<init>":()V
const #43 = Method	#80.#241;	//  scala/actors/forkjoin/LinkedTransferQueue.xfer:(Ljava/lang/Object;IJ)Ljava/lang/Object;
const #44 = Method	#242.#243;	//  java/util/concurrent/TimeUnit.toNanos:(J)J
const #45 = Method	#80.#244;	//  scala/actors/forkjoin/LinkedTransferQueue.fulfill:(Ljava/lang/Object;)Ljava/lang/Object;
const #46 = class	#245;	//  java/lang/IllegalArgumentException
const #47 = Method	#46.#234;	//  java/lang/IllegalArgumentException."<init>":()V
const #48 = Method	#80.#246;	//  scala/actors/forkjoin/LinkedTransferQueue.poll:()Ljava/lang/Object;
const #49 = InterfaceMethod	#247.#248;	//  java/util/Collection.add:(Ljava/lang/Object;)Z
const #50 = class	#249;	//  scala/actors/forkjoin/LinkedTransferQueue$Itr
const #51 = Method	#50.#250;	//  scala/actors/forkjoin/LinkedTransferQueue$Itr."<init>":(Lscala/actors/forkjoin/LinkedTransferQueue;)V
const #52 = int	2147483647;
const #53 = Method	#251.#252;	//  java/lang/Object.equals:(Ljava/lang/Object;)Z
const #54 = Method	#253.#254;	//  java/io/ObjectOutputStream.defaultWriteObject:()V
const #55 = Method	#80.#255;	//  scala/actors/forkjoin/LinkedTransferQueue.iterator:()Ljava/util/Iterator;
const #56 = InterfaceMethod	#256.#257;	//  java/util/Iterator.hasNext:()Z
const #57 = InterfaceMethod	#256.#258;	//  java/util/Iterator.next:()Ljava/lang/Object;
const #58 = Method	#253.#259;	//  java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
const #59 = Method	#260.#261;	//  java/io/ObjectInputStream.defaultReadObject:()V
const #60 = Method	#80.#262;	//  scala/actors/forkjoin/LinkedTransferQueue.resetHeadAndTail:()V
const #61 = Method	#260.#263;	//  java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
const #62 = Method	#80.#264;	//  scala/actors/forkjoin/LinkedTransferQueue.offer:(Ljava/lang/Object;)Z
const #63 = Field	#80.#265;	//  scala/actors/forkjoin/LinkedTransferQueue._unsafe:Lsun/misc/Unsafe;
const #64 = Field	#80.#266;	//  scala/actors/forkjoin/LinkedTransferQueue.headOffset:J
const #65 = Method	#73.#267;	//  sun/misc/Unsafe.putObjectVolatile:(Ljava/lang/Object;JLjava/lang/Object;)V
const #66 = Field	#80.#268;	//  scala/actors/forkjoin/LinkedTransferQueue.tailOffset:J
const #67 = Field	#80.#269;	//  scala/actors/forkjoin/LinkedTransferQueue.cleanMeOffset:J
const #68 = Method	#73.#270;	//  sun/misc/Unsafe.getUnsafe:()Lsun/misc/Unsafe;
const #69 = class	#271;	//  java/lang/SecurityException
const #70 = class	#272;	//  scala/actors/forkjoin/LinkedTransferQueue$1
const #71 = Method	#70.#234;	//  scala/actors/forkjoin/LinkedTransferQueue$1."<init>":()V
const #72 = Method	#274.#275;	//  java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;
const #73 = class	#276;	//  sun/misc/Unsafe
const #74 = class	#277;	//  java/security/PrivilegedActionException
const #75 = Method	#74.#278;	//  java/security/PrivilegedActionException.getCause:()Ljava/lang/Throwable;
const #76 = String	#279;	//  theUnsafe
const #77 = Method	#280.#281;	//  java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
const #78 = Method	#282.#283;	//  java/lang/reflect/Field.setAccessible:(Z)V
const #79 = Method	#282.#284;	//  java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
const #80 = class	#285;	//  scala/actors/forkjoin/LinkedTransferQueue
const #81 = Method	#73.#286;	//  sun/misc/Unsafe.objectFieldOffset:(Ljava/lang/reflect/Field;)J
const #82 = Method	#287.#288;	//  java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
const #83 = Method	#287.#289;	//  java/lang/Runtime.availableProcessors:()I
const #84 = Field	#80.#290;	//  scala/actors/forkjoin/LinkedTransferQueue.NCPUS:I
const #85 = Method	#80.#270;	//  scala/actors/forkjoin/LinkedTransferQueue.getUnsafe:()Lsun/misc/Unsafe;
const #86 = String	#117;	//  head
const #87 = Method	#80.#291;	//  scala/actors/forkjoin/LinkedTransferQueue.fieldOffset:(Ljava/lang/String;)J
const #88 = String	#121;	//  tail
const #89 = String	#122;	//  cleanMe
const #90 = class	#292;	//  java/lang/Throwable
const #91 = class	#293;	//  java/lang/RuntimeException
const #92 = String	#294;	//  Could not initialize intrinsics
const #93 = Method	#91.#295;	//  java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
const #94 = class	#296;	//  java/util/AbstractQueue
const #95 = class	#297;	//  scala/actors/forkjoin/TransferQueue
const #96 = class	#298;	//  java/io/Serializable
const #97 = Asciz	Itr;
const #98 = Asciz	InnerClasses;
const #99 = Asciz	PaddedAtomicReference;
const #100 = Asciz	QNode;
const #101 = Asciz	serialVersionUID;
const #102 = Asciz	J;
const #103 = Asciz	ConstantValue;
const #104 = long	-3223113410248163686l;
const #106 = Asciz	NOWAIT;
const #107 = Asciz	I;
const #108 = int	0;
const #109 = Asciz	TIMEOUT;
const #110 = int	1;
const #111 = Asciz	WAIT;
const #112 = int	2;
const #113 = Asciz	NCPUS;
const #114 = Asciz	maxTimedSpins;
const #115 = Asciz	maxUntimedSpins;
const #116 = Asciz	spinForTimeoutThreshold;
const #117 = Asciz	head;
const #118 = Asciz	Lscala/actors/forkjoin/LinkedTransferQueue$PaddedAtomicReference;;
const #119 = Asciz	Signature;
const #120 = Asciz	Lscala/actors/forkjoin/LinkedTransferQueue$PaddedAtomicReference<Lscala/actors/forkjoin/LinkedTransferQueue$QNode;>;;
const #121 = Asciz	tail;
const #122 = Asciz	cleanMe;
const #123 = Asciz	_unsafe;
const #124 = Asciz	Lsun/misc/Unsafe;;
const #125 = Asciz	headOffset;
const #126 = Asciz	tailOffset;
const #127 = Asciz	cleanMeOffset;
const #128 = Asciz	advanceHead;
const #129 = Asciz	(Lscala/actors/forkjoin/LinkedTransferQueue$QNode;Lscala/actors/forkjoin/LinkedTransferQueue$QNode;)Z;
const #130 = Asciz	Code;
const #131 = Asciz	xfer;
const #132 = Asciz	(Ljava/lang/Object;IJ)Ljava/lang/Object;;
const #133 = Asciz	fulfill;
const #134 = Asciz	(Ljava/lang/Object;)Ljava/lang/Object;;
const #135 = Asciz	awaitFulfill;
const #136 = Asciz	(Lscala/actors/forkjoin/LinkedTransferQueue$QNode;Lscala/actors/forkjoin/LinkedTransferQueue$QNode;Ljava/lang/Object;IJ)Ljava/lang/Object;;
const #137 = Asciz	getValidatedTail;
const #138 = Asciz	()Lscala/actors/forkjoin/LinkedTransferQueue$QNode;;
const #139 = Asciz	clean;
const #140 = Asciz	(Lscala/actors/forkjoin/LinkedTransferQueue$QNode;Lscala/actors/forkjoin/LinkedTransferQueue$QNode;)V;
const #141 = Asciz	reclean;
const #142 = Asciz	<init>;
const #143 = Asciz	()V;
const #144 = Asciz	(Ljava/util/Collection;)V;
const #145 = Asciz	(Ljava/util/Collection<+TE;>;)V;
const #146 = Asciz	put;
const #147 = Asciz	(Ljava/lang/Object;)V;
const #148 = Asciz	Exceptions;
const #149 = Asciz	(TE;)V;
const #150 = Asciz	offer;
const #151 = Asciz	(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z;
const #152 = Asciz	(TE;JLjava/util/concurrent/TimeUnit;)Z;
const #153 = Asciz	(Ljava/lang/Object;)Z;
const #154 = Asciz	(TE;)Z;
const #155 = Asciz	add;
const #156 = Asciz	transfer;
const #157 = Asciz	tryTransfer;
const #158 = Asciz	take;
const #159 = Asciz	()Ljava/lang/Object;;
const #160 = Asciz	()TE;;
const #161 = Asciz	poll;
const #162 = Asciz	(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;;
const #163 = Asciz	(JLjava/util/concurrent/TimeUnit;)TE;;
const #164 = Asciz	drainTo;
const #165 = Asciz	(Ljava/util/Collection;)I;
const #166 = Asciz	(Ljava/util/Collection<-TE;>;)I;
const #167 = Asciz	(Ljava/util/Collection;I)I;
const #168 = Asciz	(Ljava/util/Collection<-TE;>;I)I;
const #169 = Asciz	traversalHead;
const #170 = Asciz	iterator;
const #171 = Asciz	()Ljava/util/Iterator;;
const #172 = Asciz	()Ljava/util/Iterator<TE;>;;
const #173 = Asciz	peek;
const #174 = Asciz	isEmpty;
const #175 = Asciz	()Z;
const #176 = Asciz	hasWaitingConsumer;
const #177 = Asciz	size;
const #178 = Asciz	()I;
const #179 = Asciz	getWaitingConsumerCount;
const #180 = Asciz	remainingCapacity;
const #181 = Asciz	remove;
const #182 = Asciz	writeObject;
const #183 = Asciz	(Ljava/io/ObjectOutputStream;)V;
const #184 = class	#299;	//  java/io/IOException
const #185 = Asciz	readObject;
const #186 = Asciz	(Ljava/io/ObjectInputStream;)V;
const #187 = class	#300;	//  java/lang/ClassNotFoundException
const #188 = Asciz	resetHeadAndTail;
const #189 = Asciz	getUnsafe;
const #190 = Asciz	()Lsun/misc/Unsafe;;
const #191 = Asciz	getUnsafePrivileged;
const #192 = class	#301;	//  java/lang/NoSuchFieldException
const #193 = class	#302;	//  java/lang/IllegalAccessException
const #194 = Asciz	fieldOffset;
const #195 = Asciz	(Ljava/lang/String;)J;
const #196 = Asciz	access$000;
const #197 = Asciz	(Lscala/actors/forkjoin/LinkedTransferQueue;)Lscala/actors/forkjoin/LinkedTransferQueue$QNode;;
const #198 = Asciz	access$100;
const #199 = Asciz	(Lscala/actors/forkjoin/LinkedTransferQueue;Lscala/actors/forkjoin/LinkedTransferQueue$QNode;Lscala/actors/forkjoin/LinkedTransferQueue$QNode;)V;
const #200 = Asciz	access$200;
const #201 = Asciz	<clinit>;
const #202 = Asciz	<E:Ljava/lang/Object;>Ljava/util/AbstractQueue<TE;>;Lscala/actors/forkjoin/TransferQueue<TE;>;Ljava/io/Serializable;;
const #203 = NameAndType	#191:#190;//  getUnsafePrivileged:()Lsun/misc/Unsafe;
const #204 = NameAndType	#139:#140;//  clean:(Lscala/actors/forkjoin/LinkedTransferQueue$QNode;Lscala/actors/forkjoin/LinkedTransferQueue$QNode;)V
const #205 = NameAndType	#169:#138;//  traversalHead:()Lscala/actors/forkjoin/LinkedTransferQueue$QNode;
const #206 = NameAndType	#117:#118;//  head:Lscala/actors/forkjoin/LinkedTransferQueue$PaddedAtomicReference;
const #207 = NameAndType	#303:#159;//  get:()Ljava/lang/Object;
const #208 = NameAndType	#304:#305;//  compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
const #209 = NameAndType	#306:#143;//  clearNext:()V
const #210 = NameAndType	#121:#118;//  tail:Lscala/actors/forkjoin/LinkedTransferQueue$PaddedAtomicReference;
const #211 = Asciz	scala/actors/forkjoin/LinkedTransferQueue$QNode;
const #212 = NameAndType	#307:#308;//  isData:Z
const #213 = NameAndType	#142:#309;//  "<init>":(Ljava/lang/Object;Z)V
const #214 = NameAndType	#310:#311;//  next:Lscala/actors/forkjoin/LinkedTransferQueue$QNode;
const #215 = NameAndType	#312:#129;//  casNext:(Lscala/actors/forkjoin/LinkedTransferQueue$QNode;Lscala/actors/forkjoin/LinkedTransferQueue$QNode;)Z
const #216 = NameAndType	#135:#136;//  awaitFulfill:(Lscala/actors/forkjoin/LinkedTransferQueue$QNode;Lscala/actors/forkjoin/LinkedTransferQueue$QNode;Ljava/lang/Object;IJ)Ljava/lang/Object;
const #217 = NameAndType	#128:#129;//  advanceHead:(Lscala/actors/forkjoin/LinkedTransferQueue$QNode;Lscala/actors/forkjoin/LinkedTransferQueue$QNode;)Z
const #218 = NameAndType	#313:#314;//  waiter:Ljava/lang/Thread;
const #219 = class	#315;	//  java/util/concurrent/locks/LockSupport
const #220 = NameAndType	#316:#317;//  unpark:(Ljava/lang/Thread;)V
const #221 = class	#318;	//  java/lang/System
const #222 = NameAndType	#319:#320;//  nanoTime:()J
const #223 = class	#321;	//  java/lang/Thread
const #224 = NameAndType	#322:#323;//  currentThread:()Ljava/lang/Thread;
const #225 = NameAndType	#324:#175;//  isInterrupted:()Z
const #226 = NameAndType	#325:#147;//  set:(Ljava/lang/Object;)V
const #227 = NameAndType	#114:#107;//  maxTimedSpins:I
const #228 = NameAndType	#115:#107;//  maxUntimedSpins:I
const #229 = NameAndType	#326:#143;//  park:()V
const #230 = NameAndType	#327:#328;//  parkNanos:(J)V
const #231 = NameAndType	#141:#138;//  reclean:()Lscala/actors/forkjoin/LinkedTransferQueue$QNode;
const #232 = NameAndType	#137:#138;//  getValidatedTail:()Lscala/actors/forkjoin/LinkedTransferQueue$QNode;
const #233 = NameAndType	#122:#118;//  cleanMe:Lscala/actors/forkjoin/LinkedTransferQueue$PaddedAtomicReference;
const #234 = NameAndType	#142:#143;//  "<init>":()V
const #235 = Asciz	scala/actors/forkjoin/LinkedTransferQueue$PaddedAtomicReference;
const #236 = NameAndType	#142:#147;//  "<init>":(Ljava/lang/Object;)V
const #237 = NameAndType	#329:#330;//  addAll:(Ljava/util/Collection;)Z
const #238 = Asciz	java/lang/NullPointerException;
const #239 = NameAndType	#331:#175;//  interrupted:()Z
const #240 = Asciz	java/lang/InterruptedException;
const #241 = NameAndType	#131:#132;//  xfer:(Ljava/lang/Object;IJ)Ljava/lang/Object;
const #242 = class	#332;	//  java/util/concurrent/TimeUnit
const #243 = NameAndType	#333:#334;//  toNanos:(J)J
const #244 = NameAndType	#133:#134;//  fulfill:(Ljava/lang/Object;)Ljava/lang/Object;
const #245 = Asciz	java/lang/IllegalArgumentException;
const #246 = NameAndType	#161:#159;//  poll:()Ljava/lang/Object;
const #247 = class	#335;	//  java/util/Collection
const #248 = NameAndType	#155:#153;//  add:(Ljava/lang/Object;)Z
const #249 = Asciz	scala/actors/forkjoin/LinkedTransferQueue$Itr;
const #250 = NameAndType	#142:#336;//  "<init>":(Lscala/actors/forkjoin/LinkedTransferQueue;)V
const #251 = class	#337;	//  java/lang/Object
const #252 = NameAndType	#338:#153;//  equals:(Ljava/lang/Object;)Z
const #253 = class	#339;	//  java/io/ObjectOutputStream
const #254 = NameAndType	#340:#143;//  defaultWriteObject:()V
const #255 = NameAndType	#170:#171;//  iterator:()Ljava/util/Iterator;
const #256 = class	#341;	//  java/util/Iterator
const #257 = NameAndType	#342:#175;//  hasNext:()Z
const #258 = NameAndType	#310:#159;//  next:()Ljava/lang/Object;
const #259 = NameAndType	#182:#147;//  writeObject:(Ljava/lang/Object;)V
const #260 = class	#343;	//  java/io/ObjectInputStream
const #261 = NameAndType	#344:#143;//  defaultReadObject:()V
const #262 = NameAndType	#188:#143;//  resetHeadAndTail:()V
const #263 = NameAndType	#185:#159;//  readObject:()Ljava/lang/Object;
const #264 = NameAndType	#150:#153;//  offer:(Ljava/lang/Object;)Z
const #265 = NameAndType	#123:#124;//  _unsafe:Lsun/misc/Unsafe;
const #266 = NameAndType	#125:#102;//  headOffset:J
const #267 = NameAndType	#345:#346;//  putObjectVolatile:(Ljava/lang/Object;JLjava/lang/Object;)V
const #268 = NameAndType	#126:#102;//  tailOffset:J
const #269 = NameAndType	#127:#102;//  cleanMeOffset:J
const #270 = NameAndType	#189:#190;//  getUnsafe:()Lsun/misc/Unsafe;
const #271 = Asciz	java/lang/SecurityException;
const #272 = Asciz	scala/actors/forkjoin/LinkedTransferQueue$1;
const #273 = Asciz	;
const #274 = class	#347;	//  java/security/AccessController
const #275 = NameAndType	#348:#349;//  doPrivileged:(Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;
const #276 = Asciz	sun/misc/Unsafe;
const #277 = Asciz	java/security/PrivilegedActionException;
const #278 = NameAndType	#350:#351;//  getCause:()Ljava/lang/Throwable;
const #279 = Asciz	theUnsafe;
const #280 = class	#352;	//  java/lang/Class
const #281 = NameAndType	#353:#354;//  getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
const #282 = class	#355;	//  java/lang/reflect/Field
const #283 = NameAndType	#356:#357;//  setAccessible:(Z)V
const #284 = NameAndType	#303:#134;//  get:(Ljava/lang/Object;)Ljava/lang/Object;
const #285 = Asciz	scala/actors/forkjoin/LinkedTransferQueue;
const #286 = NameAndType	#358:#359;//  objectFieldOffset:(Ljava/lang/reflect/Field;)J
const #287 = class	#360;	//  java/lang/Runtime
const #288 = NameAndType	#361:#362;//  getRuntime:()Ljava/lang/Runtime;
const #289 = NameAndType	#363:#178;//  availableProcessors:()I
const #290 = NameAndType	#113:#107;//  NCPUS:I
const #291 = NameAndType	#194:#195;//  fieldOffset:(Ljava/lang/String;)J
const #292 = Asciz	java/lang/Throwable;
const #293 = Asciz	java/lang/RuntimeException;
const #294 = Asciz	Could not initialize intrinsics;
const #295 = NameAndType	#142:#364;//  "<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
const #296 = Asciz	java/util/AbstractQueue;
const #297 = Asciz	scala/actors/forkjoin/TransferQueue;
const #298 = Asciz	java/io/Serializable;
const #299 = Asciz	java/io/IOException;
const #300 = Asciz	java/lang/ClassNotFoundException;
const #301 = Asciz	java/lang/NoSuchFieldException;
const #302 = Asciz	java/lang/IllegalAccessException;
const #303 = Asciz	get;
const #304 = Asciz	compareAndSet;
const #305 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)Z;
const #306 = Asciz	clearNext;
const #307 = Asciz	isData;
const #308 = Asciz	Z;
const #309 = Asciz	(Ljava/lang/Object;Z)V;
const #310 = Asciz	next;
const #311 = Asciz	Lscala/actors/forkjoin/LinkedTransferQueue$QNode;;
const #312 = Asciz	casNext;
const #313 = Asciz	waiter;
const #314 = Asciz	Ljava/lang/Thread;;
const #315 = Asciz	java/util/concurrent/locks/LockSupport;
const #316 = Asciz	unpark;
const #317 = Asciz	(Ljava/lang/Thread;)V;
const #318 = Asciz	java/lang/System;
const #319 = Asciz	nanoTime;
const #320 = Asciz	()J;
const #321 = Asciz	java/lang/Thread;
const #322 = Asciz	currentThread;
const #323 = Asciz	()Ljava/lang/Thread;;
const #324 = Asciz	isInterrupted;
const #325 = Asciz	set;
const #326 = Asciz	park;
const #327 = Asciz	parkNanos;
const #328 = Asciz	(J)V;
const #329 = Asciz	addAll;
const #330 = Asciz	(Ljava/util/Collection;)Z;
const #331 = Asciz	interrupted;
const #332 = Asciz	java/util/concurrent/TimeUnit;
const #333 = Asciz	toNanos;
const #334 = Asciz	(J)J;
const #335 = Asciz	java/util/Collection;
const #336 = Asciz	(Lscala/actors/forkjoin/LinkedTransferQueue;)V;
const #337 = Asciz	java/lang/Object;
const #338 = Asciz	equals;
const #339 = Asciz	java/io/ObjectOutputStream;
const #340 = Asciz	defaultWriteObject;
const #341 = Asciz	java/util/Iterator;
const #342 = Asciz	hasNext;
const #343 = Asciz	java/io/ObjectInputStream;
const #344 = Asciz	defaultReadObject;
const #345 = Asciz	putObjectVolatile;
const #346 = Asciz	(Ljava/lang/Object;JLjava/lang/Object;)V;
const #347 = Asciz	java/security/AccessController;
const #348 = Asciz	doPrivileged;
const #349 = Asciz	(Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;;
const #350 = Asciz	getCause;
const #351 = Asciz	()Ljava/lang/Throwable;;
const #352 = Asciz	java/lang/Class;
const #353 = Asciz	getDeclaredField;
const #354 = Asciz	(Ljava/lang/String;)Ljava/lang/reflect/Field;;
const #355 = Asciz	java/lang/reflect/Field;
const #356 = Asciz	setAccessible;
const #357 = Asciz	(Z)V;
const #358 = Asciz	objectFieldOffset;
const #359 = Asciz	(Ljava/lang/reflect/Field;)J;
const #360 = Asciz	java/lang/Runtime;
const #361 = Asciz	getRuntime;
const #362 = Asciz	()Ljava/lang/Runtime;;
const #363 = Asciz	availableProcessors;
const #364 = Asciz	(Ljava/lang/String;Ljava/lang/Throwable;)V;

{
static final int NOWAIT;
  Constant value: int 0
static final int TIMEOUT;
  Constant value: int 1
static final int WAIT;
  Constant value: int 2
static final int NCPUS;

static final int maxTimedSpins;

static final int maxUntimedSpins;

static final long spinForTimeoutThreshold;
  Constant value: long 1000l
public scala.actors.forkjoin.LinkedTransferQueue();
  Code:
   Stack=4, Locals=2, Args_size=1
   0:	aload_0
   1:	invokespecial	#33; //Method java/util/AbstractQueue."<init>":()V
   4:	new	#9; //class scala/actors/forkjoin/LinkedTransferQueue$QNode
   7:	dup
   8:	aconst_null
   9:	iconst_0
   10:	invokespecial	#11; //Method scala/actors/forkjoin/LinkedTransferQueue$QNode."<init>":(Ljava/lang/Object;Z)V
   13:	astore_1
   14:	aload_0
   15:	new	#34; //class scala/actors/forkjoin/LinkedTransferQueue$PaddedAtomicReference
   18:	dup
   19:	aload_1
   20:	invokespecial	#35; //Method scala/actors/forkjoin/LinkedTransferQueue$PaddedAtomicReference."<init>":(Ljava/lang/Object;)V
   23:	putfield	#4; //Field head:Lscala/actors/forkjoin/LinkedTransferQueue$PaddedAtomicReference;
   26:	aload_0
   27:	new	#34; //class scala/actors/forkjoin/LinkedTransferQueue$PaddedAtomicReference
   30:	dup
   31:	aload_1
   32:	invokespecial	#35; //Method scala/actors/forkjoin/LinkedTransferQueue$PaddedAtomicReference."<init>":(Ljava/lang/Object;)V
   35:	putfield	#8; //Field tail:Lscala/actors/forkjoin/LinkedTransferQueue$PaddedAtomicReference;
   38:	aload_0
   39:	new	#34; //class scala/actors/forkjoin/LinkedTransferQueue$PaddedAtomicReference
   42:	dup
   43:	aconst_null
   44:	invokespecial	#35; //Method scala/actors/forkjoin/LinkedTransferQueue$PaddedAtomicReference."<init>":(Ljava/lang/Object;)V
   47:	putfield	#32; //Field cleanMe:Lscala/actors/forkjoin/LinkedTransferQueue$PaddedAtomicReference;
   50:	return

public scala.actors.forkjoin.LinkedTransferQueue(java.util.Collection);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	invokespecial	#36; //Method "<init>":()V
   4:	aload_0
   5:	aload_1
   6:	invokevirtual	#37; //Method addAll:(Ljava/util/Collection;)Z
   9:	pop
   10:	return
  Signature: length = 0x2
   00 FFFFFF91 

public void put(java.lang.Object)   throws java.lang.InterruptedException;
  Code:
   Stack=5, Locals=2, Args_size=2
   0:	aload_1
   1:	ifnonnull	12
   4:	new	#38; //class java/lang/NullPointerException
   7:	dup
   8:	invokespecial	#39; //Method java/lang/NullPointerException."<init>":()V
   11:	athrow
   12:	invokestatic	#40; //Method java/lang/Thread.interrupted:()Z
   15:	ifeq	26
   18:	new	#41; //class java/lang/InterruptedException
   21:	dup
   22:	invokespecial	#42; //Method java/lang/InterruptedException."<init>":()V
   25:	athrow
   26:	aload_0
   27:	aload_1
   28:	iconst_0
   29:	lconst_0
   30:	invokespecial	#43; //Method xfer:(Ljava/lang/Object;IJ)Ljava/lang/Object;
   33:	pop
   34:	return
  Exceptions: 
   throws java.lang.InterruptedException  Signature: length = 0x2
   00 FFFFFF95 

public boolean offer(java.lang.Object, long, java.util.concurrent.TimeUnit)   throws java.lang.InterruptedException;
  Code:
   Stack=5, Locals=5, Args_size=4
   0:	aload_1
   1:	ifnonnull	12
   4:	new	#38; //class java/lang/NullPointerException
   7:	dup
   8:	invokespecial	#39; //Method java/lang/NullPointerException."<init>":()V
   11:	athrow
   12:	invokestatic	#40; //Method java/lang/Thread.interrupted:()Z
   15:	ifeq	26
   18:	new	#41; //class java/lang/InterruptedException
   21:	dup
   22:	invokespecial	#42; //Method java/lang/InterruptedException."<init>":()V
   25:	athrow
   26:	aload_0
   27:	aload_1
   28:	iconst_0
   29:	lconst_0
   30:	invokespecial	#43; //Method xfer:(Ljava/lang/Object;IJ)Ljava/lang/Object;
   33:	pop
   34:	iconst_1
   35:	ireturn
  Exceptions: 
   throws java.lang.InterruptedException  Signature: length = 0x2
   00 FFFFFF98 

public boolean offer(java.lang.Object);
  Code:
   Stack=5, Locals=2, Args_size=2
   0:	aload_1
   1:	ifnonnull	12
   4:	new	#38; //class java/lang/NullPointerException
   7:	dup
   8:	invokespecial	#39; //Method java/lang/NullPointerException."<init>":()V
   11:	athrow
   12:	aload_0
   13:	aload_1
   14:	iconst_0
   15:	lconst_0
   16:	invokespecial	#43; //Method xfer:(Ljava/lang/Object;IJ)Ljava/lang/Object;
   19:	pop
   20:	iconst_1
   21:	ireturn
  Signature: length = 0x2
   00 FFFFFF9A 

public boolean add(java.lang.Object);
  Code:
   Stack=5, Locals=2, Args_size=2
   0:	aload_1
   1:	ifnonnull	12
   4:	new	#38; //class java/lang/NullPointerException
   7:	dup
   8:	invokespecial	#39; //Method java/lang/NullPointerException."<init>":()V
   11:	athrow
   12:	aload_0
   13:	aload_1
   14:	iconst_0
   15:	lconst_0
   16:	invokespecial	#43; //Method xfer:(Ljava/lang/Object;IJ)Ljava/lang/Object;
   19:	pop
   20:	iconst_1
   21:	ireturn
  Signature: length = 0x2
   00 FFFFFF9A 

public void transfer(java.lang.Object)   throws java.lang.InterruptedException;
  Code:
   Stack=5, Locals=2, Args_size=2
   0:	aload_1
   1:	ifnonnull	12
   4:	new	#38; //class java/lang/NullPointerException
   7:	dup
   8:	invokespecial	#39; //Method java/lang/NullPointerException."<init>":()V
   11:	athrow
   12:	aload_0
   13:	aload_1
   14:	iconst_2
   15:	lconst_0
   16:	invokespecial	#43; //Method xfer:(Ljava/lang/Object;IJ)Ljava/lang/Object;
   19:	ifnonnull	34
   22:	invokestatic	#40; //Method java/lang/Thread.interrupted:()Z
   25:	pop
   26:	new	#41; //class java/lang/InterruptedException
   29:	dup
   30:	invokespecial	#42; //Method java/lang/InterruptedException."<init>":()V
   33:	athrow
   34:	return
  Exceptions: 
   throws java.lang.InterruptedException  Signature: length = 0x2
   00 FFFFFF95 

public boolean tryTransfer(java.lang.Object, long, java.util.concurrent.TimeUnit)   throws java.lang.InterruptedException;
  Code:
   Stack=6, Locals=5, Args_size=4
   0:	aload_1
   1:	ifnonnull	12
   4:	new	#38; //class java/lang/NullPointerException
   7:	dup
   8:	invokespecial	#39; //Method java/lang/NullPointerException."<init>":()V
   11:	athrow
   12:	aload_0
   13:	aload_1
   14:	iconst_1
   15:	aload	4
   17:	lload_2
   18:	invokevirtual	#44; //Method java/util/concurrent/TimeUnit.toNanos:(J)J
   21:	invokespecial	#43; //Method xfer:(Ljava/lang/Object;IJ)Ljava/lang/Object;
   24:	ifnull	29
   27:	iconst_1
   28:	ireturn
   29:	invokestatic	#40; //Method java/lang/Thread.interrupted:()Z
   32:	ifne	37
   35:	iconst_0
   36:	ireturn
   37:	new	#41; //class java/lang/InterruptedException
   40:	dup
   41:	invokespecial	#42; //Method java/lang/InterruptedException."<init>":()V
   44:	athrow
  Exceptions: 
   throws java.lang.InterruptedException  Signature: length = 0x2
   00 FFFFFF98 

public boolean tryTransfer(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_1
   1:	ifnonnull	12
   4:	new	#38; //class java/lang/NullPointerException
   7:	dup
   8:	invokespecial	#39; //Method java/lang/NullPointerException."<init>":()V
   11:	athrow
   12:	aload_0
   13:	aload_1
   14:	invokespecial	#45; //Method fulfill:(Ljava/lang/Object;)Ljava/lang/Object;
   17:	ifnull	24
   20:	iconst_1
   21:	goto	25
   24:	iconst_0
   25:	ireturn
  Signature: length = 0x2
   00 FFFFFF9A 

public java.lang.Object take()   throws java.lang.InterruptedException;
  Code:
   Stack=5, Locals=2, Args_size=1
   0:	aload_0
   1:	aconst_null
   2:	iconst_2
   3:	lconst_0
   4:	invokespecial	#43; //Method xfer:(Ljava/lang/Object;IJ)Ljava/lang/Object;
   7:	astore_1
   8:	aload_1
   9:	ifnull	14
   12:	aload_1
   13:	areturn
   14:	invokestatic	#40; //Method java/lang/Thread.interrupted:()Z
   17:	pop
   18:	new	#41; //class java/lang/InterruptedException
   21:	dup
   22:	invokespecial	#42; //Method java/lang/InterruptedException."<init>":()V
   25:	athrow
  Exceptions: 
   throws java.lang.InterruptedException  Signature: length = 0x2
   00 FFFFFFA0 

public java.lang.Object poll(long, java.util.concurrent.TimeUnit)   throws java.lang.InterruptedException;
  Code:
   Stack=6, Locals=5, Args_size=3
   0:	aload_0
   1:	aconst_null
   2:	iconst_1
   3:	aload_3
   4:	lload_1
   5:	invokevirtual	#44; //Method java/util/concurrent/TimeUnit.toNanos:(J)J
   8:	invokespecial	#43; //Method xfer:(Ljava/lang/Object;IJ)Ljava/lang/Object;
   11:	astore	4
   13:	aload	4
   15:	ifnonnull	24
   18:	invokestatic	#40; //Method java/lang/Thread.interrupted:()Z
   21:	ifne	27
   24:	aload	4
   26:	areturn
   27:	new	#41; //class java/lang/InterruptedException
   30:	dup
   31:	invokespecial	#42; //Method java/lang/InterruptedException."<init>":()V
   34:	athrow
  Exceptions: 
   throws java.lang.InterruptedException  Signature: length = 0x2
   00 FFFFFFA3 

public java.lang.Object poll();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	aconst_null
   2:	invokespecial	#45; //Method fulfill:(Ljava/lang/Object;)Ljava/lang/Object;
   5:	areturn
  Signature: length = 0x2
   00 FFFFFFA0 

public int drainTo(java.util.Collection);
  Code:
   Stack=2, Locals=4, Args_size=2
   0:	aload_1
   1:	ifnonnull	12
   4:	new	#38; //class java/lang/NullPointerException
   7:	dup
   8:	invokespecial	#39; //Method java/lang/NullPointerException."<init>":()V
   11:	athrow
   12:	aload_1
   13:	aload_0
   14:	if_acmpne	25
   17:	new	#46; //class java/lang/IllegalArgumentException
   20:	dup
   21:	invokespecial	#47; //Method java/lang/IllegalArgumentException."<init>":()V
   24:	athrow
   25:	iconst_0
   26:	istore_2
   27:	aload_0
   28:	invokevirtual	#48; //Method poll:()Ljava/lang/Object;
   31:	dup
   32:	astore_3
   33:	ifnull	50
   36:	aload_1
   37:	aload_3
   38:	invokeinterface	#49,  2; //InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
   43:	pop
   44:	iinc	2, 1
   47:	goto	27
   50:	iload_2
   51:	ireturn
  Signature: length = 0x2
   00 FFFFFFA6 

public int drainTo(java.util.Collection, int);
  Code:
   Stack=2, Locals=5, Args_size=3
   0:	aload_1
   1:	ifnonnull	12
   4:	new	#38; //class java/lang/NullPointerException
   7:	dup
   8:	invokespecial	#39; //Method java/lang/NullPointerException."<init>":()V
   11:	athrow
   12:	aload_1
   13:	aload_0
   14:	if_acmpne	25
   17:	new	#46; //class java/lang/IllegalArgumentException
   20:	dup
   21:	invokespecial	#47; //Method java/lang/IllegalArgumentException."<init>":()V
   24:	athrow
   25:	iconst_0
   26:	istore_3
   27:	iload_3
   28:	iload_2
   29:	if_icmpge	57
   32:	aload_0
   33:	invokevirtual	#48; //Method poll:()Ljava/lang/Object;
   36:	dup
   37:	astore	4
   39:	ifnull	57
   42:	aload_1
   43:	aload	4
   45:	invokeinterface	#49,  2; //InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
   50:	pop
   51:	iinc	3, 1
   54:	goto	27
   57:	iload_3
   58:	ireturn
  Signature: length = 0x2
   00 FFFFFFA8 

public java.util.Iterator iterator();
  Code:
   Stack=3, Locals=1, Args_size=1
   0:	new	#50; //class scala/actors/forkjoin/LinkedTransferQueue$Itr
   3:	dup
   4:	aload_0
   5:	invokespecial	#51; //Method scala/actors/forkjoin/LinkedTransferQueue$Itr."<init>":(Lscala/actors/forkjoin/LinkedTransferQueue;)V
   8:	areturn
  Signature: length = 0x2
   00 FFFFFFAC 

public java.lang.Object peek();
  Code:
   Stack=2, Locals=4, Args_size=1
   0:	aload_0
   1:	invokespecial	#3; //Method traversalHead:()Lscala/actors/forkjoin/LinkedTransferQueue$QNode;
   4:	astore_1
   5:	aload_1
   6:	getfield	#12; //Field scala/actors/forkjoin/LinkedTransferQueue$QNode.next:Lscala/actors/forkjoin/LinkedTransferQueue$QNode;
   9:	astore_2
   10:	aload_2
   11:	ifnonnull	16
   14:	aconst_null
   15:	areturn
   16:	aload_2
   17:	invokevirtual	#16; //Method scala/actors/forkjoin/LinkedTransferQueue$QNode.get:()Ljava/lang/Object;
   20:	astore_3
   21:	aload_2
   22:	aload_3
   23:	if_acmpeq	41
   26:	aload_2
   27:	getfield	#10; //Field scala/actors/forkjoin/LinkedTransferQueue$QNode.isData:Z
   30:	ifne	35
   33:	aconst_null
   34:	areturn
   35:	aload_3
   36:	ifnull	41
   39:	aload_3
   40:	areturn
   41:	goto	0
  Signature: length = 0x2
   00 FFFFFFA0 

public boolean isEmpty();
  Code:
   Stack=2, Locals=4, Args_size=1
   0:	aload_0
   1:	invokespecial	#3; //Method traversalHead:()Lscala/actors/forkjoin/LinkedTransferQueue$QNode;
   4:	astore_1
   5:	aload_1
   6:	getfield	#12; //Field scala/actors/forkjoin/LinkedTransferQueue$QNode.next:Lscala/actors/forkjoin/LinkedTransferQueue$QNode;
   9:	astore_2
   10:	aload_2
   11:	ifnonnull	16
   14:	iconst_1
   15:	ireturn
   16:	aload_2
   17:	invokevirtual	#16; //Method scala/actors/forkjoin/LinkedTransferQueue$QNode.get:()Ljava/lang/Object;
   20:	astore_3
   21:	aload_2
   22:	aload_3
   23:	if_acmpeq	41
   26:	aload_2
   27:	getfield	#10; //Field scala/actors/forkjoin/LinkedTransferQueue$QNode.isData:Z
   30:	ifne	35
   33:	iconst_1
   34:	ireturn
   35:	aload_3
   36:	ifnull	41
   39:	iconst_0
   40:	ireturn
   41:	goto	0

public boolean hasWaitingConsumer();
  Code:
   Stack=2, Locals=4, Args_size=1
   0:	aload_0
   1:	invokespecial	#3; //Method traversalHead:()Lscala/actors/forkjoin/LinkedTransferQueue$QNode;
   4:	astore_1
   5:	aload_1
   6:	getfield	#12; //Field scala/actors/forkjoin/LinkedTransferQueue$QNode.next:Lscala/actors/forkjoin/LinkedTransferQueue$QNode;
   9:	astore_2
   10:	aload_2
   11:	ifnonnull	16
   14:	iconst_0
   15:	ireturn
   16:	aload_2
   17:	invokevirtual	#16; //Method scala/actors/forkjoin/LinkedTransferQueue$QNode.get:()Ljava/lang/Object;
   20:	astore_3
   21:	aload_2
   22:	aload_3
   23:	if_acmpeq	39
   26:	aload_2
   27:	getfield	#10; //Field scala/actors/forkjoin/LinkedTransferQueue$QNode.isData:Z
   30:	ifne	37
   33:	iconst_1
   34:	goto	38
   37:	iconst_0
   38:	ireturn
   39:	goto	0

public int size();
  Code:
   Stack=2, Locals=5, Args_size=1
   0:	iconst_0
   1:	istore_1
   2:	aload_0
   3:	invokespecial	#3; //Method traversalHead:()Lscala/actors/forkjoin/LinkedTransferQueue$QNode;
   6:	astore_2
   7:	aload_2
   8:	getfield	#12; //Field scala/actors/forkjoin/LinkedTransferQueue$QNode.next:Lscala/actors/forkjoin/LinkedTransferQueue$QNode;
   11:	astore_3
   12:	aload_3
   13:	ifnull	60
   16:	aload_3
   17:	getfield	#10; //Field scala/actors/forkjoin/LinkedTransferQueue$QNode.isData:Z
   20:	ifeq	60
   23:	aload_3
   24:	invokevirtual	#16; //Method scala/actors/forkjoin/LinkedTransferQueue$QNode.get:()Ljava/lang/Object;
   27:	astore	4
   29:	aload	4
   31:	ifnull	52
   34:	aload	4
   36:	aload_3
   37:	if_acmpeq	52
   40:	iinc	1, 1
   43:	iload_1
   44:	ldc	#52; //int 2147483647
   46:	if_icmpne	52
   49:	goto	60
   52:	aload_3
   53:	getfield	#12; //Field scala/actors/forkjoin/LinkedTransferQueue$QNode.next:Lscala/actors/forkjoin/LinkedTransferQueue$QNode;
   56:	astore_3
   57:	goto	12
   60:	iload_1
   61:	ireturn

public int getWaitingConsumerCount();
  Code:
   Stack=2, Locals=4, Args_size=1
   0:	iconst_0
   1:	istore_1
   2:	aload_0
   3:	invokespecial	#3; //Method traversalHead:()Lscala/actors/forkjoin/LinkedTransferQueue$QNode;
   6:	astore_2
   7:	aload_2
   8:	getfield	#12; //Field scala/actors/forkjoin/LinkedTransferQueue$QNode.next:Lscala/actors/forkjoin/LinkedTransferQueue$QNode;
   11:	astore_3
   12:	aload_3
   13:	ifnull	50
   16:	aload_3
   17:	getfield	#10; //Field scala/actors/forkjoin/LinkedTransferQueue$QNode.isData:Z
   20:	ifne	50
   23:	aload_3
   24:	invokevirtual	#16; //Method scala/actors/forkjoin/LinkedTransferQueue$QNode.get:()Ljava/lang/Object;
   27:	ifnonnull	42
   30:	iinc	1, 1
   33:	iload_1
   34:	ldc	#52; //int 2147483647
   36:	if_icmpne	42
   39:	goto	50
   42:	aload_3
   43:	getfield	#12; //Field scala/actors/forkjoin/LinkedTransferQueue$QNode.next:Lscala/actors/forkjoin/LinkedTransferQueue$QNode;
   46:	astore_3
   47:	goto	12
   50:	iload_1
   51:	ireturn

public int remainingCapacity();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	ldc	#52; //int 2147483647
   2:	ireturn

public boolean remove(java.lang.Object);
  Code:
   Stack=3, Locals=5, Args_size=2
   0:	aload_1
   1:	ifnonnull	6
   4:	iconst_0
   5:	ireturn
   6:	aload_0
   7:	invokespecial	#3; //Method traversalHead:()Lscala/actors/forkjoin/LinkedTransferQueue$QNode;
   10:	astore_2
   11:	aload_2
   12:	getfield	#12; //Field scala/actors/forkjoin/LinkedTransferQueue$QNode.next:Lscala/actors/forkjoin/LinkedTransferQueue$QNode;
   15:	astore_3
   16:	aload_3
   17:	ifnull	27
   20:	aload_3
   21:	getfield	#10; //Field scala/actors/forkjoin/LinkedTransferQueue$QNode.isData:Z
   24:	ifne	29
   27:	iconst_0
   28:	ireturn
   29:	aload_3
   30:	aload_2
   31:	if_acmpne	37
   34:	goto	86
   37:	aload_3
   38:	invokevirtual	#16; //Method scala/actors/forkjoin/LinkedTransferQueue$QNode.get:()Ljava/lang/Object;
   41:	astore	4
   43:	aload	4
   45:	ifnull	81
   48:	aload	4
   50:	aload_3
   51:	if_acmpeq	81
   54:	aload_1
   55:	aload	4
   57:	invokevirtual	#53; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   60:	ifeq	81
   63:	aload_3
   64:	aload	4
   66:	aload_3
   67:	invokevirtual	#17; //Method scala/actors/forkjoin/LinkedTransferQueue$QNode.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
   70:	ifeq	81
   73:	aload_0
   74:	aload_2
   75:	aload_3
   76:	invokespecial	#2; //Method clean:(Lscala/actors/forkjoin/LinkedTransferQueue$QNode;Lscala/actors/forkjoin/LinkedTransferQueue$QNode;)V
   79:	iconst_1
   80:	ireturn
   81:	aload_3
   82:	astore_2
   83:	goto	11
   86:	goto	6

static scala.actors.forkjoin.LinkedTransferQueue$QNode access$000(scala.actors.forkjoin.LinkedTransferQueue);
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokespecial	#3; //Method traversalHead:()Lscala/actors/forkjoin/LinkedTransferQueue$QNode;
   4:	areturn

static void access$100(scala.actors.forkjoin.LinkedTransferQueue, scala.actors.forkjoin.LinkedTransferQueue$QNode, scala.actors.forkjoin.LinkedTransferQueue$QNode);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokespecial	#2; //Method clean:(Lscala/actors/forkjoin/LinkedTransferQueue$QNode;Lscala/actors/forkjoin/LinkedTransferQueue$QNode;)V
   6:	return

static sun.misc.Unsafe access$200()   throws java.lang.NoSuchFieldException, java.lang.IllegalAccessException;
  Code:
   Stack=1, Locals=0, Args_size=0
   0:	invokestatic	#1; //Method getUnsafePrivileged:()Lsun/misc/Unsafe;
   3:	areturn
  Exceptions: 
   throws java.lang.NoSuchFieldException, java.lang.IllegalAccessException
static {};
  Code:
   Stack=4, Locals=1, Args_size=0
   0:	invokestatic	#82; //Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
   3:	invokevirtual	#83; //Method java/lang/Runtime.availableProcessors:()I
   6:	putstatic	#84; //Field NCPUS:I
   9:	getstatic	#84; //Field NCPUS:I
   12:	iconst_2
   13:	if_icmpge	20
   16:	iconst_0
   17:	goto	22
   20:	bipush	32
   22:	putstatic	#24; //Field maxTimedSpins:I
   25:	getstatic	#24; //Field maxTimedSpins:I
   28:	bipush	16
   30:	imul
   31:	putstatic	#25; //Field maxUntimedSpins:I
   34:	invokestatic	#85; //Method getUnsafe:()Lsun/misc/Unsafe;
   37:	putstatic	#63; //Field _unsafe:Lsun/misc/Unsafe;
   40:	ldc	#86; //String head
   42:	invokestatic	#87; //Method fieldOffset:(Ljava/lang/String;)J
   45:	putstatic	#64; //Field headOffset:J
   48:	ldc	#88; //String tail
   50:	invokestatic	#87; //Method fieldOffset:(Ljava/lang/String;)J
   53:	putstatic	#66; //Field tailOffset:J
   56:	ldc	#89; //String cleanMe
   58:	invokestatic	#87; //Method fieldOffset:(Ljava/lang/String;)J
   61:	putstatic	#67; //Field cleanMeOffset:J
   64:	goto	79
   67:	astore_0
   68:	new	#91; //class java/lang/RuntimeException
   71:	dup
   72:	ldc	#92; //String Could not initialize intrinsics
   74:	aload_0
   75:	invokespecial	#93; //Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
   78:	athrow
   79:	return
  Exception table:
   from   to  target type
    34    64    67   Class java/lang/Throwable


}

