public class scala.actors.forkjoin.ThreadLocalRandom extends java.util.Random
  InnerClass: 
   #25; //class scala/actors/forkjoin/ThreadLocalRandom$1
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Method	#27.#66;	//  java/util/Random."<init>":()V
const #2 = Field	#4.#67;	//  scala/actors/forkjoin/ThreadLocalRandom.localRandom:Ljava/lang/ThreadLocal;
const #3 = Method	#68.#69;	//  java/lang/ThreadLocal.get:()Ljava/lang/Object;
const #4 = class	#70;	//  scala/actors/forkjoin/ThreadLocalRandom
const #5 = Field	#4.#71;	//  scala/actors/forkjoin/ThreadLocalRandom.initialized:Z
const #6 = class	#72;	//  java/lang/UnsupportedOperationException
const #7 = Method	#6.#66;	//  java/lang/UnsupportedOperationException."<init>":()V
const #8 = long	25214903917l;
const #10 = long	281474976710655l;
const #12 = Field	#4.#73;	//  scala/actors/forkjoin/ThreadLocalRandom.rnd:J
const #13 = long	11l;
const #15 = class	#74;	//  java/lang/IllegalArgumentException
const #16 = Method	#15.#66;	//  java/lang/IllegalArgumentException."<init>":()V
const #17 = Method	#4.#75;	//  scala/actors/forkjoin/ThreadLocalRandom.nextInt:(I)I
const #18 = String	#76;	//  n must be positive
const #19 = Method	#15.#77;	//  java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
const #20 = long	2147483647l;
const #22 = Method	#4.#78;	//  scala/actors/forkjoin/ThreadLocalRandom.next:(I)I
const #23 = Method	#4.#79;	//  scala/actors/forkjoin/ThreadLocalRandom.nextLong:(J)J
const #24 = Method	#4.#80;	//  scala/actors/forkjoin/ThreadLocalRandom.nextDouble:()D
const #25 = class	#81;	//  scala/actors/forkjoin/ThreadLocalRandom$1
const #26 = Method	#25.#66;	//  scala/actors/forkjoin/ThreadLocalRandom$1."<init>":()V
const #27 = class	#84;	//  java/util/Random
const #28 = Asciz	multiplier;
const #29 = Asciz	J;
const #30 = Asciz	ConstantValue;
const #31 = Asciz	addend;
const #32 = Asciz	mask;
const #33 = Asciz	rnd;
const #34 = Asciz	initialized;
const #35 = Asciz	Z;
const #36 = Asciz	pad0;
const #37 = Asciz	pad1;
const #38 = Asciz	pad2;
const #39 = Asciz	pad3;
const #40 = Asciz	pad4;
const #41 = Asciz	pad5;
const #42 = Asciz	pad6;
const #43 = Asciz	pad7;
const #44 = Asciz	localRandom;
const #45 = Asciz	Ljava/lang/ThreadLocal;;
const #46 = Asciz	Signature;
const #47 = Asciz	Ljava/lang/ThreadLocal<Lscala/actors/forkjoin/ThreadLocalRandom;>;;
const #48 = Asciz	<init>;
const #49 = Asciz	()V;
const #50 = Asciz	Code;
const #51 = Asciz	current;
const #52 = Asciz	()Lscala/actors/forkjoin/ThreadLocalRandom;;
const #53 = Asciz	setSeed;
const #54 = Asciz	(J)V;
const #55 = Asciz	next;
const #56 = Asciz	(I)I;
const #57 = Asciz	nextInt;
const #58 = Asciz	(II)I;
const #59 = Asciz	nextLong;
const #60 = Asciz	(J)J;
const #61 = Asciz	(JJ)J;
const #62 = Asciz	nextDouble;
const #63 = Asciz	(D)D;
const #64 = Asciz	(DD)D;
const #65 = Asciz	<clinit>;
const #66 = NameAndType	#48:#49;//  "<init>":()V
const #67 = NameAndType	#44:#45;//  localRandom:Ljava/lang/ThreadLocal;
const #68 = class	#85;	//  java/lang/ThreadLocal
const #69 = NameAndType	#86:#87;//  get:()Ljava/lang/Object;
const #70 = Asciz	scala/actors/forkjoin/ThreadLocalRandom;
const #71 = NameAndType	#34:#35;//  initialized:Z
const #72 = Asciz	java/lang/UnsupportedOperationException;
const #73 = NameAndType	#33:#29;//  rnd:J
const #74 = Asciz	java/lang/IllegalArgumentException;
const #75 = NameAndType	#57:#56;//  nextInt:(I)I
const #76 = Asciz	n must be positive;
const #77 = NameAndType	#48:#88;//  "<init>":(Ljava/lang/String;)V
const #78 = NameAndType	#55:#56;//  next:(I)I
const #79 = NameAndType	#59:#60;//  nextLong:(J)J
const #80 = NameAndType	#62:#89;//  nextDouble:()D
const #81 = Asciz	scala/actors/forkjoin/ThreadLocalRandom$1;
const #82 = Asciz	;
const #83 = Asciz	InnerClasses;
const #84 = Asciz	java/util/Random;
const #85 = Asciz	java/lang/ThreadLocal;
const #86 = Asciz	get;
const #87 = Asciz	()Ljava/lang/Object;;
const #88 = Asciz	(Ljava/lang/String;)V;
const #89 = Asciz	()D;

{
boolean initialized;

scala.actors.forkjoin.ThreadLocalRandom();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokespecial	#1; //Method java/util/Random."<init>":()V
   4:	return

public static scala.actors.forkjoin.ThreadLocalRandom current();
  Code:
   Stack=1, Locals=0, Args_size=0
   0:	getstatic	#2; //Field localRandom:Ljava/lang/ThreadLocal;
   3:	invokevirtual	#3; //Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
   6:	checkcast	#4; //class scala/actors/forkjoin/ThreadLocalRandom
   9:	areturn

public void setSeed(long);
  Code:
   Stack=5, Locals=3, Args_size=2
   0:	aload_0
   1:	getfield	#5; //Field initialized:Z
   4:	ifeq	15
   7:	new	#6; //class java/lang/UnsupportedOperationException
   10:	dup
   11:	invokespecial	#7; //Method java/lang/UnsupportedOperationException."<init>":()V
   14:	athrow
   15:	aload_0
   16:	iconst_1
   17:	putfield	#5; //Field initialized:Z
   20:	aload_0
   21:	lload_1
   22:	ldc2_w	#8; //long 25214903917l
   25:	lxor
   26:	ldc2_w	#10; //long 281474976710655l
   29:	land
   30:	putfield	#12; //Field rnd:J
   33:	return

protected int next(int);
  Code:
   Stack=5, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_0
   2:	getfield	#12; //Field rnd:J
   5:	ldc2_w	#8; //long 25214903917l
   8:	lmul
   9:	ldc2_w	#13; //long 11l
   12:	ladd
   13:	ldc2_w	#10; //long 281474976710655l
   16:	land
   17:	dup2_x1
   18:	putfield	#12; //Field rnd:J
   21:	bipush	48
   23:	iload_1
   24:	isub
   25:	lushr
   26:	l2i
   27:	ireturn

public int nextInt(int, int);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	iload_1
   1:	iload_2
   2:	if_icmplt	13
   5:	new	#15; //class java/lang/IllegalArgumentException
   8:	dup
   9:	invokespecial	#16; //Method java/lang/IllegalArgumentException."<init>":()V
   12:	athrow
   13:	aload_0
   14:	iload_2
   15:	iload_1
   16:	isub
   17:	invokevirtual	#17; //Method nextInt:(I)I
   20:	iload_1
   21:	iadd
   22:	ireturn

public long nextLong(long);
  Code:
   Stack=6, Locals=10, Args_size=2
   0:	lload_1
   1:	lconst_0
   2:	lcmp
   3:	ifgt	16
   6:	new	#15; //class java/lang/IllegalArgumentException
   9:	dup
   10:	ldc	#18; //String n must be positive
   12:	invokespecial	#19; //Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
   15:	athrow
   16:	lconst_0
   17:	lstore_3
   18:	lload_1
   19:	ldc2_w	#20; //long 2147483647l
   22:	lcmp
   23:	iflt	76
   26:	aload_0
   27:	iconst_2
   28:	invokevirtual	#22; //Method next:(I)I
   31:	istore	5
   33:	lload_1
   34:	iconst_1
   35:	lushr
   36:	lstore	6
   38:	iload	5
   40:	iconst_2
   41:	iand
   42:	ifne	50
   45:	lload	6
   47:	goto	54
   50:	lload_1
   51:	lload	6
   53:	lsub
   54:	lstore	8
   56:	iload	5
   58:	iconst_1
   59:	iand
   60:	ifne	70
   63:	lload_3
   64:	lload_1
   65:	lload	8
   67:	lsub
   68:	ladd
   69:	lstore_3
   70:	lload	8
   72:	lstore_1
   73:	goto	18
   76:	lload_3
   77:	aload_0
   78:	lload_1
   79:	l2i
   80:	invokevirtual	#17; //Method nextInt:(I)I
   83:	i2l
   84:	ladd
   85:	lreturn

public long nextLong(long, long);
  Code:
   Stack=5, Locals=5, Args_size=3
   0:	lload_1
   1:	lload_3
   2:	lcmp
   3:	iflt	14
   6:	new	#15; //class java/lang/IllegalArgumentException
   9:	dup
   10:	invokespecial	#16; //Method java/lang/IllegalArgumentException."<init>":()V
   13:	athrow
   14:	aload_0
   15:	lload_3
   16:	lload_1
   17:	lsub
   18:	invokevirtual	#23; //Method nextLong:(J)J
   21:	lload_1
   22:	ladd
   23:	lreturn

public double nextDouble(double);
  Code:
   Stack=4, Locals=3, Args_size=2
   0:	dload_1
   1:	dconst_0
   2:	dcmpg
   3:	ifgt	16
   6:	new	#15; //class java/lang/IllegalArgumentException
   9:	dup
   10:	ldc	#18; //String n must be positive
   12:	invokespecial	#19; //Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
   15:	athrow
   16:	aload_0
   17:	invokevirtual	#24; //Method nextDouble:()D
   20:	dload_1
   21:	dmul
   22:	dreturn

public double nextDouble(double, double);
  Code:
   Stack=6, Locals=5, Args_size=3
   0:	dload_1
   1:	dload_3
   2:	dcmpl
   3:	iflt	14
   6:	new	#15; //class java/lang/IllegalArgumentException
   9:	dup
   10:	invokespecial	#16; //Method java/lang/IllegalArgumentException."<init>":()V
   13:	athrow
   14:	aload_0
   15:	invokevirtual	#24; //Method nextDouble:()D
   18:	dload_3
   19:	dload_1
   20:	dsub
   21:	dmul
   22:	dload_1
   23:	dadd
   24:	dreturn

static {};
  Code:
   Stack=2, Locals=0, Args_size=0
   0:	new	#25; //class scala/actors/forkjoin/ThreadLocalRandom$1
   3:	dup
   4:	invokespecial	#26; //Method scala/actors/forkjoin/ThreadLocalRandom$1."<init>":()V
   7:	putstatic	#2; //Field localRandom:Ljava/lang/ThreadLocal;
   10:	return

}

