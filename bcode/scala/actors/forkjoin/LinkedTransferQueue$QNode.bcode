final class scala.actors.forkjoin.LinkedTransferQueue$QNode extends java.util.concurrent.atomic.AtomicReference
  Signature: length = 0x2
   00 1E 
  InnerClass: 
   final #11= #6 of #37; //QNode=class scala/actors/forkjoin/LinkedTransferQueue$QNode of class scala/actors/forkjoin/LinkedTransferQueue
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Method	#9.#31;	//  java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
const #2 = Field	#6.#32;	//  scala/actors/forkjoin/LinkedTransferQueue$QNode.isData:Z
const #3 = Field	#6.#33;	//  scala/actors/forkjoin/LinkedTransferQueue$QNode.nextUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
const #4 = Method	#34.#35;	//  java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
const #5 = Method	#34.#36;	//  java/util/concurrent/atomic/AtomicReferenceFieldUpdater.set:(Ljava/lang/Object;Ljava/lang/Object;)V
const #6 = class	#38;	//  scala/actors/forkjoin/LinkedTransferQueue$QNode
const #7 = String	#10;	//  next
const #8 = Method	#34.#39;	//  java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
const #9 = class	#40;	//  java/util/concurrent/atomic/AtomicReference
const #10 = Asciz	next;
const #11 = Asciz	QNode;
const #12 = Asciz	InnerClasses;
const #13 = Asciz	Lscala/actors/forkjoin/LinkedTransferQueue$QNode;;
const #14 = Asciz	waiter;
const #15 = Asciz	Ljava/lang/Thread;;
const #16 = Asciz	isData;
const #17 = Asciz	Z;
const #18 = Asciz	nextUpdater;
const #19 = Asciz	Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;;
const #20 = Asciz	Signature;
const #21 = Asciz	Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater<Lscala/actors/forkjoin/LinkedTransferQueue$QNode;Lscala/actors/forkjoin/LinkedTransferQueue$QNode;>;;
const #22 = Asciz	<init>;
const #23 = Asciz	(Ljava/lang/Object;Z)V;
const #24 = Asciz	Code;
const #25 = Asciz	casNext;
const #26 = Asciz	(Lscala/actors/forkjoin/LinkedTransferQueue$QNode;Lscala/actors/forkjoin/LinkedTransferQueue$QNode;)Z;
const #27 = Asciz	clearNext;
const #28 = Asciz	()V;
const #29 = Asciz	<clinit>;
const #30 = Asciz	Ljava/util/concurrent/atomic/AtomicReference<Ljava/lang/Object;>;;
const #31 = NameAndType	#22:#41;//  "<init>":(Ljava/lang/Object;)V
const #32 = NameAndType	#16:#17;//  isData:Z
const #33 = NameAndType	#18:#19;//  nextUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
const #34 = class	#42;	//  java/util/concurrent/atomic/AtomicReferenceFieldUpdater
const #35 = NameAndType	#43:#44;//  compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
const #36 = NameAndType	#45:#46;//  set:(Ljava/lang/Object;Ljava/lang/Object;)V
const #37 = class	#47;	//  scala/actors/forkjoin/LinkedTransferQueue
const #38 = Asciz	scala/actors/forkjoin/LinkedTransferQueue$QNode;
const #39 = NameAndType	#48:#49;//  newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
const #40 = Asciz	java/util/concurrent/atomic/AtomicReference;
const #41 = Asciz	(Ljava/lang/Object;)V;
const #42 = Asciz	java/util/concurrent/atomic/AtomicReferenceFieldUpdater;
const #43 = Asciz	compareAndSet;
const #44 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z;
const #45 = Asciz	set;
const #46 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)V;
const #47 = Asciz	scala/actors/forkjoin/LinkedTransferQueue;
const #48 = Asciz	newUpdater;
const #49 = Asciz	(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;;

{
volatile scala.actors.forkjoin.LinkedTransferQueue$QNode next;

volatile java.lang.Thread waiter;

final boolean isData;

static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater nextUpdater;
  Signature: length = 0x2
   00 15 

scala.actors.forkjoin.LinkedTransferQueue$QNode(java.lang.Object, boolean);
  Code:
   Stack=2, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	invokespecial	#1; //Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
   5:	aload_0
   6:	iload_2
   7:	putfield	#2; //Field isData:Z
   10:	return

final boolean casNext(scala.actors.forkjoin.LinkedTransferQueue$QNode, scala.actors.forkjoin.LinkedTransferQueue$QNode);
  Code:
   Stack=4, Locals=3, Args_size=3
   0:	getstatic	#3; //Field nextUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
   3:	aload_0
   4:	aload_1
   5:	aload_2
   6:	invokevirtual	#4; //Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
   9:	ireturn

final void clearNext();
  Code:
   Stack=3, Locals=1, Args_size=1
   0:	getstatic	#3; //Field nextUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
   3:	aload_0
   4:	aload_0
   5:	invokevirtual	#5; //Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.set:(Ljava/lang/Object;Ljava/lang/Object;)V
   8:	return

static {};
  Code:
   Stack=3, Locals=0, Args_size=0
   0:	ldc_w	#6; //class scala/actors/forkjoin/LinkedTransferQueue$QNode
   3:	ldc_w	#6; //class scala/actors/forkjoin/LinkedTransferQueue$QNode
   6:	ldc	#7; //String next
   8:	invokestatic	#8; //Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
   11:	putstatic	#3; //Field nextUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
   14:	return

}

