public class scala.actors.forkjoin.ForkJoinWorkerThread extends java.lang.Thread
  InnerClass: 
   #68; //class scala/actors/forkjoin/ForkJoinWorkerThread$1
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Method	#78.#208;	//  scala/actors/forkjoin/ForkJoinWorkerThread.getUnsafePrivileged:()Lsun/misc/Unsafe;
const #2 = Method	#96.#209;	//  java/lang/Thread."<init>":()V
const #3 = class	#210;	//  java/lang/NullPointerException
const #4 = Method	#3.#209;	//  java/lang/NullPointerException."<init>":()V
const #5 = Field	#78.#211;	//  scala/actors/forkjoin/ForkJoinWorkerThread.pool:Lscala/actors/forkjoin/ForkJoinPool;
const #6 = Field	#78.#212;	//  scala/actors/forkjoin/ForkJoinWorkerThread.poolIndex:I
const #7 = Field	#78.#213;	//  scala/actors/forkjoin/ForkJoinWorkerThread.locallyFifo:Z
const #8 = Field	#78.#214;	//  scala/actors/forkjoin/ForkJoinWorkerThread.runState:I
const #9 = Method	#78.#215;	//  scala/actors/forkjoin/ForkJoinWorkerThread.transitionRunStateTo:(I)Z
const #10 = Field	#78.#216;	//  scala/actors/forkjoin/ForkJoinWorkerThread._unsafe:Lsun/misc/Unsafe;
const #11 = Field	#78.#217;	//  scala/actors/forkjoin/ForkJoinWorkerThread.runStateOffset:J
const #12 = Method	#71.#218;	//  sun/misc/Unsafe.compareAndSwapInt:(Ljava/lang/Object;JII)Z
const #13 = Field	#78.#219;	//  scala/actors/forkjoin/ForkJoinWorkerThread.active:Z
const #14 = Method	#220.#221;	//  scala/actors/forkjoin/ForkJoinPool.tryIncrementActiveCount:()Z
const #15 = Method	#220.#222;	//  scala/actors/forkjoin/ForkJoinPool.tryDecrementActiveCount:()Z
const #16 = Method	#78.#223;	//  scala/actors/forkjoin/ForkJoinWorkerThread.onStart:()V
const #17 = Method	#220.#224;	//  scala/actors/forkjoin/ForkJoinPool.sync:(Lscala/actors/forkjoin/ForkJoinWorkerThread;)V
const #18 = Method	#78.#225;	//  scala/actors/forkjoin/ForkJoinWorkerThread.mainLoop:()V
const #19 = Method	#78.#226;	//  scala/actors/forkjoin/ForkJoinWorkerThread.onTermination:(Ljava/lang/Throwable;)V
const #20 = class	#227;	//  java/lang/Throwable
const #21 = Method	#78.#228;	//  scala/actors/forkjoin/ForkJoinWorkerThread.isShutdown:()Z
const #22 = Method	#78.#229;	//  scala/actors/forkjoin/ForkJoinWorkerThread.pollTask:()Lscala/actors/forkjoin/ForkJoinTask;
const #23 = Method	#78.#230;	//  scala/actors/forkjoin/ForkJoinWorkerThread.pollSubmission:()Lscala/actors/forkjoin/ForkJoinTask;
const #24 = Method	#26.#231;	//  scala/actors/forkjoin/ForkJoinTask.quietlyExec:()V
const #25 = Method	#78.#232;	//  scala/actors/forkjoin/ForkJoinWorkerThread.tryInactivate:()Z
const #26 = class	#233;	//  scala/actors/forkjoin/ForkJoinTask
const #27 = Field	#78.#234;	//  scala/actors/forkjoin/ForkJoinWorkerThread.queue:[Lscala/actors/forkjoin/ForkJoinTask;
const #28 = Field	#78.#235;	//  scala/actors/forkjoin/ForkJoinWorkerThread.seed:I
const #29 = Method	#220.#236;	//  scala/actors/forkjoin/ForkJoinPool.isTerminating:()Z
const #30 = Field	#78.#237;	//  scala/actors/forkjoin/ForkJoinWorkerThread.base:I
const #31 = Field	#78.#238;	//  scala/actors/forkjoin/ForkJoinWorkerThread.sp:I
const #32 = Method	#78.#239;	//  scala/actors/forkjoin/ForkJoinWorkerThread.popTask:()Lscala/actors/forkjoin/ForkJoinTask;
const #33 = Method	#78.#240;	//  scala/actors/forkjoin/ForkJoinWorkerThread.cancelTasks:()V
const #34 = Method	#220.#241;	//  scala/actors/forkjoin/ForkJoinPool.workerTerminated:(Lscala/actors/forkjoin/ForkJoinWorkerThread;)V
const #35 = Method	#26.#242;	//  scala/actors/forkjoin/ForkJoinTask.rethrowException:(Ljava/lang/Throwable;)V
const #36 = Field	#78.#243;	//  scala/actors/forkjoin/ForkJoinWorkerThread.qShift:I
const #37 = Field	#78.#244;	//  scala/actors/forkjoin/ForkJoinWorkerThread.qBase:J
const #38 = Method	#71.#245;	//  sun/misc/Unsafe.putObjectVolatile:(Ljava/lang/Object;JLjava/lang/Object;)V
const #39 = Method	#71.#246;	//  sun/misc/Unsafe.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z
const #40 = Field	#78.#247;	//  scala/actors/forkjoin/ForkJoinWorkerThread.spOffset:J
const #41 = Method	#71.#248;	//  sun/misc/Unsafe.putIntVolatile:(Ljava/lang/Object;JI)V
const #42 = Method	#78.#249;	//  scala/actors/forkjoin/ForkJoinWorkerThread.setSlot:([Lscala/actors/forkjoin/ForkJoinTask;ILscala/actors/forkjoin/ForkJoinTask;)V
const #43 = Method	#78.#250;	//  scala/actors/forkjoin/ForkJoinWorkerThread.storeSp:(I)V
const #44 = Method	#220.#251;	//  scala/actors/forkjoin/ForkJoinPool.signalWork:()V
const #45 = Method	#78.#252;	//  scala/actors/forkjoin/ForkJoinWorkerThread.growQueue:()V
const #46 = Method	#78.#253;	//  scala/actors/forkjoin/ForkJoinWorkerThread.casSlotNull:([Lscala/actors/forkjoin/ForkJoinTask;ILscala/actors/forkjoin/ForkJoinTask;)Z
const #47 = Method	#78.#254;	//  scala/actors/forkjoin/ForkJoinWorkerThread.tryActivate:()Z
const #48 = int	268435456;
const #49 = class	#255;	//  java/util/concurrent/RejectedExecutionException
const #50 = String	#256;	//  Queue capacity exceeded
const #51 = Method	#49.#257;	//  java/util/concurrent/RejectedExecutionException."<init>":(Ljava/lang/String;)V
const #52 = Field	#220.#258;	//  scala/actors/forkjoin/ForkJoinPool.workers:[Lscala/actors/forkjoin/ForkJoinWorkerThread;
const #53 = Method	#78.#259;	//  scala/actors/forkjoin/ForkJoinWorkerThread.xorShift:(I)I
const #54 = Method	#78.#260;	//  scala/actors/forkjoin/ForkJoinWorkerThread.deqTask:()Lscala/actors/forkjoin/ForkJoinTask;
const #55 = Method	#220.#261;	//  scala/actors/forkjoin/ForkJoinPool.hasNewSyncEvent:(Lscala/actors/forkjoin/ForkJoinWorkerThread;)Z
const #56 = Method	#78.#262;	//  scala/actors/forkjoin/ForkJoinWorkerThread.scan:()Lscala/actors/forkjoin/ForkJoinTask;
const #57 = Field	#78.#263;	//  scala/actors/forkjoin/ForkJoinWorkerThread.stealCount:I
const #58 = Method	#220.#264;	//  scala/actors/forkjoin/ForkJoinPool.hasQueuedSubmissions:()Z
const #59 = Method	#220.#230;	//  scala/actors/forkjoin/ForkJoinPool.pollSubmission:()Lscala/actors/forkjoin/ForkJoinTask;
const #60 = Method	#26.#265;	//  scala/actors/forkjoin/ForkJoinTask.cancelIgnoringExceptions:()V
const #61 = InterfaceMethod	#266.#267;	//  java/util/Collection.add:(Ljava/lang/Object;)Z
const #62 = Method	#220.#268;	//  scala/actors/forkjoin/ForkJoinPool.getIdleThreadCount:()I
const #63 = Field	#26.#269;	//  scala/actors/forkjoin/ForkJoinTask.status:I
const #64 = Method	#78.#270;	//  scala/actors/forkjoin/ForkJoinWorkerThread.pushTask:(Lscala/actors/forkjoin/ForkJoinTask;)V
const #65 = Method	#220.#271;	//  scala/actors/forkjoin/ForkJoinPool.isQuiescent:()Z
const #66 = Method	#71.#272;	//  sun/misc/Unsafe.getUnsafe:()Lsun/misc/Unsafe;
const #67 = class	#273;	//  java/lang/SecurityException
const #68 = class	#274;	//  scala/actors/forkjoin/ForkJoinWorkerThread$1
const #69 = Method	#68.#209;	//  scala/actors/forkjoin/ForkJoinWorkerThread$1."<init>":()V
const #70 = Method	#277.#278;	//  java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;
const #71 = class	#279;	//  sun/misc/Unsafe
const #72 = class	#280;	//  java/security/PrivilegedActionException
const #73 = Method	#72.#281;	//  java/security/PrivilegedActionException.getCause:()Ljava/lang/Throwable;
const #74 = String	#282;	//  theUnsafe
const #75 = Method	#283.#284;	//  java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
const #76 = Method	#285.#286;	//  java/lang/reflect/Field.setAccessible:(Z)V
const #77 = Method	#285.#287;	//  java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
const #78 = class	#288;	//  scala/actors/forkjoin/ForkJoinWorkerThread
const #79 = Method	#71.#289;	//  sun/misc/Unsafe.objectFieldOffset:(Ljava/lang/reflect/Field;)J
const #80 = Method	#78.#272;	//  scala/actors/forkjoin/ForkJoinWorkerThread.getUnsafe:()Lsun/misc/Unsafe;
const #81 = String	#109;	//  base
const #82 = Method	#78.#290;	//  scala/actors/forkjoin/ForkJoinWorkerThread.fieldOffset:(Ljava/lang/String;)J
const #83 = Field	#78.#291;	//  scala/actors/forkjoin/ForkJoinWorkerThread.baseOffset:J
const #84 = String	#108;	//  sp
const #85 = String	#112;	//  runState
const #86 = class	#105;	//  "[Lscala/actors/forkjoin/ForkJoinTask;"
const #87 = Method	#71.#292;	//  sun/misc/Unsafe.arrayBaseOffset:(Ljava/lang/Class;)I
const #88 = Method	#71.#293;	//  sun/misc/Unsafe.arrayIndexScale:(Ljava/lang/Class;)I
const #89 = class	#294;	//  java/lang/Error
const #90 = String	#295;	//  data type scale not a power of two
const #91 = Method	#89.#257;	//  java/lang/Error."<init>":(Ljava/lang/String;)V
const #92 = Method	#296.#297;	//  java/lang/Integer.numberOfLeadingZeros:(I)I
const #93 = class	#298;	//  java/lang/RuntimeException
const #94 = String	#299;	//  Could not initialize intrinsics
const #95 = Method	#93.#300;	//  java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
const #96 = class	#301;	//  java/lang/Thread
const #97 = Asciz	INITIAL_QUEUE_CAPACITY;
const #98 = Asciz	I;
const #99 = Asciz	ConstantValue;
const #100 = int	8192;
const #101 = Asciz	MAXIMUM_QUEUE_CAPACITY;
const #102 = Asciz	pool;
const #103 = Asciz	Lscala/actors/forkjoin/ForkJoinPool;;
const #104 = Asciz	queue;
const #105 = Asciz	[Lscala/actors/forkjoin/ForkJoinTask;;
const #106 = Asciz	Signature;
const #107 = Asciz	[Lscala/actors/forkjoin/ForkJoinTask<*>;;
const #108 = Asciz	sp;
const #109 = Asciz	base;
const #110 = Asciz	active;
const #111 = Asciz	Z;
const #112 = Asciz	runState;
const #113 = Asciz	seed;
const #114 = Asciz	stealCount;
const #115 = Asciz	poolIndex;
const #116 = Asciz	lastEventCount;
const #117 = Asciz	J;
const #118 = Asciz	locallyFifo;
const #119 = Asciz	RUNNING;
const #120 = int	0;
const #121 = Asciz	SHUTDOWN;
const #122 = int	1;
const #123 = Asciz	TERMINATING;
const #124 = int	2;
const #125 = Asciz	TERMINATED;
const #126 = int	3;
const #127 = Asciz	_unsafe;
const #128 = Asciz	Lsun/misc/Unsafe;;
const #129 = Asciz	baseOffset;
const #130 = Asciz	spOffset;
const #131 = Asciz	runStateOffset;
const #132 = Asciz	qBase;
const #133 = Asciz	qShift;
const #134 = Asciz	<init>;
const #135 = Asciz	(Lscala/actors/forkjoin/ForkJoinPool;)V;
const #136 = Asciz	Code;
const #137 = Asciz	getPool;
const #138 = Asciz	()Lscala/actors/forkjoin/ForkJoinPool;;
const #139 = Asciz	getPoolIndex;
const #140 = Asciz	()I;
const #141 = Asciz	setAsyncMode;
const #142 = Asciz	(Z)V;
const #143 = Asciz	isShutdown;
const #144 = Asciz	()Z;
const #145 = Asciz	isTerminating;
const #146 = Asciz	isTerminated;
const #147 = Asciz	shutdown;
const #148 = Asciz	shutdownNow;
const #149 = Asciz	transitionRunStateTo;
const #150 = Asciz	(I)Z;
const #151 = Asciz	tryActivate;
const #152 = Asciz	tryInactivate;
const #153 = Asciz	xorShift;
const #154 = Asciz	(I)I;
const #155 = Asciz	run;
const #156 = Asciz	()V;
const #157 = Asciz	mainLoop;
const #158 = Asciz	onStart;
const #159 = Asciz	onTermination;
const #160 = Asciz	(Ljava/lang/Throwable;)V;
const #161 = Asciz	setSlot;
const #162 = Asciz	([Lscala/actors/forkjoin/ForkJoinTask;ILscala/actors/forkjoin/ForkJoinTask;)V;
const #163 = Asciz	([Lscala/actors/forkjoin/ForkJoinTask<*>;ILscala/actors/forkjoin/ForkJoinTask<*>;)V;
const #164 = Asciz	casSlotNull;
const #165 = Asciz	([Lscala/actors/forkjoin/ForkJoinTask;ILscala/actors/forkjoin/ForkJoinTask;)Z;
const #166 = Asciz	([Lscala/actors/forkjoin/ForkJoinTask<*>;ILscala/actors/forkjoin/ForkJoinTask<*>;)Z;
const #167 = Asciz	storeSp;
const #168 = Asciz	(I)V;
const #169 = Asciz	pushTask;
const #170 = Asciz	(Lscala/actors/forkjoin/ForkJoinTask;)V;
const #171 = Asciz	(Lscala/actors/forkjoin/ForkJoinTask<*>;)V;
const #172 = Asciz	deqTask;
const #173 = Asciz	()Lscala/actors/forkjoin/ForkJoinTask;;
const #174 = Asciz	()Lscala/actors/forkjoin/ForkJoinTask<*>;;
const #175 = Asciz	popTask;
const #176 = Asciz	unpushTask;
const #177 = Asciz	(Lscala/actors/forkjoin/ForkJoinTask;)Z;
const #178 = Asciz	(Lscala/actors/forkjoin/ForkJoinTask<*>;)Z;
const #179 = Asciz	peekTask;
const #180 = Asciz	growQueue;
const #181 = Asciz	scan;
const #182 = Asciz	pollTask;
const #183 = Asciz	pollLocalTask;
const #184 = Asciz	pollSubmission;
const #185 = Asciz	cancelTasks;
const #186 = Asciz	drainTasksTo;
const #187 = Asciz	(Ljava/util/Collection;)I;
const #188 = Asciz	(Ljava/util/Collection<Lscala/actors/forkjoin/ForkJoinTask<*>;>;)I;
const #189 = Asciz	getAndClearStealCount;
const #190 = Asciz	hasQueuedTasks;
const #191 = Asciz	([Lscala/actors/forkjoin/ForkJoinWorkerThread;)Z;
const #192 = Asciz	getQueueSize;
const #193 = Asciz	getEstimatedSurplusTaskCount;
const #194 = Asciz	scanWhileJoining;
const #195 = Asciz	(Lscala/actors/forkjoin/ForkJoinTask;)Lscala/actors/forkjoin/ForkJoinTask;;
const #196 = Asciz	(Lscala/actors/forkjoin/ForkJoinTask<*>;)Lscala/actors/forkjoin/ForkJoinTask<*>;;
const #197 = Asciz	helpQuiescePool;
const #198 = Asciz	getUnsafe;
const #199 = Asciz	()Lsun/misc/Unsafe;;
const #200 = Asciz	Exceptions;
const #201 = Asciz	getUnsafePrivileged;
const #202 = class	#302;	//  java/lang/NoSuchFieldException
const #203 = class	#303;	//  java/lang/IllegalAccessException
const #204 = Asciz	fieldOffset;
const #205 = Asciz	(Ljava/lang/String;)J;
const #206 = Asciz	access$000;
const #207 = Asciz	<clinit>;
const #208 = NameAndType	#201:#199;//  getUnsafePrivileged:()Lsun/misc/Unsafe;
const #209 = NameAndType	#134:#156;//  "<init>":()V
const #210 = Asciz	java/lang/NullPointerException;
const #211 = NameAndType	#102:#103;//  pool:Lscala/actors/forkjoin/ForkJoinPool;
const #212 = NameAndType	#115:#98;//  poolIndex:I
const #213 = NameAndType	#118:#111;//  locallyFifo:Z
const #214 = NameAndType	#112:#98;//  runState:I
const #215 = NameAndType	#149:#150;//  transitionRunStateTo:(I)Z
const #216 = NameAndType	#127:#128;//  _unsafe:Lsun/misc/Unsafe;
const #217 = NameAndType	#131:#117;//  runStateOffset:J
const #218 = NameAndType	#304:#305;//  compareAndSwapInt:(Ljava/lang/Object;JII)Z
const #219 = NameAndType	#110:#111;//  active:Z
const #220 = class	#306;	//  scala/actors/forkjoin/ForkJoinPool
const #221 = NameAndType	#307:#144;//  tryIncrementActiveCount:()Z
const #222 = NameAndType	#308:#144;//  tryDecrementActiveCount:()Z
const #223 = NameAndType	#158:#156;//  onStart:()V
const #224 = NameAndType	#309:#310;//  sync:(Lscala/actors/forkjoin/ForkJoinWorkerThread;)V
const #225 = NameAndType	#157:#156;//  mainLoop:()V
const #226 = NameAndType	#159:#160;//  onTermination:(Ljava/lang/Throwable;)V
const #227 = Asciz	java/lang/Throwable;
const #228 = NameAndType	#143:#144;//  isShutdown:()Z
const #229 = NameAndType	#182:#173;//  pollTask:()Lscala/actors/forkjoin/ForkJoinTask;
const #230 = NameAndType	#184:#173;//  pollSubmission:()Lscala/actors/forkjoin/ForkJoinTask;
const #231 = NameAndType	#311:#156;//  quietlyExec:()V
const #232 = NameAndType	#152:#144;//  tryInactivate:()Z
const #233 = Asciz	scala/actors/forkjoin/ForkJoinTask;
const #234 = NameAndType	#104:#105;//  queue:[Lscala/actors/forkjoin/ForkJoinTask;
const #235 = NameAndType	#113:#98;//  seed:I
const #236 = NameAndType	#145:#144;//  isTerminating:()Z
const #237 = NameAndType	#109:#98;//  base:I
const #238 = NameAndType	#108:#98;//  sp:I
const #239 = NameAndType	#175:#173;//  popTask:()Lscala/actors/forkjoin/ForkJoinTask;
const #240 = NameAndType	#185:#156;//  cancelTasks:()V
const #241 = NameAndType	#312:#310;//  workerTerminated:(Lscala/actors/forkjoin/ForkJoinWorkerThread;)V
const #242 = NameAndType	#313:#160;//  rethrowException:(Ljava/lang/Throwable;)V
const #243 = NameAndType	#133:#98;//  qShift:I
const #244 = NameAndType	#132:#117;//  qBase:J
const #245 = NameAndType	#314:#315;//  putObjectVolatile:(Ljava/lang/Object;JLjava/lang/Object;)V
const #246 = NameAndType	#316:#317;//  compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z
const #247 = NameAndType	#130:#117;//  spOffset:J
const #248 = NameAndType	#318:#319;//  putIntVolatile:(Ljava/lang/Object;JI)V
const #249 = NameAndType	#161:#162;//  setSlot:([Lscala/actors/forkjoin/ForkJoinTask;ILscala/actors/forkjoin/ForkJoinTask;)V
const #250 = NameAndType	#167:#168;//  storeSp:(I)V
const #251 = NameAndType	#320:#156;//  signalWork:()V
const #252 = NameAndType	#180:#156;//  growQueue:()V
const #253 = NameAndType	#164:#165;//  casSlotNull:([Lscala/actors/forkjoin/ForkJoinTask;ILscala/actors/forkjoin/ForkJoinTask;)Z
const #254 = NameAndType	#151:#144;//  tryActivate:()Z
const #255 = Asciz	java/util/concurrent/RejectedExecutionException;
const #256 = Asciz	Queue capacity exceeded;
const #257 = NameAndType	#134:#321;//  "<init>":(Ljava/lang/String;)V
const #258 = NameAndType	#322:#323;//  workers:[Lscala/actors/forkjoin/ForkJoinWorkerThread;
const #259 = NameAndType	#153:#154;//  xorShift:(I)I
const #260 = NameAndType	#172:#173;//  deqTask:()Lscala/actors/forkjoin/ForkJoinTask;
const #261 = NameAndType	#324:#325;//  hasNewSyncEvent:(Lscala/actors/forkjoin/ForkJoinWorkerThread;)Z
const #262 = NameAndType	#181:#173;//  scan:()Lscala/actors/forkjoin/ForkJoinTask;
const #263 = NameAndType	#114:#98;//  stealCount:I
const #264 = NameAndType	#326:#144;//  hasQueuedSubmissions:()Z
const #265 = NameAndType	#327:#156;//  cancelIgnoringExceptions:()V
const #266 = class	#328;	//  java/util/Collection
const #267 = NameAndType	#329:#330;//  add:(Ljava/lang/Object;)Z
const #268 = NameAndType	#331:#140;//  getIdleThreadCount:()I
const #269 = NameAndType	#332:#98;//  status:I
const #270 = NameAndType	#169:#170;//  pushTask:(Lscala/actors/forkjoin/ForkJoinTask;)V
const #271 = NameAndType	#333:#144;//  isQuiescent:()Z
const #272 = NameAndType	#198:#199;//  getUnsafe:()Lsun/misc/Unsafe;
const #273 = Asciz	java/lang/SecurityException;
const #274 = Asciz	scala/actors/forkjoin/ForkJoinWorkerThread$1;
const #275 = Asciz	;
const #276 = Asciz	InnerClasses;
const #277 = class	#334;	//  java/security/AccessController
const #278 = NameAndType	#335:#336;//  doPrivileged:(Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;
const #279 = Asciz	sun/misc/Unsafe;
const #280 = Asciz	java/security/PrivilegedActionException;
const #281 = NameAndType	#337:#338;//  getCause:()Ljava/lang/Throwable;
const #282 = Asciz	theUnsafe;
const #283 = class	#339;	//  java/lang/Class
const #284 = NameAndType	#340:#341;//  getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
const #285 = class	#342;	//  java/lang/reflect/Field
const #286 = NameAndType	#343:#142;//  setAccessible:(Z)V
const #287 = NameAndType	#344:#345;//  get:(Ljava/lang/Object;)Ljava/lang/Object;
const #288 = Asciz	scala/actors/forkjoin/ForkJoinWorkerThread;
const #289 = NameAndType	#346:#347;//  objectFieldOffset:(Ljava/lang/reflect/Field;)J
const #290 = NameAndType	#204:#205;//  fieldOffset:(Ljava/lang/String;)J
const #291 = NameAndType	#129:#117;//  baseOffset:J
const #292 = NameAndType	#348:#349;//  arrayBaseOffset:(Ljava/lang/Class;)I
const #293 = NameAndType	#350:#349;//  arrayIndexScale:(Ljava/lang/Class;)I
const #294 = Asciz	java/lang/Error;
const #295 = Asciz	data type scale not a power of two;
const #296 = class	#351;	//  java/lang/Integer
const #297 = NameAndType	#352:#154;//  numberOfLeadingZeros:(I)I
const #298 = Asciz	java/lang/RuntimeException;
const #299 = Asciz	Could not initialize intrinsics;
const #300 = NameAndType	#134:#353;//  "<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
const #301 = Asciz	java/lang/Thread;
const #302 = Asciz	java/lang/NoSuchFieldException;
const #303 = Asciz	java/lang/IllegalAccessException;
const #304 = Asciz	compareAndSwapInt;
const #305 = Asciz	(Ljava/lang/Object;JII)Z;
const #306 = Asciz	scala/actors/forkjoin/ForkJoinPool;
const #307 = Asciz	tryIncrementActiveCount;
const #308 = Asciz	tryDecrementActiveCount;
const #309 = Asciz	sync;
const #310 = Asciz	(Lscala/actors/forkjoin/ForkJoinWorkerThread;)V;
const #311 = Asciz	quietlyExec;
const #312 = Asciz	workerTerminated;
const #313 = Asciz	rethrowException;
const #314 = Asciz	putObjectVolatile;
const #315 = Asciz	(Ljava/lang/Object;JLjava/lang/Object;)V;
const #316 = Asciz	compareAndSwapObject;
const #317 = Asciz	(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z;
const #318 = Asciz	putIntVolatile;
const #319 = Asciz	(Ljava/lang/Object;JI)V;
const #320 = Asciz	signalWork;
const #321 = Asciz	(Ljava/lang/String;)V;
const #322 = Asciz	workers;
const #323 = Asciz	[Lscala/actors/forkjoin/ForkJoinWorkerThread;;
const #324 = Asciz	hasNewSyncEvent;
const #325 = Asciz	(Lscala/actors/forkjoin/ForkJoinWorkerThread;)Z;
const #326 = Asciz	hasQueuedSubmissions;
const #327 = Asciz	cancelIgnoringExceptions;
const #328 = Asciz	java/util/Collection;
const #329 = Asciz	add;
const #330 = Asciz	(Ljava/lang/Object;)Z;
const #331 = Asciz	getIdleThreadCount;
const #332 = Asciz	status;
const #333 = Asciz	isQuiescent;
const #334 = Asciz	java/security/AccessController;
const #335 = Asciz	doPrivileged;
const #336 = Asciz	(Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;;
const #337 = Asciz	getCause;
const #338 = Asciz	()Ljava/lang/Throwable;;
const #339 = Asciz	java/lang/Class;
const #340 = Asciz	getDeclaredField;
const #341 = Asciz	(Ljava/lang/String;)Ljava/lang/reflect/Field;;
const #342 = Asciz	java/lang/reflect/Field;
const #343 = Asciz	setAccessible;
const #344 = Asciz	get;
const #345 = Asciz	(Ljava/lang/Object;)Ljava/lang/Object;;
const #346 = Asciz	objectFieldOffset;
const #347 = Asciz	(Ljava/lang/reflect/Field;)J;
const #348 = Asciz	arrayBaseOffset;
const #349 = Asciz	(Ljava/lang/Class;)I;
const #350 = Asciz	arrayIndexScale;
const #351 = Asciz	java/lang/Integer;
const #352 = Asciz	numberOfLeadingZeros;
const #353 = Asciz	(Ljava/lang/String;Ljava/lang/Throwable;)V;

{
final scala.actors.forkjoin.ForkJoinPool pool;

int poolIndex;

long lastEventCount;

static final sun.misc.Unsafe _unsafe;

static final long baseOffset;

static final long spOffset;

static final long runStateOffset;

static final long qBase;

static final int qShift;

protected scala.actors.forkjoin.ForkJoinWorkerThread(scala.actors.forkjoin.ForkJoinPool);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	invokespecial	#2; //Method java/lang/Thread."<init>":()V
   4:	aload_1
   5:	ifnonnull	16
   8:	new	#3; //class java/lang/NullPointerException
   11:	dup
   12:	invokespecial	#4; //Method java/lang/NullPointerException."<init>":()V
   15:	athrow
   16:	aload_0
   17:	aload_1
   18:	putfield	#5; //Field pool:Lscala/actors/forkjoin/ForkJoinPool;
   21:	return

public scala.actors.forkjoin.ForkJoinPool getPool();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#5; //Field pool:Lscala/actors/forkjoin/ForkJoinPool;
   4:	areturn

public int getPoolIndex();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#6; //Field poolIndex:I
   4:	ireturn

void setAsyncMode(boolean);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	putfield	#7; //Field locallyFifo:Z
   5:	return

final boolean isShutdown();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#8; //Field runState:I
   4:	iconst_1
   5:	if_icmplt	12
   8:	iconst_1
   9:	goto	13
   12:	iconst_0
   13:	ireturn

final boolean isTerminating();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#8; //Field runState:I
   4:	iconst_2
   5:	if_icmplt	12
   8:	iconst_1
   9:	goto	13
   12:	iconst_0
   13:	ireturn

final boolean isTerminated();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#8; //Field runState:I
   4:	iconst_3
   5:	if_icmpne	12
   8:	iconst_1
   9:	goto	13
   12:	iconst_0
   13:	ireturn

final boolean shutdown();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	iconst_1
   2:	invokespecial	#9; //Method transitionRunStateTo:(I)Z
   5:	ireturn

final boolean shutdownNow();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	iconst_2
   2:	invokespecial	#9; //Method transitionRunStateTo:(I)Z
   5:	ireturn

public void run();
  Code:
   Stack=2, Locals=4, Args_size=1
   0:	aconst_null
   1:	astore_1
   2:	aload_0
   3:	invokevirtual	#16; //Method onStart:()V
   6:	aload_0
   7:	getfield	#5; //Field pool:Lscala/actors/forkjoin/ForkJoinPool;
   10:	aload_0
   11:	invokevirtual	#17; //Method scala/actors/forkjoin/ForkJoinPool.sync:(Lscala/actors/forkjoin/ForkJoinWorkerThread;)V
   14:	aload_0
   15:	invokespecial	#18; //Method mainLoop:()V
   18:	aload_0
   19:	aload_1
   20:	invokevirtual	#19; //Method onTermination:(Ljava/lang/Throwable;)V
   23:	goto	45
   26:	astore_2
   27:	aload_2
   28:	astore_1
   29:	aload_0
   30:	aload_1
   31:	invokevirtual	#19; //Method onTermination:(Ljava/lang/Throwable;)V
   34:	goto	45
   37:	astore_3
   38:	aload_0
   39:	aload_1
   40:	invokevirtual	#19; //Method onTermination:(Ljava/lang/Throwable;)V
   43:	aload_3
   44:	athrow
   45:	return
  Exception table:
   from   to  target type
     2    18    26   Class java/lang/Throwable

     2    18    37   any
    26    29    37   any
    37    38    37   any

protected void onStart();
  Code:
   Stack=4, Locals=2, Args_size=1
   0:	aload_0
   1:	sipush	8192
   4:	anewarray	#26; //class scala/actors/forkjoin/ForkJoinTask
   7:	putfield	#27; //Field queue:[Lscala/actors/forkjoin/ForkJoinTask;
   10:	aload_0
   11:	getfield	#6; //Field poolIndex:I
   14:	iconst_1
   15:	iadd
   16:	istore_1
   17:	aload_0
   18:	iload_1
   19:	iload_1
   20:	bipush	8
   22:	ishl
   23:	iadd
   24:	iload_1
   25:	bipush	16
   27:	ishl
   28:	iadd
   29:	iload_1
   30:	bipush	24
   32:	ishl
   33:	iadd
   34:	putfield	#28; //Field seed:I
   37:	return

protected void onTermination(java.lang.Throwable);
  Code:
   Stack=2, Locals=4, Args_size=2
   0:	aload_1
   1:	ifnonnull	47
   4:	aload_0
   5:	getfield	#5; //Field pool:Lscala/actors/forkjoin/ForkJoinPool;
   8:	invokevirtual	#29; //Method scala/actors/forkjoin/ForkJoinPool.isTerminating:()Z
   11:	ifne	47
   14:	aload_0
   15:	getfield	#30; //Field base:I
   18:	aload_0
   19:	getfield	#31; //Field sp:I
   22:	if_icmpeq	47
   25:	aload_0
   26:	invokevirtual	#32; //Method popTask:()Lscala/actors/forkjoin/ForkJoinTask;
   29:	astore_2
   30:	aload_2
   31:	ifnull	38
   34:	aload_2
   35:	invokevirtual	#24; //Method scala/actors/forkjoin/ForkJoinTask.quietlyExec:()V
   38:	goto	0
   41:	astore_2
   42:	aload_2
   43:	astore_1
   44:	goto	0
   47:	aload_0
   48:	invokespecial	#25; //Method tryInactivate:()Z
   51:	ifeq	47
   54:	aload_0
   55:	invokevirtual	#33; //Method cancelTasks:()V
   58:	aload_0
   59:	iconst_3
   60:	putfield	#8; //Field runState:I
   63:	aload_0
   64:	getfield	#5; //Field pool:Lscala/actors/forkjoin/ForkJoinPool;
   67:	aload_0
   68:	invokevirtual	#34; //Method scala/actors/forkjoin/ForkJoinPool.workerTerminated:(Lscala/actors/forkjoin/ForkJoinWorkerThread;)V
   71:	aload_1
   72:	ifnull	111
   75:	aload_1
   76:	invokestatic	#35; //Method scala/actors/forkjoin/ForkJoinTask.rethrowException:(Ljava/lang/Throwable;)V
   79:	goto	111
   82:	astore_2
   83:	aload_1
   84:	ifnonnull	89
   87:	aload_2
   88:	astore_1
   89:	aload_1
   90:	ifnull	111
   93:	aload_1
   94:	invokestatic	#35; //Method scala/actors/forkjoin/ForkJoinTask.rethrowException:(Ljava/lang/Throwable;)V
   97:	goto	111
   100:	astore_3
   101:	aload_1
   102:	ifnull	109
   105:	aload_1
   106:	invokestatic	#35; //Method scala/actors/forkjoin/ForkJoinTask.rethrowException:(Ljava/lang/Throwable;)V
   109:	aload_3
   110:	athrow
   111:	return
  Exception table:
   from   to  target type
    25    38    41   Class java/lang/Throwable

    47    71    82   Class java/lang/Throwable

    47    71   100   any
    82    89   100   any
   100   101   100   any

final void pushTask(scala.actors.forkjoin.ForkJoinTask);
  Code:
   Stack=3, Locals=5, Args_size=2
   0:	aload_0
   1:	getfield	#27; //Field queue:[Lscala/actors/forkjoin/ForkJoinTask;
   4:	astore_2
   5:	aload_2
   6:	arraylength
   7:	iconst_1
   8:	isub
   9:	istore_3
   10:	aload_0
   11:	getfield	#31; //Field sp:I
   14:	istore	4
   16:	aload_2
   17:	iload	4
   19:	iload_3
   20:	iand
   21:	aload_1
   22:	invokestatic	#42; //Method setSlot:([Lscala/actors/forkjoin/ForkJoinTask;ILscala/actors/forkjoin/ForkJoinTask;)V
   25:	aload_0
   26:	iinc	4, 1
   29:	iload	4
   31:	invokespecial	#43; //Method storeSp:(I)V
   34:	iload	4
   36:	aload_0
   37:	getfield	#30; //Field base:I
   40:	isub
   41:	dup
   42:	istore	4
   44:	iconst_1
   45:	if_icmpne	58
   48:	aload_0
   49:	getfield	#5; //Field pool:Lscala/actors/forkjoin/ForkJoinPool;
   52:	invokevirtual	#44; //Method scala/actors/forkjoin/ForkJoinPool.signalWork:()V
   55:	goto	68
   58:	iload	4
   60:	iload_3
   61:	if_icmplt	68
   64:	aload_0
   65:	invokespecial	#45; //Method growQueue:()V
   68:	return
  Signature: length = 0x2
   00 FFFFFFAB 

final scala.actors.forkjoin.ForkJoinTask deqTask();
  Code:
   Stack=3, Locals=5, Args_size=1
   0:	aload_0
   1:	getfield	#31; //Field sp:I
   4:	aload_0
   5:	getfield	#30; //Field base:I
   8:	dup
   9:	istore	4
   11:	if_icmpeq	58
   14:	aload_0
   15:	getfield	#27; //Field queue:[Lscala/actors/forkjoin/ForkJoinTask;
   18:	dup
   19:	astore_2
   20:	ifnull	58
   23:	aload_2
   24:	aload_2
   25:	arraylength
   26:	iconst_1
   27:	isub
   28:	iload	4
   30:	iand
   31:	dup
   32:	istore_3
   33:	aaload
   34:	dup
   35:	astore_1
   36:	ifnull	58
   39:	aload_2
   40:	iload_3
   41:	aload_1
   42:	invokestatic	#46; //Method casSlotNull:([Lscala/actors/forkjoin/ForkJoinTask;ILscala/actors/forkjoin/ForkJoinTask;)Z
   45:	ifeq	58
   48:	aload_0
   49:	iload	4
   51:	iconst_1
   52:	iadd
   53:	putfield	#30; //Field base:I
   56:	aload_1
   57:	areturn
   58:	aconst_null
   59:	areturn
  Signature: length = 0x2
   00 FFFFFFAE 

final scala.actors.forkjoin.ForkJoinTask popTask();
  Code:
   Stack=3, Locals=6, Args_size=1
   0:	aload_0
   1:	getfield	#31; //Field sp:I
   4:	istore_1
   5:	iload_1
   6:	aload_0
   7:	getfield	#30; //Field base:I
   10:	if_icmpeq	72
   13:	aload_0
   14:	invokespecial	#47; //Method tryActivate:()Z
   17:	ifeq	5
   20:	aload_0
   21:	getfield	#27; //Field queue:[Lscala/actors/forkjoin/ForkJoinTask;
   24:	astore_2
   25:	aload_2
   26:	arraylength
   27:	iconst_1
   28:	isub
   29:	istore_3
   30:	iload_1
   31:	iconst_1
   32:	isub
   33:	iload_3
   34:	iand
   35:	istore	4
   37:	aload_2
   38:	iload	4
   40:	aaload
   41:	astore	5
   43:	aload	5
   45:	ifnull	72
   48:	aload_2
   49:	iload	4
   51:	aload	5
   53:	invokestatic	#46; //Method casSlotNull:([Lscala/actors/forkjoin/ForkJoinTask;ILscala/actors/forkjoin/ForkJoinTask;)Z
   56:	ifne	62
   59:	goto	72
   62:	aload_0
   63:	iload_1
   64:	iconst_1
   65:	isub
   66:	invokespecial	#43; //Method storeSp:(I)V
   69:	aload	5
   71:	areturn
   72:	aconst_null
   73:	areturn
  Signature: length = 0x2
   00 FFFFFFAE 

final boolean unpushTask(scala.actors.forkjoin.ForkJoinTask);
  Code:
   Stack=3, Locals=5, Args_size=2
   0:	aload_0
   1:	getfield	#27; //Field queue:[Lscala/actors/forkjoin/ForkJoinTask;
   4:	astore_2
   5:	aload_2
   6:	arraylength
   7:	iconst_1
   8:	isub
   9:	istore_3
   10:	aload_0
   11:	getfield	#31; //Field sp:I
   14:	iconst_1
   15:	isub
   16:	istore	4
   18:	aload_2
   19:	iload	4
   21:	iload_3
   22:	iand
   23:	aload_1
   24:	invokestatic	#46; //Method casSlotNull:([Lscala/actors/forkjoin/ForkJoinTask;ILscala/actors/forkjoin/ForkJoinTask;)Z
   27:	ifeq	38
   30:	aload_0
   31:	iload	4
   33:	invokespecial	#43; //Method storeSp:(I)V
   36:	iconst_1
   37:	ireturn
   38:	iconst_0
   39:	ireturn
  Signature: length = 0x2
   00 FFFFFFB2 

final scala.actors.forkjoin.ForkJoinTask peekTask();
  Code:
   Stack=3, Locals=4, Args_size=1
   0:	aload_0
   1:	getfield	#27; //Field queue:[Lscala/actors/forkjoin/ForkJoinTask;
   4:	astore_1
   5:	aload_1
   6:	ifnonnull	11
   9:	aconst_null
   10:	areturn
   11:	aload_1
   12:	arraylength
   13:	iconst_1
   14:	isub
   15:	istore_2
   16:	aload_0
   17:	getfield	#7; //Field locallyFifo:Z
   20:	ifeq	30
   23:	aload_0
   24:	getfield	#30; //Field base:I
   27:	goto	36
   30:	aload_0
   31:	getfield	#31; //Field sp:I
   34:	iconst_1
   35:	isub
   36:	istore_3
   37:	aload_1
   38:	iload_3
   39:	iload_2
   40:	iand
   41:	aaload
   42:	areturn
  Signature: length = 0x2
   00 FFFFFFAE 

final scala.actors.forkjoin.ForkJoinTask pollTask();
  Code:
   Stack=3, Locals=2, Args_size=1
   0:	aload_0
   1:	getfield	#7; //Field locallyFifo:Z
   4:	ifeq	14
   7:	aload_0
   8:	invokevirtual	#54; //Method deqTask:()Lscala/actors/forkjoin/ForkJoinTask;
   11:	goto	18
   14:	aload_0
   15:	invokevirtual	#32; //Method popTask:()Lscala/actors/forkjoin/ForkJoinTask;
   18:	astore_1
   19:	aload_1
   20:	ifnonnull	42
   23:	aload_0
   24:	invokespecial	#56; //Method scan:()Lscala/actors/forkjoin/ForkJoinTask;
   27:	dup
   28:	astore_1
   29:	ifnull	42
   32:	aload_0
   33:	dup
   34:	getfield	#57; //Field stealCount:I
   37:	iconst_1
   38:	iadd
   39:	putfield	#57; //Field stealCount:I
   42:	aload_1
   43:	areturn
  Signature: length = 0x2
   00 FFFFFFAE 

final scala.actors.forkjoin.ForkJoinTask pollLocalTask();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#7; //Field locallyFifo:Z
   4:	ifeq	14
   7:	aload_0
   8:	invokevirtual	#54; //Method deqTask:()Lscala/actors/forkjoin/ForkJoinTask;
   11:	goto	18
   14:	aload_0
   15:	invokevirtual	#32; //Method popTask:()Lscala/actors/forkjoin/ForkJoinTask;
   18:	areturn
  Signature: length = 0x2
   00 FFFFFFAE 

final void cancelTasks();
  Code:
   Stack=2, Locals=2, Args_size=1
   0:	aload_0
   1:	getfield	#30; //Field base:I
   4:	aload_0
   5:	getfield	#31; //Field sp:I
   8:	if_icmpeq	27
   11:	aload_0
   12:	invokevirtual	#54; //Method deqTask:()Lscala/actors/forkjoin/ForkJoinTask;
   15:	dup
   16:	astore_1
   17:	ifnull	27
   20:	aload_1
   21:	invokevirtual	#60; //Method scala/actors/forkjoin/ForkJoinTask.cancelIgnoringExceptions:()V
   24:	goto	0
   27:	return

final int drainTasksTo(java.util.Collection);
  Code:
   Stack=2, Locals=4, Args_size=2
   0:	iconst_0
   1:	istore_2
   2:	aload_0
   3:	getfield	#30; //Field base:I
   6:	aload_0
   7:	getfield	#31; //Field sp:I
   10:	if_icmpeq	36
   13:	aload_0
   14:	invokevirtual	#54; //Method deqTask:()Lscala/actors/forkjoin/ForkJoinTask;
   17:	dup
   18:	astore_3
   19:	ifnull	36
   22:	aload_1
   23:	aload_3
   24:	invokeinterface	#61,  2; //InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
   29:	pop
   30:	iinc	2, 1
   33:	goto	2
   36:	iload_2
   37:	ireturn
  Signature: length = 0x2
   00 FFFFFFBC 

final int getAndClearStealCount();
  Code:
   Stack=2, Locals=2, Args_size=1
   0:	aload_0
   1:	getfield	#57; //Field stealCount:I
   4:	istore_1
   5:	aload_0
   6:	iconst_0
   7:	putfield	#57; //Field stealCount:I
   10:	iload_1
   11:	ireturn

static boolean hasQueuedTasks(scala.actors.forkjoin.ForkJoinWorkerThread[]);
  Code:
   Stack=2, Locals=5, Args_size=1
   0:	aload_0
   1:	ifnull	58
   4:	aload_0
   5:	arraylength
   6:	istore_1
   7:	iconst_0
   8:	istore_2
   9:	iload_2
   10:	iconst_2
   11:	if_icmpge	58
   14:	iconst_0
   15:	istore_3
   16:	iload_3
   17:	iload_1
   18:	if_icmpge	52
   21:	aload_0
   22:	iload_3
   23:	aaload
   24:	astore	4
   26:	aload	4
   28:	ifnull	46
   31:	aload	4
   33:	getfield	#31; //Field sp:I
   36:	aload	4
   38:	getfield	#30; //Field base:I
   41:	if_icmpeq	46
   44:	iconst_1
   45:	ireturn
   46:	iinc	3, 1
   49:	goto	16
   52:	iinc	2, 1
   55:	goto	9
   58:	iconst_0
   59:	ireturn

final int getQueueSize();
  Code:
   Stack=2, Locals=2, Args_size=1
   0:	aload_0
   1:	getfield	#31; //Field sp:I
   4:	aload_0
   5:	getfield	#30; //Field base:I
   8:	isub
   9:	istore_1
   10:	iload_1
   11:	ifge	18
   14:	iconst_0
   15:	goto	19
   18:	iload_1
   19:	ireturn

final int getEstimatedSurplusTaskCount();
  Code:
   Stack=3, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#31; //Field sp:I
   4:	aload_0
   5:	getfield	#30; //Field base:I
   8:	isub
   9:	aload_0
   10:	getfield	#5; //Field pool:Lscala/actors/forkjoin/ForkJoinPool;
   13:	invokevirtual	#62; //Method scala/actors/forkjoin/ForkJoinPool.getIdleThreadCount:()I
   16:	iconst_1
   17:	iushr
   18:	isub
   19:	ireturn

final scala.actors.forkjoin.ForkJoinTask scanWhileJoining(scala.actors.forkjoin.ForkJoinTask);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	aload_0
   1:	invokevirtual	#22; //Method pollTask:()Lscala/actors/forkjoin/ForkJoinTask;
   4:	astore_2
   5:	aload_2
   6:	ifnull	34
   9:	aload_1
   10:	getfield	#63; //Field scala/actors/forkjoin/ForkJoinTask.status:I
   13:	ifge	34
   16:	aload_0
   17:	getfield	#31; //Field sp:I
   20:	aload_0
   21:	getfield	#30; //Field base:I
   24:	if_icmpne	34
   27:	aload_0
   28:	aload_2
   29:	invokevirtual	#64; //Method pushTask:(Lscala/actors/forkjoin/ForkJoinTask;)V
   32:	aconst_null
   33:	astore_2
   34:	aload_2
   35:	areturn
  Signature: length = 0x2
   00 FFFFFFC4 

final void helpQuiescePool();
  Code:
   Stack=1, Locals=2, Args_size=1
   0:	aload_0
   1:	invokevirtual	#22; //Method pollTask:()Lscala/actors/forkjoin/ForkJoinTask;
   4:	astore_1
   5:	aload_1
   6:	ifnull	16
   9:	aload_1
   10:	invokevirtual	#24; //Method scala/actors/forkjoin/ForkJoinTask.quietlyExec:()V
   13:	goto	36
   16:	aload_0
   17:	invokespecial	#25; //Method tryInactivate:()Z
   20:	ifeq	36
   23:	aload_0
   24:	getfield	#5; //Field pool:Lscala/actors/forkjoin/ForkJoinPool;
   27:	invokevirtual	#65; //Method scala/actors/forkjoin/ForkJoinPool.isQuiescent:()Z
   30:	ifeq	36
   33:	goto	39
   36:	goto	0
   39:	aload_0
   40:	invokespecial	#47; //Method tryActivate:()Z
   43:	ifeq	39
   46:	return

static sun.misc.Unsafe access$000()   throws java.lang.NoSuchFieldException, java.lang.IllegalAccessException;
  Code:
   Stack=1, Locals=0, Args_size=0
   0:	invokestatic	#1; //Method getUnsafePrivileged:()Lsun/misc/Unsafe;
   3:	areturn
  Exceptions: 
   throws java.lang.NoSuchFieldException, java.lang.IllegalAccessException
static {};
  Code:
   Stack=4, Locals=1, Args_size=0
   0:	invokestatic	#80; //Method getUnsafe:()Lsun/misc/Unsafe;
   3:	putstatic	#10; //Field _unsafe:Lsun/misc/Unsafe;
   6:	ldc	#81; //String base
   8:	invokestatic	#82; //Method fieldOffset:(Ljava/lang/String;)J
   11:	putstatic	#83; //Field baseOffset:J
   14:	ldc	#84; //String sp
   16:	invokestatic	#82; //Method fieldOffset:(Ljava/lang/String;)J
   19:	putstatic	#40; //Field spOffset:J
   22:	ldc	#85; //String runState
   24:	invokestatic	#82; //Method fieldOffset:(Ljava/lang/String;)J
   27:	putstatic	#11; //Field runStateOffset:J
   30:	getstatic	#10; //Field _unsafe:Lsun/misc/Unsafe;
   33:	ldc_w	#86; //class "[Lscala/actors/forkjoin/ForkJoinTask;"
   36:	invokevirtual	#87; //Method sun/misc/Unsafe.arrayBaseOffset:(Ljava/lang/Class;)I
   39:	i2l
   40:	putstatic	#37; //Field qBase:J
   43:	getstatic	#10; //Field _unsafe:Lsun/misc/Unsafe;
   46:	ldc_w	#86; //class "[Lscala/actors/forkjoin/ForkJoinTask;"
   49:	invokevirtual	#88; //Method sun/misc/Unsafe.arrayIndexScale:(Ljava/lang/Class;)I
   52:	istore_0
   53:	iload_0
   54:	iload_0
   55:	iconst_1
   56:	isub
   57:	iand
   58:	ifeq	71
   61:	new	#89; //class java/lang/Error
   64:	dup
   65:	ldc	#90; //String data type scale not a power of two
   67:	invokespecial	#91; //Method java/lang/Error."<init>":(Ljava/lang/String;)V
   70:	athrow
   71:	bipush	31
   73:	iload_0
   74:	invokestatic	#92; //Method java/lang/Integer.numberOfLeadingZeros:(I)I
   77:	isub
   78:	putstatic	#36; //Field qShift:I
   81:	goto	96
   84:	astore_0
   85:	new	#93; //class java/lang/RuntimeException
   88:	dup
   89:	ldc	#94; //String Could not initialize intrinsics
   91:	aload_0
   92:	invokespecial	#95; //Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
   95:	athrow
   96:	return
  Exception table:
   from   to  target type
     0    81    84   Class java/lang/Throwable


}

