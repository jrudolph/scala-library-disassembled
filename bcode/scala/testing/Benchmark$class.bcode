Compiled from "Benchmark.scala"
public abstract class scala.testing.Benchmark$class extends java.lang.Object
  SourceFile: "Benchmark.scala"
  Scala: length = 0x
   
  InnerClass: 
   public final #134= #53 of #8; //$anonfun$main$1=class scala/testing/Benchmark$$anonfun$main$1 of class scala/testing/Benchmark
   public final #135= #115 of #8; //$anonfun$runBenchmark$1=class scala/testing/Benchmark$$anonfun$runBenchmark$1 of class scala/testing/Benchmark
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Benchmark.scala;
const #3 = Asciz	$init$;
const #4 = Asciz	(Lscala/testing/Benchmark;)V;
const #5 = Asciz	Code;
const #6 = Asciz	LineNumberTable;
const #7 = Asciz	scala/testing/Benchmark;
const #8 = class	#7;	//  scala/testing/Benchmark
const #9 = Asciz	multiplier_$eq;
const #10 = Asciz	(I)V;
const #11 = NameAndType	#9:#10;//  multiplier_$eq:(I)V
const #12 = InterfaceMethod	#8.#11;	//  scala/testing/Benchmark.multiplier_$eq:(I)V
const #13 = Asciz	$this;
const #14 = Asciz	Lscala/testing/Benchmark;;
const #15 = Asciz	LocalVariableTable;
const #16 = Asciz	main;
const #17 = Asciz	(Lscala/testing/Benchmark;[Ljava/lang/String;)V;
const #18 = Asciz	java/io/FileWriter;
const #19 = class	#18;	//  java/io/FileWriter
const #20 = Asciz	<init>;
const #21 = Asciz	(Ljava/lang/String;Z)V;
const #22 = NameAndType	#20:#21;//  "<init>":(Ljava/lang/String;Z)V
const #23 = Method	#19.#22;	//  java/io/FileWriter."<init>":(Ljava/lang/String;Z)V
const #24 = Asciz	scala/Predef$;
const #25 = class	#24;	//  scala/Predef$
const #26 = Asciz	MODULE$;
const #27 = Asciz	Lscala/Predef$;;
const #28 = NameAndType	#26:#27;//  MODULE$:Lscala/Predef$;
const #29 = Field	#25.#28;	//  scala/Predef$.MODULE$:Lscala/Predef$;
const #30 = Asciz	stringWrapper;
const #31 = Asciz	(Ljava/lang/String;)Lscala/runtime/RichString;;
const #32 = NameAndType	#30:#31;//  stringWrapper:(Ljava/lang/String;)Lscala/runtime/RichString;
const #33 = Method	#25.#32;	//  scala/Predef$.stringWrapper:(Ljava/lang/String;)Lscala/runtime/RichString;
const #34 = Asciz	scala/runtime/RichString;
const #35 = class	#34;	//  scala/runtime/RichString
const #36 = Asciz	toInt;
const #37 = Asciz	()I;
const #38 = NameAndType	#36:#37;//  toInt:()I
const #39 = Method	#35.#38;	//  scala/runtime/RichString.toInt:()I
const #40 = Asciz	prefix;
const #41 = Asciz	()Ljava/lang/String;;
const #42 = NameAndType	#40:#41;//  prefix:()Ljava/lang/String;
const #43 = InterfaceMethod	#8.#42;	//  scala/testing/Benchmark.prefix:()Ljava/lang/String;
const #44 = Asciz	write;
const #45 = Asciz	(Ljava/lang/String;)V;
const #46 = NameAndType	#44:#45;//  write:(Ljava/lang/String;)V
const #47 = Method	#19.#46;	//  java/io/FileWriter.write:(Ljava/lang/String;)V
const #48 = Asciz	runBenchmark;
const #49 = Asciz	(I)Lscala/collection/immutable/List;;
const #50 = NameAndType	#48:#49;//  runBenchmark:(I)Lscala/collection/immutable/List;
const #51 = InterfaceMethod	#8.#50;	//  scala/testing/Benchmark.runBenchmark:(I)Lscala/collection/immutable/List;
const #52 = Asciz	scala/testing/Benchmark$$anonfun$main$1;
const #53 = class	#52;	//  scala/testing/Benchmark$$anonfun$main$1
const #54 = Asciz	(Lscala/testing/Benchmark;Ljava/io/FileWriter;)V;
const #55 = NameAndType	#20:#54;//  "<init>":(Lscala/testing/Benchmark;Ljava/io/FileWriter;)V
const #56 = Method	#53.#55;	//  scala/testing/Benchmark$$anonfun$main$1."<init>":(Lscala/testing/Benchmark;Ljava/io/FileWriter;)V
const #57 = Asciz	scala/collection/generic/LinearSequenceTemplate;
const #58 = class	#57;	//  scala/collection/generic/LinearSequenceTemplate
const #59 = Asciz	foreach;
const #60 = Asciz	(Lscala/Function1;)V;
const #61 = NameAndType	#59:#60;//  foreach:(Lscala/Function1;)V
const #62 = InterfaceMethod	#58.#61;	//  scala/collection/generic/LinearSequenceTemplate.foreach:(Lscala/Function1;)V
const #63 = Asciz	scala/compat/Platform$;
const #64 = class	#63;	//  scala/compat/Platform$
const #65 = Asciz	Lscala/compat/Platform$;;
const #66 = NameAndType	#26:#65;//  MODULE$:Lscala/compat/Platform$;
const #67 = Field	#64.#66;	//  scala/compat/Platform$.MODULE$:Lscala/compat/Platform$;
const #68 = Asciz	EOL;
const #69 = NameAndType	#68:#41;//  EOL:()Ljava/lang/String;
const #70 = Method	#64.#69;	//  scala/compat/Platform$.EOL:()Ljava/lang/String;
const #71 = Asciz	flush;
const #72 = Asciz	()V;
const #73 = NameAndType	#71:#72;//  flush:()V
const #74 = Method	#19.#73;	//  java/io/FileWriter.flush:()V
const #75 = Asciz	scala/Console$;
const #76 = class	#75;	//  scala/Console$
const #77 = Asciz	Lscala/Console$;;
const #78 = NameAndType	#26:#77;//  MODULE$:Lscala/Console$;
const #79 = Field	#76.#78;	//  scala/Console$.MODULE$:Lscala/Console$;
const #80 = Asciz	Usage: scala benchmarks.program <runs> <logfile>;
const #81 = String	#80;	//  Usage: scala benchmarks.program <runs> <logfile>
const #82 = Asciz	println;
const #83 = Asciz	(Ljava/lang/Object;)V;
const #84 = NameAndType	#82:#83;//  println:(Ljava/lang/Object;)V
const #85 = Method	#76.#84;	//  scala/Console$.println:(Ljava/lang/Object;)V
const #86 = Asciz	   or: scala benchmarks.program <runs> <logfile> <multiplier>;
const #87 = String	#86;	//     or: scala benchmarks.program <runs> <logfile> <multiplier>
const #88 = Asciz	args;
const #89 = Asciz	[Ljava/lang/String;;
const #90 = Asciz	logFile$1;
const #91 = Asciz	Ljava/io/FileWriter;;
const #92 = Asciz	(Lscala/testing/Benchmark;)Ljava/lang/String;;
const #93 = Asciz	java/lang/Object;
const #94 = class	#93;	//  java/lang/Object
const #95 = Asciz	getClass;
const #96 = Asciz	()Ljava/lang/Class;;
const #97 = NameAndType	#95:#96;//  getClass:()Ljava/lang/Class;
const #98 = Method	#94.#97;	//  java/lang/Object.getClass:()Ljava/lang/Class;
const #99 = Asciz	java/lang/Class;
const #100 = class	#99;	//  java/lang/Class
const #101 = Asciz	getName;
const #102 = NameAndType	#101:#41;//  getName:()Ljava/lang/String;
const #103 = Method	#100.#102;	//  java/lang/Class.getName:()Ljava/lang/String;
const #104 = Asciz	(Lscala/testing/Benchmark;I)Lscala/collection/immutable/List;;
const #105 = Asciz	scala/collection/immutable/List$;
const #106 = class	#105;	//  scala/collection/immutable/List$
const #107 = Asciz	Lscala/collection/immutable/List$;;
const #108 = NameAndType	#26:#107;//  MODULE$:Lscala/collection/immutable/List$;
const #109 = Field	#106.#108;	//  scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
const #110 = Asciz	range;
const #111 = Asciz	(II)Lscala/collection/Traversable;;
const #112 = NameAndType	#110:#111;//  range:(II)Lscala/collection/Traversable;
const #113 = Method	#106.#112;	//  scala/collection/immutable/List$.range:(II)Lscala/collection/Traversable;
const #114 = Asciz	scala/testing/Benchmark$$anonfun$runBenchmark$1;
const #115 = class	#114;	//  scala/testing/Benchmark$$anonfun$runBenchmark$1
const #116 = NameAndType	#20:#4;//  "<init>":(Lscala/testing/Benchmark;)V
const #117 = Method	#115.#116;	//  scala/testing/Benchmark$$anonfun$runBenchmark$1."<init>":(Lscala/testing/Benchmark;)V
const #118 = Asciz	builderFactory;
const #119 = Asciz	()Lscala/collection/generic/BuilderFactory;;
const #120 = NameAndType	#118:#119;//  builderFactory:()Lscala/collection/generic/BuilderFactory;
const #121 = Method	#106.#120;	//  scala/collection/immutable/List$.builderFactory:()Lscala/collection/generic/BuilderFactory;
const #122 = Asciz	scala/collection/generic/TraversableTemplate;
const #123 = class	#122;	//  scala/collection/generic/TraversableTemplate
const #124 = Asciz	map;
const #125 = Asciz	(Lscala/Function1;Lscala/collection/generic/BuilderFactory;)Ljava/lang/Object;;
const #126 = NameAndType	#124:#125;//  map:(Lscala/Function1;Lscala/collection/generic/BuilderFactory;)Ljava/lang/Object;
const #127 = InterfaceMethod	#123.#126;	//  scala/collection/generic/TraversableTemplate.map:(Lscala/Function1;Lscala/collection/generic/BuilderFactory;)Ljava/lang/Object;
const #128 = Asciz	scala/collection/immutable/List;
const #129 = class	#128;	//  scala/collection/immutable/List
const #130 = Asciz	noTimes;
const #131 = Asciz	I;
const #132 = Asciz	Scala;
const #133 = Asciz	InnerClasses;
const #134 = Asciz	$anonfun$main$1;
const #135 = Asciz	$anonfun$runBenchmark$1;
const #136 = Asciz	scala/testing/Benchmark$class;
const #137 = class	#136;	//  scala/testing/Benchmark$class

{
public static void $init$(scala.testing.Benchmark);
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	iconst_1
   2:	invokeinterface	#12,  2; //InterfaceMethod scala/testing/Benchmark.multiplier_$eq:(I)V
   7:	return
  LineNumberTable: 
   line 45: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      8      0    $this       Lscala/testing/Benchmark;


public static void main(scala.testing.Benchmark, java.lang.String[]);
  Code:
   Stack=5, Locals=3, Args_size=2
   0:	aload_1
   1:	arraylength
   2:	iconst_1
   3:	if_icmple	101
   6:	new	#19; //class java/io/FileWriter
   9:	dup
   10:	aload_1
   11:	iconst_1
   12:	aaload
   13:	iconst_1
   14:	invokespecial	#23; //Method java/io/FileWriter."<init>":(Ljava/lang/String;Z)V
   17:	astore_2
   18:	aload_1
   19:	arraylength
   20:	iconst_3
   21:	if_icmplt	42
   24:	aload_0
   25:	getstatic	#29; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   28:	aload_1
   29:	iconst_2
   30:	aaload
   31:	invokevirtual	#33; //Method scala/Predef$.stringWrapper:(Ljava/lang/String;)Lscala/runtime/RichString;
   34:	invokevirtual	#39; //Method scala/runtime/RichString.toInt:()I
   37:	invokeinterface	#12,  2; //InterfaceMethod scala/testing/Benchmark.multiplier_$eq:(I)V
   42:	aload_2
   43:	aload_0
   44:	invokeinterface	#43,  1; //InterfaceMethod scala/testing/Benchmark.prefix:()Ljava/lang/String;
   49:	invokevirtual	#47; //Method java/io/FileWriter.write:(Ljava/lang/String;)V
   52:	aload_0
   53:	getstatic	#29; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   56:	aload_1
   57:	iconst_0
   58:	aaload
   59:	invokevirtual	#33; //Method scala/Predef$.stringWrapper:(Ljava/lang/String;)Lscala/runtime/RichString;
   62:	invokevirtual	#39; //Method scala/runtime/RichString.toInt:()I
   65:	invokeinterface	#51,  2; //InterfaceMethod scala/testing/Benchmark.runBenchmark:(I)Lscala/collection/immutable/List;
   70:	new	#53; //class scala/testing/Benchmark$$anonfun$main$1
   73:	dup
   74:	aload_0
   75:	aload_2
   76:	invokespecial	#56; //Method scala/testing/Benchmark$$anonfun$main$1."<init>":(Lscala/testing/Benchmark;Ljava/io/FileWriter;)V
   79:	invokeinterface	#62,  2; //InterfaceMethod scala/collection/generic/LinearSequenceTemplate.foreach:(Lscala/Function1;)V
   84:	aload_2
   85:	getstatic	#67; //Field scala/compat/Platform$.MODULE$:Lscala/compat/Platform$;
   88:	invokevirtual	#70; //Method scala/compat/Platform$.EOL:()Ljava/lang/String;
   91:	invokevirtual	#47; //Method java/io/FileWriter.write:(Ljava/lang/String;)V
   94:	aload_2
   95:	invokevirtual	#74; //Method java/io/FileWriter.flush:()V
   98:	goto	117
   101:	getstatic	#79; //Field scala/Console$.MODULE$:Lscala/Console$;
   104:	ldc	#81; //String Usage: scala benchmarks.program <runs> <logfile>
   106:	invokevirtual	#85; //Method scala/Console$.println:(Ljava/lang/Object;)V
   109:	getstatic	#79; //Field scala/Console$.MODULE$:Lscala/Console$;
   112:	ldc	#87; //String    or: scala benchmarks.program <runs> <logfile> <multiplier>
   114:	invokevirtual	#85; //Method scala/Console$.println:(Ljava/lang/Object;)V
   117:	return
  LineNumberTable: 
   line 81: 0
   line 82: 6
   line 83: 18
   line 84: 24
   line 85: 42
   line 86: 52
   line 89: 84
   line 90: 94
   line 92: 101
   line 93: 109
   line 81: 117

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      118      0    $this       Lscala/testing/Benchmark;
   0      118      1    args       [Ljava/lang/String;
   18      80      2    logFile$1       Ljava/io/FileWriter;


public static java.lang.String prefix(scala.testing.Benchmark);
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#98; //Method java/lang/Object.getClass:()Ljava/lang/Class;
   4:	invokevirtual	#103; //Method java/lang/Class.getName:()Ljava/lang/String;
   7:	areturn
  LineNumberTable: 
   line 70: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      8      0    $this       Lscala/testing/Benchmark;


public static scala.collection.immutable.List runBenchmark(scala.testing.Benchmark, int);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	getstatic	#109; //Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
   3:	iconst_1
   4:	iload_1
   5:	iconst_1
   6:	iadd
   7:	invokevirtual	#113; //Method scala/collection/immutable/List$.range:(II)Lscala/collection/Traversable;
   10:	new	#115; //class scala/testing/Benchmark$$anonfun$runBenchmark$1
   13:	dup
   14:	aload_0
   15:	invokespecial	#117; //Method scala/testing/Benchmark$$anonfun$runBenchmark$1."<init>":(Lscala/testing/Benchmark;)V
   18:	getstatic	#109; //Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
   21:	invokevirtual	#121; //Method scala/collection/immutable/List$.builderFactory:()Lscala/collection/generic/BuilderFactory;
   24:	invokeinterface	#127,  3; //InterfaceMethod scala/collection/generic/TraversableTemplate.map:(Lscala/Function1;Lscala/collection/generic/BuilderFactory;)Ljava/lang/Object;
   29:	checkcast	#129; //class scala/collection/immutable/List
   32:	areturn
  LineNumberTable: 
   line 55: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      33      0    $this       Lscala/testing/Benchmark;
   0      33      1    noTimes       I


}

