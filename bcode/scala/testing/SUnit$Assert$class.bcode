Compiled from "SUnit.scala"
public abstract class scala.testing.SUnit$Assert$class extends java.lang.Object
  SourceFile: "SUnit.scala"
  Scala: length = 0x
   
  InnerClass: 
   public abstract Assert=class scala/testing/SUnit$Assert of class scala/testing/SUnit
   public AssertFailed=class scala/testing/SUnit$AssertFailed of class scala/testing/SUnit
   public final $anonfun$assertSameElementsXML$1=class scala/testing/SUnit$Assert$$anonfun$assertSameElementsXML$1 of class scala/testing/SUnit$Assert
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	SUnit.scala;
Asciz	enableStackTrace;
Asciz	(Lscala/testing/SUnit$Assert;)Z;
Asciz	Code;
Asciz	LineNumberTable;
Asciz	$this;
Asciz	Lscala/testing/SUnit$Assert;;
Asciz	LocalVariableTable;
Asciz	assertSameElements;
Asciz	(Lscala/testing/SUnit$Assert;Lscala/collection/Seq;Lscala/collection/Seq;)V;
Asciz	scala/collection/IterableLike;
class	scala/collection/IterableLike
Asciz	sameElements;
Asciz	(Lscala/collection/Iterable;)Z;
NameAndType	sameElements:(Lscala/collection/Iterable;)Z
InterfaceMethod	scala/collection/IterableLike.sameElements:(Lscala/collection/Iterable;)Z
Asciz	(no message);
String	(no message)
Asciz	scala/collection/SeqLike;
class	scala/collection/SeqLike
Asciz	toString;
Asciz	()Ljava/lang/String;;
NameAndType	toString:()Ljava/lang/String;
InterfaceMethod	scala/collection/SeqLike.toString:()Ljava/lang/String;
Asciz	scala/testing/SUnit$Assert;
class	scala/testing/SUnit$Assert
Asciz	fail;
Asciz	(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V;
NameAndType	fail:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
InterfaceMethod	scala/testing/SUnit$Assert.fail:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
Asciz	actual;
Asciz	Lscala/collection/Seq;;
Asciz	expected;
Asciz	assertEquals;
Asciz	(Lscala/testing/SUnit$Assert;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V;
Asciz	scala/runtime/BoxesRunTime;
class	scala/runtime/BoxesRunTime
Asciz	equals;
Asciz	(Ljava/lang/Object;Ljava/lang/Object;)Z;
NameAndType	equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
Method	scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
Asciz	msg;
Asciz	Ljava/lang/String;;
Asciz	Ljava/lang/Object;;
Asciz	(Lscala/testing/SUnit$Assert;Ljava/lang/Object;Ljava/lang/Object;)V;
NameAndType	assertEquals:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
InterfaceMethod	scala/testing/SUnit$Assert.assertEquals:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
Asciz	assertFalse;
Asciz	(Lscala/testing/SUnit$Assert;Ljava/lang/String;Z)V;
Asciz	boxToBoolean;
Asciz	(Z)Ljava/lang/Boolean;;
NameAndType	boxToBoolean:(Z)Ljava/lang/Boolean;
Method	scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
Asciz	Z;
Asciz	(Lscala/testing/SUnit$Assert;Z)V;
Asciz	(Ljava/lang/String;Z)V;
NameAndType	assertFalse:(Ljava/lang/String;Z)V
InterfaceMethod	scala/testing/SUnit$Assert.assertFalse:(Ljava/lang/String;Z)V
Asciz	assertNotNull;
Asciz	(Lscala/testing/SUnit$Assert;Ljava/lang/String;Ljava/lang/Object;)V;
Asciz	(Ljava/lang/String;)V;
NameAndType	fail:(Ljava/lang/String;)V
InterfaceMethod	scala/testing/SUnit$Assert.fail:(Ljava/lang/String;)V
Asciz	(Lscala/testing/SUnit$Assert;Ljava/lang/Object;)V;
Asciz	(Ljava/lang/String;Ljava/lang/Object;)V;
NameAndType	assertNotNull:(Ljava/lang/String;Ljava/lang/Object;)V
InterfaceMethod	scala/testing/SUnit$Assert.assertNotNull:(Ljava/lang/String;Ljava/lang/Object;)V
Asciz	assertNotEq;
NameAndType	assertNotEq:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
InterfaceMethod	scala/testing/SUnit$Assert.assertNotEq:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
Asciz	assertNull;
NameAndType	assertNull:(Ljava/lang/String;Ljava/lang/Object;)V
InterfaceMethod	scala/testing/SUnit$Assert.assertNull:(Ljava/lang/String;Ljava/lang/Object;)V
Asciz	assertEq;
NameAndType	assertEq:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
InterfaceMethod	scala/testing/SUnit$Assert.assertEq:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
Asciz	assertTrue;
NameAndType	assertTrue:(Ljava/lang/String;Z)V
InterfaceMethod	scala/testing/SUnit$Assert.assertTrue:(Ljava/lang/String;Z)V
Asciz	assertEqualsXML;
Asciz	(Lscala/testing/SUnit$Assert;Ljava/lang/String;Lscala/xml/NodeSeq;Lscala/xml/NodeSeq;)V;
Asciz	scala/xml/Equality;
class	scala/xml/Equality
Asciz	xml_$eq$eq;
Asciz	(Ljava/lang/Object;)Z;
NameAndType	xml_$eq$eq:(Ljava/lang/Object;)Z
InterfaceMethod	scala/xml/Equality.xml_$eq$eq:(Ljava/lang/Object;)Z
Asciz	Lscala/xml/NodeSeq;;
Asciz	(Lscala/testing/SUnit$Assert;Ljava/lang/String;Lscala/collection/Seq;Lscala/collection/Seq;)V;
Asciz	scala/xml/NodeSeq$;
class	scala/xml/NodeSeq$
Asciz	MODULE$;
Asciz	Lscala/xml/NodeSeq$;;
NameAndType	MODULE$:Lscala/xml/NodeSeq$;
Field	scala/xml/NodeSeq$.MODULE$:Lscala/xml/NodeSeq$;
Asciz	seqToNodeSeq;
Asciz	(Lscala/collection/Seq;)Lscala/xml/NodeSeq;;
NameAndType	seqToNodeSeq:(Lscala/collection/Seq;)Lscala/xml/NodeSeq;
Method	scala/xml/NodeSeq$.seqToNodeSeq:(Lscala/collection/Seq;)Lscala/xml/NodeSeq;
Asciz	(Ljava/lang/String;Lscala/xml/NodeSeq;Lscala/xml/NodeSeq;)V;
NameAndType	assertEqualsXML:(Ljava/lang/String;Lscala/xml/NodeSeq;Lscala/xml/NodeSeq;)V
InterfaceMethod	scala/testing/SUnit$Assert.assertEqualsXML:(Ljava/lang/String;Lscala/xml/NodeSeq;Lscala/xml/NodeSeq;)V
Asciz	(Lscala/testing/SUnit$Assert;Lscala/xml/NodeSeq;Lscala/xml/NodeSeq;)V;
Asciz	assertSameElementsXML;
Asciz	scala/xml/NodeSeq;
class	scala/xml/NodeSeq
Asciz	xml_sameElements;
NameAndType	xml_sameElements:(Lscala/collection/Iterable;)Z
Method	scala/xml/NodeSeq.xml_sameElements:(Lscala/collection/Iterable;)Z
Asciz	scala/Predef$;
class	scala/Predef$
Asciz	Lscala/Predef$;;
NameAndType	MODULE$:Lscala/Predef$;
Field	scala/Predef$.MODULE$:Lscala/Predef$;
Asciz	scala/testing/SUnit$Assert$$anonfun$assertSameElementsXML$1;
class	scala/testing/SUnit$Assert$$anonfun$assertSameElementsXML$1
Asciz	<init>;
NameAndType	"<init>":(Lscala/testing/SUnit$Assert;Lscala/collection/Seq;Lscala/collection/Seq;)V
Method	scala/testing/SUnit$Assert$$anonfun$assertSameElementsXML$1."<init>":(Lscala/testing/SUnit$Assert;Lscala/collection/Seq;Lscala/collection/Seq;)V
Asciz	assert;
Asciz	(ZLscala/Function0;)V;
NameAndType	assert:(ZLscala/Function0;)V
Method	scala/Predef$.assert:(ZLscala/Function0;)V
Asciz	actual$1;
Asciz	expected$1;
Asciz	res;
Asciz	(Lscala/testing/SUnit$Assert;Ljava/lang/String;)V;
Asciz	scala/testing/SUnit$AssertFailed;
class	scala/testing/SUnit$AssertFailed
Asciz	()Z;
NameAndType	enableStackTrace:()Z
InterfaceMethod	scala/testing/SUnit$Assert.enableStackTrace:()Z
NameAndType	"<init>":(Ljava/lang/String;Z)V
Method	scala/testing/SUnit$AssertFailed."<init>":(Ljava/lang/String;Z)V
Asciz	scala/collection/mutable/StringBuilder;
class	scala/collection/mutable/StringBuilder
Asciz	()V;
NameAndType	"<init>":()V
Method	scala/collection/mutable/StringBuilder."<init>":()V
Asciz	append;
Asciz	(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;;
NameAndType	append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
Method	scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
Asciz	, expected: ;
String	, expected: 
Asciz	, actual: ;
String	, actual: 
Method	scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
Asciz	$init$;
Asciz	(Lscala/testing/SUnit$Assert;)V;
Asciz	Scala;
Asciz	InnerClasses;
Asciz	scala/testing/SUnit;
class	scala/testing/SUnit
Asciz	Assert;
Asciz	AssertFailed;
Asciz	$anonfun$assertSameElementsXML$1;
Asciz	scala/testing/SUnit$Assert$class;
class	scala/testing/SUnit$Assert$class
Asciz	java/lang/Object;
class	java/lang/Object

{
public static boolean enableStackTrace(scala.testing.SUnit$Assert);
  Signature: (Lscala/testing/SUnit$Assert;)Z
  Code:
   Stack=1, Locals=1, Args_size=1
	iconst_1
	ireturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      2      0    $this       Lscala/testing/SUnit$Assert;


public static void assertSameElements(scala.testing.SUnit$Assert, scala.collection.Seq, scala.collection.Seq);
  Signature: (Lscala/testing/SUnit$Assert;Lscala/collection/Seq;Lscala/collection/Seq;)V
  Code:
   Stack=4, Locals=3, Args_size=3
	aload_1
	aload_2
	invokeinterface	InterfaceMethod scala/collection/IterableLike.sameElements:(Lscala/collection/Iterable;)Z
	ifne	l1 // return
	aload_0
	ldc	String (no message)
	aload_1
	invokeinterface	InterfaceMethod scala/collection/SeqLike.toString:()Ljava/lang/String;
	aload_2
	invokeinterface	InterfaceMethod scala/collection/SeqLike.toString:()Ljava/lang/String;
	invokeinterface	InterfaceMethod scala/testing/SUnit$Assert.fail:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
l1	return
  Labels:
   	l1 = 30 // return
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      31      0    $this       Lscala/testing/SUnit$Assert;
   0      31      1    actual       Lscala/collection/Seq;
   0      31      2    expected       Lscala/collection/Seq;


public static void assertEquals(scala.testing.SUnit$Assert, java.lang.String, java.lang.Object, java.lang.Object);
  Signature: (Lscala/testing/SUnit$Assert;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
  Code:
   Stack=4, Locals=4, Args_size=4
	aload_2
	aload_3
	invokestatic	Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
	ifne	l1 // return
	aload_0
	aload_1
	aload_2
	aload_3
	invokeinterface	InterfaceMethod scala/testing/SUnit$Assert.fail:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
l1	return
  Labels:
   	l1 = 17 // return
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      18      0    $this       Lscala/testing/SUnit$Assert;
   0      18      1    msg       Ljava/lang/String;
   0      18      2    expected       Ljava/lang/Object;
   0      18      3    actual       Ljava/lang/Object;


public static void assertEquals(scala.testing.SUnit$Assert, java.lang.Object, java.lang.Object);
  Signature: (Lscala/testing/SUnit$Assert;Ljava/lang/Object;Ljava/lang/Object;)V
  Code:
   Stack=4, Locals=3, Args_size=3
	aload_0
	ldc	String (no message)
	aload_1
	aload_2
	invokeinterface	InterfaceMethod scala/testing/SUnit$Assert.assertEquals:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      11      0    $this       Lscala/testing/SUnit$Assert;
   0      11      1    expected       Ljava/lang/Object;
   0      11      2    actual       Ljava/lang/Object;


public static void assertFalse(scala.testing.SUnit$Assert, java.lang.String, boolean);
  Signature: (Lscala/testing/SUnit$Assert;Ljava/lang/String;Z)V
  Code:
   Stack=4, Locals=3, Args_size=3
	aload_0
	aload_1
	iconst_0
	invokestatic	Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
	iload_2
	invokestatic	Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
	invokeinterface	InterfaceMethod scala/testing/SUnit$Assert.assertEquals:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      16      0    $this       Lscala/testing/SUnit$Assert;
   0      16      1    msg       Ljava/lang/String;
   0      16      2    actual       Z


public static void assertFalse(scala.testing.SUnit$Assert, boolean);
  Signature: (Lscala/testing/SUnit$Assert;Z)V
  Code:
   Stack=3, Locals=2, Args_size=2
	aload_0
	ldc	String (no message)
	iload_1
	invokeinterface	InterfaceMethod scala/testing/SUnit$Assert.assertFalse:(Ljava/lang/String;Z)V
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    $this       Lscala/testing/SUnit$Assert;
   0      10      1    actual       Z


public static void assertNotNull(scala.testing.SUnit$Assert, java.lang.String, java.lang.Object);
  Signature: (Lscala/testing/SUnit$Assert;Ljava/lang/String;Ljava/lang/Object;)V
  Code:
   Stack=2, Locals=3, Args_size=3
	aload_2
	ifnonnull	l1 // return
	aload_0
	aload_1
	invokeinterface	InterfaceMethod scala/testing/SUnit$Assert.fail:(Ljava/lang/String;)V
l1	return
  Labels:
   	l1 = 11 // return
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      12      0    $this       Lscala/testing/SUnit$Assert;
   0      12      1    msg       Ljava/lang/String;
   0      12      2    actual       Ljava/lang/Object;


public static void assertNotNull(scala.testing.SUnit$Assert, java.lang.Object);
  Signature: (Lscala/testing/SUnit$Assert;Ljava/lang/Object;)V
  Code:
   Stack=3, Locals=2, Args_size=2
	aload_0
	ldc	String (no message)
	aload_1
	invokeinterface	InterfaceMethod scala/testing/SUnit$Assert.assertNotNull:(Ljava/lang/String;Ljava/lang/Object;)V
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    $this       Lscala/testing/SUnit$Assert;
   0      10      1    actual       Ljava/lang/Object;


public static void assertNotEq(scala.testing.SUnit$Assert, java.lang.String, java.lang.Object, java.lang.Object);
  Signature: (Lscala/testing/SUnit$Assert;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
  Code:
   Stack=2, Locals=4, Args_size=4
	aload_2
	aload_3
	if_acmpne	l1 // return
	aload_0
	aload_1
	invokeinterface	InterfaceMethod scala/testing/SUnit$Assert.fail:(Ljava/lang/String;)V
l1	return
  Labels:
   	l1 = 12 // return
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      13      0    $this       Lscala/testing/SUnit$Assert;
   0      13      1    msg       Ljava/lang/String;
   0      13      2    expected       Ljava/lang/Object;
   0      13      3    actual       Ljava/lang/Object;


public static void assertNotEq(scala.testing.SUnit$Assert, java.lang.Object, java.lang.Object);
  Signature: (Lscala/testing/SUnit$Assert;Ljava/lang/Object;Ljava/lang/Object;)V
  Code:
   Stack=4, Locals=3, Args_size=3
	aload_0
	ldc	String (no message)
	aload_1
	aload_2
	invokeinterface	InterfaceMethod scala/testing/SUnit$Assert.assertNotEq:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      11      0    $this       Lscala/testing/SUnit$Assert;
   0      11      1    expected       Ljava/lang/Object;
   0      11      2    actual       Ljava/lang/Object;


public static void assertNull(scala.testing.SUnit$Assert, java.lang.String, java.lang.Object);
  Signature: (Lscala/testing/SUnit$Assert;Ljava/lang/String;Ljava/lang/Object;)V
  Code:
   Stack=2, Locals=3, Args_size=3
	aload_2
	ifnull	l1 // return
	aload_0
	aload_1
	invokeinterface	InterfaceMethod scala/testing/SUnit$Assert.fail:(Ljava/lang/String;)V
l1	return
  Labels:
   	l1 = 11 // return
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      12      0    $this       Lscala/testing/SUnit$Assert;
   0      12      1    msg       Ljava/lang/String;
   0      12      2    actual       Ljava/lang/Object;


public static void assertNull(scala.testing.SUnit$Assert, java.lang.Object);
  Signature: (Lscala/testing/SUnit$Assert;Ljava/lang/Object;)V
  Code:
   Stack=3, Locals=2, Args_size=2
	aload_0
	ldc	String (no message)
	aload_1
	invokeinterface	InterfaceMethod scala/testing/SUnit$Assert.assertNull:(Ljava/lang/String;Ljava/lang/Object;)V
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    $this       Lscala/testing/SUnit$Assert;
   0      10      1    actual       Ljava/lang/Object;


public static void assertEq(scala.testing.SUnit$Assert, java.lang.String, java.lang.Object, java.lang.Object);
  Signature: (Lscala/testing/SUnit$Assert;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
  Code:
   Stack=2, Locals=4, Args_size=4
	aload_2
	aload_3
	if_acmpeq	l1 // return
	aload_0
	aload_1
	invokeinterface	InterfaceMethod scala/testing/SUnit$Assert.fail:(Ljava/lang/String;)V
l1	return
  Labels:
   	l1 = 12 // return
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      13      0    $this       Lscala/testing/SUnit$Assert;
   0      13      1    msg       Ljava/lang/String;
   0      13      2    expected       Ljava/lang/Object;
   0      13      3    actual       Ljava/lang/Object;


public static void assertEq(scala.testing.SUnit$Assert, java.lang.Object, java.lang.Object);
  Signature: (Lscala/testing/SUnit$Assert;Ljava/lang/Object;Ljava/lang/Object;)V
  Code:
   Stack=4, Locals=3, Args_size=3
	aload_0
	ldc	String (no message)
	aload_1
	aload_2
	invokeinterface	InterfaceMethod scala/testing/SUnit$Assert.assertEq:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      11      0    $this       Lscala/testing/SUnit$Assert;
   0      11      1    expected       Ljava/lang/Object;
   0      11      2    actual       Ljava/lang/Object;


public static void assertTrue(scala.testing.SUnit$Assert, java.lang.String, boolean);
  Signature: (Lscala/testing/SUnit$Assert;Ljava/lang/String;Z)V
  Code:
   Stack=4, Locals=3, Args_size=3
	aload_0
	aload_1
	iconst_1
	invokestatic	Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
	iload_2
	invokestatic	Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
	invokeinterface	InterfaceMethod scala/testing/SUnit$Assert.assertEquals:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      16      0    $this       Lscala/testing/SUnit$Assert;
   0      16      1    msg       Ljava/lang/String;
   0      16      2    actual       Z


public static void assertTrue(scala.testing.SUnit$Assert, boolean);
  Signature: (Lscala/testing/SUnit$Assert;Z)V
  Code:
   Stack=3, Locals=2, Args_size=2
	aload_0
	ldc	String (no message)
	iload_1
	invokeinterface	InterfaceMethod scala/testing/SUnit$Assert.assertTrue:(Ljava/lang/String;Z)V
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    $this       Lscala/testing/SUnit$Assert;
   0      10      1    actual       Z


public static void assertEqualsXML(scala.testing.SUnit$Assert, java.lang.String, scala.xml.NodeSeq, scala.xml.NodeSeq);
  Signature: (Lscala/testing/SUnit$Assert;Ljava/lang/String;Lscala/xml/NodeSeq;Lscala/xml/NodeSeq;)V
  Code:
   Stack=4, Locals=4, Args_size=4
	aload_2
	aload_3
	invokeinterface	InterfaceMethod scala/xml/Equality.xml_$eq$eq:(Ljava/lang/Object;)Z
	ifne	l1 // return
	aload_0
	aload_1
	aload_2
	aload_3
	invokeinterface	InterfaceMethod scala/testing/SUnit$Assert.fail:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
l1	return
  Labels:
   	l1 = 19 // return
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      20      0    $this       Lscala/testing/SUnit$Assert;
   0      20      1    msg       Ljava/lang/String;
   0      20      2    expected       Lscala/xml/NodeSeq;
   0      20      3    actual       Lscala/xml/NodeSeq;


public static void assertEqualsXML(scala.testing.SUnit$Assert, java.lang.String, scala.collection.Seq, scala.collection.Seq);
  Signature: (Lscala/testing/SUnit$Assert;Ljava/lang/String;Lscala/collection/Seq;Lscala/collection/Seq;)V
  Code:
   Stack=5, Locals=4, Args_size=4
	aload_0
	aload_1
	getstatic	Field scala/xml/NodeSeq$.MODULE$:Lscala/xml/NodeSeq$;
	aload_2
	invokevirtual	Method scala/xml/NodeSeq$.seqToNodeSeq:(Lscala/collection/Seq;)Lscala/xml/NodeSeq;
	getstatic	Field scala/xml/NodeSeq$.MODULE$:Lscala/xml/NodeSeq$;
	aload_3
	invokevirtual	Method scala/xml/NodeSeq$.seqToNodeSeq:(Lscala/collection/Seq;)Lscala/xml/NodeSeq;
	invokeinterface	InterfaceMethod scala/testing/SUnit$Assert.assertEqualsXML:(Ljava/lang/String;Lscala/xml/NodeSeq;Lscala/xml/NodeSeq;)V
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      22      0    $this       Lscala/testing/SUnit$Assert;
   0      22      1    msg       Ljava/lang/String;
   0      22      2    expected       Lscala/collection/Seq;
   0      22      3    actual       Lscala/collection/Seq;


public static void assertEqualsXML(scala.testing.SUnit$Assert, scala.xml.NodeSeq, scala.xml.NodeSeq);
  Signature: (Lscala/testing/SUnit$Assert;Lscala/xml/NodeSeq;Lscala/xml/NodeSeq;)V
  Code:
   Stack=4, Locals=3, Args_size=3
	aload_0
	ldc	String (no message)
	aload_1
	aload_2
	invokeinterface	InterfaceMethod scala/testing/SUnit$Assert.assertEqualsXML:(Ljava/lang/String;Lscala/xml/NodeSeq;Lscala/xml/NodeSeq;)V
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      11      0    $this       Lscala/testing/SUnit$Assert;
   0      11      1    expected       Lscala/xml/NodeSeq;
   0      11      2    actual       Lscala/xml/NodeSeq;


public static void assertSameElementsXML(scala.testing.SUnit$Assert, scala.collection.Seq, scala.collection.Seq);
  Signature: (Lscala/testing/SUnit$Assert;Lscala/collection/Seq;Lscala/collection/Seq;)V
  Code:
   Stack=7, Locals=4, Args_size=3
	getstatic	Field scala/xml/NodeSeq$.MODULE$:Lscala/xml/NodeSeq$;
	aload_1
	invokevirtual	Method scala/xml/NodeSeq$.seqToNodeSeq:(Lscala/collection/Seq;)Lscala/xml/NodeSeq;
	aload_2
	invokevirtual	Method scala/xml/NodeSeq.xml_sameElements:(Lscala/collection/Iterable;)Z
	istore_3
	getstatic	Field scala/Predef$.MODULE$:Lscala/Predef$;
	iload_3
	new	class scala/testing/SUnit$Assert$$anonfun$assertSameElementsXML$1
	dup
	aload_0
	aload_1
	aload_2
	invokespecial	Method scala/testing/SUnit$Assert$$anonfun$assertSameElementsXML$1."<init>":(Lscala/testing/SUnit$Assert;Lscala/collection/Seq;Lscala/collection/Seq;)V
	invokevirtual	Method scala/Predef$.assert:(ZLscala/Function0;)V
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      30      0    $this       Lscala/testing/SUnit$Assert;
   0      30      1    actual$1       Lscala/collection/Seq;
   0      30      2    expected$1       Lscala/collection/Seq;
   12      17      3    res       Z


public static void fail(scala.testing.SUnit$Assert, java.lang.String);
  Signature: (Lscala/testing/SUnit$Assert;Ljava/lang/String;)V
  Code:
   Stack=4, Locals=2, Args_size=2
	new	class scala/testing/SUnit$AssertFailed
	dup
	aload_1
	aload_0
	invokeinterface	InterfaceMethod scala/testing/SUnit$Assert.enableStackTrace:()Z
	invokespecial	Method scala/testing/SUnit$AssertFailed."<init>":(Ljava/lang/String;Z)V
	athrow
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      15      0    $this       Lscala/testing/SUnit$Assert;
   0      15      1    msg       Ljava/lang/String;


public static void fail(scala.testing.SUnit$Assert, java.lang.String, java.lang.Object, java.lang.Object);
  Signature: (Lscala/testing/SUnit$Assert;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
  Code:
   Stack=4, Locals=4, Args_size=4
	new	class scala/testing/SUnit$AssertFailed
	dup
	new	class scala/collection/mutable/StringBuilder
	dup
	invokespecial	Method scala/collection/mutable/StringBuilder."<init>":()V
	aload_1
	invokevirtual	Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
	ldc	String , expected: 
	invokevirtual	Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
	aload_2
	invokevirtual	Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
	ldc	String , actual: 
	invokevirtual	Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
	aload_3
	invokevirtual	Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
	invokevirtual	Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
	aload_0
	invokeinterface	InterfaceMethod scala/testing/SUnit$Assert.enableStackTrace:()Z
	invokespecial	Method scala/testing/SUnit$AssertFailed."<init>":(Ljava/lang/String;Z)V
	athrow
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      46      0    $this       Lscala/testing/SUnit$Assert;
   0      46      1    msg       Ljava/lang/String;
   0      46      2    expected       Ljava/lang/Object;
   0      46      3    actual       Ljava/lang/Object;


public static void $init$(scala.testing.SUnit$Assert);
  Signature: (Lscala/testing/SUnit$Assert;)V
  Code:
   Stack=0, Locals=1, Args_size=1
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      1      0    $this       Lscala/testing/SUnit$Assert;


}

