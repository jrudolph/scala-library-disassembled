Compiled from "SUnit.scala"
public abstract class scala.testing.SUnit$Assert$class extends java.lang.Object
  SourceFile: "SUnit.scala"
  Scala: length = 0x
   
  InnerClass: 
   public abstract #110= #33 of #109; //Assert=class scala/testing/SUnit$Assert of class scala/testing/SUnit
   public #111= #13 of #109; //AssertFailed=class scala/testing/SUnit$AssertFailed of class scala/testing/SUnit
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	SUnit.scala;
const #3 = Asciz	$init$;
const #4 = Asciz	(Lscala/testing/SUnit$Assert;)V;
const #5 = Asciz	Code;
const #6 = Asciz	LineNumberTable;
const #7 = Asciz	$this;
const #8 = Asciz	Lscala/testing/SUnit$Assert;;
const #9 = Asciz	LocalVariableTable;
const #10 = Asciz	fail;
const #11 = Asciz	(Lscala/testing/SUnit$Assert;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V;
const #12 = Asciz	scala/testing/SUnit$AssertFailed;
const #13 = class	#12;	//  scala/testing/SUnit$AssertFailed
const #14 = Asciz	scala/collection/mutable/StringBuilder;
const #15 = class	#14;	//  scala/collection/mutable/StringBuilder
const #16 = Asciz	<init>;
const #17 = Asciz	()V;
const #18 = NameAndType	#16:#17;//  "<init>":()V
const #19 = Method	#15.#18;	//  scala/collection/mutable/StringBuilder."<init>":()V
const #20 = Asciz	append;
const #21 = Asciz	(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;;
const #22 = NameAndType	#20:#21;//  append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
const #23 = Method	#15.#22;	//  scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
const #24 = Asciz	, expected: ;
const #25 = String	#24;	//  , expected: 
const #26 = Asciz	, actual: ;
const #27 = String	#26;	//  , actual: 
const #28 = Asciz	toString;
const #29 = Asciz	()Ljava/lang/String;;
const #30 = NameAndType	#28:#29;//  toString:()Ljava/lang/String;
const #31 = Method	#15.#30;	//  scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
const #32 = Asciz	scala/testing/SUnit$Assert;
const #33 = class	#32;	//  scala/testing/SUnit$Assert
const #34 = Asciz	enableStackTrace;
const #35 = Asciz	()Z;
const #36 = NameAndType	#34:#35;//  enableStackTrace:()Z
const #37 = InterfaceMethod	#33.#36;	//  scala/testing/SUnit$Assert.enableStackTrace:()Z
const #38 = Asciz	(Ljava/lang/String;Z)V;
const #39 = NameAndType	#16:#38;//  "<init>":(Ljava/lang/String;Z)V
const #40 = Method	#13.#39;	//  scala/testing/SUnit$AssertFailed."<init>":(Ljava/lang/String;Z)V
const #41 = Asciz	msg;
const #42 = Asciz	Ljava/lang/String;;
const #43 = Asciz	expected;
const #44 = Asciz	Ljava/lang/Object;;
const #45 = Asciz	actual;
const #46 = Asciz	(Lscala/testing/SUnit$Assert;Ljava/lang/String;)V;
const #47 = Asciz	assertTrue;
const #48 = Asciz	(Lscala/testing/SUnit$Assert;Z)V;
const #49 = Asciz	(no message);
const #50 = String	#49;	//  (no message)
const #51 = NameAndType	#47:#38;//  assertTrue:(Ljava/lang/String;Z)V
const #52 = InterfaceMethod	#33.#51;	//  scala/testing/SUnit$Assert.assertTrue:(Ljava/lang/String;Z)V
const #53 = Asciz	Z;
const #54 = Asciz	(Lscala/testing/SUnit$Assert;Ljava/lang/String;Z)V;
const #55 = Asciz	scala/runtime/BoxesRunTime;
const #56 = class	#55;	//  scala/runtime/BoxesRunTime
const #57 = Asciz	boxToBoolean;
const #58 = Asciz	(Z)Ljava/lang/Boolean;;
const #59 = NameAndType	#57:#58;//  boxToBoolean:(Z)Ljava/lang/Boolean;
const #60 = Method	#56.#59;	//  scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
const #61 = Asciz	assertEquals;
const #62 = Asciz	(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V;
const #63 = NameAndType	#61:#62;//  assertEquals:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
const #64 = InterfaceMethod	#33.#63;	//  scala/testing/SUnit$Assert.assertEquals:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
const #65 = Asciz	assertEq;
const #66 = Asciz	(Lscala/testing/SUnit$Assert;Ljava/lang/Object;Ljava/lang/Object;)V;
const #67 = NameAndType	#65:#62;//  assertEq:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
const #68 = InterfaceMethod	#33.#67;	//  scala/testing/SUnit$Assert.assertEq:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
const #69 = Asciz	(Ljava/lang/String;)V;
const #70 = NameAndType	#10:#69;//  fail:(Ljava/lang/String;)V
const #71 = InterfaceMethod	#33.#70;	//  scala/testing/SUnit$Assert.fail:(Ljava/lang/String;)V
const #72 = Asciz	assertNull;
const #73 = Asciz	(Lscala/testing/SUnit$Assert;Ljava/lang/Object;)V;
const #74 = Asciz	(Ljava/lang/String;Ljava/lang/Object;)V;
const #75 = NameAndType	#72:#74;//  assertNull:(Ljava/lang/String;Ljava/lang/Object;)V
const #76 = InterfaceMethod	#33.#75;	//  scala/testing/SUnit$Assert.assertNull:(Ljava/lang/String;Ljava/lang/Object;)V
const #77 = Asciz	(Lscala/testing/SUnit$Assert;Ljava/lang/String;Ljava/lang/Object;)V;
const #78 = Asciz	assertNotEq;
const #79 = NameAndType	#78:#62;//  assertNotEq:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
const #80 = InterfaceMethod	#33.#79;	//  scala/testing/SUnit$Assert.assertNotEq:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
const #81 = Asciz	assertNotNull;
const #82 = NameAndType	#81:#74;//  assertNotNull:(Ljava/lang/String;Ljava/lang/Object;)V
const #83 = InterfaceMethod	#33.#82;	//  scala/testing/SUnit$Assert.assertNotNull:(Ljava/lang/String;Ljava/lang/Object;)V
const #84 = Asciz	assertFalse;
const #85 = NameAndType	#84:#38;//  assertFalse:(Ljava/lang/String;Z)V
const #86 = InterfaceMethod	#33.#85;	//  scala/testing/SUnit$Assert.assertFalse:(Ljava/lang/String;Z)V
const #87 = Asciz	equals;
const #88 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)Z;
const #89 = NameAndType	#87:#88;//  equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
const #90 = Method	#56.#89;	//  scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
const #91 = NameAndType	#10:#62;//  fail:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
const #92 = InterfaceMethod	#33.#91;	//  scala/testing/SUnit$Assert.fail:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
const #93 = Asciz	assertSameElements;
const #94 = Asciz	(Lscala/testing/SUnit$Assert;Lscala/collection/Sequence;Lscala/collection/Sequence;)V;
const #95 = Asciz	scala/collection/generic/IterableTemplate;
const #96 = class	#95;	//  scala/collection/generic/IterableTemplate
const #97 = Asciz	sameElements;
const #98 = Asciz	(Lscala/collection/Iterable;)Z;
const #99 = NameAndType	#97:#98;//  sameElements:(Lscala/collection/Iterable;)Z
const #100 = InterfaceMethod	#96.#99;	//  scala/collection/generic/IterableTemplate.sameElements:(Lscala/collection/Iterable;)Z
const #101 = Asciz	scala/collection/generic/SequenceTemplate;
const #102 = class	#101;	//  scala/collection/generic/SequenceTemplate
const #103 = InterfaceMethod	#102.#30;	//  scala/collection/generic/SequenceTemplate.toString:()Ljava/lang/String;
const #104 = Asciz	Lscala/collection/Sequence;;
const #105 = Asciz	(Lscala/testing/SUnit$Assert;)Z;
const #106 = Asciz	Scala;
const #107 = Asciz	InnerClasses;
const #108 = Asciz	scala/testing/SUnit;
const #109 = class	#108;	//  scala/testing/SUnit
const #110 = Asciz	Assert;
const #111 = Asciz	AssertFailed;
const #112 = Asciz	scala/testing/SUnit$Assert$class;
const #113 = class	#112;	//  scala/testing/SUnit$Assert$class
const #114 = Asciz	java/lang/Object;
const #115 = class	#114;	//  java/lang/Object

{
public static void $init$(scala.testing.SUnit$Assert);
  Code:
   Stack=0, Locals=1, Args_size=1
   0:	return
  LineNumberTable: 
   line 164: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      1      0    $this       Lscala/testing/SUnit$Assert;


public static void fail(scala.testing.SUnit$Assert, java.lang.String, java.lang.Object, java.lang.Object);
  Code:
   Stack=4, Locals=4, Args_size=4
   0:	new	#13; //class scala/testing/SUnit$AssertFailed
   3:	dup
   4:	new	#15; //class scala/collection/mutable/StringBuilder
   7:	dup
   8:	invokespecial	#19; //Method scala/collection/mutable/StringBuilder."<init>":()V
   11:	aload_1
   12:	invokevirtual	#23; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   15:	ldc	#25; //String , expected: 
   17:	invokevirtual	#23; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   20:	aload_2
   21:	invokevirtual	#23; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   24:	ldc	#27; //String , actual: 
   26:	invokevirtual	#23; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   29:	aload_3
   30:	invokevirtual	#23; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   33:	invokevirtual	#31; //Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
   36:	aload_0
   37:	invokeinterface	#37,  1; //InterfaceMethod scala/testing/SUnit$Assert.enableStackTrace:()Z
   42:	invokespecial	#40; //Method scala/testing/SUnit$AssertFailed."<init>":(Ljava/lang/String;Z)V
   45:	athrow
  LineNumberTable: 
   line 250: 0
   line 252: 4
   line 250: 11
   line 251: 15
   line 252: 24
   line 250: 42

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      46      0    $this       Lscala/testing/SUnit$Assert;
   0      46      1    msg       Ljava/lang/String;
   0      46      2    expected       Ljava/lang/Object;
   0      46      3    actual       Ljava/lang/Object;


public static void fail(scala.testing.SUnit$Assert, java.lang.String);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#13; //class scala/testing/SUnit$AssertFailed
   3:	dup
   4:	aload_1
   5:	aload_0
   6:	invokeinterface	#37,  1; //InterfaceMethod scala/testing/SUnit$Assert.enableStackTrace:()Z
   11:	invokespecial	#40; //Method scala/testing/SUnit$AssertFailed."<init>":(Ljava/lang/String;Z)V
   14:	athrow
  LineNumberTable: 
   line 246: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      15      0    $this       Lscala/testing/SUnit$Assert;
   0      15      1    msg       Ljava/lang/String;


public static void assertTrue(scala.testing.SUnit$Assert, boolean);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	aload_0
   1:	ldc	#50; //String (no message)
   3:	iload_1
   4:	invokeinterface	#52,  3; //InterfaceMethod scala/testing/SUnit$Assert.assertTrue:(Ljava/lang/String;Z)V
   9:	return
  LineNumberTable: 
   line 240: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    $this       Lscala/testing/SUnit$Assert;
   0      10      1    actual       Z


public static void assertTrue(scala.testing.SUnit$Assert, java.lang.String, boolean);
  Code:
   Stack=4, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	iconst_1
   3:	invokestatic	#60; //Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
   6:	iload_2
   7:	invokestatic	#60; //Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
   10:	invokeinterface	#64,  4; //InterfaceMethod scala/testing/SUnit$Assert.assertEquals:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
   15:	return
  LineNumberTable: 
   line 235: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      16      0    $this       Lscala/testing/SUnit$Assert;
   0      16      1    msg       Ljava/lang/String;
   0      16      2    actual       Z


public static void assertEq(scala.testing.SUnit$Assert, java.lang.Object, java.lang.Object);
  Code:
   Stack=4, Locals=3, Args_size=3
   0:	aload_0
   1:	ldc	#50; //String (no message)
   3:	aload_1
   4:	aload_2
   5:	invokeinterface	#68,  4; //InterfaceMethod scala/testing/SUnit$Assert.assertEq:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
   10:	return
  LineNumberTable: 
   line 230: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      11      0    $this       Lscala/testing/SUnit$Assert;
   0      11      1    expected       Ljava/lang/Object;
   0      11      2    actual       Ljava/lang/Object;


public static void assertEq(scala.testing.SUnit$Assert, java.lang.String, java.lang.Object, java.lang.Object);
  Code:
   Stack=2, Locals=4, Args_size=4
   0:	aload_2
   1:	aload_3
   2:	if_acmpeq	12
   5:	aload_0
   6:	aload_1
   7:	invokeinterface	#71,  2; //InterfaceMethod scala/testing/SUnit$Assert.fail:(Ljava/lang/String;)V
   12:	return
  LineNumberTable: 
   line 225: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      13      0    $this       Lscala/testing/SUnit$Assert;
   0      13      1    msg       Ljava/lang/String;
   0      13      2    expected       Ljava/lang/Object;
   0      13      3    actual       Ljava/lang/Object;


public static void assertNull(scala.testing.SUnit$Assert, java.lang.Object);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	aload_0
   1:	ldc	#50; //String (no message)
   3:	aload_1
   4:	invokeinterface	#76,  3; //InterfaceMethod scala/testing/SUnit$Assert.assertNull:(Ljava/lang/String;Ljava/lang/Object;)V
   9:	return
  LineNumberTable: 
   line 220: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    $this       Lscala/testing/SUnit$Assert;
   0      10      1    actual       Ljava/lang/Object;


public static void assertNull(scala.testing.SUnit$Assert, java.lang.String, java.lang.Object);
  Code:
   Stack=2, Locals=3, Args_size=3
   0:	aload_2
   1:	ifnull	11
   4:	aload_0
   5:	aload_1
   6:	invokeinterface	#71,  2; //InterfaceMethod scala/testing/SUnit$Assert.fail:(Ljava/lang/String;)V
   11:	return
  LineNumberTable: 
   line 215: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      12      0    $this       Lscala/testing/SUnit$Assert;
   0      12      1    msg       Ljava/lang/String;
   0      12      2    actual       Ljava/lang/Object;


public static void assertNotEq(scala.testing.SUnit$Assert, java.lang.Object, java.lang.Object);
  Code:
   Stack=4, Locals=3, Args_size=3
   0:	aload_0
   1:	ldc	#50; //String (no message)
   3:	aload_1
   4:	aload_2
   5:	invokeinterface	#80,  4; //InterfaceMethod scala/testing/SUnit$Assert.assertNotEq:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
   10:	return
  LineNumberTable: 
   line 210: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      11      0    $this       Lscala/testing/SUnit$Assert;
   0      11      1    expected       Ljava/lang/Object;
   0      11      2    actual       Ljava/lang/Object;


public static void assertNotEq(scala.testing.SUnit$Assert, java.lang.String, java.lang.Object, java.lang.Object);
  Code:
   Stack=2, Locals=4, Args_size=4
   0:	aload_2
   1:	aload_3
   2:	if_acmpne	12
   5:	aload_0
   6:	aload_1
   7:	invokeinterface	#71,  2; //InterfaceMethod scala/testing/SUnit$Assert.fail:(Ljava/lang/String;)V
   12:	return
  LineNumberTable: 
   line 205: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      13      0    $this       Lscala/testing/SUnit$Assert;
   0      13      1    msg       Ljava/lang/String;
   0      13      2    expected       Ljava/lang/Object;
   0      13      3    actual       Ljava/lang/Object;


public static void assertNotNull(scala.testing.SUnit$Assert, java.lang.Object);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	aload_0
   1:	ldc	#50; //String (no message)
   3:	aload_1
   4:	invokeinterface	#83,  3; //InterfaceMethod scala/testing/SUnit$Assert.assertNotNull:(Ljava/lang/String;Ljava/lang/Object;)V
   9:	return
  LineNumberTable: 
   line 201: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    $this       Lscala/testing/SUnit$Assert;
   0      10      1    actual       Ljava/lang/Object;


public static void assertNotNull(scala.testing.SUnit$Assert, java.lang.String, java.lang.Object);
  Code:
   Stack=2, Locals=3, Args_size=3
   0:	aload_2
   1:	ifnonnull	11
   4:	aload_0
   5:	aload_1
   6:	invokeinterface	#71,  2; //InterfaceMethod scala/testing/SUnit$Assert.fail:(Ljava/lang/String;)V
   11:	return
  LineNumberTable: 
   line 196: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      12      0    $this       Lscala/testing/SUnit$Assert;
   0      12      1    msg       Ljava/lang/String;
   0      12      2    actual       Ljava/lang/Object;


public static void assertFalse(scala.testing.SUnit$Assert, boolean);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	aload_0
   1:	ldc	#50; //String (no message)
   3:	iload_1
   4:	invokeinterface	#86,  3; //InterfaceMethod scala/testing/SUnit$Assert.assertFalse:(Ljava/lang/String;Z)V
   9:	return
  LineNumberTable: 
   line 191: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    $this       Lscala/testing/SUnit$Assert;
   0      10      1    actual       Z


public static void assertFalse(scala.testing.SUnit$Assert, java.lang.String, boolean);
  Code:
   Stack=4, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	iconst_0
   3:	invokestatic	#60; //Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
   6:	iload_2
   7:	invokestatic	#60; //Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
   10:	invokeinterface	#64,  4; //InterfaceMethod scala/testing/SUnit$Assert.assertEquals:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
   15:	return
  LineNumberTable: 
   line 186: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      16      0    $this       Lscala/testing/SUnit$Assert;
   0      16      1    msg       Ljava/lang/String;
   0      16      2    actual       Z


public static void assertEquals(scala.testing.SUnit$Assert, java.lang.Object, java.lang.Object);
  Code:
   Stack=4, Locals=3, Args_size=3
   0:	aload_0
   1:	ldc	#50; //String (no message)
   3:	aload_1
   4:	aload_2
   5:	invokeinterface	#64,  4; //InterfaceMethod scala/testing/SUnit$Assert.assertEquals:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
   10:	return
  LineNumberTable: 
   line 181: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      11      0    $this       Lscala/testing/SUnit$Assert;
   0      11      1    expected       Ljava/lang/Object;
   0      11      2    actual       Ljava/lang/Object;


public static void assertEquals(scala.testing.SUnit$Assert, java.lang.String, java.lang.Object, java.lang.Object);
  Code:
   Stack=4, Locals=4, Args_size=4
   0:	aload_2
   1:	aload_3
   2:	invokestatic	#90; //Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
   5:	ifne	17
   8:	aload_0
   9:	aload_1
   10:	aload_2
   11:	aload_3
   12:	invokeinterface	#92,  4; //InterfaceMethod scala/testing/SUnit$Assert.fail:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
   17:	return
  LineNumberTable: 
   line 176: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      18      0    $this       Lscala/testing/SUnit$Assert;
   0      18      1    msg       Ljava/lang/String;
   0      18      2    expected       Ljava/lang/Object;
   0      18      3    actual       Ljava/lang/Object;


public static void assertSameElements(scala.testing.SUnit$Assert, scala.collection.Sequence, scala.collection.Sequence);
  Code:
   Stack=4, Locals=3, Args_size=3
   0:	aload_1
   1:	aload_2
   2:	invokeinterface	#100,  2; //InterfaceMethod scala/collection/generic/IterableTemplate.sameElements:(Lscala/collection/Iterable;)Z
   7:	ifne	30
   10:	aload_0
   11:	ldc	#50; //String (no message)
   13:	aload_1
   14:	invokeinterface	#103,  1; //InterfaceMethod scala/collection/generic/SequenceTemplate.toString:()Ljava/lang/String;
   19:	aload_2
   20:	invokeinterface	#103,  1; //InterfaceMethod scala/collection/generic/SequenceTemplate.toString:()Ljava/lang/String;
   25:	invokeinterface	#92,  4; //InterfaceMethod scala/testing/SUnit$Assert.fail:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
   30:	return
  LineNumberTable: 
   line 170: 0
   line 171: 10
   line 170: 30

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      31      0    $this       Lscala/testing/SUnit$Assert;
   0      31      1    actual       Lscala/collection/Sequence;
   0      31      2    expected       Lscala/collection/Sequence;


public static boolean enableStackTrace(scala.testing.SUnit$Assert);
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	iconst_1
   1:	ireturn
  LineNumberTable: 
   line 166: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      2      0    $this       Lscala/testing/SUnit$Assert;


}

