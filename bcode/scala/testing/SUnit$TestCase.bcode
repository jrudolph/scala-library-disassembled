Compiled from "SUnit.scala"
public abstract class scala.testing.SUnit$TestCase extends java.lang.Object implements scala.testing.SUnit$Test,scala.testing.SUnit$Assert,scala.ScalaObject
  SourceFile: "SUnit.scala"
  Scala: length = 0x
   
  InnerClass: 
   public abstract Test=class scala/testing/SUnit$Test of class scala/testing/SUnit
   public abstract Assert=class scala/testing/SUnit$Assert of class scala/testing/SUnit
   public abstract TestCase=class scala/testing/SUnit$TestCase of class scala/testing/SUnit
   public TestResult=class scala/testing/SUnit$TestResult of class scala/testing/SUnit
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	SUnit.scala;
Asciz	name;
Asciz	Ljava/lang/String;;
Asciz	enableStackTrace;
Asciz	()Z;
Asciz	Code;
Asciz	LineNumberTable;
Asciz	scala/testing/SUnit$Assert$class;
class	scala/testing/SUnit$Assert$class
Asciz	(Lscala/testing/SUnit$Assert;)Z;
NameAndType	enableStackTrace:(Lscala/testing/SUnit$Assert;)Z
Method	scala/testing/SUnit$Assert$class.enableStackTrace:(Lscala/testing/SUnit$Assert;)Z
Asciz	assertSameElements;
Asciz	(Lscala/collection/Seq;Lscala/collection/Seq;)V;
Asciz	(Lscala/testing/SUnit$Assert;Lscala/collection/Seq;Lscala/collection/Seq;)V;
NameAndType	assertSameElements:(Lscala/testing/SUnit$Assert;Lscala/collection/Seq;Lscala/collection/Seq;)V
Method	scala/testing/SUnit$Assert$class.assertSameElements:(Lscala/testing/SUnit$Assert;Lscala/collection/Seq;Lscala/collection/Seq;)V
Asciz	this;
Asciz	Lscala/testing/SUnit$TestCase;;
Asciz	actual;
Asciz	Lscala/collection/Seq;;
Asciz	expected;
Asciz	LocalVariableTable;
Asciz	assertEquals;
Asciz	(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V;
Asciz	(Lscala/testing/SUnit$Assert;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V;
NameAndType	assertEquals:(Lscala/testing/SUnit$Assert;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
Method	scala/testing/SUnit$Assert$class.assertEquals:(Lscala/testing/SUnit$Assert;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
Asciz	msg;
Asciz	Ljava/lang/Object;;
Asciz	(Ljava/lang/Object;Ljava/lang/Object;)V;
Asciz	(Lscala/testing/SUnit$Assert;Ljava/lang/Object;Ljava/lang/Object;)V;
NameAndType	assertEquals:(Lscala/testing/SUnit$Assert;Ljava/lang/Object;Ljava/lang/Object;)V
Method	scala/testing/SUnit$Assert$class.assertEquals:(Lscala/testing/SUnit$Assert;Ljava/lang/Object;Ljava/lang/Object;)V
Asciz	assertFalse;
Asciz	(Ljava/lang/String;Z)V;
Asciz	(Lscala/testing/SUnit$Assert;Ljava/lang/String;Z)V;
NameAndType	assertFalse:(Lscala/testing/SUnit$Assert;Ljava/lang/String;Z)V
Method	scala/testing/SUnit$Assert$class.assertFalse:(Lscala/testing/SUnit$Assert;Ljava/lang/String;Z)V
Asciz	Z;
Asciz	(Z)V;
Asciz	(Lscala/testing/SUnit$Assert;Z)V;
NameAndType	assertFalse:(Lscala/testing/SUnit$Assert;Z)V
Method	scala/testing/SUnit$Assert$class.assertFalse:(Lscala/testing/SUnit$Assert;Z)V
Asciz	assertNotNull;
Asciz	(Ljava/lang/String;Ljava/lang/Object;)V;
Asciz	(Lscala/testing/SUnit$Assert;Ljava/lang/String;Ljava/lang/Object;)V;
NameAndType	assertNotNull:(Lscala/testing/SUnit$Assert;Ljava/lang/String;Ljava/lang/Object;)V
Method	scala/testing/SUnit$Assert$class.assertNotNull:(Lscala/testing/SUnit$Assert;Ljava/lang/String;Ljava/lang/Object;)V
Asciz	(Ljava/lang/Object;)V;
Asciz	(Lscala/testing/SUnit$Assert;Ljava/lang/Object;)V;
NameAndType	assertNotNull:(Lscala/testing/SUnit$Assert;Ljava/lang/Object;)V
Method	scala/testing/SUnit$Assert$class.assertNotNull:(Lscala/testing/SUnit$Assert;Ljava/lang/Object;)V
Asciz	assertNotEq;
NameAndType	assertNotEq:(Lscala/testing/SUnit$Assert;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
Method	scala/testing/SUnit$Assert$class.assertNotEq:(Lscala/testing/SUnit$Assert;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
NameAndType	assertNotEq:(Lscala/testing/SUnit$Assert;Ljava/lang/Object;Ljava/lang/Object;)V
Method	scala/testing/SUnit$Assert$class.assertNotEq:(Lscala/testing/SUnit$Assert;Ljava/lang/Object;Ljava/lang/Object;)V
Asciz	assertNull;
NameAndType	assertNull:(Lscala/testing/SUnit$Assert;Ljava/lang/String;Ljava/lang/Object;)V
Method	scala/testing/SUnit$Assert$class.assertNull:(Lscala/testing/SUnit$Assert;Ljava/lang/String;Ljava/lang/Object;)V
NameAndType	assertNull:(Lscala/testing/SUnit$Assert;Ljava/lang/Object;)V
Method	scala/testing/SUnit$Assert$class.assertNull:(Lscala/testing/SUnit$Assert;Ljava/lang/Object;)V
Asciz	assertEq;
NameAndType	assertEq:(Lscala/testing/SUnit$Assert;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
Method	scala/testing/SUnit$Assert$class.assertEq:(Lscala/testing/SUnit$Assert;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
NameAndType	assertEq:(Lscala/testing/SUnit$Assert;Ljava/lang/Object;Ljava/lang/Object;)V
Method	scala/testing/SUnit$Assert$class.assertEq:(Lscala/testing/SUnit$Assert;Ljava/lang/Object;Ljava/lang/Object;)V
Asciz	assertTrue;
NameAndType	assertTrue:(Lscala/testing/SUnit$Assert;Ljava/lang/String;Z)V
Method	scala/testing/SUnit$Assert$class.assertTrue:(Lscala/testing/SUnit$Assert;Ljava/lang/String;Z)V
NameAndType	assertTrue:(Lscala/testing/SUnit$Assert;Z)V
Method	scala/testing/SUnit$Assert$class.assertTrue:(Lscala/testing/SUnit$Assert;Z)V
Asciz	fail;
Asciz	(Ljava/lang/String;)V;
Asciz	(Lscala/testing/SUnit$Assert;Ljava/lang/String;)V;
NameAndType	fail:(Lscala/testing/SUnit$Assert;Ljava/lang/String;)V
Method	scala/testing/SUnit$Assert$class.fail:(Lscala/testing/SUnit$Assert;Ljava/lang/String;)V
NameAndType	fail:(Lscala/testing/SUnit$Assert;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
Method	scala/testing/SUnit$Assert$class.fail:(Lscala/testing/SUnit$Assert;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
Asciz	()Ljava/lang/String;;
Asciz	scala/testing/SUnit$TestCase;
class	scala/testing/SUnit$TestCase
NameAndType	name:Ljava/lang/String;
Field	scala/testing/SUnit$TestCase.name:Ljava/lang/String;
Asciz	runTest;
Asciz	()V;
Asciz	run;
Asciz	(Lscala/testing/SUnit$TestResult;)V;
NameAndType	runTest:()V
Method	scala/testing/SUnit$TestCase.runTest:()V
Asciz	scala/testing/SUnit$TestResult;
class	scala/testing/SUnit$TestResult
Asciz	addFailure;
Asciz	(Lscala/testing/SUnit$Test;Ljava/lang/Throwable;)V;
NameAndType	addFailure:(Lscala/testing/SUnit$Test;Ljava/lang/Throwable;)V
Method	scala/testing/SUnit$TestResult.addFailure:(Lscala/testing/SUnit$Test;Ljava/lang/Throwable;)V
Asciz	r;
Asciz	Lscala/testing/SUnit$TestResult;;
Asciz	setUp;
Asciz	tearDown;
Asciz	toString;
NameAndType	name:()Ljava/lang/String;
Method	scala/testing/SUnit$TestCase.name:()Ljava/lang/String;
Asciz	<init>;
Asciz	java/lang/Object;
class	java/lang/Object
NameAndType	"<init>":()V
Method	java/lang/Object."<init>":()V
Asciz	$init$;
Asciz	(Lscala/testing/SUnit$Assert;)V;
NameAndType	$init$:(Lscala/testing/SUnit$Assert;)V
Method	scala/testing/SUnit$Assert$class.$init$:(Lscala/testing/SUnit$Assert;)V
Asciz	Scala;
Asciz	InnerClasses;
Asciz	scala/testing/SUnit$Test;
class	scala/testing/SUnit$Test
Asciz	scala/testing/SUnit;
class	scala/testing/SUnit
Asciz	Test;
Asciz	scala/testing/SUnit$Assert;
class	scala/testing/SUnit$Assert
Asciz	Assert;
Asciz	TestCase;
Asciz	TestResult;
Asciz	scala/ScalaObject;
class	scala/ScalaObject

{
private final java.lang.String name;
  Signature: Ljava/lang/String;

public boolean enableStackTrace();
  Signature: ()Z
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokestatic	Method scala/testing/SUnit$Assert$class.enableStackTrace:(Lscala/testing/SUnit$Assert;)Z
	ireturn
  Labels:

public void assertSameElements(scala.collection.Seq, scala.collection.Seq);
  Signature: (Lscala/collection/Seq;Lscala/collection/Seq;)V
  Code:
   Stack=3, Locals=3, Args_size=3
	aload_0
	aload_1
	aload_2
	invokestatic	Method scala/testing/SUnit$Assert$class.assertSameElements:(Lscala/testing/SUnit$Assert;Lscala/collection/Seq;Lscala/collection/Seq;)V
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/testing/SUnit$TestCase;
   0      7      1    actual       Lscala/collection/Seq;
   0      7      2    expected       Lscala/collection/Seq;


public void assertEquals(java.lang.String, java.lang.Object, java.lang.Object);
  Signature: (Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
  Code:
   Stack=4, Locals=4, Args_size=4
	aload_0
	aload_1
	aload_2
	aload_3
	invokestatic	Method scala/testing/SUnit$Assert$class.assertEquals:(Lscala/testing/SUnit$Assert;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      8      0    this       Lscala/testing/SUnit$TestCase;
   0      8      1    msg       Ljava/lang/String;
   0      8      2    expected       Ljava/lang/Object;
   0      8      3    actual       Ljava/lang/Object;


public void assertEquals(java.lang.Object, java.lang.Object);
  Signature: (Ljava/lang/Object;Ljava/lang/Object;)V
  Code:
   Stack=3, Locals=3, Args_size=3
	aload_0
	aload_1
	aload_2
	invokestatic	Method scala/testing/SUnit$Assert$class.assertEquals:(Lscala/testing/SUnit$Assert;Ljava/lang/Object;Ljava/lang/Object;)V
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/testing/SUnit$TestCase;
   0      7      1    expected       Ljava/lang/Object;
   0      7      2    actual       Ljava/lang/Object;


public void assertFalse(java.lang.String, boolean);
  Signature: (Ljava/lang/String;Z)V
  Code:
   Stack=3, Locals=3, Args_size=3
	aload_0
	aload_1
	iload_2
	invokestatic	Method scala/testing/SUnit$Assert$class.assertFalse:(Lscala/testing/SUnit$Assert;Ljava/lang/String;Z)V
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/testing/SUnit$TestCase;
   0      7      1    msg       Ljava/lang/String;
   0      7      2    actual       Z


public void assertFalse(boolean);
  Signature: (Z)V
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	iload_1
	invokestatic	Method scala/testing/SUnit$Assert$class.assertFalse:(Lscala/testing/SUnit$Assert;Z)V
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/testing/SUnit$TestCase;
   0      6      1    actual       Z


public void assertNotNull(java.lang.String, java.lang.Object);
  Signature: (Ljava/lang/String;Ljava/lang/Object;)V
  Code:
   Stack=3, Locals=3, Args_size=3
	aload_0
	aload_1
	aload_2
	invokestatic	Method scala/testing/SUnit$Assert$class.assertNotNull:(Lscala/testing/SUnit$Assert;Ljava/lang/String;Ljava/lang/Object;)V
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/testing/SUnit$TestCase;
   0      7      1    msg       Ljava/lang/String;
   0      7      2    actual       Ljava/lang/Object;


public void assertNotNull(java.lang.Object);
  Signature: (Ljava/lang/Object;)V
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokestatic	Method scala/testing/SUnit$Assert$class.assertNotNull:(Lscala/testing/SUnit$Assert;Ljava/lang/Object;)V
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/testing/SUnit$TestCase;
   0      6      1    actual       Ljava/lang/Object;


public void assertNotEq(java.lang.String, java.lang.Object, java.lang.Object);
  Signature: (Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
  Code:
   Stack=4, Locals=4, Args_size=4
	aload_0
	aload_1
	aload_2
	aload_3
	invokestatic	Method scala/testing/SUnit$Assert$class.assertNotEq:(Lscala/testing/SUnit$Assert;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      8      0    this       Lscala/testing/SUnit$TestCase;
   0      8      1    msg       Ljava/lang/String;
   0      8      2    expected       Ljava/lang/Object;
   0      8      3    actual       Ljava/lang/Object;


public void assertNotEq(java.lang.Object, java.lang.Object);
  Signature: (Ljava/lang/Object;Ljava/lang/Object;)V
  Code:
   Stack=3, Locals=3, Args_size=3
	aload_0
	aload_1
	aload_2
	invokestatic	Method scala/testing/SUnit$Assert$class.assertNotEq:(Lscala/testing/SUnit$Assert;Ljava/lang/Object;Ljava/lang/Object;)V
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/testing/SUnit$TestCase;
   0      7      1    expected       Ljava/lang/Object;
   0      7      2    actual       Ljava/lang/Object;


public void assertNull(java.lang.String, java.lang.Object);
  Signature: (Ljava/lang/String;Ljava/lang/Object;)V
  Code:
   Stack=3, Locals=3, Args_size=3
	aload_0
	aload_1
	aload_2
	invokestatic	Method scala/testing/SUnit$Assert$class.assertNull:(Lscala/testing/SUnit$Assert;Ljava/lang/String;Ljava/lang/Object;)V
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/testing/SUnit$TestCase;
   0      7      1    msg       Ljava/lang/String;
   0      7      2    actual       Ljava/lang/Object;


public void assertNull(java.lang.Object);
  Signature: (Ljava/lang/Object;)V
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokestatic	Method scala/testing/SUnit$Assert$class.assertNull:(Lscala/testing/SUnit$Assert;Ljava/lang/Object;)V
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/testing/SUnit$TestCase;
   0      6      1    actual       Ljava/lang/Object;


public void assertEq(java.lang.String, java.lang.Object, java.lang.Object);
  Signature: (Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
  Code:
   Stack=4, Locals=4, Args_size=4
	aload_0
	aload_1
	aload_2
	aload_3
	invokestatic	Method scala/testing/SUnit$Assert$class.assertEq:(Lscala/testing/SUnit$Assert;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      8      0    this       Lscala/testing/SUnit$TestCase;
   0      8      1    msg       Ljava/lang/String;
   0      8      2    expected       Ljava/lang/Object;
   0      8      3    actual       Ljava/lang/Object;


public void assertEq(java.lang.Object, java.lang.Object);
  Signature: (Ljava/lang/Object;Ljava/lang/Object;)V
  Code:
   Stack=3, Locals=3, Args_size=3
	aload_0
	aload_1
	aload_2
	invokestatic	Method scala/testing/SUnit$Assert$class.assertEq:(Lscala/testing/SUnit$Assert;Ljava/lang/Object;Ljava/lang/Object;)V
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/testing/SUnit$TestCase;
   0      7      1    expected       Ljava/lang/Object;
   0      7      2    actual       Ljava/lang/Object;


public void assertTrue(java.lang.String, boolean);
  Signature: (Ljava/lang/String;Z)V
  Code:
   Stack=3, Locals=3, Args_size=3
	aload_0
	aload_1
	iload_2
	invokestatic	Method scala/testing/SUnit$Assert$class.assertTrue:(Lscala/testing/SUnit$Assert;Ljava/lang/String;Z)V
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/testing/SUnit$TestCase;
   0      7      1    msg       Ljava/lang/String;
   0      7      2    actual       Z


public void assertTrue(boolean);
  Signature: (Z)V
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	iload_1
	invokestatic	Method scala/testing/SUnit$Assert$class.assertTrue:(Lscala/testing/SUnit$Assert;Z)V
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/testing/SUnit$TestCase;
   0      6      1    actual       Z


public void fail(java.lang.String);
  Signature: (Ljava/lang/String;)V
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokestatic	Method scala/testing/SUnit$Assert$class.fail:(Lscala/testing/SUnit$Assert;Ljava/lang/String;)V
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/testing/SUnit$TestCase;
   0      6      1    msg       Ljava/lang/String;


public void fail(java.lang.String, java.lang.Object, java.lang.Object);
  Signature: (Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
  Code:
   Stack=4, Locals=4, Args_size=4
	aload_0
	aload_1
	aload_2
	aload_3
	invokestatic	Method scala/testing/SUnit$Assert$class.fail:(Lscala/testing/SUnit$Assert;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      8      0    this       Lscala/testing/SUnit$TestCase;
   0      8      1    msg       Ljava/lang/String;
   0      8      2    expected       Ljava/lang/Object;
   0      8      3    actual       Ljava/lang/Object;


public java.lang.String name();
  Signature: ()Ljava/lang/String;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field name:Ljava/lang/String;
	areturn
  Labels:

public abstract void runTest();
  Signature: ()V

public void run(scala.testing.SUnit$TestResult);
  Signature: (Lscala/testing/SUnit$TestResult;)V
  Code:
   Stack=3, Locals=3, Args_size=2
	aload_0
	invokevirtual	Method runTest:()V
	goto	l1 // return
	astore_2
	aload_1
	aload_0
	aload_2
	invokevirtual	Method scala/testing/SUnit$TestResult.addFailure:(Lscala/testing/SUnit$Test;Ljava/lang/Throwable;)V
l1	return
  Labels:
   	l1 = 14 // return
  Exception table:
   from   to  target type
     0     7     7   any
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      15      0    this       Lscala/testing/SUnit$TestCase;
   0      15      1    r       Lscala/testing/SUnit$TestResult;


public void setUp();
  Signature: ()V
  Code:
   Stack=0, Locals=1, Args_size=1
	return
  Labels:

public void tearDown();
  Signature: ()V
  Code:
   Stack=0, Locals=1, Args_size=1
	return
  Labels:

public java.lang.String toString();
  Signature: ()Ljava/lang/String;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokevirtual	Method name:()Ljava/lang/String;
	areturn
  Labels:

public scala.testing.SUnit$TestCase(java.lang.String);
  Signature: (Ljava/lang/String;)V
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	putfield	Field name:Ljava/lang/String;
	aload_0
	invokespecial	Method java/lang/Object."<init>":()V
	aload_0
	invokestatic	Method scala/testing/SUnit$Assert$class.$init$:(Lscala/testing/SUnit$Assert;)V
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      14      0    this       Lscala/testing/SUnit$TestCase;
   0      14      1    name       Ljava/lang/String;


}

