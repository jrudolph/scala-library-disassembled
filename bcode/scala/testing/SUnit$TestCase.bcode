Compiled from "SUnit.scala"
public abstract class scala.testing.SUnit$TestCase extends java.lang.Object implements scala.testing.SUnit$Test,scala.testing.SUnit$Assert,scala.ScalaObject
  SourceFile: "SUnit.scala"
  Scala: length = 0x
   
  InnerClass: 
   public abstract #121= #118 of #120; //Test=class scala/testing/SUnit$Test of class scala/testing/SUnit
   public abstract #124= #123 of #120; //Assert=class scala/testing/SUnit$Assert of class scala/testing/SUnit
   public abstract #125= #10 of #120; //TestCase=class scala/testing/SUnit$TestCase of class scala/testing/SUnit
   public #126= #39 of #120; //TestResult=class scala/testing/SUnit$TestResult of class scala/testing/SUnit
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	SUnit.scala;
const #3 = Asciz	name;
const #4 = Asciz	Ljava/lang/String;;
const #5 = Asciz	<init>;
const #6 = Asciz	(Ljava/lang/String;)V;
const #7 = Asciz	Code;
const #8 = Asciz	LineNumberTable;
const #9 = Asciz	scala/testing/SUnit$TestCase;
const #10 = class	#9;	//  scala/testing/SUnit$TestCase
const #11 = NameAndType	#3:#4;//  name:Ljava/lang/String;
const #12 = Field	#10.#11;	//  scala/testing/SUnit$TestCase.name:Ljava/lang/String;
const #13 = Asciz	java/lang/Object;
const #14 = class	#13;	//  java/lang/Object
const #15 = Asciz	()V;
const #16 = NameAndType	#5:#15;//  "<init>":()V
const #17 = Method	#14.#16;	//  java/lang/Object."<init>":()V
const #18 = Asciz	scala/testing/SUnit$Assert$class;
const #19 = class	#18;	//  scala/testing/SUnit$Assert$class
const #20 = Asciz	$init$;
const #21 = Asciz	(Lscala/testing/SUnit$Assert;)V;
const #22 = NameAndType	#20:#21;//  $init$:(Lscala/testing/SUnit$Assert;)V
const #23 = Method	#19.#22;	//  scala/testing/SUnit$Assert$class.$init$:(Lscala/testing/SUnit$Assert;)V
const #24 = Asciz	this;
const #25 = Asciz	Lscala/testing/SUnit$TestCase;;
const #26 = Asciz	LocalVariableTable;
const #27 = Asciz	toString;
const #28 = Asciz	()Ljava/lang/String;;
const #29 = NameAndType	#3:#28;//  name:()Ljava/lang/String;
const #30 = Method	#10.#29;	//  scala/testing/SUnit$TestCase.name:()Ljava/lang/String;
const #31 = Asciz	tearDown;
const #32 = Asciz	setUp;
const #33 = Asciz	run;
const #34 = Asciz	(Lscala/testing/SUnit$TestResult;)V;
const #35 = Asciz	runTest;
const #36 = NameAndType	#35:#15;//  runTest:()V
const #37 = Method	#10.#36;	//  scala/testing/SUnit$TestCase.runTest:()V
const #38 = Asciz	scala/testing/SUnit$TestResult;
const #39 = class	#38;	//  scala/testing/SUnit$TestResult
const #40 = Asciz	addFailure;
const #41 = Asciz	(Lscala/testing/SUnit$Test;Ljava/lang/Throwable;)V;
const #42 = NameAndType	#40:#41;//  addFailure:(Lscala/testing/SUnit$Test;Ljava/lang/Throwable;)V
const #43 = Method	#39.#42;	//  scala/testing/SUnit$TestResult.addFailure:(Lscala/testing/SUnit$Test;Ljava/lang/Throwable;)V
const #44 = Asciz	r;
const #45 = Asciz	Lscala/testing/SUnit$TestResult;;
const #46 = Asciz	fail;
const #47 = Asciz	(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V;
const #48 = Asciz	(Lscala/testing/SUnit$Assert;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V;
const #49 = NameAndType	#46:#48;//  fail:(Lscala/testing/SUnit$Assert;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
const #50 = Method	#19.#49;	//  scala/testing/SUnit$Assert$class.fail:(Lscala/testing/SUnit$Assert;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
const #51 = Asciz	msg;
const #52 = Asciz	expected;
const #53 = Asciz	Ljava/lang/Object;;
const #54 = Asciz	actual;
const #55 = Asciz	(Lscala/testing/SUnit$Assert;Ljava/lang/String;)V;
const #56 = NameAndType	#46:#55;//  fail:(Lscala/testing/SUnit$Assert;Ljava/lang/String;)V
const #57 = Method	#19.#56;	//  scala/testing/SUnit$Assert$class.fail:(Lscala/testing/SUnit$Assert;Ljava/lang/String;)V
const #58 = Asciz	assertTrue;
const #59 = Asciz	(Z)V;
const #60 = Asciz	(Lscala/testing/SUnit$Assert;Z)V;
const #61 = NameAndType	#58:#60;//  assertTrue:(Lscala/testing/SUnit$Assert;Z)V
const #62 = Method	#19.#61;	//  scala/testing/SUnit$Assert$class.assertTrue:(Lscala/testing/SUnit$Assert;Z)V
const #63 = Asciz	Z;
const #64 = Asciz	(Ljava/lang/String;Z)V;
const #65 = Asciz	(Lscala/testing/SUnit$Assert;Ljava/lang/String;Z)V;
const #66 = NameAndType	#58:#65;//  assertTrue:(Lscala/testing/SUnit$Assert;Ljava/lang/String;Z)V
const #67 = Method	#19.#66;	//  scala/testing/SUnit$Assert$class.assertTrue:(Lscala/testing/SUnit$Assert;Ljava/lang/String;Z)V
const #68 = Asciz	assertEq;
const #69 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)V;
const #70 = Asciz	(Lscala/testing/SUnit$Assert;Ljava/lang/Object;Ljava/lang/Object;)V;
const #71 = NameAndType	#68:#70;//  assertEq:(Lscala/testing/SUnit$Assert;Ljava/lang/Object;Ljava/lang/Object;)V
const #72 = Method	#19.#71;	//  scala/testing/SUnit$Assert$class.assertEq:(Lscala/testing/SUnit$Assert;Ljava/lang/Object;Ljava/lang/Object;)V
const #73 = NameAndType	#68:#48;//  assertEq:(Lscala/testing/SUnit$Assert;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
const #74 = Method	#19.#73;	//  scala/testing/SUnit$Assert$class.assertEq:(Lscala/testing/SUnit$Assert;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
const #75 = Asciz	assertNull;
const #76 = Asciz	(Ljava/lang/Object;)V;
const #77 = Asciz	(Lscala/testing/SUnit$Assert;Ljava/lang/Object;)V;
const #78 = NameAndType	#75:#77;//  assertNull:(Lscala/testing/SUnit$Assert;Ljava/lang/Object;)V
const #79 = Method	#19.#78;	//  scala/testing/SUnit$Assert$class.assertNull:(Lscala/testing/SUnit$Assert;Ljava/lang/Object;)V
const #80 = Asciz	(Ljava/lang/String;Ljava/lang/Object;)V;
const #81 = Asciz	(Lscala/testing/SUnit$Assert;Ljava/lang/String;Ljava/lang/Object;)V;
const #82 = NameAndType	#75:#81;//  assertNull:(Lscala/testing/SUnit$Assert;Ljava/lang/String;Ljava/lang/Object;)V
const #83 = Method	#19.#82;	//  scala/testing/SUnit$Assert$class.assertNull:(Lscala/testing/SUnit$Assert;Ljava/lang/String;Ljava/lang/Object;)V
const #84 = Asciz	assertNotEq;
const #85 = NameAndType	#84:#70;//  assertNotEq:(Lscala/testing/SUnit$Assert;Ljava/lang/Object;Ljava/lang/Object;)V
const #86 = Method	#19.#85;	//  scala/testing/SUnit$Assert$class.assertNotEq:(Lscala/testing/SUnit$Assert;Ljava/lang/Object;Ljava/lang/Object;)V
const #87 = NameAndType	#84:#48;//  assertNotEq:(Lscala/testing/SUnit$Assert;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
const #88 = Method	#19.#87;	//  scala/testing/SUnit$Assert$class.assertNotEq:(Lscala/testing/SUnit$Assert;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
const #89 = Asciz	assertNotNull;
const #90 = NameAndType	#89:#77;//  assertNotNull:(Lscala/testing/SUnit$Assert;Ljava/lang/Object;)V
const #91 = Method	#19.#90;	//  scala/testing/SUnit$Assert$class.assertNotNull:(Lscala/testing/SUnit$Assert;Ljava/lang/Object;)V
const #92 = NameAndType	#89:#81;//  assertNotNull:(Lscala/testing/SUnit$Assert;Ljava/lang/String;Ljava/lang/Object;)V
const #93 = Method	#19.#92;	//  scala/testing/SUnit$Assert$class.assertNotNull:(Lscala/testing/SUnit$Assert;Ljava/lang/String;Ljava/lang/Object;)V
const #94 = Asciz	assertFalse;
const #95 = NameAndType	#94:#60;//  assertFalse:(Lscala/testing/SUnit$Assert;Z)V
const #96 = Method	#19.#95;	//  scala/testing/SUnit$Assert$class.assertFalse:(Lscala/testing/SUnit$Assert;Z)V
const #97 = NameAndType	#94:#65;//  assertFalse:(Lscala/testing/SUnit$Assert;Ljava/lang/String;Z)V
const #98 = Method	#19.#97;	//  scala/testing/SUnit$Assert$class.assertFalse:(Lscala/testing/SUnit$Assert;Ljava/lang/String;Z)V
const #99 = Asciz	assertEquals;
const #100 = NameAndType	#99:#70;//  assertEquals:(Lscala/testing/SUnit$Assert;Ljava/lang/Object;Ljava/lang/Object;)V
const #101 = Method	#19.#100;	//  scala/testing/SUnit$Assert$class.assertEquals:(Lscala/testing/SUnit$Assert;Ljava/lang/Object;Ljava/lang/Object;)V
const #102 = NameAndType	#99:#48;//  assertEquals:(Lscala/testing/SUnit$Assert;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
const #103 = Method	#19.#102;	//  scala/testing/SUnit$Assert$class.assertEquals:(Lscala/testing/SUnit$Assert;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
const #104 = Asciz	assertSameElements;
const #105 = Asciz	(Lscala/collection/Seq;Lscala/collection/Seq;)V;
const #106 = Asciz	(Lscala/testing/SUnit$Assert;Lscala/collection/Seq;Lscala/collection/Seq;)V;
const #107 = NameAndType	#104:#106;//  assertSameElements:(Lscala/testing/SUnit$Assert;Lscala/collection/Seq;Lscala/collection/Seq;)V
const #108 = Method	#19.#107;	//  scala/testing/SUnit$Assert$class.assertSameElements:(Lscala/testing/SUnit$Assert;Lscala/collection/Seq;Lscala/collection/Seq;)V
const #109 = Asciz	Lscala/collection/Seq;;
const #110 = Asciz	enableStackTrace;
const #111 = Asciz	()Z;
const #112 = Asciz	(Lscala/testing/SUnit$Assert;)Z;
const #113 = NameAndType	#110:#112;//  enableStackTrace:(Lscala/testing/SUnit$Assert;)Z
const #114 = Method	#19.#113;	//  scala/testing/SUnit$Assert$class.enableStackTrace:(Lscala/testing/SUnit$Assert;)Z
const #115 = Asciz	Scala;
const #116 = Asciz	InnerClasses;
const #117 = Asciz	scala/testing/SUnit$Test;
const #118 = class	#117;	//  scala/testing/SUnit$Test
const #119 = Asciz	scala/testing/SUnit;
const #120 = class	#119;	//  scala/testing/SUnit
const #121 = Asciz	Test;
const #122 = Asciz	scala/testing/SUnit$Assert;
const #123 = class	#122;	//  scala/testing/SUnit$Assert
const #124 = Asciz	Assert;
const #125 = Asciz	TestCase;
const #126 = Asciz	TestResult;
const #127 = Asciz	scala/ScalaObject;
const #128 = class	#127;	//  scala/ScalaObject

{
public scala.testing.SUnit$TestCase(java.lang.String);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	putfield	#12; //Field name:Ljava/lang/String;
   5:	aload_0
   6:	invokespecial	#17; //Method java/lang/Object."<init>":()V
   9:	aload_0
   10:	invokestatic	#23; //Method scala/testing/SUnit$Assert$class.$init$:(Lscala/testing/SUnit$Assert;)V
   13:	return
  LineNumberTable: 
   line 83: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      14      0    this       Lscala/testing/SUnit$TestCase;
   0      14      1    name       Ljava/lang/String;


public java.lang.String toString();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#30; //Method name:()Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 99: 0


public void tearDown();
  Code:
   Stack=0, Locals=1, Args_size=1
   0:	return
  LineNumberTable: 
   line 97: 0


public void setUp();
  Code:
   Stack=0, Locals=1, Args_size=1
   0:	return
  LineNumberTable: 
   line 95: 0


public void run(scala.testing.SUnit$TestResult);
  Code:
   Stack=3, Locals=3, Args_size=2
   0:	aload_0
   1:	invokevirtual	#37; //Method runTest:()V
   4:	goto	14
   7:	astore_2
   8:	aload_1
   9:	aload_0
   10:	aload_2
   11:	invokevirtual	#43; //Method scala/testing/SUnit$TestResult.addFailure:(Lscala/testing/SUnit$Test;Ljava/lang/Throwable;)V
   14:	return
  Exception table:
   from   to  target type
     0     7     7   any
  LineNumberTable: 
   line 89: 0
   line 91: 7
   line 88: 14

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      15      0    this       Lscala/testing/SUnit$TestCase;
   0      15      1    r       Lscala/testing/SUnit$TestResult;


public abstract void runTest();

public java.lang.String name();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#12; //Field name:Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 83: 0


public void fail(java.lang.String, java.lang.Object, java.lang.Object);
  Code:
   Stack=4, Locals=4, Args_size=4
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	aload_3
   4:	invokestatic	#50; //Method scala/testing/SUnit$Assert$class.fail:(Lscala/testing/SUnit$Assert;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
   7:	return
  LineNumberTable: 
   line 83: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      8      0    this       Lscala/testing/SUnit$TestCase;
   0      8      1    msg       Ljava/lang/String;
   0      8      2    expected       Ljava/lang/Object;
   0      8      3    actual       Ljava/lang/Object;


public void fail(java.lang.String);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#57; //Method scala/testing/SUnit$Assert$class.fail:(Lscala/testing/SUnit$Assert;Ljava/lang/String;)V
   5:	return
  LineNumberTable: 
   line 83: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/testing/SUnit$TestCase;
   0      6      1    msg       Ljava/lang/String;


public void assertTrue(boolean);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	invokestatic	#62; //Method scala/testing/SUnit$Assert$class.assertTrue:(Lscala/testing/SUnit$Assert;Z)V
   5:	return
  LineNumberTable: 
   line 83: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/testing/SUnit$TestCase;
   0      6      1    actual       Z


public void assertTrue(java.lang.String, boolean);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	iload_2
   3:	invokestatic	#67; //Method scala/testing/SUnit$Assert$class.assertTrue:(Lscala/testing/SUnit$Assert;Ljava/lang/String;Z)V
   6:	return
  LineNumberTable: 
   line 83: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/testing/SUnit$TestCase;
   0      7      1    msg       Ljava/lang/String;
   0      7      2    actual       Z


public void assertEq(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#72; //Method scala/testing/SUnit$Assert$class.assertEq:(Lscala/testing/SUnit$Assert;Ljava/lang/Object;Ljava/lang/Object;)V
   6:	return
  LineNumberTable: 
   line 83: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/testing/SUnit$TestCase;
   0      7      1    expected       Ljava/lang/Object;
   0      7      2    actual       Ljava/lang/Object;


public void assertEq(java.lang.String, java.lang.Object, java.lang.Object);
  Code:
   Stack=4, Locals=4, Args_size=4
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	aload_3
   4:	invokestatic	#74; //Method scala/testing/SUnit$Assert$class.assertEq:(Lscala/testing/SUnit$Assert;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
   7:	return
  LineNumberTable: 
   line 83: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      8      0    this       Lscala/testing/SUnit$TestCase;
   0      8      1    msg       Ljava/lang/String;
   0      8      2    expected       Ljava/lang/Object;
   0      8      3    actual       Ljava/lang/Object;


public void assertNull(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#79; //Method scala/testing/SUnit$Assert$class.assertNull:(Lscala/testing/SUnit$Assert;Ljava/lang/Object;)V
   5:	return
  LineNumberTable: 
   line 83: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/testing/SUnit$TestCase;
   0      6      1    actual       Ljava/lang/Object;


public void assertNull(java.lang.String, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#83; //Method scala/testing/SUnit$Assert$class.assertNull:(Lscala/testing/SUnit$Assert;Ljava/lang/String;Ljava/lang/Object;)V
   6:	return
  LineNumberTable: 
   line 83: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/testing/SUnit$TestCase;
   0      7      1    msg       Ljava/lang/String;
   0      7      2    actual       Ljava/lang/Object;


public void assertNotEq(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#86; //Method scala/testing/SUnit$Assert$class.assertNotEq:(Lscala/testing/SUnit$Assert;Ljava/lang/Object;Ljava/lang/Object;)V
   6:	return
  LineNumberTable: 
   line 83: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/testing/SUnit$TestCase;
   0      7      1    expected       Ljava/lang/Object;
   0      7      2    actual       Ljava/lang/Object;


public void assertNotEq(java.lang.String, java.lang.Object, java.lang.Object);
  Code:
   Stack=4, Locals=4, Args_size=4
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	aload_3
   4:	invokestatic	#88; //Method scala/testing/SUnit$Assert$class.assertNotEq:(Lscala/testing/SUnit$Assert;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
   7:	return
  LineNumberTable: 
   line 83: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      8      0    this       Lscala/testing/SUnit$TestCase;
   0      8      1    msg       Ljava/lang/String;
   0      8      2    expected       Ljava/lang/Object;
   0      8      3    actual       Ljava/lang/Object;


public void assertNotNull(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#91; //Method scala/testing/SUnit$Assert$class.assertNotNull:(Lscala/testing/SUnit$Assert;Ljava/lang/Object;)V
   5:	return
  LineNumberTable: 
   line 83: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/testing/SUnit$TestCase;
   0      6      1    actual       Ljava/lang/Object;


public void assertNotNull(java.lang.String, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#93; //Method scala/testing/SUnit$Assert$class.assertNotNull:(Lscala/testing/SUnit$Assert;Ljava/lang/String;Ljava/lang/Object;)V
   6:	return
  LineNumberTable: 
   line 83: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/testing/SUnit$TestCase;
   0      7      1    msg       Ljava/lang/String;
   0      7      2    actual       Ljava/lang/Object;


public void assertFalse(boolean);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	invokestatic	#96; //Method scala/testing/SUnit$Assert$class.assertFalse:(Lscala/testing/SUnit$Assert;Z)V
   5:	return
  LineNumberTable: 
   line 83: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/testing/SUnit$TestCase;
   0      6      1    actual       Z


public void assertFalse(java.lang.String, boolean);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	iload_2
   3:	invokestatic	#98; //Method scala/testing/SUnit$Assert$class.assertFalse:(Lscala/testing/SUnit$Assert;Ljava/lang/String;Z)V
   6:	return
  LineNumberTable: 
   line 83: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/testing/SUnit$TestCase;
   0      7      1    msg       Ljava/lang/String;
   0      7      2    actual       Z


public void assertEquals(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#101; //Method scala/testing/SUnit$Assert$class.assertEquals:(Lscala/testing/SUnit$Assert;Ljava/lang/Object;Ljava/lang/Object;)V
   6:	return
  LineNumberTable: 
   line 83: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/testing/SUnit$TestCase;
   0      7      1    expected       Ljava/lang/Object;
   0      7      2    actual       Ljava/lang/Object;


public void assertEquals(java.lang.String, java.lang.Object, java.lang.Object);
  Code:
   Stack=4, Locals=4, Args_size=4
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	aload_3
   4:	invokestatic	#103; //Method scala/testing/SUnit$Assert$class.assertEquals:(Lscala/testing/SUnit$Assert;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
   7:	return
  LineNumberTable: 
   line 83: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      8      0    this       Lscala/testing/SUnit$TestCase;
   0      8      1    msg       Ljava/lang/String;
   0      8      2    expected       Ljava/lang/Object;
   0      8      3    actual       Ljava/lang/Object;


public void assertSameElements(scala.collection.Seq, scala.collection.Seq);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#108; //Method scala/testing/SUnit$Assert$class.assertSameElements:(Lscala/testing/SUnit$Assert;Lscala/collection/Seq;Lscala/collection/Seq;)V
   6:	return
  LineNumberTable: 
   line 83: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/testing/SUnit$TestCase;
   0      7      1    actual       Lscala/collection/Seq;
   0      7      2    expected       Lscala/collection/Seq;


public boolean enableStackTrace();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#114; //Method scala/testing/SUnit$Assert$class.enableStackTrace:(Lscala/testing/SUnit$Assert;)Z
   4:	ireturn
  LineNumberTable: 
   line 83: 0


}

