Compiled from "Benchmark.scala"
public final class scala.testing.Benchmark$$anonfun$runBenchmark$1 extends java.lang.Object implements scala.Function1,scala.ScalaObject,java.io.Serializable
  SourceFile: "Benchmark.scala"
  Scala: length = 0x
   
  InnerClass: 
   public final #91= #9 of #59; //$anonfun$runBenchmark$1=class scala/testing/Benchmark$$anonfun$runBenchmark$1 of class scala/testing/Benchmark
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Benchmark.scala;
const #3 = Asciz	<clinit>;
const #4 = Asciz	()V;
const #5 = Asciz	Code;
const #6 = Asciz	serialVersionUID;
const #7 = Asciz	J;
const #8 = Asciz	scala/testing/Benchmark$$anonfun$runBenchmark$1;
const #9 = class	#8;	//  scala/testing/Benchmark$$anonfun$runBenchmark$1
const #10 = NameAndType	#6:#7;//  serialVersionUID:J
const #11 = Field	#9.#10;	//  scala/testing/Benchmark$$anonfun$runBenchmark$1.serialVersionUID:J
const #12 = Asciz	$outer;
const #13 = Asciz	Lscala/testing/Benchmark;;
const #14 = Asciz	<init>;
const #15 = Asciz	(Lscala/testing/Benchmark;)V;
const #16 = Asciz	LineNumberTable;
const #17 = Asciz	java/lang/NullPointerException;
const #18 = class	#17;	//  java/lang/NullPointerException
const #19 = NameAndType	#14:#4;//  "<init>":()V
const #20 = Method	#18.#19;	//  java/lang/NullPointerException."<init>":()V
const #21 = NameAndType	#12:#13;//  $outer:Lscala/testing/Benchmark;
const #22 = Field	#9.#21;	//  scala/testing/Benchmark$$anonfun$runBenchmark$1.$outer:Lscala/testing/Benchmark;
const #23 = Asciz	java/lang/Object;
const #24 = class	#23;	//  java/lang/Object
const #25 = Method	#24.#19;	//  java/lang/Object."<init>":()V
const #26 = Asciz	scala/Function1$class;
const #27 = class	#26;	//  scala/Function1$class
const #28 = Asciz	$init$;
const #29 = Asciz	(Lscala/Function1;)V;
const #30 = NameAndType	#28:#29;//  $init$:(Lscala/Function1;)V
const #31 = Method	#27.#30;	//  scala/Function1$class.$init$:(Lscala/Function1;)V
const #32 = Asciz	this;
const #33 = Asciz	Lscala/testing/Benchmark$$anonfun$runBenchmark$1;;
const #34 = Asciz	LocalVariableTable;
const #35 = Asciz	apply;
const #36 = Asciz	(Ljava/lang/Object;)Ljava/lang/Object;;
const #37 = Asciz	scala/runtime/BoxesRunTime;
const #38 = class	#37;	//  scala/runtime/BoxesRunTime
const #39 = Asciz	unboxToInt;
const #40 = Asciz	(Ljava/lang/Object;)I;
const #41 = NameAndType	#39:#40;//  unboxToInt:(Ljava/lang/Object;)I
const #42 = Method	#38.#41;	//  scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
const #43 = Asciz	(I)J;
const #44 = NameAndType	#35:#43;//  apply:(I)J
const #45 = Method	#9.#44;	//  scala/testing/Benchmark$$anonfun$runBenchmark$1.apply:(I)J
const #46 = Asciz	boxToLong;
const #47 = Asciz	(J)Ljava/lang/Long;;
const #48 = NameAndType	#46:#47;//  boxToLong:(J)Ljava/lang/Long;
const #49 = Method	#38.#48;	//  scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
const #50 = Asciz	v1;
const #51 = Asciz	Ljava/lang/Object;;
const #52 = Asciz	java/lang/System;
const #53 = class	#52;	//  java/lang/System
const #54 = Asciz	currentTimeMillis;
const #55 = Asciz	()J;
const #56 = NameAndType	#54:#55;//  currentTimeMillis:()J
const #57 = Method	#53.#56;	//  java/lang/System.currentTimeMillis:()J
const #58 = Asciz	scala/testing/Benchmark;
const #59 = class	#58;	//  scala/testing/Benchmark
const #60 = Asciz	multiplier;
const #61 = Asciz	()I;
const #62 = NameAndType	#60:#61;//  multiplier:()I
const #63 = InterfaceMethod	#59.#62;	//  scala/testing/Benchmark.multiplier:()I
const #64 = Asciz	run;
const #65 = NameAndType	#64:#4;//  run:()V
const #66 = InterfaceMethod	#59.#65;	//  scala/testing/Benchmark.run:()V
const #67 = Asciz	gc;
const #68 = NameAndType	#67:#4;//  gc:()V
const #69 = Method	#53.#68;	//  java/lang/System.gc:()V
const #70 = Asciz	i;
const #71 = Asciz	I;
const #72 = Asciz	stopTime;
const #73 = Asciz	startTime;
const #74 = Asciz	andThen;
const #75 = Asciz	(Lscala/Function1;)Lscala/Function1;;
const #76 = Asciz	(Lscala/Function1;Lscala/Function1;)Lscala/Function1;;
const #77 = NameAndType	#74:#76;//  andThen:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
const #78 = Method	#27.#77;	//  scala/Function1$class.andThen:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
const #79 = Asciz	g;
const #80 = Asciz	Lscala/Function1;;
const #81 = Asciz	compose;
const #82 = NameAndType	#81:#76;//  compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
const #83 = Method	#27.#82;	//  scala/Function1$class.compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
const #84 = Asciz	toString;
const #85 = Asciz	()Ljava/lang/String;;
const #86 = Asciz	(Lscala/Function1;)Ljava/lang/String;;
const #87 = NameAndType	#84:#86;//  toString:(Lscala/Function1;)Ljava/lang/String;
const #88 = Method	#27.#87;	//  scala/Function1$class.toString:(Lscala/Function1;)Ljava/lang/String;
const #89 = Asciz	Scala;
const #90 = Asciz	InnerClasses;
const #91 = Asciz	$anonfun$runBenchmark$1;
const #92 = Asciz	scala/Function1;
const #93 = class	#92;	//  scala/Function1
const #94 = Asciz	scala/ScalaObject;
const #95 = class	#94;	//  scala/ScalaObject
const #96 = Asciz	java/io/Serializable;
const #97 = class	#96;	//  java/io/Serializable

{
public static final long serialVersionUID;

public static {};
  Code:
   Stack=2, Locals=0, Args_size=0
   0:	lconst_0
   1:	putstatic	#11; //Field serialVersionUID:J
   4:	return

public scala.testing.Benchmark$$anonfun$runBenchmark$1(scala.testing.Benchmark);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_1
   1:	ifnonnull	12
   4:	new	#18; //class java/lang/NullPointerException
   7:	dup
   8:	invokespecial	#20; //Method java/lang/NullPointerException."<init>":()V
   11:	athrow
   12:	aload_0
   13:	aload_1
   14:	putfield	#22; //Field $outer:Lscala/testing/Benchmark;
   17:	aload_0
   18:	invokespecial	#25; //Method java/lang/Object."<init>":()V
   21:	aload_0
   22:	invokestatic	#31; //Method scala/Function1$class.$init$:(Lscala/Function1;)V
   25:	return
  LineNumberTable: 
   line 55: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      26      0    this       Lscala/testing/Benchmark$$anonfun$runBenchmark$1;
   0      26      1    $outer       Lscala/testing/Benchmark;


public final java.lang.Object apply(java.lang.Object);
  Code:
   Stack=2, Locals=5, Args_size=2
   0:	aload_0
   1:	getfield	#22; //Field $outer:Lscala/testing/Benchmark;
   4:	astore	4
   6:	aload_0
   7:	aload_1
   8:	invokestatic	#42; //Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
   11:	invokevirtual	#45; //Method apply:(I)J
   14:	lstore_2
   15:	lload_2
   16:	invokestatic	#49; //Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
   19:	areturn
  LineNumberTable: 
   line 55: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      20      0    this       Lscala/testing/Benchmark$$anonfun$runBenchmark$1;
   6      14      1    v1       Ljava/lang/Object;


public final long apply(int);
  Code:
   Stack=4, Locals=8, Args_size=2
   0:	aload_0
   1:	getfield	#22; //Field $outer:Lscala/testing/Benchmark;
   4:	astore	7
   6:	invokestatic	#57; //Method java/lang/System.currentTimeMillis:()J
   9:	lstore	5
   11:	iconst_0
   12:	istore_2
   13:	iload_2
   14:	aload_0
   15:	getfield	#22; //Field $outer:Lscala/testing/Benchmark;
   18:	invokeinterface	#63,  1; //InterfaceMethod scala/testing/Benchmark.multiplier:()I
   23:	if_icmpge	42
   26:	aload_0
   27:	getfield	#22; //Field $outer:Lscala/testing/Benchmark;
   30:	invokeinterface	#66,  1; //InterfaceMethod scala/testing/Benchmark.run:()V
   35:	iload_2
   36:	iconst_1
   37:	iadd
   38:	istore_2
   39:	goto	13
   42:	invokestatic	#57; //Method java/lang/System.currentTimeMillis:()J
   45:	lstore_3
   46:	invokestatic	#69; //Method java/lang/System.gc:()V
   49:	lload_3
   50:	lload	5
   52:	lsub
   53:	lreturn
  LineNumberTable: 
   line 56: 0
   line 57: 11
   line 58: 26
   line 59: 35
   line 61: 42
   line 62: 46
   line 64: 49

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      54      0    this       Lscala/testing/Benchmark$$anonfun$runBenchmark$1;
   6      48      1    i       I
   13      40      2    i       I
   46      7      3    stopTime       J
   11      42      5    startTime       J


public scala.Function1 andThen(scala.Function1);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#78; //Method scala/Function1$class.andThen:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
   5:	areturn
  LineNumberTable: 
   line 55: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/testing/Benchmark$$anonfun$runBenchmark$1;
   0      6      1    g       Lscala/Function1;


public scala.Function1 compose(scala.Function1);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#83; //Method scala/Function1$class.compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
   5:	areturn
  LineNumberTable: 
   line 55: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/testing/Benchmark$$anonfun$runBenchmark$1;
   0      6      1    g       Lscala/Function1;


public java.lang.String toString();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#88; //Method scala/Function1$class.toString:(Lscala/Function1;)Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 55: 0


}

