Compiled from "SUnit.scala"
public class scala.testing.SUnit$AssertFailed extends java.lang.RuntimeException implements scala.ScalaObject,scala.Product,java.io.Serializable
  SourceFile: "SUnit.scala"
  Scala: length = 0x
   
  InnerClass: 
   public #127= #13 of #177; //AssertFailed=class scala/testing/SUnit$AssertFailed of class scala/testing/SUnit
   public final #178= #48 of #13; //$anonfun$1=class scala/testing/SUnit$AssertFailed$$anonfun$1 of class scala/testing/SUnit$AssertFailed
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	SUnit.scala;
const #3 = Asciz	msg0;
const #4 = Asciz	Ljava/lang/String;;
const #5 = Asciz	stackTrace;
const #6 = Asciz	Z;
const #7 = Asciz	msg;
const #8 = Asciz	<init>;
const #9 = Asciz	(Ljava/lang/String;Z)V;
const #10 = Asciz	Code;
const #11 = Asciz	LineNumberTable;
const #12 = Asciz	scala/testing/SUnit$AssertFailed;
const #13 = class	#12;	//  scala/testing/SUnit$AssertFailed
const #14 = NameAndType	#7:#4;//  msg:Ljava/lang/String;
const #15 = Field	#13.#14;	//  scala/testing/SUnit$AssertFailed.msg:Ljava/lang/String;
const #16 = NameAndType	#5:#6;//  stackTrace:Z
const #17 = Field	#13.#16;	//  scala/testing/SUnit$AssertFailed.stackTrace:Z
const #18 = Asciz	java/lang/RuntimeException;
const #19 = class	#18;	//  java/lang/RuntimeException
const #20 = Asciz	()V;
const #21 = NameAndType	#8:#20;//  "<init>":()V
const #22 = Method	#19.#21;	//  java/lang/RuntimeException."<init>":()V
const #23 = Asciz	scala/Product$class;
const #24 = class	#23;	//  scala/Product$class
const #25 = Asciz	$init$;
const #26 = Asciz	(Lscala/Product;)V;
const #27 = NameAndType	#25:#26;//  $init$:(Lscala/Product;)V
const #28 = Method	#24.#27;	//  scala/Product$class.$init$:(Lscala/Product;)V
const #29 = Asciz	scala/Predef$;
const #30 = class	#29;	//  scala/Predef$
const #31 = Asciz	MODULE$;
const #32 = Asciz	Lscala/Predef$;;
const #33 = NameAndType	#31:#32;//  MODULE$:Lscala/Predef$;
const #34 = Field	#30.#33;	//  scala/Predef$.MODULE$:Lscala/Predef$;
const #35 = Asciz	java/lang/Throwable;
const #36 = class	#35;	//  java/lang/Throwable
const #37 = Asciz	getStackTrace;
const #38 = Asciz	()[Ljava/lang/StackTraceElement;;
const #39 = NameAndType	#37:#38;//  getStackTrace:()[Ljava/lang/StackTraceElement;
const #40 = Method	#36.#39;	//  java/lang/Throwable.getStackTrace:()[Ljava/lang/StackTraceElement;
const #41 = Asciz	[Ljava/lang/Object;;
const #42 = class	#41;	//  "[Ljava/lang/Object;"
const #43 = Asciz	refArrayOps;
const #44 = Asciz	([Ljava/lang/Object;)Lscala/collection/mutable/ArrayOps;;
const #45 = NameAndType	#43:#44;//  refArrayOps:([Ljava/lang/Object;)Lscala/collection/mutable/ArrayOps;
const #46 = Method	#30.#45;	//  scala/Predef$.refArrayOps:([Ljava/lang/Object;)Lscala/collection/mutable/ArrayOps;
const #47 = Asciz	scala/testing/SUnit$AssertFailed$$anonfun$1;
const #48 = class	#47;	//  scala/testing/SUnit$AssertFailed$$anonfun$1
const #49 = Asciz	(Lscala/testing/SUnit$AssertFailed;)V;
const #50 = NameAndType	#8:#49;//  "<init>":(Lscala/testing/SUnit$AssertFailed;)V
const #51 = Method	#48.#50;	//  scala/testing/SUnit$AssertFailed$$anonfun$1."<init>":(Lscala/testing/SUnit$AssertFailed;)V
const #52 = Asciz	scala/Array$;
const #53 = class	#52;	//  scala/Array$
const #54 = Asciz	Lscala/Array$;;
const #55 = NameAndType	#31:#54;//  MODULE$:Lscala/Array$;
const #56 = Field	#53.#55;	//  scala/Array$.MODULE$:Lscala/Array$;
const #57 = Asciz	scala/reflect/ClassManifest$;
const #58 = class	#57;	//  scala/reflect/ClassManifest$
const #59 = Asciz	Lscala/reflect/ClassManifest$;;
const #60 = NameAndType	#31:#59;//  MODULE$:Lscala/reflect/ClassManifest$;
const #61 = Field	#58.#60;	//  scala/reflect/ClassManifest$.MODULE$:Lscala/reflect/ClassManifest$;
const #62 = Asciz	java/lang/String;
const #63 = class	#62;	//  java/lang/String
const #64 = Asciz	classType;
const #65 = Asciz	(Ljava/lang/Class;)Lscala/reflect/ClassManifest;;
const #66 = NameAndType	#64:#65;//  classType:(Ljava/lang/Class;)Lscala/reflect/ClassManifest;
const #67 = Method	#58.#66;	//  scala/reflect/ClassManifest$.classType:(Ljava/lang/Class;)Lscala/reflect/ClassManifest;
const #68 = Asciz	canBuildFrom;
const #69 = Asciz	(Lscala/reflect/ClassManifest;)Lscala/collection/generic/CanBuildFrom;;
const #70 = NameAndType	#68:#69;//  canBuildFrom:(Lscala/reflect/ClassManifest;)Lscala/collection/generic/CanBuildFrom;
const #71 = Method	#53.#70;	//  scala/Array$.canBuildFrom:(Lscala/reflect/ClassManifest;)Lscala/collection/generic/CanBuildFrom;
const #72 = Asciz	scala/collection/TraversableLike;
const #73 = class	#72;	//  scala/collection/TraversableLike
const #74 = Asciz	map;
const #75 = Asciz	(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;;
const #76 = NameAndType	#74:#75;//  map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
const #77 = InterfaceMethod	#73.#76;	//  scala/collection/TraversableLike.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
const #78 = Asciz	mkString;
const #79 = Asciz	()Ljava/lang/String;;
const #80 = NameAndType	#78:#79;//  mkString:()Ljava/lang/String;
const #81 = InterfaceMethod	#73.#80;	//  scala/collection/TraversableLike.mkString:()Ljava/lang/String;
const #82 = NameAndType	#3:#4;//  msg0:Ljava/lang/String;
const #83 = Field	#13.#82;	//  scala/testing/SUnit$AssertFailed.msg0:Ljava/lang/String;
const #84 = Asciz	this;
const #85 = Asciz	Lscala/testing/SUnit$AssertFailed;;
const #86 = Asciz	LocalVariableTable;
const #87 = Asciz	gd1$1;
const #88 = Asciz	(Ljava/lang/String;Z)Z;
const #89 = NameAndType	#7:#79;//  msg:()Ljava/lang/String;
const #90 = Method	#13.#89;	//  scala/testing/SUnit$AssertFailed.msg:()Ljava/lang/String;
const #91 = Asciz	java/lang/Object;
const #92 = class	#91;	//  java/lang/Object
const #93 = Asciz	equals;
const #94 = Asciz	(Ljava/lang/Object;)Z;
const #95 = NameAndType	#93:#94;//  equals:(Ljava/lang/Object;)Z
const #96 = Method	#92.#95;	//  java/lang/Object.equals:(Ljava/lang/Object;)Z
const #97 = Asciz	()Z;
const #98 = NameAndType	#5:#97;//  stackTrace:()Z
const #99 = Method	#13.#98;	//  scala/testing/SUnit$AssertFailed.stackTrace:()Z
const #100 = Asciz	canEqual;
const #101 = Asciz	productElement;
const #102 = Asciz	(I)Ljava/lang/Object;;
const #103 = Asciz	java/lang/IndexOutOfBoundsException;
const #104 = class	#103;	//  java/lang/IndexOutOfBoundsException
const #105 = Asciz	scala/runtime/BoxesRunTime;
const #106 = class	#105;	//  scala/runtime/BoxesRunTime
const #107 = Asciz	boxToInteger;
const #108 = Asciz	(I)Ljava/lang/Integer;;
const #109 = NameAndType	#107:#108;//  boxToInteger:(I)Ljava/lang/Integer;
const #110 = Method	#106.#109;	//  scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
const #111 = Asciz	toString;
const #112 = NameAndType	#111:#79;//  toString:()Ljava/lang/String;
const #113 = Method	#92.#112;	//  java/lang/Object.toString:()Ljava/lang/String;
const #114 = Asciz	(Ljava/lang/String;)V;
const #115 = NameAndType	#8:#114;//  "<init>":(Ljava/lang/String;)V
const #116 = Method	#104.#115;	//  java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
const #117 = Asciz	scala/MatchError;
const #118 = class	#117;	//  scala/MatchError
const #119 = Method	#118.#115;	//  scala/MatchError."<init>":(Ljava/lang/String;)V
const #120 = Asciz	boxToBoolean;
const #121 = Asciz	(Z)Ljava/lang/Boolean;;
const #122 = NameAndType	#120:#121;//  boxToBoolean:(Z)Ljava/lang/Boolean;
const #123 = Method	#106.#122;	//  scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
const #124 = Asciz	productArity;
const #125 = Asciz	()I;
const #126 = Asciz	productPrefix;
const #127 = Asciz	AssertFailed;
const #128 = String	#127;	//  AssertFailed
const #129 = NameAndType	#87:#88;//  gd1$1:(Ljava/lang/String;Z)Z
const #130 = Method	#13.#129;	//  scala/testing/SUnit$AssertFailed.gd1$1:(Ljava/lang/String;Z)Z
const #131 = Asciz	scala/Equals;
const #132 = class	#131;	//  scala/Equals
const #133 = NameAndType	#100:#94;//  canEqual:(Ljava/lang/Object;)Z
const #134 = InterfaceMethod	#132.#133;	//  scala/Equals.canEqual:(Ljava/lang/Object;)Z
const #135 = Asciz	temp2;
const #136 = Asciz	temp3;
const #137 = Asciz	temp4;
const #138 = Asciz	hashCode;
const #139 = Asciz	scala/runtime/ScalaRunTime$;
const #140 = class	#139;	//  scala/runtime/ScalaRunTime$
const #141 = Asciz	Lscala/runtime/ScalaRunTime$;;
const #142 = NameAndType	#31:#141;//  MODULE$:Lscala/runtime/ScalaRunTime$;
const #143 = Field	#140.#142;	//  scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
const #144 = Asciz	_hashCode;
const #145 = Asciz	(Lscala/Product;)I;
const #146 = NameAndType	#144:#145;//  _hashCode:(Lscala/Product;)I
const #147 = Method	#140.#146;	//  scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
const #148 = Asciz	copy;
const #149 = Asciz	(Ljava/lang/String;Z)Lscala/testing/SUnit$AssertFailed;;
const #150 = NameAndType	#8:#9;//  "<init>":(Ljava/lang/String;Z)V
const #151 = Method	#13.#150;	//  scala/testing/SUnit$AssertFailed."<init>":(Ljava/lang/String;Z)V
const #152 = NameAndType	#3:#79;//  msg0:()Ljava/lang/String;
const #153 = Method	#13.#152;	//  scala/testing/SUnit$AssertFailed.msg0:()Ljava/lang/String;
const #154 = Asciz	scala/collection/mutable/StringBuilder;
const #155 = class	#154;	//  scala/collection/mutable/StringBuilder
const #156 = Method	#155.#21;	//  scala/collection/mutable/StringBuilder."<init>":()V
const #157 = Asciz	failed assertion: ;
const #158 = String	#157;	//  failed assertion: 
const #159 = Asciz	append;
const #160 = Asciz	(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;;
const #161 = NameAndType	#159:#160;//  append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
const #162 = Method	#155.#161;	//  scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
const #163 = Method	#155.#112;	//  scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
const #164 = Asciz	copy$default$1;
const #165 = Asciz	copy$default$2;
const #166 = Asciz	productElements;
const #167 = Asciz	()Lscala/collection/Iterator;;
const #168 = Asciz	(Lscala/Product;)Lscala/collection/Iterator;;
const #169 = NameAndType	#166:#168;//  productElements:(Lscala/Product;)Lscala/collection/Iterator;
const #170 = Method	#24.#169;	//  scala/Product$class.productElements:(Lscala/Product;)Lscala/collection/Iterator;
const #171 = Asciz	productIterator;
const #172 = NameAndType	#171:#168;//  productIterator:(Lscala/Product;)Lscala/collection/Iterator;
const #173 = Method	#24.#172;	//  scala/Product$class.productIterator:(Lscala/Product;)Lscala/collection/Iterator;
const #174 = Asciz	Scala;
const #175 = Asciz	InnerClasses;
const #176 = Asciz	scala/testing/SUnit;
const #177 = class	#176;	//  scala/testing/SUnit
const #178 = Asciz	$anonfun$1;
const #179 = Asciz	scala/ScalaObject;
const #180 = class	#179;	//  scala/ScalaObject
const #181 = Asciz	scala/Product;
const #182 = class	#181;	//  scala/Product
const #183 = Asciz	java/io/Serializable;
const #184 = class	#183;	//  java/io/Serializable

{
public scala.testing.SUnit$AssertFailed(java.lang.String, boolean);
  Code:
   Stack=7, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	putfield	#15; //Field msg:Ljava/lang/String;
   5:	aload_0
   6:	iload_2
   7:	putfield	#17; //Field stackTrace:Z
   10:	aload_0
   11:	invokespecial	#22; //Method java/lang/RuntimeException."<init>":()V
   14:	aload_0
   15:	invokestatic	#28; //Method scala/Product$class.$init$:(Lscala/Product;)V
   18:	aload_0
   19:	iload_2
   20:	ifeq	80
   23:	getstatic	#34; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   26:	getstatic	#34; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   29:	aload_0
   30:	invokespecial	#40; //Method java/lang/Throwable.getStackTrace:()[Ljava/lang/StackTraceElement;
   33:	checkcast	#42; //class "[Ljava/lang/Object;"
   36:	invokevirtual	#46; //Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Lscala/collection/mutable/ArrayOps;
   39:	new	#48; //class scala/testing/SUnit$AssertFailed$$anonfun$1
   42:	dup
   43:	aload_0
   44:	invokespecial	#51; //Method scala/testing/SUnit$AssertFailed$$anonfun$1."<init>":(Lscala/testing/SUnit$AssertFailed;)V
   47:	getstatic	#56; //Field scala/Array$.MODULE$:Lscala/Array$;
   50:	getstatic	#61; //Field scala/reflect/ClassManifest$.MODULE$:Lscala/reflect/ClassManifest$;
   53:	ldc	#63; //class java/lang/String
   55:	invokevirtual	#67; //Method scala/reflect/ClassManifest$.classType:(Ljava/lang/Class;)Lscala/reflect/ClassManifest;
   58:	invokevirtual	#71; //Method scala/Array$.canBuildFrom:(Lscala/reflect/ClassManifest;)Lscala/collection/generic/CanBuildFrom;
   61:	invokeinterface	#77,  3; //InterfaceMethod scala/collection/TraversableLike.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
   66:	checkcast	#42; //class "[Ljava/lang/Object;"
   69:	invokevirtual	#46; //Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Lscala/collection/mutable/ArrayOps;
   72:	invokeinterface	#81,  1; //InterfaceMethod scala/collection/TraversableLike.mkString:()Ljava/lang/String;
   77:	goto	81
   80:	aload_1
   81:	putfield	#83; //Field msg0:Ljava/lang/String;
   84:	return
  LineNumberTable: 
   line 152: 0
   line 153: 18
   line 154: 19
   line 155: 80
   line 153: 81

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      85      0    this       Lscala/testing/SUnit$AssertFailed;
   0      85      1    msg       Ljava/lang/String;
   0      85      2    stackTrace       Z


public boolean canEqual(java.lang.Object);
  Code:
   Stack=1, Locals=2, Args_size=2
   0:	aload_1
   1:	instanceof	#13; //class scala/testing/SUnit$AssertFailed
   4:	ireturn
  LineNumberTable: 
   line 152: 0


public java.lang.Object productElement(int);
  Code:
   Stack=3, Locals=3, Args_size=2
   0:	iload_1
   1:	tableswitch{ //0 to 1
		0: 89;
		1: 58;
		default: 24 }
   24:	iconst_1
   25:	ifeq	43
   28:	new	#104; //class java/lang/IndexOutOfBoundsException
   31:	dup
   32:	iload_1
   33:	invokestatic	#110; //Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   36:	invokevirtual	#113; //Method java/lang/Object.toString:()Ljava/lang/String;
   39:	invokespecial	#116; //Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
   42:	athrow
   43:	new	#118; //class scala/MatchError
   46:	dup
   47:	iload_1
   48:	invokestatic	#110; //Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   51:	invokevirtual	#113; //Method java/lang/Object.toString:()Ljava/lang/String;
   54:	invokespecial	#119; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   57:	athrow
   58:	iconst_1
   59:	ifeq	74
   62:	aload_0
   63:	invokevirtual	#99; //Method stackTrace:()Z
   66:	istore_2
   67:	iload_2
   68:	invokestatic	#123; //Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
   71:	goto	97
   74:	new	#118; //class scala/MatchError
   77:	dup
   78:	iload_1
   79:	invokestatic	#110; //Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   82:	invokevirtual	#113; //Method java/lang/Object.toString:()Ljava/lang/String;
   85:	invokespecial	#119; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   88:	athrow
   89:	iconst_1
   90:	ifeq	98
   93:	aload_0
   94:	invokevirtual	#90; //Method msg:()Ljava/lang/String;
   97:	areturn
   98:	new	#118; //class scala/MatchError
   101:	dup
   102:	iload_1
   103:	invokestatic	#110; //Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   106:	invokevirtual	#113; //Method java/lang/Object.toString:()Ljava/lang/String;
   109:	invokespecial	#119; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   112:	athrow
  LineNumberTable: 
   line 152: 0
   line 21: 24
   line 152: 28
   line 21: 58
   line 152: 62
   line 21: 89
   line 152: 93


public int productArity();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	iconst_2
   1:	ireturn
  LineNumberTable: 
   line 152: 0


public java.lang.String productPrefix();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	ldc	#128; //String AssertFailed
   2:	areturn
  LineNumberTable: 
   line 152: 0


public boolean equals(java.lang.Object);
  Code:
   Stack=3, Locals=5, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	if_acmpeq	79
   5:	aload_1
   6:	instanceof	#13; //class scala/testing/SUnit$AssertFailed
   9:	ifeq	71
   12:	aload_1
   13:	checkcast	#13; //class scala/testing/SUnit$AssertFailed
   16:	astore_2
   17:	aload_2
   18:	invokevirtual	#90; //Method msg:()Ljava/lang/String;
   21:	astore_3
   22:	aload_2
   23:	invokevirtual	#99; //Method stackTrace:()Z
   26:	istore	4
   28:	aload_0
   29:	aload_3
   30:	iload	4
   32:	invokespecial	#130; //Method gd1$1:(Ljava/lang/String;Z)Z
   35:	ifeq	51
   38:	aload_1
   39:	checkcast	#13; //class scala/testing/SUnit$AssertFailed
   42:	aload_0
   43:	invokeinterface	#134,  2; //InterfaceMethod scala/Equals.canEqual:(Ljava/lang/Object;)Z
   48:	goto	76
   51:	iconst_1
   52:	ifeq	59
   55:	iconst_0
   56:	goto	76
   59:	new	#118; //class scala/MatchError
   62:	dup
   63:	aload_1
   64:	invokevirtual	#113; //Method java/lang/Object.toString:()Ljava/lang/String;
   67:	invokespecial	#119; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   70:	athrow
   71:	iconst_1
   72:	ifeq	85
   75:	iconst_0
   76:	ifeq	83
   79:	iconst_1
   80:	goto	84
   83:	iconst_0
   84:	ireturn
   85:	new	#118; //class scala/MatchError
   88:	dup
   89:	aload_1
   90:	invokevirtual	#113; //Method java/lang/Object.toString:()Ljava/lang/String;
   93:	invokespecial	#119; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   96:	athrow
  LineNumberTable: 
   line 152: 0
   line 21: 51
   line 152: 59
   line 21: 71
   line 152: 76

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      97      0    this       Lscala/testing/SUnit$AssertFailed;
   17      54      2    temp2       Lscala/testing/SUnit$AssertFailed;
   22      49      3    temp3       Ljava/lang/String;
   28      43      4    temp4       Z


public int hashCode();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	getstatic	#143; //Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   3:	aload_0
   4:	invokevirtual	#147; //Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
   7:	ireturn
  LineNumberTable: 
   line 152: 0


public scala.testing.SUnit$AssertFailed copy(java.lang.String, boolean);
  Code:
   Stack=4, Locals=3, Args_size=3
   0:	new	#13; //class scala/testing/SUnit$AssertFailed
   3:	dup
   4:	aload_1
   5:	iload_2
   6:	invokespecial	#151; //Method "<init>":(Ljava/lang/String;Z)V
   9:	areturn
  LineNumberTable: 
   line 152: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    this       Lscala/testing/SUnit$AssertFailed;
   0      10      1    msg       Ljava/lang/String;
   0      10      2    stackTrace       Z


public java.lang.String toString();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	invokespecial	#153; //Method msg0:()Ljava/lang/String;
   4:	ifnonnull	32
   7:	new	#155; //class scala/collection/mutable/StringBuilder
   10:	dup
   11:	invokespecial	#156; //Method scala/collection/mutable/StringBuilder."<init>":()V
   14:	ldc	#158; //String failed assertion: 
   16:	invokevirtual	#162; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   19:	aload_0
   20:	invokevirtual	#90; //Method msg:()Ljava/lang/String;
   23:	invokevirtual	#162; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   26:	invokevirtual	#163; //Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
   29:	goto	36
   32:	aload_0
   33:	invokespecial	#153; //Method msg0:()Ljava/lang/String;
   36:	areturn
  LineNumberTable: 
   line 157: 0


public boolean stackTrace();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#17; //Field stackTrace:Z
   4:	ireturn
  LineNumberTable: 
   line 152: 0


public java.lang.String msg();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#15; //Field msg:Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 152: 0


public java.lang.String copy$default$1();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#90; //Method msg:()Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 152: 0


public boolean copy$default$2();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#99; //Method stackTrace:()Z
   4:	ireturn
  LineNumberTable: 
   line 152: 0


public scala.collection.Iterator productElements();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#170; //Method scala/Product$class.productElements:(Lscala/Product;)Lscala/collection/Iterator;
   4:	areturn
  LineNumberTable: 
   line 152: 0


public scala.collection.Iterator productIterator();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#173; //Method scala/Product$class.productIterator:(Lscala/Product;)Lscala/collection/Iterator;
   4:	areturn
  LineNumberTable: 
   line 152: 0


}

