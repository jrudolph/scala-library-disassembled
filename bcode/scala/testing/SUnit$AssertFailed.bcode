Compiled from "SUnit.scala"
public class scala.testing.SUnit$AssertFailed extends java.lang.RuntimeException implements scala.ScalaObject,scala.Product,java.io.Serializable
  SourceFile: "SUnit.scala"
  Scala: length = 0x
   
  InnerClass: 
   public #89= #13 of #144; //AssertFailed=class scala/testing/SUnit$AssertFailed of class scala/testing/SUnit
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	SUnit.scala;
const #3 = Asciz	msg0;
const #4 = Asciz	Ljava/lang/String;;
const #5 = Asciz	stackTrace;
const #6 = Asciz	Z;
const #7 = Asciz	msg;
const #8 = Asciz	<init>;
const #9 = Asciz	(Ljava/lang/String;Z)V;
const #10 = Asciz	Code;
const #11 = Asciz	LineNumberTable;
const #12 = Asciz	scala/testing/SUnit$AssertFailed;
const #13 = class	#12;	//  scala/testing/SUnit$AssertFailed
const #14 = NameAndType	#7:#4;//  msg:Ljava/lang/String;
const #15 = Field	#13.#14;	//  scala/testing/SUnit$AssertFailed.msg:Ljava/lang/String;
const #16 = NameAndType	#5:#6;//  stackTrace:Z
const #17 = Field	#13.#16;	//  scala/testing/SUnit$AssertFailed.stackTrace:Z
const #18 = Asciz	java/lang/RuntimeException;
const #19 = class	#18;	//  java/lang/RuntimeException
const #20 = Asciz	()V;
const #21 = NameAndType	#8:#20;//  "<init>":()V
const #22 = Method	#19.#21;	//  java/lang/RuntimeException."<init>":()V
const #23 = Asciz	scala/Product$class;
const #24 = class	#23;	//  scala/Product$class
const #25 = Asciz	$init$;
const #26 = Asciz	(Lscala/Product;)V;
const #27 = NameAndType	#25:#26;//  $init$:(Lscala/Product;)V
const #28 = Method	#24.#27;	//  scala/Product$class.$init$:(Lscala/Product;)V
const #29 = Asciz	java/io/StringWriter;
const #30 = class	#29;	//  java/io/StringWriter
const #31 = Method	#30.#21;	//  java/io/StringWriter."<init>":()V
const #32 = Asciz	java/io/PrintWriter;
const #33 = class	#32;	//  java/io/PrintWriter
const #34 = Asciz	(Ljava/io/Writer;)V;
const #35 = NameAndType	#8:#34;//  "<init>":(Ljava/io/Writer;)V
const #36 = Method	#33.#35;	//  java/io/PrintWriter."<init>":(Ljava/io/Writer;)V
const #37 = Asciz	printStackTrace;
const #38 = Asciz	(Ljava/io/PrintWriter;)V;
const #39 = NameAndType	#37:#38;//  printStackTrace:(Ljava/io/PrintWriter;)V
const #40 = Method	#13.#39;	//  scala/testing/SUnit$AssertFailed.printStackTrace:(Ljava/io/PrintWriter;)V
const #41 = Asciz	toString;
const #42 = Asciz	()Ljava/lang/String;;
const #43 = NameAndType	#41:#42;//  toString:()Ljava/lang/String;
const #44 = Method	#30.#43;	//  java/io/StringWriter.toString:()Ljava/lang/String;
const #45 = NameAndType	#3:#4;//  msg0:Ljava/lang/String;
const #46 = Field	#13.#45;	//  scala/testing/SUnit$AssertFailed.msg0:Ljava/lang/String;
const #47 = Asciz	this;
const #48 = Asciz	Lscala/testing/SUnit$AssertFailed;;
const #49 = Asciz	wrt;
const #50 = Asciz	Ljava/io/StringWriter;;
const #51 = Asciz	LocalVariableTable;
const #52 = Asciz	gd1$1;
const #53 = Asciz	(ZLjava/lang/String;)Z;
const #54 = NameAndType	#7:#42;//  msg:()Ljava/lang/String;
const #55 = Method	#13.#54;	//  scala/testing/SUnit$AssertFailed.msg:()Ljava/lang/String;
const #56 = Asciz	java/lang/Object;
const #57 = class	#56;	//  java/lang/Object
const #58 = Asciz	equals;
const #59 = Asciz	(Ljava/lang/Object;)Z;
const #60 = NameAndType	#58:#59;//  equals:(Ljava/lang/Object;)Z
const #61 = Method	#57.#60;	//  java/lang/Object.equals:(Ljava/lang/Object;)Z
const #62 = Asciz	()Z;
const #63 = NameAndType	#5:#62;//  stackTrace:()Z
const #64 = Method	#13.#63;	//  scala/testing/SUnit$AssertFailed.stackTrace:()Z
const #65 = Asciz	canEqual;
const #66 = Asciz	productElement;
const #67 = Asciz	(I)Ljava/lang/Object;;
const #68 = Asciz	java/lang/IndexOutOfBoundsException;
const #69 = class	#68;	//  java/lang/IndexOutOfBoundsException
const #70 = Asciz	scala/runtime/BoxesRunTime;
const #71 = class	#70;	//  scala/runtime/BoxesRunTime
const #72 = Asciz	boxToInteger;
const #73 = Asciz	(I)Ljava/lang/Integer;;
const #74 = NameAndType	#72:#73;//  boxToInteger:(I)Ljava/lang/Integer;
const #75 = Method	#71.#74;	//  scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
const #76 = Method	#57.#43;	//  java/lang/Object.toString:()Ljava/lang/String;
const #77 = Asciz	(Ljava/lang/String;)V;
const #78 = NameAndType	#8:#77;//  "<init>":(Ljava/lang/String;)V
const #79 = Method	#69.#78;	//  java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
const #80 = Asciz	boxToBoolean;
const #81 = Asciz	(Z)Ljava/lang/Boolean;;
const #82 = NameAndType	#80:#81;//  boxToBoolean:(Z)Ljava/lang/Boolean;
const #83 = Method	#71.#82;	//  scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
const #84 = Asciz	temp5;
const #85 = Asciz	I;
const #86 = Asciz	productArity;
const #87 = Asciz	()I;
const #88 = Asciz	productPrefix;
const #89 = Asciz	AssertFailed;
const #90 = String	#89;	//  AssertFailed
const #91 = NameAndType	#52:#53;//  gd1$1:(ZLjava/lang/String;)Z
const #92 = Method	#13.#91;	//  scala/testing/SUnit$AssertFailed.gd1$1:(ZLjava/lang/String;)Z
const #93 = Asciz	scala/Product;
const #94 = class	#93;	//  scala/Product
const #95 = NameAndType	#65:#59;//  canEqual:(Ljava/lang/Object;)Z
const #96 = InterfaceMethod	#94.#95;	//  scala/Product.canEqual:(Ljava/lang/Object;)Z
const #97 = Asciz	temp1;
const #98 = Asciz	Ljava/lang/Object;;
const #99 = Asciz	temp2;
const #100 = Asciz	temp3;
const #101 = Asciz	temp4;
const #102 = Asciz	stackTrace$1;
const #103 = Asciz	msg$1;
const #104 = Asciz	hashCode;
const #105 = Asciz	scala/runtime/ScalaRunTime$;
const #106 = class	#105;	//  scala/runtime/ScalaRunTime$
const #107 = Asciz	MODULE$;
const #108 = Asciz	Lscala/runtime/ScalaRunTime$;;
const #109 = NameAndType	#107:#108;//  MODULE$:Lscala/runtime/ScalaRunTime$;
const #110 = Field	#106.#109;	//  scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
const #111 = Asciz	_hashCode;
const #112 = Asciz	(Lscala/Product;)I;
const #113 = NameAndType	#111:#112;//  _hashCode:(Lscala/Product;)I
const #114 = Method	#106.#113;	//  scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
const #115 = Asciz	copy$default$1;
const #116 = Asciz	copy$default$2;
const #117 = Asciz	copy;
const #118 = Asciz	(Ljava/lang/String;Z)Lscala/testing/SUnit$AssertFailed;;
const #119 = NameAndType	#8:#9;//  "<init>":(Ljava/lang/String;Z)V
const #120 = Method	#13.#119;	//  scala/testing/SUnit$AssertFailed."<init>":(Ljava/lang/String;Z)V
const #121 = NameAndType	#3:#42;//  msg0:()Ljava/lang/String;
const #122 = Method	#13.#121;	//  scala/testing/SUnit$AssertFailed.msg0:()Ljava/lang/String;
const #123 = Asciz	scala/collection/mutable/StringBuilder;
const #124 = class	#123;	//  scala/collection/mutable/StringBuilder
const #125 = Method	#124.#21;	//  scala/collection/mutable/StringBuilder."<init>":()V
const #126 = Asciz	failed assertion: ;
const #127 = String	#126;	//  failed assertion: 
const #128 = Asciz	append;
const #129 = Asciz	(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;;
const #130 = NameAndType	#128:#129;//  append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
const #131 = Method	#124.#130;	//  scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
const #132 = Method	#124.#43;	//  scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
const #133 = Asciz	productElements;
const #134 = Asciz	()Lscala/collection/Iterator;;
const #135 = Asciz	(Lscala/Product;)Lscala/collection/Iterator;;
const #136 = NameAndType	#133:#135;//  productElements:(Lscala/Product;)Lscala/collection/Iterator;
const #137 = Method	#24.#136;	//  scala/Product$class.productElements:(Lscala/Product;)Lscala/collection/Iterator;
const #138 = Asciz	productIterator;
const #139 = NameAndType	#138:#135;//  productIterator:(Lscala/Product;)Lscala/collection/Iterator;
const #140 = Method	#24.#139;	//  scala/Product$class.productIterator:(Lscala/Product;)Lscala/collection/Iterator;
const #141 = Asciz	Scala;
const #142 = Asciz	InnerClasses;
const #143 = Asciz	scala/testing/SUnit;
const #144 = class	#143;	//  scala/testing/SUnit
const #145 = Asciz	scala/ScalaObject;
const #146 = class	#145;	//  scala/ScalaObject
const #147 = Asciz	java/io/Serializable;
const #148 = class	#147;	//  java/io/Serializable

{
public scala.testing.SUnit$AssertFailed(java.lang.String, boolean);
  Code:
   Stack=5, Locals=4, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	putfield	#15; //Field msg:Ljava/lang/String;
   5:	aload_0
   6:	iload_2
   7:	putfield	#17; //Field stackTrace:Z
   10:	aload_0
   11:	invokespecial	#22; //Method java/lang/RuntimeException."<init>":()V
   14:	aload_0
   15:	invokestatic	#28; //Method scala/Product$class.$init$:(Lscala/Product;)V
   18:	aload_0
   19:	iload_2
   20:	ifeq	50
   23:	new	#30; //class java/io/StringWriter
   26:	dup
   27:	invokespecial	#31; //Method java/io/StringWriter."<init>":()V
   30:	astore_3
   31:	aload_0
   32:	new	#33; //class java/io/PrintWriter
   35:	dup
   36:	aload_3
   37:	invokespecial	#36; //Method java/io/PrintWriter."<init>":(Ljava/io/Writer;)V
   40:	invokevirtual	#40; //Method printStackTrace:(Ljava/io/PrintWriter;)V
   43:	aload_3
   44:	invokevirtual	#44; //Method java/io/StringWriter.toString:()Ljava/lang/String;
   47:	goto	51
   50:	aload_1
   51:	putfield	#46; //Field msg0:Ljava/lang/String;
   54:	return
  LineNumberTable: 
   line 152: 0
   line 153: 18
   line 155: 23
   line 156: 31
   line 157: 43
   line 158: 50
   line 153: 51

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      55      0    this       Lscala/testing/SUnit$AssertFailed;
   0      55      1    msg       Ljava/lang/String;
   0      55      2    stackTrace       Z
   31      16      3    wrt       Ljava/io/StringWriter;


public boolean canEqual(java.lang.Object);
  Code:
   Stack=1, Locals=2, Args_size=2
   0:	aload_1
   1:	instanceof	#13; //class scala/testing/SUnit$AssertFailed
   4:	ireturn
  LineNumberTable: 
   line 152: 0


public java.lang.Object productElement(int);
  Code:
   Stack=3, Locals=3, Args_size=2
   0:	iload_1
   1:	istore_2
   2:	iload_2
   3:	tableswitch{ //0 to 1
		0: 49;
		1: 39;
		default: 24 }
   24:	new	#69; //class java/lang/IndexOutOfBoundsException
   27:	dup
   28:	iload_1
   29:	invokestatic	#75; //Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   32:	invokevirtual	#76; //Method java/lang/Object.toString:()Ljava/lang/String;
   35:	invokespecial	#79; //Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
   38:	athrow
   39:	aload_0
   40:	invokevirtual	#64; //Method stackTrace:()Z
   43:	invokestatic	#83; //Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
   46:	goto	53
   49:	aload_0
   50:	invokevirtual	#55; //Method msg:()Ljava/lang/String;
   53:	areturn
  LineNumberTable: 
   line 152: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      54      0    this       Lscala/testing/SUnit$AssertFailed;
   2      52      2    temp5       I


public int productArity();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	iconst_2
   1:	ireturn
  LineNumberTable: 
   line 152: 0


public java.lang.String productPrefix();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	ldc	#90; //String AssertFailed
   2:	areturn
  LineNumberTable: 
   line 152: 0


public boolean equals(java.lang.Object);
  Code:
   Stack=3, Locals=8, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	if_acmpeq	75
   5:	aload_1
   6:	astore_2
   7:	aload_2
   8:	instanceof	#13; //class scala/testing/SUnit$AssertFailed
   11:	ifeq	71
   14:	aload_2
   15:	checkcast	#13; //class scala/testing/SUnit$AssertFailed
   18:	astore_3
   19:	aload_3
   20:	invokevirtual	#55; //Method msg:()Ljava/lang/String;
   23:	astore	4
   25:	aload_3
   26:	invokevirtual	#64; //Method stackTrace:()Z
   29:	istore	5
   31:	iload	5
   33:	istore	6
   35:	aload	4
   37:	astore	7
   39:	aload_0
   40:	iload	6
   42:	aload	7
   44:	invokespecial	#92; //Method gd1$1:(ZLjava/lang/String;)Z
   47:	ifeq	67
   50:	iload	5
   52:	istore	6
   54:	aload_1
   55:	checkcast	#13; //class scala/testing/SUnit$AssertFailed
   58:	aload_0
   59:	invokeinterface	#96,  2; //InterfaceMethod scala/Product.canEqual:(Ljava/lang/Object;)Z
   64:	goto	72
   67:	iconst_0
   68:	goto	72
   71:	iconst_0
   72:	ifeq	79
   75:	iconst_1
   76:	goto	80
   79:	iconst_0
   80:	ireturn
  LineNumberTable: 
   line 152: 0
   line 21: 67
   line 152: 72

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      81      0    this       Lscala/testing/SUnit$AssertFailed;
   7      68      2    temp1       Ljava/lang/Object;
   19      52      3    temp2       Lscala/testing/SUnit$AssertFailed;
   25      46      4    temp3       Ljava/lang/String;
   31      40      5    temp4       Z
   35      15      6    stackTrace$1       Z
   54      10      6    stackTrace$1       Z
   50      21      6    stackTrace$1       Z
   39      32      7    msg$1       Ljava/lang/String;


public int hashCode();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	getstatic	#110; //Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   3:	aload_0
   4:	invokevirtual	#114; //Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
   7:	ireturn
  LineNumberTable: 
   line 152: 0


public java.lang.String copy$default$1();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#55; //Method msg:()Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 152: 0


public boolean copy$default$2();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#64; //Method stackTrace:()Z
   4:	ireturn
  LineNumberTable: 
   line 152: 0


public scala.testing.SUnit$AssertFailed copy(java.lang.String, boolean);
  Code:
   Stack=4, Locals=3, Args_size=3
   0:	new	#13; //class scala/testing/SUnit$AssertFailed
   3:	dup
   4:	aload_1
   5:	iload_2
   6:	invokespecial	#120; //Method "<init>":(Ljava/lang/String;Z)V
   9:	areturn
  LineNumberTable: 
   line 152: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    this       Lscala/testing/SUnit$AssertFailed;
   0      10      1    msg       Ljava/lang/String;
   0      10      2    stackTrace       Z


public java.lang.String toString();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	invokespecial	#122; //Method msg0:()Ljava/lang/String;
   4:	ifnonnull	32
   7:	new	#124; //class scala/collection/mutable/StringBuilder
   10:	dup
   11:	invokespecial	#125; //Method scala/collection/mutable/StringBuilder."<init>":()V
   14:	ldc	#127; //String failed assertion: 
   16:	invokevirtual	#131; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   19:	aload_0
   20:	invokevirtual	#55; //Method msg:()Ljava/lang/String;
   23:	invokevirtual	#131; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   26:	invokevirtual	#132; //Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
   29:	goto	36
   32:	aload_0
   33:	invokespecial	#122; //Method msg0:()Ljava/lang/String;
   36:	areturn
  LineNumberTable: 
   line 160: 0


public boolean stackTrace();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#17; //Field stackTrace:Z
   4:	ireturn
  LineNumberTable: 
   line 152: 0


public java.lang.String msg();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#15; //Field msg:Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 152: 0


public scala.collection.Iterator productElements();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#137; //Method scala/Product$class.productElements:(Lscala/Product;)Lscala/collection/Iterator;
   4:	areturn
  LineNumberTable: 
   line 152: 0


public scala.collection.Iterator productIterator();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#140; //Method scala/Product$class.productIterator:(Lscala/Product;)Lscala/collection/Iterator;
   4:	areturn
  LineNumberTable: 
   line 152: 0


}

