Compiled from "SUnit.scala"
public class scala.testing.SUnit$TestSuite extends java.lang.Object implements scala.testing.SUnit$Test,scala.ScalaObject
  SourceFile: "SUnit.scala"
  Scala: length = 0x
   
  InnerClass: 
   public abstract Test=class scala/testing/SUnit$Test of class scala/testing/SUnit
   public TestSuite=class scala/testing/SUnit$TestSuite of class scala/testing/SUnit
   public TestResult=class scala/testing/SUnit$TestResult of class scala/testing/SUnit
   public final $anonfun$run$1=class scala/testing/SUnit$TestSuite$$anonfun$run$1 of class scala/testing/SUnit$TestSuite
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	SUnit.scala;
Asciz	buf;
Asciz	Lscala/collection/mutable/ArrayBuffer;;
Asciz	Lscala/collection/mutable/ArrayBuffer<Lscala/testing/SUnit$Test;>;;
Asciz	Signature;
Asciz	<init>;
Asciz	(Lscala/collection/Seq;Lscala/Function1;)V;
Asciz	Code;
Asciz	LineNumberTable;
Asciz	scala/collection/Seq$;
class	scala/collection/Seq$
Asciz	MODULE$;
Asciz	Lscala/collection/Seq$;;
NameAndType	MODULE$:Lscala/collection/Seq$;
Field	scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
Asciz	canBuildFrom;
Asciz	()Lscala/collection/generic/CanBuildFrom;;
NameAndType	canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
Method	scala/collection/Seq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
Asciz	scala/collection/TraversableLike;
class	scala/collection/TraversableLike
Asciz	map;
Asciz	(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;;
NameAndType	map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
InterfaceMethod	scala/collection/TraversableLike.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
Asciz	scala/collection/Seq;
class	scala/collection/Seq
Asciz	scala/testing/SUnit$TestSuite;
class	scala/testing/SUnit$TestSuite
Asciz	(Lscala/collection/Seq;)V;
NameAndType	"<init>":(Lscala/collection/Seq;)V
Method	scala/testing/SUnit$TestSuite."<init>":(Lscala/collection/Seq;)V
Asciz	this;
Asciz	Lscala/testing/SUnit$TestSuite;;
Asciz	names;
Asciz	Lscala/collection/Seq;;
Asciz	constr;
Asciz	Lscala/Function1;;
Asciz	LocalVariableTable;
Asciz	(Lscala/collection/Seq<Ljava/lang/String;>;Lscala/Function1<Ljava/lang/String;Lscala/testing/SUnit$Test;>;)V;
Asciz	()Lscala/collection/mutable/ArrayBuffer;;
NameAndType	buf:Lscala/collection/mutable/ArrayBuffer;
Field	scala/testing/SUnit$TestSuite.buf:Lscala/collection/mutable/ArrayBuffer;
Asciz	()Lscala/collection/mutable/ArrayBuffer<Lscala/testing/SUnit$Test;>;;
Asciz	addTest;
Asciz	(Lscala/testing/SUnit$Test;)V;
NameAndType	buf:()Lscala/collection/mutable/ArrayBuffer;
Method	scala/testing/SUnit$TestSuite.buf:()Lscala/collection/mutable/ArrayBuffer;
Asciz	scala/collection/mutable/ArrayBuffer;
class	scala/collection/mutable/ArrayBuffer
Asciz	$plus$eq;
Asciz	(Ljava/lang/Object;)Lscala/collection/mutable/ArrayBuffer;;
NameAndType	$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/ArrayBuffer;
Method	scala/collection/mutable/ArrayBuffer.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/ArrayBuffer;
Asciz	t;
Asciz	Lscala/testing/SUnit$Test;;
Asciz	run;
Asciz	(Lscala/testing/SUnit$TestResult;)V;
Asciz	scala/testing/SUnit$TestSuite$$anonfun$run$1;
class	scala/testing/SUnit$TestSuite$$anonfun$run$1
Asciz	(Lscala/testing/SUnit$TestSuite;Lscala/testing/SUnit$TestResult;)V;
NameAndType	"<init>":(Lscala/testing/SUnit$TestSuite;Lscala/testing/SUnit$TestResult;)V
Method	scala/testing/SUnit$TestSuite$$anonfun$run$1."<init>":(Lscala/testing/SUnit$TestSuite;Lscala/testing/SUnit$TestResult;)V
Asciz	scala/collection/mutable/ResizableArray;
class	scala/collection/mutable/ResizableArray
Asciz	foreach;
Asciz	(Lscala/Function1;)V;
NameAndType	foreach:(Lscala/Function1;)V
InterfaceMethod	scala/collection/mutable/ResizableArray.foreach:(Lscala/Function1;)V
Asciz	r$1;
Asciz	Lscala/testing/SUnit$TestResult;;
Asciz	java/lang/Object;
class	java/lang/Object
Asciz	()V;
NameAndType	"<init>":()V
Method	java/lang/Object."<init>":()V
Method	scala/collection/mutable/ArrayBuffer."<init>":()V
Asciz	$plus$plus$eq;
Asciz	(Lscala/collection/TraversableOnce;)Lscala/collection/mutable/ArrayBuffer;;
NameAndType	$plus$plus$eq:(Lscala/collection/TraversableOnce;)Lscala/collection/mutable/ArrayBuffer;
Method	scala/collection/mutable/ArrayBuffer.$plus$plus$eq:(Lscala/collection/TraversableOnce;)Lscala/collection/mutable/ArrayBuffer;
Asciz	tests;
Asciz	(Lscala/collection/Seq<Lscala/testing/SUnit$Test;>;)V;
Asciz	Scala;
Asciz	InnerClasses;
Asciz	scala/testing/SUnit$Test;
class	scala/testing/SUnit$Test
Asciz	scala/testing/SUnit;
class	scala/testing/SUnit
Asciz	Test;
Asciz	TestSuite;
Asciz	scala/testing/SUnit$TestResult;
class	scala/testing/SUnit$TestResult
Asciz	TestResult;
Asciz	$anonfun$run$1;
Asciz	scala/ScalaObject;
class	scala/ScalaObject

{
private final scala.collection.mutable.ArrayBuffer buf;
  Signature: Lscala/collection/mutable/ArrayBuffer;
  Signature: length = 0x2
   00 05 

public scala.testing.SUnit$TestSuite(scala.collection.Seq, scala.Function1);
  Signature: (Lscala/collection/Seq;Lscala/Function1;)V
  Code:
   Stack=4, Locals=3, Args_size=3
	aload_0
	aload_1
	aload_2
	getstatic	Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
	invokevirtual	Method scala/collection/Seq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
	invokeinterface	InterfaceMethod scala/collection/TraversableLike.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
	checkcast	class scala/collection/Seq
	invokespecial	Method "<init>":(Lscala/collection/Seq;)V
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      21      0    this       Lscala/testing/SUnit$TestSuite;
   0      21      1    names       Lscala/collection/Seq;
   0      21      2    constr       Lscala/Function1;

  Signature: length = 0x2
   00 29 

public scala.collection.mutable.ArrayBuffer buf();
  Signature: ()Lscala/collection/mutable/ArrayBuffer;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field buf:Lscala/collection/mutable/ArrayBuffer;
	areturn
  Labels:
  Signature: length = 0x2
   00 2D 

public void addTest(scala.testing.SUnit$Test);
  Signature: (Lscala/testing/SUnit$Test;)V
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	invokevirtual	Method buf:()Lscala/collection/mutable/ArrayBuffer;
	aload_1
	invokevirtual	Method scala/collection/mutable/ArrayBuffer.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/ArrayBuffer;
	pop
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    this       Lscala/testing/SUnit$TestSuite;
   0      10      1    t       Lscala/testing/SUnit$Test;


public void run(scala.testing.SUnit$TestResult);
  Signature: (Lscala/testing/SUnit$TestResult;)V
  Code:
   Stack=5, Locals=2, Args_size=2
	aload_0
	invokevirtual	Method buf:()Lscala/collection/mutable/ArrayBuffer;
	new	class scala/testing/SUnit$TestSuite$$anonfun$run$1
	dup
	aload_0
	aload_1
	invokespecial	Method scala/testing/SUnit$TestSuite$$anonfun$run$1."<init>":(Lscala/testing/SUnit$TestSuite;Lscala/testing/SUnit$TestResult;)V
	invokeinterface	InterfaceMethod scala/collection/mutable/ResizableArray.foreach:(Lscala/Function1;)V
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      19      0    this       Lscala/testing/SUnit$TestSuite;
   0      19      1    r$1       Lscala/testing/SUnit$TestResult;


public scala.testing.SUnit$TestSuite(scala.collection.Seq);
  Signature: (Lscala/collection/Seq;)V
  Code:
   Stack=3, Locals=2, Args_size=2
	aload_0
	invokespecial	Method java/lang/Object."<init>":()V
	aload_0
	new	class scala/collection/mutable/ArrayBuffer
	dup
	invokespecial	Method scala/collection/mutable/ArrayBuffer."<init>":()V
	putfield	Field buf:Lscala/collection/mutable/ArrayBuffer;
	aload_0
	invokevirtual	Method buf:()Lscala/collection/mutable/ArrayBuffer;
	aload_1
	invokevirtual	Method scala/collection/mutable/ArrayBuffer.$plus$plus$eq:(Lscala/collection/TraversableOnce;)Lscala/collection/mutable/ArrayBuffer;
	pop
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      25      0    this       Lscala/testing/SUnit$TestSuite;
   0      25      1    tests       Lscala/collection/Seq;

  Signature: length = 0x2
   00 54 

}

