Compiled from "Show.scala"
public class scala.testing.Show$SymApply extends java.lang.Object implements scala.ScalaObject
  SourceFile: "Show.scala"
  Scala: length = 0x
   
  InnerClass: 
   public SymApply=class scala/testing/Show$SymApply of class scala/testing/Show
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	Show.scala;
Asciz	f;
Asciz	Lscala/Symbol;;
Asciz	$outer;
Asciz	Lscala/testing/Show;;
Asciz	apply;
Asciz	(Lscala/collection/Seq;)V;
Asciz	Code;
Asciz	scala/Predef$;
class	scala/Predef$
Asciz	MODULE$;
Asciz	Lscala/Predef$;;
NameAndType	MODULE$:Lscala/Predef$;
Field	scala/Predef$.MODULE$:Lscala/Predef$;
Asciz	LineNumberTable;
Asciz	scala/testing/Show$SymApply;
class	scala/testing/Show$SymApply
Asciz	scala$testing$Show$SymApply$$$outer;
Asciz	()Lscala/testing/Show;;
NameAndType	scala$testing$Show$SymApply$$$outer:()Lscala/testing/Show;
Method	scala/testing/Show$SymApply.scala$testing$Show$SymApply$$$outer:()Lscala/testing/Show;
NameAndType	f:Lscala/Symbol;
Field	scala/testing/Show$SymApply.f:Lscala/Symbol;
Asciz	scala/testing/Show;
class	scala/testing/Show
Asciz	test;
Asciz	(Lscala/Symbol;Lscala/collection/Seq;)Ljava/lang/String;;
NameAndType	test:(Lscala/Symbol;Lscala/collection/Seq;)Ljava/lang/String;
InterfaceMethod	scala/testing/Show.test:(Lscala/Symbol;Lscala/collection/Seq;)Ljava/lang/String;
Asciz	println;
Asciz	(Ljava/lang/Object;)V;
NameAndType	println:(Ljava/lang/Object;)V
Method	scala/Predef$.println:(Ljava/lang/Object;)V
Asciz	this;
Asciz	Lscala/testing/Show$SymApply;;
Asciz	args;
Asciz	Lscala/collection/Seq;;
Asciz	LocalVariableTable;
Asciz	<A:Ljava/lang/Object;>(Lscala/collection/Seq<TA;>;)V;
Asciz	Signature;
NameAndType	$outer:Lscala/testing/Show;
Field	scala/testing/Show$SymApply.$outer:Lscala/testing/Show;
Asciz	<init>;
Asciz	(Lscala/testing/Show;Lscala/Symbol;)V;
Asciz	java/lang/NullPointerException;
class	java/lang/NullPointerException
Asciz	()V;
NameAndType	"<init>":()V
Method	java/lang/NullPointerException."<init>":()V
Asciz	java/lang/Object;
class	java/lang/Object
Method	java/lang/Object."<init>":()V
Asciz	Scala;
Asciz	InnerClasses;
Asciz	SymApply;
Asciz	scala/ScalaObject;
class	scala/ScalaObject

{
private final scala.Symbol f;
  Signature: Lscala/Symbol;

public final scala.testing.Show $outer;
  Signature: Lscala/testing/Show;

public void apply(scala.collection.Seq);
  Signature: (Lscala/collection/Seq;)V
  Code:
   Stack=4, Locals=2, Args_size=2
	getstatic	Field scala/Predef$.MODULE$:Lscala/Predef$;
	aload_0
	invokevirtual	Method scala$testing$Show$SymApply$$$outer:()Lscala/testing/Show;
	aload_0
	getfield	Field f:Lscala/Symbol;
	aload_1
	invokeinterface	InterfaceMethod scala/testing/Show.test:(Lscala/Symbol;Lscala/collection/Seq;)Ljava/lang/String;
	invokevirtual	Method scala/Predef$.println:(Ljava/lang/Object;)V
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      21      0    this       Lscala/testing/Show$SymApply;
   0      21      1    args       Lscala/collection/Seq;

  Signature: length = 0x2
   00 28 

public scala.testing.Show scala$testing$Show$SymApply$$$outer();
  Signature: ()Lscala/testing/Show;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field $outer:Lscala/testing/Show;
	areturn
  Labels:

public scala.testing.Show$SymApply(scala.testing.Show, scala.Symbol);
  Signature: (Lscala/testing/Show;Lscala/Symbol;)V
  Code:
   Stack=2, Locals=3, Args_size=3
	aload_0
	aload_2
	putfield	Field f:Lscala/Symbol;
	aload_1
	ifnonnull	l1 // aload_0
	new	class java/lang/NullPointerException
	dup
	invokespecial	Method java/lang/NullPointerException."<init>":()V
	athrow
l1	aload_0
	aload_1
	putfield	Field $outer:Lscala/testing/Show;
	aload_0
	invokespecial	Method java/lang/Object."<init>":()V
	return
  Labels:
   	l1 = 17 // aload_0
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      27      0    this       Lscala/testing/Show$SymApply;
   0      27      1    $outer       Lscala/testing/Show;
   0      27      2    f       Lscala/Symbol;


}

