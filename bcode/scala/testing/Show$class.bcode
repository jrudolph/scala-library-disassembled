Compiled from "Show.scala"
public abstract class scala.testing.Show$class extends java.lang.Object
  SourceFile: "Show.scala"
  Scala: length = 0x
   
  InnerClass: 
   public #207= #200 of #206; //SymApply=class scala/testing/Show$SymApply of class scala/testing/Show
   public #210= #124 of #209; //ofRef=class scala/collection/mutable/ArrayOps$ofRef of class scala/collection/mutable/ArrayOps
   public final #211= #94 of #206; //$anonfun$1=class scala/testing/Show$$anonfun$1 of class scala/testing/Show
   public final #212= #172 of #206; //$anonfun$test$2=class scala/testing/Show$$anonfun$test$2 of class scala/testing/Show
   public final #213= #133 of #206; //$anonfun$test$1=class scala/testing/Show$$anonfun$test$1 of class scala/testing/Show
   public #216= #54 of #215; //ClassTypeManifest=class scala/reflect/ClassManifest$ClassTypeManifest of class scala/reflect/ClassManifest
   public #219= #103 of #218; //GenericCanBuildFrom=class scala/collection/generic/TraversableFactory$GenericCanBuildFrom of class scala/collection/generic/TraversableFactory
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Show.scala;
const #3 = Asciz	$init$;
const #4 = Asciz	(Lscala/testing/Show;)V;
const #5 = Asciz	Code;
const #6 = Asciz	LineNumberTable;
const #7 = Asciz	$this;
const #8 = Asciz	Lscala/testing/Show;;
const #9 = Asciz	LocalVariableTable;
const #10 = Asciz	testMethod$1;
const #11 = Asciz	(Lscala/testing/Show;Ljava/lang/reflect/Method;Lscala/Symbol;Lscala/collection/Seq;Lscala/collection/Seq;)Ljava/lang/String;;
const #12 = Asciz	scala/collection/mutable/StringBuilder;
const #13 = class	#12;	//  scala/collection/mutable/StringBuilder
const #14 = Asciz	<init>;
const #15 = Asciz	()V;
const #16 = NameAndType	#14:#15;//  "<init>":()V
const #17 = Method	#13.#16;	//  scala/collection/mutable/StringBuilder."<init>":()V
const #18 = Asciz	scala/Symbol;
const #19 = class	#18;	//  scala/Symbol
const #20 = Asciz	name;
const #21 = Asciz	()Ljava/lang/String;;
const #22 = NameAndType	#20:#21;//  name:()Ljava/lang/String;
const #23 = Method	#19.#22;	//  scala/Symbol.name:()Ljava/lang/String;
const #24 = Asciz	append;
const #25 = Asciz	(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;;
const #26 = NameAndType	#24:#25;//  append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
const #27 = Method	#13.#26;	//  scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
const #28 = Asciz	(;
const #29 = String	#28;	//  (
const #30 = Asciz	,;
const #31 = String	#30;	//  ,
const #32 = Asciz	scala/collection/TraversableLike;
const #33 = class	#32;	//  scala/collection/TraversableLike
const #34 = Asciz	mkString;
const #35 = Asciz	(Ljava/lang/String;)Ljava/lang/String;;
const #36 = NameAndType	#34:#35;//  mkString:(Ljava/lang/String;)Ljava/lang/String;
const #37 = InterfaceMethod	#33.#36;	//  scala/collection/TraversableLike.mkString:(Ljava/lang/String;)Ljava/lang/String;
const #38 = Asciz	)  gives  ;
const #39 = String	#38;	//  )  gives  
const #40 = Asciz	scala/testing/Show$class;
const #41 = class	#40;	//  scala/testing/Show$class
const #42 = Asciz	liftedTree1$1;
const #43 = Asciz	(Lscala/testing/Show;Lscala/collection/Seq;Ljava/lang/reflect/Method;)Ljava/lang/Object;;
const #44 = NameAndType	#42:#43;//  liftedTree1$1:(Lscala/testing/Show;Lscala/collection/Seq;Ljava/lang/reflect/Method;)Ljava/lang/Object;
const #45 = Method	#41.#44;	//  scala/testing/Show$class.liftedTree1$1:(Lscala/testing/Show;Lscala/collection/Seq;Ljava/lang/reflect/Method;)Ljava/lang/Object;
const #46 = Asciz	toString;
const #47 = NameAndType	#46:#21;//  toString:()Ljava/lang/String;
const #48 = Method	#13.#47;	//  scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
const #49 = Asciz	meth$1;
const #50 = Asciz	Ljava/lang/reflect/Method;;
const #51 = Asciz	java/lang/Object;
const #52 = class	#51;	//  java/lang/Object
const #53 = Asciz	scala/reflect/ClassManifest$ClassTypeManifest;
const #54 = class	#53;	//  scala/reflect/ClassManifest$ClassTypeManifest
const #55 = Asciz	scala/None$;
const #56 = class	#55;	//  scala/None$
const #57 = Asciz	MODULE$;
const #58 = Asciz	Lscala/None$;;
const #59 = NameAndType	#57:#58;//  MODULE$:Lscala/None$;
const #60 = Field	#56.#59;	//  scala/None$.MODULE$:Lscala/None$;
const #61 = Asciz	scala/collection/immutable/Nil$;
const #62 = class	#61;	//  scala/collection/immutable/Nil$
const #63 = Asciz	Lscala/collection/immutable/Nil$;;
const #64 = NameAndType	#57:#63;//  MODULE$:Lscala/collection/immutable/Nil$;
const #65 = Field	#62.#64;	//  scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
const #66 = Asciz	(Lscala/Option;Ljava/lang/Class;Lscala/collection/immutable/List;)V;
const #67 = NameAndType	#14:#66;//  "<init>":(Lscala/Option;Ljava/lang/Class;Lscala/collection/immutable/List;)V
const #68 = Method	#54.#67;	//  scala/reflect/ClassManifest$ClassTypeManifest."<init>":(Lscala/Option;Ljava/lang/Class;Lscala/collection/immutable/List;)V
const #69 = Asciz	toArray;
const #70 = Asciz	(Lscala/reflect/ClassManifest;)Ljava/lang/Object;;
const #71 = NameAndType	#69:#70;//  toArray:(Lscala/reflect/ClassManifest;)Ljava/lang/Object;
const #72 = InterfaceMethod	#33.#71;	//  scala/collection/TraversableLike.toArray:(Lscala/reflect/ClassManifest;)Ljava/lang/Object;
const #73 = Asciz	[Ljava/lang/Object;;
const #74 = class	#73;	//  "[Ljava/lang/Object;"
const #75 = Asciz	java/lang/reflect/Method;
const #76 = class	#75;	//  java/lang/reflect/Method
const #77 = Asciz	invoke;
const #78 = Asciz	(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;;
const #79 = NameAndType	#77:#78;//  invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
const #80 = Method	#76.#79;	//  java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
const #81 = Asciz	java/lang/IllegalAccessException;
const #82 = class	#81;	//  java/lang/IllegalAccessException
const #83 = Asciz	java/lang/IllegalArgumentException;
const #84 = class	#83;	//  java/lang/IllegalArgumentException
const #85 = Asciz	java/lang/reflect/InvocationTargetException;
const #86 = class	#85;	//  java/lang/reflect/InvocationTargetException
const #87 = Asciz	clazz0;
const #88 = Asciz	Ljava/lang/Class;;
const #89 = Asciz	exceptionResult1;
const #90 = Asciz	Ljava/lang/Object;;
const #91 = Asciz	test;
const #92 = Asciz	(Lscala/testing/Show;Lscala/Symbol;Lscala/collection/Seq;)Ljava/lang/String;;
const #93 = Asciz	scala/testing/Show$$anonfun$1;
const #94 = class	#93;	//  scala/testing/Show$$anonfun$1
const #95 = NameAndType	#14:#4;//  "<init>":(Lscala/testing/Show;)V
const #96 = Method	#94.#95;	//  scala/testing/Show$$anonfun$1."<init>":(Lscala/testing/Show;)V
const #97 = Asciz	scala/collection/Seq$;
const #98 = class	#97;	//  scala/collection/Seq$
const #99 = Asciz	Lscala/collection/Seq$;;
const #100 = NameAndType	#57:#99;//  MODULE$:Lscala/collection/Seq$;
const #101 = Field	#98.#100;	//  scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
const #102 = Asciz	scala/collection/generic/TraversableFactory$GenericCanBuildFrom;
const #103 = class	#102;	//  scala/collection/generic/TraversableFactory$GenericCanBuildFrom
const #104 = Asciz	(Lscala/collection/generic/TraversableFactory;)V;
const #105 = NameAndType	#14:#104;//  "<init>":(Lscala/collection/generic/TraversableFactory;)V
const #106 = Method	#103.#105;	//  scala/collection/generic/TraversableFactory$GenericCanBuildFrom."<init>":(Lscala/collection/generic/TraversableFactory;)V
const #107 = Asciz	map;
const #108 = Asciz	(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;;
const #109 = NameAndType	#107:#108;//  map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
const #110 = InterfaceMethod	#33.#109;	//  scala/collection/TraversableLike.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
const #111 = Asciz	scala/collection/Seq;
const #112 = class	#111;	//  scala/collection/Seq
const #113 = Asciz	getClass;
const #114 = Asciz	()Ljava/lang/Class;;
const #115 = NameAndType	#113:#114;//  getClass:()Ljava/lang/Class;
const #116 = Method	#52.#115;	//  java/lang/Object.getClass:()Ljava/lang/Class;
const #117 = Asciz	java/lang/Class;
const #118 = class	#117;	//  java/lang/Class
const #119 = Asciz	getMethods;
const #120 = Asciz	()[Ljava/lang/reflect/Method;;
const #121 = NameAndType	#119:#120;//  getMethods:()[Ljava/lang/reflect/Method;
const #122 = Method	#118.#121;	//  java/lang/Class.getMethods:()[Ljava/lang/reflect/Method;
const #123 = Asciz	scala/collection/mutable/ArrayOps$ofRef;
const #124 = class	#123;	//  scala/collection/mutable/ArrayOps$ofRef
const #125 = Asciz	([Ljava/lang/Object;)V;
const #126 = NameAndType	#14:#125;//  "<init>":([Ljava/lang/Object;)V
const #127 = Method	#124.#126;	//  scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
const #128 = Asciz	toList;
const #129 = Asciz	()Lscala/collection/immutable/List;;
const #130 = NameAndType	#128:#129;//  toList:()Lscala/collection/immutable/List;
const #131 = InterfaceMethod	#33.#130;	//  scala/collection/TraversableLike.toList:()Lscala/collection/immutable/List;
const #132 = Asciz	scala/testing/Show$$anonfun$test$1;
const #133 = class	#132;	//  scala/testing/Show$$anonfun$test$1
const #134 = Asciz	(Lscala/testing/Show;Lscala/Symbol;)V;
const #135 = NameAndType	#14:#134;//  "<init>":(Lscala/testing/Show;Lscala/Symbol;)V
const #136 = Method	#133.#135;	//  scala/testing/Show$$anonfun$test$1."<init>":(Lscala/testing/Show;Lscala/Symbol;)V
const #137 = Asciz	filter;
const #138 = Asciz	(Lscala/Function1;)Ljava/lang/Object;;
const #139 = NameAndType	#137:#138;//  filter:(Lscala/Function1;)Ljava/lang/Object;
const #140 = InterfaceMethod	#33.#139;	//  scala/collection/TraversableLike.filter:(Lscala/Function1;)Ljava/lang/Object;
const #141 = Asciz	scala/collection/immutable/List;
const #142 = class	#141;	//  scala/collection/immutable/List
const #143 = Asciz	Ljava/lang/String;;
const #144 = NameAndType	#20:#143;//  name:Ljava/lang/String;
const #145 = Field	#19.#144;	//  scala/Symbol.name:Ljava/lang/String;
const #146 = Asciz	 is not defined;
const #147 = String	#146;	//   is not defined
const #148 = Asciz	scala/MatchError;
const #149 = class	#148;	//  scala/MatchError
const #150 = Asciz	scala/collection/SeqLike;
const #151 = class	#150;	//  scala/collection/SeqLike
const #152 = InterfaceMethod	#151.#47;	//  scala/collection/SeqLike.toString:()Ljava/lang/String;
const #153 = Asciz	(Ljava/lang/String;)V;
const #154 = NameAndType	#14:#153;//  "<init>":(Ljava/lang/String;)V
const #155 = Method	#149.#154;	//  scala/MatchError."<init>":(Ljava/lang/String;)V
const #156 = Asciz	scala/collection/immutable/$colon$colon;
const #157 = class	#156;	//  scala/collection/immutable/$colon$colon
const #158 = Asciz	scala$collection$immutable$$colon$colon$$hd;
const #159 = NameAndType	#158:#90;//  scala$collection$immutable$$colon$colon$$hd:Ljava/lang/Object;
const #160 = Field	#157.#159;	//  scala/collection/immutable/$colon$colon.scala$collection$immutable$$colon$colon$$hd:Ljava/lang/Object;
const #161 = Asciz	tl;
const #162 = Asciz	Lscala/collection/immutable/List;;
const #163 = NameAndType	#161:#162;//  tl:Lscala/collection/immutable/List;
const #164 = Field	#157.#163;	//  scala/collection/immutable/$colon$colon.tl:Lscala/collection/immutable/List;
const #165 = Asciz	equals;
const #166 = Asciz	(Ljava/lang/Object;)Z;
const #167 = NameAndType	#165:#166;//  equals:(Ljava/lang/Object;)Z
const #168 = Method	#52.#167;	//  java/lang/Object.equals:(Ljava/lang/Object;)Z
const #169 = NameAndType	#10:#11;//  testMethod$1:(Lscala/testing/Show;Ljava/lang/reflect/Method;Lscala/Symbol;Lscala/collection/Seq;Lscala/collection/Seq;)Ljava/lang/String;
const #170 = Method	#41.#169;	//  scala/testing/Show$class.testMethod$1:(Lscala/testing/Show;Ljava/lang/reflect/Method;Lscala/Symbol;Lscala/collection/Seq;Lscala/collection/Seq;)Ljava/lang/String;
const #171 = Asciz	scala/testing/Show$$anonfun$test$2;
const #172 = class	#171;	//  scala/testing/Show$$anonfun$test$2
const #173 = Asciz	(Lscala/testing/Show;Lscala/collection/Seq;)V;
const #174 = NameAndType	#14:#173;//  "<init>":(Lscala/testing/Show;Lscala/collection/Seq;)V
const #175 = Method	#172.#174;	//  scala/testing/Show$$anonfun$test$2."<init>":(Lscala/testing/Show;Lscala/collection/Seq;)V
const #176 = Asciz	scala/collection/IterableLike;
const #177 = class	#176;	//  scala/collection/IterableLike
const #178 = Asciz	head;
const #179 = Asciz	()Ljava/lang/Object;;
const #180 = NameAndType	#178:#179;//  head:()Ljava/lang/Object;
const #181 = InterfaceMethod	#177.#180;	//  scala/collection/IterableLike.head:()Ljava/lang/Object;
const #182 = Asciz	cannot disambiguate between multiple implementations of ;
const #183 = String	#182;	//  cannot disambiguate between multiple implementations of 
const #184 = Asciz	f$1;
const #185 = Asciz	Lscala/Symbol;;
const #186 = Asciz	args$1;
const #187 = Asciz	Lscala/collection/Seq;;
const #188 = Asciz	temp10;
const #189 = Asciz	temp9;
const #190 = Asciz	Lscala/collection/immutable/$colon$colon;;
const #191 = Asciz	ms;
const #192 = Asciz	temp3;
const #193 = Asciz	temp4;
const #194 = Asciz	args1$1;
const #195 = Asciz	temp1;
const #196 = Asciz	temp7;
const #197 = Asciz	symApply;
const #198 = Asciz	(Lscala/testing/Show;Lscala/Symbol;)Lscala/testing/Show$SymApply;;
const #199 = Asciz	scala/testing/Show$SymApply;
const #200 = class	#199;	//  scala/testing/Show$SymApply
const #201 = Method	#200.#135;	//  scala/testing/Show$SymApply."<init>":(Lscala/testing/Show;Lscala/Symbol;)V
const #202 = Asciz	sym;
const #203 = Asciz	Scala;
const #204 = Asciz	InnerClasses;
const #205 = Asciz	scala/testing/Show;
const #206 = class	#205;	//  scala/testing/Show
const #207 = Asciz	SymApply;
const #208 = Asciz	scala/collection/mutable/ArrayOps;
const #209 = class	#208;	//  scala/collection/mutable/ArrayOps
const #210 = Asciz	ofRef;
const #211 = Asciz	$anonfun$1;
const #212 = Asciz	$anonfun$test$2;
const #213 = Asciz	$anonfun$test$1;
const #214 = Asciz	scala/reflect/ClassManifest;
const #215 = class	#214;	//  scala/reflect/ClassManifest
const #216 = Asciz	ClassTypeManifest;
const #217 = Asciz	scala/collection/generic/TraversableFactory;
const #218 = class	#217;	//  scala/collection/generic/TraversableFactory
const #219 = Asciz	GenericCanBuildFrom;

{
public static void $init$(scala.testing.Show);
  Code:
   Stack=0, Locals=1, Args_size=1
   0:	return
  LineNumberTable: 
   line 29: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      1      0    $this       Lscala/testing/Show;


public static java.lang.String test(scala.testing.Show, scala.Symbol, scala.collection.Seq);
  Code:
   Stack=5, Locals=15, Args_size=3
   0:	aload_2
   1:	new	#94; //class scala/testing/Show$$anonfun$1
   4:	dup
   5:	aload_0
   6:	invokespecial	#96; //Method scala/testing/Show$$anonfun$1."<init>":(Lscala/testing/Show;)V
   9:	getstatic	#101; //Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
   12:	astore_3
   13:	new	#103; //class scala/collection/generic/TraversableFactory$GenericCanBuildFrom
   16:	dup
   17:	aload_3
   18:	invokespecial	#106; //Method scala/collection/generic/TraversableFactory$GenericCanBuildFrom."<init>":(Lscala/collection/generic/TraversableFactory;)V
   21:	invokeinterface	#110,  3; //InterfaceMethod scala/collection/TraversableLike.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
   26:	checkcast	#112; //class scala/collection/Seq
   29:	astore	12
   31:	aload_0
   32:	invokevirtual	#116; //Method java/lang/Object.getClass:()Ljava/lang/Class;
   35:	invokevirtual	#122; //Method java/lang/Class.getMethods:()[Ljava/lang/reflect/Method;
   38:	checkcast	#74; //class "[Ljava/lang/Object;"
   41:	astore	4
   43:	new	#124; //class scala/collection/mutable/ArrayOps$ofRef
   46:	dup
   47:	aload	4
   49:	invokespecial	#127; //Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
   52:	invokeinterface	#131,  1; //InterfaceMethod scala/collection/TraversableLike.toList:()Lscala/collection/immutable/List;
   57:	new	#133; //class scala/testing/Show$$anonfun$test$1
   60:	dup
   61:	aload_0
   62:	aload_1
   63:	invokespecial	#136; //Method scala/testing/Show$$anonfun$test$1."<init>":(Lscala/testing/Show;Lscala/Symbol;)V
   66:	invokeinterface	#140,  2; //InterfaceMethod scala/collection/TraversableLike.filter:(Lscala/Function1;)Ljava/lang/Object;
   71:	checkcast	#142; //class scala/collection/immutable/List
   74:	astore	14
   76:	aload	14
   78:	instanceof	#62; //class scala/collection/immutable/Nil$
   81:	ifeq	128
   84:	iconst_1
   85:	ifeq	113
   88:	new	#13; //class scala/collection/mutable/StringBuilder
   91:	dup
   92:	invokespecial	#17; //Method scala/collection/mutable/StringBuilder."<init>":()V
   95:	aload_1
   96:	getfield	#145; //Field scala/Symbol.name:Ljava/lang/String;
   99:	invokevirtual	#27; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   102:	ldc	#147; //String  is not defined
   104:	invokevirtual	#27; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   107:	invokevirtual	#48; //Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
   110:	goto	455
   113:	new	#149; //class scala/MatchError
   116:	dup
   117:	aload	14
   119:	invokeinterface	#152,  1; //InterfaceMethod scala/collection/SeqLike.toString:()Ljava/lang/String;
   124:	invokespecial	#155; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   127:	athrow
   128:	aload	14
   130:	instanceof	#157; //class scala/collection/immutable/$colon$colon
   133:	ifeq	242
   136:	aload	14
   138:	checkcast	#157; //class scala/collection/immutable/$colon$colon
   141:	astore	7
   143:	aload	7
   145:	getfield	#160; //Field scala/collection/immutable/$colon$colon.scala$collection$immutable$$colon$colon$$hd:Ljava/lang/Object;
   148:	checkcast	#76; //class java/lang/reflect/Method
   151:	astore	6
   153:	getstatic	#65; //Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
   156:	aload	7
   158:	getfield	#164; //Field scala/collection/immutable/$colon$colon.tl:Lscala/collection/immutable/List;
   161:	astore	5
   163:	dup
   164:	ifnonnull	176
   167:	pop
   168:	aload	5
   170:	ifnull	184
   173:	goto	216
   176:	aload	5
   178:	invokevirtual	#168; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   181:	ifeq	216
   184:	iconst_1
   185:	ifeq	201
   188:	aload_0
   189:	aload	6
   191:	aload_1
   192:	aload_2
   193:	aload	12
   195:	invokestatic	#170; //Method testMethod$1:(Lscala/testing/Show;Ljava/lang/reflect/Method;Lscala/Symbol;Lscala/collection/Seq;Lscala/collection/Seq;)Ljava/lang/String;
   198:	goto	455
   201:	new	#149; //class scala/MatchError
   204:	dup
   205:	aload	14
   207:	invokeinterface	#152,  1; //InterfaceMethod scala/collection/SeqLike.toString:()Ljava/lang/String;
   212:	invokespecial	#155; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   215:	athrow
   216:	iconst_1
   217:	ifeq	227
   220:	aload	7
   222:	astore	8
   224:	goto	250
   227:	new	#149; //class scala/MatchError
   230:	dup
   231:	aload	14
   233:	invokeinterface	#152,  1; //InterfaceMethod scala/collection/SeqLike.toString:()Ljava/lang/String;
   238:	invokespecial	#155; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   241:	athrow
   242:	iconst_1
   243:	ifeq	471
   246:	aload	14
   248:	astore	8
   250:	aload	8
   252:	new	#172; //class scala/testing/Show$$anonfun$test$2
   255:	dup
   256:	aload_0
   257:	aload_2
   258:	invokespecial	#175; //Method scala/testing/Show$$anonfun$test$2."<init>":(Lscala/testing/Show;Lscala/collection/Seq;)V
   261:	invokeinterface	#140,  2; //InterfaceMethod scala/collection/TraversableLike.filter:(Lscala/Function1;)Ljava/lang/Object;
   266:	checkcast	#142; //class scala/collection/immutable/List
   269:	astore	13
   271:	aload	13
   273:	instanceof	#62; //class scala/collection/immutable/Nil$
   276:	ifeq	319
   279:	iconst_1
   280:	ifeq	304
   283:	aload_0
   284:	aload	8
   286:	invokeinterface	#181,  1; //InterfaceMethod scala/collection/IterableLike.head:()Ljava/lang/Object;
   291:	checkcast	#76; //class java/lang/reflect/Method
   294:	aload_1
   295:	aload_2
   296:	aload	12
   298:	invokestatic	#170; //Method testMethod$1:(Lscala/testing/Show;Ljava/lang/reflect/Method;Lscala/Symbol;Lscala/collection/Seq;Lscala/collection/Seq;)Ljava/lang/String;
   301:	goto	455
   304:	new	#149; //class scala/MatchError
   307:	dup
   308:	aload	13
   310:	invokeinterface	#152,  1; //InterfaceMethod scala/collection/SeqLike.toString:()Ljava/lang/String;
   315:	invokespecial	#155; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   318:	athrow
   319:	aload	13
   321:	instanceof	#157; //class scala/collection/immutable/$colon$colon
   324:	ifeq	429
   327:	aload	13
   329:	checkcast	#157; //class scala/collection/immutable/$colon$colon
   332:	astore	9
   334:	aload	9
   336:	getfield	#160; //Field scala/collection/immutable/$colon$colon.scala$collection$immutable$$colon$colon$$hd:Ljava/lang/Object;
   339:	checkcast	#76; //class java/lang/reflect/Method
   342:	astore	11
   344:	getstatic	#65; //Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
   347:	aload	9
   349:	getfield	#164; //Field scala/collection/immutable/$colon$colon.tl:Lscala/collection/immutable/List;
   352:	astore	10
   354:	dup
   355:	ifnonnull	367
   358:	pop
   359:	aload	10
   361:	ifnull	375
   364:	goto	407
   367:	aload	10
   369:	invokevirtual	#168; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   372:	ifeq	407
   375:	iconst_1
   376:	ifeq	392
   379:	aload_0
   380:	aload	11
   382:	aload_1
   383:	aload_2
   384:	aload	12
   386:	invokestatic	#170; //Method testMethod$1:(Lscala/testing/Show;Ljava/lang/reflect/Method;Lscala/Symbol;Lscala/collection/Seq;Lscala/collection/Seq;)Ljava/lang/String;
   389:	goto	455
   392:	new	#149; //class scala/MatchError
   395:	dup
   396:	aload	13
   398:	invokeinterface	#152,  1; //InterfaceMethod scala/collection/SeqLike.toString:()Ljava/lang/String;
   403:	invokespecial	#155; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   406:	athrow
   407:	iconst_1
   408:	ifeq	414
   411:	goto	433
   414:	new	#149; //class scala/MatchError
   417:	dup
   418:	aload	13
   420:	invokeinterface	#152,  1; //InterfaceMethod scala/collection/SeqLike.toString:()Ljava/lang/String;
   425:	invokespecial	#155; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   428:	athrow
   429:	iconst_1
   430:	ifeq	456
   433:	new	#13; //class scala/collection/mutable/StringBuilder
   436:	dup
   437:	invokespecial	#17; //Method scala/collection/mutable/StringBuilder."<init>":()V
   440:	ldc	#183; //String cannot disambiguate between multiple implementations of 
   442:	invokevirtual	#27; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   445:	aload_1
   446:	getfield	#145; //Field scala/Symbol.name:Ljava/lang/String;
   449:	invokevirtual	#27; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   452:	invokevirtual	#48; //Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
   455:	areturn
   456:	new	#149; //class scala/MatchError
   459:	dup
   460:	aload	13
   462:	invokeinterface	#152,  1; //InterfaceMethod scala/collection/SeqLike.toString:()Ljava/lang/String;
   467:	invokespecial	#155; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   470:	athrow
   471:	new	#149; //class scala/MatchError
   474:	dup
   475:	aload	14
   477:	invokeinterface	#152,  1; //InterfaceMethod scala/collection/SeqLike.toString:()Ljava/lang/String;
   482:	invokespecial	#155; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   485:	athrow
  LineNumberTable: 
   line 48: 0
   line 60: 31
   line 21: 84
   line 62: 88
   line 60: 113
   line 47: 136
   line 60: 153
   line 47: 156
   line 60: 161
   line 21: 184
   line 64: 188
   line 60: 201
   line 21: 216
   line 65: 220
   line 66: 224
   line 60: 227
   line 21: 242
   line 65: 246
   line 66: 250
   line 21: 279
   line 68: 283
   line 66: 304
   line 47: 327
   line 66: 344
   line 47: 347
   line 66: 352
   line 21: 375
   line 70: 379
   line 66: 392
   line 21: 407
   line 72: 411
   line 66: 414
   line 21: 429
   line 72: 433
   line 47: 455
   line 66: 456
   line 60: 471

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      486      0    $this       Lscala/testing/Show;
   0      486      1    f$1       Lscala/Symbol;
   0      486      2    args$1       Lscala/collection/Seq;
   153      89      6    temp10       Ljava/lang/reflect/Method;
   250      205      6    temp10       Ljava/lang/reflect/Method;
   456      15      6    temp10       Ljava/lang/reflect/Method;
   143      99      7    temp9       Lscala/collection/immutable/$colon$colon;
   250      205      7    temp9       Lscala/collection/immutable/$colon$colon;
   456      15      7    temp9       Lscala/collection/immutable/$colon$colon;
   216      4      8    ms       Lscala/collection/immutable/List;
   224      3      8    ms       Lscala/collection/immutable/List;
   220      22      8    ms       Lscala/collection/immutable/List;
   250      205      8    ms       Lscala/collection/immutable/List;
   456      15      8    ms       Lscala/collection/immutable/List;
   334      95      9    temp3       Lscala/collection/immutable/$colon$colon;
   433      22      9    temp3       Lscala/collection/immutable/$colon$colon;
   344      85      11    temp4       Ljava/lang/reflect/Method;
   433      22      11    temp4       Ljava/lang/reflect/Method;
   31      455      12    args1$1       Lscala/collection/Seq;
   271      184      13    temp1       Lscala/collection/immutable/List;
   456      15      13    temp1       Lscala/collection/immutable/List;
   76      410      14    temp7       Lscala/collection/immutable/List;


public static scala.testing.Show$SymApply symApply(scala.testing.Show, scala.Symbol);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#200; //class scala/testing/Show$SymApply
   3:	dup
   4:	aload_0
   5:	aload_1
   6:	invokespecial	#201; //Method scala/testing/Show$SymApply."<init>":(Lscala/testing/Show;Lscala/Symbol;)V
   9:	areturn
  LineNumberTable: 
   line 42: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    $this       Lscala/testing/Show;
   0      10      1    sym       Lscala/Symbol;


}

