Compiled from "Show.scala"
public abstract class scala.testing.Show$class extends java.lang.Object
  SourceFile: "Show.scala"
  Scala: length = 0x
   
  InnerClass: 
   public SymApply=class scala/testing/Show$SymApply of class scala/testing/Show
   public final $anonfun$1=class scala/testing/Show$$anonfun$1 of class scala/testing/Show
   public final $anonfun$test$2=class scala/testing/Show$$anonfun$test$2 of class scala/testing/Show
   public final $anonfun$test$1=class scala/testing/Show$$anonfun$test$1 of class scala/testing/Show
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	Show.scala;
Asciz	symApply;
Asciz	(Lscala/testing/Show;Lscala/Symbol;)Lscala/testing/Show$SymApply;;
Asciz	Code;
Asciz	scala/testing/Show$SymApply;
class	scala/testing/Show$SymApply
Asciz	LineNumberTable;
Asciz	<init>;
Asciz	(Lscala/testing/Show;Lscala/Symbol;)V;
NameAndType	"<init>":(Lscala/testing/Show;Lscala/Symbol;)V
Method	scala/testing/Show$SymApply."<init>":(Lscala/testing/Show;Lscala/Symbol;)V
Asciz	$this;
Asciz	Lscala/testing/Show;;
Asciz	sym;
Asciz	Lscala/Symbol;;
Asciz	LocalVariableTable;
Asciz	test;
Asciz	(Lscala/testing/Show;Lscala/Symbol;Lscala/collection/Seq;)Ljava/lang/String;;
Asciz	scala/testing/Show$$anonfun$1;
class	scala/testing/Show$$anonfun$1
Asciz	(Lscala/testing/Show;)V;
NameAndType	"<init>":(Lscala/testing/Show;)V
Method	scala/testing/Show$$anonfun$1."<init>":(Lscala/testing/Show;)V
Asciz	scala/collection/Seq$;
class	scala/collection/Seq$
Asciz	MODULE$;
Asciz	Lscala/collection/Seq$;;
NameAndType	MODULE$:Lscala/collection/Seq$;
Field	scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
Asciz	canBuildFrom;
Asciz	()Lscala/collection/generic/CanBuildFrom;;
NameAndType	canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
Method	scala/collection/Seq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
Asciz	scala/collection/TraversableLike;
class	scala/collection/TraversableLike
Asciz	map;
Asciz	(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;;
NameAndType	map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
InterfaceMethod	scala/collection/TraversableLike.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
Asciz	scala/collection/Seq;
class	scala/collection/Seq
Asciz	scala/Predef$;
class	scala/Predef$
Asciz	Lscala/Predef$;;
NameAndType	MODULE$:Lscala/Predef$;
Field	scala/Predef$.MODULE$:Lscala/Predef$;
Asciz	java/lang/Object;
class	java/lang/Object
Asciz	getClass;
Asciz	()Ljava/lang/Class;;
NameAndType	getClass:()Ljava/lang/Class;
Method	java/lang/Object.getClass:()Ljava/lang/Class;
Asciz	java/lang/Class;
class	java/lang/Class
Asciz	getMethods;
Asciz	()[Ljava/lang/reflect/Method;;
NameAndType	getMethods:()[Ljava/lang/reflect/Method;
Method	java/lang/Class.getMethods:()[Ljava/lang/reflect/Method;
Asciz	[Ljava/lang/Object;;
class	"[Ljava/lang/Object;"
Asciz	refArrayOps;
Asciz	([Ljava/lang/Object;)Lscala/collection/mutable/ArrayOps;;
NameAndType	refArrayOps:([Ljava/lang/Object;)Lscala/collection/mutable/ArrayOps;
Method	scala/Predef$.refArrayOps:([Ljava/lang/Object;)Lscala/collection/mutable/ArrayOps;
Asciz	toList;
Asciz	()Lscala/collection/immutable/List;;
NameAndType	toList:()Lscala/collection/immutable/List;
InterfaceMethod	scala/collection/TraversableLike.toList:()Lscala/collection/immutable/List;
Asciz	scala/testing/Show$$anonfun$test$1;
class	scala/testing/Show$$anonfun$test$1
Method	scala/testing/Show$$anonfun$test$1."<init>":(Lscala/testing/Show;Lscala/Symbol;)V
Asciz	filter;
Asciz	(Lscala/Function1;)Ljava/lang/Object;;
NameAndType	filter:(Lscala/Function1;)Ljava/lang/Object;
InterfaceMethod	scala/collection/TraversableLike.filter:(Lscala/Function1;)Ljava/lang/Object;
Asciz	scala/collection/immutable/List;
class	scala/collection/immutable/List
Asciz	scala/collection/immutable/Nil$;
class	scala/collection/immutable/Nil$
Asciz	scala/collection/mutable/StringBuilder;
class	scala/collection/mutable/StringBuilder
Asciz	()V;
NameAndType	"<init>":()V
Method	scala/collection/mutable/StringBuilder."<init>":()V
Asciz	scala/Symbol;
class	scala/Symbol
Asciz	name;
Asciz	()Ljava/lang/String;;
NameAndType	name:()Ljava/lang/String;
Method	scala/Symbol.name:()Ljava/lang/String;
Asciz	append;
Asciz	(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;;
NameAndType	append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
Method	scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
Asciz	 is not defined;
String	 is not defined
Asciz	toString;
NameAndType	toString:()Ljava/lang/String;
Method	scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
Asciz	scala/collection/immutable/$colon$colon;
class	scala/collection/immutable/$colon$colon
Asciz	hd$1;
Asciz	()Ljava/lang/Object;;
NameAndType	hd$1:()Ljava/lang/Object;
Method	scala/collection/immutable/$colon$colon.hd$1:()Ljava/lang/Object;
Asciz	java/lang/reflect/Method;
class	java/lang/reflect/Method
Asciz	Lscala/collection/immutable/Nil$;;
NameAndType	MODULE$:Lscala/collection/immutable/Nil$;
Field	scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
Asciz	tl$1;
NameAndType	tl$1:()Lscala/collection/immutable/List;
Method	scala/collection/immutable/$colon$colon.tl$1:()Lscala/collection/immutable/List;
Asciz	equals;
Asciz	(Ljava/lang/Object;)Z;
NameAndType	equals:(Ljava/lang/Object;)Z
Method	java/lang/Object.equals:(Ljava/lang/Object;)Z
Asciz	scala/testing/Show$class;
class	scala/testing/Show$class
Asciz	testMethod$1;
Asciz	(Lscala/testing/Show;Ljava/lang/reflect/Method;Lscala/Symbol;Lscala/collection/Seq;Lscala/collection/Seq;)Ljava/lang/String;;
NameAndType	testMethod$1:(Lscala/testing/Show;Ljava/lang/reflect/Method;Lscala/Symbol;Lscala/collection/Seq;Lscala/collection/Seq;)Ljava/lang/String;
Method	scala/testing/Show$class.testMethod$1:(Lscala/testing/Show;Ljava/lang/reflect/Method;Lscala/Symbol;Lscala/collection/Seq;Lscala/collection/Seq;)Ljava/lang/String;
Asciz	scala/testing/Show$$anonfun$test$2;
class	scala/testing/Show$$anonfun$test$2
Asciz	(Lscala/testing/Show;Lscala/collection/Seq;)V;
NameAndType	"<init>":(Lscala/testing/Show;Lscala/collection/Seq;)V
Method	scala/testing/Show$$anonfun$test$2."<init>":(Lscala/testing/Show;Lscala/collection/Seq;)V
Asciz	scala/collection/IterableLike;
class	scala/collection/IterableLike
Asciz	head;
NameAndType	head:()Ljava/lang/Object;
InterfaceMethod	scala/collection/IterableLike.head:()Ljava/lang/Object;
Asciz	cannot disambiguate between multiple implementations of ;
String	cannot disambiguate between multiple implementations of 
Asciz	f$1;
Asciz	args$1;
Asciz	Lscala/collection/Seq;;
Asciz	args1$1;
Asciz	temp7;
Asciz	Lscala/collection/immutable/List;;
Asciz	temp9;
Asciz	Lscala/collection/immutable/$colon$colon;;
Asciz	temp10;
Asciz	Ljava/lang/reflect/Method;;
Asciz	ms;
Asciz	temp1;
Asciz	temp3;
Asciz	temp4;
Asciz	liftedTree1$1;
Asciz	(Lscala/testing/Show;Lscala/collection/Seq;Ljava/lang/reflect/Method;)Ljava/lang/Object;;
Asciz	scala/reflect/Manifest$;
class	scala/reflect/Manifest$
Asciz	Lscala/reflect/Manifest$;;
NameAndType	MODULE$:Lscala/reflect/Manifest$;
Field	scala/reflect/Manifest$.MODULE$:Lscala/reflect/Manifest$;
Asciz	Object;
Asciz	()Lscala/reflect/Manifest;;
NameAndType	Object:()Lscala/reflect/Manifest;
Method	scala/reflect/Manifest$.Object:()Lscala/reflect/Manifest;
Asciz	toArray;
Asciz	(Lscala/reflect/ClassManifest;)Ljava/lang/Object;;
NameAndType	toArray:(Lscala/reflect/ClassManifest;)Ljava/lang/Object;
InterfaceMethod	scala/collection/TraversableLike.toArray:(Lscala/reflect/ClassManifest;)Ljava/lang/Object;
Asciz	invoke;
Asciz	(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;;
NameAndType	invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
Method	java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
Asciz	java/lang/IllegalAccessException;
class	java/lang/IllegalAccessException
Asciz	java/lang/IllegalArgumentException;
class	java/lang/IllegalArgumentException
Asciz	java/lang/reflect/InvocationTargetException;
class	java/lang/reflect/InvocationTargetException
Asciz	exceptionResult1;
Asciz	Ljava/lang/Object;;
Asciz	(;
String	(
Asciz	,;
String	,
Asciz	mkString;
Asciz	(Ljava/lang/String;)Ljava/lang/String;;
NameAndType	mkString:(Ljava/lang/String;)Ljava/lang/String;
InterfaceMethod	scala/collection/TraversableLike.mkString:(Ljava/lang/String;)Ljava/lang/String;
Asciz	)  gives  ;
String	)  gives  
NameAndType	liftedTree1$1:(Lscala/testing/Show;Lscala/collection/Seq;Ljava/lang/reflect/Method;)Ljava/lang/Object;
Method	scala/testing/Show$class.liftedTree1$1:(Lscala/testing/Show;Lscala/collection/Seq;Ljava/lang/reflect/Method;)Ljava/lang/Object;
Asciz	meth$1;
Asciz	$init$;
Asciz	Scala;
Asciz	InnerClasses;
Asciz	scala/testing/Show;
class	scala/testing/Show
Asciz	SymApply;
Asciz	$anonfun$1;
Asciz	$anonfun$test$2;
Asciz	$anonfun$test$1;

{
public static scala.testing.Show$SymApply symApply(scala.testing.Show, scala.Symbol);
  Signature: (Lscala/testing/Show;Lscala/Symbol;)Lscala/testing/Show$SymApply;
  Code:
   Stack=4, Locals=2, Args_size=2
	new	class scala/testing/Show$SymApply
	dup
	aload_0
	aload_1
	invokespecial	Method scala/testing/Show$SymApply."<init>":(Lscala/testing/Show;Lscala/Symbol;)V
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    $this       Lscala/testing/Show;
   0      10      1    sym       Lscala/Symbol;


public static java.lang.String test(scala.testing.Show, scala.Symbol, scala.collection.Seq);
  Signature: (Lscala/testing/Show;Lscala/Symbol;Lscala/collection/Seq;)Ljava/lang/String;
  Code:
   Stack=5, Locals=14, Args_size=3
	aload_2
	new	class scala/testing/Show$$anonfun$1
	dup
	aload_0
	invokespecial	Method scala/testing/Show$$anonfun$1."<init>":(Lscala/testing/Show;)V
	getstatic	Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
	invokevirtual	Method scala/collection/Seq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
	invokeinterface	InterfaceMethod scala/collection/TraversableLike.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
	checkcast	class scala/collection/Seq
	astore_3
	getstatic	Field scala/Predef$.MODULE$:Lscala/Predef$;
	aload_0
	invokevirtual	Method java/lang/Object.getClass:()Ljava/lang/Class;
	invokevirtual	Method java/lang/Class.getMethods:()[Ljava/lang/reflect/Method;
	checkcast	class "[Ljava/lang/Object;"
	invokevirtual	Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Lscala/collection/mutable/ArrayOps;
	invokeinterface	InterfaceMethod scala/collection/TraversableLike.toList:()Lscala/collection/immutable/List;
	new	class scala/testing/Show$$anonfun$test$1
	dup
	aload_0
	aload_1
	invokespecial	Method scala/testing/Show$$anonfun$test$1."<init>":(Lscala/testing/Show;Lscala/Symbol;)V
	invokeinterface	InterfaceMethod scala/collection/TraversableLike.filter:(Lscala/Function1;)Ljava/lang/Object;
	checkcast	class scala/collection/immutable/List
	astore	4
	aload	4
	instanceof	class scala/collection/immutable/Nil$
	ifeq	l1 // aload
	new	class scala/collection/mutable/StringBuilder
	dup
	invokespecial	Method scala/collection/mutable/StringBuilder."<init>":()V
	aload_1
	invokevirtual	Method scala/Symbol.name:()Ljava/lang/String;
	invokevirtual	Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
	ldc	String  is not defined
	invokevirtual	Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
	invokevirtual	Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
	goto	l2 // areturn
l1	aload	4
	instanceof	class scala/collection/immutable/$colon$colon
	ifeq	l3 // aload
	aload	4
	checkcast	class scala/collection/immutable/$colon$colon
	astore	5
	aload	5
	invokevirtual	Method scala/collection/immutable/$colon$colon.hd$1:()Ljava/lang/Object;
	checkcast	class java/lang/reflect/Method
	astore	6
	getstatic	Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
	aload	5
	invokevirtual	Method scala/collection/immutable/$colon$colon.tl$1:()Lscala/collection/immutable/List;
	astore	7
	dup
	ifnonnull	l4 // aload
	pop
	aload	7
	ifnull	l5 // aload_0
	goto	l6 // aload
l4	aload	7
	invokevirtual	Method java/lang/Object.equals:(Ljava/lang/Object;)Z
	ifeq	l6 // aload
l5	aload_0
	aload	6
	aload_1
	aload_2
	aload_3
	invokestatic	Method testMethod$1:(Lscala/testing/Show;Ljava/lang/reflect/Method;Lscala/Symbol;Lscala/collection/Seq;Lscala/collection/Seq;)Ljava/lang/String;
	goto	l2 // areturn
l6	aload	5
	astore	8
	goto	l7 // aload
l3	aload	4
	astore	8
l7	aload	8
	new	class scala/testing/Show$$anonfun$test$2
	dup
	aload_0
	aload_2
	invokespecial	Method scala/testing/Show$$anonfun$test$2."<init>":(Lscala/testing/Show;Lscala/collection/Seq;)V
	invokeinterface	InterfaceMethod scala/collection/TraversableLike.filter:(Lscala/Function1;)Ljava/lang/Object;
	checkcast	class scala/collection/immutable/List
	astore	9
	aload	9
	instanceof	class scala/collection/immutable/Nil$
	ifeq	l8 // aload
	aload_0
	aload	8
	invokeinterface	InterfaceMethod scala/collection/IterableLike.head:()Ljava/lang/Object;
	checkcast	class java/lang/reflect/Method
	aload_1
	aload_2
	aload_3
	invokestatic	Method testMethod$1:(Lscala/testing/Show;Ljava/lang/reflect/Method;Lscala/Symbol;Lscala/collection/Seq;Lscala/collection/Seq;)Ljava/lang/String;
	goto	l2 // areturn
l8	aload	9
	instanceof	class scala/collection/immutable/$colon$colon
	ifeq	l9 // aload
	aload	9
	checkcast	class scala/collection/immutable/$colon$colon
	astore	10
	aload	10
	invokevirtual	Method scala/collection/immutable/$colon$colon.hd$1:()Ljava/lang/Object;
	checkcast	class java/lang/reflect/Method
	astore	11
	getstatic	Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
	aload	10
	invokevirtual	Method scala/collection/immutable/$colon$colon.tl$1:()Lscala/collection/immutable/List;
	astore	12
	dup
	ifnonnull	l10 // aload
	pop
	aload	12
	ifnull	l11 // aload_0
	goto	l12 // aload
l10	aload	12
	invokevirtual	Method java/lang/Object.equals:(Ljava/lang/Object;)Z
	ifeq	l12 // aload
l11	aload_0
	aload	11
	aload_1
	aload_2
	aload_3
	invokestatic	Method testMethod$1:(Lscala/testing/Show;Ljava/lang/reflect/Method;Lscala/Symbol;Lscala/collection/Seq;Lscala/collection/Seq;)Ljava/lang/String;
	goto	l2 // areturn
l12	aload	10
	astore	13
	goto	l13 // new
l9	aload	9
	astore	13
l13	new	class scala/collection/mutable/StringBuilder
	dup
	invokespecial	Method scala/collection/mutable/StringBuilder."<init>":()V
	ldc	String cannot disambiguate between multiple implementations of 
	invokevirtual	Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
	aload_1
	invokevirtual	Method scala/Symbol.name:()Ljava/lang/String;
	invokevirtual	Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
	invokevirtual	Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
l2	areturn
  Labels:
   	l1 = 97 // aload
   	l4 = 145 // aload
   	l5 = 153 // aload_0
   	l6 = 165 // aload
   	l3 = 172 // aload
   	l7 = 176 // aload
   	l8 = 225 // aload
   	l10 = 273 // aload
   	l11 = 281 // aload_0
   	l12 = 293 // aload
   	l9 = 300 // aload
   	l13 = 304 // new
   	l2 = 326 // areturn
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      327      0    $this       Lscala/testing/Show;
   0      327      1    f$1       Lscala/Symbol;
   0      327      2    args$1       Lscala/collection/Seq;
   24      303      3    args1$1       Lscala/collection/Seq;
   64      263      4    temp7       Lscala/collection/immutable/List;
   112      60      5    temp9       Lscala/collection/immutable/$colon$colon;
   176      150      5    temp9       Lscala/collection/immutable/$colon$colon;
   122      50      6    temp10       Ljava/lang/reflect/Method;
   176      150      6    temp10       Ljava/lang/reflect/Method;
   169      3      8    ms       Lscala/collection/immutable/List;
   176      150      8    ms       Lscala/collection/immutable/List;
   197      129      9    temp1       Lscala/collection/immutable/List;
   240      60      10    temp3       Lscala/collection/immutable/$colon$colon;
   304      22      10    temp3       Lscala/collection/immutable/$colon$colon;
   250      50      11    temp4       Ljava/lang/reflect/Method;
   304      22      11    temp4       Ljava/lang/reflect/Method;
   297      3      13    ms       Lscala/collection/immutable/List;
   304      22      13    ms       Lscala/collection/immutable/List;


private static final java.lang.Object liftedTree1$1(scala.testing.Show, scala.collection.Seq, java.lang.reflect.Method);
  Signature: (Lscala/testing/Show;Lscala/collection/Seq;Ljava/lang/reflect/Method;)Ljava/lang/Object;
  Code:
   Stack=4, Locals=7, Args_size=3
	aconst_null
	astore_3
	aload_2
	aload_0
	aload_1
	getstatic	Field scala/reflect/Manifest$.MODULE$:Lscala/reflect/Manifest$;
	invokevirtual	Method scala/reflect/Manifest$.Object:()Lscala/reflect/Manifest;
	invokeinterface	InterfaceMethod scala/collection/TraversableLike.toArray:(Lscala/reflect/ClassManifest;)Ljava/lang/Object;
	checkcast	class "[Ljava/lang/Object;"
	invokevirtual	Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
	astore_3
	goto	l1 // aload_3
	astore	4
	aload	4
	astore_3
	goto	l1 // aload_3
	astore	5
	aload	5
	astore_3
	goto	l1 // aload_3
	astore	6
	aload	6
	astore_3
l1	aload_3
	areturn
  Labels:
   	l1 = 47 // aload_3
  Exception table:
   from   to  target type
     2    26    42   Class java/lang/IllegalAccessException

     2    26    34   Class java/lang/IllegalArgumentException

     2    26    26   Class java/lang/reflect/InvocationTargetException

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      49      0    $this       Lscala/testing/Show;
   2      46      3    exceptionResult1       Ljava/lang/Object;


private static final java.lang.String testMethod$1(scala.testing.Show, java.lang.reflect.Method, scala.Symbol, scala.collection.Seq, scala.collection.Seq);
  Signature: (Lscala/testing/Show;Ljava/lang/reflect/Method;Lscala/Symbol;Lscala/collection/Seq;Lscala/collection/Seq;)Ljava/lang/String;
  Code:
   Stack=4, Locals=5, Args_size=5
	new	class scala/collection/mutable/StringBuilder
	dup
	invokespecial	Method scala/collection/mutable/StringBuilder."<init>":()V
	aload_2
	invokevirtual	Method scala/Symbol.name:()Ljava/lang/String;
	invokevirtual	Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
	ldc	String (
	invokevirtual	Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
	aload_3
	ldc	String ,
	invokeinterface	InterfaceMethod scala/collection/TraversableLike.mkString:(Ljava/lang/String;)Ljava/lang/String;
	invokevirtual	Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
	ldc	String )  gives  
	invokevirtual	Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
	aload_0
	aload	4
	aload_1
	invokestatic	Method liftedTree1$1:(Lscala/testing/Show;Lscala/collection/Seq;Ljava/lang/reflect/Method;)Ljava/lang/Object;
	invokevirtual	Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
	invokevirtual	Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      49      0    $this       Lscala/testing/Show;
   0      49      1    meth$1       Ljava/lang/reflect/Method;


public static void $init$(scala.testing.Show);
  Signature: (Lscala/testing/Show;)V
  Code:
   Stack=0, Locals=1, Args_size=1
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      1      0    $this       Lscala/testing/Show;


}

