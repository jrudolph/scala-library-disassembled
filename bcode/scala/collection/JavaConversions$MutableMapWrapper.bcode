Compiled from "JavaConversions.scala"
public class scala.collection.JavaConversions$MutableMapWrapper extends java.util.AbstractMap implements scala.ScalaObject,scala.Product,java.io.Serializable
  SourceFile: "JavaConversions.scala"
  Signature: length = 0x2
   00 FFFFFFA3 
  Scala: length = 0x
   
  InnerClass: 
   public #68= #15 of #167; //MutableMapWrapper=class scala/collection/JavaConversions$MutableMapWrapper of class scala/collection/JavaConversions
   public final #168= #80 of #15; //$anon$1=class scala/collection/JavaConversions$MutableMapWrapper$$anon$1 of class scala/collection/JavaConversions$MutableMapWrapper
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	JavaConversions.scala;
const #3 = Asciz	m;
const #4 = Asciz	Lscala/reflect/Manifest;;
const #5 = Asciz	Lscala/reflect/Manifest<TA;>;;
const #6 = Asciz	Signature;
const #7 = Asciz	underlying;
const #8 = Asciz	Lscala/collection/mutable/Map;;
const #9 = Asciz	Lscala/collection/mutable/Map<TA;TB;>;;
const #10 = Asciz	<init>;
const #11 = Asciz	(Lscala/collection/mutable/Map;Lscala/reflect/Manifest;)V;
const #12 = Asciz	Code;
const #13 = Asciz	LineNumberTable;
const #14 = Asciz	scala/collection/JavaConversions$MutableMapWrapper;
const #15 = class	#14;	//  scala/collection/JavaConversions$MutableMapWrapper
const #16 = NameAndType	#7:#8;//  underlying:Lscala/collection/mutable/Map;
const #17 = Field	#15.#16;	//  scala/collection/JavaConversions$MutableMapWrapper.underlying:Lscala/collection/mutable/Map;
const #18 = NameAndType	#3:#4;//  m:Lscala/reflect/Manifest;
const #19 = Field	#15.#18;	//  scala/collection/JavaConversions$MutableMapWrapper.m:Lscala/reflect/Manifest;
const #20 = Asciz	java/util/AbstractMap;
const #21 = class	#20;	//  java/util/AbstractMap
const #22 = Asciz	()V;
const #23 = NameAndType	#10:#22;//  "<init>":()V
const #24 = Method	#21.#23;	//  java/util/AbstractMap."<init>":()V
const #25 = Asciz	scala/Product$class;
const #26 = class	#25;	//  scala/Product$class
const #27 = Asciz	$init$;
const #28 = Asciz	(Lscala/Product;)V;
const #29 = NameAndType	#27:#28;//  $init$:(Lscala/Product;)V
const #30 = Method	#26.#29;	//  scala/Product$class.$init$:(Lscala/Product;)V
const #31 = Asciz	this;
const #32 = Asciz	Lscala/collection/JavaConversions$MutableMapWrapper;;
const #33 = Asciz	LocalVariableTable;
const #34 = Asciz	(Lscala/collection/mutable/Map<TA;TB;>;Lscala/reflect/Manifest<TA;>;)V;
const #35 = Asciz	canEqual;
const #36 = Asciz	(Ljava/lang/Object;)Z;
const #37 = Asciz	productElement;
const #38 = Asciz	(I)Ljava/lang/Object;;
const #39 = Asciz	scala/runtime/BoxesRunTime;
const #40 = class	#39;	//  scala/runtime/BoxesRunTime
const #41 = Asciz	boxToInteger;
const #42 = Asciz	(I)Ljava/lang/Integer;;
const #43 = NameAndType	#41:#42;//  boxToInteger:(I)Ljava/lang/Integer;
const #44 = Method	#40.#43;	//  scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
const #45 = Asciz	equals;
const #46 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)Z;
const #47 = NameAndType	#45:#46;//  equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
const #48 = Method	#40.#47;	//  scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
const #49 = Asciz	()Lscala/collection/mutable/Map;;
const #50 = NameAndType	#7:#49;//  underlying:()Lscala/collection/mutable/Map;
const #51 = Method	#15.#50;	//  scala/collection/JavaConversions$MutableMapWrapper.underlying:()Lscala/collection/mutable/Map;
const #52 = Asciz	java/lang/IndexOutOfBoundsException;
const #53 = class	#52;	//  java/lang/IndexOutOfBoundsException
const #54 = Asciz	java/lang/Object;
const #55 = class	#54;	//  java/lang/Object
const #56 = Asciz	toString;
const #57 = Asciz	()Ljava/lang/String;;
const #58 = NameAndType	#56:#57;//  toString:()Ljava/lang/String;
const #59 = Method	#55.#58;	//  java/lang/Object.toString:()Ljava/lang/String;
const #60 = Asciz	(Ljava/lang/String;)V;
const #61 = NameAndType	#10:#60;//  "<init>":(Ljava/lang/String;)V
const #62 = Method	#53.#61;	//  java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
const #63 = Asciz	temp90;
const #64 = Asciz	I;
const #65 = Asciz	productArity;
const #66 = Asciz	()I;
const #67 = Asciz	productPrefix;
const #68 = Asciz	MutableMapWrapper;
const #69 = String	#68;	//  MutableMapWrapper
const #70 = Asciz	copy$default$1;
const #71 = Asciz	copy$default$2;
const #72 = Asciz	(Lscala/collection/mutable/Map;)Lscala/reflect/Manifest;;
const #73 = Asciz	copy;
const #74 = Asciz	(Lscala/collection/mutable/Map;Lscala/reflect/Manifest;)Lscala/collection/JavaConversions$MutableMapWrapper;;
const #75 = NameAndType	#10:#11;//  "<init>":(Lscala/collection/mutable/Map;Lscala/reflect/Manifest;)V
const #76 = Method	#15.#75;	//  scala/collection/JavaConversions$MutableMapWrapper."<init>":(Lscala/collection/mutable/Map;Lscala/reflect/Manifest;)V
const #77 = Asciz	entrySet;
const #78 = Asciz	()Ljava/util/Set;;
const #79 = Asciz	scala/collection/JavaConversions$MutableMapWrapper$$anon$1;
const #80 = class	#79;	//  scala/collection/JavaConversions$MutableMapWrapper$$anon$1
const #81 = Asciz	(Lscala/collection/JavaConversions$MutableMapWrapper;)V;
const #82 = NameAndType	#10:#81;//  "<init>":(Lscala/collection/JavaConversions$MutableMapWrapper;)V
const #83 = Method	#80.#82;	//  scala/collection/JavaConversions$MutableMapWrapper$$anon$1."<init>":(Lscala/collection/JavaConversions$MutableMapWrapper;)V
const #84 = Asciz	()Ljava/util/Set<Ljava/util/Map$Entry<TA;TB;>;>;;
const #85 = Asciz	remove;
const #86 = Asciz	(Ljava/lang/Object;)Ljava/lang/Object;;
const #87 = Asciz	scala/reflect/Manifest;
const #88 = class	#87;	//  scala/reflect/Manifest
const #89 = Asciz	erasure;
const #90 = Asciz	()Ljava/lang/Class;;
const #91 = NameAndType	#89:#90;//  erasure:()Ljava/lang/Class;
const #92 = InterfaceMethod	#88.#91;	//  scala/reflect/Manifest.erasure:()Ljava/lang/Class;
const #93 = Asciz	java/lang/Class;
const #94 = class	#93;	//  java/lang/Class
const #95 = Asciz	isInstance;
const #96 = NameAndType	#95:#36;//  isInstance:(Ljava/lang/Object;)Z
const #97 = Method	#94.#96;	//  java/lang/Class.isInstance:(Ljava/lang/Object;)Z
const #98 = Asciz	scala/collection/generic/MapTemplate;
const #99 = class	#98;	//  scala/collection/generic/MapTemplate
const #100 = Asciz	get;
const #101 = Asciz	(Ljava/lang/Object;)Lscala/Option;;
const #102 = NameAndType	#100:#101;//  get:(Ljava/lang/Object;)Lscala/Option;
const #103 = InterfaceMethod	#99.#102;	//  scala/collection/generic/MapTemplate.get:(Ljava/lang/Object;)Lscala/Option;
const #104 = Asciz	scala/Some;
const #105 = class	#104;	//  scala/Some
const #106 = Asciz	x;
const #107 = Asciz	()Ljava/lang/Object;;
const #108 = NameAndType	#106:#107;//  x:()Ljava/lang/Object;
const #109 = Method	#105.#108;	//  scala/Some.x:()Ljava/lang/Object;
const #110 = Asciz	scala/collection/generic/MutableMapTemplate;
const #111 = class	#110;	//  scala/collection/generic/MutableMapTemplate
const #112 = Asciz	$minus$eq;
const #113 = Asciz	(Ljava/lang/Object;)Lscala/collection/generic/MutableMapTemplate;;
const #114 = NameAndType	#112:#113;//  $minus$eq:(Ljava/lang/Object;)Lscala/collection/generic/MutableMapTemplate;
const #115 = InterfaceMethod	#111.#114;	//  scala/collection/generic/MutableMapTemplate.$minus$eq:(Ljava/lang/Object;)Lscala/collection/generic/MutableMapTemplate;
const #116 = Asciz	scala/None$;
const #117 = class	#116;	//  scala/None$
const #118 = Asciz	MODULE$;
const #119 = Asciz	Lscala/None$;;
const #120 = NameAndType	#118:#119;//  MODULE$:Lscala/None$;
const #121 = Field	#117.#120;	//  scala/None$.MODULE$:Lscala/None$;
const #122 = NameAndType	#45:#36;//  equals:(Ljava/lang/Object;)Z
const #123 = Method	#55.#122;	//  java/lang/Object.equals:(Ljava/lang/Object;)Z
const #124 = Asciz	scala/MatchError;
const #125 = class	#124;	//  scala/MatchError
const #126 = Asciz	scala/Option;
const #127 = class	#126;	//  scala/Option
const #128 = Method	#127.#58;	//  scala/Option.toString:()Ljava/lang/String;
const #129 = Method	#125.#61;	//  scala/MatchError."<init>":(Ljava/lang/String;)V
const #130 = Asciz	k;
const #131 = Asciz	Ljava/lang/Object;;
const #132 = Asciz	k1;
const #133 = Asciz	temp78;
const #134 = Asciz	Lscala/Option;;
const #135 = Asciz	temp79;
const #136 = Asciz	Lscala/Some;;
const #137 = Asciz	temp80;
const #138 = Asciz	(Ljava/lang/Object;)TB;;
const #139 = Asciz	put;
const #140 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;;
const #141 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Option;;
const #142 = NameAndType	#139:#141;//  put:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Option;
const #143 = InterfaceMethod	#111.#142;	//  scala/collection/generic/MutableMapTemplate.put:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Option;
const #144 = Asciz	v;
const #145 = Asciz	temp74;
const #146 = Asciz	temp75;
const #147 = Asciz	temp76;
const #148 = Asciz	(TA;TB;)TB;;
const #149 = Asciz	size;
const #150 = Asciz	scala/collection/generic/TraversableTemplate;
const #151 = class	#150;	//  scala/collection/generic/TraversableTemplate
const #152 = NameAndType	#149:#66;//  size:()I
const #153 = InterfaceMethod	#151.#152;	//  scala/collection/generic/TraversableTemplate.size:()I
const #154 = Asciz	()Lscala/collection/mutable/Map<TA;TB;>;;
const #155 = Asciz	productElements;
const #156 = Asciz	()Lscala/collection/Iterator;;
const #157 = Asciz	(Lscala/Product;)Lscala/collection/Iterator;;
const #158 = NameAndType	#155:#157;//  productElements:(Lscala/Product;)Lscala/collection/Iterator;
const #159 = Method	#26.#158;	//  scala/Product$class.productElements:(Lscala/Product;)Lscala/collection/Iterator;
const #160 = Asciz	productIterator;
const #161 = NameAndType	#160:#157;//  productIterator:(Lscala/Product;)Lscala/collection/Iterator;
const #162 = Method	#26.#161;	//  scala/Product$class.productIterator:(Lscala/Product;)Lscala/collection/Iterator;
const #163 = Asciz	<A:Ljava/lang/Object;B:Ljava/lang/Object;>Ljava/util/AbstractMap<TA;TB;>;Lscala/ScalaObject;Lscala/Product;;
const #164 = Asciz	Scala;
const #165 = Asciz	InnerClasses;
const #166 = Asciz	scala/collection/JavaConversions;
const #167 = class	#166;	//  scala/collection/JavaConversions
const #168 = Asciz	$anon$1;
const #169 = Asciz	scala/ScalaObject;
const #170 = class	#169;	//  scala/ScalaObject
const #171 = Asciz	scala/Product;
const #172 = class	#171;	//  scala/Product
const #173 = Asciz	java/io/Serializable;
const #174 = class	#173;	//  java/io/Serializable

{
public scala.collection.JavaConversions$MutableMapWrapper(scala.collection.mutable.Map, scala.reflect.Manifest);
  Code:
   Stack=2, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	putfield	#17; //Field underlying:Lscala/collection/mutable/Map;
   5:	aload_0
   6:	aload_2
   7:	putfield	#19; //Field m:Lscala/reflect/Manifest;
   10:	aload_0
   11:	invokespecial	#24; //Method java/util/AbstractMap."<init>":()V
   14:	aload_0
   15:	invokestatic	#30; //Method scala/Product$class.$init$:(Lscala/Product;)V
   18:	return
  LineNumberTable: 
   line 411: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      19      0    this       Lscala/collection/JavaConversions$MutableMapWrapper;
   0      19      1    underlying       Lscala/collection/mutable/Map;
   0      19      2    m       Lscala/reflect/Manifest;

  Signature: length = 0x2
   00 22 

public boolean canEqual(java.lang.Object);
  Code:
   Stack=1, Locals=2, Args_size=2
   0:	aload_1
   1:	instanceof	#15; //class scala/collection/JavaConversions$MutableMapWrapper
   4:	ireturn
  LineNumberTable: 
   line 411: 0


public java.lang.Object productElement(int);
  Code:
   Stack=3, Locals=3, Args_size=2
   0:	iload_1
   1:	istore_2
   2:	iload_2
   3:	invokestatic	#44; //Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   6:	iconst_0
   7:	invokestatic	#44; //Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   10:	invokestatic	#48; //Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
   13:	ifeq	21
   16:	aload_0
   17:	invokevirtual	#51; //Method underlying:()Lscala/collection/mutable/Map;
   20:	areturn
   21:	new	#53; //class java/lang/IndexOutOfBoundsException
   24:	dup
   25:	iload_1
   26:	invokestatic	#44; //Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   29:	invokevirtual	#59; //Method java/lang/Object.toString:()Ljava/lang/String;
   32:	invokespecial	#62; //Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
   35:	athrow
  LineNumberTable: 
   line 411: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      36      0    this       Lscala/collection/JavaConversions$MutableMapWrapper;
   2      34      2    temp90       I


public int productArity();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	iconst_1
   1:	ireturn
  LineNumberTable: 
   line 411: 0


public java.lang.String productPrefix();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	ldc	#69; //String MutableMapWrapper
   2:	areturn
  LineNumberTable: 
   line 411: 0


public scala.collection.mutable.Map copy$default$1();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#51; //Method underlying:()Lscala/collection/mutable/Map;
   4:	areturn
  LineNumberTable: 
   line 411: 0


public scala.reflect.Manifest copy$default$2(scala.collection.mutable.Map);
  Code:
   Stack=1, Locals=2, Args_size=2
   0:	aload_0
   1:	getfield	#19; //Field m:Lscala/reflect/Manifest;
   4:	areturn
  LineNumberTable: 
   line 411: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    this       Lscala/collection/JavaConversions$MutableMapWrapper;
   0      5      1    underlying       Lscala/collection/mutable/Map;


public scala.collection.JavaConversions$MutableMapWrapper copy(scala.collection.mutable.Map, scala.reflect.Manifest);
  Code:
   Stack=4, Locals=3, Args_size=3
   0:	new	#15; //class scala/collection/JavaConversions$MutableMapWrapper
   3:	dup
   4:	aload_1
   5:	aload_2
   6:	invokespecial	#76; //Method "<init>":(Lscala/collection/mutable/Map;Lscala/reflect/Manifest;)V
   9:	areturn
  LineNumberTable: 
   line 411: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    this       Lscala/collection/JavaConversions$MutableMapWrapper;
   0      10      1    underlying       Lscala/collection/mutable/Map;
   0      10      2    m       Lscala/reflect/Manifest;


public java.util.Set entrySet();
  Code:
   Stack=3, Locals=1, Args_size=1
   0:	new	#80; //class scala/collection/JavaConversions$MutableMapWrapper$$anon$1
   3:	dup
   4:	aload_0
   5:	invokespecial	#83; //Method scala/collection/JavaConversions$MutableMapWrapper$$anon$1."<init>":(Lscala/collection/JavaConversions$MutableMapWrapper;)V
   8:	areturn
  LineNumberTable: 
   line 432: 0

  Signature: length = 0x2
   00 54 

public java.lang.Object remove(java.lang.Object);
  Code:
   Stack=3, Locals=7, Args_size=2
   0:	aload_0
   1:	getfield	#19; //Field m:Lscala/reflect/Manifest;
   4:	invokeinterface	#92,  1; //InterfaceMethod scala/reflect/Manifest.erasure:()Ljava/lang/Class;
   9:	aload_1
   10:	invokevirtual	#97; //Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
   13:	ifeq	117
   16:	aload_1
   17:	astore_2
   18:	aload_0
   19:	invokevirtual	#51; //Method underlying:()Lscala/collection/mutable/Map;
   22:	aload_2
   23:	invokeinterface	#103,  2; //InterfaceMethod scala/collection/generic/MapTemplate.get:(Ljava/lang/Object;)Lscala/Option;
   28:	astore_3
   29:	aload_3
   30:	instanceof	#105; //class scala/Some
   33:	ifeq	65
   36:	aload_3
   37:	checkcast	#105; //class scala/Some
   40:	astore	4
   42:	aload	4
   44:	invokevirtual	#109; //Method scala/Some.x:()Ljava/lang/Object;
   47:	astore	5
   49:	aload_0
   50:	invokevirtual	#51; //Method underlying:()Lscala/collection/mutable/Map;
   53:	aload_2
   54:	invokeinterface	#115,  2; //InterfaceMethod scala/collection/generic/MutableMapTemplate.$minus$eq:(Ljava/lang/Object;)Lscala/collection/generic/MutableMapTemplate;
   59:	pop
   60:	aload	5
   62:	goto	120
   65:	getstatic	#121; //Field scala/None$.MODULE$:Lscala/None$;
   68:	aload_3
   69:	astore	6
   71:	dup
   72:	ifnonnull	84
   75:	pop
   76:	aload	6
   78:	ifnull	92
   81:	goto	105
   84:	aload	6
   86:	invokevirtual	#123; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   89:	ifeq	105
   92:	aload_3
   93:	instanceof	#117; //class scala/None$
   96:	ifeq	105
   99:	aconst_null
   100:	pop
   101:	aconst_null
   102:	goto	120
   105:	new	#125; //class scala/MatchError
   108:	dup
   109:	aload_3
   110:	invokevirtual	#128; //Method scala/Option.toString:()Ljava/lang/String;
   113:	invokespecial	#129; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   116:	athrow
   117:	aconst_null
   118:	pop
   119:	aconst_null
   120:	areturn
  LineNumberTable: 
   line 421: 0
   line 424: 16
   line 425: 18
   line 426: 49
   line 425: 65
   line 427: 99
   line 425: 105
   line 422: 117
   line 421: 120

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      121      0    this       Lscala/collection/JavaConversions$MutableMapWrapper;
   0      121      1    k       Ljava/lang/Object;
   18      99      2    k1       Ljava/lang/Object;
   29      88      3    temp78       Lscala/Option;
   42      20      4    temp79       Lscala/Some;
   49      13      5    temp80       Ljava/lang/Object;

  Signature: length = 0x2
   00 FFFFFF8A 

public java.lang.Object put(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=7, Args_size=3
   0:	aload_0
   1:	invokevirtual	#51; //Method underlying:()Lscala/collection/mutable/Map;
   4:	aload_1
   5:	aload_2
   6:	invokeinterface	#143,  3; //InterfaceMethod scala/collection/generic/MutableMapTemplate.put:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Option;
   11:	astore_3
   12:	aload_3
   13:	instanceof	#105; //class scala/Some
   16:	ifeq	37
   19:	aload_3
   20:	checkcast	#105; //class scala/Some
   23:	astore	4
   25:	aload	4
   27:	invokevirtual	#109; //Method scala/Some.x:()Ljava/lang/Object;
   30:	astore	5
   32:	aload	5
   34:	goto	74
   37:	getstatic	#121; //Field scala/None$.MODULE$:Lscala/None$;
   40:	aload_3
   41:	astore	6
   43:	dup
   44:	ifnonnull	56
   47:	pop
   48:	aload	6
   50:	ifnull	64
   53:	goto	75
   56:	aload	6
   58:	invokevirtual	#123; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   61:	ifeq	75
   64:	aload_3
   65:	instanceof	#117; //class scala/None$
   68:	ifeq	75
   71:	aconst_null
   72:	pop
   73:	aconst_null
   74:	areturn
   75:	new	#125; //class scala/MatchError
   78:	dup
   79:	aload_3
   80:	invokevirtual	#128; //Method scala/Option.toString:()Ljava/lang/String;
   83:	invokespecial	#129; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   86:	athrow
  LineNumberTable: 
   line 415: 0
   line 416: 32
   line 415: 37
   line 417: 71
   line 415: 74

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      87      0    this       Lscala/collection/JavaConversions$MutableMapWrapper;
   0      87      1    k       Ljava/lang/Object;
   0      87      2    v       Ljava/lang/Object;
   12      75      3    temp74       Lscala/Option;
   25      9      4    temp75       Lscala/Some;
   32      2      5    temp76       Ljava/lang/Object;

  Signature: length = 0x2
   00 FFFFFF94 

public int size();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#51; //Method underlying:()Lscala/collection/mutable/Map;
   4:	invokeinterface	#153,  1; //InterfaceMethod scala/collection/generic/TraversableTemplate.size:()I
   9:	ireturn
  LineNumberTable: 
   line 413: 0


public scala.collection.mutable.Map underlying();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#17; //Field underlying:Lscala/collection/mutable/Map;
   4:	areturn
  LineNumberTable: 
   line 411: 0

  Signature: length = 0x2
   00 FFFFFF9A 

public scala.collection.Iterator productElements();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#159; //Method scala/Product$class.productElements:(Lscala/Product;)Lscala/collection/Iterator;
   4:	areturn
  LineNumberTable: 
   line 411: 0


public scala.collection.Iterator productIterator();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#162; //Method scala/Product$class.productIterator:(Lscala/Product;)Lscala/collection/Iterator;
   4:	areturn
  LineNumberTable: 
   line 411: 0


}

