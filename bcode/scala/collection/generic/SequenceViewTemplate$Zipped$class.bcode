Compiled from "SequenceViewTemplate.scala"
public abstract class scala.collection.generic.SequenceViewTemplate$Zipped$class extends java.lang.Object
  SourceFile: "SequenceViewTemplate.scala"
  Scala: length = 0x
   
  InnerClass: 
   public abstract #93= #19 of #92; //Zipped=class scala/collection/generic/SequenceViewTemplate$Zipped of class scala/collection/generic/SequenceViewTemplate
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	SequenceViewTemplate.scala;
const #3 = Asciz	$init$;
const #4 = Asciz	(Lscala/collection/generic/SequenceViewTemplate$Zipped;)V;
const #5 = Asciz	Code;
const #6 = Asciz	LineNumberTable;
const #7 = Asciz	$this;
const #8 = Asciz	Lscala/collection/generic/SequenceViewTemplate$Zipped;;
const #9 = Asciz	LocalVariableTable;
const #10 = Asciz	stringPrefix;
const #11 = Asciz	(Lscala/collection/generic/SequenceViewTemplate$Zipped;)Ljava/lang/String;;
const #12 = Asciz	scala/collection/mutable/StringBuilder;
const #13 = class	#12;	//  scala/collection/mutable/StringBuilder
const #14 = Asciz	<init>;
const #15 = Asciz	()V;
const #16 = NameAndType	#14:#15;//  "<init>":()V
const #17 = Method	#13.#16;	//  scala/collection/mutable/StringBuilder."<init>":()V
const #18 = Asciz	scala/collection/generic/SequenceViewTemplate$Zipped;
const #19 = class	#18;	//  scala/collection/generic/SequenceViewTemplate$Zipped
const #20 = Asciz	scala$collection$generic$SequenceViewTemplate$Zipped$$super$stringPrefix;
const #21 = Asciz	()Ljava/lang/String;;
const #22 = NameAndType	#20:#21;//  scala$collection$generic$SequenceViewTemplate$Zipped$$super$stringPrefix:()Ljava/lang/String;
const #23 = InterfaceMethod	#19.#22;	//  scala/collection/generic/SequenceViewTemplate$Zipped.scala$collection$generic$SequenceViewTemplate$Zipped$$super$stringPrefix:()Ljava/lang/String;
const #24 = Asciz	append;
const #25 = Asciz	(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;;
const #26 = NameAndType	#24:#25;//  append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
const #27 = Method	#13.#26;	//  scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
const #28 = Asciz	Z;
const #29 = String	#28;	//  Z
const #30 = Asciz	toString;
const #31 = NameAndType	#30:#21;//  toString:()Ljava/lang/String;
const #32 = Method	#13.#31;	//  scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
const #33 = Asciz	apply;
const #34 = Asciz	(Lscala/collection/generic/SequenceViewTemplate$Zipped;I)Lscala/Tuple2;;
const #35 = Asciz	scala/Tuple2;
const #36 = class	#35;	//  scala/Tuple2
const #37 = Asciz	scala$collection$generic$SequenceViewTemplate$Zipped$$$outer;
const #38 = Asciz	()Lscala/collection/generic/SequenceViewTemplate;;
const #39 = NameAndType	#37:#38;//  scala$collection$generic$SequenceViewTemplate$Zipped$$$outer:()Lscala/collection/generic/SequenceViewTemplate;
const #40 = InterfaceMethod	#19.#39;	//  scala/collection/generic/SequenceViewTemplate$Zipped.scala$collection$generic$SequenceViewTemplate$Zipped$$$outer:()Lscala/collection/generic/SequenceViewTemplate;
const #41 = Asciz	scala/collection/generic/SequenceTemplate;
const #42 = class	#41;	//  scala/collection/generic/SequenceTemplate
const #43 = Asciz	(I)Ljava/lang/Object;;
const #44 = NameAndType	#33:#43;//  apply:(I)Ljava/lang/Object;
const #45 = InterfaceMethod	#42.#44;	//  scala/collection/generic/SequenceTemplate.apply:(I)Ljava/lang/Object;
const #46 = Asciz	other;
const #47 = Asciz	()Lscala/collection/Sequence;;
const #48 = NameAndType	#46:#47;//  other:()Lscala/collection/Sequence;
const #49 = InterfaceMethod	#19.#48;	//  scala/collection/generic/SequenceViewTemplate$Zipped.other:()Lscala/collection/Sequence;
const #50 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)V;
const #51 = NameAndType	#14:#50;//  "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
const #52 = Method	#36.#51;	//  scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
const #53 = Asciz	idx;
const #54 = Asciz	I;
const #55 = Asciz	length;
const #56 = Asciz	(Lscala/collection/generic/SequenceViewTemplate$Zipped;)I;
const #57 = Asciz	scala/Predef$;
const #58 = class	#57;	//  scala/Predef$
const #59 = Asciz	MODULE$;
const #60 = Asciz	Lscala/Predef$;;
const #61 = NameAndType	#59:#60;//  MODULE$:Lscala/Predef$;
const #62 = Field	#58.#61;	//  scala/Predef$.MODULE$:Lscala/Predef$;
const #63 = Asciz	()I;
const #64 = NameAndType	#55:#63;//  length:()I
const #65 = InterfaceMethod	#42.#64;	//  scala/collection/generic/SequenceTemplate.length:()I
const #66 = Asciz	intWrapper;
const #67 = Asciz	(I)Lscala/runtime/RichInt;;
const #68 = NameAndType	#66:#67;//  intWrapper:(I)Lscala/runtime/RichInt;
const #69 = Method	#58.#68;	//  scala/Predef$.intWrapper:(I)Lscala/runtime/RichInt;
const #70 = Asciz	scala/runtime/RichInt;
const #71 = class	#70;	//  scala/runtime/RichInt
const #72 = Asciz	min;
const #73 = Asciz	(I)I;
const #74 = NameAndType	#72:#73;//  min:(I)I
const #75 = Method	#71.#74;	//  scala/runtime/RichInt.min:(I)I
const #76 = Asciz	iterator;
const #77 = Asciz	(Lscala/collection/generic/SequenceViewTemplate$Zipped;)Lscala/collection/Iterator;;
const #78 = Asciz	scala/collection/generic/IterableTemplate;
const #79 = class	#78;	//  scala/collection/generic/IterableTemplate
const #80 = Asciz	()Lscala/collection/Iterator;;
const #81 = NameAndType	#76:#80;//  iterator:()Lscala/collection/Iterator;
const #82 = InterfaceMethod	#79.#81;	//  scala/collection/generic/IterableTemplate.iterator:()Lscala/collection/Iterator;
const #83 = Asciz	scala/collection/Iterator;
const #84 = class	#83;	//  scala/collection/Iterator
const #85 = Asciz	zip;
const #86 = Asciz	(Lscala/collection/Iterator;)Ljava/lang/Object;;
const #87 = NameAndType	#85:#86;//  zip:(Lscala/collection/Iterator;)Ljava/lang/Object;
const #88 = InterfaceMethod	#84.#87;	//  scala/collection/Iterator.zip:(Lscala/collection/Iterator;)Ljava/lang/Object;
const #89 = Asciz	Scala;
const #90 = Asciz	InnerClasses;
const #91 = Asciz	scala/collection/generic/SequenceViewTemplate;
const #92 = class	#91;	//  scala/collection/generic/SequenceViewTemplate
const #93 = Asciz	Zipped;
const #94 = Asciz	scala/collection/generic/SequenceViewTemplate$Zipped$class;
const #95 = class	#94;	//  scala/collection/generic/SequenceViewTemplate$Zipped$class
const #96 = Asciz	java/lang/Object;
const #97 = class	#96;	//  java/lang/Object

{
public static void $init$(scala.collection.generic.SequenceViewTemplate$Zipped);
  Code:
   Stack=0, Locals=1, Args_size=1
   0:	return
  LineNumberTable: 
   line 126: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      1      0    $this       Lscala/collection/generic/SequenceViewTemplate$Zipped;


public static java.lang.String stringPrefix(scala.collection.generic.SequenceViewTemplate$Zipped);
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	new	#13; //class scala/collection/mutable/StringBuilder
   3:	dup
   4:	invokespecial	#17; //Method scala/collection/mutable/StringBuilder."<init>":()V
   7:	aload_0
   8:	invokeinterface	#23,  1; //InterfaceMethod scala/collection/generic/SequenceViewTemplate$Zipped.scala$collection$generic$SequenceViewTemplate$Zipped$$super$stringPrefix:()Ljava/lang/String;
   13:	invokevirtual	#27; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   16:	ldc	#29; //String Z
   18:	invokevirtual	#27; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   21:	invokevirtual	#32; //Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
   24:	areturn
  LineNumberTable: 
   line 131: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      25      0    $this       Lscala/collection/generic/SequenceViewTemplate$Zipped;


public static scala.Tuple2 apply(scala.collection.generic.SequenceViewTemplate$Zipped, int);
  Code:
   Stack=5, Locals=2, Args_size=2
   0:	new	#36; //class scala/Tuple2
   3:	dup
   4:	aload_0
   5:	invokeinterface	#40,  1; //InterfaceMethod scala/collection/generic/SequenceViewTemplate$Zipped.scala$collection$generic$SequenceViewTemplate$Zipped$$$outer:()Lscala/collection/generic/SequenceViewTemplate;
   10:	iload_1
   11:	invokeinterface	#45,  2; //InterfaceMethod scala/collection/generic/SequenceTemplate.apply:(I)Ljava/lang/Object;
   16:	aload_0
   17:	invokeinterface	#49,  1; //InterfaceMethod scala/collection/generic/SequenceViewTemplate$Zipped.other:()Lscala/collection/Sequence;
   22:	iload_1
   23:	invokeinterface	#45,  2; //InterfaceMethod scala/collection/generic/SequenceTemplate.apply:(I)Ljava/lang/Object;
   28:	invokespecial	#52; //Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
   31:	areturn
  LineNumberTable: 
   line 130: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      32      0    $this       Lscala/collection/generic/SequenceViewTemplate$Zipped;
   0      32      1    idx       I


public static int length(scala.collection.generic.SequenceViewTemplate$Zipped);
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	getstatic	#62; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   3:	aload_0
   4:	invokeinterface	#40,  1; //InterfaceMethod scala/collection/generic/SequenceViewTemplate$Zipped.scala$collection$generic$SequenceViewTemplate$Zipped$$$outer:()Lscala/collection/generic/SequenceViewTemplate;
   9:	invokeinterface	#65,  1; //InterfaceMethod scala/collection/generic/SequenceTemplate.length:()I
   14:	invokevirtual	#69; //Method scala/Predef$.intWrapper:(I)Lscala/runtime/RichInt;
   17:	aload_0
   18:	invokeinterface	#49,  1; //InterfaceMethod scala/collection/generic/SequenceViewTemplate$Zipped.other:()Lscala/collection/Sequence;
   23:	invokeinterface	#65,  1; //InterfaceMethod scala/collection/generic/SequenceTemplate.length:()I
   28:	invokevirtual	#75; //Method scala/runtime/RichInt.min:(I)I
   31:	ireturn
  LineNumberTable: 
   line 129: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      32      0    $this       Lscala/collection/generic/SequenceViewTemplate$Zipped;


public static scala.collection.Iterator iterator(scala.collection.generic.SequenceViewTemplate$Zipped);
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	invokeinterface	#40,  1; //InterfaceMethod scala/collection/generic/SequenceViewTemplate$Zipped.scala$collection$generic$SequenceViewTemplate$Zipped$$$outer:()Lscala/collection/generic/SequenceViewTemplate;
   6:	invokeinterface	#82,  1; //InterfaceMethod scala/collection/generic/IterableTemplate.iterator:()Lscala/collection/Iterator;
   11:	aload_0
   12:	invokeinterface	#49,  1; //InterfaceMethod scala/collection/generic/SequenceViewTemplate$Zipped.other:()Lscala/collection/Sequence;
   17:	invokeinterface	#82,  1; //InterfaceMethod scala/collection/generic/IterableTemplate.iterator:()Lscala/collection/Iterator;
   22:	invokeinterface	#88,  2; //InterfaceMethod scala/collection/Iterator.zip:(Lscala/collection/Iterator;)Ljava/lang/Object;
   27:	checkcast	#84; //class scala/collection/Iterator
   30:	areturn
  LineNumberTable: 
   line 128: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      31      0    $this       Lscala/collection/generic/SequenceViewTemplate$Zipped;


}

