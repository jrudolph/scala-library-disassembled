Compiled from "SequenceViewTemplate.scala"
public abstract class scala.collection.generic.SequenceViewTemplate$Sliced$class extends java.lang.Object
  SourceFile: "SequenceViewTemplate.scala"
  Scala: length = 0x
   
  InnerClass: 
   public abstract #79= #22 of #78; //Sliced=class scala/collection/generic/SequenceViewTemplate$Sliced of class scala/collection/generic/SequenceViewTemplate
   public abstract #79= #13 of #81; //Sliced=class scala/collection/generic/TraversableViewTemplate$Sliced of class scala/collection/generic/TraversableViewTemplate
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	SequenceViewTemplate.scala;
const #3 = Asciz	$init$;
const #4 = Asciz	(Lscala/collection/generic/SequenceViewTemplate$Sliced;)V;
const #5 = Asciz	Code;
const #6 = Asciz	LineNumberTable;
const #7 = Asciz	$this;
const #8 = Asciz	Lscala/collection/generic/SequenceViewTemplate$Sliced;;
const #9 = Asciz	LocalVariableTable;
const #10 = Asciz	apply;
const #11 = Asciz	(Lscala/collection/generic/SequenceViewTemplate$Sliced;I)Ljava/lang/Object;;
const #12 = Asciz	scala/collection/generic/TraversableViewTemplate$Sliced;
const #13 = class	#12;	//  scala/collection/generic/TraversableViewTemplate$Sliced
const #14 = Asciz	from;
const #15 = Asciz	()I;
const #16 = NameAndType	#14:#15;//  from:()I
const #17 = InterfaceMethod	#13.#16;	//  scala/collection/generic/TraversableViewTemplate$Sliced.from:()I
const #18 = Asciz	until;
const #19 = NameAndType	#18:#15;//  until:()I
const #20 = InterfaceMethod	#13.#19;	//  scala/collection/generic/TraversableViewTemplate$Sliced.until:()I
const #21 = Asciz	scala/collection/generic/SequenceViewTemplate$Sliced;
const #22 = class	#21;	//  scala/collection/generic/SequenceViewTemplate$Sliced
const #23 = Asciz	scala$collection$generic$SequenceViewTemplate$Sliced$$$outer;
const #24 = Asciz	()Lscala/collection/generic/SequenceViewTemplate;;
const #25 = NameAndType	#23:#24;//  scala$collection$generic$SequenceViewTemplate$Sliced$$$outer:()Lscala/collection/generic/SequenceViewTemplate;
const #26 = InterfaceMethod	#22.#25;	//  scala/collection/generic/SequenceViewTemplate$Sliced.scala$collection$generic$SequenceViewTemplate$Sliced$$$outer:()Lscala/collection/generic/SequenceViewTemplate;
const #27 = Asciz	scala/collection/generic/SequenceTemplate;
const #28 = class	#27;	//  scala/collection/generic/SequenceTemplate
const #29 = Asciz	(I)Ljava/lang/Object;;
const #30 = NameAndType	#10:#29;//  apply:(I)Ljava/lang/Object;
const #31 = InterfaceMethod	#28.#30;	//  scala/collection/generic/SequenceTemplate.apply:(I)Ljava/lang/Object;
const #32 = Asciz	java/lang/IndexOutOfBoundsException;
const #33 = class	#32;	//  java/lang/IndexOutOfBoundsException
const #34 = Asciz	scala/runtime/BoxesRunTime;
const #35 = class	#34;	//  scala/runtime/BoxesRunTime
const #36 = Asciz	boxToInteger;
const #37 = Asciz	(I)Ljava/lang/Integer;;
const #38 = NameAndType	#36:#37;//  boxToInteger:(I)Ljava/lang/Integer;
const #39 = Method	#35.#38;	//  scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
const #40 = Asciz	java/lang/Object;
const #41 = class	#40;	//  java/lang/Object
const #42 = Asciz	toString;
const #43 = Asciz	()Ljava/lang/String;;
const #44 = NameAndType	#42:#43;//  toString:()Ljava/lang/String;
const #45 = Method	#41.#44;	//  java/lang/Object.toString:()Ljava/lang/String;
const #46 = Asciz	<init>;
const #47 = Asciz	(Ljava/lang/String;)V;
const #48 = NameAndType	#46:#47;//  "<init>":(Ljava/lang/String;)V
const #49 = Method	#33.#48;	//  java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
const #50 = Asciz	idx;
const #51 = Asciz	I;
const #52 = Asciz	length;
const #53 = Asciz	(Lscala/collection/generic/SequenceViewTemplate$Sliced;)I;
const #54 = Asciz	scala/Predef$;
const #55 = class	#54;	//  scala/Predef$
const #56 = Asciz	MODULE$;
const #57 = Asciz	Lscala/Predef$;;
const #58 = NameAndType	#56:#57;//  MODULE$:Lscala/Predef$;
const #59 = Field	#55.#58;	//  scala/Predef$.MODULE$:Lscala/Predef$;
const #60 = Asciz	intWrapper;
const #61 = Asciz	(I)Lscala/runtime/RichInt;;
const #62 = NameAndType	#60:#61;//  intWrapper:(I)Lscala/runtime/RichInt;
const #63 = Method	#55.#62;	//  scala/Predef$.intWrapper:(I)Lscala/runtime/RichInt;
const #64 = NameAndType	#52:#15;//  length:()I
const #65 = InterfaceMethod	#28.#64;	//  scala/collection/generic/SequenceTemplate.length:()I
const #66 = Asciz	scala/runtime/RichInt;
const #67 = class	#66;	//  scala/runtime/RichInt
const #68 = Asciz	min;
const #69 = Asciz	(I)I;
const #70 = NameAndType	#68:#69;//  min:(I)I
const #71 = Method	#67.#70;	//  scala/runtime/RichInt.min:(I)I
const #72 = Asciz	max;
const #73 = NameAndType	#72:#69;//  max:(I)I
const #74 = Method	#67.#73;	//  scala/runtime/RichInt.max:(I)I
const #75 = Asciz	Scala;
const #76 = Asciz	InnerClasses;
const #77 = Asciz	scala/collection/generic/SequenceViewTemplate;
const #78 = class	#77;	//  scala/collection/generic/SequenceViewTemplate
const #79 = Asciz	Sliced;
const #80 = Asciz	scala/collection/generic/TraversableViewTemplate;
const #81 = class	#80;	//  scala/collection/generic/TraversableViewTemplate
const #82 = Asciz	scala/collection/generic/SequenceViewTemplate$Sliced$class;
const #83 = class	#82;	//  scala/collection/generic/SequenceViewTemplate$Sliced$class

{
public static void $init$(scala.collection.generic.SequenceViewTemplate$Sliced);
  Code:
   Stack=0, Locals=1, Args_size=1
   0:	return
  LineNumberTable: 
   line 34: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      1      0    $this       Lscala/collection/generic/SequenceViewTemplate$Sliced;


public static java.lang.Object apply(scala.collection.generic.SequenceViewTemplate$Sliced, int);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	iload_1
   1:	aload_0
   2:	invokeinterface	#17,  1; //InterfaceMethod scala/collection/generic/TraversableViewTemplate$Sliced.from:()I
   7:	iadd
   8:	aload_0
   9:	invokeinterface	#20,  1; //InterfaceMethod scala/collection/generic/TraversableViewTemplate$Sliced.until:()I
   14:	if_icmpge	37
   17:	aload_0
   18:	invokeinterface	#26,  1; //InterfaceMethod scala/collection/generic/SequenceViewTemplate$Sliced.scala$collection$generic$SequenceViewTemplate$Sliced$$$outer:()Lscala/collection/generic/SequenceViewTemplate;
   23:	iload_1
   24:	aload_0
   25:	invokeinterface	#17,  1; //InterfaceMethod scala/collection/generic/TraversableViewTemplate$Sliced.from:()I
   30:	iadd
   31:	invokeinterface	#31,  2; //InterfaceMethod scala/collection/generic/SequenceTemplate.apply:(I)Ljava/lang/Object;
   36:	areturn
   37:	new	#33; //class java/lang/IndexOutOfBoundsException
   40:	dup
   41:	iload_1
   42:	invokestatic	#39; //Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   45:	invokevirtual	#45; //Method java/lang/Object.toString:()Ljava/lang/String;
   48:	invokespecial	#49; //Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
   51:	athrow
  LineNumberTable: 
   line 37: 0
   line 38: 37

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      52      0    $this       Lscala/collection/generic/SequenceViewTemplate$Sliced;
   0      52      1    idx       I


public static int length(scala.collection.generic.SequenceViewTemplate$Sliced);
  Code:
   Stack=3, Locals=1, Args_size=1
   0:	getstatic	#59; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   3:	getstatic	#59; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   6:	aload_0
   7:	invokeinterface	#20,  1; //InterfaceMethod scala/collection/generic/TraversableViewTemplate$Sliced.until:()I
   12:	invokevirtual	#63; //Method scala/Predef$.intWrapper:(I)Lscala/runtime/RichInt;
   15:	aload_0
   16:	invokeinterface	#26,  1; //InterfaceMethod scala/collection/generic/SequenceViewTemplate$Sliced.scala$collection$generic$SequenceViewTemplate$Sliced$$$outer:()Lscala/collection/generic/SequenceViewTemplate;
   21:	invokeinterface	#65,  1; //InterfaceMethod scala/collection/generic/SequenceTemplate.length:()I
   26:	invokevirtual	#71; //Method scala/runtime/RichInt.min:(I)I
   29:	aload_0
   30:	invokeinterface	#17,  1; //InterfaceMethod scala/collection/generic/TraversableViewTemplate$Sliced.from:()I
   35:	isub
   36:	invokevirtual	#63; //Method scala/Predef$.intWrapper:(I)Lscala/runtime/RichInt;
   39:	iconst_0
   40:	invokevirtual	#74; //Method scala/runtime/RichInt.max:(I)I
   43:	ireturn
  LineNumberTable: 
   line 35: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      44      0    $this       Lscala/collection/generic/SequenceViewTemplate$Sliced;


}

