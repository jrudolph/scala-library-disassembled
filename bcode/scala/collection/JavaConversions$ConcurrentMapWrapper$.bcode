Compiled from "JavaConversions.scala"
public final class scala.collection.JavaConversions$ConcurrentMapWrapper$ extends java.lang.Object implements scala.ScalaObject
  SourceFile: "JavaConversions.scala"
  Scala: length = 0x
   
  InnerClass: 
   public ConcurrentMapWrapper=class scala/collection/JavaConversions$ConcurrentMapWrapper of class scala/collection/JavaConversions
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	JavaConversions.scala;
Asciz	MODULE$;
Asciz	Lscala/collection/JavaConversions$ConcurrentMapWrapper$;;
Asciz	<clinit>;
Asciz	()V;
Asciz	Code;
Asciz	scala/collection/JavaConversions$ConcurrentMapWrapper$;
class	scala/collection/JavaConversions$ConcurrentMapWrapper$
Asciz	<init>;
NameAndType	"<init>":()V
Method	scala/collection/JavaConversions$ConcurrentMapWrapper$."<init>":()V
Asciz	unapply;
Asciz	(Lscala/collection/JavaConversions$ConcurrentMapWrapper;)Lscala/Option;;
Asciz	LineNumberTable;
Asciz	scala/None$;
class	scala/None$
Asciz	Lscala/None$;;
NameAndType	MODULE$:Lscala/None$;
Field	scala/None$.MODULE$:Lscala/None$;
Asciz	scala/Some;
class	scala/Some
Asciz	scala/collection/JavaConversions$ConcurrentMapWrapper;
class	scala/collection/JavaConversions$ConcurrentMapWrapper
Asciz	underlying;
Asciz	()Lscala/collection/mutable/ConcurrentMap;;
NameAndType	underlying:()Lscala/collection/mutable/ConcurrentMap;
Method	scala/collection/JavaConversions$ConcurrentMapWrapper.underlying:()Lscala/collection/mutable/ConcurrentMap;
Asciz	(Ljava/lang/Object;)V;
NameAndType	"<init>":(Ljava/lang/Object;)V
Method	scala/Some."<init>":(Ljava/lang/Object;)V
Asciz	this;
Asciz	x$0;
Asciz	Lscala/collection/JavaConversions$ConcurrentMapWrapper;;
Asciz	LocalVariableTable;
Asciz	apply;
Asciz	(Lscala/collection/mutable/ConcurrentMap;Lscala/reflect/ClassManifest;Lscala/reflect/ClassManifest;)Lscala/collection/JavaConversions$ConcurrentMapWrapper;;
Asciz	(Lscala/collection/mutable/ConcurrentMap;Lscala/reflect/ClassManifest;Lscala/reflect/ClassManifest;)V;
NameAndType	"<init>":(Lscala/collection/mutable/ConcurrentMap;Lscala/reflect/ClassManifest;Lscala/reflect/ClassManifest;)V
Method	scala/collection/JavaConversions$ConcurrentMapWrapper."<init>":(Lscala/collection/mutable/ConcurrentMap;Lscala/reflect/ClassManifest;Lscala/reflect/ClassManifest;)V
Asciz	Lscala/collection/mutable/ConcurrentMap;;
Asciz	m;
Asciz	Lscala/reflect/ClassManifest;;
Asciz	mv;
Asciz	java/lang/Object;
class	java/lang/Object
Method	java/lang/Object."<init>":()V
NameAndType	MODULE$:Lscala/collection/JavaConversions$ConcurrentMapWrapper$;
Field	scala/collection/JavaConversions$ConcurrentMapWrapper$.MODULE$:Lscala/collection/JavaConversions$ConcurrentMapWrapper$;
Asciz	Scala;
Asciz	InnerClasses;
Asciz	scala/collection/JavaConversions;
class	scala/collection/JavaConversions
Asciz	ConcurrentMapWrapper;
Asciz	scala/ScalaObject;
class	scala/ScalaObject

{
public static final scala.collection.JavaConversions$ConcurrentMapWrapper$ MODULE$;
  Signature: Lscala/collection/JavaConversions$ConcurrentMapWrapper$;

public static {};
  Signature: ()V
  Code:
   Stack=1, Locals=0, Args_size=0
	new	class scala/collection/JavaConversions$ConcurrentMapWrapper$
	invokespecial	Method "<init>":()V
	return
  Labels:

public scala.Option unapply(scala.collection.JavaConversions$ConcurrentMapWrapper);
  Signature: (Lscala/collection/JavaConversions$ConcurrentMapWrapper;)Lscala/Option;
  Code:
   Stack=3, Locals=2, Args_size=2
	aload_1
	ifnonnull	l1 // new
	getstatic	Field scala/None$.MODULE$:Lscala/None$;
	goto	l2 // areturn
l1	new	class scala/Some
	dup
	aload_1
	invokevirtual	Method scala/collection/JavaConversions$ConcurrentMapWrapper.underlying:()Lscala/collection/mutable/ConcurrentMap;
	invokespecial	Method scala/Some."<init>":(Ljava/lang/Object;)V
l2	areturn
  Labels:
   	l1 = 10 // new
   	l2 = 21 // areturn
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      22      0    this       Lscala/collection/JavaConversions$ConcurrentMapWrapper$;
   0      22      1    x$0       Lscala/collection/JavaConversions$ConcurrentMapWrapper;


public scala.collection.JavaConversions$ConcurrentMapWrapper apply(scala.collection.mutable.ConcurrentMap, scala.reflect.ClassManifest, scala.reflect.ClassManifest);
  Signature: (Lscala/collection/mutable/ConcurrentMap;Lscala/reflect/ClassManifest;Lscala/reflect/ClassManifest;)Lscala/collection/JavaConversions$ConcurrentMapWrapper;
  Code:
   Stack=5, Locals=4, Args_size=4
	new	class scala/collection/JavaConversions$ConcurrentMapWrapper
	dup
	aload_1
	aload_2
	aload_3
	invokespecial	Method scala/collection/JavaConversions$ConcurrentMapWrapper."<init>":(Lscala/collection/mutable/ConcurrentMap;Lscala/reflect/ClassManifest;Lscala/reflect/ClassManifest;)V
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      11      0    this       Lscala/collection/JavaConversions$ConcurrentMapWrapper$;
   0      11      1    underlying       Lscala/collection/mutable/ConcurrentMap;
   0      11      2    m       Lscala/reflect/ClassManifest;
   0      11      3    mv       Lscala/reflect/ClassManifest;


public scala.collection.JavaConversions$ConcurrentMapWrapper$();
  Signature: ()V
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokespecial	Method java/lang/Object."<init>":()V
	aload_0
	putstatic	Field MODULE$:Lscala/collection/JavaConversions$ConcurrentMapWrapper$;
	return
  Labels:

}

