Compiled from "JavaConversions.scala"
public final class scala.collection.JavaConversions$JIterableWrapper$ extends java.lang.Object implements scala.ScalaObject
  SourceFile: "JavaConversions.scala"
  Scala: length = 0x
   
  InnerClass: 
   public JIterableWrapper=class scala/collection/JavaConversions$JIterableWrapper of class scala/collection/JavaConversions
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	JavaConversions.scala;
Asciz	Scala;
Asciz	MODULE$;
Asciz	Lscala/collection/JavaConversions$JIterableWrapper$;;
Asciz	<clinit>;
Asciz	()V;
Asciz	Code;
Asciz	scala/collection/JavaConversions$JIterableWrapper$;
class	scala/collection/JavaConversions$JIterableWrapper$
Asciz	<init>;
NameAndType	"<init>":()V
Method	scala/collection/JavaConversions$JIterableWrapper$."<init>":()V
Asciz	unapply;
Asciz	(Lscala/collection/JavaConversions$JIterableWrapper;)Lscala/Some;;
Asciz	scala/Some;
class	scala/Some
Asciz	LineNumberTable;
Asciz	scala/collection/JavaConversions$JIterableWrapper;
class	scala/collection/JavaConversions$JIterableWrapper
Asciz	underlying;
Asciz	()Ljava/lang/Iterable;;
NameAndType	underlying:()Ljava/lang/Iterable;
Method	scala/collection/JavaConversions$JIterableWrapper.underlying:()Ljava/lang/Iterable;
Asciz	(Ljava/lang/Object;)V;
NameAndType	"<init>":(Ljava/lang/Object;)V
Method	scala/Some."<init>":(Ljava/lang/Object;)V
Asciz	this;
Asciz	x$0;
Asciz	Lscala/collection/JavaConversions$JIterableWrapper;;
Asciz	LocalVariableTable;
Asciz	apply;
Asciz	(Ljava/lang/Iterable;)Lscala/collection/JavaConversions$JIterableWrapper;;
Asciz	(Ljava/lang/Iterable;)V;
NameAndType	"<init>":(Ljava/lang/Iterable;)V
Method	scala/collection/JavaConversions$JIterableWrapper."<init>":(Ljava/lang/Iterable;)V
Asciz	Ljava/lang/Iterable;;
Asciz	java/lang/Object;
class	java/lang/Object
Method	java/lang/Object."<init>":()V
NameAndType	MODULE$:Lscala/collection/JavaConversions$JIterableWrapper$;
Field	scala/collection/JavaConversions$JIterableWrapper$.MODULE$:Lscala/collection/JavaConversions$JIterableWrapper$;
Asciz	InnerClasses;
Asciz	scala/collection/JavaConversions;
class	scala/collection/JavaConversions
Asciz	JIterableWrapper;
Asciz	scala/ScalaObject;
class	scala/ScalaObject

{
public static final scala.collection.JavaConversions$JIterableWrapper$ MODULE$;
  Signature: Lscala/collection/JavaConversions$JIterableWrapper$;

public static {};
  Signature: ()V
  Code:
   Stack=1, Locals=0, Args_size=0
	new	class scala/collection/JavaConversions$JIterableWrapper$
	invokespecial	Method "<init>":()V
	return
  Labels:

public scala.Some unapply(scala.collection.JavaConversions$JIterableWrapper);
  Signature: (Lscala/collection/JavaConversions$JIterableWrapper;)Lscala/Some;
  Code:
   Stack=3, Locals=2, Args_size=2
	new	class scala/Some
	dup
	aload_1
	invokevirtual	Method scala/collection/JavaConversions$JIterableWrapper.underlying:()Ljava/lang/Iterable;
	invokespecial	Method scala/Some."<init>":(Ljava/lang/Object;)V
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      12      0    this       Lscala/collection/JavaConversions$JIterableWrapper$;
   0      12      1    x$0       Lscala/collection/JavaConversions$JIterableWrapper;


public scala.collection.JavaConversions$JIterableWrapper apply(java.lang.Iterable);
  Signature: (Ljava/lang/Iterable;)Lscala/collection/JavaConversions$JIterableWrapper;
  Code:
   Stack=3, Locals=2, Args_size=2
	new	class scala/collection/JavaConversions$JIterableWrapper
	dup
	aload_1
	invokespecial	Method scala/collection/JavaConversions$JIterableWrapper."<init>":(Ljava/lang/Iterable;)V
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/collection/JavaConversions$JIterableWrapper$;
   0      9      1    underlying       Ljava/lang/Iterable;


public scala.collection.JavaConversions$JIterableWrapper$();
  Signature: ()V
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokespecial	Method java/lang/Object."<init>":()V
	aload_0
	putstatic	Field MODULE$:Lscala/collection/JavaConversions$JIterableWrapper$;
	return
  Labels:

}

