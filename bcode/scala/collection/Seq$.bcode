Compiled from "Seq.scala"
public final class scala.collection.Seq$ extends scala.collection.generic.SeqFactory implements scala.ScalaObject
  SourceFile: "Seq.scala"
  Scala: length = 0x
   
  Signature: length = 0x2
   00 4B 
  InnerClass: 
   public GenericCanBuildFrom=class scala/collection/generic/TraversableFactory$GenericCanBuildFrom of class scala/collection/generic/TraversableFactory
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	Seq.scala;
Asciz	Scala;
Asciz	MODULE$;
Asciz	Lscala/collection/Seq$;;
Asciz	<clinit>;
Asciz	()V;
Asciz	Code;
Asciz	scala/collection/Seq$;
class	scala/collection/Seq$
Asciz	<init>;
NameAndType	"<init>":()V
Method	scala/collection/Seq$."<init>":()V
Asciz	hashSeed;
Asciz	I;
Asciz	LineNumberTable;
Asciz	scala/collection/generic/SeqFactory;
class	scala/collection/generic/SeqFactory
Method	scala/collection/generic/SeqFactory."<init>":()V
NameAndType	MODULE$:Lscala/collection/Seq$;
Field	scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
Asciz	Seq;
String	Seq
Asciz	java/lang/String;
class	java/lang/String
Asciz	hashCode;
Asciz	()I;
NameAndType	hashCode:()I
Method	java/lang/String.hashCode:()I
NameAndType	hashSeed:I
Field	scala/collection/Seq$.hashSeed:I
Asciz	singleton;
Asciz	(Ljava/lang/Object;)Lscala/collection/Seq;;
Asciz	scala/Predef$;
class	scala/Predef$
Asciz	Lscala/Predef$;;
NameAndType	MODULE$:Lscala/Predef$;
Field	scala/Predef$.MODULE$:Lscala/Predef$;
Asciz	java/lang/Object;
class	java/lang/Object
Asciz	genericWrapArray;
Asciz	(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;;
NameAndType	genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
Method	scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
Asciz	apply;
Asciz	(Lscala/collection/Seq;)Lscala/collection/Traversable;;
NameAndType	apply:(Lscala/collection/Seq;)Lscala/collection/Traversable;
Method	scala/collection/Seq$.apply:(Lscala/collection/Seq;)Lscala/collection/Traversable;
Asciz	scala/collection/Seq;
class	scala/collection/Seq
Asciz	this;
Asciz	value;
Asciz	Ljava/lang/Object;;
Asciz	LocalVariableTable;
Asciz	<A:Ljava/lang/Object;>(TA;)Lscala/collection/Seq<TA;>;;
Asciz	Signature;
Asciz	newBuilder;
Asciz	()Lscala/collection/mutable/Builder;;
Asciz	scala/collection/immutable/Seq$;
class	scala/collection/immutable/Seq$
Asciz	Lscala/collection/immutable/Seq$;;
NameAndType	MODULE$:Lscala/collection/immutable/Seq$;
Field	scala/collection/immutable/Seq$.MODULE$:Lscala/collection/immutable/Seq$;
NameAndType	newBuilder:()Lscala/collection/mutable/Builder;
Method	scala/collection/immutable/Seq$.newBuilder:()Lscala/collection/mutable/Builder;
Asciz	<A:Ljava/lang/Object;>()Lscala/collection/mutable/Builder<TA;Lscala/collection/Seq<TA;>;>;;
Asciz	canBuildFrom;
Asciz	()Lscala/collection/generic/CanBuildFrom;;
Asciz	scala/collection/generic/TraversableFactory$GenericCanBuildFrom;
class	scala/collection/generic/TraversableFactory$GenericCanBuildFrom
Asciz	(Lscala/collection/generic/TraversableFactory;)V;
NameAndType	"<init>":(Lscala/collection/generic/TraversableFactory;)V
Method	scala/collection/generic/TraversableFactory$GenericCanBuildFrom."<init>":(Lscala/collection/generic/TraversableFactory;)V
Asciz	<A:Ljava/lang/Object;>()Lscala/collection/generic/CanBuildFrom<Lscala/collection/Seq<*>;TA;Lscala/collection/Seq<TA;>;>;;
Asciz	Lscala/collection/generic/SeqFactory<Lscala/collection/Seq;>;Lscala/ScalaObject;;
Asciz	InnerClasses;
Asciz	scala/collection/generic/TraversableFactory;
class	scala/collection/generic/TraversableFactory
Asciz	GenericCanBuildFrom;
Asciz	scala/ScalaObject;
class	scala/ScalaObject

{
public static final scala.collection.Seq$ MODULE$;
  Signature: Lscala/collection/Seq$;

private final int hashSeed;
  Signature: I

public static {};
  Signature: ()V
  Code:
   Stack=1, Locals=0, Args_size=0
	new	class scala/collection/Seq$
	invokespecial	Method "<init>":()V
	return
  Labels:

private scala.collection.Seq$();
  Signature: ()V
  Code:
   Stack=2, Locals=1, Args_size=1
	aload_0
	invokespecial	Method scala/collection/generic/SeqFactory."<init>":()V
	aload_0
	putstatic	Field MODULE$:Lscala/collection/Seq$;
	aload_0
	ldc	String Seq
	invokevirtual	Method java/lang/String.hashCode:()I
	putfield	Field hashSeed:I
	return
  Labels:

public scala.collection.Seq singleton(java.lang.Object);
  Signature: (Ljava/lang/Object;)Lscala/collection/Seq;
  Code:
   Stack=6, Locals=2, Args_size=2
	aload_0
	getstatic	Field scala/Predef$.MODULE$:Lscala/Predef$;
	iconst_1
	anewarray	class java/lang/Object
	dup
	iconst_0
	aload_1
	aastore
	invokevirtual	Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
	invokevirtual	Method apply:(Lscala/collection/Seq;)Lscala/collection/Traversable;
	checkcast	class scala/collection/Seq
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      22      0    this       Lscala/collection/Seq$;
   0      22      1    value       Ljava/lang/Object;

  Signature: length = 0x2
   00 37 

public scala.collection.mutable.Builder newBuilder();
  Signature: ()Lscala/collection/mutable/Builder;
  Code:
   Stack=1, Locals=1, Args_size=1
	getstatic	Field scala/collection/immutable/Seq$.MODULE$:Lscala/collection/immutable/Seq$;
	invokevirtual	Method scala/collection/immutable/Seq$.newBuilder:()Lscala/collection/mutable/Builder;
	areturn
  Labels:
  Signature: length = 0x2
   00 42 

public scala.collection.generic.CanBuildFrom canBuildFrom();
  Signature: ()Lscala/collection/generic/CanBuildFrom;
  Code:
   Stack=3, Locals=1, Args_size=1
	new	class scala/collection/generic/TraversableFactory$GenericCanBuildFrom
	dup
	aload_0
	invokespecial	Method scala/collection/generic/TraversableFactory$GenericCanBuildFrom."<init>":(Lscala/collection/generic/TraversableFactory;)V
	areturn
  Labels:
  Signature: length = 0x2
   00 4A 

public int hashSeed();
  Signature: ()I
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field hashSeed:I
	ireturn
  Labels:

}

