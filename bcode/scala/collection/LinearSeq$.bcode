Compiled from "LinearSeq.scala"
public final class scala.collection.LinearSeq$ extends scala.collection.generic.SeqFactory implements scala.ScalaObject
  SourceFile: "LinearSeq.scala"
  Scala: length = 0x
   
  Signature: length = 0x2
   00 27 
  InnerClass: 
   public GenericCanBuildFrom=class scala/collection/generic/TraversableFactory$GenericCanBuildFrom of class scala/collection/generic/TraversableFactory
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	LinearSeq.scala;
Asciz	MODULE$;
Asciz	Lscala/collection/LinearSeq$;;
Asciz	<clinit>;
Asciz	()V;
Asciz	Code;
Asciz	scala/collection/LinearSeq$;
class	scala/collection/LinearSeq$
Asciz	<init>;
NameAndType	"<init>":()V
Method	scala/collection/LinearSeq$."<init>":()V
Asciz	canBuildFrom;
Asciz	()Lscala/collection/generic/CanBuildFrom;;
Asciz	scala/collection/generic/TraversableFactory$GenericCanBuildFrom;
class	scala/collection/generic/TraversableFactory$GenericCanBuildFrom
Asciz	LineNumberTable;
Asciz	(Lscala/collection/generic/TraversableFactory;)V;
NameAndType	"<init>":(Lscala/collection/generic/TraversableFactory;)V
Method	scala/collection/generic/TraversableFactory$GenericCanBuildFrom."<init>":(Lscala/collection/generic/TraversableFactory;)V
Asciz	<A:Ljava/lang/Object;>()Lscala/collection/generic/CanBuildFrom<Lscala/collection/LinearSeq<*>;TA;Lscala/collection/LinearSeq<TA;>;>;;
Asciz	Signature;
Asciz	newBuilder;
Asciz	()Lscala/collection/mutable/Builder;;
Asciz	scala/collection/immutable/LinearSeq$;
class	scala/collection/immutable/LinearSeq$
Asciz	Lscala/collection/immutable/LinearSeq$;;
NameAndType	MODULE$:Lscala/collection/immutable/LinearSeq$;
Field	scala/collection/immutable/LinearSeq$.MODULE$:Lscala/collection/immutable/LinearSeq$;
NameAndType	newBuilder:()Lscala/collection/mutable/Builder;
Method	scala/collection/immutable/LinearSeq$.newBuilder:()Lscala/collection/mutable/Builder;
Asciz	<A:Ljava/lang/Object;>()Lscala/collection/mutable/Builder<TA;Lscala/collection/LinearSeq<TA;>;>;;
Asciz	scala/collection/generic/SeqFactory;
class	scala/collection/generic/SeqFactory
Method	scala/collection/generic/SeqFactory."<init>":()V
NameAndType	MODULE$:Lscala/collection/LinearSeq$;
Field	scala/collection/LinearSeq$.MODULE$:Lscala/collection/LinearSeq$;
Asciz	Scala;
Asciz	Lscala/collection/generic/SeqFactory<Lscala/collection/LinearSeq;>;Lscala/ScalaObject;;
Asciz	InnerClasses;
Asciz	scala/collection/generic/TraversableFactory;
class	scala/collection/generic/TraversableFactory
Asciz	GenericCanBuildFrom;
Asciz	scala/ScalaObject;
class	scala/ScalaObject

{
public static final scala.collection.LinearSeq$ MODULE$;
  Signature: Lscala/collection/LinearSeq$;

public static {};
  Signature: ()V
  Code:
   Stack=1, Locals=0, Args_size=0
	new	class scala/collection/LinearSeq$
	invokespecial	Method "<init>":()V
	return
  Labels:

public scala.collection.generic.CanBuildFrom canBuildFrom();
  Signature: ()Lscala/collection/generic/CanBuildFrom;
  Code:
   Stack=3, Locals=1, Args_size=1
	new	class scala/collection/generic/TraversableFactory$GenericCanBuildFrom
	dup
	aload_0
	invokespecial	Method scala/collection/generic/TraversableFactory$GenericCanBuildFrom."<init>":(Lscala/collection/generic/TraversableFactory;)V
	areturn
  Labels:
  Signature: length = 0x2
   00 15 

public scala.collection.mutable.Builder newBuilder();
  Signature: ()Lscala/collection/mutable/Builder;
  Code:
   Stack=1, Locals=1, Args_size=1
	getstatic	Field scala/collection/immutable/LinearSeq$.MODULE$:Lscala/collection/immutable/LinearSeq$;
	invokevirtual	Method scala/collection/immutable/LinearSeq$.newBuilder:()Lscala/collection/mutable/Builder;
	areturn
  Labels:
  Signature: length = 0x2
   00 20 

private scala.collection.LinearSeq$();
  Signature: ()V
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokespecial	Method scala/collection/generic/SeqFactory."<init>":()V
	aload_0
	putstatic	Field MODULE$:Lscala/collection/LinearSeq$;
	return
  Labels:

}

