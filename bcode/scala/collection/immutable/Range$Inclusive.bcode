Compiled from "Range.scala"
public class scala.collection.immutable.Range$Inclusive extends scala.collection.immutable.Range implements scala.ScalaObject
  SourceFile: "Range.scala"
  Scala: length = 0x
   
  InnerClass: 
   public Inclusive=class scala/collection/immutable/Range$Inclusive of class scala/collection/immutable/Range
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	Range.scala;
Asciz	limit;
Asciz	I;
Asciz	<init>;
Asciz	(III)V;
Asciz	Code;
Asciz	LineNumberTable;
Asciz	scala/collection/immutable/Range;
class	scala/collection/immutable/Range
NameAndType	"<init>":(III)V
Method	scala/collection/immutable/Range."<init>":(III)V
Asciz	end;
Asciz	()I;
NameAndType	end:()I
Method	scala/collection/immutable/Range.end:()I
Asciz	scala/math/package$;
class	scala/math/package$
Asciz	MODULE$;
Asciz	Lscala/math/package$;;
NameAndType	MODULE$:Lscala/math/package$;
Field	scala/math/package$.MODULE$:Lscala/math/package$;
Asciz	step;
NameAndType	step:()I
Method	scala/collection/immutable/Range.step:()I
Asciz	scala/MathCommon;
class	scala/MathCommon
Asciz	signum;
Asciz	(I)I;
NameAndType	signum:(I)I
InterfaceMethod	scala/MathCommon.signum:(I)I
Asciz	scala/collection/immutable/Range$Inclusive;
class	scala/collection/immutable/Range$Inclusive
NameAndType	limit:I
Field	scala/collection/immutable/Range$Inclusive.limit:I
Asciz	this;
Asciz	Lscala/collection/immutable/Range$Inclusive;;
Asciz	start;
Asciz	LocalVariableTable;
Asciz	copy;
Asciz	(III)Lscala/collection/immutable/Range;;
Method	scala/collection/immutable/Range$Inclusive."<init>":(III)V
Asciz	isInclusive;
Asciz	()Z;
Asciz	Scala;
Asciz	InnerClasses;
Asciz	Inclusive;
Asciz	scala/ScalaObject;
class	scala/ScalaObject

{
private final int limit;
  Signature: I

public scala.collection.immutable.Range$Inclusive(int, int, int);
  Signature: (III)V
  Code:
   Stack=4, Locals=4, Args_size=4
	aload_0
	iload_1
	iload_2
	iload_3
	invokespecial	Method scala/collection/immutable/Range."<init>":(III)V
	aload_0
	aload_0
	invokespecial	Method scala/collection/immutable/Range.end:()I
	getstatic	Field scala/math/package$.MODULE$:Lscala/math/package$;
	aload_0
	invokespecial	Method scala/collection/immutable/Range.step:()I
	invokeinterface	InterfaceMethod scala/MathCommon.signum:(I)I
	iadd
	putfield	Field limit:I
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      29      0    this       Lscala/collection/immutable/Range$Inclusive;
   0      29      1    start       I
   0      29      2    end       I
   0      29      3    step       I


public scala.collection.immutable.Range copy(int, int, int);
  Signature: (III)Lscala/collection/immutable/Range;
  Code:
   Stack=5, Locals=4, Args_size=4
	new	class scala/collection/immutable/Range$Inclusive
	dup
	iload_1
	iload_2
	iload_3
	invokespecial	Method "<init>":(III)V
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      11      0    this       Lscala/collection/immutable/Range$Inclusive;
   0      11      1    start       I
   0      11      2    end       I
   0      11      3    step       I


public int limit();
  Signature: ()I
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field limit:I
	ireturn
  Labels:

public boolean isInclusive();
  Signature: ()Z
  Code:
   Stack=1, Locals=1, Args_size=1
	iconst_1
	ireturn
  Labels:

}

