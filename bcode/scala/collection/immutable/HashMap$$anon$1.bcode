Compiled from "HashMap.scala"
public final class scala.collection.immutable.HashMap$$anon$1 extends scala.collection.immutable.HashMap
  SourceFile: "HashMap.scala"
  Signature: length = 0x2
   00 33 
  Scala: length = 0x
   
  InnerClass: 
   public final #54= #10 of #14; //$anon$1=class scala/collection/immutable/HashMap$$anon$1 of class scala/collection/immutable/HashMap
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	HashMap.scala;
const #3 = Asciz	lv$1;
const #4 = Asciz	I;
const #5 = Asciz	<init>;
const #6 = Asciz	(Lscala/collection/immutable/HashMap;I)V;
const #7 = Asciz	Code;
const #8 = Asciz	LineNumberTable;
const #9 = Asciz	scala/collection/immutable/HashMap$$anon$1;
const #10 = class	#9;	//  scala/collection/immutable/HashMap$$anon$1
const #11 = NameAndType	#3:#4;//  lv$1:I
const #12 = Field	#10.#11;	//  scala/collection/immutable/HashMap$$anon$1.lv$1:I
const #13 = Asciz	scala/collection/immutable/HashMap;
const #14 = class	#13;	//  scala/collection/immutable/HashMap
const #15 = Asciz	()V;
const #16 = NameAndType	#5:#15;//  "<init>":()V
const #17 = Method	#14.#16;	//  scala/collection/immutable/HashMap."<init>":()V
const #18 = Asciz	scala/collection/mutable/HashTable;
const #19 = class	#18;	//  scala/collection/mutable/HashTable
const #20 = Asciz	table;
const #21 = Asciz	()[Lscala/collection/mutable/HashEntry;;
const #22 = NameAndType	#20:#21;//  table:()[Lscala/collection/mutable/HashEntry;
const #23 = InterfaceMethod	#19.#22;	//  scala/collection/mutable/HashTable.table:()[Lscala/collection/mutable/HashEntry;
const #24 = Asciz	table_$eq;
const #25 = Asciz	([Lscala/collection/mutable/HashEntry;)V;
const #26 = NameAndType	#24:#25;//  table_$eq:([Lscala/collection/mutable/HashEntry;)V
const #27 = InterfaceMethod	#19.#26;	//  scala/collection/mutable/HashTable.table_$eq:([Lscala/collection/mutable/HashEntry;)V
const #28 = Asciz	tableSize;
const #29 = Asciz	()I;
const #30 = NameAndType	#28:#29;//  tableSize:()I
const #31 = InterfaceMethod	#19.#30;	//  scala/collection/mutable/HashTable.tableSize:()I
const #32 = Asciz	tableSize_$eq;
const #33 = Asciz	(I)V;
const #34 = NameAndType	#32:#33;//  tableSize_$eq:(I)V
const #35 = InterfaceMethod	#19.#34;	//  scala/collection/mutable/HashTable.tableSize_$eq:(I)V
const #36 = Asciz	threshold;
const #37 = NameAndType	#36:#29;//  threshold:()I
const #38 = InterfaceMethod	#19.#37;	//  scala/collection/mutable/HashTable.threshold:()I
const #39 = Asciz	threshold_$eq;
const #40 = NameAndType	#39:#33;//  threshold_$eq:(I)V
const #41 = InterfaceMethod	#19.#40;	//  scala/collection/mutable/HashTable.threshold_$eq:(I)V
const #42 = Asciz	this;
const #43 = Asciz	Lscala/collection/immutable/HashMap$$anon$1;;
const #44 = Asciz	$outer;
const #45 = Asciz	Lscala/collection/immutable/HashMap;;
const #46 = Asciz	LocalVariableTable;
const #47 = Asciz	(Lscala/collection/immutable/HashMap<TA;TB;>;)V;
const #48 = Asciz	Signature;
const #49 = Asciz	loadFactor;
const #50 = Asciz	initialSize;
const #51 = Asciz	Lscala/collection/immutable/HashMap<TA;TB;>;;
const #52 = Asciz	Scala;
const #53 = Asciz	InnerClasses;
const #54 = Asciz	$anon$1;

{
public scala.collection.immutable.HashMap$$anon$1(scala.collection.immutable.HashMap, int);
  Code:
   Stack=2, Locals=3, Args_size=3
   0:	aload_0
   1:	iload_2
   2:	putfield	#12; //Field lv$1:I
   5:	aload_0
   6:	invokespecial	#17; //Method scala/collection/immutable/HashMap."<init>":()V
   9:	aload_0
   10:	aload_1
   11:	invokeinterface	#23,  1; //InterfaceMethod scala/collection/mutable/HashTable.table:()[Lscala/collection/mutable/HashEntry;
   16:	invokeinterface	#27,  2; //InterfaceMethod scala/collection/mutable/HashTable.table_$eq:([Lscala/collection/mutable/HashEntry;)V
   21:	aload_0
   22:	aload_1
   23:	invokeinterface	#31,  1; //InterfaceMethod scala/collection/mutable/HashTable.tableSize:()I
   28:	invokeinterface	#35,  2; //InterfaceMethod scala/collection/mutable/HashTable.tableSize_$eq:(I)V
   33:	aload_0
   34:	aload_1
   35:	invokeinterface	#38,  1; //InterfaceMethod scala/collection/mutable/HashTable.threshold:()I
   40:	invokeinterface	#41,  2; //InterfaceMethod scala/collection/mutable/HashTable.threshold_$eq:(I)V
   45:	return
  LineNumberTable: 
   line 123: 0
   line 126: 9
   line 127: 21
   line 128: 33

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      46      0    this       Lscala/collection/immutable/HashMap$$anon$1;
   0      46      1    $outer       Lscala/collection/immutable/HashMap;

  Signature: length = 0x2
   00 2F 

public int loadFactor();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#12; //Field lv$1:I
   4:	ireturn
  LineNumberTable: 
   line 125: 0


public int initialSize();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	iconst_0
   1:	ireturn
  LineNumberTable: 
   line 124: 0


}

