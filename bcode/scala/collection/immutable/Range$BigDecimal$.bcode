Compiled from "Range.scala"
public final class scala.collection.immutable.Range$BigDecimal$ extends java.lang.Object implements scala.ScalaObject
  SourceFile: "Range.scala"
  Scala: length = 0x
   
  InnerClass: 
   public Exclusive=class scala/collection/immutable/NumericRange$Exclusive of class scala/collection/immutable/NumericRange
   public Inclusive=class scala/collection/immutable/NumericRange$Inclusive of class scala/collection/immutable/NumericRange
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	Range.scala;
Asciz	Scala;
Asciz	MODULE$;
Asciz	Lscala/collection/immutable/Range$BigDecimal$;;
Asciz	<clinit>;
Asciz	()V;
Asciz	Code;
Asciz	scala/collection/immutable/Range$BigDecimal$;
class	scala/collection/immutable/Range$BigDecimal$
Asciz	<init>;
NameAndType	"<init>":()V
Method	scala/collection/immutable/Range$BigDecimal$."<init>":()V
Asciz	bigDecAsIntegral;
Asciz	Lscala/math/Numeric$BigDecimalAsIfIntegral$;;
Asciz	LineNumberTable;
Asciz	java/lang/Object;
class	java/lang/Object
Method	java/lang/Object."<init>":()V
NameAndType	MODULE$:Lscala/collection/immutable/Range$BigDecimal$;
Field	scala/collection/immutable/Range$BigDecimal$.MODULE$:Lscala/collection/immutable/Range$BigDecimal$;
Asciz	scala/math/Numeric$BigDecimalAsIfIntegral$;
class	scala/math/Numeric$BigDecimalAsIfIntegral$
NameAndType	MODULE$:Lscala/math/Numeric$BigDecimalAsIfIntegral$;
Field	scala/math/Numeric$BigDecimalAsIfIntegral$.MODULE$:Lscala/math/Numeric$BigDecimalAsIfIntegral$;
NameAndType	bigDecAsIntegral:Lscala/math/Numeric$BigDecimalAsIfIntegral$;
Field	scala/collection/immutable/Range$BigDecimal$.bigDecAsIntegral:Lscala/math/Numeric$BigDecimalAsIfIntegral$;
Asciz	inclusive;
Asciz	(Lscala/math/BigDecimal;Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/collection/immutable/NumericRange$Inclusive;;
Asciz	scala/collection/immutable/NumericRange$;
class	scala/collection/immutable/NumericRange$
Asciz	Lscala/collection/immutable/NumericRange$;;
NameAndType	MODULE$:Lscala/collection/immutable/NumericRange$;
Field	scala/collection/immutable/NumericRange$.MODULE$:Lscala/collection/immutable/NumericRange$;
Asciz	()Lscala/math/Numeric$BigDecimalAsIfIntegral$;;
NameAndType	bigDecAsIntegral:()Lscala/math/Numeric$BigDecimalAsIfIntegral$;
Method	scala/collection/immutable/Range$BigDecimal$.bigDecAsIntegral:()Lscala/math/Numeric$BigDecimalAsIfIntegral$;
Asciz	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lscala/math/Integral;)Lscala/collection/immutable/NumericRange$Inclusive;;
NameAndType	inclusive:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lscala/math/Integral;)Lscala/collection/immutable/NumericRange$Inclusive;
Method	scala/collection/immutable/NumericRange$.inclusive:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lscala/math/Integral;)Lscala/collection/immutable/NumericRange$Inclusive;
Asciz	this;
Asciz	start;
Asciz	Lscala/math/BigDecimal;;
Asciz	end;
Asciz	step;
Asciz	LocalVariableTable;
Asciz	(Lscala/math/BigDecimal;Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/collection/immutable/NumericRange$Inclusive<Lscala/math/BigDecimal;>;;
Asciz	Signature;
Asciz	apply;
Asciz	(Lscala/math/BigDecimal;Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/collection/immutable/NumericRange$Exclusive;;
Asciz	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lscala/math/Integral;)Lscala/collection/immutable/NumericRange$Exclusive;;
NameAndType	apply:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lscala/math/Integral;)Lscala/collection/immutable/NumericRange$Exclusive;
Method	scala/collection/immutable/NumericRange$.apply:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lscala/math/Integral;)Lscala/collection/immutable/NumericRange$Exclusive;
Asciz	(Lscala/math/BigDecimal;Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/collection/immutable/NumericRange$Exclusive<Lscala/math/BigDecimal;>;;
Asciz	InnerClasses;
Asciz	scala/collection/immutable/NumericRange$Exclusive;
class	scala/collection/immutable/NumericRange$Exclusive
Asciz	scala/collection/immutable/NumericRange;
class	scala/collection/immutable/NumericRange
Asciz	Exclusive;
Asciz	scala/collection/immutable/NumericRange$Inclusive;
class	scala/collection/immutable/NumericRange$Inclusive
Asciz	Inclusive;
Asciz	scala/ScalaObject;
class	scala/ScalaObject

{
public static final scala.collection.immutable.Range$BigDecimal$ MODULE$;
  Signature: Lscala/collection/immutable/Range$BigDecimal$;

private final scala.math.Numeric$BigDecimalAsIfIntegral$ bigDecAsIntegral;
  Signature: Lscala/math/Numeric$BigDecimalAsIfIntegral$;

public static {};
  Signature: ()V
  Code:
   Stack=1, Locals=0, Args_size=0
	new	class scala/collection/immutable/Range$BigDecimal$
	invokespecial	Method "<init>":()V
	return
  Labels:

public scala.collection.immutable.Range$BigDecimal$();
  Signature: ()V
  Code:
   Stack=2, Locals=1, Args_size=1
	aload_0
	invokespecial	Method java/lang/Object."<init>":()V
	aload_0
	putstatic	Field MODULE$:Lscala/collection/immutable/Range$BigDecimal$;
	aload_0
	getstatic	Field scala/math/Numeric$BigDecimalAsIfIntegral$.MODULE$:Lscala/math/Numeric$BigDecimalAsIfIntegral$;
	putfield	Field bigDecAsIntegral:Lscala/math/Numeric$BigDecimalAsIfIntegral$;
	return
  Labels:

public scala.collection.immutable.NumericRange$Inclusive inclusive(scala.math.BigDecimal, scala.math.BigDecimal, scala.math.BigDecimal);
  Signature: (Lscala/math/BigDecimal;Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/collection/immutable/NumericRange$Inclusive;
  Code:
   Stack=5, Locals=4, Args_size=4
	getstatic	Field scala/collection/immutable/NumericRange$.MODULE$:Lscala/collection/immutable/NumericRange$;
	aload_1
	aload_2
	aload_3
	aload_0
	invokevirtual	Method bigDecAsIntegral:()Lscala/math/Numeric$BigDecimalAsIfIntegral$;
	invokevirtual	Method scala/collection/immutable/NumericRange$.inclusive:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lscala/math/Integral;)Lscala/collection/immutable/NumericRange$Inclusive;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      14      0    this       Lscala/collection/immutable/Range$BigDecimal$;
   0      14      1    start       Lscala/math/BigDecimal;
   0      14      2    end       Lscala/math/BigDecimal;
   0      14      3    step       Lscala/math/BigDecimal;

  Signature: length = 0x2
   00 2F 

public scala.collection.immutable.NumericRange$Exclusive apply(scala.math.BigDecimal, scala.math.BigDecimal, scala.math.BigDecimal);
  Signature: (Lscala/math/BigDecimal;Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/collection/immutable/NumericRange$Exclusive;
  Code:
   Stack=5, Locals=4, Args_size=4
	getstatic	Field scala/collection/immutable/NumericRange$.MODULE$:Lscala/collection/immutable/NumericRange$;
	aload_1
	aload_2
	aload_3
	aload_0
	invokevirtual	Method bigDecAsIntegral:()Lscala/math/Numeric$BigDecimalAsIfIntegral$;
	invokevirtual	Method scala/collection/immutable/NumericRange$.apply:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lscala/math/Integral;)Lscala/collection/immutable/NumericRange$Exclusive;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      14      0    this       Lscala/collection/immutable/Range$BigDecimal$;
   0      14      1    start       Lscala/math/BigDecimal;
   0      14      2    end       Lscala/math/BigDecimal;
   0      14      3    step       Lscala/math/BigDecimal;

  Signature: length = 0x2
   00 36 

public scala.math.Numeric$BigDecimalAsIfIntegral$ bigDecAsIntegral();
  Signature: ()Lscala/math/Numeric$BigDecimalAsIfIntegral$;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field bigDecAsIntegral:Lscala/math/Numeric$BigDecimalAsIfIntegral$;
	areturn
  Labels:

}

