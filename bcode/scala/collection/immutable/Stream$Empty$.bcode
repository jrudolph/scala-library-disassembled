Compiled from "Stream.scala"
public final class scala.collection.immutable.Stream$Empty$ extends scala.collection.immutable.Stream implements scala.ScalaObject
  SourceFile: "Stream.scala"
  Scala: length = 0x
   
  Signature: length = 0x2
   00 2C 
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	Stream.scala;
Asciz	Scala;
Asciz	MODULE$;
Asciz	Lscala/collection/immutable/Stream$Empty$;;
Asciz	<clinit>;
Asciz	()V;
Asciz	Code;
Asciz	scala/collection/immutable/Stream$Empty$;
class	scala/collection/immutable/Stream$Empty$
Asciz	<init>;
NameAndType	"<init>":()V
Method	scala/collection/immutable/Stream$Empty$."<init>":()V
Asciz	LineNumberTable;
Asciz	scala/collection/immutable/Stream;
class	scala/collection/immutable/Stream
Method	scala/collection/immutable/Stream."<init>":()V
NameAndType	MODULE$:Lscala/collection/immutable/Stream$Empty$;
Field	scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
Asciz	head;
Asciz	()Ljava/lang/Object;;
Asciz	()Lscala/runtime/Nothing$;;
NameAndType	head:()Lscala/runtime/Nothing$;
Method	scala/collection/immutable/Stream$Empty$.head:()Lscala/runtime/Nothing$;
Asciz	tail;
NameAndType	tail:()Lscala/runtime/Nothing$;
Method	scala/collection/immutable/Stream$Empty$.tail:()Lscala/runtime/Nothing$;
Asciz	()Lscala/collection/LinearSeqLike;;
Asciz	tailDefined;
Asciz	()Z;
Asciz	java/lang/UnsupportedOperationException;
class	java/lang/UnsupportedOperationException
Asciz	tail of empty stream;
String	tail of empty stream
Asciz	(Ljava/lang/String;)V;
NameAndType	"<init>":(Ljava/lang/String;)V
Method	java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
Asciz	java/util/NoSuchElementException;
class	java/util/NoSuchElementException
Asciz	head of empty stream;
String	head of empty stream
Method	java/util/NoSuchElementException."<init>":(Ljava/lang/String;)V
Asciz	isEmpty;
Asciz	Lscala/collection/immutable/Stream<Lscala/runtime/Nothing$;>;Lscala/ScalaObject;;
Asciz	Signature;
Asciz	scala/ScalaObject;
class	scala/ScalaObject

{
public static final scala.collection.immutable.Stream$Empty$ MODULE$;
  Signature: Lscala/collection/immutable/Stream$Empty$;

public static {};
  Signature: ()V
  Code:
   Stack=1, Locals=0, Args_size=0
	new	class scala/collection/immutable/Stream$Empty$
	invokespecial	Method "<init>":()V
	return
  Labels:

public scala.collection.immutable.Stream$Empty$();
  Signature: ()V
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokespecial	Method scala/collection/immutable/Stream."<init>":()V
	aload_0
	putstatic	Field MODULE$:Lscala/collection/immutable/Stream$Empty$;
	return
  Labels:

public java.lang.Object head();
  Signature: ()Ljava/lang/Object;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokevirtual	Method head:()Lscala/runtime/Nothing$;
	athrow
  Labels:

public java.lang.Object tail();
  Signature: ()Ljava/lang/Object;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokevirtual	Method tail:()Lscala/runtime/Nothing$;
	athrow
  Labels:

public scala.collection.LinearSeqLike tail();
  Signature: ()Lscala/collection/LinearSeqLike;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokevirtual	Method tail:()Lscala/runtime/Nothing$;
	athrow
  Labels:

public boolean tailDefined();
  Signature: ()Z
  Code:
   Stack=1, Locals=1, Args_size=1
	iconst_0
	ireturn
  Labels:

public scala.runtime.Nothing$ tail();
  Signature: ()Lscala/runtime/Nothing$;
  Code:
   Stack=3, Locals=1, Args_size=1
	new	class java/lang/UnsupportedOperationException
	dup
	ldc	String tail of empty stream
	invokespecial	Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
	athrow
  Labels:

public scala.runtime.Nothing$ head();
  Signature: ()Lscala/runtime/Nothing$;
  Code:
   Stack=3, Locals=1, Args_size=1
	new	class java/util/NoSuchElementException
	dup
	ldc	String head of empty stream
	invokespecial	Method java/util/NoSuchElementException."<init>":(Ljava/lang/String;)V
	athrow
  Labels:

public boolean isEmpty();
  Signature: ()Z
  Code:
   Stack=1, Locals=1, Args_size=1
	iconst_1
	ireturn
  Labels:

}

