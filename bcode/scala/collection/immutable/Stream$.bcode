Compiled from "Stream.scala"
public final class scala.collection.immutable.Stream$ extends scala.collection.generic.SeqFactory
  InnerClass: 
   public final Cons=class scala/collection/immutable/Stream$Cons of class scala/collection/immutable/Stream
   public final $anonfun$1=class scala/collection/immutable/Stream$$anonfun$1 of class scala/collection/immutable/Stream
   public StreamBuilder=class scala/collection/immutable/Stream$StreamBuilder of class scala/collection/immutable/Stream
   public final $anonfun$map$1=class scala/collection/immutable/Stream$$anonfun$map$1 of class scala/collection/immutable/Stream
   public final $anonfun$filter$1=class scala/collection/immutable/Stream$$anonfun$filter$1 of class scala/collection/immutable/Stream
  Scala: length = 0x
   
  Signature: length = 0x2
   00 23 
  SourceFile: "Stream.scala"
  minor version: 0
  major version: 49
  Constant pool:
class	scala/collection/generic/SeqFactory
class	scala/collection/immutable/Stream
class	scala/collection/immutable/Stream$
class	scala/collection/immutable/Stream$$anonfun$1
class	scala/collection/immutable/Stream$$anonfun$filter$1
class	scala/collection/immutable/Stream$$anonfun$map$1
class	scala/collection/immutable/Stream$Cons
class	scala/collection/immutable/Stream$Empty$
class	scala/collection/immutable/Stream$StreamBuilder
Field	scala/collection/immutable/Stream$.MODULE$:Lscala/collection/immutable/Stream$;
Field	scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
Method	scala/collection/generic/SeqFactory."<init>":()V
Method	scala/collection/immutable/Stream$."<init>":()V
Method	scala/collection/immutable/Stream$.empty:()Lscala/collection/immutable/Stream;
Method	scala/collection/immutable/Stream$StreamBuilder."<init>":()V
NameAndType	"<init>":()V
NameAndType	MODULE$:Lscala/collection/immutable/Stream$;
NameAndType	MODULE$:Lscala/collection/immutable/Stream$Empty$;
NameAndType	empty:()Lscala/collection/immutable/Stream;
Asciz	$anonfun$1;
Asciz	$anonfun$filter$1;
Asciz	$anonfun$map$1;
Asciz	()Lscala/collection/Traversable;;
Asciz	()Lscala/collection/immutable/Stream;;
Asciz	()Lscala/collection/mutable/Builder;;
Asciz	()V;
Asciz	<A:Ljava/lang/Object;>()Lscala/collection/immutable/Stream<TA;>;;
Asciz	<A:Ljava/lang/Object;>()Lscala/collection/mutable/Builder<TA;Lscala/collection/immutable/Stream<TA;>;>;;
Asciz	<clinit>;
Asciz	<init>;
Asciz	Code;
Asciz	Cons;
Asciz	InnerClasses;
Asciz	LineNumberTable;
Asciz	Lscala/collection/generic/SeqFactory<Lscala/collection/immutable/Stream;>;;
Asciz	Lscala/collection/immutable/Stream$;;
Asciz	Lscala/collection/immutable/Stream$Empty$;;
Asciz	MODULE$;
Asciz	Scala;
Asciz	Signature;
Asciz	SourceFile;
Asciz	Stream.scala;
Asciz	StreamBuilder;
Asciz	empty;
Asciz	newBuilder;
Asciz	scala/collection/generic/SeqFactory;
Asciz	scala/collection/immutable/Stream;
Asciz	scala/collection/immutable/Stream$;
Asciz	scala/collection/immutable/Stream$$anonfun$1;
Asciz	scala/collection/immutable/Stream$$anonfun$filter$1;
Asciz	scala/collection/immutable/Stream$$anonfun$map$1;
Asciz	scala/collection/immutable/Stream$Cons;
Asciz	scala/collection/immutable/Stream$Empty$;
Asciz	scala/collection/immutable/Stream$StreamBuilder;

{
public static final scala.collection.immutable.Stream$ MODULE$;
  Signature: Lscala/collection/immutable/Stream$;

public static {};
  Signature: ()V
  Code:
   Stack=1, Locals=0, Args_size=0
	new	class scala/collection/immutable/Stream$
	invokespecial	Method "<init>":()V
	return
  Labels:

private scala.collection.immutable.Stream$();
  Signature: ()V
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokespecial	Method scala/collection/generic/SeqFactory."<init>":()V
	aload_0
	putstatic	Field MODULE$:Lscala/collection/immutable/Stream$;
	return
  Labels:

public scala.collection.Traversable empty();
  Signature: ()Lscala/collection/Traversable;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokevirtual	Method empty:()Lscala/collection/immutable/Stream;
	areturn
  Labels:

public scala.collection.immutable.Stream empty();
  Signature: ()Lscala/collection/immutable/Stream;
  Code:
   Stack=1, Locals=1, Args_size=1
	getstatic	Field scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
	areturn
  Labels:
  Signature: length = 0x2
   00 1B 

public scala.collection.mutable.Builder newBuilder();
  Signature: ()Lscala/collection/mutable/Builder;
  Code:
   Stack=2, Locals=1, Args_size=1
	new	class scala/collection/immutable/Stream$StreamBuilder
	dup
	invokespecial	Method scala/collection/immutable/Stream$StreamBuilder."<init>":()V
	areturn
  Labels:
  Signature: length = 0x2
   00 1C 

}

