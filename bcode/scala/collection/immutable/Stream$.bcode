Compiled from "Stream.scala"
public final class scala.collection.immutable.Stream$ extends scala.collection.generic.SeqFactory implements scala.ScalaObject
  SourceFile: "Stream.scala"
  Scala: length = 0x
   
  Signature: length = 0x2
   00 FFFFFFFA 
  InnerClass: 
   public final Cons=class scala/collection/immutable/Stream$Cons of class scala/collection/immutable/Stream
   public final $anonfun$2=class scala/collection/immutable/Stream$$anonfun$2 of class scala/collection/immutable/Stream
   public final $anonfun$1=class scala/collection/immutable/Stream$$anonfun$1 of class scala/collection/immutable/Stream
   public ConsWrapper=class scala/collection/immutable/Stream$ConsWrapper of class scala/collection/immutable/Stream
   public StreamBuilder=class scala/collection/immutable/Stream$StreamBuilder of class scala/collection/immutable/Stream
   public final $anonfun$zip$1=class scala/collection/immutable/Stream$$anonfun$zip$1 of class scala/collection/immutable/Stream
   public final $anonfun$map$1=class scala/collection/immutable/Stream$$anonfun$map$1 of class scala/collection/immutable/Stream
   public final $anonfun$init$1=class scala/collection/immutable/Stream$$anonfun$init$1 of class scala/collection/immutable/Stream
   public final $anonfun$take$1=class scala/collection/immutable/Stream$$anonfun$take$1 of class scala/collection/immutable/Stream
   public final $anonfun$from$1=class scala/collection/immutable/Stream$$anonfun$from$1 of class scala/collection/immutable/Stream
   public final $anonfun$fill$1=class scala/collection/immutable/Stream$$anonfun$fill$1 of class scala/collection/immutable/Stream
   public final $anonfun$make$1=class scala/collection/immutable/Stream$$anonfun$make$1 of class scala/collection/immutable/Stream
   public final $anonfun$range$1=class scala/collection/immutable/Stream$$anonfun$range$1 of class scala/collection/immutable/Stream
   public abstract $less$colon$less=class scala/Predef$$less$colon$less of class scala/Predef
   public final $anonfun$const$1=class scala/collection/immutable/Stream$$anonfun$const$1 of class scala/collection/immutable/Stream
   public final $anonfun$loop$4$2=class scala/collection/immutable/Stream$$anonfun$loop$4$2 of class scala/collection/immutable/Stream
   public final $anonfun$loop$4$1=class scala/collection/immutable/Stream$$anonfun$loop$4$1 of class scala/collection/immutable/Stream
   public final $anonfun$filter$1=class scala/collection/immutable/Stream$$anonfun$filter$1 of class scala/collection/immutable/Stream
   public final $anonfun$append$1=class scala/collection/immutable/Stream$$anonfun$append$1 of class scala/collection/immutable/Stream
   public final $anonfun$loop$5$1=class scala/collection/immutable/Stream$$anonfun$loop$5$1 of class scala/collection/immutable/Stream
   public final $anonfun$flatMap$1=class scala/collection/immutable/Stream$$anonfun$flatMap$1 of class scala/collection/immutable/Stream
   public StreamCanBuildFrom=class scala/collection/immutable/Stream$StreamCanBuildFrom of class scala/collection/immutable/Stream
   public final $anonfun$iterate$1=class scala/collection/immutable/Stream$$anonfun$iterate$1 of class scala/collection/immutable/Stream
   public final $anonfun$takeWhile$1=class scala/collection/immutable/Stream$$anonfun$takeWhile$1 of class scala/collection/immutable/Stream
   public final $anonfun$partition$2=class scala/collection/immutable/Stream$$anonfun$partition$2 of class scala/collection/immutable/Stream
   public final $anonfun$partition$1=class scala/collection/immutable/Stream$$anonfun$partition$1 of class scala/collection/immutable/Stream
   public final $anonfun$flatten1$1$1=class scala/collection/immutable/Stream$$anonfun$flatten1$1$1 of class scala/collection/immutable/Stream
   public final $anonfun$$plus$plus$1=class scala/collection/immutable/Stream$$anonfun$$plus$plus$1 of class scala/collection/immutable/Stream
   public final $anonfun$continually$1=class scala/collection/immutable/Stream$$anonfun$continually$1 of class scala/collection/immutable/Stream
   public final $anonfun$removeDuplicates$1=class scala/collection/immutable/Stream$$anonfun$removeDuplicates$1 of class scala/collection/immutable/Stream
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	Stream.scala;
Asciz	Scala;
Asciz	MODULE$;
Asciz	Lscala/collection/immutable/Stream$;;
Asciz	<clinit>;
Asciz	()V;
Asciz	Code;
Asciz	scala/collection/immutable/Stream$;
class	scala/collection/immutable/Stream$
Asciz	<init>;
NameAndType	"<init>":()V
Method	scala/collection/immutable/Stream$."<init>":()V
Asciz	bitmap$0;
Asciz	I;
Asciz	lazy_$colon$colon;
Asciz	Lscala/collection/immutable/Stream$$hash$colon$colon$;;
Asciz	LineNumberTable;
Asciz	scala/collection/generic/SeqFactory;
class	scala/collection/generic/SeqFactory
Method	scala/collection/generic/SeqFactory."<init>":()V
NameAndType	MODULE$:Lscala/collection/immutable/Stream$;
Field	scala/collection/immutable/Stream$.MODULE$:Lscala/collection/immutable/Stream$;
Asciz	loop$5;
Asciz	(IILscala/Function1;)Lscala/collection/immutable/Stream;;
Asciz	scala/collection/immutable/Stream$Empty$;
class	scala/collection/immutable/Stream$Empty$
Asciz	Lscala/collection/immutable/Stream$Empty$;;
NameAndType	MODULE$:Lscala/collection/immutable/Stream$Empty$;
Field	scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
Asciz	scala/collection/immutable/Stream$Cons;
class	scala/collection/immutable/Stream$Cons
Asciz	scala/runtime/BoxesRunTime;
class	scala/runtime/BoxesRunTime
Asciz	boxToInteger;
Asciz	(I)Ljava/lang/Integer;;
NameAndType	boxToInteger:(I)Ljava/lang/Integer;
Method	scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
Asciz	scala/Function1;
class	scala/Function1
Asciz	apply;
Asciz	(Ljava/lang/Object;)Ljava/lang/Object;;
NameAndType	apply:(Ljava/lang/Object;)Ljava/lang/Object;
InterfaceMethod	scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
Asciz	scala/collection/immutable/Stream$$anonfun$loop$5$1;
class	scala/collection/immutable/Stream$$anonfun$loop$5$1
Asciz	(Lscala/Function1;I)V;
NameAndType	"<init>":(Lscala/Function1;I)V
Method	scala/collection/immutable/Stream$$anonfun$loop$5$1."<init>":(Lscala/Function1;I)V
Asciz	(Ljava/lang/Object;Lscala/Function0;)V;
NameAndType	"<init>":(Ljava/lang/Object;Lscala/Function0;)V
Method	scala/collection/immutable/Stream$Cons."<init>":(Ljava/lang/Object;Lscala/Function0;)V
Asciz	this;
Asciz	i$1;
Asciz	LocalVariableTable;
Asciz	empty;
Asciz	()Lscala/collection/Traversable;;
Asciz	()Lscala/collection/immutable/Stream;;
NameAndType	empty:()Lscala/collection/immutable/Stream;
Method	scala/collection/immutable/Stream$.empty:()Lscala/collection/immutable/Stream;
Asciz	(Lscala/collection/Seq;)Lscala/collection/Traversable;;
Asciz	(Lscala/collection/Seq;)Lscala/collection/immutable/Stream;;
NameAndType	apply:(Lscala/collection/Seq;)Lscala/collection/immutable/Stream;
Method	scala/collection/immutable/Stream$.apply:(Lscala/collection/Seq;)Lscala/collection/immutable/Stream;
Asciz	args;
Asciz	Lscala/collection/Seq;;
Asciz	iterate;
Asciz	(Ljava/lang/Object;ILscala/Function1;)Lscala/collection/Traversable;;
Asciz	(Ljava/lang/Object;ILscala/Function1;)Lscala/collection/immutable/Stream;;
NameAndType	iterate:(Ljava/lang/Object;ILscala/Function1;)Lscala/collection/immutable/Stream;
Method	scala/collection/immutable/Stream$.iterate:(Ljava/lang/Object;ILscala/Function1;)Lscala/collection/immutable/Stream;
Asciz	start;
Asciz	Ljava/lang/Object;;
Asciz	len;
Asciz	f;
Asciz	Lscala/Function1;;
Asciz	fill;
Asciz	(ILscala/Function0;)Lscala/collection/Traversable;;
Asciz	(ILscala/Function0;)Lscala/collection/immutable/Stream;;
NameAndType	fill:(ILscala/Function0;)Lscala/collection/immutable/Stream;
Method	scala/collection/immutable/Stream$.fill:(ILscala/Function0;)Lscala/collection/immutable/Stream;
Asciz	n;
Asciz	elem;
Asciz	Lscala/Function0;;
Asciz	tabulate;
Asciz	(ILscala/Function1;)Lscala/collection/Traversable;;
Asciz	(ILscala/Function1;)Lscala/collection/immutable/Stream;;
NameAndType	tabulate:(ILscala/Function1;)Lscala/collection/immutable/Stream;
Method	scala/collection/immutable/Stream$.tabulate:(ILscala/Function1;)Lscala/collection/immutable/Stream;
Asciz	range;
Asciz	(III)Lscala/collection/Traversable;;
Asciz	(III)Lscala/collection/immutable/Stream;;
NameAndType	range:(III)Lscala/collection/immutable/Stream;
Method	scala/collection/immutable/Stream$.range:(III)Lscala/collection/immutable/Stream;
Asciz	end;
Asciz	step;
Asciz	make;
Asciz	(ILjava/lang/Object;)Lscala/collection/immutable/Stream;;
Asciz	scala/collection/immutable/Stream$$anonfun$make$1;
class	scala/collection/immutable/Stream$$anonfun$make$1
Asciz	(Ljava/lang/Object;)V;
NameAndType	"<init>":(Ljava/lang/Object;)V
Method	scala/collection/immutable/Stream$$anonfun$make$1."<init>":(Ljava/lang/Object;)V
Asciz	elem$5;
Asciz	<A:Ljava/lang/Object;>(ITA;)Lscala/collection/immutable/Stream<TA;>;;
Asciz	Signature;
Asciz	const;
Asciz	(Ljava/lang/Object;)Lscala/collection/immutable/Stream;;
Asciz	scala/collection/immutable/Stream$$anonfun$const$1;
class	scala/collection/immutable/Stream$$anonfun$const$1
Method	scala/collection/immutable/Stream$$anonfun$const$1."<init>":(Ljava/lang/Object;)V
Asciz	elem$4;
Asciz	<A:Ljava/lang/Object;>(TA;)Lscala/collection/immutable/Stream<TA;>;;
Asciz	scala/collection/immutable/Stream$$anonfun$iterate$1;
class	scala/collection/immutable/Stream$$anonfun$iterate$1
Asciz	(Ljava/lang/Object;Lscala/Function1;)V;
NameAndType	"<init>":(Ljava/lang/Object;Lscala/Function1;)V
Method	scala/collection/immutable/Stream$$anonfun$iterate$1."<init>":(Ljava/lang/Object;Lscala/Function1;)V
Asciz	scala/collection/immutable/Stream;
class	scala/collection/immutable/Stream
Asciz	take;
Asciz	(I)Lscala/collection/immutable/Stream;;
NameAndType	take:(I)Lscala/collection/immutable/Stream;
Method	scala/collection/immutable/Stream.take:(I)Lscala/collection/immutable/Stream;
Asciz	(IILscala/Function1<Ljava/lang/Integer;Ljava/lang/Integer;>;)Lscala/collection/immutable/Stream<Ljava/lang/Integer;>;;
Asciz	concat;
Asciz	(Lscala/collection/Iterator;)Lscala/collection/immutable/Stream;;
Asciz	scala/collection/Iterator;
class	scala/collection/Iterator
Asciz	toStream;
NameAndType	toStream:()Lscala/collection/immutable/Stream;
InterfaceMethod	scala/collection/Iterator.toStream:()Lscala/collection/immutable/Stream;
Asciz	scala/Predef$;
class	scala/Predef$
Asciz	Lscala/Predef$;;
NameAndType	MODULE$:Lscala/Predef$;
Field	scala/Predef$.MODULE$:Lscala/Predef$;
Asciz	conforms;
Asciz	()Lscala/Predef$$less$colon$less;;
NameAndType	conforms:()Lscala/Predef$$less$colon$less;
Method	scala/Predef$.conforms:()Lscala/Predef$$less$colon$less;
Asciz	flatten;
Asciz	(Lscala/Function1;)Lscala/collection/immutable/Stream;;
NameAndType	flatten:(Lscala/Function1;)Lscala/collection/immutable/Stream;
Method	scala/collection/immutable/Stream.flatten:(Lscala/Function1;)Lscala/collection/immutable/Stream;
Asciz	xs;
Asciz	Lscala/collection/Iterator;;
Asciz	<A:Ljava/lang/Object;>(Lscala/collection/Iterator<Lscala/collection/immutable/Stream<TA;>;>;)Lscala/collection/immutable/Stream<TA;>;;
Asciz	(Lscala/collection/Iterable;)Lscala/collection/immutable/Stream;;
Asciz	scala/collection/IterableLike;
class	scala/collection/IterableLike
Asciz	iterator;
Asciz	()Lscala/collection/Iterator;;
NameAndType	iterator:()Lscala/collection/Iterator;
InterfaceMethod	scala/collection/IterableLike.iterator:()Lscala/collection/Iterator;
NameAndType	concat:(Lscala/collection/Iterator;)Lscala/collection/immutable/Stream;
Method	scala/collection/immutable/Stream$.concat:(Lscala/collection/Iterator;)Lscala/collection/immutable/Stream;
Asciz	Lscala/collection/Iterable;;
Asciz	<A:Ljava/lang/Object;>(Lscala/collection/Iterable<Lscala/collection/immutable/Stream<TA;>;>;)Lscala/collection/immutable/Stream<TA;>;;
Asciz	fromIterator;
Asciz	it;
Asciz	<A:Ljava/lang/Object;>(Lscala/collection/Iterator<TA;>;)Lscala/collection/immutable/Stream<TA;>;;
Asciz	scala/collection/immutable/Stream$$anonfun$range$1;
class	scala/collection/immutable/Stream$$anonfun$range$1
Asciz	(III)V;
NameAndType	"<init>":(III)V
Method	scala/collection/immutable/Stream$$anonfun$range$1."<init>":(III)V
Asciz	start$3;
Asciz	end$1;
Asciz	step$2;
Asciz	(III)Lscala/collection/immutable/Stream<Ljava/lang/Integer;>;;
NameAndType	loop$5:(IILscala/Function1;)Lscala/collection/immutable/Stream;
Method	scala/collection/immutable/Stream$.loop$5:(IILscala/Function1;)Lscala/collection/immutable/Stream;
Asciz	n$1;
Asciz	f$2;
Asciz	<A:Ljava/lang/Object;>(ILscala/Function1<Ljava/lang/Integer;TA;>;)Lscala/collection/immutable/Stream<TA;>;;
Asciz	scala/Function0;
class	scala/Function0
Asciz	()Ljava/lang/Object;;
NameAndType	apply:()Ljava/lang/Object;
InterfaceMethod	scala/Function0.apply:()Ljava/lang/Object;
Asciz	scala/collection/immutable/Stream$$anonfun$fill$1;
class	scala/collection/immutable/Stream$$anonfun$fill$1
Asciz	(ILscala/Function0;)V;
NameAndType	"<init>":(ILscala/Function0;)V
Method	scala/collection/immutable/Stream$$anonfun$fill$1."<init>":(ILscala/Function0;)V
Asciz	n$2;
Asciz	elem$1;
Asciz	<A:Ljava/lang/Object;>(ILscala/Function0<TA;>;)Lscala/collection/immutable/Stream<TA;>;;
Asciz	continually;
Asciz	(Lscala/Function0;)Lscala/collection/immutable/Stream;;
Asciz	scala/collection/immutable/Stream$$anonfun$continually$1;
class	scala/collection/immutable/Stream$$anonfun$continually$1
Asciz	(Lscala/Function0;)V;
NameAndType	"<init>":(Lscala/Function0;)V
Method	scala/collection/immutable/Stream$$anonfun$continually$1."<init>":(Lscala/Function0;)V
Asciz	elem$3;
Asciz	<A:Ljava/lang/Object;>(Lscala/Function0<TA;>;)Lscala/collection/immutable/Stream<TA;>;;
Asciz	from;
Asciz	(II)Lscala/collection/immutable/Stream;;
NameAndType	from:(II)Lscala/collection/immutable/Stream;
Method	scala/collection/immutable/Stream$.from:(II)Lscala/collection/immutable/Stream;
Asciz	(I)Lscala/collection/immutable/Stream<Ljava/lang/Integer;>;;
Asciz	scala/collection/immutable/Stream$$anonfun$from$1;
class	scala/collection/immutable/Stream$$anonfun$from$1
Asciz	(II)V;
NameAndType	"<init>":(II)V
Method	scala/collection/immutable/Stream$$anonfun$from$1."<init>":(II)V
Asciz	start$1;
Asciz	step$1;
Asciz	(II)Lscala/collection/immutable/Stream<Ljava/lang/Integer;>;;
Asciz	<A:Ljava/lang/Object;>(TA;ILscala/Function1<TA;TA;>;)Lscala/collection/immutable/Stream<TA;>;;
Asciz	(Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/Stream;;
Asciz	start$2;
Asciz	f$1;
Asciz	<A:Ljava/lang/Object;>(TA;Lscala/Function1<TA;TA;>;)Lscala/collection/immutable/Stream<TA;>;;
Asciz	()Lscala/collection/immutable/Stream$$hash$colon$colon$;;
NameAndType	bitmap$0:I
Field	scala/collection/immutable/Stream$.bitmap$0:I
Asciz	scala/collection/immutable/Stream$$hash$colon$colon$;
class	scala/collection/immutable/Stream$$hash$colon$colon$
NameAndType	MODULE$:Lscala/collection/immutable/Stream$$hash$colon$colon$;
Field	scala/collection/immutable/Stream$$hash$colon$colon$.MODULE$:Lscala/collection/immutable/Stream$$hash$colon$colon$;
NameAndType	lazy_$colon$colon:Lscala/collection/immutable/Stream$$hash$colon$colon$;
Field	scala/collection/immutable/Stream$.lazy_$colon$colon:Lscala/collection/immutable/Stream$$hash$colon$colon$;
Asciz	java/lang/Throwable;
class	java/lang/Throwable
Asciz	consWrapper;
Asciz	(Lscala/Function0;)Lscala/collection/immutable/Stream$ConsWrapper;;
Asciz	scala/collection/immutable/Stream$ConsWrapper;
class	scala/collection/immutable/Stream$ConsWrapper
Method	scala/collection/immutable/Stream$ConsWrapper."<init>":(Lscala/Function0;)V
Asciz	stream;
Asciz	<A:Ljava/lang/Object;>(Lscala/Function0<Lscala/collection/immutable/Stream<TA;>;>;)Lscala/collection/immutable/Stream$ConsWrapper<TA;>;;
InterfaceMethod	scala/collection/IterableLike.toStream:()Lscala/collection/immutable/Stream;
Asciz	<A:Ljava/lang/Object;>(Lscala/collection/Seq<TA;>;)Lscala/collection/immutable/Stream<TA;>;;
Asciz	<A:Ljava/lang/Object;>()Lscala/collection/immutable/Stream<TA;>;;
Asciz	newBuilder;
Asciz	()Lscala/collection/mutable/Builder;;
Asciz	scala/collection/immutable/Stream$StreamBuilder;
class	scala/collection/immutable/Stream$StreamBuilder
Method	scala/collection/immutable/Stream$StreamBuilder."<init>":()V
Asciz	<A:Ljava/lang/Object;>()Lscala/collection/mutable/Builder<TA;Lscala/collection/immutable/Stream<TA;>;>;;
Asciz	canBuildFrom;
Asciz	()Lscala/collection/generic/CanBuildFrom;;
Asciz	scala/collection/immutable/Stream$StreamCanBuildFrom;
class	scala/collection/immutable/Stream$StreamCanBuildFrom
Method	scala/collection/immutable/Stream$StreamCanBuildFrom."<init>":()V
Asciz	<A:Ljava/lang/Object;>()Lscala/collection/generic/CanBuildFrom<Lscala/collection/immutable/Stream<*>;TA;Lscala/collection/immutable/Stream<TA;>;>;;
Asciz	Lscala/collection/generic/SeqFactory<Lscala/collection/immutable/Stream;>;Lscala/ScalaObject;;
Asciz	InnerClasses;
Asciz	Cons;
Asciz	scala/collection/immutable/Stream$$anonfun$2;
class	scala/collection/immutable/Stream$$anonfun$2
Asciz	$anonfun$2;
Asciz	scala/collection/immutable/Stream$$anonfun$1;
class	scala/collection/immutable/Stream$$anonfun$1
Asciz	$anonfun$1;
Asciz	ConsWrapper;
Asciz	StreamBuilder;
Asciz	scala/collection/immutable/Stream$$anonfun$zip$1;
class	scala/collection/immutable/Stream$$anonfun$zip$1
Asciz	$anonfun$zip$1;
Asciz	scala/collection/immutable/Stream$$anonfun$map$1;
class	scala/collection/immutable/Stream$$anonfun$map$1
Asciz	$anonfun$map$1;
Asciz	scala/collection/immutable/Stream$$anonfun$init$1;
class	scala/collection/immutable/Stream$$anonfun$init$1
Asciz	$anonfun$init$1;
Asciz	scala/collection/immutable/Stream$$anonfun$take$1;
class	scala/collection/immutable/Stream$$anonfun$take$1
Asciz	$anonfun$take$1;
Asciz	$anonfun$from$1;
Asciz	$anonfun$fill$1;
Asciz	$anonfun$make$1;
Asciz	$anonfun$range$1;
Asciz	scala/Predef$$less$colon$less;
class	scala/Predef$$less$colon$less
Asciz	scala/Predef;
class	scala/Predef
Asciz	$less$colon$less;
Asciz	$anonfun$const$1;
Asciz	scala/collection/immutable/Stream$$anonfun$loop$4$2;
class	scala/collection/immutable/Stream$$anonfun$loop$4$2
Asciz	$anonfun$loop$4$2;
Asciz	scala/collection/immutable/Stream$$anonfun$loop$4$1;
class	scala/collection/immutable/Stream$$anonfun$loop$4$1
Asciz	$anonfun$loop$4$1;
Asciz	scala/collection/immutable/Stream$$anonfun$filter$1;
class	scala/collection/immutable/Stream$$anonfun$filter$1
Asciz	$anonfun$filter$1;
Asciz	scala/collection/immutable/Stream$$anonfun$append$1;
class	scala/collection/immutable/Stream$$anonfun$append$1
Asciz	$anonfun$append$1;
Asciz	$anonfun$loop$5$1;
Asciz	scala/collection/immutable/Stream$$anonfun$flatMap$1;
class	scala/collection/immutable/Stream$$anonfun$flatMap$1
Asciz	$anonfun$flatMap$1;
Asciz	StreamCanBuildFrom;
Asciz	$anonfun$iterate$1;
Asciz	scala/collection/immutable/Stream$$anonfun$takeWhile$1;
class	scala/collection/immutable/Stream$$anonfun$takeWhile$1
Asciz	$anonfun$takeWhile$1;
Asciz	scala/collection/immutable/Stream$$anonfun$partition$2;
class	scala/collection/immutable/Stream$$anonfun$partition$2
Asciz	$anonfun$partition$2;
Asciz	scala/collection/immutable/Stream$$anonfun$partition$1;
class	scala/collection/immutable/Stream$$anonfun$partition$1
Asciz	$anonfun$partition$1;
Asciz	scala/collection/immutable/Stream$$anonfun$flatten1$1$1;
class	scala/collection/immutable/Stream$$anonfun$flatten1$1$1
Asciz	$anonfun$flatten1$1$1;
Asciz	scala/collection/immutable/Stream$$anonfun$$plus$plus$1;
class	scala/collection/immutable/Stream$$anonfun$$plus$plus$1
Asciz	$anonfun$$plus$plus$1;
Asciz	$anonfun$continually$1;
Asciz	scala/collection/immutable/Stream$$anonfun$removeDuplicates$1;
class	scala/collection/immutable/Stream$$anonfun$removeDuplicates$1
Asciz	$anonfun$removeDuplicates$1;
Asciz	scala/ScalaObject;
class	scala/ScalaObject

{
public static final scala.collection.immutable.Stream$ MODULE$;
  Signature: Lscala/collection/immutable/Stream$;

public volatile int bitmap$0;
  Signature: I

private scala.collection.immutable.Stream$$hash$colon$colon$ lazy_$colon$colon;
  Signature: Lscala/collection/immutable/Stream$$hash$colon$colon$;

public static {};
  Signature: ()V
  Code:
   Stack=1, Locals=0, Args_size=0
	new	class scala/collection/immutable/Stream$
	invokespecial	Method "<init>":()V
	return
  Labels:

private scala.collection.immutable.Stream$();
  Signature: ()V
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokespecial	Method scala/collection/generic/SeqFactory."<init>":()V
	aload_0
	putstatic	Field MODULE$:Lscala/collection/immutable/Stream$;
	return
  Labels:

private final scala.collection.immutable.Stream loop$5(int, int, scala.Function1);
  Signature: (IILscala/Function1;)Lscala/collection/immutable/Stream;
  Code:
   Stack=7, Locals=4, Args_size=4
	iload_1
	iload_2
	if_icmplt	l1 // new
	getstatic	Field scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
	goto	l2 // areturn
l1	new	class scala/collection/immutable/Stream$Cons
	dup
	aload_3
	iload_1
	invokestatic	Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
	invokeinterface	InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
	new	class scala/collection/immutable/Stream$$anonfun$loop$5$1
	dup
	aload_3
	iload_1
	invokespecial	Method scala/collection/immutable/Stream$$anonfun$loop$5$1."<init>":(Lscala/Function1;I)V
	invokespecial	Method scala/collection/immutable/Stream$Cons."<init>":(Ljava/lang/Object;Lscala/Function0;)V
l2	areturn
  Labels:
   	l1 = 11 // new
   	l2 = 37 // areturn
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      38      0    this       Lscala/collection/immutable/Stream$;
   0      38      1    i$1       I


public scala.collection.Traversable empty();
  Signature: ()Lscala/collection/Traversable;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokevirtual	Method empty:()Lscala/collection/immutable/Stream;
	areturn
  Labels:

public scala.collection.Traversable apply(scala.collection.Seq);
  Signature: (Lscala/collection/Seq;)Lscala/collection/Traversable;
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokevirtual	Method apply:(Lscala/collection/Seq;)Lscala/collection/immutable/Stream;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/collection/immutable/Stream$;
   0      6      1    args       Lscala/collection/Seq;


public scala.collection.Traversable iterate(java.lang.Object, int, scala.Function1);
  Signature: (Ljava/lang/Object;ILscala/Function1;)Lscala/collection/Traversable;
  Code:
   Stack=4, Locals=4, Args_size=4
	aload_0
	aload_1
	iload_2
	aload_3
	invokevirtual	Method iterate:(Ljava/lang/Object;ILscala/Function1;)Lscala/collection/immutable/Stream;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      8      0    this       Lscala/collection/immutable/Stream$;
   0      8      1    start       Ljava/lang/Object;
   0      8      2    len       I
   0      8      3    f       Lscala/Function1;


public scala.collection.Traversable fill(int, scala.Function0);
  Signature: (ILscala/Function0;)Lscala/collection/Traversable;
  Code:
   Stack=3, Locals=3, Args_size=3
	aload_0
	iload_1
	aload_2
	invokevirtual	Method fill:(ILscala/Function0;)Lscala/collection/immutable/Stream;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/collection/immutable/Stream$;
   0      7      1    n       I
   0      7      2    elem       Lscala/Function0;


public scala.collection.Traversable tabulate(int, scala.Function1);
  Signature: (ILscala/Function1;)Lscala/collection/Traversable;
  Code:
   Stack=3, Locals=3, Args_size=3
	aload_0
	iload_1
	aload_2
	invokevirtual	Method tabulate:(ILscala/Function1;)Lscala/collection/immutable/Stream;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/collection/immutable/Stream$;
   0      7      1    n       I
   0      7      2    f       Lscala/Function1;


public scala.collection.Traversable range(int, int, int);
  Signature: (III)Lscala/collection/Traversable;
  Code:
   Stack=4, Locals=4, Args_size=4
	aload_0
	iload_1
	iload_2
	iload_3
	invokevirtual	Method range:(III)Lscala/collection/immutable/Stream;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      8      0    this       Lscala/collection/immutable/Stream$;
   0      8      1    start       I
   0      8      2    end       I
   0      8      3    step       I


public scala.collection.immutable.Stream make(int, java.lang.Object);
  Signature: (ILjava/lang/Object;)Lscala/collection/immutable/Stream;
  Code:
   Stack=5, Locals=3, Args_size=3
	aload_0
	iload_1
	new	class scala/collection/immutable/Stream$$anonfun$make$1
	dup
	aload_2
	invokespecial	Method scala/collection/immutable/Stream$$anonfun$make$1."<init>":(Ljava/lang/Object;)V
	invokevirtual	Method fill:(ILscala/Function0;)Lscala/collection/immutable/Stream;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      14      0    this       Lscala/collection/immutable/Stream$;
   0      14      1    n       I
   0      14      2    elem$5       Ljava/lang/Object;

  Signature: length = 0x2
   00 69 

public scala.collection.immutable.Stream const(java.lang.Object);
  Signature: (Ljava/lang/Object;)Lscala/collection/immutable/Stream;
  Code:
   Stack=4, Locals=3, Args_size=2
	new	class scala/collection/immutable/Stream$$anonfun$const$1
	dup
	aload_1
	invokespecial	Method scala/collection/immutable/Stream$$anonfun$const$1."<init>":(Ljava/lang/Object;)V
	astore_2
	new	class scala/collection/immutable/Stream$Cons
	dup
	aload_1
	aload_2
	invokespecial	Method scala/collection/immutable/Stream$Cons."<init>":(Ljava/lang/Object;Lscala/Function0;)V
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      19      0    this       Lscala/collection/immutable/Stream$;
   0      19      1    elem$4       Ljava/lang/Object;

  Signature: length = 0x2
   00 71 

public scala.collection.immutable.Stream range(int, int, scala.Function1);
  Signature: (IILscala/Function1;)Lscala/collection/immutable/Stream;
  Code:
   Stack=7, Locals=6, Args_size=4
	iload_1
	invokestatic	Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
	iload_2
	iload_1
	isub
	istore	5
	astore	4
	new	class scala/collection/immutable/Stream$Cons
	dup
	aload	4
	new	class scala/collection/immutable/Stream$$anonfun$iterate$1
	dup
	aload	4
	aload_3
	invokespecial	Method scala/collection/immutable/Stream$$anonfun$iterate$1."<init>":(Ljava/lang/Object;Lscala/Function1;)V
	invokespecial	Method scala/collection/immutable/Stream$Cons."<init>":(Ljava/lang/Object;Lscala/Function0;)V
	iload	5
	invokevirtual	Method scala/collection/immutable/Stream.take:(I)Lscala/collection/immutable/Stream;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      36      0    this       Lscala/collection/immutable/Stream$;
   0      36      1    start       I
   0      36      2    end       I
   0      36      3    step       Lscala/Function1;

  Signature: length = 0x2
   00 7D 

public scala.collection.immutable.Stream concat(scala.collection.Iterator);
  Signature: (Lscala/collection/Iterator;)Lscala/collection/immutable/Stream;
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_1
	invokeinterface	InterfaceMethod scala/collection/Iterator.toStream:()Lscala/collection/immutable/Stream;
	getstatic	Field scala/Predef$.MODULE$:Lscala/Predef$;
	invokevirtual	Method scala/Predef$.conforms:()Lscala/Predef$$less$colon$less;
	invokevirtual	Method scala/collection/immutable/Stream.flatten:(Lscala/Function1;)Lscala/collection/immutable/Stream;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      16      0    this       Lscala/collection/immutable/Stream$;
   0      16      1    xs       Lscala/collection/Iterator;

  Signature: length = 0x2
   00 FFFFFF94 

public scala.collection.immutable.Stream concat(scala.collection.Iterable);
  Signature: (Lscala/collection/Iterable;)Lscala/collection/immutable/Stream;
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokeinterface	InterfaceMethod scala/collection/IterableLike.iterator:()Lscala/collection/Iterator;
	invokevirtual	Method concat:(Lscala/collection/Iterator;)Lscala/collection/immutable/Stream;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      11      0    this       Lscala/collection/immutable/Stream$;
   0      11      1    xs       Lscala/collection/Iterable;

  Signature: length = 0x2
   00 FFFFFF9F 

public scala.collection.immutable.Stream fromIterator(scala.collection.Iterator);
  Signature: (Lscala/collection/Iterator;)Lscala/collection/immutable/Stream;
  Code:
   Stack=1, Locals=2, Args_size=2
	aload_1
	invokeinterface	InterfaceMethod scala/collection/Iterator.toStream:()Lscala/collection/immutable/Stream;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/collection/immutable/Stream$;
   0      7      1    it       Lscala/collection/Iterator;

  Signature: length = 0x2
   00 FFFFFFA2 

public scala.collection.immutable.Stream range(int, int, int);
  Signature: (III)Lscala/collection/immutable/Stream;
  Code:
   Stack=8, Locals=4, Args_size=4
	iload_3
	iconst_0
	if_icmpge	l1 // iload_2
	iload_1
	iload_2
	if_icmpgt	l2 // iconst_0
	iconst_1
	goto	l3 // ifeq
l2	iconst_0
	goto	l3 // ifeq
l1	iload_2
	iload_1
	if_icmpgt	l4 // iconst_0
	iconst_1
	goto	l3 // ifeq
l4	iconst_0
l3	ifeq	l5 // new
	getstatic	Field scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
	goto	l6 // areturn
l5	new	class scala/collection/immutable/Stream$Cons
	dup
	iload_1
	invokestatic	Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
	new	class scala/collection/immutable/Stream$$anonfun$range$1
	dup
	iload_1
	iload_2
	iload_3
	invokespecial	Method scala/collection/immutable/Stream$$anonfun$range$1."<init>":(III)V
	invokespecial	Method scala/collection/immutable/Stream$Cons."<init>":(Ljava/lang/Object;Lscala/Function0;)V
l6	areturn
  Labels:
   	l2 = 14 // iconst_0
   	l1 = 18 // iload_2
   	l4 = 27 // iconst_0
   	l3 = 28 // ifeq
   	l5 = 37 // new
   	l6 = 58 // areturn
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      59      0    this       Lscala/collection/immutable/Stream$;
   0      59      1    start$3       I
   0      59      2    end$1       I
   0      59      3    step$2       I

  Signature: length = 0x2
   00 FFFFFFAB 

public scala.collection.immutable.Stream tabulate(int, scala.Function1);
  Signature: (ILscala/Function1;)Lscala/collection/immutable/Stream;
  Code:
   Stack=4, Locals=3, Args_size=3
	aload_0
	iconst_0
	iload_1
	aload_2
	invokespecial	Method loop$5:(IILscala/Function1;)Lscala/collection/immutable/Stream;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      8      0    this       Lscala/collection/immutable/Stream$;
   0      8      1    n$1       I
   0      8      2    f$2       Lscala/Function1;

  Signature: length = 0x2
   00 FFFFFFB0 

public scala.collection.immutable.Stream fill(int, scala.Function0);
  Signature: (ILscala/Function0;)Lscala/collection/immutable/Stream;
  Code:
   Stack=7, Locals=3, Args_size=3
	iload_1
	iconst_0
	if_icmpgt	l1 // new
	getstatic	Field scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
	goto	l2 // areturn
l1	new	class scala/collection/immutable/Stream$Cons
	dup
	aload_2
	invokeinterface	InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
	new	class scala/collection/immutable/Stream$$anonfun$fill$1
	dup
	iload_1
	aload_2
	invokespecial	Method scala/collection/immutable/Stream$$anonfun$fill$1."<init>":(ILscala/Function0;)V
	invokespecial	Method scala/collection/immutable/Stream$Cons."<init>":(Ljava/lang/Object;Lscala/Function0;)V
l2	areturn
  Labels:
   	l1 = 11 // new
   	l2 = 33 // areturn
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      34      0    this       Lscala/collection/immutable/Stream$;
   0      34      1    n$2       I
   0      34      2    elem$1       Lscala/Function0;

  Signature: length = 0x2
   00 FFFFFFBD 

public scala.collection.immutable.Stream continually(scala.Function0);
  Signature: (Lscala/Function0;)Lscala/collection/immutable/Stream;
  Code:
   Stack=6, Locals=2, Args_size=2
	new	class scala/collection/immutable/Stream$Cons
	dup
	aload_1
	invokeinterface	InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
	new	class scala/collection/immutable/Stream$$anonfun$continually$1
	dup
	aload_1
	invokespecial	Method scala/collection/immutable/Stream$$anonfun$continually$1."<init>":(Lscala/Function0;)V
	invokespecial	Method scala/collection/immutable/Stream$Cons."<init>":(Ljava/lang/Object;Lscala/Function0;)V
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      22      0    this       Lscala/collection/immutable/Stream$;
   0      22      1    elem$3       Lscala/Function0;

  Signature: length = 0x2
   00 FFFFFFC6 

public scala.collection.immutable.Stream from(int);
  Signature: (I)Lscala/collection/immutable/Stream;
  Code:
   Stack=3, Locals=2, Args_size=2
	aload_0
	iload_1
	iconst_1
	invokevirtual	Method from:(II)Lscala/collection/immutable/Stream;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/collection/immutable/Stream$;
   0      7      1    start       I

  Signature: length = 0x2
   00 FFFFFFCB 

public scala.collection.immutable.Stream from(int, int);
  Signature: (II)Lscala/collection/immutable/Stream;
  Code:
   Stack=7, Locals=3, Args_size=3
	new	class scala/collection/immutable/Stream$Cons
	dup
	iload_1
	invokestatic	Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
	new	class scala/collection/immutable/Stream$$anonfun$from$1
	dup
	iload_1
	iload_2
	invokespecial	Method scala/collection/immutable/Stream$$anonfun$from$1."<init>":(II)V
	invokespecial	Method scala/collection/immutable/Stream$Cons."<init>":(Ljava/lang/Object;Lscala/Function0;)V
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      21      0    this       Lscala/collection/immutable/Stream$;
   0      21      1    start$1       I
   0      21      2    step$1       I

  Signature: length = 0x2
   00 FFFFFFD3 

public scala.collection.immutable.Stream iterate(java.lang.Object, int, scala.Function1);
  Signature: (Ljava/lang/Object;ILscala/Function1;)Lscala/collection/immutable/Stream;
  Code:
   Stack=7, Locals=4, Args_size=4
	new	class scala/collection/immutable/Stream$Cons
	dup
	aload_1
	new	class scala/collection/immutable/Stream$$anonfun$iterate$1
	dup
	aload_1
	aload_3
	invokespecial	Method scala/collection/immutable/Stream$$anonfun$iterate$1."<init>":(Ljava/lang/Object;Lscala/Function1;)V
	invokespecial	Method scala/collection/immutable/Stream$Cons."<init>":(Ljava/lang/Object;Lscala/Function0;)V
	iload_2
	invokevirtual	Method scala/collection/immutable/Stream.take:(I)Lscala/collection/immutable/Stream;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      22      0    this       Lscala/collection/immutable/Stream$;
   0      22      1    start       Ljava/lang/Object;
   0      22      2    len       I
   0      22      3    f       Lscala/Function1;

  Signature: length = 0x2
   00 FFFFFFD4 

public scala.collection.immutable.Stream iterate(java.lang.Object, scala.Function1);
  Signature: (Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/Stream;
  Code:
   Stack=7, Locals=3, Args_size=3
	new	class scala/collection/immutable/Stream$Cons
	dup
	aload_1
	new	class scala/collection/immutable/Stream$$anonfun$iterate$1
	dup
	aload_1
	aload_2
	invokespecial	Method scala/collection/immutable/Stream$$anonfun$iterate$1."<init>":(Ljava/lang/Object;Lscala/Function1;)V
	invokespecial	Method scala/collection/immutable/Stream$Cons."<init>":(Ljava/lang/Object;Lscala/Function0;)V
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      18      0    this       Lscala/collection/immutable/Stream$;
   0      18      1    start$2       Ljava/lang/Object;
   0      18      2    f$1       Lscala/Function1;

  Signature: length = 0x2
   00 FFFFFFD8 

public scala.collection.immutable.Stream$$hash$colon$colon$ lazy_$colon$colon();
  Signature: ()Lscala/collection/immutable/Stream$$hash$colon$colon$;
  Code:
   Stack=3, Locals=1, Args_size=1
	aload_0
	getfield	Field bitmap$0:I
	iconst_1
	iand
	iconst_0
	if_icmpne	l1 // aload_0
	aload_0
	dup
	pop
	monitorenter
	aload_0
	getfield	Field bitmap$0:I
	iconst_1
	iand
	iconst_0
	if_icmpne	l2 // aload_0
	aload_0
	getstatic	Field scala/collection/immutable/Stream$$hash$colon$colon$.MODULE$:Lscala/collection/immutable/Stream$$hash$colon$colon$;
	putfield	Field lazy_$colon$colon:Lscala/collection/immutable/Stream$$hash$colon$colon$;
	aload_0
	aload_0
	getfield	Field bitmap$0:I
	iconst_1
	ior
	putfield	Field bitmap$0:I
l2	aload_0
	monitorexit
l1	aload_0
	getfield	Field lazy_$colon$colon:Lscala/collection/immutable/Stream$$hash$colon$colon$;
	areturn
	aload_0
	monitorexit
	athrow
  Labels:
   	l2 = 41 // aload_0
   	l1 = 43 // aload_0
  Exception table:
   from   to  target type
    14    43    48   Class java/lang/Throwable


public scala.collection.immutable.Stream$ConsWrapper consWrapper(scala.Function0);
  Signature: (Lscala/Function0;)Lscala/collection/immutable/Stream$ConsWrapper;
  Code:
   Stack=3, Locals=2, Args_size=2
	new	class scala/collection/immutable/Stream$ConsWrapper
	dup
	aload_1
	invokespecial	Method scala/collection/immutable/Stream$ConsWrapper."<init>":(Lscala/Function0;)V
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/collection/immutable/Stream$;
   0      9      1    stream       Lscala/Function0;

  Signature: length = 0x2
   00 FFFFFFEA 

public scala.collection.immutable.Stream apply(scala.collection.Seq);
  Signature: (Lscala/collection/Seq;)Lscala/collection/immutable/Stream;
  Code:
   Stack=1, Locals=2, Args_size=2
	aload_1
	invokeinterface	InterfaceMethod scala/collection/IterableLike.toStream:()Lscala/collection/immutable/Stream;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/collection/immutable/Stream$;
   0      7      1    xs       Lscala/collection/Seq;

  Signature: length = 0x2
   00 FFFFFFEC 

public scala.collection.immutable.Stream empty();
  Signature: ()Lscala/collection/immutable/Stream;
  Code:
   Stack=1, Locals=1, Args_size=1
	getstatic	Field scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
	areturn
  Labels:
  Signature: length = 0x2
   00 FFFFFFED 

public scala.collection.mutable.Builder newBuilder();
  Signature: ()Lscala/collection/mutable/Builder;
  Code:
   Stack=2, Locals=1, Args_size=1
	new	class scala/collection/immutable/Stream$StreamBuilder
	dup
	invokespecial	Method scala/collection/immutable/Stream$StreamBuilder."<init>":()V
	areturn
  Labels:
  Signature: length = 0x2
   00 FFFFFFF3 

public scala.collection.generic.CanBuildFrom canBuildFrom();
  Signature: ()Lscala/collection/generic/CanBuildFrom;
  Code:
   Stack=2, Locals=1, Args_size=1
	new	class scala/collection/immutable/Stream$StreamCanBuildFrom
	dup
	invokespecial	Method scala/collection/immutable/Stream$StreamCanBuildFrom."<init>":()V
	areturn
  Labels:
  Signature: length = 0x2
   00 FFFFFFF9 

}

