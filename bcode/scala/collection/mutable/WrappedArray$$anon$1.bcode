Compiled from "WrappedArray.scala"
public final class scala.collection.mutable.WrappedArray$$anon$1 extends java.lang.Object implements scala.collection.generic.CanBuildFrom
  SourceFile: "WrappedArray.scala"
  Signature: length = 0x2
   00 3B 
  Scala: length = 0x
   
  InnerClass: 
   public final $anon$1=class scala/collection/mutable/WrappedArray$$anon$1 of class scala/collection/mutable/WrappedArray
   public final $anonfun$apply$1=class scala/collection/mutable/WrappedArray$$anon$1$$anonfun$apply$1 of class scala/collection/mutable/WrappedArray$$anon$1
   public final $anonfun$apply$2=class scala/collection/mutable/WrappedArray$$anon$1$$anonfun$apply$2 of class scala/collection/mutable/WrappedArray$$anon$1
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	WrappedArray.scala;
Asciz	m$1;
Asciz	Lscala/reflect/ClassManifest;;
Asciz	<init>;
Asciz	(Lscala/reflect/ClassManifest;)V;
Asciz	Code;
Asciz	LineNumberTable;
Asciz	scala/collection/mutable/WrappedArray$$anon$1;
class	scala/collection/mutable/WrappedArray$$anon$1
NameAndType	m$1:Lscala/reflect/ClassManifest;
Field	scala/collection/mutable/WrappedArray$$anon$1.m$1:Lscala/reflect/ClassManifest;
Asciz	java/lang/Object;
class	java/lang/Object
Asciz	()V;
NameAndType	"<init>":()V
Method	java/lang/Object."<init>":()V
Asciz	apply;
Asciz	(Ljava/lang/Object;)Lscala/collection/mutable/Builder;;
Asciz	scala/collection/mutable/WrappedArray;
class	scala/collection/mutable/WrappedArray
Asciz	(Lscala/collection/mutable/WrappedArray;)Lscala/collection/mutable/Builder;;
NameAndType	apply:(Lscala/collection/mutable/WrappedArray;)Lscala/collection/mutable/Builder;
Method	scala/collection/mutable/WrappedArray$$anon$1.apply:(Lscala/collection/mutable/WrappedArray;)Lscala/collection/mutable/Builder;
Asciz	this;
Asciz	Lscala/collection/mutable/WrappedArray$$anon$1;;
Asciz	from;
Asciz	Ljava/lang/Object;;
Asciz	LocalVariableTable;
Asciz	()Lscala/collection/mutable/Builder;;
Asciz	scala/collection/mutable/ArrayBuilder$;
class	scala/collection/mutable/ArrayBuilder$
Asciz	MODULE$;
Asciz	Lscala/collection/mutable/ArrayBuilder$;;
NameAndType	MODULE$:Lscala/collection/mutable/ArrayBuilder$;
Field	scala/collection/mutable/ArrayBuilder$.MODULE$:Lscala/collection/mutable/ArrayBuilder$;
Asciz	make;
Asciz	(Lscala/reflect/ClassManifest;)Lscala/collection/mutable/ArrayBuilder;;
NameAndType	make:(Lscala/reflect/ClassManifest;)Lscala/collection/mutable/ArrayBuilder;
Method	scala/collection/mutable/ArrayBuilder$.make:(Lscala/reflect/ClassManifest;)Lscala/collection/mutable/ArrayBuilder;
Asciz	scala/collection/mutable/WrappedArray$$anon$1$$anonfun$apply$2;
class	scala/collection/mutable/WrappedArray$$anon$1$$anonfun$apply$2
Asciz	(Lscala/collection/mutable/WrappedArray$$anon$1;)V;
NameAndType	"<init>":(Lscala/collection/mutable/WrappedArray$$anon$1;)V
Method	scala/collection/mutable/WrappedArray$$anon$1$$anonfun$apply$2."<init>":(Lscala/collection/mutable/WrappedArray$$anon$1;)V
Asciz	scala/collection/mutable/Builder;
class	scala/collection/mutable/Builder
Asciz	mapResult;
Asciz	(Lscala/Function1;)Lscala/collection/mutable/Builder;;
NameAndType	mapResult:(Lscala/Function1;)Lscala/collection/mutable/Builder;
InterfaceMethod	scala/collection/mutable/Builder.mapResult:(Lscala/Function1;)Lscala/collection/mutable/Builder;
Asciz	()Lscala/collection/mutable/Builder<TT;Lscala/collection/mutable/WrappedArray<TT;>;>;;
Asciz	Signature;
Asciz	scala/collection/mutable/WrappedArray$$anon$1$$anonfun$apply$1;
class	scala/collection/mutable/WrappedArray$$anon$1$$anonfun$apply$1
Method	scala/collection/mutable/WrappedArray$$anon$1$$anonfun$apply$1."<init>":(Lscala/collection/mutable/WrappedArray$$anon$1;)V
Asciz	Lscala/collection/mutable/WrappedArray;;
Asciz	(Lscala/collection/mutable/WrappedArray<*>;)Lscala/collection/mutable/Builder<TT;Lscala/collection/mutable/WrappedArray<TT;>;>;;
Asciz	Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom<Lscala/collection/mutable/WrappedArray<*>;TT;Lscala/collection/mutable/WrappedArray<TT;>;>;;
Asciz	Scala;
Asciz	InnerClasses;
Asciz	$anon$1;
Asciz	$anonfun$apply$1;
Asciz	$anonfun$apply$2;
Asciz	scala/collection/generic/CanBuildFrom;
class	scala/collection/generic/CanBuildFrom

{
public final scala.reflect.ClassManifest m$1;
  Signature: Lscala/reflect/ClassManifest;

public scala.collection.mutable.WrappedArray$$anon$1(scala.reflect.ClassManifest);
  Signature: (Lscala/reflect/ClassManifest;)V
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	putfield	Field m$1:Lscala/reflect/ClassManifest;
	aload_0
	invokespecial	Method java/lang/Object."<init>":()V
	return
  Labels:

public scala.collection.mutable.Builder apply(java.lang.Object);
  Signature: (Ljava/lang/Object;)Lscala/collection/mutable/Builder;
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	checkcast	class scala/collection/mutable/WrappedArray
	invokevirtual	Method apply:(Lscala/collection/mutable/WrappedArray;)Lscala/collection/mutable/Builder;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/collection/mutable/WrappedArray$$anon$1;
   0      9      1    from       Ljava/lang/Object;


public scala.collection.mutable.Builder apply();
  Signature: ()Lscala/collection/mutable/Builder;
  Code:
   Stack=4, Locals=1, Args_size=1
	getstatic	Field scala/collection/mutable/ArrayBuilder$.MODULE$:Lscala/collection/mutable/ArrayBuilder$;
	aload_0
	getfield	Field m$1:Lscala/reflect/ClassManifest;
	invokevirtual	Method scala/collection/mutable/ArrayBuilder$.make:(Lscala/reflect/ClassManifest;)Lscala/collection/mutable/ArrayBuilder;
	new	class scala/collection/mutable/WrappedArray$$anon$1$$anonfun$apply$2
	dup
	aload_0
	invokespecial	Method scala/collection/mutable/WrappedArray$$anon$1$$anonfun$apply$2."<init>":(Lscala/collection/mutable/WrappedArray$$anon$1;)V
	invokeinterface	InterfaceMethod scala/collection/mutable/Builder.mapResult:(Lscala/Function1;)Lscala/collection/mutable/Builder;
	areturn
  Labels:
  Signature: length = 0x2
   00 34 

public scala.collection.mutable.Builder apply(scala.collection.mutable.WrappedArray);
  Signature: (Lscala/collection/mutable/WrappedArray;)Lscala/collection/mutable/Builder;
  Code:
   Stack=4, Locals=2, Args_size=2
	getstatic	Field scala/collection/mutable/ArrayBuilder$.MODULE$:Lscala/collection/mutable/ArrayBuilder$;
	aload_0
	getfield	Field m$1:Lscala/reflect/ClassManifest;
	invokevirtual	Method scala/collection/mutable/ArrayBuilder$.make:(Lscala/reflect/ClassManifest;)Lscala/collection/mutable/ArrayBuilder;
	new	class scala/collection/mutable/WrappedArray$$anon$1$$anonfun$apply$1
	dup
	aload_0
	invokespecial	Method scala/collection/mutable/WrappedArray$$anon$1$$anonfun$apply$1."<init>":(Lscala/collection/mutable/WrappedArray$$anon$1;)V
	invokeinterface	InterfaceMethod scala/collection/mutable/Builder.mapResult:(Lscala/Function1;)Lscala/collection/mutable/Builder;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      24      0    this       Lscala/collection/mutable/WrappedArray$$anon$1;
   0      24      1    from       Lscala/collection/mutable/WrappedArray;

  Signature: length = 0x2
   00 3A 

}

