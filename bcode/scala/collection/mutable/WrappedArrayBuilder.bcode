Compiled from "WrappedArrayBuilder.scala"
public class scala.collection.mutable.WrappedArrayBuilder extends java.lang.Object implements scala.collection.mutable.Builder
  ScalaSig: length = 0x3
   05 00 00 
  Signature: length = 0x2
   00 57 
  SourceFile: "WrappedArrayBuilder.scala"
  minor version: 0
  major version: 49
  Constant pool:
int	16;
class	java/lang/Object
class	scala/Array$
class	scala/collection/generic/Growable$class
class	scala/collection/mutable/Builder
class	scala/collection/mutable/Builder$class
class	scala/collection/mutable/WrappedArray
class	scala/collection/mutable/WrappedArrayBuilder
class	scala/reflect/ClassManifest
Field	scala/Array$.MODULE$:Lscala/Array$;
Field	scala/collection/mutable/WrappedArrayBuilder.capacity:I
Field	scala/collection/mutable/WrappedArrayBuilder.elems:Lscala/collection/mutable/WrappedArray;
Field	scala/collection/mutable/WrappedArrayBuilder.manifest:Lscala/reflect/ClassManifest;
Field	scala/collection/mutable/WrappedArrayBuilder.size:I
Method	java/lang/Object."<init>":()V
Method	scala/Array$.copy:(Ljava/lang/Object;ILjava/lang/Object;II)V
Method	scala/collection/generic/Growable$class.$init$:(Lscala/collection/generic/Growable;)V
Method	scala/collection/generic/Growable$class.$plus$plus$eq:(Lscala/collection/generic/Growable;Lscala/collection/TraversableOnce;)Lscala/collection/generic/Growable;
Method	scala/collection/mutable/Builder$class.$init$:(Lscala/collection/mutable/Builder;)V
Method	scala/collection/mutable/Builder$class.mapResult:(Lscala/collection/mutable/Builder;Lscala/Function1;)Lscala/collection/mutable/Builder;
Method	scala/collection/mutable/WrappedArray.array:()Ljava/lang/Object;
Method	scala/collection/mutable/WrappedArray.update:(ILjava/lang/Object;)V
Method	scala/collection/mutable/WrappedArrayBuilder.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArrayBuilder;
Method	scala/collection/mutable/WrappedArrayBuilder.capacity:()I
Method	scala/collection/mutable/WrappedArrayBuilder.capacity_$eq:(I)V
Method	scala/collection/mutable/WrappedArrayBuilder.elems:()Lscala/collection/mutable/WrappedArray;
Method	scala/collection/mutable/WrappedArrayBuilder.elems_$eq:(Lscala/collection/mutable/WrappedArray;)V
Method	scala/collection/mutable/WrappedArrayBuilder.ensureSize:(I)V
Method	scala/collection/mutable/WrappedArrayBuilder.mkArray:(I)Lscala/collection/mutable/WrappedArray;
Method	scala/collection/mutable/WrappedArrayBuilder.resize:(I)V
Method	scala/collection/mutable/WrappedArrayBuilder.result:()Lscala/collection/mutable/WrappedArray;
Method	scala/collection/mutable/WrappedArrayBuilder.size:()I
Method	scala/collection/mutable/WrappedArrayBuilder.size_$eq:(I)V
InterfaceMethod	scala/reflect/ClassManifest.newWrappedArray:(I)Lscala/collection/mutable/WrappedArray;
NameAndType	$init$:(Lscala/collection/generic/Growable;)V
NameAndType	$init$:(Lscala/collection/mutable/Builder;)V
NameAndType	$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArrayBuilder;
NameAndType	$plus$plus$eq:(Lscala/collection/generic/Growable;Lscala/collection/TraversableOnce;)Lscala/collection/generic/Growable;
NameAndType	"<init>":()V
NameAndType	MODULE$:Lscala/Array$;
NameAndType	array:()Ljava/lang/Object;
NameAndType	capacity:()I
NameAndType	capacity:I
NameAndType	capacity_$eq:(I)V
NameAndType	copy:(Ljava/lang/Object;ILjava/lang/Object;II)V
NameAndType	elems:()Lscala/collection/mutable/WrappedArray;
NameAndType	elems:Lscala/collection/mutable/WrappedArray;
NameAndType	elems_$eq:(Lscala/collection/mutable/WrappedArray;)V
NameAndType	ensureSize:(I)V
NameAndType	manifest:Lscala/reflect/ClassManifest;
NameAndType	mapResult:(Lscala/collection/mutable/Builder;Lscala/Function1;)Lscala/collection/mutable/Builder;
NameAndType	mkArray:(I)Lscala/collection/mutable/WrappedArray;
NameAndType	newWrappedArray:(I)Lscala/collection/mutable/WrappedArray;
NameAndType	resize:(I)V
NameAndType	result:()Lscala/collection/mutable/WrappedArray;
NameAndType	size:()I
NameAndType	size:I
NameAndType	size_$eq:(I)V
NameAndType	update:(ILjava/lang/Object;)V
Asciz	$init$;
Asciz	$plus$eq;
Asciz	$plus$plus$eq;
Asciz	()I;
Asciz	()Ljava/lang/Object;;
Asciz	()Lscala/collection/mutable/WrappedArray;;
Asciz	()Lscala/collection/mutable/WrappedArray<TA;>;;
Asciz	()V;
Asciz	(I)Lscala/collection/mutable/WrappedArray;;
Asciz	(I)Lscala/collection/mutable/WrappedArray<TA;>;;
Asciz	(I)V;
Asciz	(ILjava/lang/Object;)V;
Asciz	(Ljava/lang/Object;)Lscala/collection/generic/Growable;;
Asciz	(Ljava/lang/Object;)Lscala/collection/mutable/Builder;;
Asciz	(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArrayBuilder;;
Asciz	(Ljava/lang/Object;ILjava/lang/Object;II)V;
Asciz	(Lscala/Function1;)Lscala/collection/mutable/Builder;;
Asciz	(Lscala/collection/TraversableOnce;)Lscala/collection/generic/Growable;;
Asciz	(Lscala/collection/generic/Growable;)V;
Asciz	(Lscala/collection/generic/Growable;Lscala/collection/TraversableOnce;)Lscala/collection/generic/Growable;;
Asciz	(Lscala/collection/mutable/Builder;)V;
Asciz	(Lscala/collection/mutable/Builder;Lscala/Function1;)Lscala/collection/mutable/Builder;;
Asciz	(Lscala/collection/mutable/WrappedArray;)V;
Asciz	(Lscala/collection/mutable/WrappedArray<TA;>;)V;
Asciz	(Lscala/reflect/ClassManifest;)V;
Asciz	(Lscala/reflect/ClassManifest<TA;>;)V;
Asciz	(TA;)Lscala/collection/mutable/WrappedArrayBuilder<TA;>;;
Asciz	<A:Ljava/lang/Object;>Ljava/lang/Object;Lscala/collection/mutable/Builder<TA;Lscala/collection/mutable/WrappedArray<TA;>;>;;
Asciz	<init>;
Asciz	Code;
Asciz	I;
Asciz	LineNumberTable;
Asciz	Ljava/lang/Object;;
Asciz	LocalVariableTable;
Asciz	Lscala/Array$;;
Asciz	Lscala/Function1;;
Asciz	Lscala/collection/TraversableOnce;;
Asciz	Lscala/collection/mutable/WrappedArray;;
Asciz	Lscala/collection/mutable/WrappedArray<TA;>;;
Asciz	Lscala/collection/mutable/WrappedArrayBuilder;;
Asciz	Lscala/reflect/ClassManifest;;
Asciz	Lscala/reflect/ClassManifest<TA;>;;
Asciz	MODULE$;
Asciz	ScalaSig;
Asciz	Signature;
Asciz	SourceFile;
Asciz	WrappedArrayBuilder.scala;
Asciz	array;
Asciz	capacity;
Asciz	capacity_$eq;
Asciz	copy;
Asciz	elem;
Asciz	elems;
Asciz	elems_$eq;
Asciz	ensureSize;
Asciz	f;
Asciz	java/lang/Object;
Asciz	manifest;
Asciz	mapResult;
Asciz	mkArray;
Asciz	newWrappedArray;
Asciz	newelems;
Asciz	newsize;
Asciz	resize;
Asciz	result;
Asciz	scala/Array$;
Asciz	scala/collection/generic/Growable$class;
Asciz	scala/collection/mutable/Builder;
Asciz	scala/collection/mutable/Builder$class;
Asciz	scala/collection/mutable/WrappedArray;
Asciz	scala/collection/mutable/WrappedArrayBuilder;
Asciz	scala/reflect/ClassManifest;
Asciz	size;
Asciz	sizeHint;
Asciz	size_$eq;
Asciz	this;
Asciz	update;
Asciz	xs;

{
private final scala.reflect.ClassManifest manifest;
  Signature: Lscala/reflect/ClassManifest;
  Signature: length = 0x2
   00 65 

private scala.collection.mutable.WrappedArray elems;
  Signature: Lscala/collection/mutable/WrappedArray;
  Signature: length = 0x2
   00 62 

private int capacity;
  Signature: I

private int size;
  Signature: I

public scala.collection.mutable.Builder mapResult(scala.Function1);
  Signature: (Lscala/Function1;)Lscala/collection/mutable/Builder;
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokestatic	Method scala/collection/mutable/Builder$class.mapResult:(Lscala/collection/mutable/Builder;Lscala/Function1;)Lscala/collection/mutable/Builder;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/collection/mutable/WrappedArrayBuilder;
   0      6      1    f       Lscala/Function1;


public scala.collection.generic.Growable $plus$plus$eq(scala.collection.TraversableOnce);
  Signature: (Lscala/collection/TraversableOnce;)Lscala/collection/generic/Growable;
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokestatic	Method scala/collection/generic/Growable$class.$plus$plus$eq:(Lscala/collection/generic/Growable;Lscala/collection/TraversableOnce;)Lscala/collection/generic/Growable;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/collection/mutable/WrappedArrayBuilder;
   0      6      1    xs       Lscala/collection/TraversableOnce;


private scala.collection.mutable.WrappedArray elems();
  Signature: ()Lscala/collection/mutable/WrappedArray;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field elems:Lscala/collection/mutable/WrappedArray;
	areturn
  Labels:
  Signature: length = 0x2
   00 42 

private void elems_$eq(scala.collection.mutable.WrappedArray);
  Signature: (Lscala/collection/mutable/WrappedArray;)V
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	putfield	Field elems:Lscala/collection/mutable/WrappedArray;
	return
  Labels:
  Signature: length = 0x2
   00 53 

private int capacity();
  Signature: ()I
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field capacity:I
	ireturn
  Labels:

private void capacity_$eq(int);
  Signature: (I)V
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	iload_1
	putfield	Field capacity:I
	return
  Labels:

private int size();
  Signature: ()I
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field size:I
	ireturn
  Labels:

private void size_$eq(int);
  Signature: (I)V
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	iload_1
	putfield	Field size:I
	return
  Labels:

private scala.collection.mutable.WrappedArray mkArray(int);
  Signature: (I)Lscala/collection/mutable/WrappedArray;
  Code:
   Stack=6, Locals=3, Args_size=2
	aload_0
	getfield	Field manifest:Lscala/reflect/ClassManifest;
	iload_1
	invokeinterface	InterfaceMethod scala/reflect/ClassManifest.newWrappedArray:(I)Lscala/collection/mutable/WrappedArray;
	astore_2
	aload_0
	invokespecial	Method size:()I
	iconst_0
	if_icmple	l1 // aload_2
	getstatic	Field scala/Array$.MODULE$:Lscala/Array$;
	aload_0
	invokespecial	Method elems:()Lscala/collection/mutable/WrappedArray;
	invokevirtual	Method scala/collection/mutable/WrappedArray.array:()Ljava/lang/Object;
	iconst_0
	aload_2
	invokevirtual	Method scala/collection/mutable/WrappedArray.array:()Ljava/lang/Object;
	iconst_0
	aload_0
	invokespecial	Method size:()I
	invokevirtual	Method scala/Array$.copy:(Ljava/lang/Object;ILjava/lang/Object;II)V
l1	aload_2
	areturn
  Labels:
   	l1 = 42 // aload_2
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      44      0    this       Lscala/collection/mutable/WrappedArrayBuilder;
   0      44      1    size       I
   11      32      2    newelems       Lscala/collection/mutable/WrappedArray;

  Signature: length = 0x2
   00 45 

private void resize(int);
  Signature: (I)V
  Code:
   Stack=3, Locals=2, Args_size=2
	aload_0
	aload_0
	iload_1
	invokespecial	Method mkArray:(I)Lscala/collection/mutable/WrappedArray;
	invokespecial	Method elems_$eq:(Lscala/collection/mutable/WrappedArray;)V
	aload_0
	iload_1
	invokespecial	Method capacity_$eq:(I)V
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      15      0    this       Lscala/collection/mutable/WrappedArrayBuilder;
   0      15      1    size       I


public void sizeHint(int);
  Signature: (I)V
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	invokespecial	Method capacity:()I
	iload_1
	if_icmpge	l1 // return
	aload_0
	iload_1
	invokespecial	Method resize:(I)V
l1	return
  Labels:
   	l1 = 13 // return
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      14      0    this       Lscala/collection/mutable/WrappedArrayBuilder;
   0      14      1    size       I


private void ensureSize(int);
  Signature: (I)V
  Code:
   Stack=2, Locals=3, Args_size=2
	aload_0
	invokespecial	Method capacity:()I
	iload_1
	if_icmpge	l1 // return
	aload_0
	invokespecial	Method capacity:()I
	iconst_0
	if_icmpne	l2 // aload_0
	ldc	int 16
	goto	l3 // istore_2
l2	aload_0
	invokespecial	Method capacity:()I
	iconst_2
	imul
l3	istore_2
l5	iload_2
	iload_1
	if_icmpge	l4 // aload_0
	iload_2
	iconst_2
	imul
	istore_2
	goto	l5 // iload_2
l4	aload_0
	iload_2
	invokespecial	Method resize:(I)V
l1	return
  Labels:
   	l2 = 21 // aload_0
   	l3 = 27 // istore_2
   	l5 = 28 // iload_2
   	l4 = 40 // aload_0
   	l1 = 45 // return
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      46      0    this       Lscala/collection/mutable/WrappedArrayBuilder;
   0      46      1    size       I
   28      17      2    newsize       I


public scala.collection.mutable.WrappedArrayBuilder $plus$eq(java.lang.Object);
  Signature: (Ljava/lang/Object;)Lscala/collection/mutable/WrappedArrayBuilder;
  Code:
   Stack=3, Locals=2, Args_size=2
	aload_0
	aload_0
	invokespecial	Method size:()I
	iconst_1
	iadd
	invokespecial	Method ensureSize:(I)V
	aload_0
	invokespecial	Method elems:()Lscala/collection/mutable/WrappedArray;
	aload_0
	invokespecial	Method size:()I
	aload_1
	invokevirtual	Method scala/collection/mutable/WrappedArray.update:(ILjava/lang/Object;)V
	aload_0
	aload_0
	invokespecial	Method size:()I
	iconst_1
	iadd
	invokespecial	Method size_$eq:(I)V
	aload_0
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      34      0    this       Lscala/collection/mutable/WrappedArrayBuilder;
   0      34      1    elem       Ljava/lang/Object;

  Signature: length = 0x2
   00 56 

public scala.collection.mutable.WrappedArray result();
  Signature: ()Lscala/collection/mutable/WrappedArray;
  Code:
   Stack=2, Locals=1, Args_size=1
	aload_0
	invokespecial	Method capacity:()I
	iconst_0
	if_icmpeq	l1 // aload_0
	aload_0
	invokespecial	Method capacity:()I
	aload_0
	invokespecial	Method size:()I
	if_icmpne	l1 // aload_0
	aload_0
	invokespecial	Method elems:()Lscala/collection/mutable/WrappedArray;
	goto	l2 // areturn
l1	aload_0
	aload_0
	invokespecial	Method size:()I
	invokespecial	Method mkArray:(I)Lscala/collection/mutable/WrappedArray;
l2	areturn
  Labels:
   	l1 = 26 // aload_0
   	l2 = 34 // areturn
  Signature: length = 0x2
   00 42 

public java.lang.Object result();
  Signature: ()Ljava/lang/Object;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokevirtual	Method result:()Lscala/collection/mutable/WrappedArray;
	areturn
  Labels:

public scala.collection.generic.Growable $plus$eq(java.lang.Object);
  Signature: (Ljava/lang/Object;)Lscala/collection/generic/Growable;
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokevirtual	Method $plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArrayBuilder;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/collection/mutable/WrappedArrayBuilder;
   0      6      1    elem       Ljava/lang/Object;


public scala.collection.mutable.Builder $plus$eq(java.lang.Object);
  Signature: (Ljava/lang/Object;)Lscala/collection/mutable/Builder;
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokevirtual	Method $plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArrayBuilder;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/collection/mutable/WrappedArrayBuilder;
   0      6      1    elem       Ljava/lang/Object;


public scala.collection.mutable.WrappedArrayBuilder(scala.reflect.ClassManifest);
  Signature: (Lscala/reflect/ClassManifest;)V
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	putfield	Field manifest:Lscala/reflect/ClassManifest;
	aload_0
	invokespecial	Method java/lang/Object."<init>":()V
	aload_0
	invokestatic	Method scala/collection/generic/Growable$class.$init$:(Lscala/collection/generic/Growable;)V
	aload_0
	invokestatic	Method scala/collection/mutable/Builder$class.$init$:(Lscala/collection/mutable/Builder;)V
	aload_0
	iconst_0
	putfield	Field capacity:I
	aload_0
	iconst_0
	putfield	Field size:I
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      28      0    this       Lscala/collection/mutable/WrappedArrayBuilder;
   0      28      1    manifest       Lscala/reflect/ClassManifest;

  Signature: length = 0x2
   00 55 

}

