Compiled from "WrappedArrayBuilder.scala"
public class scala.collection.mutable.WrappedArrayBuilder extends java.lang.Object implements scala.collection.mutable.Builder,scala.ScalaObject
  SourceFile: "WrappedArrayBuilder.scala"
  Signature: length = 0x2
   00 FFFFFF93 
  ScalaSig: length = 0x2F2
   05 00 73 06 04 01 02 00 09 02 13 57 72 61 70 70
   65 64 41 72 72 61 79 42 75 69 6C 64 65 72 0A 02
   03 04 01 07 6D 75 74 61 62 6C 65 0A 02 05 06 01
   0A 63 6F 6C 6C 65 63 74 69 6F 6E 0A 01 07 01 05
   73 63 61 6C 61 03 00 15 02 0A 19 13 04 00 0B 13
   26 10 02 0C 11 0D 01 0D 0A 02 0E 0F 01 04 6C 61
   6E 67 0A 01 10 01 04 6A 61 76 61 09 02 12 0D 02
   06 4F 62 6A 65 63 74 10 04 14 15 17 23 0D 01 02
   09 02 16 02 02 07 42 75 69 6C 64 65 72 10 02 18
   19 0C 00 04 08 1A 00 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFFC2 00 1B 02 01 41
   11 02 1C 20 10 02 1D 1E 0D 01 06 09 02 1F 06 02
   07 4E 6F 74 68 69 6E 67 10 02 1D 21 09 02 22 06
   02 03 41 6E 79 10 03 14 24 17 09 02 25 02 02 0C
   57 72 61 70 70 65 64 41 72 72 61 79 10 02 1D 27
   09 02 28 06 02 0B 53 63 61 6C 61 4F 62 6A 65 63
   74 08 08 2A 00 FFFFFF82 FFFFFF80 FFFFFFA0 FFFFFF80 04 2B 01 08 6D 61 6E
   69 66 65 73 74 10 03 2C 2F 17 0D 01 2D 0A 02 2E
   06 01 07 72 65 66 6C 65 63 74 09 02 30 2D 02 0D
   43 6C 61 73 73 4D 61 6E 69 66 65 73 74 08 05 32
   00 FFFFFF84 00 33 01 06 3C 69 6E 69 74 3E 14 02 34 35
   10 03 14 00 17 08 05 2A 31 FFFFFFC0 00 2B 08 07 37 00
   FFFFFFC0 FFFFFF80 FFFFFF84 04 38 01 05 65 6C 65 6D 73 15 01 23 08
   07 3A 00 FFFFFFC0 FFFFFF80 FFFFFF84 04 3B 01 09 65 6C 65 6D 73 5F
   24 65 71 14 02 3C 3F 10 02 1D 3D 09 02 3E 06 02
   04 55 6E 69 74 08 07 40 39 FFFFFF81 FFFFFF80 FFFFFFC0 00 23 01 03
   78 24 31 08 06 42 00 FFFFFFA0 FFFFFFA0 04 23 01 06 65 6C 65
   6D 73 20 08 07 44 00 FFFFFFC0 FFFFFF80 FFFFFF84 04 45 01 08 63 61
   70 61 63 69 74 79 15 01 46 10 02 1D 47 09 02 48
   06 02 03 49 6E 74 08 07 4A 00 FFFFFFC0 FFFFFF80 FFFFFF84 04 4B 01
   0C 63 61 70 61 63 69 74 79 5F 24 65 71 14 02 3C
   4C 08 07 40 49 FFFFFF81 FFFFFF80 FFFFFFC0 00 46 08 06 4E 00 FFFFFFA0 FFFFFFA0
   04 46 01 09 63 61 70 61 63 69 74 79 20 08 07 50
   00 FFFFFFC0 FFFFFF80 FFFFFF84 04 45 01 04 73 69 7A 65 08 07 52 00
   FFFFFFC0 FFFFFF80 FFFFFF84 04 53 01 08 73 69 7A 65 5F 24 65 71 14
   02 3C 54 08 07 40 51 FFFFFF81 FFFFFF80 FFFFFFC0 00 46 08 06 56 00
   FFFFFFA0 FFFFFFA0 04 46 01 05 73 69 7A 65 20 08 05 58 00 FFFFFF84
   04 59 01 07 6D 6B 41 72 72 61 79 14 02 23 5A 08
   05 50 57 FFFFFFC0 00 46 08 05 5C 00 FFFFFF84 04 5D 01 06 72
   65 73 69 7A 65 14 02 3C 5E 08 05 50 5B FFFFFFC0 00 46
   08 05 60 00 FFFFFF84 20 61 01 08 73 69 7A 65 48 69 6E
   74 14 02 3C 62 08 05 50 5F FFFFFFC0 00 46 08 05 64 00
   FFFFFF84 04 65 01 0A 65 6E 73 75 72 65 53 69 7A 65 14
   02 3C 66 08 05 50 63 FFFFFFC0 00 46 08 05 68 00 FFFFFF84 00
   69 01 08 24 70 6C 75 73 24 65 71 14 02 6A 6B 0D
   01 00 08 05 6C 67 FFFFFFC0 00 17 01 04 65 6C 65 6D 08
   05 6E 00 FFFFFF84 00 6F 01 05 63 6C 65 61 72 14 01 3C
   08 05 71 00 FFFFFF84 00 72 01 06 72 65 73 75 6C 74 14
   01 23 
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	WrappedArrayBuilder.scala;
const #3 = Asciz	size;
const #4 = Asciz	I;
const #5 = Asciz	capacity;
const #6 = Asciz	elems;
const #7 = Asciz	Lscala/collection/mutable/WrappedArray;;
const #8 = Asciz	Lscala/collection/mutable/WrappedArray<TA;>;;
const #9 = Asciz	Signature;
const #10 = Asciz	manifest;
const #11 = Asciz	Lscala/reflect/ClassManifest;;
const #12 = Asciz	Lscala/reflect/ClassManifest<TA;>;;
const #13 = Asciz	<init>;
const #14 = Asciz	(Lscala/reflect/ClassManifest;)V;
const #15 = Asciz	Code;
const #16 = Asciz	LineNumberTable;
const #17 = Asciz	scala/collection/mutable/WrappedArrayBuilder;
const #18 = class	#17;	//  scala/collection/mutable/WrappedArrayBuilder
const #19 = NameAndType	#10:#11;//  manifest:Lscala/reflect/ClassManifest;
const #20 = Field	#18.#19;	//  scala/collection/mutable/WrappedArrayBuilder.manifest:Lscala/reflect/ClassManifest;
const #21 = Asciz	java/lang/Object;
const #22 = class	#21;	//  java/lang/Object
const #23 = Asciz	()V;
const #24 = NameAndType	#13:#23;//  "<init>":()V
const #25 = Method	#22.#24;	//  java/lang/Object."<init>":()V
const #26 = Asciz	scala/collection/generic/Growable$class;
const #27 = class	#26;	//  scala/collection/generic/Growable$class
const #28 = Asciz	$init$;
const #29 = Asciz	(Lscala/collection/generic/Growable;)V;
const #30 = NameAndType	#28:#29;//  $init$:(Lscala/collection/generic/Growable;)V
const #31 = Method	#27.#30;	//  scala/collection/generic/Growable$class.$init$:(Lscala/collection/generic/Growable;)V
const #32 = Asciz	scala/collection/mutable/Builder$class;
const #33 = class	#32;	//  scala/collection/mutable/Builder$class
const #34 = Asciz	(Lscala/collection/mutable/Builder;)V;
const #35 = NameAndType	#28:#34;//  $init$:(Lscala/collection/mutable/Builder;)V
const #36 = Method	#33.#35;	//  scala/collection/mutable/Builder$class.$init$:(Lscala/collection/mutable/Builder;)V
const #37 = NameAndType	#5:#4;//  capacity:I
const #38 = Field	#18.#37;	//  scala/collection/mutable/WrappedArrayBuilder.capacity:I
const #39 = NameAndType	#3:#4;//  size:I
const #40 = Field	#18.#39;	//  scala/collection/mutable/WrappedArrayBuilder.size:I
const #41 = Asciz	this;
const #42 = Asciz	Lscala/collection/mutable/WrappedArrayBuilder;;
const #43 = Asciz	LocalVariableTable;
const #44 = Asciz	(Lscala/reflect/ClassManifest<TA;>;)V;
const #45 = Asciz	$plus$eq;
const #46 = Asciz	(Ljava/lang/Object;)Lscala/collection/mutable/Builder;;
const #47 = Asciz	(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArrayBuilder;;
const #48 = NameAndType	#45:#47;//  $plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArrayBuilder;
const #49 = Method	#18.#48;	//  scala/collection/mutable/WrappedArrayBuilder.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArrayBuilder;
const #50 = Asciz	elem;
const #51 = Asciz	Ljava/lang/Object;;
const #52 = Asciz	(Ljava/lang/Object;)Lscala/collection/generic/Growable;;
const #53 = Asciz	result;
const #54 = Asciz	()Ljava/lang/Object;;
const #55 = Asciz	()Lscala/collection/mutable/WrappedArray;;
const #56 = NameAndType	#53:#55;//  result:()Lscala/collection/mutable/WrappedArray;
const #57 = Method	#18.#56;	//  scala/collection/mutable/WrappedArrayBuilder.result:()Lscala/collection/mutable/WrappedArray;
const #58 = Asciz	()I;
const #59 = NameAndType	#5:#58;//  capacity:()I
const #60 = Method	#18.#59;	//  scala/collection/mutable/WrappedArrayBuilder.capacity:()I
const #61 = NameAndType	#3:#58;//  size:()I
const #62 = Method	#18.#61;	//  scala/collection/mutable/WrappedArrayBuilder.size:()I
const #63 = NameAndType	#6:#55;//  elems:()Lscala/collection/mutable/WrappedArray;
const #64 = Method	#18.#63;	//  scala/collection/mutable/WrappedArrayBuilder.elems:()Lscala/collection/mutable/WrappedArray;
const #65 = Asciz	mkArray;
const #66 = Asciz	(I)Lscala/collection/mutable/WrappedArray;;
const #67 = NameAndType	#65:#66;//  mkArray:(I)Lscala/collection/mutable/WrappedArray;
const #68 = Method	#18.#67;	//  scala/collection/mutable/WrappedArrayBuilder.mkArray:(I)Lscala/collection/mutable/WrappedArray;
const #69 = Asciz	()Lscala/collection/mutable/WrappedArray<TA;>;;
const #70 = Asciz	clear;
const #71 = Asciz	size_$eq;
const #72 = Asciz	(I)V;
const #73 = NameAndType	#71:#72;//  size_$eq:(I)V
const #74 = Method	#18.#73;	//  scala/collection/mutable/WrappedArrayBuilder.size_$eq:(I)V
const #75 = Asciz	ensureSize;
const #76 = NameAndType	#75:#72;//  ensureSize:(I)V
const #77 = Method	#18.#76;	//  scala/collection/mutable/WrappedArrayBuilder.ensureSize:(I)V
const #78 = Asciz	scala/collection/mutable/WrappedArray;
const #79 = class	#78;	//  scala/collection/mutable/WrappedArray
const #80 = Asciz	update;
const #81 = Asciz	(ILjava/lang/Object;)V;
const #82 = NameAndType	#80:#81;//  update:(ILjava/lang/Object;)V
const #83 = Method	#79.#82;	//  scala/collection/mutable/WrappedArray.update:(ILjava/lang/Object;)V
const #84 = Asciz	(TA;)Lscala/collection/mutable/WrappedArrayBuilder<TA;>;;
const #85 = int	16;
const #86 = Asciz	resize;
const #87 = NameAndType	#86:#72;//  resize:(I)V
const #88 = Method	#18.#87;	//  scala/collection/mutable/WrappedArrayBuilder.resize:(I)V
const #89 = Asciz	newsize;
const #90 = Asciz	sizeHint;
const #91 = Asciz	elems_$eq;
const #92 = Asciz	(Lscala/collection/mutable/WrappedArray;)V;
const #93 = NameAndType	#91:#92;//  elems_$eq:(Lscala/collection/mutable/WrappedArray;)V
const #94 = Method	#18.#93;	//  scala/collection/mutable/WrappedArrayBuilder.elems_$eq:(Lscala/collection/mutable/WrappedArray;)V
const #95 = Asciz	capacity_$eq;
const #96 = NameAndType	#95:#72;//  capacity_$eq:(I)V
const #97 = Method	#18.#96;	//  scala/collection/mutable/WrappedArrayBuilder.capacity_$eq:(I)V
const #98 = Asciz	scala/reflect/ClassManifest;
const #99 = class	#98;	//  scala/reflect/ClassManifest
const #100 = Asciz	newWrappedArray;
const #101 = NameAndType	#100:#66;//  newWrappedArray:(I)Lscala/collection/mutable/WrappedArray;
const #102 = InterfaceMethod	#99.#101;	//  scala/reflect/ClassManifest.newWrappedArray:(I)Lscala/collection/mutable/WrappedArray;
const #103 = Asciz	scala/Array$;
const #104 = class	#103;	//  scala/Array$
const #105 = Asciz	MODULE$;
const #106 = Asciz	Lscala/Array$;;
const #107 = NameAndType	#105:#106;//  MODULE$:Lscala/Array$;
const #108 = Field	#104.#107;	//  scala/Array$.MODULE$:Lscala/Array$;
const #109 = Asciz	array;
const #110 = NameAndType	#109:#54;//  array:()Ljava/lang/Object;
const #111 = Method	#79.#110;	//  scala/collection/mutable/WrappedArray.array:()Ljava/lang/Object;
const #112 = Asciz	copy;
const #113 = Asciz	(Ljava/lang/Object;ILjava/lang/Object;II)V;
const #114 = NameAndType	#112:#113;//  copy:(Ljava/lang/Object;ILjava/lang/Object;II)V
const #115 = Method	#104.#114;	//  scala/Array$.copy:(Ljava/lang/Object;ILjava/lang/Object;II)V
const #116 = Asciz	newelems;
const #117 = Asciz	(I)Lscala/collection/mutable/WrappedArray<TA;>;;
const #118 = NameAndType	#6:#7;//  elems:Lscala/collection/mutable/WrappedArray;
const #119 = Field	#18.#118;	//  scala/collection/mutable/WrappedArrayBuilder.elems:Lscala/collection/mutable/WrappedArray;
const #120 = Asciz	(Lscala/collection/mutable/WrappedArray<TA;>;)V;
const #121 = Asciz	$plus$plus$eq;
const #122 = Asciz	(Lscala/collection/Traversable;)Lscala/collection/generic/Growable;;
const #123 = Asciz	(Lscala/collection/generic/Growable;Lscala/collection/Traversable;)Lscala/collection/generic/Growable;;
const #124 = NameAndType	#121:#123;//  $plus$plus$eq:(Lscala/collection/generic/Growable;Lscala/collection/Traversable;)Lscala/collection/generic/Growable;
const #125 = Method	#27.#124;	//  scala/collection/generic/Growable$class.$plus$plus$eq:(Lscala/collection/generic/Growable;Lscala/collection/Traversable;)Lscala/collection/generic/Growable;
const #126 = Asciz	iter;
const #127 = Asciz	Lscala/collection/Traversable;;
const #128 = Asciz	(Lscala/collection/Iterator;)Lscala/collection/generic/Growable;;
const #129 = Asciz	(Lscala/collection/generic/Growable;Lscala/collection/Iterator;)Lscala/collection/generic/Growable;;
const #130 = NameAndType	#121:#129;//  $plus$plus$eq:(Lscala/collection/generic/Growable;Lscala/collection/Iterator;)Lscala/collection/generic/Growable;
const #131 = Method	#27.#130;	//  scala/collection/generic/Growable$class.$plus$plus$eq:(Lscala/collection/generic/Growable;Lscala/collection/Iterator;)Lscala/collection/generic/Growable;
const #132 = Asciz	Lscala/collection/Iterator;;
const #133 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Seq;)Lscala/collection/generic/Growable;;
const #134 = Asciz	(Lscala/collection/generic/Growable;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Seq;)Lscala/collection/generic/Growable;;
const #135 = NameAndType	#45:#134;//  $plus$eq:(Lscala/collection/generic/Growable;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Seq;)Lscala/collection/generic/Growable;
const #136 = Method	#27.#135;	//  scala/collection/generic/Growable$class.$plus$eq:(Lscala/collection/generic/Growable;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Seq;)Lscala/collection/generic/Growable;
const #137 = Asciz	elem1;
const #138 = Asciz	elem2;
const #139 = Asciz	Lscala/collection/Seq;;
const #140 = Asciz	mapResult;
const #141 = Asciz	(Lscala/Function1;)Lscala/collection/mutable/Builder;;
const #142 = Asciz	(Lscala/collection/mutable/Builder;Lscala/Function1;)Lscala/collection/mutable/Builder;;
const #143 = NameAndType	#140:#142;//  mapResult:(Lscala/collection/mutable/Builder;Lscala/Function1;)Lscala/collection/mutable/Builder;
const #144 = Method	#33.#143;	//  scala/collection/mutable/Builder$class.mapResult:(Lscala/collection/mutable/Builder;Lscala/Function1;)Lscala/collection/mutable/Builder;
const #145 = Asciz	f;
const #146 = Asciz	Lscala/Function1;;
const #147 = Asciz	<A:Ljava/lang/Object;>Ljava/lang/Object;Lscala/collection/mutable/Builder<TA;Lscala/collection/mutable/WrappedArray<TA;>;>;Lscala/ScalaObject;;
const #148 = Asciz	ScalaSig;
const #149 = Asciz	scala/collection/mutable/Builder;
const #150 = class	#149;	//  scala/collection/mutable/Builder
const #151 = Asciz	scala/ScalaObject;
const #152 = class	#151;	//  scala/ScalaObject

{
public scala.collection.mutable.WrappedArrayBuilder(scala.reflect.ClassManifest);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	putfield	#20; //Field manifest:Lscala/reflect/ClassManifest;
   5:	aload_0
   6:	invokespecial	#25; //Method java/lang/Object."<init>":()V
   9:	aload_0
   10:	invokestatic	#31; //Method scala/collection/generic/Growable$class.$init$:(Lscala/collection/generic/Growable;)V
   13:	aload_0
   14:	invokestatic	#36; //Method scala/collection/mutable/Builder$class.$init$:(Lscala/collection/mutable/Builder;)V
   17:	aload_0
   18:	iconst_0
   19:	putfield	#38; //Field capacity:I
   22:	aload_0
   23:	iconst_0
   24:	putfield	#40; //Field size:I
   27:	return
  LineNumberTable: 
   line 22: 0
   line 25: 17
   line 26: 22

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      28      0    this       Lscala/collection/mutable/WrappedArrayBuilder;
   0      28      1    manifest       Lscala/reflect/ClassManifest;

  Signature: length = 0x2
   00 2C 

public scala.collection.mutable.Builder $plus$eq(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokevirtual	#49; //Method $plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArrayBuilder;
   5:	areturn
  LineNumberTable: 
   line 22: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/collection/mutable/WrappedArrayBuilder;
   0      6      1    elem       Ljava/lang/Object;


public scala.collection.generic.Growable $plus$eq(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokevirtual	#49; //Method $plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArrayBuilder;
   5:	areturn
  LineNumberTable: 
   line 22: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/collection/mutable/WrappedArrayBuilder;
   0      6      1    elem       Ljava/lang/Object;


public java.lang.Object result();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#57; //Method result:()Lscala/collection/mutable/WrappedArray;
   4:	areturn
  LineNumberTable: 
   line 22: 0


public scala.collection.mutable.WrappedArray result();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	invokespecial	#60; //Method capacity:()I
   4:	iconst_0
   5:	if_icmpeq	26
   8:	aload_0
   9:	invokespecial	#60; //Method capacity:()I
   12:	aload_0
   13:	invokespecial	#62; //Method size:()I
   16:	if_icmpne	26
   19:	aload_0
   20:	invokespecial	#64; //Method elems:()Lscala/collection/mutable/WrappedArray;
   23:	goto	34
   26:	aload_0
   27:	aload_0
   28:	invokespecial	#62; //Method size:()I
   31:	invokespecial	#68; //Method mkArray:(I)Lscala/collection/mutable/WrappedArray;
   34:	areturn
  LineNumberTable: 
   line 63: 0
   line 64: 26
   line 63: 34

  Signature: length = 0x2
   00 45 

public void clear();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	iconst_0
   2:	invokespecial	#74; //Method size_$eq:(I)V
   5:	return
  LineNumberTable: 
   line 59: 0


public scala.collection.mutable.WrappedArrayBuilder $plus$eq(java.lang.Object);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_0
   2:	invokespecial	#62; //Method size:()I
   5:	iconst_1
   6:	iadd
   7:	invokespecial	#77; //Method ensureSize:(I)V
   10:	aload_0
   11:	invokespecial	#64; //Method elems:()Lscala/collection/mutable/WrappedArray;
   14:	aload_0
   15:	invokespecial	#62; //Method size:()I
   18:	aload_1
   19:	invokevirtual	#83; //Method scala/collection/mutable/WrappedArray.update:(ILjava/lang/Object;)V
   22:	aload_0
   23:	aload_0
   24:	invokespecial	#62; //Method size:()I
   27:	iconst_1
   28:	iadd
   29:	invokespecial	#74; //Method size_$eq:(I)V
   32:	aload_0
   33:	areturn
  LineNumberTable: 
   line 52: 0
   line 53: 10
   line 54: 22
   line 55: 32

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      34      0    this       Lscala/collection/mutable/WrappedArrayBuilder;
   0      34      1    elem       Ljava/lang/Object;

  Signature: length = 0x2
   00 54 

public void sizeHint(int);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	invokespecial	#60; //Method capacity:()I
   4:	iload_1
   5:	if_icmpge	13
   8:	aload_0
   9:	iload_1
   10:	invokespecial	#88; //Method resize:(I)V
   13:	return
  LineNumberTable: 
   line 40: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      14      0    this       Lscala/collection/mutable/WrappedArrayBuilder;
   0      14      1    size       I


public scala.collection.generic.Growable $plus$plus$eq(scala.collection.Traversable);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#125; //Method scala/collection/generic/Growable$class.$plus$plus$eq:(Lscala/collection/generic/Growable;Lscala/collection/Traversable;)Lscala/collection/generic/Growable;
   5:	areturn
  LineNumberTable: 
   line 22: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/collection/mutable/WrappedArrayBuilder;
   0      6      1    iter       Lscala/collection/Traversable;


public scala.collection.generic.Growable $plus$plus$eq(scala.collection.Iterator);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#131; //Method scala/collection/generic/Growable$class.$plus$plus$eq:(Lscala/collection/generic/Growable;Lscala/collection/Iterator;)Lscala/collection/generic/Growable;
   5:	areturn
  LineNumberTable: 
   line 22: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/collection/mutable/WrappedArrayBuilder;
   0      6      1    iter       Lscala/collection/Iterator;


public scala.collection.generic.Growable $plus$eq(java.lang.Object, java.lang.Object, scala.collection.Seq);
  Code:
   Stack=4, Locals=4, Args_size=4
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	aload_3
   4:	invokestatic	#136; //Method scala/collection/generic/Growable$class.$plus$eq:(Lscala/collection/generic/Growable;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Seq;)Lscala/collection/generic/Growable;
   7:	areturn
  LineNumberTable: 
   line 22: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      8      0    this       Lscala/collection/mutable/WrappedArrayBuilder;
   0      8      1    elem1       Ljava/lang/Object;
   0      8      2    elem2       Ljava/lang/Object;
   0      8      3    elems       Lscala/collection/Seq;


public scala.collection.mutable.Builder mapResult(scala.Function1);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#144; //Method scala/collection/mutable/Builder$class.mapResult:(Lscala/collection/mutable/Builder;Lscala/Function1;)Lscala/collection/mutable/Builder;
   5:	areturn
  LineNumberTable: 
   line 22: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/collection/mutable/WrappedArrayBuilder;
   0      6      1    f       Lscala/Function1;


}

