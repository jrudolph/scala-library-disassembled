Compiled from "FlatHashTable.scala"
public abstract class scala.collection.mutable.FlatHashTable$class extends java.lang.Object
  SourceFile: "FlatHashTable.scala"
  Scala: length = 0x
   
  InnerClass: 
   public abstract #263= #129 of #262; //ByOne=class scala/collection/immutable/Range$ByOne of class scala/collection/immutable/Range
   public #266= #230 of #265; //ofRef=class scala/collection/mutable/ArrayOps$ofRef of class scala/collection/mutable/ArrayOps
   public final #267= #147 of #8; //$anon$1=class scala/collection/mutable/FlatHashTable$$anon$1 of class scala/collection/mutable/FlatHashTable
   public final #268= #206 of #8; //$anonfun$serializeTo$1=class scala/collection/mutable/FlatHashTable$$anonfun$serializeTo$1 of class scala/collection/mutable/FlatHashTable
   public final #269= #60 of #8; //$anonfun$newThreshold$1=class scala/collection/mutable/FlatHashTable$$anonfun$newThreshold$1 of class scala/collection/mutable/FlatHashTable
   public final #270= #131 of #8; //$anonfun$checkConsistent$1=class scala/collection/mutable/FlatHashTable$$anonfun$checkConsistent$1 of class scala/collection/mutable/FlatHashTable
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	FlatHashTable.scala;
const #3 = Asciz	$init$;
const #4 = Asciz	(Lscala/collection/mutable/FlatHashTable;)V;
const #5 = Asciz	Code;
const #6 = Asciz	LineNumberTable;
const #7 = Asciz	scala/collection/mutable/FlatHashTable;
const #8 = class	#7;	//  scala/collection/mutable/FlatHashTable
const #9 = Asciz	loadFactor;
const #10 = Asciz	()I;
const #11 = NameAndType	#9:#10;//  loadFactor:()I
const #12 = InterfaceMethod	#8.#11;	//  scala/collection/mutable/FlatHashTable.loadFactor:()I
const #13 = Asciz	_loadFactor_$eq;
const #14 = Asciz	(I)V;
const #15 = NameAndType	#13:#14;//  _loadFactor_$eq:(I)V
const #16 = InterfaceMethod	#8.#15;	//  scala/collection/mutable/FlatHashTable._loadFactor_$eq:(I)V
const #17 = Asciz	scala/collection/mutable/FlatHashTable$class;
const #18 = class	#17;	//  scala/collection/mutable/FlatHashTable$class
const #19 = Asciz	initialCapacity;
const #20 = Asciz	(Lscala/collection/mutable/FlatHashTable;)I;
const #21 = NameAndType	#19:#20;//  initialCapacity:(Lscala/collection/mutable/FlatHashTable;)I
const #22 = Method	#18.#21;	//  scala/collection/mutable/FlatHashTable$class.initialCapacity:(Lscala/collection/mutable/FlatHashTable;)I
const #23 = Asciz	java/lang/Object;
const #24 = class	#23;	//  java/lang/Object
const #25 = Asciz	table_$eq;
const #26 = Asciz	([Ljava/lang/Object;)V;
const #27 = NameAndType	#25:#26;//  table_$eq:([Ljava/lang/Object;)V
const #28 = InterfaceMethod	#8.#27;	//  scala/collection/mutable/FlatHashTable.table_$eq:([Ljava/lang/Object;)V
const #29 = Asciz	tableSize_$eq;
const #30 = NameAndType	#29:#14;//  tableSize_$eq:(I)V
const #31 = InterfaceMethod	#8.#30;	//  scala/collection/mutable/FlatHashTable.tableSize_$eq:(I)V
const #32 = Asciz	newThreshold;
const #33 = Asciz	(Lscala/collection/mutable/FlatHashTable;I)I;
const #34 = NameAndType	#32:#33;//  newThreshold:(Lscala/collection/mutable/FlatHashTable;I)I
const #35 = Method	#18.#34;	//  scala/collection/mutable/FlatHashTable$class.newThreshold:(Lscala/collection/mutable/FlatHashTable;I)I
const #36 = Asciz	threshold_$eq;
const #37 = NameAndType	#36:#14;//  threshold_$eq:(I)V
const #38 = InterfaceMethod	#8.#37;	//  scala/collection/mutable/FlatHashTable.threshold_$eq:(I)V
const #39 = Asciz	$this;
const #40 = Asciz	Lscala/collection/mutable/FlatHashTable;;
const #41 = Asciz	LocalVariableTable;
const #42 = Asciz	precedes$1;
const #43 = Asciz	(Lscala/collection/mutable/FlatHashTable;II)Z;
const #44 = Asciz	table;
const #45 = Asciz	()[Ljava/lang/Object;;
const #46 = NameAndType	#44:#45;//  table:()[Ljava/lang/Object;
const #47 = InterfaceMethod	#8.#46;	//  scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
const #48 = Asciz	i;
const #49 = Asciz	I;
const #50 = Asciz	j;
const #51 = Asciz	d;
const #52 = Asciz	clearTable;
const #53 = Asciz	_loadFactor;
const #54 = NameAndType	#53:#10;//  _loadFactor:()I
const #55 = InterfaceMethod	#8.#54;	//  scala/collection/mutable/FlatHashTable._loadFactor:()I
const #56 = Asciz	loadFactorDenum;
const #57 = NameAndType	#56:#10;//  loadFactorDenum:()I
const #58 = InterfaceMethod	#8.#57;	//  scala/collection/mutable/FlatHashTable.loadFactorDenum:()I
const #59 = Asciz	scala/collection/mutable/FlatHashTable$$anonfun$newThreshold$1;
const #60 = class	#59;	//  scala/collection/mutable/FlatHashTable$$anonfun$newThreshold$1
const #61 = Asciz	<init>;
const #62 = NameAndType	#61:#4;//  "<init>":(Lscala/collection/mutable/FlatHashTable;)V
const #63 = Method	#60.#62;	//  scala/collection/mutable/FlatHashTable$$anonfun$newThreshold$1."<init>":(Lscala/collection/mutable/FlatHashTable;)V
const #64 = Asciz	java/lang/AssertionError;
const #65 = class	#64;	//  java/lang/AssertionError
const #66 = Asciz	scala/collection/mutable/StringBuilder;
const #67 = class	#66;	//  scala/collection/mutable/StringBuilder
const #68 = Asciz	()V;
const #69 = NameAndType	#61:#68;//  "<init>":()V
const #70 = Method	#67.#69;	//  scala/collection/mutable/StringBuilder."<init>":()V
const #71 = Asciz	assertion failed: ;
const #72 = String	#71;	//  assertion failed: 
const #73 = Asciz	append;
const #74 = Asciz	(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;;
const #75 = NameAndType	#73:#74;//  append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
const #76 = Method	#67.#75;	//  scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
const #77 = Asciz	loadFactor too large; must be < 0.5;
const #78 = String	#77;	//  loadFactor too large; must be < 0.5
const #79 = Asciz	toString;
const #80 = Asciz	()Ljava/lang/String;;
const #81 = NameAndType	#79:#80;//  toString:()Ljava/lang/String;
const #82 = Method	#67.#81;	//  scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
const #83 = Asciz	(Ljava/lang/Object;)V;
const #84 = NameAndType	#61:#83;//  "<init>":(Ljava/lang/Object;)V
const #85 = Method	#65.#84;	//  java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
const #86 = Asciz	size;
const #87 = Asciz	assertion0;
const #88 = Asciz	Z;
const #89 = Asciz	lf;
const #90 = Asciz	index;
const #91 = Asciz	improve;
const #92 = Asciz	(I)I;
const #93 = NameAndType	#91:#92;//  improve:(I)I
const #94 = InterfaceMethod	#8.#93;	//  scala/collection/mutable/FlatHashTable.improve:(I)I
const #95 = Asciz	hcode;
const #96 = int	9;
const #97 = int	14;
const #98 = int	10;
const #99 = Asciz	h;
const #100 = Asciz	elemHashCode;
const #101 = Asciz	(Lscala/collection/mutable/FlatHashTable;Ljava/lang/Object;)I;
const #102 = Asciz	equals;
const #103 = Asciz	(Ljava/lang/Object;)Z;
const #104 = NameAndType	#102:#103;//  equals:(Ljava/lang/Object;)Z
const #105 = Method	#24.#104;	//  java/lang/Object.equals:(Ljava/lang/Object;)Z
const #106 = Asciz	hashCode;
const #107 = NameAndType	#106:#10;//  hashCode:()I
const #108 = Method	#24.#107;	//  java/lang/Object.hashCode:()I
const #109 = Asciz	elem;
const #110 = Asciz	Ljava/lang/Object;;
const #111 = Asciz	checkConsistent;
const #112 = Asciz	scala/Predef$;
const #113 = class	#112;	//  scala/Predef$
const #114 = Asciz	MODULE$;
const #115 = Asciz	Lscala/Predef$;;
const #116 = NameAndType	#114:#115;//  MODULE$:Lscala/Predef$;
const #117 = Field	#113.#116;	//  scala/Predef$.MODULE$:Lscala/Predef$;
const #118 = Asciz	intWrapper;
const #119 = Asciz	(I)Lscala/runtime/RichInt;;
const #120 = NameAndType	#118:#119;//  intWrapper:(I)Lscala/runtime/RichInt;
const #121 = Method	#113.#120;	//  scala/Predef$.intWrapper:(I)Lscala/runtime/RichInt;
const #122 = Asciz	scala/runtime/RichInt;
const #123 = class	#122;	//  scala/runtime/RichInt
const #124 = Asciz	until;
const #125 = Asciz	(I)Lscala/collection/immutable/Range;;
const #126 = NameAndType	#124:#125;//  until:(I)Lscala/collection/immutable/Range;
const #127 = Method	#123.#126;	//  scala/runtime/RichInt.until:(I)Lscala/collection/immutable/Range;
const #128 = Asciz	scala/collection/immutable/Range$ByOne;
const #129 = class	#128;	//  scala/collection/immutable/Range$ByOne
const #130 = Asciz	scala/collection/mutable/FlatHashTable$$anonfun$checkConsistent$1;
const #131 = class	#130;	//  scala/collection/mutable/FlatHashTable$$anonfun$checkConsistent$1
const #132 = Method	#131.#62;	//  scala/collection/mutable/FlatHashTable$$anonfun$checkConsistent$1."<init>":(Lscala/collection/mutable/FlatHashTable;)V
const #133 = Asciz	foreach;
const #134 = Asciz	(Lscala/Function1;)V;
const #135 = NameAndType	#133:#134;//  foreach:(Lscala/Function1;)V
const #136 = InterfaceMethod	#129.#135;	//  scala/collection/immutable/Range$ByOne.foreach:(Lscala/Function1;)V
const #137 = Asciz	growTable;
const #138 = Asciz	addEntry;
const #139 = NameAndType	#138:#103;//  addEntry:(Ljava/lang/Object;)Z
const #140 = InterfaceMethod	#8.#139;	//  scala/collection/mutable/FlatHashTable.addEntry:(Ljava/lang/Object;)Z
const #141 = Asciz	oldtable;
const #142 = Asciz	[Ljava/lang/Object;;
const #143 = Asciz	entry;
const #144 = Asciz	iterator;
const #145 = Asciz	(Lscala/collection/mutable/FlatHashTable;)Ljava/lang/Object;;
const #146 = Asciz	scala/collection/mutable/FlatHashTable$$anon$1;
const #147 = class	#146;	//  scala/collection/mutable/FlatHashTable$$anon$1
const #148 = Method	#147.#62;	//  scala/collection/mutable/FlatHashTable$$anon$1."<init>":(Lscala/collection/mutable/FlatHashTable;)V
const #149 = Asciz	removeEntry;
const #150 = Asciz	(Lscala/collection/mutable/FlatHashTable;Ljava/lang/Object;)Lscala/Option;;
const #151 = Asciz	(Ljava/lang/Object;)I;
const #152 = NameAndType	#100:#151;//  elemHashCode:(Ljava/lang/Object;)I
const #153 = InterfaceMethod	#8.#152;	//  scala/collection/mutable/FlatHashTable.elemHashCode:(Ljava/lang/Object;)I
const #154 = NameAndType	#90:#92;//  index:(I)I
const #155 = InterfaceMethod	#8.#154;	//  scala/collection/mutable/FlatHashTable.index:(I)I
const #156 = Asciz	scala/None$;
const #157 = class	#156;	//  scala/None$
const #158 = Asciz	Lscala/None$;;
const #159 = NameAndType	#114:#158;//  MODULE$:Lscala/None$;
const #160 = Field	#157.#159;	//  scala/None$.MODULE$:Lscala/None$;
const #161 = Asciz	java/lang/Number;
const #162 = class	#161;	//  java/lang/Number
const #163 = Asciz	java/lang/Character;
const #164 = class	#163;	//  java/lang/Character
const #165 = Asciz	scala/runtime/BoxesRunTime;
const #166 = class	#165;	//  scala/runtime/BoxesRunTime
const #167 = Asciz	equals2;
const #168 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)Z;
const #169 = NameAndType	#167:#168;//  equals2:(Ljava/lang/Object;Ljava/lang/Object;)Z
const #170 = Method	#166.#169;	//  scala/runtime/BoxesRunTime.equals2:(Ljava/lang/Object;Ljava/lang/Object;)Z
const #171 = Asciz	tableSize;
const #172 = NameAndType	#171:#10;//  tableSize:()I
const #173 = InterfaceMethod	#8.#172;	//  scala/collection/mutable/FlatHashTable.tableSize:()I
const #174 = Asciz	scala/Some;
const #175 = class	#174;	//  scala/Some
const #176 = Method	#175.#84;	//  scala/Some."<init>":(Ljava/lang/Object;)V
const #177 = NameAndType	#42:#43;//  precedes$1:(Lscala/collection/mutable/FlatHashTable;II)Z
const #178 = Method	#18.#177;	//  scala/collection/mutable/FlatHashTable$class.precedes$1:(Lscala/collection/mutable/FlatHashTable;II)Z
const #179 = Asciz	h2;
const #180 = Asciz	h0;
const #181 = Asciz	h1;
const #182 = Asciz	(Lscala/collection/mutable/FlatHashTable;Ljava/lang/Object;)Z;
const #183 = Asciz	threshold;
const #184 = NameAndType	#183:#10;//  threshold:()I
const #185 = InterfaceMethod	#8.#184;	//  scala/collection/mutable/FlatHashTable.threshold:()I
const #186 = NameAndType	#137:#4;//  growTable:(Lscala/collection/mutable/FlatHashTable;)V
const #187 = Method	#18.#186;	//  scala/collection/mutable/FlatHashTable$class.growTable:(Lscala/collection/mutable/FlatHashTable;)V
const #188 = Asciz	containsEntry;
const #189 = Asciz	findEntry;
const #190 = Asciz	serializeTo;
const #191 = Asciz	(Lscala/collection/mutable/FlatHashTable;Ljava/io/ObjectOutputStream;)V;
const #192 = Asciz	java/io/ObjectOutputStream;
const #193 = class	#192;	//  java/io/ObjectOutputStream
const #194 = Asciz	defaultWriteObject;
const #195 = NameAndType	#194:#68;//  defaultWriteObject:()V
const #196 = Method	#193.#195;	//  java/io/ObjectOutputStream.defaultWriteObject:()V
const #197 = Asciz	writeInt;
const #198 = NameAndType	#197:#14;//  writeInt:(I)V
const #199 = Method	#193.#198;	//  java/io/ObjectOutputStream.writeInt:(I)V
const #200 = Asciz	()Ljava/lang/Object;;
const #201 = NameAndType	#144:#200;//  iterator:()Ljava/lang/Object;
const #202 = InterfaceMethod	#8.#201;	//  scala/collection/mutable/FlatHashTable.iterator:()Ljava/lang/Object;
const #203 = Asciz	scala/collection/Iterator;
const #204 = class	#203;	//  scala/collection/Iterator
const #205 = Asciz	scala/collection/mutable/FlatHashTable$$anonfun$serializeTo$1;
const #206 = class	#205;	//  scala/collection/mutable/FlatHashTable$$anonfun$serializeTo$1
const #207 = NameAndType	#61:#191;//  "<init>":(Lscala/collection/mutable/FlatHashTable;Ljava/io/ObjectOutputStream;)V
const #208 = Method	#206.#207;	//  scala/collection/mutable/FlatHashTable$$anonfun$serializeTo$1."<init>":(Lscala/collection/mutable/FlatHashTable;Ljava/io/ObjectOutputStream;)V
const #209 = InterfaceMethod	#204.#135;	//  scala/collection/Iterator.foreach:(Lscala/Function1;)V
const #210 = Asciz	out$1;
const #211 = Asciz	Ljava/io/ObjectOutputStream;;
const #212 = Asciz	init;
const #213 = Asciz	(Lscala/collection/mutable/FlatHashTable;Ljava/io/ObjectInputStream;Lscala/Function1;)V;
const #214 = Asciz	java/io/ObjectInputStream;
const #215 = class	#214;	//  java/io/ObjectInputStream
const #216 = Asciz	defaultReadObject;
const #217 = NameAndType	#216:#68;//  defaultReadObject:()V
const #218 = Method	#215.#217;	//  java/io/ObjectInputStream.defaultReadObject:()V
const #219 = Asciz	readInt;
const #220 = NameAndType	#219:#10;//  readInt:()I
const #221 = Method	#215.#220;	//  java/io/ObjectInputStream.readInt:()I
const #222 = Asciz	assert;
const #223 = Asciz	(Z)V;
const #224 = NameAndType	#222:#223;//  assert:(Z)V
const #225 = Method	#113.#224;	//  scala/Predef$.assert:(Z)V
const #226 = Asciz	capacity;
const #227 = NameAndType	#226:#33;//  capacity:(Lscala/collection/mutable/FlatHashTable;I)I
const #228 = Method	#18.#227;	//  scala/collection/mutable/FlatHashTable$class.capacity:(Lscala/collection/mutable/FlatHashTable;I)I
const #229 = Asciz	scala/collection/mutable/ArrayOps$ofRef;
const #230 = class	#229;	//  scala/collection/mutable/ArrayOps$ofRef
const #231 = NameAndType	#61:#26;//  "<init>":([Ljava/lang/Object;)V
const #232 = Method	#230.#231;	//  scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
const #233 = Asciz	scala/collection/SeqLike;
const #234 = class	#233;	//  scala/collection/SeqLike
const #235 = NameAndType	#86:#10;//  size:()I
const #236 = InterfaceMethod	#234.#235;	//  scala/collection/SeqLike.size:()I
const #237 = Asciz	readObject;
const #238 = NameAndType	#237:#200;//  readObject:()Ljava/lang/Object;
const #239 = Method	#215.#238;	//  java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
const #240 = Asciz	scala/Function1;
const #241 = class	#240;	//  scala/Function1
const #242 = Asciz	apply;
const #243 = Asciz	(Ljava/lang/Object;)Ljava/lang/Object;;
const #244 = NameAndType	#242:#243;//  apply:(Ljava/lang/Object;)Ljava/lang/Object;
const #245 = InterfaceMethod	#241.#244;	//  scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
const #246 = Asciz	in;
const #247 = Asciz	Ljava/io/ObjectInputStream;;
const #248 = Asciz	f;
const #249 = Asciz	Lscala/Function1;;
const #250 = Asciz	initialSize;
const #251 = NameAndType	#250:#10;//  initialSize:()I
const #252 = InterfaceMethod	#8.#251;	//  scala/collection/mutable/FlatHashTable.initialSize:()I
const #253 = int	8;
const #254 = int	16;
const #255 = Asciz	expectedSize;
const #256 = Asciz	c0;
const #257 = int	1000;
const #258 = int	450;
const #259 = Asciz	Scala;
const #260 = Asciz	InnerClasses;
const #261 = Asciz	scala/collection/immutable/Range;
const #262 = class	#261;	//  scala/collection/immutable/Range
const #263 = Asciz	ByOne;
const #264 = Asciz	scala/collection/mutable/ArrayOps;
const #265 = class	#264;	//  scala/collection/mutable/ArrayOps
const #266 = Asciz	ofRef;
const #267 = Asciz	$anon$1;
const #268 = Asciz	$anonfun$serializeTo$1;
const #269 = Asciz	$anonfun$newThreshold$1;
const #270 = Asciz	$anonfun$checkConsistent$1;

{
public static void $init$(scala.collection.mutable.FlatHashTable);
  Code:
   Stack=3, Locals=1, Args_size=1
   0:	aload_0
   1:	aload_0
   2:	invokeinterface	#12,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.loadFactor:()I
   7:	invokeinterface	#16,  2; //InterfaceMethod scala/collection/mutable/FlatHashTable._loadFactor_$eq:(I)V
   12:	aload_0
   13:	aload_0
   14:	invokestatic	#22; //Method initialCapacity:(Lscala/collection/mutable/FlatHashTable;)I
   17:	anewarray	#24; //class java/lang/Object
   20:	invokeinterface	#28,  2; //InterfaceMethod scala/collection/mutable/FlatHashTable.table_$eq:([Ljava/lang/Object;)V
   25:	aload_0
   26:	iconst_0
   27:	invokeinterface	#31,  2; //InterfaceMethod scala/collection/mutable/FlatHashTable.tableSize_$eq:(I)V
   32:	aload_0
   33:	aload_0
   34:	aload_0
   35:	invokestatic	#22; //Method initialCapacity:(Lscala/collection/mutable/FlatHashTable;)I
   38:	invokestatic	#35; //Method newThreshold:(Lscala/collection/mutable/FlatHashTable;I)I
   41:	invokeinterface	#38,  2; //InterfaceMethod scala/collection/mutable/FlatHashTable.threshold_$eq:(I)V
   46:	return
  LineNumberTable: 
   line 30: 0
   line 34: 12
   line 38: 25
   line 42: 32

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      47      0    $this       Lscala/collection/mutable/FlatHashTable;


public static void clearTable(scala.collection.mutable.FlatHashTable);
  Code:
   Stack=3, Locals=2, Args_size=1
   0:	aload_0
   1:	invokeinterface	#47,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
   6:	arraylength
   7:	iconst_1
   8:	isub
   9:	istore_1
   10:	iload_1
   11:	iconst_0
   12:	if_icmplt	31
   15:	aload_0
   16:	invokeinterface	#47,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
   21:	iload_1
   22:	aconst_null
   23:	aastore
   24:	iload_1
   25:	iconst_1
   26:	isub
   27:	istore_1
   28:	goto	10
   31:	aload_0
   32:	iconst_0
   33:	invokeinterface	#31,  2; //InterfaceMethod scala/collection/mutable/FlatHashTable.tableSize_$eq:(I)V
   38:	return
  LineNumberTable: 
   line 208: 0
   line 209: 10
   line 210: 31

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      39      0    $this       Lscala/collection/mutable/FlatHashTable;
   10      28      1    i       I


public static final int index(scala.collection.mutable.FlatHashTable, int);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	invokeinterface	#94,  2; //InterfaceMethod scala/collection/mutable/FlatHashTable.improve:(I)I
   7:	aload_0
   8:	invokeinterface	#47,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
   13:	arraylength
   14:	iconst_1
   15:	isub
   16:	iand
   17:	ireturn
  LineNumberTable: 
   line 199: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      18      0    $this       Lscala/collection/mutable/FlatHashTable;
   0      18      1    hcode       I


public static final int improve(scala.collection.mutable.FlatHashTable, int);
  Code:
   Stack=3, Locals=3, Args_size=2
   0:	iload_1
   1:	iload_1
   2:	ldc	#96; //int 9
   4:	ishl
   5:	iconst_m1
   6:	ixor
   7:	iadd
   8:	istore_2
   9:	iload_2
   10:	iload_2
   11:	ldc	#97; //int 14
   13:	iushr
   14:	ixor
   15:	istore_2
   16:	iload_2
   17:	iload_2
   18:	iconst_4
   19:	ishl
   20:	iadd
   21:	istore_2
   22:	iload_2
   23:	iload_2
   24:	ldc	#98; //int 10
   26:	iushr
   27:	ixor
   28:	ireturn
  LineNumberTable: 
   line 193: 0
   line 194: 9
   line 195: 16
   line 196: 22

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      29      0    $this       Lscala/collection/mutable/FlatHashTable;
   0      29      1    hcode       I
   9      19      2    h       I


public static int elemHashCode(scala.collection.mutable.FlatHashTable, java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_1
   1:	dup
   2:	pop
   3:	ifnull	14
   6:	aload_1
   7:	aconst_null
   8:	invokevirtual	#105; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   11:	ifeq	18
   14:	iconst_0
   15:	goto	22
   18:	aload_1
   19:	invokevirtual	#108; //Method java/lang/Object.hashCode:()I
   22:	ireturn
  LineNumberTable: 
   line 190: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      23      0    $this       Lscala/collection/mutable/FlatHashTable;
   0      23      1    elem       Ljava/lang/Object;


public static java.lang.Object iterator(scala.collection.mutable.FlatHashTable);
  Code:
   Stack=3, Locals=1, Args_size=1
   0:	new	#147; //class scala/collection/mutable/FlatHashTable$$anon$1
   3:	dup
   4:	aload_0
   5:	invokespecial	#148; //Method scala/collection/mutable/FlatHashTable$$anon$1."<init>":(Lscala/collection/mutable/FlatHashTable;)V
   8:	areturn
  LineNumberTable: 
   line 159: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    $this       Lscala/collection/mutable/FlatHashTable;


public static scala.Option removeEntry(scala.collection.mutable.FlatHashTable, java.lang.Object);
  Code:
   Stack=4, Locals=7, Args_size=2
   0:	aload_0
   1:	aload_0
   2:	aload_1
   3:	invokeinterface	#153,  2; //InterfaceMethod scala/collection/mutable/FlatHashTable.elemHashCode:(Ljava/lang/Object;)I
   8:	invokeinterface	#155,  2; //InterfaceMethod scala/collection/mutable/FlatHashTable.index:(I)I
   13:	istore	5
   15:	aload_0
   16:	invokeinterface	#47,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
   21:	iload	5
   23:	aaload
   24:	astore	6
   26:	aload	6
   28:	ifnonnull	35
   31:	getstatic	#160; //Field scala/None$.MODULE$:Lscala/None$;
   34:	areturn
   35:	aload	6
   37:	aload_1
   38:	if_acmpne	45
   41:	iconst_1
   42:	goto	85
   45:	aload	6
   47:	ifnonnull	54
   50:	iconst_0
   51:	goto	85
   54:	aload	6
   56:	instanceof	#162; //class java/lang/Number
   59:	ifne	70
   62:	aload	6
   64:	instanceof	#164; //class java/lang/Character
   67:	ifeq	79
   70:	aload	6
   72:	aload_1
   73:	invokestatic	#170; //Method scala/runtime/BoxesRunTime.equals2:(Ljava/lang/Object;Ljava/lang/Object;)Z
   76:	goto	85
   79:	aload	6
   81:	aload_1
   82:	invokevirtual	#105; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   85:	ifeq	224
   88:	iload	5
   90:	istore_3
   91:	iload	5
   93:	iconst_1
   94:	iadd
   95:	aload_0
   96:	invokeinterface	#47,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
   101:	arraylength
   102:	irem
   103:	istore	4
   105:	aload_0
   106:	invokeinterface	#47,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
   111:	iload	4
   113:	aaload
   114:	ifnonnull	150
   117:	aload_0
   118:	invokeinterface	#47,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
   123:	iload_3
   124:	aconst_null
   125:	aastore
   126:	aload_0
   127:	aload_0
   128:	invokeinterface	#173,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.tableSize:()I
   133:	iconst_1
   134:	isub
   135:	invokeinterface	#31,  2; //InterfaceMethod scala/collection/mutable/FlatHashTable.tableSize_$eq:(I)V
   140:	new	#175; //class scala/Some
   143:	dup
   144:	aload	6
   146:	invokespecial	#176; //Method scala/Some."<init>":(Ljava/lang/Object;)V
   149:	areturn
   150:	aload_0
   151:	aload_0
   152:	aload_0
   153:	invokeinterface	#47,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
   158:	iload	4
   160:	aaload
   161:	invokeinterface	#153,  2; //InterfaceMethod scala/collection/mutable/FlatHashTable.elemHashCode:(Ljava/lang/Object;)I
   166:	invokeinterface	#155,  2; //InterfaceMethod scala/collection/mutable/FlatHashTable.index:(I)I
   171:	istore_2
   172:	iload_2
   173:	iload	4
   175:	if_icmpeq	207
   178:	aload_0
   179:	iload_2
   180:	iload_3
   181:	invokestatic	#178; //Method precedes$1:(Lscala/collection/mutable/FlatHashTable;II)Z
   184:	ifeq	207
   187:	aload_0
   188:	invokeinterface	#47,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
   193:	iload_3
   194:	aload_0
   195:	invokeinterface	#47,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
   200:	iload	4
   202:	aaload
   203:	aastore
   204:	iload	4
   206:	istore_3
   207:	iload	4
   209:	iconst_1
   210:	iadd
   211:	aload_0
   212:	invokeinterface	#47,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
   217:	arraylength
   218:	irem
   219:	istore	4
   221:	goto	105
   224:	iload	5
   226:	iconst_1
   227:	iadd
   228:	aload_0
   229:	invokeinterface	#47,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
   234:	arraylength
   235:	irem
   236:	istore	5
   238:	aload_0
   239:	invokeinterface	#47,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
   244:	iload	5
   246:	aaload
   247:	astore	6
   249:	goto	26
  LineNumberTable: 
   line 132: 0
   line 133: 15
   line 134: 26
   line 156: 31
   line 135: 35
   line 136: 88
   line 137: 91
   line 138: 105
   line 148: 117
   line 149: 126
   line 151: 140
   line 139: 150
   line 141: 172
   line 143: 187
   line 144: 204
   line 146: 207
   line 153: 224
   line 154: 238

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      252      0    $this       Lscala/collection/mutable/FlatHashTable;
   0      252      1    elem       Ljava/lang/Object;
   172      49      2    h2       I
   91      133      3    h0       I
   105      119      4    h1       I
   15      19      5    h       I
   35      217      5    h       I
   26      8      6    entry       Ljava/lang/Object;
   35      217      6    entry       Ljava/lang/Object;


public static boolean addEntry(scala.collection.mutable.FlatHashTable, java.lang.Object);
  Code:
   Stack=3, Locals=4, Args_size=2
   0:	aload_0
   1:	aload_0
   2:	aload_1
   3:	invokeinterface	#153,  2; //InterfaceMethod scala/collection/mutable/FlatHashTable.elemHashCode:(Ljava/lang/Object;)I
   8:	invokeinterface	#155,  2; //InterfaceMethod scala/collection/mutable/FlatHashTable.index:(I)I
   13:	istore_2
   14:	aload_0
   15:	invokeinterface	#47,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
   20:	iload_2
   21:	aaload
   22:	astore_3
   23:	aload_3
   24:	ifnonnull	71
   27:	aload_0
   28:	invokeinterface	#47,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
   33:	iload_2
   34:	aload_1
   35:	aastore
   36:	aload_0
   37:	aload_0
   38:	invokeinterface	#173,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.tableSize:()I
   43:	iconst_1
   44:	iadd
   45:	invokeinterface	#31,  2; //InterfaceMethod scala/collection/mutable/FlatHashTable.tableSize_$eq:(I)V
   50:	aload_0
   51:	invokeinterface	#173,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.tableSize:()I
   56:	aload_0
   57:	invokeinterface	#185,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.threshold:()I
   62:	if_icmplt	69
   65:	aload_0
   66:	invokestatic	#187; //Method growTable:(Lscala/collection/mutable/FlatHashTable;)V
   69:	iconst_1
   70:	ireturn
   71:	aload_3
   72:	aload_1
   73:	if_acmpne	80
   76:	iconst_1
   77:	goto	115
   80:	aload_3
   81:	ifnonnull	88
   84:	iconst_0
   85:	goto	115
   88:	aload_3
   89:	instanceof	#162; //class java/lang/Number
   92:	ifne	102
   95:	aload_3
   96:	instanceof	#164; //class java/lang/Character
   99:	ifeq	110
   102:	aload_3
   103:	aload_1
   104:	invokestatic	#170; //Method scala/runtime/BoxesRunTime.equals2:(Ljava/lang/Object;Ljava/lang/Object;)Z
   107:	goto	115
   110:	aload_3
   111:	aload_1
   112:	invokevirtual	#105; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   115:	ifeq	120
   118:	iconst_0
   119:	ireturn
   120:	iload_2
   121:	iconst_1
   122:	iadd
   123:	aload_0
   124:	invokeinterface	#47,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
   129:	arraylength
   130:	irem
   131:	istore_2
   132:	aload_0
   133:	invokeinterface	#47,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
   138:	iload_2
   139:	aaload
   140:	astore_3
   141:	goto	23
  LineNumberTable: 
   line 112: 0
   line 113: 14
   line 114: 23
   line 119: 27
   line 120: 36
   line 121: 50
   line 122: 69
   line 115: 71
   line 116: 120
   line 117: 132

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      144      0    $this       Lscala/collection/mutable/FlatHashTable;
   0      144      1    elem       Ljava/lang/Object;
   14      56      2    h       I
   71      73      2    h       I
   23      47      3    entry       Ljava/lang/Object;
   71      73      3    entry       Ljava/lang/Object;


public static boolean containsEntry(scala.collection.mutable.FlatHashTable, java.lang.Object);
  Code:
   Stack=3, Locals=4, Args_size=2
   0:	aload_0
   1:	aload_0
   2:	aload_1
   3:	invokeinterface	#153,  2; //InterfaceMethod scala/collection/mutable/FlatHashTable.elemHashCode:(Ljava/lang/Object;)I
   8:	invokeinterface	#155,  2; //InterfaceMethod scala/collection/mutable/FlatHashTable.index:(I)I
   13:	istore_2
   14:	aload_0
   15:	invokeinterface	#47,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
   20:	iload_2
   21:	aaload
   22:	astore_3
   23:	aload_3
   24:	ifnull	74
   27:	aload_3
   28:	aload_1
   29:	if_acmpne	36
   32:	iconst_1
   33:	goto	71
   36:	aload_3
   37:	ifnonnull	44
   40:	iconst_0
   41:	goto	71
   44:	aload_3
   45:	instanceof	#162; //class java/lang/Number
   48:	ifne	58
   51:	aload_3
   52:	instanceof	#164; //class java/lang/Character
   55:	ifeq	66
   58:	aload_3
   59:	aload_1
   60:	invokestatic	#170; //Method scala/runtime/BoxesRunTime.equals2:(Ljava/lang/Object;Ljava/lang/Object;)Z
   63:	goto	71
   66:	aload_3
   67:	aload_1
   68:	invokevirtual	#105; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   71:	ifeq	84
   74:	aload_3
   75:	ifnonnull	82
   78:	iconst_0
   79:	goto	83
   82:	iconst_1
   83:	ireturn
   84:	iload_2
   85:	iconst_1
   86:	iadd
   87:	aload_0
   88:	invokeinterface	#47,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
   93:	arraylength
   94:	irem
   95:	istore_2
   96:	aload_0
   97:	invokeinterface	#47,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
   102:	iload_2
   103:	aaload
   104:	astore_3
   105:	goto	23
  LineNumberTable: 
   line 99: 0
   line 100: 14
   line 101: 23
   line 105: 74
   line 98: 83
   line 102: 84
   line 103: 96

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      108      0    $this       Lscala/collection/mutable/FlatHashTable;
   0      108      1    elem       Ljava/lang/Object;
   14      94      2    h       I
   23      85      3    entry       Ljava/lang/Object;


public static scala.Option findEntry(scala.collection.mutable.FlatHashTable, java.lang.Object);
  Code:
   Stack=3, Locals=4, Args_size=2
   0:	aload_0
   1:	aload_0
   2:	aload_1
   3:	invokeinterface	#153,  2; //InterfaceMethod scala/collection/mutable/FlatHashTable.elemHashCode:(Ljava/lang/Object;)I
   8:	invokeinterface	#155,  2; //InterfaceMethod scala/collection/mutable/FlatHashTable.index:(I)I
   13:	istore_2
   14:	aload_0
   15:	invokeinterface	#47,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
   20:	iload_2
   21:	aaload
   22:	astore_3
   23:	aload_3
   24:	ifnull	74
   27:	aload_3
   28:	aload_1
   29:	if_acmpne	36
   32:	iconst_1
   33:	goto	71
   36:	aload_3
   37:	ifnonnull	44
   40:	iconst_0
   41:	goto	71
   44:	aload_3
   45:	instanceof	#162; //class java/lang/Number
   48:	ifne	58
   51:	aload_3
   52:	instanceof	#164; //class java/lang/Character
   55:	ifeq	66
   58:	aload_3
   59:	aload_1
   60:	invokestatic	#170; //Method scala/runtime/BoxesRunTime.equals2:(Ljava/lang/Object;Ljava/lang/Object;)Z
   63:	goto	71
   66:	aload_3
   67:	aload_1
   68:	invokevirtual	#105; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   71:	ifeq	93
   74:	aload_3
   75:	ifnonnull	84
   78:	getstatic	#160; //Field scala/None$.MODULE$:Lscala/None$;
   81:	goto	92
   84:	new	#175; //class scala/Some
   87:	dup
   88:	aload_3
   89:	invokespecial	#176; //Method scala/Some."<init>":(Ljava/lang/Object;)V
   92:	areturn
   93:	iload_2
   94:	iconst_1
   95:	iadd
   96:	aload_0
   97:	invokeinterface	#47,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
   102:	arraylength
   103:	irem
   104:	istore_2
   105:	aload_0
   106:	invokeinterface	#47,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
   111:	iload_2
   112:	aaload
   113:	astore_3
   114:	goto	23
  LineNumberTable: 
   line 89: 0
   line 90: 14
   line 91: 23
   line 95: 74
   line 88: 92
   line 92: 93
   line 93: 105

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      117      0    $this       Lscala/collection/mutable/FlatHashTable;
   0      117      1    elem       Ljava/lang/Object;
   14      103      2    h       I
   23      94      3    entry       Ljava/lang/Object;


public static void serializeTo(scala.collection.mutable.FlatHashTable, java.io.ObjectOutputStream);
  Code:
   Stack=5, Locals=2, Args_size=2
   0:	aload_1
   1:	invokevirtual	#196; //Method java/io/ObjectOutputStream.defaultWriteObject:()V
   4:	aload_1
   5:	aload_0
   6:	invokeinterface	#55,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable._loadFactor:()I
   11:	invokevirtual	#199; //Method java/io/ObjectOutputStream.writeInt:(I)V
   14:	aload_1
   15:	aload_0
   16:	invokeinterface	#173,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.tableSize:()I
   21:	invokevirtual	#199; //Method java/io/ObjectOutputStream.writeInt:(I)V
   24:	aload_0
   25:	invokeinterface	#202,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.iterator:()Ljava/lang/Object;
   30:	checkcast	#204; //class scala/collection/Iterator
   33:	new	#206; //class scala/collection/mutable/FlatHashTable$$anonfun$serializeTo$1
   36:	dup
   37:	aload_0
   38:	aload_1
   39:	invokespecial	#208; //Method scala/collection/mutable/FlatHashTable$$anonfun$serializeTo$1."<init>":(Lscala/collection/mutable/FlatHashTable;Ljava/io/ObjectOutputStream;)V
   42:	invokeinterface	#209,  2; //InterfaceMethod scala/collection/Iterator.foreach:(Lscala/Function1;)V
   47:	return
  LineNumberTable: 
   line 82: 0
   line 83: 4
   line 84: 14
   line 85: 24

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      48      0    $this       Lscala/collection/mutable/FlatHashTable;
   0      48      1    out$1       Ljava/io/ObjectOutputStream;


public static void init(scala.collection.mutable.FlatHashTable, java.io.ObjectInputStream, scala.Function1);
  Code:
   Stack=5, Locals=7, Args_size=3
   0:	aload_1
   1:	invokevirtual	#218; //Method java/io/ObjectInputStream.defaultReadObject:()V
   4:	aload_0
   5:	aload_1
   6:	invokevirtual	#221; //Method java/io/ObjectInputStream.readInt:()I
   9:	invokeinterface	#16,  2; //InterfaceMethod scala/collection/mutable/FlatHashTable._loadFactor_$eq:(I)V
   14:	getstatic	#117; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   17:	aload_0
   18:	invokeinterface	#55,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable._loadFactor:()I
   23:	iconst_0
   24:	if_icmple	31
   27:	iconst_1
   28:	goto	32
   31:	iconst_0
   32:	invokevirtual	#225; //Method scala/Predef$.assert:(Z)V
   35:	aload_1
   36:	invokevirtual	#221; //Method java/io/ObjectInputStream.readInt:()I
   39:	istore	4
   41:	getstatic	#117; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   44:	iload	4
   46:	iconst_0
   47:	if_icmplt	54
   50:	iconst_1
   51:	goto	55
   54:	iconst_0
   55:	invokevirtual	#225; //Method scala/Predef$.assert:(Z)V
   58:	aload_0
   59:	aload_0
   60:	iload	4
   62:	aload_0
   63:	invokeinterface	#58,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.loadFactorDenum:()I
   68:	imul
   69:	aload_0
   70:	invokeinterface	#55,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable._loadFactor:()I
   75:	idiv
   76:	invokestatic	#228; //Method capacity:(Lscala/collection/mutable/FlatHashTable;I)I
   79:	anewarray	#24; //class java/lang/Object
   82:	invokeinterface	#28,  2; //InterfaceMethod scala/collection/mutable/FlatHashTable.table_$eq:([Ljava/lang/Object;)V
   87:	aload_0
   88:	aload_0
   89:	aload_0
   90:	invokeinterface	#47,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
   95:	astore_3
   96:	new	#230; //class scala/collection/mutable/ArrayOps$ofRef
   99:	dup
   100:	aload_3
   101:	invokespecial	#232; //Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
   104:	invokeinterface	#236,  1; //InterfaceMethod scala/collection/SeqLike.size:()I
   109:	invokestatic	#35; //Method newThreshold:(Lscala/collection/mutable/FlatHashTable;I)I
   112:	invokeinterface	#38,  2; //InterfaceMethod scala/collection/mutable/FlatHashTable.threshold_$eq:(I)V
   117:	iconst_0
   118:	istore	6
   120:	iload	6
   122:	iload	4
   124:	if_icmpge	160
   127:	aload_1
   128:	invokevirtual	#239; //Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
   131:	astore	5
   133:	aload_2
   134:	aload	5
   136:	invokeinterface	#245,  2; //InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
   141:	pop
   142:	aload_0
   143:	aload	5
   145:	invokeinterface	#140,  2; //InterfaceMethod scala/collection/mutable/FlatHashTable.addEntry:(Ljava/lang/Object;)Z
   150:	pop
   151:	iload	6
   153:	iconst_1
   154:	iadd
   155:	istore	6
   157:	goto	120
   160:	return
  LineNumberTable: 
   line 56: 0
   line 58: 4
   line 59: 14
   line 61: 35
   line 62: 41
   line 64: 58
   line 65: 87
   line 67: 117
   line 68: 120
   line 69: 127
   line 70: 133
   line 71: 142
   line 72: 151
   line 55: 160

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      161      0    $this       Lscala/collection/mutable/FlatHashTable;
   0      161      1    in       Ljava/io/ObjectInputStream;
   0      161      2    f       Lscala/Function1;
   41      120      4    size       I
   133      24      5    elem       Ljava/lang/Object;
   120      41      6    index       I


public static int initialSize(scala.collection.mutable.FlatHashTable);
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	ldc	#254; //int 16
   2:	ireturn
  LineNumberTable: 
   line 26: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      3      0    $this       Lscala/collection/mutable/FlatHashTable;


public static final int loadFactorDenum(scala.collection.mutable.FlatHashTable);
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	ldc_w	#257; //int 1000
   3:	ireturn
  LineNumberTable: 
   line 22: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      4      0    $this       Lscala/collection/mutable/FlatHashTable;


public static int loadFactor(scala.collection.mutable.FlatHashTable);
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	ldc_w	#258; //int 450
   3:	ireturn
  LineNumberTable: 
   line 21: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      4      0    $this       Lscala/collection/mutable/FlatHashTable;


}

