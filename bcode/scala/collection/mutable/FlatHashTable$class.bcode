Compiled from "FlatHashTable.scala"
public abstract class scala.collection.mutable.FlatHashTable$class extends java.lang.Object
  SourceFile: "FlatHashTable.scala"
  Scala: length = 0x
   
  InnerClass: 
   public abstract #188= #114 of #187; //ByOne=class scala/collection/immutable/Range$ByOne of class scala/collection/immutable/Range
   public final #189= #134 of #8; //$anon$1=class scala/collection/mutable/FlatHashTable$$anon$1 of class scala/collection/mutable/FlatHashTable
   public final #190= #116 of #8; //$anonfun$checkConsistent$1=class scala/collection/mutable/FlatHashTable$$anonfun$checkConsistent$1 of class scala/collection/mutable/FlatHashTable
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	FlatHashTable.scala;
const #3 = Asciz	$init$;
const #4 = Asciz	(Lscala/collection/mutable/FlatHashTable;)V;
const #5 = Asciz	Code;
const #6 = Asciz	LineNumberTable;
const #7 = Asciz	scala/collection/mutable/FlatHashTable;
const #8 = class	#7;	//  scala/collection/mutable/FlatHashTable
const #9 = Asciz	initialSize;
const #10 = Asciz	()I;
const #11 = NameAndType	#9:#10;//  initialSize:()I
const #12 = InterfaceMethod	#8.#11;	//  scala/collection/mutable/FlatHashTable.initialSize:()I
const #13 = Asciz	java/lang/Object;
const #14 = class	#13;	//  java/lang/Object
const #15 = Asciz	table_$eq;
const #16 = Asciz	([Ljava/lang/Object;)V;
const #17 = NameAndType	#15:#16;//  table_$eq:([Ljava/lang/Object;)V
const #18 = InterfaceMethod	#8.#17;	//  scala/collection/mutable/FlatHashTable.table_$eq:([Ljava/lang/Object;)V
const #19 = Asciz	tableSize_$eq;
const #20 = Asciz	(I)V;
const #21 = NameAndType	#19:#20;//  tableSize_$eq:(I)V
const #22 = InterfaceMethod	#8.#21;	//  scala/collection/mutable/FlatHashTable.tableSize_$eq:(I)V
const #23 = Asciz	scala/collection/mutable/FlatHashTable$class;
const #24 = class	#23;	//  scala/collection/mutable/FlatHashTable$class
const #25 = Asciz	newThreshold;
const #26 = Asciz	(Lscala/collection/mutable/FlatHashTable;I)I;
const #27 = NameAndType	#25:#26;//  newThreshold:(Lscala/collection/mutable/FlatHashTable;I)I
const #28 = Method	#24.#27;	//  scala/collection/mutable/FlatHashTable$class.newThreshold:(Lscala/collection/mutable/FlatHashTable;I)I
const #29 = Asciz	threshold_$eq;
const #30 = NameAndType	#29:#20;//  threshold_$eq:(I)V
const #31 = InterfaceMethod	#8.#30;	//  scala/collection/mutable/FlatHashTable.threshold_$eq:(I)V
const #32 = Asciz	$this;
const #33 = Asciz	Lscala/collection/mutable/FlatHashTable;;
const #34 = Asciz	LocalVariableTable;
const #35 = Asciz	precedes$1;
const #36 = Asciz	(Lscala/collection/mutable/FlatHashTable;II)Z;
const #37 = Asciz	table;
const #38 = Asciz	()[Ljava/lang/Object;;
const #39 = NameAndType	#37:#38;//  table:()[Ljava/lang/Object;
const #40 = InterfaceMethod	#8.#39;	//  scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
const #41 = Asciz	i;
const #42 = Asciz	I;
const #43 = Asciz	j;
const #44 = Asciz	d;
const #45 = Asciz	clearTable;
const #46 = Asciz	loadFactor;
const #47 = NameAndType	#46:#10;//  loadFactor:()I
const #48 = InterfaceMethod	#8.#47;	//  scala/collection/mutable/FlatHashTable.loadFactor:()I
const #49 = Asciz	loadFactorDenum;
const #50 = NameAndType	#49:#10;//  loadFactorDenum:()I
const #51 = InterfaceMethod	#8.#50;	//  scala/collection/mutable/FlatHashTable.loadFactorDenum:()I
const #52 = Asciz	java/lang/AssertionError;
const #53 = class	#52;	//  java/lang/AssertionError
const #54 = Asciz	scala/collection/mutable/StringBuilder;
const #55 = class	#54;	//  scala/collection/mutable/StringBuilder
const #56 = Asciz	<init>;
const #57 = Asciz	()V;
const #58 = NameAndType	#56:#57;//  "<init>":()V
const #59 = Method	#55.#58;	//  scala/collection/mutable/StringBuilder."<init>":()V
const #60 = Asciz	assertion failed: ;
const #61 = String	#60;	//  assertion failed: 
const #62 = Asciz	append;
const #63 = Asciz	(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;;
const #64 = NameAndType	#62:#63;//  append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
const #65 = Method	#55.#64;	//  scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
const #66 = Asciz	loadFactor too large; must be < 0.5;
const #67 = String	#66;	//  loadFactor too large; must be < 0.5
const #68 = Asciz	toString;
const #69 = Asciz	()Ljava/lang/String;;
const #70 = NameAndType	#68:#69;//  toString:()Ljava/lang/String;
const #71 = Method	#55.#70;	//  scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
const #72 = Asciz	(Ljava/lang/Object;)V;
const #73 = NameAndType	#56:#72;//  "<init>":(Ljava/lang/Object;)V
const #74 = Method	#53.#73;	//  java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
const #75 = Asciz	size;
const #76 = Asciz	assertion0;
const #77 = Asciz	Z;
const #78 = Asciz	lf;
const #79 = Asciz	index;
const #80 = Asciz	improve;
const #81 = Asciz	(I)I;
const #82 = NameAndType	#80:#81;//  improve:(I)I
const #83 = InterfaceMethod	#8.#82;	//  scala/collection/mutable/FlatHashTable.improve:(I)I
const #84 = Asciz	hcode;
const #85 = int	9;
const #86 = int	14;
const #87 = int	10;
const #88 = Asciz	h;
const #89 = Asciz	elemHashCode;
const #90 = Asciz	(Lscala/collection/mutable/FlatHashTable;Ljava/lang/Object;)I;
const #91 = Asciz	hashCode;
const #92 = NameAndType	#91:#10;//  hashCode:()I
const #93 = Method	#14.#92;	//  java/lang/Object.hashCode:()I
const #94 = Asciz	elem;
const #95 = Asciz	Ljava/lang/Object;;
const #96 = Asciz	checkConsistent;
const #97 = Asciz	scala/Predef$;
const #98 = class	#97;	//  scala/Predef$
const #99 = Asciz	MODULE$;
const #100 = Asciz	Lscala/Predef$;;
const #101 = NameAndType	#99:#100;//  MODULE$:Lscala/Predef$;
const #102 = Field	#98.#101;	//  scala/Predef$.MODULE$:Lscala/Predef$;
const #103 = Asciz	intWrapper;
const #104 = Asciz	(I)Lscala/runtime/RichInt;;
const #105 = NameAndType	#103:#104;//  intWrapper:(I)Lscala/runtime/RichInt;
const #106 = Method	#98.#105;	//  scala/Predef$.intWrapper:(I)Lscala/runtime/RichInt;
const #107 = Asciz	scala/runtime/RichInt;
const #108 = class	#107;	//  scala/runtime/RichInt
const #109 = Asciz	until;
const #110 = Asciz	(I)Lscala/collection/immutable/Range;;
const #111 = NameAndType	#109:#110;//  until:(I)Lscala/collection/immutable/Range;
const #112 = Method	#108.#111;	//  scala/runtime/RichInt.until:(I)Lscala/collection/immutable/Range;
const #113 = Asciz	scala/collection/immutable/Range$ByOne;
const #114 = class	#113;	//  scala/collection/immutable/Range$ByOne
const #115 = Asciz	scala/collection/mutable/FlatHashTable$$anonfun$checkConsistent$1;
const #116 = class	#115;	//  scala/collection/mutable/FlatHashTable$$anonfun$checkConsistent$1
const #117 = NameAndType	#56:#4;//  "<init>":(Lscala/collection/mutable/FlatHashTable;)V
const #118 = Method	#116.#117;	//  scala/collection/mutable/FlatHashTable$$anonfun$checkConsistent$1."<init>":(Lscala/collection/mutable/FlatHashTable;)V
const #119 = Asciz	foreach;
const #120 = Asciz	(Lscala/Function1;)V;
const #121 = NameAndType	#119:#120;//  foreach:(Lscala/Function1;)V
const #122 = InterfaceMethod	#114.#121;	//  scala/collection/immutable/Range$ByOne.foreach:(Lscala/Function1;)V
const #123 = Asciz	growTable;
const #124 = Asciz	addEntry;
const #125 = Asciz	(Ljava/lang/Object;)Z;
const #126 = NameAndType	#124:#125;//  addEntry:(Ljava/lang/Object;)Z
const #127 = InterfaceMethod	#8.#126;	//  scala/collection/mutable/FlatHashTable.addEntry:(Ljava/lang/Object;)Z
const #128 = Asciz	oldtable;
const #129 = Asciz	[Ljava/lang/Object;;
const #130 = Asciz	entry;
const #131 = Asciz	iterator;
const #132 = Asciz	(Lscala/collection/mutable/FlatHashTable;)Ljava/lang/Object;;
const #133 = Asciz	scala/collection/mutable/FlatHashTable$$anon$1;
const #134 = class	#133;	//  scala/collection/mutable/FlatHashTable$$anon$1
const #135 = Method	#134.#117;	//  scala/collection/mutable/FlatHashTable$$anon$1."<init>":(Lscala/collection/mutable/FlatHashTable;)V
const #136 = Asciz	removeEntry;
const #137 = Asciz	(Lscala/collection/mutable/FlatHashTable;Ljava/lang/Object;)Lscala/Option;;
const #138 = Asciz	(Ljava/lang/Object;)I;
const #139 = NameAndType	#89:#138;//  elemHashCode:(Ljava/lang/Object;)I
const #140 = InterfaceMethod	#8.#139;	//  scala/collection/mutable/FlatHashTable.elemHashCode:(Ljava/lang/Object;)I
const #141 = NameAndType	#79:#81;//  index:(I)I
const #142 = InterfaceMethod	#8.#141;	//  scala/collection/mutable/FlatHashTable.index:(I)I
const #143 = Asciz	scala/None$;
const #144 = class	#143;	//  scala/None$
const #145 = Asciz	Lscala/None$;;
const #146 = NameAndType	#99:#145;//  MODULE$:Lscala/None$;
const #147 = Field	#144.#146;	//  scala/None$.MODULE$:Lscala/None$;
const #148 = Asciz	java/lang/Number;
const #149 = class	#148;	//  java/lang/Number
const #150 = Asciz	java/lang/Character;
const #151 = class	#150;	//  java/lang/Character
const #152 = Asciz	scala/runtime/BoxesRunTime;
const #153 = class	#152;	//  scala/runtime/BoxesRunTime
const #154 = Asciz	equals2;
const #155 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)Z;
const #156 = NameAndType	#154:#155;//  equals2:(Ljava/lang/Object;Ljava/lang/Object;)Z
const #157 = Method	#153.#156;	//  scala/runtime/BoxesRunTime.equals2:(Ljava/lang/Object;Ljava/lang/Object;)Z
const #158 = Asciz	equals;
const #159 = NameAndType	#158:#125;//  equals:(Ljava/lang/Object;)Z
const #160 = Method	#14.#159;	//  java/lang/Object.equals:(Ljava/lang/Object;)Z
const #161 = Asciz	tableSize;
const #162 = NameAndType	#161:#10;//  tableSize:()I
const #163 = InterfaceMethod	#8.#162;	//  scala/collection/mutable/FlatHashTable.tableSize:()I
const #164 = Asciz	scala/Some;
const #165 = class	#164;	//  scala/Some
const #166 = Method	#165.#73;	//  scala/Some."<init>":(Ljava/lang/Object;)V
const #167 = NameAndType	#35:#36;//  precedes$1:(Lscala/collection/mutable/FlatHashTable;II)Z
const #168 = Method	#24.#167;	//  scala/collection/mutable/FlatHashTable$class.precedes$1:(Lscala/collection/mutable/FlatHashTable;II)Z
const #169 = Asciz	h2;
const #170 = Asciz	h0;
const #171 = Asciz	h1;
const #172 = Asciz	(Lscala/collection/mutable/FlatHashTable;Ljava/lang/Object;)Z;
const #173 = Asciz	threshold;
const #174 = NameAndType	#173:#10;//  threshold:()I
const #175 = InterfaceMethod	#8.#174;	//  scala/collection/mutable/FlatHashTable.threshold:()I
const #176 = NameAndType	#123:#4;//  growTable:(Lscala/collection/mutable/FlatHashTable;)V
const #177 = Method	#24.#176;	//  scala/collection/mutable/FlatHashTable$class.growTable:(Lscala/collection/mutable/FlatHashTable;)V
const #178 = Asciz	containsEntry;
const #179 = Asciz	findEntry;
const #180 = Asciz	(Lscala/collection/mutable/FlatHashTable;)I;
const #181 = int	16;
const #182 = int	1000;
const #183 = int	450;
const #184 = Asciz	Scala;
const #185 = Asciz	InnerClasses;
const #186 = Asciz	scala/collection/immutable/Range;
const #187 = class	#186;	//  scala/collection/immutable/Range
const #188 = Asciz	ByOne;
const #189 = Asciz	$anon$1;
const #190 = Asciz	$anonfun$checkConsistent$1;

{
public static void $init$(scala.collection.mutable.FlatHashTable);
  Code:
   Stack=3, Locals=1, Args_size=1
   0:	aload_0
   1:	aload_0
   2:	invokeinterface	#12,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.initialSize:()I
   7:	iconst_0
   8:	if_icmpne	15
   11:	aconst_null
   12:	goto	24
   15:	aload_0
   16:	invokeinterface	#12,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.initialSize:()I
   21:	anewarray	#14; //class java/lang/Object
   24:	invokeinterface	#18,  2; //InterfaceMethod scala/collection/mutable/FlatHashTable.table_$eq:([Ljava/lang/Object;)V
   29:	aload_0
   30:	iconst_0
   31:	invokeinterface	#22,  2; //InterfaceMethod scala/collection/mutable/FlatHashTable.tableSize_$eq:(I)V
   36:	aload_0
   37:	aload_0
   38:	aload_0
   39:	invokeinterface	#12,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.initialSize:()I
   44:	invokestatic	#28; //Method newThreshold:(Lscala/collection/mutable/FlatHashTable;I)I
   47:	invokeinterface	#31,  2; //InterfaceMethod scala/collection/mutable/FlatHashTable.threshold_$eq:(I)V
   52:	return
  LineNumberTable: 
   line 32: 0
   line 33: 1
   line 32: 24
   line 37: 29
   line 41: 36

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      53      0    $this       Lscala/collection/mutable/FlatHashTable;


public static void clearTable(scala.collection.mutable.FlatHashTable);
  Code:
   Stack=3, Locals=2, Args_size=1
   0:	aload_0
   1:	invokeinterface	#40,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
   6:	arraylength
   7:	iconst_1
   8:	isub
   9:	istore_1
   10:	iload_1
   11:	iconst_0
   12:	if_icmplt	31
   15:	aload_0
   16:	invokeinterface	#40,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
   21:	iload_1
   22:	aconst_null
   23:	aastore
   24:	iload_1
   25:	iconst_1
   26:	isub
   27:	istore_1
   28:	goto	10
   31:	aload_0
   32:	iconst_0
   33:	invokeinterface	#22,  2; //InterfaceMethod scala/collection/mutable/FlatHashTable.tableSize_$eq:(I)V
   38:	return
  LineNumberTable: 
   line 163: 0
   line 164: 10
   line 165: 31

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      39      0    $this       Lscala/collection/mutable/FlatHashTable;
   10      28      1    i       I


public static final int index(scala.collection.mutable.FlatHashTable, int);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	invokeinterface	#83,  2; //InterfaceMethod scala/collection/mutable/FlatHashTable.improve:(I)I
   7:	aload_0
   8:	invokeinterface	#40,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
   13:	arraylength
   14:	iconst_1
   15:	isub
   16:	iand
   17:	ireturn
  LineNumberTable: 
   line 154: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      18      0    $this       Lscala/collection/mutable/FlatHashTable;
   0      18      1    hcode       I


public static final int improve(scala.collection.mutable.FlatHashTable, int);
  Code:
   Stack=3, Locals=3, Args_size=2
   0:	iload_1
   1:	iload_1
   2:	ldc	#85; //int 9
   4:	ishl
   5:	iconst_m1
   6:	ixor
   7:	iadd
   8:	istore_2
   9:	iload_2
   10:	iload_2
   11:	ldc	#86; //int 14
   13:	iushr
   14:	ixor
   15:	istore_2
   16:	iload_2
   17:	iload_2
   18:	iconst_4
   19:	ishl
   20:	iadd
   21:	istore_2
   22:	iload_2
   23:	iload_2
   24:	ldc	#87; //int 10
   26:	iushr
   27:	ixor
   28:	ireturn
  LineNumberTable: 
   line 148: 0
   line 149: 9
   line 150: 16
   line 151: 22

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      29      0    $this       Lscala/collection/mutable/FlatHashTable;
   0      29      1    hcode       I
   9      19      2    h       I


public static int elemHashCode(scala.collection.mutable.FlatHashTable, java.lang.Object);
  Code:
   Stack=1, Locals=2, Args_size=2
   0:	aload_1
   1:	invokevirtual	#93; //Method java/lang/Object.hashCode:()I
   4:	ireturn
  LineNumberTable: 
   line 145: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    $this       Lscala/collection/mutable/FlatHashTable;
   0      5      1    elem       Ljava/lang/Object;


public static java.lang.Object iterator(scala.collection.mutable.FlatHashTable);
  Code:
   Stack=3, Locals=1, Args_size=1
   0:	new	#134; //class scala/collection/mutable/FlatHashTable$$anon$1
   3:	dup
   4:	aload_0
   5:	invokespecial	#135; //Method scala/collection/mutable/FlatHashTable$$anon$1."<init>":(Lscala/collection/mutable/FlatHashTable;)V
   8:	areturn
  LineNumberTable: 
   line 114: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    $this       Lscala/collection/mutable/FlatHashTable;


public static scala.Option removeEntry(scala.collection.mutable.FlatHashTable, java.lang.Object);
  Code:
   Stack=4, Locals=7, Args_size=2
   0:	aload_0
   1:	aload_0
   2:	aload_1
   3:	invokeinterface	#140,  2; //InterfaceMethod scala/collection/mutable/FlatHashTable.elemHashCode:(Ljava/lang/Object;)I
   8:	invokeinterface	#142,  2; //InterfaceMethod scala/collection/mutable/FlatHashTable.index:(I)I
   13:	istore	5
   15:	aload_0
   16:	invokeinterface	#40,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
   21:	iload	5
   23:	aaload
   24:	astore	6
   26:	aload	6
   28:	ifnonnull	35
   31:	getstatic	#147; //Field scala/None$.MODULE$:Lscala/None$;
   34:	areturn
   35:	aload	6
   37:	aload_1
   38:	if_acmpne	45
   41:	iconst_1
   42:	goto	85
   45:	aload	6
   47:	ifnonnull	54
   50:	iconst_0
   51:	goto	85
   54:	aload	6
   56:	instanceof	#149; //class java/lang/Number
   59:	ifne	70
   62:	aload	6
   64:	instanceof	#151; //class java/lang/Character
   67:	ifeq	79
   70:	aload	6
   72:	aload_1
   73:	invokestatic	#157; //Method scala/runtime/BoxesRunTime.equals2:(Ljava/lang/Object;Ljava/lang/Object;)Z
   76:	goto	85
   79:	aload	6
   81:	aload_1
   82:	invokevirtual	#160; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   85:	ifeq	224
   88:	iload	5
   90:	istore_3
   91:	iload	5
   93:	iconst_1
   94:	iadd
   95:	aload_0
   96:	invokeinterface	#40,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
   101:	arraylength
   102:	irem
   103:	istore	4
   105:	aload_0
   106:	invokeinterface	#40,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
   111:	iload	4
   113:	aaload
   114:	ifnonnull	150
   117:	aload_0
   118:	invokeinterface	#40,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
   123:	iload_3
   124:	aconst_null
   125:	aastore
   126:	aload_0
   127:	aload_0
   128:	invokeinterface	#163,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.tableSize:()I
   133:	iconst_1
   134:	isub
   135:	invokeinterface	#22,  2; //InterfaceMethod scala/collection/mutable/FlatHashTable.tableSize_$eq:(I)V
   140:	new	#165; //class scala/Some
   143:	dup
   144:	aload	6
   146:	invokespecial	#166; //Method scala/Some."<init>":(Ljava/lang/Object;)V
   149:	areturn
   150:	aload_0
   151:	aload_0
   152:	aload_0
   153:	invokeinterface	#40,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
   158:	iload	4
   160:	aaload
   161:	invokeinterface	#140,  2; //InterfaceMethod scala/collection/mutable/FlatHashTable.elemHashCode:(Ljava/lang/Object;)I
   166:	invokeinterface	#142,  2; //InterfaceMethod scala/collection/mutable/FlatHashTable.index:(I)I
   171:	istore_2
   172:	iload_2
   173:	iload	4
   175:	if_icmpeq	207
   178:	aload_0
   179:	iload_2
   180:	iload_3
   181:	invokestatic	#168; //Method precedes$1:(Lscala/collection/mutable/FlatHashTable;II)Z
   184:	ifeq	207
   187:	aload_0
   188:	invokeinterface	#40,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
   193:	iload_3
   194:	aload_0
   195:	invokeinterface	#40,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
   200:	iload	4
   202:	aaload
   203:	aastore
   204:	iload	4
   206:	istore_3
   207:	iload	4
   209:	iconst_1
   210:	iadd
   211:	aload_0
   212:	invokeinterface	#40,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
   217:	arraylength
   218:	irem
   219:	istore	4
   221:	goto	105
   224:	iload	5
   226:	iconst_1
   227:	iadd
   228:	aload_0
   229:	invokeinterface	#40,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
   234:	arraylength
   235:	irem
   236:	istore	5
   238:	aload_0
   239:	invokeinterface	#40,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
   244:	iload	5
   246:	aaload
   247:	astore	6
   249:	goto	26
  LineNumberTable: 
   line 87: 0
   line 88: 15
   line 89: 26
   line 111: 31
   line 90: 35
   line 91: 88
   line 92: 91
   line 93: 105
   line 103: 117
   line 104: 126
   line 106: 140
   line 94: 150
   line 96: 172
   line 98: 187
   line 99: 204
   line 101: 207
   line 108: 224
   line 109: 238

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      252      0    $this       Lscala/collection/mutable/FlatHashTable;
   0      252      1    elem       Ljava/lang/Object;
   172      49      2    h2       I
   91      133      3    h0       I
   105      119      4    h1       I
   15      19      5    h       I
   35      217      5    h       I
   26      8      6    entry       Ljava/lang/Object;
   35      217      6    entry       Ljava/lang/Object;


public static boolean addEntry(scala.collection.mutable.FlatHashTable, java.lang.Object);
  Code:
   Stack=3, Locals=4, Args_size=2
   0:	aload_0
   1:	aload_0
   2:	aload_1
   3:	invokeinterface	#140,  2; //InterfaceMethod scala/collection/mutable/FlatHashTable.elemHashCode:(Ljava/lang/Object;)I
   8:	invokeinterface	#142,  2; //InterfaceMethod scala/collection/mutable/FlatHashTable.index:(I)I
   13:	istore_2
   14:	aload_0
   15:	invokeinterface	#40,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
   20:	iload_2
   21:	aaload
   22:	astore_3
   23:	aload_3
   24:	ifnonnull	71
   27:	aload_0
   28:	invokeinterface	#40,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
   33:	iload_2
   34:	aload_1
   35:	aastore
   36:	aload_0
   37:	aload_0
   38:	invokeinterface	#163,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.tableSize:()I
   43:	iconst_1
   44:	iadd
   45:	invokeinterface	#22,  2; //InterfaceMethod scala/collection/mutable/FlatHashTable.tableSize_$eq:(I)V
   50:	aload_0
   51:	invokeinterface	#163,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.tableSize:()I
   56:	aload_0
   57:	invokeinterface	#175,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.threshold:()I
   62:	if_icmplt	69
   65:	aload_0
   66:	invokestatic	#177; //Method growTable:(Lscala/collection/mutable/FlatHashTable;)V
   69:	iconst_1
   70:	ireturn
   71:	aload_3
   72:	aload_1
   73:	if_acmpne	80
   76:	iconst_1
   77:	goto	115
   80:	aload_3
   81:	ifnonnull	88
   84:	iconst_0
   85:	goto	115
   88:	aload_3
   89:	instanceof	#149; //class java/lang/Number
   92:	ifne	102
   95:	aload_3
   96:	instanceof	#151; //class java/lang/Character
   99:	ifeq	110
   102:	aload_3
   103:	aload_1
   104:	invokestatic	#157; //Method scala/runtime/BoxesRunTime.equals2:(Ljava/lang/Object;Ljava/lang/Object;)Z
   107:	goto	115
   110:	aload_3
   111:	aload_1
   112:	invokevirtual	#160; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   115:	ifeq	120
   118:	iconst_0
   119:	ireturn
   120:	iload_2
   121:	iconst_1
   122:	iadd
   123:	aload_0
   124:	invokeinterface	#40,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
   129:	arraylength
   130:	irem
   131:	istore_2
   132:	aload_0
   133:	invokeinterface	#40,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
   138:	iload_2
   139:	aaload
   140:	astore_3
   141:	goto	23
  LineNumberTable: 
   line 67: 0
   line 68: 14
   line 69: 23
   line 74: 27
   line 75: 36
   line 76: 50
   line 77: 69
   line 70: 71
   line 71: 120
   line 72: 132

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      144      0    $this       Lscala/collection/mutable/FlatHashTable;
   0      144      1    elem       Ljava/lang/Object;
   14      56      2    h       I
   71      73      2    h       I
   23      47      3    entry       Ljava/lang/Object;
   71      73      3    entry       Ljava/lang/Object;


public static boolean containsEntry(scala.collection.mutable.FlatHashTable, java.lang.Object);
  Code:
   Stack=3, Locals=4, Args_size=2
   0:	aload_0
   1:	aload_0
   2:	aload_1
   3:	invokeinterface	#140,  2; //InterfaceMethod scala/collection/mutable/FlatHashTable.elemHashCode:(Ljava/lang/Object;)I
   8:	invokeinterface	#142,  2; //InterfaceMethod scala/collection/mutable/FlatHashTable.index:(I)I
   13:	istore_2
   14:	aload_0
   15:	invokeinterface	#40,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
   20:	iload_2
   21:	aaload
   22:	astore_3
   23:	aload_3
   24:	ifnull	74
   27:	aload_3
   28:	aload_1
   29:	if_acmpne	36
   32:	iconst_1
   33:	goto	71
   36:	aload_3
   37:	ifnonnull	44
   40:	iconst_0
   41:	goto	71
   44:	aload_3
   45:	instanceof	#149; //class java/lang/Number
   48:	ifne	58
   51:	aload_3
   52:	instanceof	#151; //class java/lang/Character
   55:	ifeq	66
   58:	aload_3
   59:	aload_1
   60:	invokestatic	#157; //Method scala/runtime/BoxesRunTime.equals2:(Ljava/lang/Object;Ljava/lang/Object;)Z
   63:	goto	71
   66:	aload_3
   67:	aload_1
   68:	invokevirtual	#160; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   71:	ifeq	84
   74:	aload_3
   75:	ifnonnull	82
   78:	iconst_0
   79:	goto	83
   82:	iconst_1
   83:	ireturn
   84:	iload_2
   85:	iconst_1
   86:	iadd
   87:	aload_0
   88:	invokeinterface	#40,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
   93:	arraylength
   94:	irem
   95:	istore_2
   96:	aload_0
   97:	invokeinterface	#40,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
   102:	iload_2
   103:	aaload
   104:	astore_3
   105:	goto	23
  LineNumberTable: 
   line 54: 0
   line 55: 14
   line 56: 23
   line 60: 74
   line 53: 83
   line 57: 84
   line 58: 96

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      108      0    $this       Lscala/collection/mutable/FlatHashTable;
   0      108      1    elem       Ljava/lang/Object;
   14      94      2    h       I
   23      85      3    entry       Ljava/lang/Object;


public static scala.Option findEntry(scala.collection.mutable.FlatHashTable, java.lang.Object);
  Code:
   Stack=3, Locals=4, Args_size=2
   0:	aload_0
   1:	aload_0
   2:	aload_1
   3:	invokeinterface	#140,  2; //InterfaceMethod scala/collection/mutable/FlatHashTable.elemHashCode:(Ljava/lang/Object;)I
   8:	invokeinterface	#142,  2; //InterfaceMethod scala/collection/mutable/FlatHashTable.index:(I)I
   13:	istore_2
   14:	aload_0
   15:	invokeinterface	#40,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
   20:	iload_2
   21:	aaload
   22:	astore_3
   23:	aload_3
   24:	ifnull	74
   27:	aload_3
   28:	aload_1
   29:	if_acmpne	36
   32:	iconst_1
   33:	goto	71
   36:	aload_3
   37:	ifnonnull	44
   40:	iconst_0
   41:	goto	71
   44:	aload_3
   45:	instanceof	#149; //class java/lang/Number
   48:	ifne	58
   51:	aload_3
   52:	instanceof	#151; //class java/lang/Character
   55:	ifeq	66
   58:	aload_3
   59:	aload_1
   60:	invokestatic	#157; //Method scala/runtime/BoxesRunTime.equals2:(Ljava/lang/Object;Ljava/lang/Object;)Z
   63:	goto	71
   66:	aload_3
   67:	aload_1
   68:	invokevirtual	#160; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   71:	ifeq	93
   74:	aload_3
   75:	ifnonnull	84
   78:	getstatic	#147; //Field scala/None$.MODULE$:Lscala/None$;
   81:	goto	92
   84:	new	#165; //class scala/Some
   87:	dup
   88:	aload_3
   89:	invokespecial	#166; //Method scala/Some."<init>":(Ljava/lang/Object;)V
   92:	areturn
   93:	iload_2
   94:	iconst_1
   95:	iadd
   96:	aload_0
   97:	invokeinterface	#40,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
   102:	arraylength
   103:	irem
   104:	istore_2
   105:	aload_0
   106:	invokeinterface	#40,  1; //InterfaceMethod scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
   111:	iload_2
   112:	aaload
   113:	astore_3
   114:	goto	23
  LineNumberTable: 
   line 44: 0
   line 45: 14
   line 46: 23
   line 50: 74
   line 43: 92
   line 47: 93
   line 48: 105

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      117      0    $this       Lscala/collection/mutable/FlatHashTable;
   0      117      1    elem       Ljava/lang/Object;
   14      103      2    h       I
   23      94      3    entry       Ljava/lang/Object;


public static int initialSize(scala.collection.mutable.FlatHashTable);
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	ldc	#181; //int 16
   2:	ireturn
  LineNumberTable: 
   line 26: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      3      0    $this       Lscala/collection/mutable/FlatHashTable;


public static final int loadFactorDenum(scala.collection.mutable.FlatHashTable);
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	ldc	#182; //int 1000
   2:	ireturn
  LineNumberTable: 
   line 22: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      3      0    $this       Lscala/collection/mutable/FlatHashTable;


public static int loadFactor(scala.collection.mutable.FlatHashTable);
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	ldc	#183; //int 450
   2:	ireturn
  LineNumberTable: 
   line 21: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      3      0    $this       Lscala/collection/mutable/FlatHashTable;


}

