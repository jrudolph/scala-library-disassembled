Compiled from "WrappedArray.scala"
public final class scala.collection.mutable.WrappedArray$$anon$1$$anonfun$apply$2 extends scala.runtime.AbstractFunction1 implements java.io.Serializable
  SourceFile: "WrappedArray.scala"
  Scala: length = 0x
   
  InnerClass: 
   public final $anon$1=class scala/collection/mutable/WrappedArray$$anon$1 of class scala/collection/mutable/WrappedArray
   public final $anonfun$apply$2=class scala/collection/mutable/WrappedArray$$anon$1$$anonfun$apply$2 of class scala/collection/mutable/WrappedArray$$anon$1
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	WrappedArray.scala;
Asciz	<clinit>;
Asciz	()V;
Asciz	Code;
Asciz	serialVersionUID;
Asciz	J;
Asciz	scala/collection/mutable/WrappedArray$$anon$1$$anonfun$apply$2;
class	scala/collection/mutable/WrappedArray$$anon$1$$anonfun$apply$2
NameAndType	serialVersionUID:J
Field	scala/collection/mutable/WrappedArray$$anon$1$$anonfun$apply$2.serialVersionUID:J
Asciz	<init>;
Asciz	(Lscala/collection/mutable/WrappedArray$$anon$1;)V;
Asciz	LineNumberTable;
Asciz	scala/runtime/AbstractFunction1;
class	scala/runtime/AbstractFunction1
NameAndType	"<init>":()V
Method	scala/runtime/AbstractFunction1."<init>":()V
Asciz	this;
Asciz	Lscala/collection/mutable/WrappedArray$$anon$1$$anonfun$apply$2;;
Asciz	$outer;
Asciz	Lscala/collection/mutable/WrappedArray$$anon$1;;
Asciz	LocalVariableTable;
Asciz	apply;
Asciz	(Ljava/lang/Object;)Ljava/lang/Object;;
Asciz	(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;;
NameAndType	apply:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
Method	scala/collection/mutable/WrappedArray$$anon$1$$anonfun$apply$2.apply:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
Asciz	v1;
Asciz	Ljava/lang/Object;;
Asciz	scala/collection/mutable/WrappedArray$;
class	scala/collection/mutable/WrappedArray$
Asciz	MODULE$;
Asciz	Lscala/collection/mutable/WrappedArray$;;
NameAndType	MODULE$:Lscala/collection/mutable/WrappedArray$;
Field	scala/collection/mutable/WrappedArray$.MODULE$:Lscala/collection/mutable/WrappedArray$;
Asciz	make;
NameAndType	make:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
Method	scala/collection/mutable/WrappedArray$.make:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
Asciz	(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray<TT;>;;
Asciz	Signature;
Asciz	Scala;
Asciz	InnerClasses;
Asciz	scala/collection/mutable/WrappedArray$$anon$1;
class	scala/collection/mutable/WrappedArray$$anon$1
Asciz	scala/collection/mutable/WrappedArray;
class	scala/collection/mutable/WrappedArray
Asciz	$anon$1;
Asciz	$anonfun$apply$2;
Asciz	java/io/Serializable;
class	java/io/Serializable

{
public static final long serialVersionUID;
  Signature: J

public static {};
  Signature: ()V
  Code:
   Stack=2, Locals=0, Args_size=0
	lconst_0
	putstatic	Field serialVersionUID:J
	return
  Labels:

public scala.collection.mutable.WrappedArray$$anon$1$$anonfun$apply$2(scala.collection.mutable.WrappedArray$$anon$1);
  Signature: (Lscala/collection/mutable/WrappedArray$$anon$1;)V
  Code:
   Stack=1, Locals=2, Args_size=2
	aload_0
	invokespecial	Method scala/runtime/AbstractFunction1."<init>":()V
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    this       Lscala/collection/mutable/WrappedArray$$anon$1$$anonfun$apply$2;
   0      5      1    $outer       Lscala/collection/mutable/WrappedArray$$anon$1;


public final java.lang.Object apply(java.lang.Object);
  Signature: (Ljava/lang/Object;)Ljava/lang/Object;
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokevirtual	Method apply:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/collection/mutable/WrappedArray$$anon$1$$anonfun$apply$2;
   0      6      1    v1       Ljava/lang/Object;


public final scala.collection.mutable.WrappedArray apply(java.lang.Object);
  Signature: (Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
  Code:
   Stack=2, Locals=2, Args_size=2
	getstatic	Field scala/collection/mutable/WrappedArray$.MODULE$:Lscala/collection/mutable/WrappedArray$;
	aload_1
	invokevirtual	Method scala/collection/mutable/WrappedArray$.make:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
	areturn
  Labels:
  Signature: length = 0x2
   00 28 

}

