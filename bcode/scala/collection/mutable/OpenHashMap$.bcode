Compiled from "OpenHashMap.scala"
public final class scala.collection.mutable.OpenHashMap$ extends java.lang.Object implements scala.ScalaObject
  SourceFile: "OpenHashMap.scala"
  Scala: length = 0x
   
  InnerClass: 
   public final $anon$1=class scala/collection/mutable/OpenHashMap$$anon$1 of class scala/collection/mutable/OpenHashMap
   public final OpenEntry=class scala/collection/mutable/OpenHashMap$OpenEntry of class scala/collection/mutable/OpenHashMap
   public final $anonfun$clone$1=class scala/collection/mutable/OpenHashMap$$anonfun$clone$1 of class scala/collection/mutable/OpenHashMap
   public final $anonfun$apply$1=class scala/collection/mutable/OpenHashMap$$anonfun$apply$1 of class scala/collection/mutable/OpenHashMap
   public final $anonfun$retain$1=class scala/collection/mutable/OpenHashMap$$anonfun$retain$1 of class scala/collection/mutable/OpenHashMap
   public final $anonfun$foreach$1=class scala/collection/mutable/OpenHashMap$$anonfun$foreach$1 of class scala/collection/mutable/OpenHashMap
   public final $anonfun$transform$1=class scala/collection/mutable/OpenHashMap$$anonfun$transform$1 of class scala/collection/mutable/OpenHashMap
   public final $anonfun$growTable$1=class scala/collection/mutable/OpenHashMap$$anonfun$growTable$1 of class scala/collection/mutable/OpenHashMap
   public final $anonfun$foreachUndeletedEntry$1=class scala/collection/mutable/OpenHashMap$$anonfun$foreachUndeletedEntry$1 of class scala/collection/mutable/OpenHashMap
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	OpenHashMap.scala;
Asciz	MODULE$;
Asciz	Lscala/collection/mutable/OpenHashMap$;;
Asciz	<clinit>;
Asciz	()V;
Asciz	Code;
Asciz	scala/collection/mutable/OpenHashMap$;
class	scala/collection/mutable/OpenHashMap$
Asciz	<init>;
NameAndType	"<init>":()V
Method	scala/collection/mutable/OpenHashMap$."<init>":()V
Asciz	apply;
Asciz	(Lscala/collection/Seq;)Lscala/collection/mutable/OpenHashMap;;
Asciz	scala/collection/mutable/OpenHashMap;
class	scala/collection/mutable/OpenHashMap
Asciz	LineNumberTable;
Method	scala/collection/mutable/OpenHashMap."<init>":()V
Asciz	scala/collection/mutable/OpenHashMap$$anonfun$apply$1;
class	scala/collection/mutable/OpenHashMap$$anonfun$apply$1
Asciz	(Lscala/collection/mutable/OpenHashMap;)V;
NameAndType	"<init>":(Lscala/collection/mutable/OpenHashMap;)V
Method	scala/collection/mutable/OpenHashMap$$anonfun$apply$1."<init>":(Lscala/collection/mutable/OpenHashMap;)V
Asciz	scala/collection/IterableLike;
class	scala/collection/IterableLike
Asciz	foreach;
Asciz	(Lscala/Function1;)V;
NameAndType	foreach:(Lscala/Function1;)V
InterfaceMethod	scala/collection/IterableLike.foreach:(Lscala/Function1;)V
Asciz	this;
Asciz	elems;
Asciz	Lscala/collection/Seq;;
Asciz	dict$1;
Asciz	Lscala/collection/mutable/OpenHashMap;;
Asciz	LocalVariableTable;
Asciz	<K:Ljava/lang/Object;V:Ljava/lang/Object;>(Lscala/collection/Seq<Lscala/Tuple2<TK;TV;>;>;)Lscala/collection/mutable/OpenHashMap<TK;TV;>;;
Asciz	Signature;
Asciz	empty;
Asciz	()Lscala/collection/mutable/OpenHashMap;;
Asciz	<K:Ljava/lang/Object;V:Ljava/lang/Object;>()Lscala/collection/mutable/OpenHashMap<TK;TV;>;;
Asciz	highestOneBit;
Asciz	(I)I;
int	8;
int	16;
Asciz	j;
Asciz	I;
Asciz	i;
Asciz	nextPowerOfTwo;
NameAndType	highestOneBit:(I)I
Method	scala/collection/mutable/OpenHashMap$.highestOneBit:(I)I
Asciz	java/lang/Object;
class	java/lang/Object
Method	java/lang/Object."<init>":()V
NameAndType	MODULE$:Lscala/collection/mutable/OpenHashMap$;
Field	scala/collection/mutable/OpenHashMap$.MODULE$:Lscala/collection/mutable/OpenHashMap$;
Asciz	Scala;
Asciz	InnerClasses;
Asciz	scala/collection/mutable/OpenHashMap$$anon$1;
class	scala/collection/mutable/OpenHashMap$$anon$1
Asciz	$anon$1;
Asciz	scala/collection/mutable/OpenHashMap$OpenEntry;
class	scala/collection/mutable/OpenHashMap$OpenEntry
Asciz	OpenEntry;
Asciz	scala/collection/mutable/OpenHashMap$$anonfun$clone$1;
class	scala/collection/mutable/OpenHashMap$$anonfun$clone$1
Asciz	$anonfun$clone$1;
Asciz	$anonfun$apply$1;
Asciz	scala/collection/mutable/OpenHashMap$$anonfun$retain$1;
class	scala/collection/mutable/OpenHashMap$$anonfun$retain$1
Asciz	$anonfun$retain$1;
Asciz	scala/collection/mutable/OpenHashMap$$anonfun$foreach$1;
class	scala/collection/mutable/OpenHashMap$$anonfun$foreach$1
Asciz	$anonfun$foreach$1;
Asciz	scala/collection/mutable/OpenHashMap$$anonfun$transform$1;
class	scala/collection/mutable/OpenHashMap$$anonfun$transform$1
Asciz	$anonfun$transform$1;
Asciz	scala/collection/mutable/OpenHashMap$$anonfun$growTable$1;
class	scala/collection/mutable/OpenHashMap$$anonfun$growTable$1
Asciz	$anonfun$growTable$1;
Asciz	scala/collection/mutable/OpenHashMap$$anonfun$foreachUndeletedEntry$1;
class	scala/collection/mutable/OpenHashMap$$anonfun$foreachUndeletedEntry$1
Asciz	$anonfun$foreachUndeletedEntry$1;
Asciz	scala/ScalaObject;
class	scala/ScalaObject

{
public static final scala.collection.mutable.OpenHashMap$ MODULE$;
  Signature: Lscala/collection/mutable/OpenHashMap$;

public static {};
  Signature: ()V
  Code:
   Stack=1, Locals=0, Args_size=0
	new	class scala/collection/mutable/OpenHashMap$
	invokespecial	Method "<init>":()V
	return
  Labels:

public scala.collection.mutable.OpenHashMap apply(scala.collection.Seq);
  Signature: (Lscala/collection/Seq;)Lscala/collection/mutable/OpenHashMap;
  Code:
   Stack=4, Locals=3, Args_size=2
	new	class scala/collection/mutable/OpenHashMap
	dup
	invokespecial	Method scala/collection/mutable/OpenHashMap."<init>":()V
	astore_2
	aload_1
	new	class scala/collection/mutable/OpenHashMap$$anonfun$apply$1
	dup
	aload_2
	invokespecial	Method scala/collection/mutable/OpenHashMap$$anonfun$apply$1."<init>":(Lscala/collection/mutable/OpenHashMap;)V
	invokeinterface	InterfaceMethod scala/collection/IterableLike.foreach:(Lscala/Function1;)V
	aload_2
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      24      0    this       Lscala/collection/mutable/OpenHashMap$;
   0      24      1    elems       Lscala/collection/Seq;
   8      15      2    dict$1       Lscala/collection/mutable/OpenHashMap;

  Signature: length = 0x2
   00 24 

public scala.collection.mutable.OpenHashMap empty();
  Signature: ()Lscala/collection/mutable/OpenHashMap;
  Code:
   Stack=2, Locals=1, Args_size=1
	new	class scala/collection/mutable/OpenHashMap
	dup
	invokespecial	Method scala/collection/mutable/OpenHashMap."<init>":()V
	areturn
  Labels:
  Signature: length = 0x2
   00 28 

public int highestOneBit(int);
  Signature: (I)I
  Code:
   Stack=3, Locals=3, Args_size=2
	iload_1
	iload_1
	iconst_1
	ishr
	ior
	istore_2
	iload_2
	iload_2
	iconst_2
	ishr
	ior
	istore_2
	iload_2
	iload_2
	iconst_4
	ishr
	ior
	istore_2
	iload_2
	iload_2
	ldc	int 8
	ishr
	ior
	istore_2
	iload_2
	iload_2
	ldc	int 16
	ishr
	ior
	istore_2
	iload_2
	iload_2
	iconst_1
	iushr
	isub
	ireturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      38      0    this       Lscala/collection/mutable/OpenHashMap$;
   0      38      1    j       I
   0      37      2    i       I


public int nextPowerOfTwo(int);
  Signature: (I)I
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	iload_1
	invokevirtual	Method highestOneBit:(I)I
	iconst_1
	ishl
	ireturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      8      0    this       Lscala/collection/mutable/OpenHashMap$;
   0      8      1    i       I


private scala.collection.mutable.OpenHashMap$();
  Signature: ()V
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokespecial	Method java/lang/Object."<init>":()V
	aload_0
	putstatic	Field MODULE$:Lscala/collection/mutable/OpenHashMap$;
	return
  Labels:

}

