Compiled from "Traversable.scala"
public abstract class scala.collection.mutable.Traversable$class extends java.lang.Object
  SourceFile: "Traversable.scala"
  Scala: length = 0x
   
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Traversable.scala;
const #3 = Asciz	$init$;
const #4 = Asciz	(Lscala/collection/mutable/Traversable;)V;
const #5 = Asciz	Code;
const #6 = Asciz	LineNumberTable;
const #7 = Asciz	$this;
const #8 = Asciz	Lscala/collection/mutable/Traversable;;
const #9 = Asciz	LocalVariableTable;
const #10 = Asciz	companion;
const #11 = Asciz	(Lscala/collection/mutable/Traversable;)Lscala/collection/generic/Companion;;
const #12 = Asciz	scala/collection/mutable/Traversable$;
const #13 = class	#12;	//  scala/collection/mutable/Traversable$
const #14 = Asciz	MODULE$;
const #15 = Asciz	Lscala/collection/mutable/Traversable$;;
const #16 = NameAndType	#14:#15;//  MODULE$:Lscala/collection/mutable/Traversable$;
const #17 = Field	#13.#16;	//  scala/collection/mutable/Traversable$.MODULE$:Lscala/collection/mutable/Traversable$;
const #18 = Asciz	Scala;
const #19 = Asciz	scala/collection/mutable/Traversable$class;
const #20 = class	#19;	//  scala/collection/mutable/Traversable$class
const #21 = Asciz	java/lang/Object;
const #22 = class	#21;	//  java/lang/Object

{
public static void $init$(scala.collection.mutable.Traversable);
  Code:
   Stack=0, Locals=1, Args_size=1
   0:	return
  LineNumberTable: 
   line 18: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      1      0    $this       Lscala/collection/mutable/Traversable;


public static scala.collection.generic.Companion companion(scala.collection.mutable.Traversable);
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	getstatic	#17; //Field scala/collection/mutable/Traversable$.MODULE$:Lscala/collection/mutable/Traversable$;
   3:	areturn
  LineNumberTable: 
   line 22: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      4      0    $this       Lscala/collection/mutable/Traversable;


}

