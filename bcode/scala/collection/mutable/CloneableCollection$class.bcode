Compiled from "CloneableCollection.scala"
public abstract class scala.collection.mutable.CloneableCollection$class extends java.lang.Object
  SourceFile: "CloneableCollection.scala"
  Scala: length = 0x
   
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	CloneableCollection.scala;
Asciz	$init$;
Asciz	(Lscala/collection/mutable/CloneableCollection;)V;
Asciz	Code;
Asciz	LineNumberTable;
Asciz	$this;
Asciz	Lscala/collection/mutable/CloneableCollection;;
Asciz	LocalVariableTable;
Asciz	clone;
Asciz	(Lscala/collection/mutable/CloneableCollection;)Ljava/lang/Object;;
Asciz	scala/collection/mutable/CloneableCollection;
class	scala/collection/mutable/CloneableCollection
Asciz	scala$collection$mutable$CloneableCollection$$super$clone;
Asciz	()Ljava/lang/Object;;
NameAndType	scala$collection$mutable$CloneableCollection$$super$clone:()Ljava/lang/Object;
InterfaceMethod	scala/collection/mutable/CloneableCollection.scala$collection$mutable$CloneableCollection$$super$clone:()Ljava/lang/Object;
Asciz	Scala;
Asciz	scala/collection/mutable/CloneableCollection$class;
class	scala/collection/mutable/CloneableCollection$class
Asciz	java/lang/Object;
class	java/lang/Object

{
public static void $init$(scala.collection.mutable.CloneableCollection);
  Signature: (Lscala/collection/mutable/CloneableCollection;)V
  Code:
   Stack=0, Locals=1, Args_size=1
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      1      0    $this       Lscala/collection/mutable/CloneableCollection;


public static java.lang.Object clone(scala.collection.mutable.CloneableCollection);
  Signature: (Lscala/collection/mutable/CloneableCollection;)Ljava/lang/Object;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokeinterface	InterfaceMethod scala/collection/mutable/CloneableCollection.scala$collection$mutable$CloneableCollection$$super$clone:()Ljava/lang/Object;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    $this       Lscala/collection/mutable/CloneableCollection;


}

