Compiled from "Math.scala"
public final class scala.Math$ extends java.lang.Object implements scala.ScalaObject
  SourceFile: "Math.scala"
  Scala: length = 0x
   
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Math.scala;
const #3 = Asciz	Scala;
const #4 = Asciz	MODULE$;
const #5 = Asciz	Lscala/Math$;;
const #6 = Asciz	<clinit>;
const #7 = Asciz	()V;
const #8 = Asciz	Code;
const #9 = Asciz	scala/Math$;
const #10 = class	#9;	//  scala/Math$
const #11 = Asciz	<init>;
const #12 = NameAndType	#11:#7;//  "<init>":()V
const #13 = Method	#10.#12;	//  scala/Math$."<init>":()V
const #14 = Asciz	Pi;
const #15 = Asciz	D;
const #16 = Asciz	E;
const #17 = Asciz	POS_INF_DOUBLE;
const #18 = Asciz	NEG_INF_DOUBLE;
const #19 = Asciz	NaN_DOUBLE;
const #20 = Asciz	MAX_DOUBLE;
const #21 = Asciz	EPS_DOUBLE;
const #22 = Asciz	MIN_DOUBLE;
const #23 = Asciz	POS_INF_FLOAT;
const #24 = Asciz	F;
const #25 = Asciz	NEG_INF_FLOAT;
const #26 = Asciz	NaN_FLOAT;
const #27 = Asciz	MAX_FLOAT;
const #28 = Asciz	EPS_FLOAT;
const #29 = Asciz	MIN_FLOAT;
const #30 = Asciz	MAX_LONG;
const #31 = Asciz	J;
const #32 = Asciz	MIN_LONG;
const #33 = Asciz	MAX_INT;
const #34 = Asciz	I;
const #35 = Asciz	MIN_INT;
const #36 = Asciz	MAX_CHAR;
const #37 = Asciz	C;
const #38 = Asciz	MIN_CHAR;
const #39 = Asciz	MAX_SHORT;
const #40 = Asciz	S;
const #41 = Asciz	MIN_SHORT;
const #42 = Asciz	MAX_BYTE;
const #43 = Asciz	B;
const #44 = Asciz	MIN_BYTE;
const #45 = Asciz	LineNumberTable;
const #46 = Asciz	java/lang/Object;
const #47 = class	#46;	//  java/lang/Object
const #48 = Method	#47.#12;	//  java/lang/Object."<init>":()V
const #49 = NameAndType	#4:#5;//  MODULE$:Lscala/Math$;
const #50 = Field	#10.#49;	//  scala/Math$.MODULE$:Lscala/Math$;
const #51 = NameAndType	#44:#43;//  MIN_BYTE:B
const #52 = Field	#10.#51;	//  scala/Math$.MIN_BYTE:B
const #53 = NameAndType	#42:#43;//  MAX_BYTE:B
const #54 = Field	#10.#53;	//  scala/Math$.MAX_BYTE:B
const #55 = NameAndType	#41:#40;//  MIN_SHORT:S
const #56 = Field	#10.#55;	//  scala/Math$.MIN_SHORT:S
const #57 = NameAndType	#39:#40;//  MAX_SHORT:S
const #58 = Field	#10.#57;	//  scala/Math$.MAX_SHORT:S
const #59 = NameAndType	#38:#37;//  MIN_CHAR:C
const #60 = Field	#10.#59;	//  scala/Math$.MIN_CHAR:C
const #61 = int	65535;
const #62 = NameAndType	#36:#37;//  MAX_CHAR:C
const #63 = Field	#10.#62;	//  scala/Math$.MAX_CHAR:C
const #64 = int	-2147483648;
const #65 = NameAndType	#35:#34;//  MIN_INT:I
const #66 = Field	#10.#65;	//  scala/Math$.MIN_INT:I
const #67 = int	2147483647;
const #68 = NameAndType	#33:#34;//  MAX_INT:I
const #69 = Field	#10.#68;	//  scala/Math$.MAX_INT:I
const #70 = long	-9223372036854775808l;
const #72 = NameAndType	#32:#31;//  MIN_LONG:J
const #73 = Field	#10.#72;	//  scala/Math$.MIN_LONG:J
const #74 = long	9223372036854775807l;
const #76 = NameAndType	#30:#31;//  MAX_LONG:J
const #77 = Field	#10.#76;	//  scala/Math$.MAX_LONG:J
const #78 = float	3.4028235E38f;
const #79 = NameAndType	#29:#24;//  MIN_FLOAT:F
const #80 = Field	#10.#79;	//  scala/Math$.MIN_FLOAT:F
const #81 = float	1.4E-45f;
const #82 = NameAndType	#28:#24;//  EPS_FLOAT:F
const #83 = Field	#10.#82;	//  scala/Math$.EPS_FLOAT:F
const #84 = NameAndType	#27:#24;//  MAX_FLOAT:F
const #85 = Field	#10.#84;	//  scala/Math$.MAX_FLOAT:F
const #86 = float	NaNf;
const #87 = NameAndType	#26:#24;//  NaN_FLOAT:F
const #88 = Field	#10.#87;	//  scala/Math$.NaN_FLOAT:F
const #89 = float	-Infinityf;
const #90 = NameAndType	#25:#24;//  NEG_INF_FLOAT:F
const #91 = Field	#10.#90;	//  scala/Math$.NEG_INF_FLOAT:F
const #92 = float	Infinityf;
const #93 = NameAndType	#23:#24;//  POS_INF_FLOAT:F
const #94 = Field	#10.#93;	//  scala/Math$.POS_INF_FLOAT:F
const #95 = double	1.7976931348623157E308d;
const #97 = NameAndType	#22:#15;//  MIN_DOUBLE:D
const #98 = Field	#10.#97;	//  scala/Math$.MIN_DOUBLE:D
const #99 = double	4.9E-324d;
const #101 = NameAndType	#21:#15;//  EPS_DOUBLE:D
const #102 = Field	#10.#101;	//  scala/Math$.EPS_DOUBLE:D
const #103 = NameAndType	#20:#15;//  MAX_DOUBLE:D
const #104 = Field	#10.#103;	//  scala/Math$.MAX_DOUBLE:D
const #105 = double	NaNd;
const #107 = NameAndType	#19:#15;//  NaN_DOUBLE:D
const #108 = Field	#10.#107;	//  scala/Math$.NaN_DOUBLE:D
const #109 = double	-Infinityd;
const #111 = NameAndType	#18:#15;//  NEG_INF_DOUBLE:D
const #112 = Field	#10.#111;	//  scala/Math$.NEG_INF_DOUBLE:D
const #113 = double	Infinityd;
const #115 = NameAndType	#17:#15;//  POS_INF_DOUBLE:D
const #116 = Field	#10.#115;	//  scala/Math$.POS_INF_DOUBLE:D
const #117 = double	2.718281828459045d;
const #119 = NameAndType	#16:#15;//  E:D
const #120 = Field	#10.#119;	//  scala/Math$.E:D
const #121 = double	3.141592653589793d;
const #123 = NameAndType	#14:#15;//  Pi:D
const #124 = Field	#10.#123;	//  scala/Math$.Pi:D
const #125 = Asciz	signum;
const #126 = Asciz	(I)I;
const #127 = Asciz	this;
const #128 = Asciz	x;
const #129 = Asciz	LocalVariableTable;
const #130 = Asciz	(J)J;
const #131 = long	-1l;
const #133 = Asciz	(F)F;
const #134 = Asciz	(D)D;
const #135 = Asciz	min;
const #136 = Asciz	(DD)D;
const #137 = Asciz	java/lang/Math;
const #138 = class	#137;	//  java/lang/Math
const #139 = NameAndType	#135:#136;//  min:(DD)D
const #140 = Method	#138.#139;	//  java/lang/Math.min:(DD)D
const #141 = Asciz	y;
const #142 = Asciz	(FF)F;
const #143 = NameAndType	#135:#142;//  min:(FF)F
const #144 = Method	#138.#143;	//  java/lang/Math.min:(FF)F
const #145 = Asciz	(JJ)J;
const #146 = NameAndType	#135:#145;//  min:(JJ)J
const #147 = Method	#138.#146;	//  java/lang/Math.min:(JJ)J
const #148 = Asciz	(II)I;
const #149 = NameAndType	#135:#148;//  min:(II)I
const #150 = Method	#138.#149;	//  java/lang/Math.min:(II)I
const #151 = Asciz	max;
const #152 = NameAndType	#151:#136;//  max:(DD)D
const #153 = Method	#138.#152;	//  java/lang/Math.max:(DD)D
const #154 = NameAndType	#151:#142;//  max:(FF)F
const #155 = Method	#138.#154;	//  java/lang/Math.max:(FF)F
const #156 = NameAndType	#151:#145;//  max:(JJ)J
const #157 = Method	#138.#156;	//  java/lang/Math.max:(JJ)J
const #158 = NameAndType	#151:#148;//  max:(II)I
const #159 = Method	#138.#158;	//  java/lang/Math.max:(II)I
const #160 = Asciz	abs;
const #161 = NameAndType	#160:#134;//  abs:(D)D
const #162 = Method	#138.#161;	//  java/lang/Math.abs:(D)D
const #163 = NameAndType	#160:#133;//  abs:(F)F
const #164 = Method	#138.#163;	//  java/lang/Math.abs:(F)F
const #165 = NameAndType	#160:#130;//  abs:(J)J
const #166 = Method	#138.#165;	//  java/lang/Math.abs:(J)J
const #167 = NameAndType	#160:#126;//  abs:(I)I
const #168 = Method	#138.#167;	//  java/lang/Math.abs:(I)I
const #169 = Asciz	round;
const #170 = Asciz	(D)J;
const #171 = NameAndType	#169:#170;//  round:(D)J
const #172 = Method	#138.#171;	//  java/lang/Math.round:(D)J
const #173 = Asciz	(F)I;
const #174 = NameAndType	#169:#173;//  round:(F)I
const #175 = Method	#138.#174;	//  java/lang/Math.round:(F)I
const #176 = Asciz	pow;
const #177 = NameAndType	#176:#136;//  pow:(DD)D
const #178 = Method	#138.#177;	//  java/lang/Math.pow:(DD)D
const #179 = Asciz	atan2;
const #180 = NameAndType	#179:#136;//  atan2:(DD)D
const #181 = Method	#138.#180;	//  java/lang/Math.atan2:(DD)D
const #182 = Asciz	rint;
const #183 = NameAndType	#182:#134;//  rint:(D)D
const #184 = Method	#138.#183;	//  java/lang/Math.rint:(D)D
const #185 = Asciz	floor;
const #186 = NameAndType	#185:#134;//  floor:(D)D
const #187 = Method	#138.#186;	//  java/lang/Math.floor:(D)D
const #188 = Asciz	ceil;
const #189 = NameAndType	#188:#134;//  ceil:(D)D
const #190 = Method	#138.#189;	//  java/lang/Math.ceil:(D)D
const #191 = Asciz	IEEEremainder;
const #192 = NameAndType	#191:#136;//  IEEEremainder:(DD)D
const #193 = Method	#138.#192;	//  java/lang/Math.IEEEremainder:(DD)D
const #194 = Asciz	sqrt;
const #195 = NameAndType	#194:#134;//  sqrt:(D)D
const #196 = Method	#138.#195;	//  java/lang/Math.sqrt:(D)D
const #197 = Asciz	log;
const #198 = NameAndType	#197:#134;//  log:(D)D
const #199 = Method	#138.#198;	//  java/lang/Math.log:(D)D
const #200 = Asciz	exp;
const #201 = NameAndType	#200:#134;//  exp:(D)D
const #202 = Method	#138.#201;	//  java/lang/Math.exp:(D)D
const #203 = Asciz	toDegrees;
const #204 = NameAndType	#203:#134;//  toDegrees:(D)D
const #205 = Method	#138.#204;	//  java/lang/Math.toDegrees:(D)D
const #206 = Asciz	toRadians;
const #207 = NameAndType	#206:#134;//  toRadians:(D)D
const #208 = Method	#138.#207;	//  java/lang/Math.toRadians:(D)D
const #209 = Asciz	atan;
const #210 = NameAndType	#209:#134;//  atan:(D)D
const #211 = Method	#138.#210;	//  java/lang/Math.atan:(D)D
const #212 = Asciz	acos;
const #213 = NameAndType	#212:#134;//  acos:(D)D
const #214 = Method	#138.#213;	//  java/lang/Math.acos:(D)D
const #215 = Asciz	asin;
const #216 = NameAndType	#215:#134;//  asin:(D)D
const #217 = Method	#138.#216;	//  java/lang/Math.asin:(D)D
const #218 = Asciz	tan;
const #219 = NameAndType	#218:#134;//  tan:(D)D
const #220 = Method	#138.#219;	//  java/lang/Math.tan:(D)D
const #221 = Asciz	cos;
const #222 = NameAndType	#221:#134;//  cos:(D)D
const #223 = Method	#138.#222;	//  java/lang/Math.cos:(D)D
const #224 = Asciz	sin;
const #225 = NameAndType	#224:#134;//  sin:(D)D
const #226 = Method	#138.#225;	//  java/lang/Math.sin:(D)D
const #227 = Asciz	random;
const #228 = Asciz	()D;
const #229 = NameAndType	#227:#228;//  random:()D
const #230 = Method	#138.#229;	//  java/lang/Math.random:()D
const #231 = Asciz	()F;
const #232 = Asciz	()J;
const #233 = Asciz	()I;
const #234 = Asciz	()C;
const #235 = Asciz	()S;
const #236 = Asciz	()B;
const #237 = Asciz	scala/ScalaObject;
const #238 = class	#237;	//  scala/ScalaObject

{
public static final scala.Math$ MODULE$;

public static {};
  Code:
   Stack=1, Locals=0, Args_size=0
   0:	new	#10; //class scala/Math$
   3:	invokespecial	#13; //Method "<init>":()V
   6:	return

public int signum(int);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	iload_1
   1:	iconst_0
   2:	if_icmpne	9
   5:	iconst_0
   6:	goto	19
   9:	iload_1
   10:	iconst_0
   11:	if_icmpge	18
   14:	iconst_m1
   15:	goto	19
   18:	iconst_1
   19:	ireturn
  LineNumberTable: 
   line 228: 0
   line 229: 9
   line 230: 18
   line 228: 19

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      20      0    this       Lscala/Math$;
   0      20      1    x       I


public long signum(long);
  Code:
   Stack=4, Locals=3, Args_size=2
   0:	lload_1
   1:	lconst_0
   2:	lcmp
   3:	ifne	10
   6:	lconst_0
   7:	goto	23
   10:	lload_1
   11:	lconst_0
   12:	lcmp
   13:	ifge	22
   16:	ldc2_w	#131; //long -1l
   19:	goto	23
   22:	lconst_1
   23:	lreturn
  LineNumberTable: 
   line 223: 0
   line 224: 10
   line 225: 22
   line 223: 23

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      24      0    this       Lscala/Math$;
   0      24      1    x       J


public float signum(float);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	fload_1
   1:	fconst_0
   2:	fcmpl
   3:	ifne	10
   6:	fconst_0
   7:	goto	34
   10:	fload_1
   11:	iconst_0
   12:	i2f
   13:	fcmpg
   14:	ifge	22
   17:	fconst_1
   18:	fneg
   19:	goto	34
   22:	fload_1
   23:	iconst_0
   24:	i2f
   25:	fcmpl
   26:	ifle	33
   29:	fconst_1
   30:	goto	34
   33:	fload_1
   34:	freturn
  LineNumberTable: 
   line 217: 0
   line 218: 10
   line 219: 22
   line 220: 33
   line 217: 34

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      35      0    this       Lscala/Math$;
   0      35      1    x       F


public double signum(double);
  Code:
   Stack=4, Locals=3, Args_size=2
   0:	dload_1
   1:	dconst_0
   2:	dcmpl
   3:	ifne	10
   6:	dconst_0
   7:	goto	34
   10:	dload_1
   11:	iconst_0
   12:	i2d
   13:	dcmpg
   14:	ifge	22
   17:	dconst_1
   18:	dneg
   19:	goto	34
   22:	dload_1
   23:	iconst_0
   24:	i2d
   25:	dcmpl
   26:	ifle	33
   29:	dconst_1
   30:	goto	34
   33:	dload_1
   34:	dreturn
  LineNumberTable: 
   line 211: 0
   line 212: 10
   line 213: 22
   line 214: 33
   line 211: 34

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      35      0    this       Lscala/Math$;
   0      35      1    x       D


public double min(double, double);
  Code:
   Stack=4, Locals=5, Args_size=3
   0:	dload_1
   1:	dload_3
   2:	invokestatic	#140; //Method java/lang/Math.min:(DD)D
   5:	dreturn
  LineNumberTable: 
   line 208: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/Math$;
   0      6      1    x       D
   0      6      3    y       D


public float min(float, float);
  Code:
   Stack=2, Locals=3, Args_size=3
   0:	fload_1
   1:	fload_2
   2:	invokestatic	#144; //Method java/lang/Math.min:(FF)F
   5:	freturn
  LineNumberTable: 
   line 207: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/Math$;
   0      6      1    x       F
   0      6      2    y       F


public long min(long, long);
  Code:
   Stack=4, Locals=5, Args_size=3
   0:	lload_1
   1:	lload_3
   2:	invokestatic	#147; //Method java/lang/Math.min:(JJ)J
   5:	lreturn
  LineNumberTable: 
   line 206: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/Math$;
   0      6      1    x       J
   0      6      3    y       J


public int min(int, int);
  Code:
   Stack=2, Locals=3, Args_size=3
   0:	iload_1
   1:	iload_2
   2:	invokestatic	#150; //Method java/lang/Math.min:(II)I
   5:	ireturn
  LineNumberTable: 
   line 205: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/Math$;
   0      6      1    x       I
   0      6      2    y       I


public double max(double, double);
  Code:
   Stack=4, Locals=5, Args_size=3
   0:	dload_1
   1:	dload_3
   2:	invokestatic	#153; //Method java/lang/Math.max:(DD)D
   5:	dreturn
  LineNumberTable: 
   line 203: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/Math$;
   0      6      1    x       D
   0      6      3    y       D


public float max(float, float);
  Code:
   Stack=2, Locals=3, Args_size=3
   0:	fload_1
   1:	fload_2
   2:	invokestatic	#155; //Method java/lang/Math.max:(FF)F
   5:	freturn
  LineNumberTable: 
   line 202: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/Math$;
   0      6      1    x       F
   0      6      2    y       F


public long max(long, long);
  Code:
   Stack=4, Locals=5, Args_size=3
   0:	lload_1
   1:	lload_3
   2:	invokestatic	#157; //Method java/lang/Math.max:(JJ)J
   5:	lreturn
  LineNumberTable: 
   line 201: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/Math$;
   0      6      1    x       J
   0      6      3    y       J


public int max(int, int);
  Code:
   Stack=2, Locals=3, Args_size=3
   0:	iload_1
   1:	iload_2
   2:	invokestatic	#159; //Method java/lang/Math.max:(II)I
   5:	ireturn
  LineNumberTable: 
   line 200: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/Math$;
   0      6      1    x       I
   0      6      2    y       I


public double abs(double);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	dload_1
   1:	invokestatic	#162; //Method java/lang/Math.abs:(D)D
   4:	dreturn
  LineNumberTable: 
   line 198: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    this       Lscala/Math$;
   0      5      1    x       D


public float abs(float);
  Code:
   Stack=1, Locals=2, Args_size=2
   0:	fload_1
   1:	invokestatic	#164; //Method java/lang/Math.abs:(F)F
   4:	freturn
  LineNumberTable: 
   line 197: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    this       Lscala/Math$;
   0      5      1    x       F


public long abs(long);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	lload_1
   1:	invokestatic	#166; //Method java/lang/Math.abs:(J)J
   4:	lreturn
  LineNumberTable: 
   line 196: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    this       Lscala/Math$;
   0      5      1    x       J


public int abs(int);
  Code:
   Stack=1, Locals=2, Args_size=2
   0:	iload_1
   1:	invokestatic	#168; //Method java/lang/Math.abs:(I)I
   4:	ireturn
  LineNumberTable: 
   line 195: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    this       Lscala/Math$;
   0      5      1    x       I


public long round(double);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	dload_1
   1:	invokestatic	#172; //Method java/lang/Math.round:(D)J
   4:	lreturn
  LineNumberTable: 
   line 194: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    this       Lscala/Math$;
   0      5      1    x       D


public int round(float);
  Code:
   Stack=1, Locals=2, Args_size=2
   0:	fload_1
   1:	invokestatic	#175; //Method java/lang/Math.round:(F)I
   4:	ireturn
  LineNumberTable: 
   line 193: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    this       Lscala/Math$;
   0      5      1    x       F


public double pow(double, double);
  Code:
   Stack=4, Locals=5, Args_size=3
   0:	dload_1
   1:	dload_3
   2:	invokestatic	#178; //Method java/lang/Math.pow:(DD)D
   5:	dreturn
  LineNumberTable: 
   line 185: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/Math$;
   0      6      1    x       D
   0      6      3    y       D


public double atan2(double, double);
  Code:
   Stack=4, Locals=5, Args_size=3
   0:	dload_1
   1:	dload_3
   2:	invokestatic	#181; //Method java/lang/Math.atan2:(DD)D
   5:	dreturn
  LineNumberTable: 
   line 176: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/Math$;
   0      6      1    y       D
   0      6      3    x       D


public double rint(double);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	dload_1
   1:	invokestatic	#184; //Method java/lang/Math.rint:(D)D
   4:	dreturn
  LineNumberTable: 
   line 165: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    this       Lscala/Math$;
   0      5      1    x       D


public double floor(double);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	dload_1
   1:	invokestatic	#187; //Method java/lang/Math.floor:(D)D
   4:	dreturn
  LineNumberTable: 
   line 156: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    this       Lscala/Math$;
   0      5      1    x       D


public double ceil(double);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	dload_1
   1:	invokestatic	#190; //Method java/lang/Math.ceil:(D)D
   4:	dreturn
  LineNumberTable: 
   line 155: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    this       Lscala/Math$;
   0      5      1    x       D


public double IEEEremainder(double, double);
  Code:
   Stack=4, Locals=5, Args_size=3
   0:	dload_1
   1:	dload_3
   2:	invokestatic	#193; //Method java/lang/Math.IEEEremainder:(DD)D
   5:	dreturn
  LineNumberTable: 
   line 153: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/Math$;
   0      6      1    x       D
   0      6      3    y       D


public double sqrt(double);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	dload_1
   1:	invokestatic	#196; //Method java/lang/Math.sqrt:(D)D
   4:	dreturn
  LineNumberTable: 
   line 152: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    this       Lscala/Math$;
   0      5      1    x       D


public double log(double);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	dload_1
   1:	invokestatic	#199; //Method java/lang/Math.log:(D)D
   4:	dreturn
  LineNumberTable: 
   line 151: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    this       Lscala/Math$;
   0      5      1    x       D


public double exp(double);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	dload_1
   1:	invokestatic	#202; //Method java/lang/Math.exp:(D)D
   4:	dreturn
  LineNumberTable: 
   line 150: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    this       Lscala/Math$;
   0      5      1    x       D


public double toDegrees(double);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	dload_1
   1:	invokestatic	#205; //Method java/lang/Math.toDegrees:(D)D
   4:	dreturn
  LineNumberTable: 
   line 141: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    this       Lscala/Math$;
   0      5      1    x       D


public double toRadians(double);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	dload_1
   1:	invokestatic	#208; //Method java/lang/Math.toRadians:(D)D
   4:	dreturn
  LineNumberTable: 
   line 133: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    this       Lscala/Math$;
   0      5      1    x       D


public double atan(double);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	dload_1
   1:	invokestatic	#211; //Method java/lang/Math.atan:(D)D
   4:	dreturn
  LineNumberTable: 
   line 125: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    this       Lscala/Math$;
   0      5      1    x       D


public double acos(double);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	dload_1
   1:	invokestatic	#214; //Method java/lang/Math.acos:(D)D
   4:	dreturn
  LineNumberTable: 
   line 124: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    this       Lscala/Math$;
   0      5      1    x       D


public double asin(double);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	dload_1
   1:	invokestatic	#217; //Method java/lang/Math.asin:(D)D
   4:	dreturn
  LineNumberTable: 
   line 123: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    this       Lscala/Math$;
   0      5      1    x       D


public double tan(double);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	dload_1
   1:	invokestatic	#220; //Method java/lang/Math.tan:(D)D
   4:	dreturn
  LineNumberTable: 
   line 122: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    this       Lscala/Math$;
   0      5      1    x       D


public double cos(double);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	dload_1
   1:	invokestatic	#223; //Method java/lang/Math.cos:(D)D
   4:	dreturn
  LineNumberTable: 
   line 121: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    this       Lscala/Math$;
   0      5      1    x       D


public double sin(double);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	dload_1
   1:	invokestatic	#226; //Method java/lang/Math.sin:(D)D
   4:	dreturn
  LineNumberTable: 
   line 120: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    this       Lscala/Math$;
   0      5      1    x       D


public double random();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	invokestatic	#230; //Method java/lang/Math.random:()D
   3:	dreturn
  LineNumberTable: 
   line 118: 0


public double Pi();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#124; //Field Pi:D
   4:	dreturn
  LineNumberTable: 
   line 113: 0


public double E();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#120; //Field E:D
   4:	dreturn
  LineNumberTable: 
   line 107: 0


public double POS_INF_DOUBLE();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#116; //Field POS_INF_DOUBLE:D
   4:	dreturn
  LineNumberTable: 
   line 95: 0


public double NEG_INF_DOUBLE();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#112; //Field NEG_INF_DOUBLE:D
   4:	dreturn
  LineNumberTable: 
   line 91: 0


public double NaN_DOUBLE();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#108; //Field NaN_DOUBLE:D
   4:	dreturn
  LineNumberTable: 
   line 87: 0


public double MAX_DOUBLE();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#104; //Field MAX_DOUBLE:D
   4:	dreturn
  LineNumberTable: 
   line 83: 0


public double EPS_DOUBLE();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#102; //Field EPS_DOUBLE:D
   4:	dreturn
  LineNumberTable: 
   line 79: 0


public double MIN_DOUBLE();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#98; //Field MIN_DOUBLE:D
   4:	dreturn
  LineNumberTable: 
   line 75: 0


public float POS_INF_FLOAT();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#94; //Field POS_INF_FLOAT:F
   4:	freturn
  LineNumberTable: 
   line 71: 0


public float NEG_INF_FLOAT();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#91; //Field NEG_INF_FLOAT:F
   4:	freturn
  LineNumberTable: 
   line 67: 0


public float NaN_FLOAT();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#88; //Field NaN_FLOAT:F
   4:	freturn
  LineNumberTable: 
   line 63: 0


public float MAX_FLOAT();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#85; //Field MAX_FLOAT:F
   4:	freturn
  LineNumberTable: 
   line 59: 0


public float EPS_FLOAT();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#83; //Field EPS_FLOAT:F
   4:	freturn
  LineNumberTable: 
   line 55: 0


public float MIN_FLOAT();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#80; //Field MIN_FLOAT:F
   4:	freturn
  LineNumberTable: 
   line 51: 0


public long MAX_LONG();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#77; //Field MAX_LONG:J
   4:	lreturn
  LineNumberTable: 
   line 47: 0


public long MIN_LONG();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#73; //Field MIN_LONG:J
   4:	lreturn
  LineNumberTable: 
   line 44: 0


public int MAX_INT();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#69; //Field MAX_INT:I
   4:	ireturn
  LineNumberTable: 
   line 41: 0


public int MIN_INT();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#66; //Field MIN_INT:I
   4:	ireturn
  LineNumberTable: 
   line 38: 0


public char MAX_CHAR();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#63; //Field MAX_CHAR:C
   4:	ireturn
  LineNumberTable: 
   line 35: 0


public char MIN_CHAR();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#60; //Field MIN_CHAR:C
   4:	ireturn
  LineNumberTable: 
   line 32: 0


public short MAX_SHORT();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#58; //Field MAX_SHORT:S
   4:	ireturn
  LineNumberTable: 
   line 29: 0


public short MIN_SHORT();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#56; //Field MIN_SHORT:S
   4:	ireturn
  LineNumberTable: 
   line 26: 0


public byte MAX_BYTE();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#54; //Field MAX_BYTE:B
   4:	ireturn
  LineNumberTable: 
   line 23: 0


public byte MIN_BYTE();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#52; //Field MIN_BYTE:B
   4:	ireturn
  LineNumberTable: 
   line 20: 0


}

