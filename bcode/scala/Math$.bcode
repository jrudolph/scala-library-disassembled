Compiled from "Math.scala"
public final class scala.Math$ extends java.lang.Object implements scala.ScalaObject
  SourceFile: "Math.scala"
  Scala: length = 0x
   
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Math.scala;
const #3 = Asciz	Scala;
const #4 = Asciz	MODULE$;
const #5 = Asciz	Lscala/Math$;;
const #6 = Asciz	<clinit>;
const #7 = Asciz	()V;
const #8 = Asciz	Code;
const #9 = Asciz	scala/Math$;
const #10 = class	#9;	//  scala/Math$
const #11 = Asciz	<init>;
const #12 = NameAndType	#11:#7;//  "<init>":()V
const #13 = Method	#10.#12;	//  scala/Math$."<init>":()V
const #14 = Asciz	Pi;
const #15 = Asciz	D;
const #16 = Asciz	E;
const #17 = Asciz	POS_INF_DOUBLE;
const #18 = Asciz	NEG_INF_DOUBLE;
const #19 = Asciz	NaN_DOUBLE;
const #20 = Asciz	MAX_DOUBLE;
const #21 = Asciz	EPS_DOUBLE;
const #22 = Asciz	MIN_DOUBLE;
const #23 = Asciz	POS_INF_FLOAT;
const #24 = Asciz	F;
const #25 = Asciz	NEG_INF_FLOAT;
const #26 = Asciz	NaN_FLOAT;
const #27 = Asciz	MAX_FLOAT;
const #28 = Asciz	EPS_FLOAT;
const #29 = Asciz	MIN_FLOAT;
const #30 = Asciz	MAX_LONG;
const #31 = Asciz	J;
const #32 = Asciz	MIN_LONG;
const #33 = Asciz	MAX_INT;
const #34 = Asciz	I;
const #35 = Asciz	MIN_INT;
const #36 = Asciz	MAX_CHAR;
const #37 = Asciz	C;
const #38 = Asciz	MIN_CHAR;
const #39 = Asciz	MAX_SHORT;
const #40 = Asciz	S;
const #41 = Asciz	MIN_SHORT;
const #42 = Asciz	MAX_BYTE;
const #43 = Asciz	B;
const #44 = Asciz	MIN_BYTE;
const #45 = Asciz	LineNumberTable;
const #46 = Asciz	java/lang/Object;
const #47 = class	#46;	//  java/lang/Object
const #48 = Method	#47.#12;	//  java/lang/Object."<init>":()V
const #49 = NameAndType	#4:#5;//  MODULE$:Lscala/Math$;
const #50 = Field	#10.#49;	//  scala/Math$.MODULE$:Lscala/Math$;
const #51 = NameAndType	#44:#43;//  MIN_BYTE:B
const #52 = Field	#10.#51;	//  scala/Math$.MIN_BYTE:B
const #53 = NameAndType	#42:#43;//  MAX_BYTE:B
const #54 = Field	#10.#53;	//  scala/Math$.MAX_BYTE:B
const #55 = NameAndType	#41:#40;//  MIN_SHORT:S
const #56 = Field	#10.#55;	//  scala/Math$.MIN_SHORT:S
const #57 = NameAndType	#39:#40;//  MAX_SHORT:S
const #58 = Field	#10.#57;	//  scala/Math$.MAX_SHORT:S
const #59 = NameAndType	#38:#37;//  MIN_CHAR:C
const #60 = Field	#10.#59;	//  scala/Math$.MIN_CHAR:C
const #61 = int	65535;
const #62 = NameAndType	#36:#37;//  MAX_CHAR:C
const #63 = Field	#10.#62;	//  scala/Math$.MAX_CHAR:C
const #64 = int	-2147483648;
const #65 = NameAndType	#35:#34;//  MIN_INT:I
const #66 = Field	#10.#65;	//  scala/Math$.MIN_INT:I
const #67 = int	2147483647;
const #68 = NameAndType	#33:#34;//  MAX_INT:I
const #69 = Field	#10.#68;	//  scala/Math$.MAX_INT:I
const #70 = long	-9223372036854775808l;
const #72 = NameAndType	#32:#31;//  MIN_LONG:J
const #73 = Field	#10.#72;	//  scala/Math$.MIN_LONG:J
const #74 = long	9223372036854775807l;
const #76 = NameAndType	#30:#31;//  MAX_LONG:J
const #77 = Field	#10.#76;	//  scala/Math$.MAX_LONG:J
const #78 = float	3.4028235E38f;
const #79 = NameAndType	#29:#24;//  MIN_FLOAT:F
const #80 = Field	#10.#79;	//  scala/Math$.MIN_FLOAT:F
const #81 = float	1.4E-45f;
const #82 = NameAndType	#28:#24;//  EPS_FLOAT:F
const #83 = Field	#10.#82;	//  scala/Math$.EPS_FLOAT:F
const #84 = NameAndType	#27:#24;//  MAX_FLOAT:F
const #85 = Field	#10.#84;	//  scala/Math$.MAX_FLOAT:F
const #86 = float	NaNf;
const #87 = NameAndType	#26:#24;//  NaN_FLOAT:F
const #88 = Field	#10.#87;	//  scala/Math$.NaN_FLOAT:F
const #89 = float	-Infinityf;
const #90 = NameAndType	#25:#24;//  NEG_INF_FLOAT:F
const #91 = Field	#10.#90;	//  scala/Math$.NEG_INF_FLOAT:F
const #92 = float	Infinityf;
const #93 = NameAndType	#23:#24;//  POS_INF_FLOAT:F
const #94 = Field	#10.#93;	//  scala/Math$.POS_INF_FLOAT:F
const #95 = double	1.7976931348623157E308d;
const #97 = NameAndType	#22:#15;//  MIN_DOUBLE:D
const #98 = Field	#10.#97;	//  scala/Math$.MIN_DOUBLE:D
const #99 = double	4.9E-324d;
const #101 = NameAndType	#21:#15;//  EPS_DOUBLE:D
const #102 = Field	#10.#101;	//  scala/Math$.EPS_DOUBLE:D
const #103 = NameAndType	#20:#15;//  MAX_DOUBLE:D
const #104 = Field	#10.#103;	//  scala/Math$.MAX_DOUBLE:D
const #105 = double	NaNd;
const #107 = NameAndType	#19:#15;//  NaN_DOUBLE:D
const #108 = Field	#10.#107;	//  scala/Math$.NaN_DOUBLE:D
const #109 = double	-Infinityd;
const #111 = NameAndType	#18:#15;//  NEG_INF_DOUBLE:D
const #112 = Field	#10.#111;	//  scala/Math$.NEG_INF_DOUBLE:D
const #113 = double	Infinityd;
const #115 = NameAndType	#17:#15;//  POS_INF_DOUBLE:D
const #116 = Field	#10.#115;	//  scala/Math$.POS_INF_DOUBLE:D
const #117 = double	2.718281828459045d;
const #119 = NameAndType	#16:#15;//  E:D
const #120 = Field	#10.#119;	//  scala/Math$.E:D
const #121 = double	3.141592653589793d;
const #123 = NameAndType	#14:#15;//  Pi:D
const #124 = Field	#10.#123;	//  scala/Math$.Pi:D
const #125 = Asciz	gd8$1;
const #126 = Asciz	(I)Z;
const #127 = Asciz	gd7$1;
const #128 = Asciz	gd6$1;
const #129 = Asciz	(J)Z;
const #130 = Asciz	gd5$1;
const #131 = Asciz	gd4$1;
const #132 = Asciz	(F)Z;
const #133 = Asciz	gd3$1;
const #134 = Asciz	gd2$1;
const #135 = Asciz	(D)Z;
const #136 = Asciz	gd1$1;
const #137 = Asciz	signum;
const #138 = Asciz	(I)I;
const #139 = Asciz	scala/runtime/BoxesRunTime;
const #140 = class	#139;	//  scala/runtime/BoxesRunTime
const #141 = Asciz	boxToInteger;
const #142 = Asciz	(I)Ljava/lang/Integer;;
const #143 = NameAndType	#141:#142;//  boxToInteger:(I)Ljava/lang/Integer;
const #144 = Method	#140.#143;	//  scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
const #145 = Asciz	equals;
const #146 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)Z;
const #147 = NameAndType	#145:#146;//  equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
const #148 = Method	#140.#147;	//  scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
const #149 = NameAndType	#127:#126;//  gd7$1:(I)Z
const #150 = Method	#10.#149;	//  scala/Math$.gd7$1:(I)Z
const #151 = NameAndType	#125:#126;//  gd8$1:(I)Z
const #152 = Method	#10.#151;	//  scala/Math$.gd8$1:(I)Z
const #153 = Asciz	scala/MatchError;
const #154 = class	#153;	//  scala/MatchError
const #155 = Asciz	toString;
const #156 = Asciz	()Ljava/lang/String;;
const #157 = NameAndType	#155:#156;//  toString:()Ljava/lang/String;
const #158 = Method	#47.#157;	//  java/lang/Object.toString:()Ljava/lang/String;
const #159 = Asciz	(Ljava/lang/String;)V;
const #160 = NameAndType	#11:#159;//  "<init>":(Ljava/lang/String;)V
const #161 = Method	#154.#160;	//  scala/MatchError."<init>":(Ljava/lang/String;)V
const #162 = Asciz	this;
const #163 = Asciz	x;
const #164 = Asciz	temp7;
const #165 = Asciz	LocalVariableTable;
const #166 = Asciz	(J)J;
const #167 = Asciz	boxToLong;
const #168 = Asciz	(J)Ljava/lang/Long;;
const #169 = NameAndType	#167:#168;//  boxToLong:(J)Ljava/lang/Long;
const #170 = Method	#140.#169;	//  scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
const #171 = NameAndType	#130:#129;//  gd5$1:(J)Z
const #172 = Method	#10.#171;	//  scala/Math$.gd5$1:(J)Z
const #173 = long	-1l;
const #175 = NameAndType	#128:#129;//  gd6$1:(J)Z
const #176 = Method	#10.#175;	//  scala/Math$.gd6$1:(J)Z
const #177 = Asciz	temp5;
const #178 = Asciz	(F)F;
const #179 = Asciz	boxToFloat;
const #180 = Asciz	(F)Ljava/lang/Float;;
const #181 = NameAndType	#179:#180;//  boxToFloat:(F)Ljava/lang/Float;
const #182 = Method	#140.#181;	//  scala/runtime/BoxesRunTime.boxToFloat:(F)Ljava/lang/Float;
const #183 = NameAndType	#133:#132;//  gd3$1:(F)Z
const #184 = Method	#10.#183;	//  scala/Math$.gd3$1:(F)Z
const #185 = float	-1.0f;
const #186 = NameAndType	#131:#132;//  gd4$1:(F)Z
const #187 = Method	#10.#186;	//  scala/Math$.gd4$1:(F)Z
const #188 = Asciz	temp3;
const #189 = Asciz	(D)D;
const #190 = Asciz	boxToDouble;
const #191 = Asciz	(D)Ljava/lang/Double;;
const #192 = NameAndType	#190:#191;//  boxToDouble:(D)Ljava/lang/Double;
const #193 = Method	#140.#192;	//  scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
const #194 = NameAndType	#136:#135;//  gd1$1:(D)Z
const #195 = Method	#10.#194;	//  scala/Math$.gd1$1:(D)Z
const #196 = double	-1.0d;
const #198 = NameAndType	#134:#135;//  gd2$1:(D)Z
const #199 = Method	#10.#198;	//  scala/Math$.gd2$1:(D)Z
const #200 = Asciz	temp1;
const #201 = Asciz	min;
const #202 = Asciz	(DD)D;
const #203 = Asciz	java/lang/Math;
const #204 = class	#203;	//  java/lang/Math
const #205 = NameAndType	#201:#202;//  min:(DD)D
const #206 = Method	#204.#205;	//  java/lang/Math.min:(DD)D
const #207 = Asciz	y;
const #208 = Asciz	(FF)F;
const #209 = NameAndType	#201:#208;//  min:(FF)F
const #210 = Method	#204.#209;	//  java/lang/Math.min:(FF)F
const #211 = Asciz	(JJ)J;
const #212 = NameAndType	#201:#211;//  min:(JJ)J
const #213 = Method	#204.#212;	//  java/lang/Math.min:(JJ)J
const #214 = Asciz	(II)I;
const #215 = NameAndType	#201:#214;//  min:(II)I
const #216 = Method	#204.#215;	//  java/lang/Math.min:(II)I
const #217 = Asciz	max;
const #218 = NameAndType	#217:#202;//  max:(DD)D
const #219 = Method	#204.#218;	//  java/lang/Math.max:(DD)D
const #220 = NameAndType	#217:#208;//  max:(FF)F
const #221 = Method	#204.#220;	//  java/lang/Math.max:(FF)F
const #222 = NameAndType	#217:#211;//  max:(JJ)J
const #223 = Method	#204.#222;	//  java/lang/Math.max:(JJ)J
const #224 = NameAndType	#217:#214;//  max:(II)I
const #225 = Method	#204.#224;	//  java/lang/Math.max:(II)I
const #226 = Asciz	abs;
const #227 = NameAndType	#226:#189;//  abs:(D)D
const #228 = Method	#204.#227;	//  java/lang/Math.abs:(D)D
const #229 = NameAndType	#226:#178;//  abs:(F)F
const #230 = Method	#204.#229;	//  java/lang/Math.abs:(F)F
const #231 = NameAndType	#226:#166;//  abs:(J)J
const #232 = Method	#204.#231;	//  java/lang/Math.abs:(J)J
const #233 = NameAndType	#226:#138;//  abs:(I)I
const #234 = Method	#204.#233;	//  java/lang/Math.abs:(I)I
const #235 = Asciz	round;
const #236 = Asciz	(D)J;
const #237 = NameAndType	#235:#236;//  round:(D)J
const #238 = Method	#204.#237;	//  java/lang/Math.round:(D)J
const #239 = Asciz	(F)I;
const #240 = NameAndType	#235:#239;//  round:(F)I
const #241 = Method	#204.#240;	//  java/lang/Math.round:(F)I
const #242 = Asciz	pow;
const #243 = NameAndType	#242:#202;//  pow:(DD)D
const #244 = Method	#204.#243;	//  java/lang/Math.pow:(DD)D
const #245 = Asciz	atan2;
const #246 = NameAndType	#245:#202;//  atan2:(DD)D
const #247 = Method	#204.#246;	//  java/lang/Math.atan2:(DD)D
const #248 = Asciz	rint;
const #249 = NameAndType	#248:#189;//  rint:(D)D
const #250 = Method	#204.#249;	//  java/lang/Math.rint:(D)D
const #251 = Asciz	floor;
const #252 = NameAndType	#251:#189;//  floor:(D)D
const #253 = Method	#204.#252;	//  java/lang/Math.floor:(D)D
const #254 = Asciz	ceil;
const #255 = NameAndType	#254:#189;//  ceil:(D)D
const #256 = Method	#204.#255;	//  java/lang/Math.ceil:(D)D
const #257 = Asciz	IEEEremainder;
const #258 = NameAndType	#257:#202;//  IEEEremainder:(DD)D
const #259 = Method	#204.#258;	//  java/lang/Math.IEEEremainder:(DD)D
const #260 = Asciz	sqrt;
const #261 = NameAndType	#260:#189;//  sqrt:(D)D
const #262 = Method	#204.#261;	//  java/lang/Math.sqrt:(D)D
const #263 = Asciz	log;
const #264 = NameAndType	#263:#189;//  log:(D)D
const #265 = Method	#204.#264;	//  java/lang/Math.log:(D)D
const #266 = Asciz	exp;
const #267 = NameAndType	#266:#189;//  exp:(D)D
const #268 = Method	#204.#267;	//  java/lang/Math.exp:(D)D
const #269 = Asciz	toDegrees;
const #270 = NameAndType	#269:#189;//  toDegrees:(D)D
const #271 = Method	#204.#270;	//  java/lang/Math.toDegrees:(D)D
const #272 = Asciz	toRadians;
const #273 = NameAndType	#272:#189;//  toRadians:(D)D
const #274 = Method	#204.#273;	//  java/lang/Math.toRadians:(D)D
const #275 = Asciz	atan;
const #276 = NameAndType	#275:#189;//  atan:(D)D
const #277 = Method	#204.#276;	//  java/lang/Math.atan:(D)D
const #278 = Asciz	acos;
const #279 = NameAndType	#278:#189;//  acos:(D)D
const #280 = Method	#204.#279;	//  java/lang/Math.acos:(D)D
const #281 = Asciz	asin;
const #282 = NameAndType	#281:#189;//  asin:(D)D
const #283 = Method	#204.#282;	//  java/lang/Math.asin:(D)D
const #284 = Asciz	tan;
const #285 = NameAndType	#284:#189;//  tan:(D)D
const #286 = Method	#204.#285;	//  java/lang/Math.tan:(D)D
const #287 = Asciz	cos;
const #288 = NameAndType	#287:#189;//  cos:(D)D
const #289 = Method	#204.#288;	//  java/lang/Math.cos:(D)D
const #290 = Asciz	sin;
const #291 = NameAndType	#290:#189;//  sin:(D)D
const #292 = Method	#204.#291;	//  java/lang/Math.sin:(D)D
const #293 = Asciz	random;
const #294 = Asciz	()D;
const #295 = NameAndType	#293:#294;//  random:()D
const #296 = Method	#204.#295;	//  java/lang/Math.random:()D
const #297 = Asciz	()F;
const #298 = Asciz	()J;
const #299 = Asciz	()I;
const #300 = Asciz	()C;
const #301 = Asciz	()S;
const #302 = Asciz	()B;
const #303 = Asciz	scala/ScalaObject;
const #304 = class	#303;	//  scala/ScalaObject

{
public static final scala.Math$ MODULE$;

public static {};
  Code:
   Stack=1, Locals=0, Args_size=0
   0:	new	#10; //class scala/Math$
   3:	invokespecial	#13; //Method "<init>":()V
   6:	return

public int signum(int);
  Code:
   Stack=3, Locals=3, Args_size=2
   0:	iload_1
   1:	istore_2
   2:	iload_2
   3:	invokestatic	#144; //Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   6:	iconst_0
   7:	invokestatic	#144; //Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   10:	invokestatic	#148; //Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
   13:	ifeq	20
   16:	iconst_0
   17:	goto	41
   20:	aload_0
   21:	iload_2
   22:	invokespecial	#150; //Method gd7$1:(I)Z
   25:	ifeq	32
   28:	iconst_m1
   29:	goto	41
   32:	aload_0
   33:	iload_2
   34:	invokespecial	#152; //Method gd8$1:(I)Z
   37:	ifeq	42
   40:	iconst_1
   41:	ireturn
   42:	new	#154; //class scala/MatchError
   45:	dup
   46:	iload_2
   47:	invokestatic	#144; //Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   50:	invokevirtual	#158; //Method java/lang/Object.toString:()Ljava/lang/String;
   53:	invokespecial	#161; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   56:	athrow
  LineNumberTable: 
   line 186: 0
   line 187: 21
   line 186: 22
   line 187: 28
   line 186: 32
   line 188: 33
   line 186: 34
   line 188: 40
   line 186: 41

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      57      0    this       Lscala/Math$;
   0      57      1    x       I
   2      55      2    temp7       I


public long signum(long);
  Code:
   Stack=4, Locals=5, Args_size=2
   0:	lload_1
   1:	lstore_3
   2:	lload_3
   3:	invokestatic	#170; //Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
   6:	lconst_0
   7:	invokestatic	#170; //Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
   10:	invokestatic	#148; //Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
   13:	ifeq	20
   16:	lconst_0
   17:	goto	43
   20:	aload_0
   21:	lload_3
   22:	invokespecial	#172; //Method gd5$1:(J)Z
   25:	ifeq	34
   28:	ldc2_w	#173; //long -1l
   31:	goto	43
   34:	aload_0
   35:	lload_3
   36:	invokespecial	#176; //Method gd6$1:(J)Z
   39:	ifeq	44
   42:	lconst_1
   43:	lreturn
   44:	new	#154; //class scala/MatchError
   47:	dup
   48:	lload_3
   49:	invokestatic	#170; //Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
   52:	invokevirtual	#158; //Method java/lang/Object.toString:()Ljava/lang/String;
   55:	invokespecial	#161; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   58:	athrow
  LineNumberTable: 
   line 183: 0
   line 184: 21
   line 183: 22
   line 184: 28
   line 183: 34
   line 185: 35
   line 183: 36
   line 185: 42
   line 183: 43

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      59      0    this       Lscala/Math$;
   0      59      1    x       J
   2      57      3    temp5       J


public float signum(float);
  Code:
   Stack=3, Locals=3, Args_size=2
   0:	fload_1
   1:	fstore_2
   2:	fload_2
   3:	invokestatic	#182; //Method scala/runtime/BoxesRunTime.boxToFloat:(F)Ljava/lang/Float;
   6:	fconst_0
   7:	invokestatic	#182; //Method scala/runtime/BoxesRunTime.boxToFloat:(F)Ljava/lang/Float;
   10:	invokestatic	#148; //Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
   13:	ifeq	20
   16:	fconst_0
   17:	goto	42
   20:	aload_0
   21:	fload_2
   22:	invokespecial	#184; //Method gd3$1:(F)Z
   25:	ifeq	33
   28:	ldc	#185; //float -1.0f
   30:	goto	42
   33:	aload_0
   34:	fload_2
   35:	invokespecial	#187; //Method gd4$1:(F)Z
   38:	ifeq	43
   41:	fconst_1
   42:	freturn
   43:	new	#154; //class scala/MatchError
   46:	dup
   47:	fload_2
   48:	invokestatic	#182; //Method scala/runtime/BoxesRunTime.boxToFloat:(F)Ljava/lang/Float;
   51:	invokevirtual	#158; //Method java/lang/Object.toString:()Ljava/lang/String;
   54:	invokespecial	#161; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   57:	athrow
  LineNumberTable: 
   line 180: 0
   line 181: 21
   line 180: 22
   line 181: 28
   line 180: 33
   line 182: 34
   line 180: 35
   line 182: 41
   line 180: 42

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      58      0    this       Lscala/Math$;
   0      58      1    x       F
   2      56      2    temp3       F


public double signum(double);
  Code:
   Stack=4, Locals=5, Args_size=2
   0:	dload_1
   1:	dstore_3
   2:	dload_3
   3:	invokestatic	#193; //Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
   6:	iconst_0
   7:	invokestatic	#144; //Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   10:	invokestatic	#148; //Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
   13:	ifeq	20
   16:	dconst_0
   17:	goto	43
   20:	aload_0
   21:	dload_3
   22:	invokespecial	#195; //Method gd1$1:(D)Z
   25:	ifeq	34
   28:	ldc2_w	#196; //double -1.0d
   31:	goto	43
   34:	aload_0
   35:	dload_3
   36:	invokespecial	#199; //Method gd2$1:(D)Z
   39:	ifeq	44
   42:	dconst_1
   43:	dreturn
   44:	new	#154; //class scala/MatchError
   47:	dup
   48:	dload_3
   49:	invokestatic	#193; //Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
   52:	invokevirtual	#158; //Method java/lang/Object.toString:()Ljava/lang/String;
   55:	invokespecial	#161; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   58:	athrow
  LineNumberTable: 
   line 177: 0
   line 178: 21
   line 177: 22
   line 178: 28
   line 177: 34
   line 179: 35
   line 177: 36
   line 179: 42
   line 177: 43

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      59      0    this       Lscala/Math$;
   0      59      1    x       D
   2      57      3    temp1       D


public double min(double, double);
  Code:
   Stack=4, Locals=5, Args_size=3
   0:	dload_1
   1:	dload_3
   2:	invokestatic	#206; //Method java/lang/Math.min:(DD)D
   5:	dreturn
  LineNumberTable: 
   line 175: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/Math$;
   0      6      1    x       D
   0      6      3    y       D


public float min(float, float);
  Code:
   Stack=2, Locals=3, Args_size=3
   0:	fload_1
   1:	fload_2
   2:	invokestatic	#210; //Method java/lang/Math.min:(FF)F
   5:	freturn
  LineNumberTable: 
   line 174: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/Math$;
   0      6      1    x       F
   0      6      2    y       F


public long min(long, long);
  Code:
   Stack=4, Locals=5, Args_size=3
   0:	lload_1
   1:	lload_3
   2:	invokestatic	#213; //Method java/lang/Math.min:(JJ)J
   5:	lreturn
  LineNumberTable: 
   line 173: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/Math$;
   0      6      1    x       J
   0      6      3    y       J


public int min(int, int);
  Code:
   Stack=2, Locals=3, Args_size=3
   0:	iload_1
   1:	iload_2
   2:	invokestatic	#216; //Method java/lang/Math.min:(II)I
   5:	ireturn
  LineNumberTable: 
   line 172: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/Math$;
   0      6      1    x       I
   0      6      2    y       I


public double max(double, double);
  Code:
   Stack=4, Locals=5, Args_size=3
   0:	dload_1
   1:	dload_3
   2:	invokestatic	#219; //Method java/lang/Math.max:(DD)D
   5:	dreturn
  LineNumberTable: 
   line 170: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/Math$;
   0      6      1    x       D
   0      6      3    y       D


public float max(float, float);
  Code:
   Stack=2, Locals=3, Args_size=3
   0:	fload_1
   1:	fload_2
   2:	invokestatic	#221; //Method java/lang/Math.max:(FF)F
   5:	freturn
  LineNumberTable: 
   line 169: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/Math$;
   0      6      1    x       F
   0      6      2    y       F


public long max(long, long);
  Code:
   Stack=4, Locals=5, Args_size=3
   0:	lload_1
   1:	lload_3
   2:	invokestatic	#223; //Method java/lang/Math.max:(JJ)J
   5:	lreturn
  LineNumberTable: 
   line 168: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/Math$;
   0      6      1    x       J
   0      6      3    y       J


public int max(int, int);
  Code:
   Stack=2, Locals=3, Args_size=3
   0:	iload_1
   1:	iload_2
   2:	invokestatic	#225; //Method java/lang/Math.max:(II)I
   5:	ireturn
  LineNumberTable: 
   line 167: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/Math$;
   0      6      1    x       I
   0      6      2    y       I


public double abs(double);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	dload_1
   1:	invokestatic	#228; //Method java/lang/Math.abs:(D)D
   4:	dreturn
  LineNumberTable: 
   line 165: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    this       Lscala/Math$;
   0      5      1    x       D


public float abs(float);
  Code:
   Stack=1, Locals=2, Args_size=2
   0:	fload_1
   1:	invokestatic	#230; //Method java/lang/Math.abs:(F)F
   4:	freturn
  LineNumberTable: 
   line 164: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    this       Lscala/Math$;
   0      5      1    x       F


public long abs(long);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	lload_1
   1:	invokestatic	#232; //Method java/lang/Math.abs:(J)J
   4:	lreturn
  LineNumberTable: 
   line 163: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    this       Lscala/Math$;
   0      5      1    x       J


public int abs(int);
  Code:
   Stack=1, Locals=2, Args_size=2
   0:	iload_1
   1:	invokestatic	#234; //Method java/lang/Math.abs:(I)I
   4:	ireturn
  LineNumberTable: 
   line 162: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    this       Lscala/Math$;
   0      5      1    x       I


public long round(double);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	dload_1
   1:	invokestatic	#238; //Method java/lang/Math.round:(D)J
   4:	lreturn
  LineNumberTable: 
   line 161: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    this       Lscala/Math$;
   0      5      1    x       D


public int round(float);
  Code:
   Stack=1, Locals=2, Args_size=2
   0:	fload_1
   1:	invokestatic	#241; //Method java/lang/Math.round:(F)I
   4:	ireturn
  LineNumberTable: 
   line 160: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    this       Lscala/Math$;
   0      5      1    x       F


public double pow(double, double);
  Code:
   Stack=4, Locals=5, Args_size=3
   0:	dload_1
   1:	dload_3
   2:	invokestatic	#244; //Method java/lang/Math.pow:(DD)D
   5:	dreturn
  LineNumberTable: 
   line 152: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/Math$;
   0      6      1    x       D
   0      6      3    y       D


public double atan2(double, double);
  Code:
   Stack=4, Locals=5, Args_size=3
   0:	dload_1
   1:	dload_3
   2:	invokestatic	#247; //Method java/lang/Math.atan2:(DD)D
   5:	dreturn
  LineNumberTable: 
   line 143: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/Math$;
   0      6      1    y       D
   0      6      3    x       D


public double rint(double);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	dload_1
   1:	invokestatic	#250; //Method java/lang/Math.rint:(D)D
   4:	dreturn
  LineNumberTable: 
   line 132: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    this       Lscala/Math$;
   0      5      1    x       D


public double floor(double);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	dload_1
   1:	invokestatic	#253; //Method java/lang/Math.floor:(D)D
   4:	dreturn
  LineNumberTable: 
   line 123: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    this       Lscala/Math$;
   0      5      1    x       D


public double ceil(double);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	dload_1
   1:	invokestatic	#256; //Method java/lang/Math.ceil:(D)D
   4:	dreturn
  LineNumberTable: 
   line 122: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    this       Lscala/Math$;
   0      5      1    x       D


public double IEEEremainder(double, double);
  Code:
   Stack=4, Locals=5, Args_size=3
   0:	dload_1
   1:	dload_3
   2:	invokestatic	#259; //Method java/lang/Math.IEEEremainder:(DD)D
   5:	dreturn
  LineNumberTable: 
   line 120: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/Math$;
   0      6      1    x       D
   0      6      3    y       D


public double sqrt(double);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	dload_1
   1:	invokestatic	#262; //Method java/lang/Math.sqrt:(D)D
   4:	dreturn
  LineNumberTable: 
   line 119: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    this       Lscala/Math$;
   0      5      1    x       D


public double log(double);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	dload_1
   1:	invokestatic	#265; //Method java/lang/Math.log:(D)D
   4:	dreturn
  LineNumberTable: 
   line 118: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    this       Lscala/Math$;
   0      5      1    x       D


public double exp(double);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	dload_1
   1:	invokestatic	#268; //Method java/lang/Math.exp:(D)D
   4:	dreturn
  LineNumberTable: 
   line 117: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    this       Lscala/Math$;
   0      5      1    x       D


public double toDegrees(double);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	dload_1
   1:	invokestatic	#271; //Method java/lang/Math.toDegrees:(D)D
   4:	dreturn
  LineNumberTable: 
   line 108: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    this       Lscala/Math$;
   0      5      1    x       D


public double toRadians(double);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	dload_1
   1:	invokestatic	#274; //Method java/lang/Math.toRadians:(D)D
   4:	dreturn
  LineNumberTable: 
   line 100: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    this       Lscala/Math$;
   0      5      1    x       D


public double atan(double);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	dload_1
   1:	invokestatic	#277; //Method java/lang/Math.atan:(D)D
   4:	dreturn
  LineNumberTable: 
   line 92: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    this       Lscala/Math$;
   0      5      1    x       D


public double acos(double);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	dload_1
   1:	invokestatic	#280; //Method java/lang/Math.acos:(D)D
   4:	dreturn
  LineNumberTable: 
   line 91: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    this       Lscala/Math$;
   0      5      1    x       D


public double asin(double);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	dload_1
   1:	invokestatic	#283; //Method java/lang/Math.asin:(D)D
   4:	dreturn
  LineNumberTable: 
   line 90: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    this       Lscala/Math$;
   0      5      1    x       D


public double tan(double);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	dload_1
   1:	invokestatic	#286; //Method java/lang/Math.tan:(D)D
   4:	dreturn
  LineNumberTable: 
   line 89: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    this       Lscala/Math$;
   0      5      1    x       D


public double cos(double);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	dload_1
   1:	invokestatic	#289; //Method java/lang/Math.cos:(D)D
   4:	dreturn
  LineNumberTable: 
   line 88: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    this       Lscala/Math$;
   0      5      1    x       D


public double sin(double);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	dload_1
   1:	invokestatic	#292; //Method java/lang/Math.sin:(D)D
   4:	dreturn
  LineNumberTable: 
   line 87: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    this       Lscala/Math$;
   0      5      1    x       D


public double random();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	invokestatic	#296; //Method java/lang/Math.random:()D
   3:	dreturn
  LineNumberTable: 
   line 85: 0


public double Pi();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#124; //Field Pi:D
   4:	dreturn
  LineNumberTable: 
   line 80: 0


public double E();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#120; //Field E:D
   4:	dreturn
  LineNumberTable: 
   line 74: 0


public double POS_INF_DOUBLE();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#116; //Field POS_INF_DOUBLE:D
   4:	dreturn
  LineNumberTable: 
   line 69: 0


public double NEG_INF_DOUBLE();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#112; //Field NEG_INF_DOUBLE:D
   4:	dreturn
  LineNumberTable: 
   line 67: 0


public double NaN_DOUBLE();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#108; //Field NaN_DOUBLE:D
   4:	dreturn
  LineNumberTable: 
   line 65: 0


public double MAX_DOUBLE();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#104; //Field MAX_DOUBLE:D
   4:	dreturn
  LineNumberTable: 
   line 63: 0


public double EPS_DOUBLE();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#102; //Field EPS_DOUBLE:D
   4:	dreturn
  LineNumberTable: 
   line 61: 0


public double MIN_DOUBLE();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#98; //Field MIN_DOUBLE:D
   4:	dreturn
  LineNumberTable: 
   line 59: 0


public float POS_INF_FLOAT();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#94; //Field POS_INF_FLOAT:F
   4:	freturn
  LineNumberTable: 
   line 56: 0


public float NEG_INF_FLOAT();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#91; //Field NEG_INF_FLOAT:F
   4:	freturn
  LineNumberTable: 
   line 54: 0


public float NaN_FLOAT();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#88; //Field NaN_FLOAT:F
   4:	freturn
  LineNumberTable: 
   line 52: 0


public float MAX_FLOAT();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#85; //Field MAX_FLOAT:F
   4:	freturn
  LineNumberTable: 
   line 50: 0


public float EPS_FLOAT();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#83; //Field EPS_FLOAT:F
   4:	freturn
  LineNumberTable: 
   line 48: 0


public float MIN_FLOAT();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#80; //Field MIN_FLOAT:F
   4:	freturn
  LineNumberTable: 
   line 46: 0


public long MAX_LONG();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#77; //Field MAX_LONG:J
   4:	lreturn
  LineNumberTable: 
   line 43: 0


public long MIN_LONG();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#73; //Field MIN_LONG:J
   4:	lreturn
  LineNumberTable: 
   line 41: 0


public int MAX_INT();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#69; //Field MAX_INT:I
   4:	ireturn
  LineNumberTable: 
   line 38: 0


public int MIN_INT();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#66; //Field MIN_INT:I
   4:	ireturn
  LineNumberTable: 
   line 36: 0


public char MAX_CHAR();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#63; //Field MAX_CHAR:C
   4:	ireturn
  LineNumberTable: 
   line 33: 0


public char MIN_CHAR();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#60; //Field MIN_CHAR:C
   4:	ireturn
  LineNumberTable: 
   line 31: 0


public short MAX_SHORT();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#58; //Field MAX_SHORT:S
   4:	ireturn
  LineNumberTable: 
   line 28: 0


public short MIN_SHORT();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#56; //Field MIN_SHORT:S
   4:	ireturn
  LineNumberTable: 
   line 26: 0


public byte MAX_BYTE();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#54; //Field MAX_BYTE:B
   4:	ireturn
  LineNumberTable: 
   line 23: 0


public byte MIN_BYTE();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#52; //Field MIN_BYTE:B
   4:	ireturn
  LineNumberTable: 
   line 21: 0


}

