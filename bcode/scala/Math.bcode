Compiled from "Math.scala"
public final class scala.Math extends java.lang.Object
  SourceFile: "Math.scala"
  ScalaSig: length = 0x90B
   05 00 FFFFFF82 22 07 05 01 02 FFFFFF88 02 05 01 04 4D 61 74
   68 0A 01 03 01 05 73 63 61 6C 61 03 00 10 02 06
   07 0D 01 02 06 08 08 02 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF88 02 09 02 04
   4D 61 74 68 13 03 07 0A 12 10 02 0B 10 0D 01 0C
   0A 02 0D 0E 01 04 6C 61 6E 67 0A 01 0F 01 04 6A
   61 76 61 09 02 11 0C 02 06 4F 62 6A 65 63 74 10
   02 06 13 09 02 14 02 02 0B 53 63 61 6C 61 4F 62
   6A 65 63 74 08 05 16 07 FFFFFF84 00 17 01 06 3C 69 6E
   69 74 3E 14 01 05 08 07 19 07 FFFFFFC2 FFFFFF80 FFFFFF84 00 1A 01
   08 4D 49 4E 5F 42 59 54 45 15 01 1B 10 02 06 1C
   09 02 1D 02 02 04 42 79 74 65 08 06 1F 07 FFFFFFA0 FFFFFF80
   04 1B 01 09 4D 49 4E 5F 42 59 54 45 20 08 07 21
   07 FFFFFFC2 FFFFFF80 FFFFFF84 00 1A 01 08 4D 41 58 5F 42 59 54 45
   08 06 23 07 FFFFFFA0 FFFFFF80 04 1B 01 09 4D 41 58 5F 42 59
   54 45 20 08 07 25 07 FFFFFFC2 FFFFFF80 FFFFFF84 00 26 01 09 4D 49
   4E 5F 53 48 4F 52 54 15 01 27 10 02 06 28 09 02
   29 02 02 05 53 68 6F 72 74 08 06 2B 07 FFFFFFA0 FFFFFF80 04
   27 01 0A 4D 49 4E 5F 53 48 4F 52 54 20 08 07 2D
   07 FFFFFFC2 FFFFFF80 FFFFFF84 00 26 01 09 4D 41 58 5F 53 48 4F 52
   54 08 06 2F 07 FFFFFFA0 FFFFFF80 04 27 01 0A 4D 41 58 5F 53
   48 4F 52 54 20 08 07 31 07 FFFFFFC2 FFFFFF80 FFFFFF84 00 32 01 08
   4D 49 4E 5F 43 48 41 52 15 01 33 10 02 06 34 09
   02 35 02 02 04 43 68 61 72 08 06 37 07 FFFFFFA0 FFFFFF80 04
   33 01 09 4D 49 4E 5F 43 48 41 52 20 08 07 39 07
   FFFFFFC2 FFFFFF80 FFFFFF84 00 32 01 08 4D 41 58 5F 43 48 41 52 08
   06 3B 07 FFFFFFA0 FFFFFF80 04 33 01 09 4D 41 58 5F 43 48 41
   52 20 08 07 3D 07 FFFFFFC2 FFFFFF80 FFFFFF84 00 3E 01 07 4D 49 4E
   5F 49 4E 54 15 01 3F 10 02 06 40 09 02 41 02 02
   03 49 6E 74 08 06 43 07 FFFFFFA0 FFFFFF80 04 3F 01 08 4D 49
   4E 5F 49 4E 54 20 08 07 45 07 FFFFFFC2 FFFFFF80 FFFFFF84 00 3E 01
   07 4D 41 58 5F 49 4E 54 08 06 47 07 FFFFFFA0 FFFFFF80 04 3F
   01 08 4D 41 58 5F 49 4E 54 20 08 07 49 07 FFFFFFC2 FFFFFF80
   FFFFFF84 00 4A 01 08 4D 49 4E 5F 4C 4F 4E 47 15 01 4B
   10 02 06 4C 09 02 4D 02 02 04 4C 6F 6E 67 08 06
   4F 07 FFFFFFA0 FFFFFF80 04 4B 01 09 4D 49 4E 5F 4C 4F 4E 47
   20 08 07 51 07 FFFFFFC2 FFFFFF80 FFFFFF84 00 4A 01 08 4D 41 58 5F
   4C 4F 4E 47 08 06 53 07 FFFFFFA0 FFFFFF80 04 4B 01 09 4D 41
   58 5F 4C 4F 4E 47 20 08 07 55 07 FFFFFFC2 FFFFFF80 FFFFFF84 00 56
   01 09 4D 49 4E 5F 46 4C 4F 41 54 15 01 57 10 02
   06 58 09 02 59 02 02 05 46 6C 6F 61 74 08 06 5B
   07 FFFFFFA0 FFFFFF80 04 57 01 0A 4D 49 4E 5F 46 4C 4F 41 54
   20 08 07 5D 07 FFFFFFC2 FFFFFF80 FFFFFF84 00 56 01 09 45 50 53 5F
   46 4C 4F 41 54 08 06 5F 07 FFFFFFA0 FFFFFF80 04 57 01 0A 45
   50 53 5F 46 4C 4F 41 54 20 08 07 61 07 FFFFFFC2 FFFFFF80 FFFFFF84
   00 56 01 09 4D 41 58 5F 46 4C 4F 41 54 08 06 63
   07 FFFFFFA0 FFFFFF80 04 57 01 0A 4D 41 58 5F 46 4C 4F 41 54
   20 08 07 65 07 FFFFFFC2 FFFFFF80 FFFFFF84 00 56 01 09 4E 61 4E 5F
   46 4C 4F 41 54 08 06 67 07 FFFFFFA0 FFFFFF80 04 57 01 0A 4E
   61 4E 5F 46 4C 4F 41 54 20 08 07 69 07 FFFFFFC2 FFFFFF80 FFFFFF84
   00 56 01 0D 4E 45 47 5F 49 4E 46 5F 46 4C 4F 41
   54 08 06 6B 07 FFFFFFA0 FFFFFF80 04 57 01 0E 4E 45 47 5F 49
   4E 46 5F 46 4C 4F 41 54 20 08 07 6D 07 FFFFFFC2 FFFFFF80 FFFFFF84
   00 56 01 0D 50 4F 53 5F 49 4E 46 5F 46 4C 4F 41
   54 08 06 6F 07 FFFFFFA0 FFFFFF80 04 57 01 0E 50 4F 53 5F 49
   4E 46 5F 46 4C 4F 41 54 20 08 07 71 07 FFFFFFC2 FFFFFF80 FFFFFF84
   00 72 01 0A 4D 49 4E 5F 44 4F 55 42 4C 45 15 01
   73 10 02 06 74 09 02 75 02 02 06 44 6F 75 62 6C
   65 08 06 77 07 FFFFFFA0 FFFFFF80 04 73 01 0B 4D 49 4E 5F 44
   4F 55 42 4C 45 20 08 07 79 07 FFFFFFC2 FFFFFF80 FFFFFF84 00 72 01
   0A 45 50 53 5F 44 4F 55 42 4C 45 08 06 7B 07 FFFFFFA0
   FFFFFF80 04 73 01 0B 45 50 53 5F 44 4F 55 42 4C 45 20
   08 07 7D 07 FFFFFFC2 FFFFFF80 FFFFFF84 00 72 01 0A 4D 41 58 5F 44
   4F 55 42 4C 45 08 06 7F 07 FFFFFFA0 FFFFFF80 04 73 01 0B 4D
   41 58 5F 44 4F 55 42 4C 45 20 08 08 FFFFFF81 01 07 FFFFFFC2
   FFFFFF80 FFFFFF84 00 72 01 0A 4E 61 4E 5F 44 4F 55 42 4C 45
   08 07 FFFFFF81 03 07 FFFFFFA0 FFFFFF80 04 73 01 0B 4E 61 4E 5F 44
   4F 55 42 4C 45 20 08 08 FFFFFF81 05 07 FFFFFFC2 FFFFFF80 FFFFFF84 00 72
   01 0E 4E 45 47 5F 49 4E 46 5F 44 4F 55 42 4C 45
   08 07 FFFFFF81 07 07 FFFFFFA0 FFFFFF80 04 73 01 0F 4E 45 47 5F 49
   4E 46 5F 44 4F 55 42 4C 45 20 08 08 FFFFFF81 09 07 FFFFFFC2
   FFFFFF80 FFFFFF84 00 72 01 0E 50 4F 53 5F 49 4E 46 5F 44 4F
   55 42 4C 45 08 07 FFFFFF81 0B 07 FFFFFFA0 FFFFFF80 04 73 01 0F 50
   4F 53 5F 49 4E 46 5F 44 4F 55 42 4C 45 20 08 08
   FFFFFF81 0D 07 FFFFFFC2 FFFFFF80 FFFFFF84 00 72 01 01 45 08 07 FFFFFF81 0F 07
   FFFFFFA0 FFFFFF80 04 73 01 02 45 20 08 08 FFFFFF81 11 07 FFFFFFC2 FFFFFF80 FFFFFF84
   00 72 01 02 50 69 08 07 FFFFFF81 13 07 FFFFFFA0 FFFFFF80 04 73 01
   03 50 69 20 08 06 FFFFFF81 15 07 FFFFFF84 00 72 01 06 72 61
   6E 64 6F 6D 08 07 FFFFFF81 17 07 FFFFFF84 00 FFFFFF81 18 01 03 73
   69 6E 14 03 73 FFFFFF81 19 08 07 FFFFFF81 1A FFFFFF81 16 FFFFFFC0 00 73
   01 01 78 08 07 FFFFFF81 1C 07 FFFFFF84 00 FFFFFF81 1D 01 03 63 6F
   73 14 03 73 FFFFFF81 1E 08 07 FFFFFF81 1A FFFFFF81 1B FFFFFFC0 00 73 08
   07 FFFFFF81 20 07 FFFFFF84 00 FFFFFF81 21 01 03 74 61 6E 14 03 73
   FFFFFF81 22 08 07 FFFFFF81 1A FFFFFF81 1F FFFFFFC0 00 73 08 07 FFFFFF81 24 07
   FFFFFF84 00 FFFFFF81 25 01 04 61 73 69 6E 14 03 73 FFFFFF81 26 08
   07 FFFFFF81 1A FFFFFF81 23 FFFFFFC0 00 73 08 07 FFFFFF81 28 07 FFFFFF84 00 FFFFFF81
   29 01 04 61 63 6F 73 14 03 73 FFFFFF81 2A 08 07 FFFFFF81 1A
   FFFFFF81 27 FFFFFFC0 00 73 08 07 FFFFFF81 2C 07 FFFFFF84 00 FFFFFF81 2D 01 04
   61 74 61 6E 14 03 73 FFFFFF81 2E 08 07 FFFFFF81 1A FFFFFF81 2B FFFFFFC0
   00 73 08 07 FFFFFF81 30 07 FFFFFF84 00 FFFFFF81 31 01 09 74 6F 52
   61 64 69 61 6E 73 14 03 73 FFFFFF81 32 08 07 FFFFFF81 1A FFFFFF81
   2F FFFFFFC0 00 73 08 07 FFFFFF81 34 07 FFFFFF84 00 FFFFFF81 35 01 09 74
   6F 44 65 67 72 65 65 73 14 03 73 FFFFFF81 36 08 07 FFFFFF81
   1A FFFFFF81 33 FFFFFFC0 00 73 08 07 FFFFFF81 38 07 FFFFFF84 00 FFFFFF81 39 01
   03 65 78 70 14 03 73 FFFFFF81 3A 08 07 FFFFFF81 1A FFFFFF81 37 FFFFFFC0
   00 73 08 07 FFFFFF81 3C 07 FFFFFF84 00 FFFFFF81 3D 01 03 6C 6F 67
   14 03 73 FFFFFF81 3E 08 07 FFFFFF81 1A FFFFFF81 3B FFFFFFC0 00 73 08 07
   FFFFFF81 40 07 FFFFFF84 00 FFFFFF81 41 01 04 73 71 72 74 14 03 73
   FFFFFF81 42 08 07 FFFFFF81 1A FFFFFF81 3F FFFFFFC0 00 73 08 07 FFFFFF81 44 07
   FFFFFF84 00 FFFFFF81 45 01 0D 49 45 45 45 72 65 6D 61 69 6E
   64 65 72 14 05 73 FFFFFF81 46 FFFFFF81 47 08 07 FFFFFF81 1A FFFFFF81 43
   FFFFFFC0 00 73 08 07 FFFFFF81 48 FFFFFF81 43 FFFFFFC0 00 73 01 01 79 08
   07 FFFFFF81 4A 07 FFFFFF84 00 FFFFFF81 4B 01 04 63 65 69 6C 14 03
   73 FFFFFF81 4C 08 07 FFFFFF81 1A FFFFFF81 49 FFFFFFC0 00 73 08 07 FFFFFF81 4E
   07 FFFFFF84 00 FFFFFF81 4F 01 05 66 6C 6F 6F 72 14 03 73 FFFFFF81
   50 08 07 FFFFFF81 1A FFFFFF81 4D FFFFFFC0 00 73 08 07 FFFFFF81 52 07 FFFFFF84
   00 FFFFFF81 53 01 04 72 69 6E 74 14 03 73 FFFFFF81 54 08 07
   FFFFFF81 1A FFFFFF81 51 FFFFFFC0 00 73 08 07 FFFFFF81 56 07 FFFFFF84 00 FFFFFF81 57
   01 05 61 74 61 6E 32 14 05 73 FFFFFF81 58 FFFFFF81 59 08 07
   FFFFFF81 48 FFFFFF81 55 FFFFFFC0 00 73 08 07 FFFFFF81 1A FFFFFF81 55 FFFFFFC0 00 73
   08 07 FFFFFF81 5B 07 FFFFFF84 00 FFFFFF81 5C 01 03 70 6F 77 14 05
   73 FFFFFF81 5D FFFFFF81 5E 08 07 FFFFFF81 1A FFFFFF81 5A FFFFFFC0 00 73 08 07
   FFFFFF81 48 FFFFFF81 5A FFFFFFC0 00 73 08 07 FFFFFF81 60 07 FFFFFF84 00 FFFFFF81 61
   01 05 72 6F 75 6E 64 14 03 3F FFFFFF81 62 08 07 FFFFFF81 1A
   FFFFFF81 5F FFFFFFC0 00 57 08 07 FFFFFF81 60 07 FFFFFF84 00 FFFFFF81 64 14 03
   4B FFFFFF81 65 08 07 FFFFFF81 1A FFFFFF81 63 FFFFFFC0 00 73 08 07 FFFFFF81 67
   07 FFFFFF84 00 FFFFFF81 68 01 03 61 62 73 14 03 3F FFFFFF81 69 08
   07 FFFFFF81 1A FFFFFF81 66 FFFFFFC0 00 3F 08 07 FFFFFF81 67 07 FFFFFF84 00 FFFFFF81
   6B 14 03 4B FFFFFF81 6C 08 07 FFFFFF81 1A FFFFFF81 6A FFFFFFC0 00 4B 08
   07 FFFFFF81 67 07 FFFFFF84 00 FFFFFF81 6E 14 03 57 FFFFFF81 6F 08 07 FFFFFF81
   1A FFFFFF81 6D FFFFFFC0 00 57 08 07 FFFFFF81 67 07 FFFFFF84 00 FFFFFF81 71 14
   03 73 FFFFFF81 72 08 07 FFFFFF81 1A FFFFFF81 70 FFFFFFC0 00 73 08 07 FFFFFF81
   74 07 FFFFFF84 00 FFFFFF81 75 01 03 6D 61 78 14 05 3F FFFFFF81 76
   FFFFFF81 77 08 07 FFFFFF81 1A FFFFFF81 73 FFFFFFC0 00 3F 08 07 FFFFFF81 48 FFFFFF81
   73 FFFFFFC0 00 3F 08 07 FFFFFF81 74 07 FFFFFF84 00 FFFFFF81 79 14 05 4B
   FFFFFF81 7A FFFFFF81 7B 08 07 FFFFFF81 1A FFFFFF81 78 FFFFFFC0 00 4B 08 07 FFFFFF81
   48 FFFFFF81 78 FFFFFFC0 00 4B 08 07 FFFFFF81 74 07 FFFFFF84 00 FFFFFF81 7D 14
   05 57 FFFFFF81 7E FFFFFF81 7F 08 07 FFFFFF81 1A FFFFFF81 7C FFFFFFC0 00 57 08
   07 FFFFFF81 48 FFFFFF81 7C FFFFFFC0 00 57 08 07 FFFFFF81 74 07 FFFFFF84 00 FFFFFF82
   01 14 05 73 FFFFFF82 02 FFFFFF82 03 08 07 FFFFFF81 1A FFFFFF82 00 FFFFFFC0 00
   73 08 07 FFFFFF81 48 FFFFFF82 00 FFFFFFC0 00 73 08 07 FFFFFF82 05 07 FFFFFF84
   00 FFFFFF82 06 01 03 6D 69 6E 14 05 3F FFFFFF82 07 FFFFFF82 08 08
   07 FFFFFF81 1A FFFFFF82 04 FFFFFFC0 00 3F 08 07 FFFFFF81 48 FFFFFF82 04 FFFFFFC0 00
   3F 08 07 FFFFFF82 05 07 FFFFFF84 00 FFFFFF82 0A 14 05 4B FFFFFF82 0B FFFFFF82
   0C 08 07 FFFFFF81 1A FFFFFF82 09 FFFFFFC0 00 4B 08 07 FFFFFF81 48 FFFFFF82 09
   FFFFFFC0 00 4B 08 07 FFFFFF82 05 07 FFFFFF84 00 FFFFFF82 0E 14 05 57 FFFFFF82
   0F FFFFFF82 10 08 07 FFFFFF81 1A FFFFFF82 0D FFFFFFC0 00 57 08 07 FFFFFF81 48
   FFFFFF82 0D FFFFFFC0 00 57 08 07 FFFFFF82 05 07 FFFFFF84 00 FFFFFF82 12 14 05
   73 FFFFFF82 13 FFFFFF82 14 08 07 FFFFFF81 1A FFFFFF82 11 FFFFFFC0 00 73 08 07
   FFFFFF81 48 FFFFFF82 11 FFFFFFC0 00 73 08 07 FFFFFF82 16 07 FFFFFF84 00 FFFFFF82 17
   01 06 73 69 67 6E 75 6D 14 03 73 FFFFFF82 18 08 07 FFFFFF81
   1A FFFFFF82 15 FFFFFFC0 00 73 08 07 FFFFFF82 16 07 FFFFFF84 00 FFFFFF82 1A 14
   03 57 FFFFFF82 1B 08 07 FFFFFF81 1A FFFFFF82 19 FFFFFFC0 00 57 08 07 FFFFFF82
   16 07 FFFFFF84 00 FFFFFF82 1D 14 03 4B FFFFFF82 1E 08 07 FFFFFF81 1A FFFFFF82
   1C FFFFFFC0 00 4B 08 07 FFFFFF82 16 07 FFFFFF84 00 FFFFFF82 20 14 03 3F
   FFFFFF82 21 08 07 FFFFFF81 1A FFFFFF82 1F FFFFFFC0 00 3F 
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Math.scala;
const #3 = Asciz	signum;
const #4 = Asciz	(I)I;
const #5 = Asciz	Code;
const #6 = Asciz	scala/Math$;
const #7 = class	#6;	//  scala/Math$
const #8 = Asciz	MODULE$;
const #9 = Asciz	Lscala/Math$;;
const #10 = NameAndType	#8:#9;//  MODULE$:Lscala/Math$;
const #11 = Field	#7.#10;	//  scala/Math$.MODULE$:Lscala/Math$;
const #12 = NameAndType	#3:#4;//  signum:(I)I
const #13 = Method	#7.#12;	//  scala/Math$.signum:(I)I
const #14 = Asciz	(J)J;
const #15 = NameAndType	#3:#14;//  signum:(J)J
const #16 = Method	#7.#15;	//  scala/Math$.signum:(J)J
const #17 = Asciz	(F)F;
const #18 = NameAndType	#3:#17;//  signum:(F)F
const #19 = Method	#7.#18;	//  scala/Math$.signum:(F)F
const #20 = Asciz	(D)D;
const #21 = NameAndType	#3:#20;//  signum:(D)D
const #22 = Method	#7.#21;	//  scala/Math$.signum:(D)D
const #23 = Asciz	min;
const #24 = Asciz	(DD)D;
const #25 = NameAndType	#23:#24;//  min:(DD)D
const #26 = Method	#7.#25;	//  scala/Math$.min:(DD)D
const #27 = Asciz	(FF)F;
const #28 = NameAndType	#23:#27;//  min:(FF)F
const #29 = Method	#7.#28;	//  scala/Math$.min:(FF)F
const #30 = Asciz	(JJ)J;
const #31 = NameAndType	#23:#30;//  min:(JJ)J
const #32 = Method	#7.#31;	//  scala/Math$.min:(JJ)J
const #33 = Asciz	(II)I;
const #34 = NameAndType	#23:#33;//  min:(II)I
const #35 = Method	#7.#34;	//  scala/Math$.min:(II)I
const #36 = Asciz	max;
const #37 = NameAndType	#36:#24;//  max:(DD)D
const #38 = Method	#7.#37;	//  scala/Math$.max:(DD)D
const #39 = NameAndType	#36:#27;//  max:(FF)F
const #40 = Method	#7.#39;	//  scala/Math$.max:(FF)F
const #41 = NameAndType	#36:#30;//  max:(JJ)J
const #42 = Method	#7.#41;	//  scala/Math$.max:(JJ)J
const #43 = NameAndType	#36:#33;//  max:(II)I
const #44 = Method	#7.#43;	//  scala/Math$.max:(II)I
const #45 = Asciz	abs;
const #46 = NameAndType	#45:#20;//  abs:(D)D
const #47 = Method	#7.#46;	//  scala/Math$.abs:(D)D
const #48 = NameAndType	#45:#17;//  abs:(F)F
const #49 = Method	#7.#48;	//  scala/Math$.abs:(F)F
const #50 = NameAndType	#45:#14;//  abs:(J)J
const #51 = Method	#7.#50;	//  scala/Math$.abs:(J)J
const #52 = NameAndType	#45:#4;//  abs:(I)I
const #53 = Method	#7.#52;	//  scala/Math$.abs:(I)I
const #54 = Asciz	round;
const #55 = Asciz	(D)J;
const #56 = NameAndType	#54:#55;//  round:(D)J
const #57 = Method	#7.#56;	//  scala/Math$.round:(D)J
const #58 = Asciz	(F)I;
const #59 = NameAndType	#54:#58;//  round:(F)I
const #60 = Method	#7.#59;	//  scala/Math$.round:(F)I
const #61 = Asciz	pow;
const #62 = NameAndType	#61:#24;//  pow:(DD)D
const #63 = Method	#7.#62;	//  scala/Math$.pow:(DD)D
const #64 = Asciz	atan2;
const #65 = NameAndType	#64:#24;//  atan2:(DD)D
const #66 = Method	#7.#65;	//  scala/Math$.atan2:(DD)D
const #67 = Asciz	rint;
const #68 = NameAndType	#67:#20;//  rint:(D)D
const #69 = Method	#7.#68;	//  scala/Math$.rint:(D)D
const #70 = Asciz	floor;
const #71 = NameAndType	#70:#20;//  floor:(D)D
const #72 = Method	#7.#71;	//  scala/Math$.floor:(D)D
const #73 = Asciz	ceil;
const #74 = NameAndType	#73:#20;//  ceil:(D)D
const #75 = Method	#7.#74;	//  scala/Math$.ceil:(D)D
const #76 = Asciz	IEEEremainder;
const #77 = NameAndType	#76:#24;//  IEEEremainder:(DD)D
const #78 = Method	#7.#77;	//  scala/Math$.IEEEremainder:(DD)D
const #79 = Asciz	sqrt;
const #80 = NameAndType	#79:#20;//  sqrt:(D)D
const #81 = Method	#7.#80;	//  scala/Math$.sqrt:(D)D
const #82 = Asciz	log;
const #83 = NameAndType	#82:#20;//  log:(D)D
const #84 = Method	#7.#83;	//  scala/Math$.log:(D)D
const #85 = Asciz	exp;
const #86 = NameAndType	#85:#20;//  exp:(D)D
const #87 = Method	#7.#86;	//  scala/Math$.exp:(D)D
const #88 = Asciz	toDegrees;
const #89 = NameAndType	#88:#20;//  toDegrees:(D)D
const #90 = Method	#7.#89;	//  scala/Math$.toDegrees:(D)D
const #91 = Asciz	toRadians;
const #92 = NameAndType	#91:#20;//  toRadians:(D)D
const #93 = Method	#7.#92;	//  scala/Math$.toRadians:(D)D
const #94 = Asciz	atan;
const #95 = NameAndType	#94:#20;//  atan:(D)D
const #96 = Method	#7.#95;	//  scala/Math$.atan:(D)D
const #97 = Asciz	acos;
const #98 = NameAndType	#97:#20;//  acos:(D)D
const #99 = Method	#7.#98;	//  scala/Math$.acos:(D)D
const #100 = Asciz	asin;
const #101 = NameAndType	#100:#20;//  asin:(D)D
const #102 = Method	#7.#101;	//  scala/Math$.asin:(D)D
const #103 = Asciz	tan;
const #104 = NameAndType	#103:#20;//  tan:(D)D
const #105 = Method	#7.#104;	//  scala/Math$.tan:(D)D
const #106 = Asciz	cos;
const #107 = NameAndType	#106:#20;//  cos:(D)D
const #108 = Method	#7.#107;	//  scala/Math$.cos:(D)D
const #109 = Asciz	sin;
const #110 = NameAndType	#109:#20;//  sin:(D)D
const #111 = Method	#7.#110;	//  scala/Math$.sin:(D)D
const #112 = Asciz	random;
const #113 = Asciz	()D;
const #114 = NameAndType	#112:#113;//  random:()D
const #115 = Method	#7.#114;	//  scala/Math$.random:()D
const #116 = Asciz	Pi;
const #117 = NameAndType	#116:#113;//  Pi:()D
const #118 = Method	#7.#117;	//  scala/Math$.Pi:()D
const #119 = Asciz	E;
const #120 = NameAndType	#119:#113;//  E:()D
const #121 = Method	#7.#120;	//  scala/Math$.E:()D
const #122 = Asciz	POS_INF_DOUBLE;
const #123 = NameAndType	#122:#113;//  POS_INF_DOUBLE:()D
const #124 = Method	#7.#123;	//  scala/Math$.POS_INF_DOUBLE:()D
const #125 = Asciz	NEG_INF_DOUBLE;
const #126 = NameAndType	#125:#113;//  NEG_INF_DOUBLE:()D
const #127 = Method	#7.#126;	//  scala/Math$.NEG_INF_DOUBLE:()D
const #128 = Asciz	NaN_DOUBLE;
const #129 = NameAndType	#128:#113;//  NaN_DOUBLE:()D
const #130 = Method	#7.#129;	//  scala/Math$.NaN_DOUBLE:()D
const #131 = Asciz	MAX_DOUBLE;
const #132 = NameAndType	#131:#113;//  MAX_DOUBLE:()D
const #133 = Method	#7.#132;	//  scala/Math$.MAX_DOUBLE:()D
const #134 = Asciz	EPS_DOUBLE;
const #135 = NameAndType	#134:#113;//  EPS_DOUBLE:()D
const #136 = Method	#7.#135;	//  scala/Math$.EPS_DOUBLE:()D
const #137 = Asciz	MIN_DOUBLE;
const #138 = NameAndType	#137:#113;//  MIN_DOUBLE:()D
const #139 = Method	#7.#138;	//  scala/Math$.MIN_DOUBLE:()D
const #140 = Asciz	POS_INF_FLOAT;
const #141 = Asciz	()F;
const #142 = NameAndType	#140:#141;//  POS_INF_FLOAT:()F
const #143 = Method	#7.#142;	//  scala/Math$.POS_INF_FLOAT:()F
const #144 = Asciz	NEG_INF_FLOAT;
const #145 = NameAndType	#144:#141;//  NEG_INF_FLOAT:()F
const #146 = Method	#7.#145;	//  scala/Math$.NEG_INF_FLOAT:()F
const #147 = Asciz	NaN_FLOAT;
const #148 = NameAndType	#147:#141;//  NaN_FLOAT:()F
const #149 = Method	#7.#148;	//  scala/Math$.NaN_FLOAT:()F
const #150 = Asciz	MAX_FLOAT;
const #151 = NameAndType	#150:#141;//  MAX_FLOAT:()F
const #152 = Method	#7.#151;	//  scala/Math$.MAX_FLOAT:()F
const #153 = Asciz	EPS_FLOAT;
const #154 = NameAndType	#153:#141;//  EPS_FLOAT:()F
const #155 = Method	#7.#154;	//  scala/Math$.EPS_FLOAT:()F
const #156 = Asciz	MIN_FLOAT;
const #157 = NameAndType	#156:#141;//  MIN_FLOAT:()F
const #158 = Method	#7.#157;	//  scala/Math$.MIN_FLOAT:()F
const #159 = Asciz	MAX_LONG;
const #160 = Asciz	()J;
const #161 = NameAndType	#159:#160;//  MAX_LONG:()J
const #162 = Method	#7.#161;	//  scala/Math$.MAX_LONG:()J
const #163 = Asciz	MIN_LONG;
const #164 = NameAndType	#163:#160;//  MIN_LONG:()J
const #165 = Method	#7.#164;	//  scala/Math$.MIN_LONG:()J
const #166 = Asciz	MAX_INT;
const #167 = Asciz	()I;
const #168 = NameAndType	#166:#167;//  MAX_INT:()I
const #169 = Method	#7.#168;	//  scala/Math$.MAX_INT:()I
const #170 = Asciz	MIN_INT;
const #171 = NameAndType	#170:#167;//  MIN_INT:()I
const #172 = Method	#7.#171;	//  scala/Math$.MIN_INT:()I
const #173 = Asciz	MAX_CHAR;
const #174 = Asciz	()C;
const #175 = NameAndType	#173:#174;//  MAX_CHAR:()C
const #176 = Method	#7.#175;	//  scala/Math$.MAX_CHAR:()C
const #177 = Asciz	MIN_CHAR;
const #178 = NameAndType	#177:#174;//  MIN_CHAR:()C
const #179 = Method	#7.#178;	//  scala/Math$.MIN_CHAR:()C
const #180 = Asciz	MAX_SHORT;
const #181 = Asciz	()S;
const #182 = NameAndType	#180:#181;//  MAX_SHORT:()S
const #183 = Method	#7.#182;	//  scala/Math$.MAX_SHORT:()S
const #184 = Asciz	MIN_SHORT;
const #185 = NameAndType	#184:#181;//  MIN_SHORT:()S
const #186 = Method	#7.#185;	//  scala/Math$.MIN_SHORT:()S
const #187 = Asciz	MAX_BYTE;
const #188 = Asciz	()B;
const #189 = NameAndType	#187:#188;//  MAX_BYTE:()B
const #190 = Method	#7.#189;	//  scala/Math$.MAX_BYTE:()B
const #191 = Asciz	MIN_BYTE;
const #192 = NameAndType	#191:#188;//  MIN_BYTE:()B
const #193 = Method	#7.#192;	//  scala/Math$.MIN_BYTE:()B
const #194 = Asciz	ScalaSig;
const #195 = Asciz	scala/Math;
const #196 = class	#195;	//  scala/Math
const #197 = Asciz	java/lang/Object;
const #198 = class	#197;	//  java/lang/Object

{
public static final int signum(int);
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	iload_0
   4:	invokevirtual	#13; //Method scala/Math$.signum:(I)I
   7:	ireturn

public static final long signum(long);
  Code:
   Stack=3, Locals=2, Args_size=1
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	lload_0
   4:	invokevirtual	#16; //Method scala/Math$.signum:(J)J
   7:	lreturn

public static final float signum(float);
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	fload_0
   4:	invokevirtual	#19; //Method scala/Math$.signum:(F)F
   7:	freturn

public static final double signum(double);
  Code:
   Stack=3, Locals=2, Args_size=1
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	dload_0
   4:	invokevirtual	#22; //Method scala/Math$.signum:(D)D
   7:	dreturn

public static final double min(double, double);
  Code:
   Stack=5, Locals=4, Args_size=2
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	dload_0
   4:	dload_2
   5:	invokevirtual	#26; //Method scala/Math$.min:(DD)D
   8:	dreturn

public static final float min(float, float);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	fload_0
   4:	fload_1
   5:	invokevirtual	#29; //Method scala/Math$.min:(FF)F
   8:	freturn

public static final long min(long, long);
  Code:
   Stack=5, Locals=4, Args_size=2
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	lload_0
   4:	lload_2
   5:	invokevirtual	#32; //Method scala/Math$.min:(JJ)J
   8:	lreturn

public static final int min(int, int);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	iload_0
   4:	iload_1
   5:	invokevirtual	#35; //Method scala/Math$.min:(II)I
   8:	ireturn

public static final double max(double, double);
  Code:
   Stack=5, Locals=4, Args_size=2
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	dload_0
   4:	dload_2
   5:	invokevirtual	#38; //Method scala/Math$.max:(DD)D
   8:	dreturn

public static final float max(float, float);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	fload_0
   4:	fload_1
   5:	invokevirtual	#40; //Method scala/Math$.max:(FF)F
   8:	freturn

public static final long max(long, long);
  Code:
   Stack=5, Locals=4, Args_size=2
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	lload_0
   4:	lload_2
   5:	invokevirtual	#42; //Method scala/Math$.max:(JJ)J
   8:	lreturn

public static final int max(int, int);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	iload_0
   4:	iload_1
   5:	invokevirtual	#44; //Method scala/Math$.max:(II)I
   8:	ireturn

public static final double abs(double);
  Code:
   Stack=3, Locals=2, Args_size=1
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	dload_0
   4:	invokevirtual	#47; //Method scala/Math$.abs:(D)D
   7:	dreturn

public static final float abs(float);
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	fload_0
   4:	invokevirtual	#49; //Method scala/Math$.abs:(F)F
   7:	freturn

public static final long abs(long);
  Code:
   Stack=3, Locals=2, Args_size=1
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	lload_0
   4:	invokevirtual	#51; //Method scala/Math$.abs:(J)J
   7:	lreturn

public static final int abs(int);
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	iload_0
   4:	invokevirtual	#53; //Method scala/Math$.abs:(I)I
   7:	ireturn

public static final long round(double);
  Code:
   Stack=3, Locals=2, Args_size=1
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	dload_0
   4:	invokevirtual	#57; //Method scala/Math$.round:(D)J
   7:	lreturn

public static final int round(float);
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	fload_0
   4:	invokevirtual	#60; //Method scala/Math$.round:(F)I
   7:	ireturn

public static final double pow(double, double);
  Code:
   Stack=5, Locals=4, Args_size=2
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	dload_0
   4:	dload_2
   5:	invokevirtual	#63; //Method scala/Math$.pow:(DD)D
   8:	dreturn

public static final double atan2(double, double);
  Code:
   Stack=5, Locals=4, Args_size=2
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	dload_0
   4:	dload_2
   5:	invokevirtual	#66; //Method scala/Math$.atan2:(DD)D
   8:	dreturn

public static final double rint(double);
  Code:
   Stack=3, Locals=2, Args_size=1
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	dload_0
   4:	invokevirtual	#69; //Method scala/Math$.rint:(D)D
   7:	dreturn

public static final double floor(double);
  Code:
   Stack=3, Locals=2, Args_size=1
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	dload_0
   4:	invokevirtual	#72; //Method scala/Math$.floor:(D)D
   7:	dreturn

public static final double ceil(double);
  Code:
   Stack=3, Locals=2, Args_size=1
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	dload_0
   4:	invokevirtual	#75; //Method scala/Math$.ceil:(D)D
   7:	dreturn

public static final double IEEEremainder(double, double);
  Code:
   Stack=5, Locals=4, Args_size=2
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	dload_0
   4:	dload_2
   5:	invokevirtual	#78; //Method scala/Math$.IEEEremainder:(DD)D
   8:	dreturn

public static final double sqrt(double);
  Code:
   Stack=3, Locals=2, Args_size=1
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	dload_0
   4:	invokevirtual	#81; //Method scala/Math$.sqrt:(D)D
   7:	dreturn

public static final double log(double);
  Code:
   Stack=3, Locals=2, Args_size=1
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	dload_0
   4:	invokevirtual	#84; //Method scala/Math$.log:(D)D
   7:	dreturn

public static final double exp(double);
  Code:
   Stack=3, Locals=2, Args_size=1
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	dload_0
   4:	invokevirtual	#87; //Method scala/Math$.exp:(D)D
   7:	dreturn

public static final double toDegrees(double);
  Code:
   Stack=3, Locals=2, Args_size=1
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	dload_0
   4:	invokevirtual	#90; //Method scala/Math$.toDegrees:(D)D
   7:	dreturn

public static final double toRadians(double);
  Code:
   Stack=3, Locals=2, Args_size=1
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	dload_0
   4:	invokevirtual	#93; //Method scala/Math$.toRadians:(D)D
   7:	dreturn

public static final double atan(double);
  Code:
   Stack=3, Locals=2, Args_size=1
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	dload_0
   4:	invokevirtual	#96; //Method scala/Math$.atan:(D)D
   7:	dreturn

public static final double acos(double);
  Code:
   Stack=3, Locals=2, Args_size=1
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	dload_0
   4:	invokevirtual	#99; //Method scala/Math$.acos:(D)D
   7:	dreturn

public static final double asin(double);
  Code:
   Stack=3, Locals=2, Args_size=1
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	dload_0
   4:	invokevirtual	#102; //Method scala/Math$.asin:(D)D
   7:	dreturn

public static final double tan(double);
  Code:
   Stack=3, Locals=2, Args_size=1
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	dload_0
   4:	invokevirtual	#105; //Method scala/Math$.tan:(D)D
   7:	dreturn

public static final double cos(double);
  Code:
   Stack=3, Locals=2, Args_size=1
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	dload_0
   4:	invokevirtual	#108; //Method scala/Math$.cos:(D)D
   7:	dreturn

public static final double sin(double);
  Code:
   Stack=3, Locals=2, Args_size=1
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	dload_0
   4:	invokevirtual	#111; //Method scala/Math$.sin:(D)D
   7:	dreturn

public static final double random();
  Code:
   Stack=2, Locals=0, Args_size=0
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	invokevirtual	#115; //Method scala/Math$.random:()D
   6:	dreturn

public static final double Pi();
  Code:
   Stack=2, Locals=0, Args_size=0
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	invokevirtual	#118; //Method scala/Math$.Pi:()D
   6:	dreturn

public static final double E();
  Code:
   Stack=2, Locals=0, Args_size=0
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	invokevirtual	#121; //Method scala/Math$.E:()D
   6:	dreturn

public static final double POS_INF_DOUBLE();
  Code:
   Stack=2, Locals=0, Args_size=0
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	invokevirtual	#124; //Method scala/Math$.POS_INF_DOUBLE:()D
   6:	dreturn

public static final double NEG_INF_DOUBLE();
  Code:
   Stack=2, Locals=0, Args_size=0
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	invokevirtual	#127; //Method scala/Math$.NEG_INF_DOUBLE:()D
   6:	dreturn

public static final double NaN_DOUBLE();
  Code:
   Stack=2, Locals=0, Args_size=0
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	invokevirtual	#130; //Method scala/Math$.NaN_DOUBLE:()D
   6:	dreturn

public static final double MAX_DOUBLE();
  Code:
   Stack=2, Locals=0, Args_size=0
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	invokevirtual	#133; //Method scala/Math$.MAX_DOUBLE:()D
   6:	dreturn

public static final double EPS_DOUBLE();
  Code:
   Stack=2, Locals=0, Args_size=0
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	invokevirtual	#136; //Method scala/Math$.EPS_DOUBLE:()D
   6:	dreturn

public static final double MIN_DOUBLE();
  Code:
   Stack=2, Locals=0, Args_size=0
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	invokevirtual	#139; //Method scala/Math$.MIN_DOUBLE:()D
   6:	dreturn

public static final float POS_INF_FLOAT();
  Code:
   Stack=1, Locals=0, Args_size=0
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	invokevirtual	#143; //Method scala/Math$.POS_INF_FLOAT:()F
   6:	freturn

public static final float NEG_INF_FLOAT();
  Code:
   Stack=1, Locals=0, Args_size=0
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	invokevirtual	#146; //Method scala/Math$.NEG_INF_FLOAT:()F
   6:	freturn

public static final float NaN_FLOAT();
  Code:
   Stack=1, Locals=0, Args_size=0
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	invokevirtual	#149; //Method scala/Math$.NaN_FLOAT:()F
   6:	freturn

public static final float MAX_FLOAT();
  Code:
   Stack=1, Locals=0, Args_size=0
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	invokevirtual	#152; //Method scala/Math$.MAX_FLOAT:()F
   6:	freturn

public static final float EPS_FLOAT();
  Code:
   Stack=1, Locals=0, Args_size=0
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	invokevirtual	#155; //Method scala/Math$.EPS_FLOAT:()F
   6:	freturn

public static final float MIN_FLOAT();
  Code:
   Stack=1, Locals=0, Args_size=0
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	invokevirtual	#158; //Method scala/Math$.MIN_FLOAT:()F
   6:	freturn

public static final long MAX_LONG();
  Code:
   Stack=2, Locals=0, Args_size=0
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	invokevirtual	#162; //Method scala/Math$.MAX_LONG:()J
   6:	lreturn

public static final long MIN_LONG();
  Code:
   Stack=2, Locals=0, Args_size=0
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	invokevirtual	#165; //Method scala/Math$.MIN_LONG:()J
   6:	lreturn

public static final int MAX_INT();
  Code:
   Stack=1, Locals=0, Args_size=0
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	invokevirtual	#169; //Method scala/Math$.MAX_INT:()I
   6:	ireturn

public static final int MIN_INT();
  Code:
   Stack=1, Locals=0, Args_size=0
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	invokevirtual	#172; //Method scala/Math$.MIN_INT:()I
   6:	ireturn

public static final char MAX_CHAR();
  Code:
   Stack=1, Locals=0, Args_size=0
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	invokevirtual	#176; //Method scala/Math$.MAX_CHAR:()C
   6:	ireturn

public static final char MIN_CHAR();
  Code:
   Stack=1, Locals=0, Args_size=0
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	invokevirtual	#179; //Method scala/Math$.MIN_CHAR:()C
   6:	ireturn

public static final short MAX_SHORT();
  Code:
   Stack=1, Locals=0, Args_size=0
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	invokevirtual	#183; //Method scala/Math$.MAX_SHORT:()S
   6:	ireturn

public static final short MIN_SHORT();
  Code:
   Stack=1, Locals=0, Args_size=0
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	invokevirtual	#186; //Method scala/Math$.MIN_SHORT:()S
   6:	ireturn

public static final byte MAX_BYTE();
  Code:
   Stack=1, Locals=0, Args_size=0
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	invokevirtual	#190; //Method scala/Math$.MAX_BYTE:()B
   6:	ireturn

public static final byte MIN_BYTE();
  Code:
   Stack=1, Locals=0, Args_size=0
   0:	getstatic	#11; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	invokevirtual	#193; //Method scala/Math$.MIN_BYTE:()B
   6:	ireturn

}

