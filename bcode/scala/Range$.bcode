Compiled from "Range.scala"
public final class scala.Range$ extends java.lang.Object implements scala.ScalaObject
  SourceFile: "Range.scala"
  Scala: length = 0x
   
  InnerClass: 
   public #40= #39 of #35; //Partial=class scala/Range$Partial of class scala/Range
   public final #41= #23 of #35; //Inclusive=class scala/Range$Inclusive of class scala/Range
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Range.scala;
const #3 = Asciz	Scala;
const #4 = Asciz	MODULE$;
const #5 = Asciz	Lscala/Range$;;
const #6 = Asciz	<clinit>;
const #7 = Asciz	()V;
const #8 = Asciz	Code;
const #9 = Asciz	scala/Range$;
const #10 = class	#9;	//  scala/Range$
const #11 = Asciz	<init>;
const #12 = NameAndType	#11:#7;//  "<init>":()V
const #13 = Method	#10.#12;	//  scala/Range$."<init>":()V
const #14 = Asciz	LineNumberTable;
const #15 = Asciz	java/lang/Object;
const #16 = class	#15;	//  java/lang/Object
const #17 = Method	#16.#12;	//  java/lang/Object."<init>":()V
const #18 = NameAndType	#4:#5;//  MODULE$:Lscala/Range$;
const #19 = Field	#10.#18;	//  scala/Range$.MODULE$:Lscala/Range$;
const #20 = Asciz	inclusive;
const #21 = Asciz	(III)Lscala/Range;;
const #22 = Asciz	scala/Range$Inclusive;
const #23 = class	#22;	//  scala/Range$Inclusive
const #24 = Asciz	(III)V;
const #25 = NameAndType	#11:#24;//  "<init>":(III)V
const #26 = Method	#23.#25;	//  scala/Range$Inclusive."<init>":(III)V
const #27 = Asciz	this;
const #28 = Asciz	start;
const #29 = Asciz	I;
const #30 = Asciz	end;
const #31 = Asciz	step;
const #32 = Asciz	LocalVariableTable;
const #33 = Asciz	apply;
const #34 = Asciz	scala/Range;
const #35 = class	#34;	//  scala/Range
const #36 = Method	#35.#25;	//  scala/Range."<init>":(III)V
const #37 = Asciz	InnerClasses;
const #38 = Asciz	scala/Range$Partial;
const #39 = class	#38;	//  scala/Range$Partial
const #40 = Asciz	Partial;
const #41 = Asciz	Inclusive;
const #42 = Asciz	scala/ScalaObject;
const #43 = class	#42;	//  scala/ScalaObject

{
public static final scala.Range$ MODULE$;

public static {};
  Code:
   Stack=1, Locals=0, Args_size=0
   0:	new	#10; //class scala/Range$
   3:	invokespecial	#13; //Method "<init>":()V
   6:	return

public scala.Range inclusive(int, int, int);
  Code:
   Stack=5, Locals=4, Args_size=4
   0:	new	#23; //class scala/Range$Inclusive
   3:	dup
   4:	iload_1
   5:	iload_2
   6:	iload_3
   7:	invokespecial	#26; //Method scala/Range$Inclusive."<init>":(III)V
   10:	areturn
  LineNumberTable: 
   line 244: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      11      0    this       Lscala/Range$;
   0      11      1    start       I
   0      11      2    end       I
   0      11      3    step       I


public scala.Range apply(int, int, int);
  Code:
   Stack=5, Locals=4, Args_size=4
   0:	new	#35; //class scala/Range
   3:	dup
   4:	iload_1
   5:	iload_2
   6:	iload_3
   7:	invokespecial	#36; //Method scala/Range."<init>":(III)V
   10:	areturn
  LineNumberTable: 
   line 242: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      11      0    this       Lscala/Range$;
   0      11      1    start       I
   0      11      2    end       I
   0      11      3    step       I


}

