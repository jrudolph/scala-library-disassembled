Compiled from "Either.scala"
public final class scala.Either$ extends java.lang.Object implements scala.ScalaObject
  SourceFile: "Either.scala"
  Scala: length = 0x
   
  InnerClass: 
   public final #121= #103 of #54; //LeftProjection=class scala/Either$LeftProjection of class scala/Either
   public #122= #114 of #54; //MergeableEither=class scala/Either$MergeableEither of class scala/Either
   public final #123= #84 of #54; //RightProjection=class scala/Either$RightProjection of class scala/Either
   public final #124= #100 of #54; //$anonfun$joinLeft$1=class scala/Either$$anonfun$joinLeft$1 of class scala/Either
   public final #125= #81 of #54; //$anonfun$joinRight$1=class scala/Either$$anonfun$joinRight$1 of class scala/Either
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Either.scala;
const #3 = Asciz	Scala;
const #4 = Asciz	MODULE$;
const #5 = Asciz	Lscala/Either$;;
const #6 = Asciz	<clinit>;
const #7 = Asciz	()V;
const #8 = Asciz	Code;
const #9 = Asciz	scala/Either$;
const #10 = class	#9;	//  scala/Either$
const #11 = Asciz	<init>;
const #12 = NameAndType	#11:#7;//  "<init>":()V
const #13 = Method	#10.#12;	//  scala/Either$."<init>":()V
const #14 = Asciz	LineNumberTable;
const #15 = Asciz	java/lang/Object;
const #16 = class	#15;	//  java/lang/Object
const #17 = Method	#16.#12;	//  java/lang/Object."<init>":()V
const #18 = NameAndType	#4:#5;//  MODULE$:Lscala/Either$;
const #19 = Field	#10.#18;	//  scala/Either$.MODULE$:Lscala/Either$;
const #20 = Asciz	cond;
const #21 = Asciz	(ZLscala/Function0;Lscala/Function0;)Lscala/Either;;
const #22 = Asciz	scala/Right;
const #23 = class	#22;	//  scala/Right
const #24 = Asciz	scala/Function0;
const #25 = class	#24;	//  scala/Function0
const #26 = Asciz	apply;
const #27 = Asciz	()Ljava/lang/Object;;
const #28 = NameAndType	#26:#27;//  apply:()Ljava/lang/Object;
const #29 = InterfaceMethod	#25.#28;	//  scala/Function0.apply:()Ljava/lang/Object;
const #30 = Asciz	(Ljava/lang/Object;)V;
const #31 = NameAndType	#11:#30;//  "<init>":(Ljava/lang/Object;)V
const #32 = Method	#23.#31;	//  scala/Right."<init>":(Ljava/lang/Object;)V
const #33 = Asciz	scala/Left;
const #34 = class	#33;	//  scala/Left
const #35 = Method	#34.#31;	//  scala/Left."<init>":(Ljava/lang/Object;)V
const #36 = Asciz	this;
const #37 = Asciz	test;
const #38 = Asciz	Z;
const #39 = Asciz	right;
const #40 = Asciz	Lscala/Function0;;
const #41 = Asciz	left;
const #42 = Asciz	LocalVariableTable;
const #43 = Asciz	<A:Ljava/lang/Object;B:Ljava/lang/Object;>(ZLscala/Function0<TB;>;Lscala/Function0<TA;>;)Lscala/Either<TA;TB;>;;
const #44 = Asciz	Signature;
const #45 = Asciz	merge;
const #46 = Asciz	(Lscala/Either;)Ljava/lang/Object;;
const #47 = Asciz	a;
const #48 = Asciz	Ljava/lang/Object;;
const #49 = NameAndType	#47:#48;//  a:Ljava/lang/Object;
const #50 = Field	#34.#49;	//  scala/Left.a:Ljava/lang/Object;
const #51 = Asciz	scala/MatchError;
const #52 = class	#51;	//  scala/MatchError
const #53 = Asciz	scala/Either;
const #54 = class	#53;	//  scala/Either
const #55 = Asciz	toString;
const #56 = Asciz	()Ljava/lang/String;;
const #57 = NameAndType	#55:#56;//  toString:()Ljava/lang/String;
const #58 = Method	#54.#57;	//  scala/Either.toString:()Ljava/lang/String;
const #59 = Asciz	(Ljava/lang/String;)V;
const #60 = NameAndType	#11:#59;//  "<init>":(Ljava/lang/String;)V
const #61 = Method	#52.#60;	//  scala/MatchError."<init>":(Ljava/lang/String;)V
const #62 = Asciz	b;
const #63 = NameAndType	#62:#48;//  b:Ljava/lang/Object;
const #64 = Field	#23.#63;	//  scala/Right.b:Ljava/lang/Object;
const #65 = Asciz	e;
const #66 = Asciz	Lscala/Either;;
const #67 = Asciz	temp143;
const #68 = Asciz	Lscala/Left;;
const #69 = Asciz	temp144;
const #70 = Asciz	temp145;
const #71 = Asciz	Lscala/Right;;
const #72 = Asciz	temp146;
const #73 = Asciz	<T:Ljava/lang/Object;>(Lscala/Either<TT;TT;>;)TT;;
const #74 = Asciz	Deprecated;
const #75 = Asciz	joinRight;
const #76 = Asciz	(Lscala/Either;)Lscala/Either;;
const #77 = Asciz	()Lscala/Either$RightProjection;;
const #78 = NameAndType	#39:#77;//  right:()Lscala/Either$RightProjection;
const #79 = Method	#54.#78;	//  scala/Either.right:()Lscala/Either$RightProjection;
const #80 = Asciz	scala/Either$$anonfun$joinRight$1;
const #81 = class	#80;	//  scala/Either$$anonfun$joinRight$1
const #82 = Method	#81.#12;	//  scala/Either$$anonfun$joinRight$1."<init>":()V
const #83 = Asciz	scala/Either$RightProjection;
const #84 = class	#83;	//  scala/Either$RightProjection
const #85 = NameAndType	#65:#66;//  e:Lscala/Either;
const #86 = Field	#84.#85;	//  scala/Either$RightProjection.e:Lscala/Either;
const #87 = Asciz	es;
const #88 = Asciz	$inlThis0;
const #89 = Asciz	temp1140;
const #90 = Asciz	temp1150;
const #91 = Asciz	temp1160;
const #92 = Asciz	temp1170;
const #93 = Asciz	temp1130;
const #94 = Asciz	<A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/Either<TA;Lscala/Either<TA;TB;>;>;)Lscala/Either<TA;TB;>;;
const #95 = Asciz	joinLeft;
const #96 = Asciz	()Lscala/Either$LeftProjection;;
const #97 = NameAndType	#41:#96;//  left:()Lscala/Either$LeftProjection;
const #98 = Method	#54.#97;	//  scala/Either.left:()Lscala/Either$LeftProjection;
const #99 = Asciz	scala/Either$$anonfun$joinLeft$1;
const #100 = class	#99;	//  scala/Either$$anonfun$joinLeft$1
const #101 = Method	#100.#12;	//  scala/Either$$anonfun$joinLeft$1."<init>":()V
const #102 = Asciz	scala/Either$LeftProjection;
const #103 = class	#102;	//  scala/Either$LeftProjection
const #104 = Field	#103.#85;	//  scala/Either$LeftProjection.e:Lscala/Either;
const #105 = Asciz	temp600;
const #106 = Asciz	temp610;
const #107 = Asciz	temp620;
const #108 = Asciz	temp630;
const #109 = Asciz	temp590;
const #110 = Asciz	<A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/Either<Lscala/Either<TA;TB;>;TB;>;)Lscala/Either<TA;TB;>;;
const #111 = Asciz	either2mergeable;
const #112 = Asciz	(Lscala/Either;)Lscala/Either$MergeableEither;;
const #113 = Asciz	scala/Either$MergeableEither;
const #114 = class	#113;	//  scala/Either$MergeableEither
const #115 = Asciz	(Lscala/Either;)V;
const #116 = NameAndType	#11:#115;//  "<init>":(Lscala/Either;)V
const #117 = Method	#114.#116;	//  scala/Either$MergeableEither."<init>":(Lscala/Either;)V
const #118 = Asciz	x;
const #119 = Asciz	<A:Ljava/lang/Object;>(Lscala/Either<TA;TA;>;)Lscala/Either$MergeableEither<TA;>;;
const #120 = Asciz	InnerClasses;
const #121 = Asciz	LeftProjection;
const #122 = Asciz	MergeableEither;
const #123 = Asciz	RightProjection;
const #124 = Asciz	$anonfun$joinLeft$1;
const #125 = Asciz	$anonfun$joinRight$1;
const #126 = Asciz	scala/ScalaObject;
const #127 = class	#126;	//  scala/ScalaObject

{
public static final scala.Either$ MODULE$;

public static {};
  Code:
   Stack=1, Locals=0, Args_size=0
   0:	new	#10; //class scala/Either$
   3:	invokespecial	#13; //Method "<init>":()V
   6:	return

public scala.Either cond(boolean, scala.Function0, scala.Function0);
  Code:
   Stack=3, Locals=4, Args_size=4
   0:	iload_1
   1:	ifeq	20
   4:	new	#23; //class scala/Right
   7:	dup
   8:	aload_2
   9:	invokeinterface	#29,  1; //InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
   14:	invokespecial	#32; //Method scala/Right."<init>":(Ljava/lang/Object;)V
   17:	goto	33
   20:	new	#34; //class scala/Left
   23:	dup
   24:	aload_3
   25:	invokeinterface	#29,  1; //InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
   30:	invokespecial	#35; //Method scala/Left."<init>":(Ljava/lang/Object;)V
   33:	areturn
  LineNumberTable: 
   line 335: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      34      0    this       Lscala/Either$;
   0      34      1    test       Z
   0      34      2    right       Lscala/Function0;
   0      34      3    left       Lscala/Function0;

  Signature: length = 0x2
   00 2B 

public java.lang.Object merge(scala.Either);
  Code:
   Stack=3, Locals=6, Args_size=2
   0:	aload_1
   1:	instanceof	#34; //class scala/Left
   4:	ifeq	37
   7:	aload_1
   8:	checkcast	#34; //class scala/Left
   11:	astore_2
   12:	aload_2
   13:	getfield	#50; //Field scala/Left.a:Ljava/lang/Object;
   16:	astore_3
   17:	iconst_1
   18:	ifeq	25
   21:	aload_3
   22:	goto	63
   25:	new	#52; //class scala/MatchError
   28:	dup
   29:	aload_1
   30:	invokevirtual	#58; //Method scala/Either.toString:()Ljava/lang/String;
   33:	invokespecial	#61; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   36:	athrow
   37:	aload_1
   38:	instanceof	#23; //class scala/Right
   41:	ifeq	76
   44:	aload_1
   45:	checkcast	#23; //class scala/Right
   48:	astore	4
   50:	aload	4
   52:	getfield	#64; //Field scala/Right.b:Ljava/lang/Object;
   55:	astore	5
   57:	iconst_1
   58:	ifeq	64
   61:	aload	5
   63:	areturn
   64:	new	#52; //class scala/MatchError
   67:	dup
   68:	aload_1
   69:	invokevirtual	#58; //Method scala/Either.toString:()Ljava/lang/String;
   72:	invokespecial	#61; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   75:	athrow
   76:	new	#52; //class scala/MatchError
   79:	dup
   80:	aload_1
   81:	invokevirtual	#58; //Method scala/Either.toString:()Ljava/lang/String;
   84:	invokespecial	#61; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   87:	athrow
  LineNumberTable: 
   line 326: 0
   line 21: 17
   line 327: 21
   line 326: 25
   line 21: 57
   line 328: 61
   line 326: 63

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      88      0    this       Lscala/Either$;
   0      88      1    e       Lscala/Either;
   12      25      2    temp143       Lscala/Left;
   17      20      3    temp144       Ljava/lang/Object;
   50      13      4    temp145       Lscala/Right;
   64      12      4    temp145       Lscala/Right;
   57      6      5    temp146       Ljava/lang/Object;
   64      12      5    temp146       Ljava/lang/Object;

  Signature: length = 0x2
   00 49 
  Deprecated: true

public scala.Either joinRight(scala.Either);
  Code:
   Stack=3, Locals=9, Args_size=2
   0:	aload_1
   1:	invokevirtual	#79; //Method scala/Either.right:()Lscala/Either$RightProjection;
   4:	new	#81; //class scala/Either$$anonfun$joinRight$1
   7:	dup
   8:	pop
   9:	invokespecial	#82; //Method scala/Either$$anonfun$joinRight$1."<init>":()V
   12:	astore_2
   13:	aload_2
   14:	getfield	#86; //Field scala/Either$RightProjection.e:Lscala/Either;
   17:	astore	8
   19:	aload	8
   21:	instanceof	#34; //class scala/Left
   24:	ifeq	68
   27:	aload	8
   29:	checkcast	#34; //class scala/Left
   32:	astore_3
   33:	aload_3
   34:	getfield	#50; //Field scala/Left.a:Ljava/lang/Object;
   37:	astore	4
   39:	iconst_1
   40:	ifeq	55
   43:	new	#34; //class scala/Left
   46:	dup
   47:	aload	4
   49:	invokespecial	#35; //Method scala/Left."<init>":(Ljava/lang/Object;)V
   52:	goto	106
   55:	new	#52; //class scala/MatchError
   58:	dup
   59:	aload	8
   61:	invokevirtual	#58; //Method scala/Either.toString:()Ljava/lang/String;
   64:	invokespecial	#61; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   67:	athrow
   68:	aload	8
   70:	instanceof	#23; //class scala/Right
   73:	ifeq	120
   76:	aload	8
   78:	checkcast	#23; //class scala/Right
   81:	astore	5
   83:	aload	5
   85:	getfield	#64; //Field scala/Right.b:Ljava/lang/Object;
   88:	astore	6
   90:	iconst_1
   91:	ifeq	107
   94:	aload	6
   96:	checkcast	#54; //class scala/Either
   99:	astore	7
   101:	aload	7
   103:	checkcast	#54; //class scala/Either
   106:	areturn
   107:	new	#52; //class scala/MatchError
   110:	dup
   111:	aload	8
   113:	invokevirtual	#58; //Method scala/Either.toString:()Ljava/lang/String;
   116:	invokespecial	#61; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   119:	athrow
   120:	new	#52; //class scala/MatchError
   123:	dup
   124:	aload	8
   126:	invokevirtual	#58; //Method scala/Either.toString:()Ljava/lang/String;
   129:	invokespecial	#61; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   132:	athrow
  LineNumberTable: 
   line 319: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      133      0    this       Lscala/Either$;
   0      133      1    es       Lscala/Either;
   27      106      2    $inlThis0       Ljava/lang/Object;
   33      35      3    temp1140       Lscala/Left;
   39      29      4    temp1150       Ljava/lang/Object;
   83      23      5    temp1160       Lscala/Right;
   107      13      5    temp1160       Lscala/Right;
   90      16      6    temp1170       Ljava/lang/Object;
   107      13      6    temp1170       Ljava/lang/Object;
   19      114      8    temp1130       Lscala/Either;

  Signature: length = 0x2
   00 5E 
  Deprecated: true

public scala.Either joinLeft(scala.Either);
  Code:
   Stack=3, Locals=9, Args_size=2
   0:	aload_1
   1:	invokevirtual	#98; //Method scala/Either.left:()Lscala/Either$LeftProjection;
   4:	new	#100; //class scala/Either$$anonfun$joinLeft$1
   7:	dup
   8:	pop
   9:	invokespecial	#101; //Method scala/Either$$anonfun$joinLeft$1."<init>":()V
   12:	astore_2
   13:	aload_2
   14:	getfield	#104; //Field scala/Either$LeftProjection.e:Lscala/Either;
   17:	astore	8
   19:	aload	8
   21:	instanceof	#34; //class scala/Left
   24:	ifeq	71
   27:	aload	8
   29:	checkcast	#34; //class scala/Left
   32:	astore_3
   33:	aload_3
   34:	getfield	#50; //Field scala/Left.a:Ljava/lang/Object;
   37:	astore	4
   39:	iconst_1
   40:	ifeq	58
   43:	aload	4
   45:	checkcast	#54; //class scala/Either
   48:	astore	5
   50:	aload	5
   52:	checkcast	#54; //class scala/Either
   55:	goto	106
   58:	new	#52; //class scala/MatchError
   61:	dup
   62:	aload	8
   64:	invokevirtual	#58; //Method scala/Either.toString:()Ljava/lang/String;
   67:	invokespecial	#61; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   70:	athrow
   71:	aload	8
   73:	instanceof	#23; //class scala/Right
   76:	ifeq	120
   79:	aload	8
   81:	checkcast	#23; //class scala/Right
   84:	astore	6
   86:	aload	6
   88:	getfield	#64; //Field scala/Right.b:Ljava/lang/Object;
   91:	astore	7
   93:	iconst_1
   94:	ifeq	107
   97:	new	#23; //class scala/Right
   100:	dup
   101:	aload	7
   103:	invokespecial	#32; //Method scala/Right."<init>":(Ljava/lang/Object;)V
   106:	areturn
   107:	new	#52; //class scala/MatchError
   110:	dup
   111:	aload	8
   113:	invokevirtual	#58; //Method scala/Either.toString:()Ljava/lang/String;
   116:	invokespecial	#61; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   119:	athrow
   120:	new	#52; //class scala/MatchError
   123:	dup
   124:	aload	8
   126:	invokevirtual	#58; //Method scala/Either.toString:()Ljava/lang/String;
   129:	invokespecial	#61; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   132:	athrow
  LineNumberTable: 
   line 315: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      133      0    this       Lscala/Either$;
   0      133      1    es       Lscala/Either;
   27      106      2    $inlThis0       Ljava/lang/Object;
   33      38      3    temp600       Lscala/Left;
   39      32      4    temp610       Ljava/lang/Object;
   86      20      6    temp620       Lscala/Right;
   107      13      6    temp620       Lscala/Right;
   93      13      7    temp630       Ljava/lang/Object;
   107      13      7    temp630       Ljava/lang/Object;
   19      114      8    temp590       Lscala/Either;

  Signature: length = 0x2
   00 6E 
  Deprecated: true

public scala.Either$MergeableEither either2mergeable(scala.Either);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	new	#114; //class scala/Either$MergeableEither
   3:	dup
   4:	aload_1
   5:	invokespecial	#117; //Method scala/Either$MergeableEither."<init>":(Lscala/Either;)V
   8:	areturn
  LineNumberTable: 
   line 111: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/Either$;
   0      9      1    x       Lscala/Either;

  Signature: length = 0x2
   00 77 

}

