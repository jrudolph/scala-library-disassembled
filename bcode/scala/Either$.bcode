Compiled from "Either.scala"
public final class scala.Either$ extends java.lang.Object implements scala.ScalaObject
  SourceFile: "Either.scala"
  Scala: length = 0x
   
  InnerClass: 
   public final #139= #99 of #56; //LeftProjection=class scala/Either$LeftProjection of class scala/Either
   public final #140= #84 of #56; //RightProjection=class scala/Either$RightProjection of class scala/Either
   public final #141= #135 of #56; //$anonfun$lefts$1=class scala/Either$$anonfun$lefts$1 of class scala/Either
   public final #142= #128 of #56; //$anonfun$rights$1=class scala/Either$$anonfun$rights$1 of class scala/Either
   public final #143= #96 of #56; //$anonfun$joinLeft$1=class scala/Either$$anonfun$joinLeft$1 of class scala/Either
   public final #144= #115 of #56; //$anonfun$separate$1=class scala/Either$$anonfun$separate$1 of class scala/Either
   public final #145= #81 of #56; //$anonfun$joinRight$1=class scala/Either$$anonfun$joinRight$1 of class scala/Either
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Either.scala;
const #3 = Asciz	Scala;
const #4 = Asciz	MODULE$;
const #5 = Asciz	Lscala/Either$;;
const #6 = Asciz	<clinit>;
const #7 = Asciz	()V;
const #8 = Asciz	Code;
const #9 = Asciz	scala/Either$;
const #10 = class	#9;	//  scala/Either$
const #11 = Asciz	<init>;
const #12 = NameAndType	#11:#7;//  "<init>":()V
const #13 = Method	#10.#12;	//  scala/Either$."<init>":()V
const #14 = Asciz	LineNumberTable;
const #15 = Asciz	java/lang/Object;
const #16 = class	#15;	//  java/lang/Object
const #17 = Method	#16.#12;	//  java/lang/Object."<init>":()V
const #18 = NameAndType	#4:#5;//  MODULE$:Lscala/Either$;
const #19 = Field	#10.#18;	//  scala/Either$.MODULE$:Lscala/Either$;
const #20 = Asciz	cond;
const #21 = Asciz	(ZLscala/Function0;Lscala/Function0;)Lscala/Either;;
const #22 = Asciz	scala/Right;
const #23 = class	#22;	//  scala/Right
const #24 = Asciz	scala/Function0;
const #25 = class	#24;	//  scala/Function0
const #26 = Asciz	apply;
const #27 = Asciz	()Ljava/lang/Object;;
const #28 = NameAndType	#26:#27;//  apply:()Ljava/lang/Object;
const #29 = InterfaceMethod	#25.#28;	//  scala/Function0.apply:()Ljava/lang/Object;
const #30 = Asciz	(Ljava/lang/Object;)V;
const #31 = NameAndType	#11:#30;//  "<init>":(Ljava/lang/Object;)V
const #32 = Method	#23.#31;	//  scala/Right."<init>":(Ljava/lang/Object;)V
const #33 = Asciz	scala/Left;
const #34 = class	#33;	//  scala/Left
const #35 = Method	#34.#31;	//  scala/Left."<init>":(Ljava/lang/Object;)V
const #36 = Asciz	this;
const #37 = Asciz	test;
const #38 = Asciz	Z;
const #39 = Asciz	right;
const #40 = Asciz	Lscala/Function0;;
const #41 = Asciz	left;
const #42 = Asciz	LocalVariableTable;
const #43 = Asciz	<A:Ljava/lang/Object;B:Ljava/lang/Object;>(ZLscala/Function0<TB;>;Lscala/Function0<TA;>;)Lscala/Either<TA;TB;>;;
const #44 = Asciz	Signature;
const #45 = Asciz	merge;
const #46 = Asciz	(Lscala/Either;)Ljava/lang/Object;;
const #47 = Asciz	a;
const #48 = NameAndType	#47:#27;//  a:()Ljava/lang/Object;
const #49 = Method	#34.#48;	//  scala/Left.a:()Ljava/lang/Object;
const #50 = Asciz	b;
const #51 = NameAndType	#50:#27;//  b:()Ljava/lang/Object;
const #52 = Method	#23.#51;	//  scala/Right.b:()Ljava/lang/Object;
const #53 = Asciz	scala/MatchError;
const #54 = class	#53;	//  scala/MatchError
const #55 = Asciz	scala/Either;
const #56 = class	#55;	//  scala/Either
const #57 = Asciz	toString;
const #58 = Asciz	()Ljava/lang/String;;
const #59 = NameAndType	#57:#58;//  toString:()Ljava/lang/String;
const #60 = Method	#56.#59;	//  scala/Either.toString:()Ljava/lang/String;
const #61 = Asciz	(Ljava/lang/String;)V;
const #62 = NameAndType	#11:#61;//  "<init>":(Ljava/lang/String;)V
const #63 = Method	#54.#62;	//  scala/MatchError."<init>":(Ljava/lang/String;)V
const #64 = Asciz	e;
const #65 = Asciz	Lscala/Either;;
const #66 = Asciz	temp145;
const #67 = Asciz	temp146;
const #68 = Asciz	Lscala/Left;;
const #69 = Asciz	temp147;
const #70 = Asciz	Ljava/lang/Object;;
const #71 = Asciz	temp148;
const #72 = Asciz	Lscala/Right;;
const #73 = Asciz	temp149;
const #74 = Asciz	<T:Ljava/lang/Object;>(Lscala/Either<TT;TT;>;)TT;;
const #75 = Asciz	joinRight;
const #76 = Asciz	(Lscala/Either;)Lscala/Either;;
const #77 = Asciz	()Lscala/Either$RightProjection;;
const #78 = NameAndType	#39:#77;//  right:()Lscala/Either$RightProjection;
const #79 = Method	#56.#78;	//  scala/Either.right:()Lscala/Either$RightProjection;
const #80 = Asciz	scala/Either$$anonfun$joinRight$1;
const #81 = class	#80;	//  scala/Either$$anonfun$joinRight$1
const #82 = Method	#81.#12;	//  scala/Either$$anonfun$joinRight$1."<init>":()V
const #83 = Asciz	scala/Either$RightProjection;
const #84 = class	#83;	//  scala/Either$RightProjection
const #85 = Asciz	flatMap;
const #86 = Asciz	(Lscala/Function1;)Lscala/Either;;
const #87 = NameAndType	#85:#86;//  flatMap:(Lscala/Function1;)Lscala/Either;
const #88 = Method	#84.#87;	//  scala/Either$RightProjection.flatMap:(Lscala/Function1;)Lscala/Either;
const #89 = Asciz	es;
const #90 = Asciz	<A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/Either<TA;Lscala/Either<TA;TB;>;>;)Lscala/Either<TA;TB;>;;
const #91 = Asciz	joinLeft;
const #92 = Asciz	()Lscala/Either$LeftProjection;;
const #93 = NameAndType	#41:#92;//  left:()Lscala/Either$LeftProjection;
const #94 = Method	#56.#93;	//  scala/Either.left:()Lscala/Either$LeftProjection;
const #95 = Asciz	scala/Either$$anonfun$joinLeft$1;
const #96 = class	#95;	//  scala/Either$$anonfun$joinLeft$1
const #97 = Method	#96.#12;	//  scala/Either$$anonfun$joinLeft$1."<init>":()V
const #98 = Asciz	scala/Either$LeftProjection;
const #99 = class	#98;	//  scala/Either$LeftProjection
const #100 = Method	#99.#87;	//  scala/Either$LeftProjection.flatMap:(Lscala/Function1;)Lscala/Either;
const #101 = Asciz	<A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/Either<Lscala/Either<TA;TB;>;TB;>;)Lscala/Either<TA;TB;>;;
const #102 = Asciz	separate;
const #103 = Asciz	(Lscala/collection/Iterable;)Lscala/Tuple2;;
const #104 = Asciz	scala/Tuple2;
const #105 = class	#104;	//  scala/Tuple2
const #106 = Asciz	scala/collection/immutable/Nil$;
const #107 = class	#106;	//  scala/collection/immutable/Nil$
const #108 = Asciz	Lscala/collection/immutable/Nil$;;
const #109 = NameAndType	#4:#108;//  MODULE$:Lscala/collection/immutable/Nil$;
const #110 = Field	#107.#109;	//  scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
const #111 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)V;
const #112 = NameAndType	#11:#111;//  "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
const #113 = Method	#105.#112;	//  scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
const #114 = Asciz	scala/Either$$anonfun$separate$1;
const #115 = class	#114;	//  scala/Either$$anonfun$separate$1
const #116 = Method	#115.#12;	//  scala/Either$$anonfun$separate$1."<init>":()V
const #117 = Asciz	scala/collection/generic/IterableTemplate;
const #118 = class	#117;	//  scala/collection/generic/IterableTemplate
const #119 = Asciz	foldRight;
const #120 = Asciz	(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;;
const #121 = NameAndType	#119:#120;//  foldRight:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
const #122 = InterfaceMethod	#118.#121;	//  scala/collection/generic/IterableTemplate.foldRight:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
const #123 = Asciz	Lscala/collection/Iterable;;
const #124 = Asciz	<A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/collection/Iterable<Lscala/Either<TA;TB;>;>;)Lscala/Tuple2<Lscala/collection/immutable/List<TA;>;Lscala/collection/immutable/List<TB;>;>;;
const #125 = Asciz	rights;
const #126 = Asciz	(Lscala/collection/Iterable;)Lscala/collection/immutable/List;;
const #127 = Asciz	scala/Either$$anonfun$rights$1;
const #128 = class	#127;	//  scala/Either$$anonfun$rights$1
const #129 = Method	#128.#12;	//  scala/Either$$anonfun$rights$1."<init>":()V
const #130 = Asciz	scala/collection/immutable/List;
const #131 = class	#130;	//  scala/collection/immutable/List
const #132 = Asciz	<A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/collection/Iterable<Lscala/Either<TA;TB;>;>;)Lscala/collection/immutable/List<TB;>;;
const #133 = Asciz	lefts;
const #134 = Asciz	scala/Either$$anonfun$lefts$1;
const #135 = class	#134;	//  scala/Either$$anonfun$lefts$1
const #136 = Method	#135.#12;	//  scala/Either$$anonfun$lefts$1."<init>":()V
const #137 = Asciz	<A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/collection/Iterable<Lscala/Either<TA;TB;>;>;)Lscala/collection/immutable/List<TA;>;;
const #138 = Asciz	InnerClasses;
const #139 = Asciz	LeftProjection;
const #140 = Asciz	RightProjection;
const #141 = Asciz	$anonfun$lefts$1;
const #142 = Asciz	$anonfun$rights$1;
const #143 = Asciz	$anonfun$joinLeft$1;
const #144 = Asciz	$anonfun$separate$1;
const #145 = Asciz	$anonfun$joinRight$1;
const #146 = Asciz	scala/ScalaObject;
const #147 = class	#146;	//  scala/ScalaObject

{
public static final scala.Either$ MODULE$;

public static {};
  Code:
   Stack=1, Locals=0, Args_size=0
   0:	new	#10; //class scala/Either$
   3:	invokespecial	#13; //Method "<init>":()V
   6:	return

public scala.Either cond(boolean, scala.Function0, scala.Function0);
  Code:
   Stack=3, Locals=4, Args_size=4
   0:	iload_1
   1:	ifeq	20
   4:	new	#23; //class scala/Right
   7:	dup
   8:	aload_2
   9:	invokeinterface	#29,  1; //InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
   14:	invokespecial	#32; //Method scala/Right."<init>":(Ljava/lang/Object;)V
   17:	goto	33
   20:	new	#34; //class scala/Left
   23:	dup
   24:	aload_3
   25:	invokeinterface	#29,  1; //InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
   30:	invokespecial	#35; //Method scala/Left."<init>":(Ljava/lang/Object;)V
   33:	areturn
  LineNumberTable: 
   line 329: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      34      0    this       Lscala/Either$;
   0      34      1    test       Z
   0      34      2    right       Lscala/Function0;
   0      34      3    left       Lscala/Function0;

  Signature: length = 0x2
   00 2B 

public java.lang.Object merge(scala.Either);
  Code:
   Stack=3, Locals=7, Args_size=2
   0:	aload_1
   1:	astore_2
   2:	aload_2
   3:	instanceof	#34; //class scala/Left
   6:	ifeq	25
   9:	aload_2
   10:	checkcast	#34; //class scala/Left
   13:	astore_3
   14:	aload_3
   15:	invokevirtual	#49; //Method scala/Left.a:()Ljava/lang/Object;
   18:	astore	4
   20:	aload	4
   22:	goto	47
   25:	aload_2
   26:	instanceof	#23; //class scala/Right
   29:	ifeq	48
   32:	aload_2
   33:	checkcast	#23; //class scala/Right
   36:	astore	5
   38:	aload	5
   40:	invokevirtual	#52; //Method scala/Right.b:()Ljava/lang/Object;
   43:	astore	6
   45:	aload	6
   47:	areturn
   48:	new	#54; //class scala/MatchError
   51:	dup
   52:	aload_2
   53:	invokevirtual	#60; //Method scala/Either.toString:()Ljava/lang/String;
   56:	invokespecial	#63; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   59:	athrow
  LineNumberTable: 
   line 319: 0
   line 320: 20
   line 319: 25
   line 321: 45
   line 319: 47

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      60      0    this       Lscala/Either$;
   0      60      1    e       Lscala/Either;
   2      58      2    temp145       Lscala/Either;
   14      8      3    temp146       Lscala/Left;
   20      2      4    temp147       Ljava/lang/Object;
   38      9      5    temp148       Lscala/Right;
   45      2      6    temp149       Ljava/lang/Object;

  Signature: length = 0x2
   00 4A 

public scala.Either joinRight(scala.Either);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	aload_1
   1:	invokevirtual	#79; //Method scala/Either.right:()Lscala/Either$RightProjection;
   4:	new	#81; //class scala/Either$$anonfun$joinRight$1
   7:	dup
   8:	invokespecial	#82; //Method scala/Either$$anonfun$joinRight$1."<init>":()V
   11:	invokevirtual	#88; //Method scala/Either$RightProjection.flatMap:(Lscala/Function1;)Lscala/Either;
   14:	areturn
  LineNumberTable: 
   line 313: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      15      0    this       Lscala/Either$;
   0      15      1    es       Lscala/Either;

  Signature: length = 0x2
   00 5A 

public scala.Either joinLeft(scala.Either);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	aload_1
   1:	invokevirtual	#94; //Method scala/Either.left:()Lscala/Either$LeftProjection;
   4:	new	#96; //class scala/Either$$anonfun$joinLeft$1
   7:	dup
   8:	invokespecial	#97; //Method scala/Either$$anonfun$joinLeft$1."<init>":()V
   11:	invokevirtual	#100; //Method scala/Either$LeftProjection.flatMap:(Lscala/Function1;)Lscala/Either;
   14:	areturn
  LineNumberTable: 
   line 307: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      15      0    this       Lscala/Either$;
   0      15      1    es       Lscala/Either;

  Signature: length = 0x2
   00 65 

public scala.Tuple2 separate(scala.collection.Iterable);
  Code:
   Stack=5, Locals=2, Args_size=2
   0:	aload_1
   1:	new	#105; //class scala/Tuple2
   4:	dup
   5:	getstatic	#110; //Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
   8:	getstatic	#110; //Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
   11:	invokespecial	#113; //Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
   14:	new	#115; //class scala/Either$$anonfun$separate$1
   17:	dup
   18:	invokespecial	#116; //Method scala/Either$$anonfun$separate$1."<init>":()V
   21:	invokeinterface	#122,  3; //InterfaceMethod scala/collection/generic/IterableTemplate.foldRight:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
   26:	checkcast	#105; //class scala/Tuple2
   29:	areturn
  LineNumberTable: 
   line 96: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      30      0    this       Lscala/Either$;
   0      30      1    es       Lscala/collection/Iterable;

  Signature: length = 0x2
   00 7C 

public scala.collection.immutable.List rights(scala.collection.Iterable);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	aload_1
   1:	getstatic	#110; //Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
   4:	new	#128; //class scala/Either$$anonfun$rights$1
   7:	dup
   8:	invokespecial	#129; //Method scala/Either$$anonfun$rights$1."<init>":()V
   11:	invokeinterface	#122,  3; //InterfaceMethod scala/collection/generic/IterableTemplate.foldRight:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
   16:	checkcast	#131; //class scala/collection/immutable/List
   19:	areturn
  LineNumberTable: 
   line 84: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      20      0    this       Lscala/Either$;
   0      20      1    es       Lscala/collection/Iterable;

  Signature: length = 0x2
   00 FFFFFF84 

public scala.collection.immutable.List lefts(scala.collection.Iterable);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	aload_1
   1:	getstatic	#110; //Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
   4:	new	#135; //class scala/Either$$anonfun$lefts$1
   7:	dup
   8:	invokespecial	#136; //Method scala/Either$$anonfun$lefts$1."<init>":()V
   11:	invokeinterface	#122,  3; //InterfaceMethod scala/collection/generic/IterableTemplate.foldRight:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
   16:	checkcast	#131; //class scala/collection/immutable/List
   19:	areturn
  LineNumberTable: 
   line 74: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      20      0    this       Lscala/Either$;
   0      20      1    es       Lscala/collection/Iterable;

  Signature: length = 0x2
   00 FFFFFF89 

}

