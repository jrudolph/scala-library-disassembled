Compiled from "Numeric.scala"
public abstract class scala.Numeric$DoubleIsFractional$class extends java.lang.Object
  SourceFile: "Numeric.scala"
  Scala: length = 0x
   
  InnerClass: 
   public abstract #46= #43 of #45; //DoubleIsFractional=class scala/Numeric$DoubleIsFractional of class scala/Numeric
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Numeric.scala;
const #3 = Asciz	$init$;
const #4 = Asciz	(Lscala/Numeric$DoubleIsFractional;)V;
const #5 = Asciz	Code;
const #6 = Asciz	LineNumberTable;
const #7 = Asciz	$this;
const #8 = Asciz	Lscala/Numeric$DoubleIsFractional;;
const #9 = Asciz	LocalVariableTable;
const #10 = Asciz	toDouble;
const #11 = Asciz	(Lscala/Numeric$DoubleIsFractional;D)D;
const #12 = Asciz	x;
const #13 = Asciz	D;
const #14 = Asciz	toFloat;
const #15 = Asciz	(Lscala/Numeric$DoubleIsFractional;D)F;
const #16 = Asciz	toLong;
const #17 = Asciz	(Lscala/Numeric$DoubleIsFractional;D)J;
const #18 = Asciz	toInt;
const #19 = Asciz	(Lscala/Numeric$DoubleIsFractional;D)I;
const #20 = Asciz	fromInt;
const #21 = Asciz	(Lscala/Numeric$DoubleIsFractional;I)D;
const #22 = Asciz	scala/Predef$;
const #23 = class	#22;	//  scala/Predef$
const #24 = Asciz	MODULE$;
const #25 = Asciz	Lscala/Predef$;;
const #26 = NameAndType	#24:#25;//  MODULE$:Lscala/Predef$;
const #27 = Field	#23.#26;	//  scala/Predef$.MODULE$:Lscala/Predef$;
const #28 = Asciz	int2double;
const #29 = Asciz	(I)D;
const #30 = NameAndType	#28:#29;//  int2double:(I)D
const #31 = Method	#23.#30;	//  scala/Predef$.int2double:(I)D
const #32 = Asciz	I;
const #33 = Asciz	negate;
const #34 = Asciz	div;
const #35 = Asciz	(Lscala/Numeric$DoubleIsFractional;DD)D;
const #36 = Asciz	y;
const #37 = Asciz	times;
const #38 = Asciz	minus;
const #39 = Asciz	plus;
const #40 = Asciz	Scala;
const #41 = Asciz	InnerClasses;
const #42 = Asciz	scala/Numeric$DoubleIsFractional;
const #43 = class	#42;	//  scala/Numeric$DoubleIsFractional
const #44 = Asciz	scala/Numeric;
const #45 = class	#44;	//  scala/Numeric
const #46 = Asciz	DoubleIsFractional;
const #47 = Asciz	scala/Numeric$DoubleIsFractional$class;
const #48 = class	#47;	//  scala/Numeric$DoubleIsFractional$class
const #49 = Asciz	java/lang/Object;
const #50 = class	#49;	//  java/lang/Object

{
public static void $init$(scala.Numeric$DoubleIsFractional);
  Code:
   Stack=0, Locals=1, Args_size=1
   0:	return
  LineNumberTable: 
   line 63: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      1      0    $this       Lscala/Numeric$DoubleIsFractional;


public static double toDouble(scala.Numeric$DoubleIsFractional, double);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	dload_1
   1:	dreturn
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      2      0    $this       Lscala/Numeric$DoubleIsFractional;
   0      2      1    x       D


public static float toFloat(scala.Numeric$DoubleIsFractional, double);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	dload_1
   1:	d2f
   2:	freturn
  LineNumberTable: 
   line 72: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      3      0    $this       Lscala/Numeric$DoubleIsFractional;
   0      3      1    x       D


public static long toLong(scala.Numeric$DoubleIsFractional, double);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	dload_1
   1:	d2l
   2:	lreturn
  LineNumberTable: 
   line 71: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      3      0    $this       Lscala/Numeric$DoubleIsFractional;
   0      3      1    x       D


public static int toInt(scala.Numeric$DoubleIsFractional, double);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	dload_1
   1:	d2i
   2:	ireturn
  LineNumberTable: 
   line 70: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      3      0    $this       Lscala/Numeric$DoubleIsFractional;
   0      3      1    x       D


public static double fromInt(scala.Numeric$DoubleIsFractional, int);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	getstatic	#27; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   3:	iload_1
   4:	invokevirtual	#31; //Method scala/Predef$.int2double:(I)D
   7:	dreturn
  LineNumberTable: 
   line 69: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      8      0    $this       Lscala/Numeric$DoubleIsFractional;
   0      8      1    x       I


public static double negate(scala.Numeric$DoubleIsFractional, double);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	dload_1
   1:	dneg
   2:	dreturn
  LineNumberTable: 
   line 68: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      3      0    $this       Lscala/Numeric$DoubleIsFractional;
   0      3      1    x       D


public static double div(scala.Numeric$DoubleIsFractional, double, double);
  Code:
   Stack=4, Locals=5, Args_size=3
   0:	dload_1
   1:	dload_3
   2:	ddiv
   3:	dreturn
  LineNumberTable: 
   line 67: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      4      0    $this       Lscala/Numeric$DoubleIsFractional;
   0      4      1    x       D
   0      4      3    y       D


public static double times(scala.Numeric$DoubleIsFractional, double, double);
  Code:
   Stack=4, Locals=5, Args_size=3
   0:	dload_1
   1:	dload_3
   2:	dmul
   3:	dreturn
  LineNumberTable: 
   line 66: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      4      0    $this       Lscala/Numeric$DoubleIsFractional;
   0      4      1    x       D
   0      4      3    y       D


public static double minus(scala.Numeric$DoubleIsFractional, double, double);
  Code:
   Stack=4, Locals=5, Args_size=3
   0:	dload_1
   1:	dload_3
   2:	dsub
   3:	dreturn
  LineNumberTable: 
   line 65: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      4      0    $this       Lscala/Numeric$DoubleIsFractional;
   0      4      1    x       D
   0      4      3    y       D


public static double plus(scala.Numeric$DoubleIsFractional, double, double);
  Code:
   Stack=4, Locals=5, Args_size=3
   0:	dload_1
   1:	dload_3
   2:	dadd
   3:	dreturn
  LineNumberTable: 
   line 64: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      4      0    $this       Lscala/Numeric$DoubleIsFractional;
   0      4      1    x       D
   0      4      3    y       D


}

