Compiled from "Numeric.scala"
public abstract class scala.Numeric$BigDecimalIsConflicted$class extends java.lang.Object
  SourceFile: "Numeric.scala"
  Scala: length = 0x
   
  InnerClass: 
   public abstract #78= #75 of #77; //BigDecimalIsConflicted=class scala/Numeric$BigDecimalIsConflicted of class scala/Numeric
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Numeric.scala;
const #3 = Asciz	$init$;
const #4 = Asciz	(Lscala/Numeric$BigDecimalIsConflicted;)V;
const #5 = Asciz	Code;
const #6 = Asciz	LineNumberTable;
const #7 = Asciz	$this;
const #8 = Asciz	Lscala/Numeric$BigDecimalIsConflicted;;
const #9 = Asciz	LocalVariableTable;
const #10 = Asciz	toDouble;
const #11 = Asciz	(Lscala/Numeric$BigDecimalIsConflicted;Lscala/BigDecimal;)D;
const #12 = Asciz	scala/BigDecimal;
const #13 = class	#12;	//  scala/BigDecimal
const #14 = Asciz	doubleValue;
const #15 = Asciz	()D;
const #16 = NameAndType	#14:#15;//  doubleValue:()D
const #17 = Method	#13.#16;	//  scala/BigDecimal.doubleValue:()D
const #18 = Asciz	x;
const #19 = Asciz	Lscala/BigDecimal;;
const #20 = Asciz	toFloat;
const #21 = Asciz	(Lscala/Numeric$BigDecimalIsConflicted;Lscala/BigDecimal;)F;
const #22 = Asciz	floatValue;
const #23 = Asciz	()F;
const #24 = NameAndType	#22:#23;//  floatValue:()F
const #25 = Method	#13.#24;	//  scala/BigDecimal.floatValue:()F
const #26 = Asciz	toLong;
const #27 = Asciz	(Lscala/Numeric$BigDecimalIsConflicted;Lscala/BigDecimal;)J;
const #28 = Asciz	longValue;
const #29 = Asciz	()J;
const #30 = NameAndType	#28:#29;//  longValue:()J
const #31 = Method	#13.#30;	//  scala/BigDecimal.longValue:()J
const #32 = Asciz	toInt;
const #33 = Asciz	(Lscala/Numeric$BigDecimalIsConflicted;Lscala/BigDecimal;)I;
const #34 = Asciz	intValue;
const #35 = Asciz	()I;
const #36 = NameAndType	#34:#35;//  intValue:()I
const #37 = Method	#13.#36;	//  scala/BigDecimal.intValue:()I
const #38 = Asciz	fromInt;
const #39 = Asciz	(Lscala/Numeric$BigDecimalIsConflicted;I)Lscala/BigDecimal;;
const #40 = Asciz	scala/BigDecimal$;
const #41 = class	#40;	//  scala/BigDecimal$
const #42 = Asciz	MODULE$;
const #43 = Asciz	Lscala/BigDecimal$;;
const #44 = NameAndType	#42:#43;//  MODULE$:Lscala/BigDecimal$;
const #45 = Field	#41.#44;	//  scala/BigDecimal$.MODULE$:Lscala/BigDecimal$;
const #46 = Asciz	apply;
const #47 = Asciz	(I)Lscala/BigDecimal;;
const #48 = NameAndType	#46:#47;//  apply:(I)Lscala/BigDecimal;
const #49 = Method	#41.#48;	//  scala/BigDecimal$.apply:(I)Lscala/BigDecimal;
const #50 = Asciz	I;
const #51 = Asciz	negate;
const #52 = Asciz	(Lscala/Numeric$BigDecimalIsConflicted;Lscala/BigDecimal;)Lscala/BigDecimal;;
const #53 = Asciz	unary_$minus;
const #54 = Asciz	()Lscala/BigDecimal;;
const #55 = NameAndType	#53:#54;//  unary_$minus:()Lscala/BigDecimal;
const #56 = Method	#13.#55;	//  scala/BigDecimal.unary_$minus:()Lscala/BigDecimal;
const #57 = Asciz	times;
const #58 = Asciz	(Lscala/Numeric$BigDecimalIsConflicted;Lscala/BigDecimal;Lscala/BigDecimal;)Lscala/BigDecimal;;
const #59 = Asciz	$times;
const #60 = Asciz	(Lscala/BigDecimal;)Lscala/BigDecimal;;
const #61 = NameAndType	#59:#60;//  $times:(Lscala/BigDecimal;)Lscala/BigDecimal;
const #62 = Method	#13.#61;	//  scala/BigDecimal.$times:(Lscala/BigDecimal;)Lscala/BigDecimal;
const #63 = Asciz	y;
const #64 = Asciz	minus;
const #65 = Asciz	$minus;
const #66 = NameAndType	#65:#60;//  $minus:(Lscala/BigDecimal;)Lscala/BigDecimal;
const #67 = Method	#13.#66;	//  scala/BigDecimal.$minus:(Lscala/BigDecimal;)Lscala/BigDecimal;
const #68 = Asciz	plus;
const #69 = Asciz	$plus;
const #70 = NameAndType	#69:#60;//  $plus:(Lscala/BigDecimal;)Lscala/BigDecimal;
const #71 = Method	#13.#70;	//  scala/BigDecimal.$plus:(Lscala/BigDecimal;)Lscala/BigDecimal;
const #72 = Asciz	Scala;
const #73 = Asciz	InnerClasses;
const #74 = Asciz	scala/Numeric$BigDecimalIsConflicted;
const #75 = class	#74;	//  scala/Numeric$BigDecimalIsConflicted
const #76 = Asciz	scala/Numeric;
const #77 = class	#76;	//  scala/Numeric
const #78 = Asciz	BigDecimalIsConflicted;
const #79 = Asciz	scala/Numeric$BigDecimalIsConflicted$class;
const #80 = class	#79;	//  scala/Numeric$BigDecimalIsConflicted$class
const #81 = Asciz	java/lang/Object;
const #82 = class	#81;	//  java/lang/Object

{
public static void $init$(scala.Numeric$BigDecimalIsConflicted);
  Code:
   Stack=0, Locals=1, Args_size=1
   0:	return
  LineNumberTable: 
   line 77: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      1      0    $this       Lscala/Numeric$BigDecimalIsConflicted;


public static double toDouble(scala.Numeric$BigDecimalIsConflicted, scala.BigDecimal);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_1
   1:	invokevirtual	#17; //Method scala/BigDecimal.doubleValue:()D
   4:	dreturn
  LineNumberTable: 
   line 86: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    $this       Lscala/Numeric$BigDecimalIsConflicted;
   0      5      1    x       Lscala/BigDecimal;


public static float toFloat(scala.Numeric$BigDecimalIsConflicted, scala.BigDecimal);
  Code:
   Stack=1, Locals=2, Args_size=2
   0:	aload_1
   1:	invokevirtual	#25; //Method scala/BigDecimal.floatValue:()F
   4:	freturn
  LineNumberTable: 
   line 85: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    $this       Lscala/Numeric$BigDecimalIsConflicted;
   0      5      1    x       Lscala/BigDecimal;


public static long toLong(scala.Numeric$BigDecimalIsConflicted, scala.BigDecimal);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_1
   1:	invokevirtual	#31; //Method scala/BigDecimal.longValue:()J
   4:	lreturn
  LineNumberTable: 
   line 84: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    $this       Lscala/Numeric$BigDecimalIsConflicted;
   0      5      1    x       Lscala/BigDecimal;


public static int toInt(scala.Numeric$BigDecimalIsConflicted, scala.BigDecimal);
  Code:
   Stack=1, Locals=2, Args_size=2
   0:	aload_1
   1:	invokevirtual	#37; //Method scala/BigDecimal.intValue:()I
   4:	ireturn
  LineNumberTable: 
   line 83: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    $this       Lscala/Numeric$BigDecimalIsConflicted;
   0      5      1    x       Lscala/BigDecimal;


public static scala.BigDecimal fromInt(scala.Numeric$BigDecimalIsConflicted, int);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	getstatic	#45; //Field scala/BigDecimal$.MODULE$:Lscala/BigDecimal$;
   3:	iload_1
   4:	invokevirtual	#49; //Method scala/BigDecimal$.apply:(I)Lscala/BigDecimal;
   7:	areturn
  LineNumberTable: 
   line 82: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      8      0    $this       Lscala/Numeric$BigDecimalIsConflicted;
   0      8      1    x       I


public static scala.BigDecimal negate(scala.Numeric$BigDecimalIsConflicted, scala.BigDecimal);
  Code:
   Stack=1, Locals=2, Args_size=2
   0:	aload_1
   1:	invokevirtual	#56; //Method scala/BigDecimal.unary_$minus:()Lscala/BigDecimal;
   4:	areturn
  LineNumberTable: 
   line 81: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    $this       Lscala/Numeric$BigDecimalIsConflicted;
   0      5      1    x       Lscala/BigDecimal;


public static scala.BigDecimal times(scala.Numeric$BigDecimalIsConflicted, scala.BigDecimal, scala.BigDecimal);
  Code:
   Stack=2, Locals=3, Args_size=3
   0:	aload_1
   1:	aload_2
   2:	invokevirtual	#62; //Method scala/BigDecimal.$times:(Lscala/BigDecimal;)Lscala/BigDecimal;
   5:	areturn
  LineNumberTable: 
   line 80: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    $this       Lscala/Numeric$BigDecimalIsConflicted;
   0      6      1    x       Lscala/BigDecimal;
   0      6      2    y       Lscala/BigDecimal;


public static scala.BigDecimal minus(scala.Numeric$BigDecimalIsConflicted, scala.BigDecimal, scala.BigDecimal);
  Code:
   Stack=2, Locals=3, Args_size=3
   0:	aload_1
   1:	aload_2
   2:	invokevirtual	#67; //Method scala/BigDecimal.$minus:(Lscala/BigDecimal;)Lscala/BigDecimal;
   5:	areturn
  LineNumberTable: 
   line 79: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    $this       Lscala/Numeric$BigDecimalIsConflicted;
   0      6      1    x       Lscala/BigDecimal;
   0      6      2    y       Lscala/BigDecimal;


public static scala.BigDecimal plus(scala.Numeric$BigDecimalIsConflicted, scala.BigDecimal, scala.BigDecimal);
  Code:
   Stack=2, Locals=3, Args_size=3
   0:	aload_1
   1:	aload_2
   2:	invokevirtual	#71; //Method scala/BigDecimal.$plus:(Lscala/BigDecimal;)Lscala/BigDecimal;
   5:	areturn
  LineNumberTable: 
   line 78: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    $this       Lscala/Numeric$BigDecimalIsConflicted;
   0      6      1    x       Lscala/BigDecimal;
   0      6      2    y       Lscala/BigDecimal;


}

