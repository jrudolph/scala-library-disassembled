Compiled from "Numeric.scala"
public final class scala.Numeric$BigDecimalAsIfIntegral$ extends java.lang.Object implements scala.Numeric$BigDecimalAsIfIntegral,scala.Ordering$BigDecimalOrdering,scala.ScalaObject
  SourceFile: "Numeric.scala"
  Scala: length = 0x
   
  InnerClass: 
   public #227= #224 of #226; //Ops=class scala/Numeric$Ops of class scala/Numeric
   public #227= #229 of #133; //Ops=class scala/Ordering$Ops of class scala/Ordering
   public #232= #231 of #83; //IntegralOps=class scala/Integral$IntegralOps of class scala/Integral
   public abstract #233= #61 of #133; //BigDecimalOrdering=class scala/Ordering$BigDecimalOrdering of class scala/Ordering
   public abstract #234= #90 of #226; //BigDecimalIsConflicted=class scala/Numeric$BigDecimalIsConflicted of class scala/Numeric
   public abstract #235= #73 of #226; //BigDecimalAsIfIntegral=class scala/Numeric$BigDecimalAsIfIntegral of class scala/Numeric
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Numeric.scala;
const #3 = Asciz	Scala;
const #4 = Asciz	MODULE$;
const #5 = Asciz	Lscala/Numeric$BigDecimalAsIfIntegral$;;
const #6 = Asciz	<clinit>;
const #7 = Asciz	()V;
const #8 = Asciz	Code;
const #9 = Asciz	scala/Numeric$BigDecimalAsIfIntegral$;
const #10 = class	#9;	//  scala/Numeric$BigDecimalAsIfIntegral$
const #11 = Asciz	<init>;
const #12 = NameAndType	#11:#7;//  "<init>":()V
const #13 = Method	#10.#12;	//  scala/Numeric$BigDecimalAsIfIntegral$."<init>":()V
const #14 = Asciz	LineNumberTable;
const #15 = Asciz	java/lang/Object;
const #16 = class	#15;	//  java/lang/Object
const #17 = Method	#16.#12;	//  java/lang/Object."<init>":()V
const #18 = NameAndType	#4:#5;//  MODULE$:Lscala/Numeric$BigDecimalAsIfIntegral$;
const #19 = Field	#10.#18;	//  scala/Numeric$BigDecimalAsIfIntegral$.MODULE$:Lscala/Numeric$BigDecimalAsIfIntegral$;
const #20 = Asciz	scala/PartialOrdering$class;
const #21 = class	#20;	//  scala/PartialOrdering$class
const #22 = Asciz	$init$;
const #23 = Asciz	(Lscala/PartialOrdering;)V;
const #24 = NameAndType	#22:#23;//  $init$:(Lscala/PartialOrdering;)V
const #25 = Method	#21.#24;	//  scala/PartialOrdering$class.$init$:(Lscala/PartialOrdering;)V
const #26 = Asciz	scala/Ordering$class;
const #27 = class	#26;	//  scala/Ordering$class
const #28 = Asciz	(Lscala/Ordering;)V;
const #29 = NameAndType	#22:#28;//  $init$:(Lscala/Ordering;)V
const #30 = Method	#27.#29;	//  scala/Ordering$class.$init$:(Lscala/Ordering;)V
const #31 = Asciz	scala/Numeric$class;
const #32 = class	#31;	//  scala/Numeric$class
const #33 = Asciz	(Lscala/Numeric;)V;
const #34 = NameAndType	#22:#33;//  $init$:(Lscala/Numeric;)V
const #35 = Method	#32.#34;	//  scala/Numeric$class.$init$:(Lscala/Numeric;)V
const #36 = Asciz	scala/Numeric$BigDecimalIsConflicted$class;
const #37 = class	#36;	//  scala/Numeric$BigDecimalIsConflicted$class
const #38 = Asciz	(Lscala/Numeric$BigDecimalIsConflicted;)V;
const #39 = NameAndType	#22:#38;//  $init$:(Lscala/Numeric$BigDecimalIsConflicted;)V
const #40 = Method	#37.#39;	//  scala/Numeric$BigDecimalIsConflicted$class.$init$:(Lscala/Numeric$BigDecimalIsConflicted;)V
const #41 = Asciz	scala/Integral$class;
const #42 = class	#41;	//  scala/Integral$class
const #43 = Asciz	(Lscala/Integral;)V;
const #44 = NameAndType	#22:#43;//  $init$:(Lscala/Integral;)V
const #45 = Method	#42.#44;	//  scala/Integral$class.$init$:(Lscala/Integral;)V
const #46 = Asciz	scala/Numeric$BigDecimalAsIfIntegral$class;
const #47 = class	#46;	//  scala/Numeric$BigDecimalAsIfIntegral$class
const #48 = Asciz	(Lscala/Numeric$BigDecimalAsIfIntegral;)V;
const #49 = NameAndType	#22:#48;//  $init$:(Lscala/Numeric$BigDecimalAsIfIntegral;)V
const #50 = Method	#47.#49;	//  scala/Numeric$BigDecimalAsIfIntegral$class.$init$:(Lscala/Numeric$BigDecimalAsIfIntegral;)V
const #51 = Asciz	scala/Ordering$BigDecimalOrdering$class;
const #52 = class	#51;	//  scala/Ordering$BigDecimalOrdering$class
const #53 = Asciz	(Lscala/Ordering$BigDecimalOrdering;)V;
const #54 = NameAndType	#22:#53;//  $init$:(Lscala/Ordering$BigDecimalOrdering;)V
const #55 = Method	#52.#54;	//  scala/Ordering$BigDecimalOrdering$class.$init$:(Lscala/Ordering$BigDecimalOrdering;)V
const #56 = Asciz	compare;
const #57 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)I;
const #58 = Asciz	scala/BigDecimal;
const #59 = class	#58;	//  scala/BigDecimal
const #60 = Asciz	scala/Ordering$BigDecimalOrdering;
const #61 = class	#60;	//  scala/Ordering$BigDecimalOrdering
const #62 = Asciz	(Lscala/BigDecimal;Lscala/BigDecimal;)I;
const #63 = NameAndType	#56:#62;//  compare:(Lscala/BigDecimal;Lscala/BigDecimal;)I
const #64 = InterfaceMethod	#61.#63;	//  scala/Ordering$BigDecimalOrdering.compare:(Lscala/BigDecimal;Lscala/BigDecimal;)I
const #65 = Asciz	this;
const #66 = Asciz	x;
const #67 = Asciz	Ljava/lang/Object;;
const #68 = Asciz	y;
const #69 = Asciz	LocalVariableTable;
const #70 = Asciz	quot;
const #71 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;;
const #72 = Asciz	scala/Numeric$BigDecimalAsIfIntegral;
const #73 = class	#72;	//  scala/Numeric$BigDecimalAsIfIntegral
const #74 = Asciz	(Lscala/BigDecimal;Lscala/BigDecimal;)Lscala/BigDecimal;;
const #75 = NameAndType	#70:#74;//  quot:(Lscala/BigDecimal;Lscala/BigDecimal;)Lscala/BigDecimal;
const #76 = InterfaceMethod	#73.#75;	//  scala/Numeric$BigDecimalAsIfIntegral.quot:(Lscala/BigDecimal;Lscala/BigDecimal;)Lscala/BigDecimal;
const #77 = Asciz	rem;
const #78 = NameAndType	#77:#74;//  rem:(Lscala/BigDecimal;Lscala/BigDecimal;)Lscala/BigDecimal;
const #79 = InterfaceMethod	#73.#78;	//  scala/Numeric$BigDecimalAsIfIntegral.rem:(Lscala/BigDecimal;Lscala/BigDecimal;)Lscala/BigDecimal;
const #80 = Asciz	mkNumericOps;
const #81 = Asciz	(Ljava/lang/Object;)Lscala/Numeric$Ops;;
const #82 = Asciz	scala/Integral;
const #83 = class	#82;	//  scala/Integral
const #84 = Asciz	(Ljava/lang/Object;)Lscala/Integral$IntegralOps;;
const #85 = NameAndType	#80:#84;//  mkNumericOps:(Ljava/lang/Object;)Lscala/Integral$IntegralOps;
const #86 = InterfaceMethod	#83.#85;	//  scala/Integral.mkNumericOps:(Ljava/lang/Object;)Lscala/Integral$IntegralOps;
const #87 = Asciz	lhs;
const #88 = Asciz	plus;
const #89 = Asciz	scala/Numeric$BigDecimalIsConflicted;
const #90 = class	#89;	//  scala/Numeric$BigDecimalIsConflicted
const #91 = NameAndType	#88:#74;//  plus:(Lscala/BigDecimal;Lscala/BigDecimal;)Lscala/BigDecimal;
const #92 = InterfaceMethod	#90.#91;	//  scala/Numeric$BigDecimalIsConflicted.plus:(Lscala/BigDecimal;Lscala/BigDecimal;)Lscala/BigDecimal;
const #93 = Asciz	minus;
const #94 = NameAndType	#93:#74;//  minus:(Lscala/BigDecimal;Lscala/BigDecimal;)Lscala/BigDecimal;
const #95 = InterfaceMethod	#90.#94;	//  scala/Numeric$BigDecimalIsConflicted.minus:(Lscala/BigDecimal;Lscala/BigDecimal;)Lscala/BigDecimal;
const #96 = Asciz	times;
const #97 = NameAndType	#96:#74;//  times:(Lscala/BigDecimal;Lscala/BigDecimal;)Lscala/BigDecimal;
const #98 = InterfaceMethod	#90.#97;	//  scala/Numeric$BigDecimalIsConflicted.times:(Lscala/BigDecimal;Lscala/BigDecimal;)Lscala/BigDecimal;
const #99 = Asciz	negate;
const #100 = Asciz	(Ljava/lang/Object;)Ljava/lang/Object;;
const #101 = Asciz	(Lscala/BigDecimal;)Lscala/BigDecimal;;
const #102 = NameAndType	#99:#101;//  negate:(Lscala/BigDecimal;)Lscala/BigDecimal;
const #103 = InterfaceMethod	#90.#102;	//  scala/Numeric$BigDecimalIsConflicted.negate:(Lscala/BigDecimal;)Lscala/BigDecimal;
const #104 = Asciz	fromInt;
const #105 = Asciz	(I)Ljava/lang/Object;;
const #106 = Asciz	(I)Lscala/BigDecimal;;
const #107 = NameAndType	#104:#106;//  fromInt:(I)Lscala/BigDecimal;
const #108 = InterfaceMethod	#90.#107;	//  scala/Numeric$BigDecimalIsConflicted.fromInt:(I)Lscala/BigDecimal;
const #109 = Asciz	I;
const #110 = Asciz	toInt;
const #111 = Asciz	(Ljava/lang/Object;)I;
const #112 = Asciz	(Lscala/BigDecimal;)I;
const #113 = NameAndType	#110:#112;//  toInt:(Lscala/BigDecimal;)I
const #114 = InterfaceMethod	#90.#113;	//  scala/Numeric$BigDecimalIsConflicted.toInt:(Lscala/BigDecimal;)I
const #115 = Asciz	toLong;
const #116 = Asciz	(Ljava/lang/Object;)J;
const #117 = Asciz	(Lscala/BigDecimal;)J;
const #118 = NameAndType	#115:#117;//  toLong:(Lscala/BigDecimal;)J
const #119 = InterfaceMethod	#90.#118;	//  scala/Numeric$BigDecimalIsConflicted.toLong:(Lscala/BigDecimal;)J
const #120 = Asciz	toFloat;
const #121 = Asciz	(Ljava/lang/Object;)F;
const #122 = Asciz	(Lscala/BigDecimal;)F;
const #123 = NameAndType	#120:#122;//  toFloat:(Lscala/BigDecimal;)F
const #124 = InterfaceMethod	#90.#123;	//  scala/Numeric$BigDecimalIsConflicted.toFloat:(Lscala/BigDecimal;)F
const #125 = Asciz	toDouble;
const #126 = Asciz	(Ljava/lang/Object;)D;
const #127 = Asciz	(Lscala/BigDecimal;)D;
const #128 = NameAndType	#125:#127;//  toDouble:(Lscala/BigDecimal;)D
const #129 = InterfaceMethod	#90.#128;	//  scala/Numeric$BigDecimalIsConflicted.toDouble:(Lscala/BigDecimal;)D
const #130 = Asciz	reverse;
const #131 = Asciz	()Lscala/PartialOrdering;;
const #132 = Asciz	scala/Ordering;
const #133 = class	#132;	//  scala/Ordering
const #134 = Asciz	()Lscala/Ordering;;
const #135 = NameAndType	#130:#134;//  reverse:()Lscala/Ordering;
const #136 = InterfaceMethod	#133.#135;	//  scala/Ordering.reverse:()Lscala/Ordering;
const #137 = Asciz	mkOrderingOps;
const #138 = Asciz	(Ljava/lang/Object;)Lscala/Ordering$Ops;;
const #139 = Asciz	(Lscala/Ordering;Ljava/lang/Object;)Lscala/Ordering$Ops;;
const #140 = NameAndType	#137:#139;//  mkOrderingOps:(Lscala/Ordering;Ljava/lang/Object;)Lscala/Ordering$Ops;
const #141 = Method	#27.#140;	//  scala/Ordering$class.mkOrderingOps:(Lscala/Ordering;Ljava/lang/Object;)Lscala/Ordering$Ops;
const #142 = Asciz	(Lscala/Ordering;)Lscala/Ordering;;
const #143 = NameAndType	#130:#142;//  reverse:(Lscala/Ordering;)Lscala/Ordering;
const #144 = Method	#27.#143;	//  scala/Ordering$class.reverse:(Lscala/Ordering;)Lscala/Ordering;
const #145 = Asciz	min;
const #146 = Asciz	(Lscala/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;;
const #147 = NameAndType	#145:#146;//  min:(Lscala/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
const #148 = Method	#27.#147;	//  scala/Ordering$class.min:(Lscala/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
const #149 = Asciz	max;
const #150 = NameAndType	#149:#146;//  max:(Lscala/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
const #151 = Method	#27.#150;	//  scala/Ordering$class.max:(Lscala/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
const #152 = Asciz	equiv;
const #153 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)Z;
const #154 = Asciz	(Lscala/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z;
const #155 = NameAndType	#152:#154;//  equiv:(Lscala/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #156 = Method	#27.#155;	//  scala/Ordering$class.equiv:(Lscala/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #157 = Asciz	gt;
const #158 = NameAndType	#157:#154;//  gt:(Lscala/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #159 = Method	#27.#158;	//  scala/Ordering$class.gt:(Lscala/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #160 = Asciz	lt;
const #161 = NameAndType	#160:#154;//  lt:(Lscala/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #162 = Method	#27.#161;	//  scala/Ordering$class.lt:(Lscala/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #163 = Asciz	gteq;
const #164 = NameAndType	#163:#154;//  gteq:(Lscala/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #165 = Method	#27.#164;	//  scala/Ordering$class.gteq:(Lscala/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #166 = Asciz	lteq;
const #167 = NameAndType	#166:#154;//  lteq:(Lscala/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #168 = Method	#27.#167;	//  scala/Ordering$class.lteq:(Lscala/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
const #169 = Asciz	signum;
const #170 = Asciz	(Lscala/Numeric;Ljava/lang/Object;)I;
const #171 = NameAndType	#169:#170;//  signum:(Lscala/Numeric;Ljava/lang/Object;)I
const #172 = Method	#32.#171;	//  scala/Numeric$class.signum:(Lscala/Numeric;Ljava/lang/Object;)I
const #173 = Asciz	abs;
const #174 = Asciz	(Lscala/Numeric;Ljava/lang/Object;)Ljava/lang/Object;;
const #175 = NameAndType	#173:#174;//  abs:(Lscala/Numeric;Ljava/lang/Object;)Ljava/lang/Object;
const #176 = Method	#32.#175;	//  scala/Numeric$class.abs:(Lscala/Numeric;Ljava/lang/Object;)Ljava/lang/Object;
const #177 = Asciz	one;
const #178 = Asciz	()Ljava/lang/Object;;
const #179 = Asciz	(Lscala/Numeric;)Ljava/lang/Object;;
const #180 = NameAndType	#177:#179;//  one:(Lscala/Numeric;)Ljava/lang/Object;
const #181 = Method	#32.#180;	//  scala/Numeric$class.one:(Lscala/Numeric;)Ljava/lang/Object;
const #182 = Asciz	zero;
const #183 = NameAndType	#182:#179;//  zero:(Lscala/Numeric;)Ljava/lang/Object;
const #184 = Method	#32.#183;	//  scala/Numeric$class.zero:(Lscala/Numeric;)Ljava/lang/Object;
const #185 = Asciz	(Lscala/Numeric$BigDecimalIsConflicted;Lscala/BigDecimal;)D;
const #186 = NameAndType	#125:#185;//  toDouble:(Lscala/Numeric$BigDecimalIsConflicted;Lscala/BigDecimal;)D
const #187 = Method	#37.#186;	//  scala/Numeric$BigDecimalIsConflicted$class.toDouble:(Lscala/Numeric$BigDecimalIsConflicted;Lscala/BigDecimal;)D
const #188 = Asciz	Lscala/BigDecimal;;
const #189 = Asciz	(Lscala/Numeric$BigDecimalIsConflicted;Lscala/BigDecimal;)F;
const #190 = NameAndType	#120:#189;//  toFloat:(Lscala/Numeric$BigDecimalIsConflicted;Lscala/BigDecimal;)F
const #191 = Method	#37.#190;	//  scala/Numeric$BigDecimalIsConflicted$class.toFloat:(Lscala/Numeric$BigDecimalIsConflicted;Lscala/BigDecimal;)F
const #192 = Asciz	(Lscala/Numeric$BigDecimalIsConflicted;Lscala/BigDecimal;)J;
const #193 = NameAndType	#115:#192;//  toLong:(Lscala/Numeric$BigDecimalIsConflicted;Lscala/BigDecimal;)J
const #194 = Method	#37.#193;	//  scala/Numeric$BigDecimalIsConflicted$class.toLong:(Lscala/Numeric$BigDecimalIsConflicted;Lscala/BigDecimal;)J
const #195 = Asciz	(Lscala/Numeric$BigDecimalIsConflicted;Lscala/BigDecimal;)I;
const #196 = NameAndType	#110:#195;//  toInt:(Lscala/Numeric$BigDecimalIsConflicted;Lscala/BigDecimal;)I
const #197 = Method	#37.#196;	//  scala/Numeric$BigDecimalIsConflicted$class.toInt:(Lscala/Numeric$BigDecimalIsConflicted;Lscala/BigDecimal;)I
const #198 = Asciz	(Lscala/Numeric$BigDecimalIsConflicted;I)Lscala/BigDecimal;;
const #199 = NameAndType	#104:#198;//  fromInt:(Lscala/Numeric$BigDecimalIsConflicted;I)Lscala/BigDecimal;
const #200 = Method	#37.#199;	//  scala/Numeric$BigDecimalIsConflicted$class.fromInt:(Lscala/Numeric$BigDecimalIsConflicted;I)Lscala/BigDecimal;
const #201 = Asciz	(Lscala/Numeric$BigDecimalIsConflicted;Lscala/BigDecimal;)Lscala/BigDecimal;;
const #202 = NameAndType	#99:#201;//  negate:(Lscala/Numeric$BigDecimalIsConflicted;Lscala/BigDecimal;)Lscala/BigDecimal;
const #203 = Method	#37.#202;	//  scala/Numeric$BigDecimalIsConflicted$class.negate:(Lscala/Numeric$BigDecimalIsConflicted;Lscala/BigDecimal;)Lscala/BigDecimal;
const #204 = Asciz	(Lscala/Numeric$BigDecimalIsConflicted;Lscala/BigDecimal;Lscala/BigDecimal;)Lscala/BigDecimal;;
const #205 = NameAndType	#96:#204;//  times:(Lscala/Numeric$BigDecimalIsConflicted;Lscala/BigDecimal;Lscala/BigDecimal;)Lscala/BigDecimal;
const #206 = Method	#37.#205;	//  scala/Numeric$BigDecimalIsConflicted$class.times:(Lscala/Numeric$BigDecimalIsConflicted;Lscala/BigDecimal;Lscala/BigDecimal;)Lscala/BigDecimal;
const #207 = NameAndType	#93:#204;//  minus:(Lscala/Numeric$BigDecimalIsConflicted;Lscala/BigDecimal;Lscala/BigDecimal;)Lscala/BigDecimal;
const #208 = Method	#37.#207;	//  scala/Numeric$BigDecimalIsConflicted$class.minus:(Lscala/Numeric$BigDecimalIsConflicted;Lscala/BigDecimal;Lscala/BigDecimal;)Lscala/BigDecimal;
const #209 = NameAndType	#88:#204;//  plus:(Lscala/Numeric$BigDecimalIsConflicted;Lscala/BigDecimal;Lscala/BigDecimal;)Lscala/BigDecimal;
const #210 = Method	#37.#209;	//  scala/Numeric$BigDecimalIsConflicted$class.plus:(Lscala/Numeric$BigDecimalIsConflicted;Lscala/BigDecimal;Lscala/BigDecimal;)Lscala/BigDecimal;
const #211 = Asciz	(Lscala/Integral;Ljava/lang/Object;)Lscala/Integral$IntegralOps;;
const #212 = NameAndType	#80:#211;//  mkNumericOps:(Lscala/Integral;Ljava/lang/Object;)Lscala/Integral$IntegralOps;
const #213 = Method	#42.#212;	//  scala/Integral$class.mkNumericOps:(Lscala/Integral;Ljava/lang/Object;)Lscala/Integral$IntegralOps;
const #214 = Asciz	(Lscala/Numeric$BigDecimalAsIfIntegral;Lscala/BigDecimal;Lscala/BigDecimal;)Lscala/BigDecimal;;
const #215 = NameAndType	#77:#214;//  rem:(Lscala/Numeric$BigDecimalAsIfIntegral;Lscala/BigDecimal;Lscala/BigDecimal;)Lscala/BigDecimal;
const #216 = Method	#47.#215;	//  scala/Numeric$BigDecimalAsIfIntegral$class.rem:(Lscala/Numeric$BigDecimalAsIfIntegral;Lscala/BigDecimal;Lscala/BigDecimal;)Lscala/BigDecimal;
const #217 = NameAndType	#70:#214;//  quot:(Lscala/Numeric$BigDecimalAsIfIntegral;Lscala/BigDecimal;Lscala/BigDecimal;)Lscala/BigDecimal;
const #218 = Method	#47.#217;	//  scala/Numeric$BigDecimalAsIfIntegral$class.quot:(Lscala/Numeric$BigDecimalAsIfIntegral;Lscala/BigDecimal;Lscala/BigDecimal;)Lscala/BigDecimal;
const #219 = Asciz	(Lscala/Ordering$BigDecimalOrdering;Lscala/BigDecimal;Lscala/BigDecimal;)I;
const #220 = NameAndType	#56:#219;//  compare:(Lscala/Ordering$BigDecimalOrdering;Lscala/BigDecimal;Lscala/BigDecimal;)I
const #221 = Method	#52.#220;	//  scala/Ordering$BigDecimalOrdering$class.compare:(Lscala/Ordering$BigDecimalOrdering;Lscala/BigDecimal;Lscala/BigDecimal;)I
const #222 = Asciz	InnerClasses;
const #223 = Asciz	scala/Numeric$Ops;
const #224 = class	#223;	//  scala/Numeric$Ops
const #225 = Asciz	scala/Numeric;
const #226 = class	#225;	//  scala/Numeric
const #227 = Asciz	Ops;
const #228 = Asciz	scala/Ordering$Ops;
const #229 = class	#228;	//  scala/Ordering$Ops
const #230 = Asciz	scala/Integral$IntegralOps;
const #231 = class	#230;	//  scala/Integral$IntegralOps
const #232 = Asciz	IntegralOps;
const #233 = Asciz	BigDecimalOrdering;
const #234 = Asciz	BigDecimalIsConflicted;
const #235 = Asciz	BigDecimalAsIfIntegral;
const #236 = Asciz	scala/ScalaObject;
const #237 = class	#236;	//  scala/ScalaObject

{
public static final scala.Numeric$BigDecimalAsIfIntegral$ MODULE$;

public static {};
  Code:
   Stack=1, Locals=0, Args_size=0
   0:	new	#10; //class scala/Numeric$BigDecimalAsIfIntegral$
   3:	invokespecial	#13; //Method "<init>":()V
   6:	return

public scala.Numeric$BigDecimalAsIfIntegral$();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokespecial	#17; //Method java/lang/Object."<init>":()V
   4:	aload_0
   5:	putstatic	#19; //Field MODULE$:Lscala/Numeric$BigDecimalAsIfIntegral$;
   8:	aload_0
   9:	invokestatic	#25; //Method scala/PartialOrdering$class.$init$:(Lscala/PartialOrdering;)V
   12:	aload_0
   13:	invokestatic	#30; //Method scala/Ordering$class.$init$:(Lscala/Ordering;)V
   16:	aload_0
   17:	invokestatic	#35; //Method scala/Numeric$class.$init$:(Lscala/Numeric;)V
   20:	aload_0
   21:	invokestatic	#40; //Method scala/Numeric$BigDecimalIsConflicted$class.$init$:(Lscala/Numeric$BigDecimalIsConflicted;)V
   24:	aload_0
   25:	invokestatic	#45; //Method scala/Integral$class.$init$:(Lscala/Integral;)V
   28:	aload_0
   29:	invokestatic	#50; //Method scala/Numeric$BigDecimalAsIfIntegral$class.$init$:(Lscala/Numeric$BigDecimalAsIfIntegral;)V
   32:	aload_0
   33:	invokestatic	#55; //Method scala/Ordering$BigDecimalOrdering$class.$init$:(Lscala/Ordering$BigDecimalOrdering;)V
   36:	return
  LineNumberTable: 
   line 101: 0


public int compare(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	checkcast	#59; //class scala/BigDecimal
   5:	aload_2
   6:	checkcast	#59; //class scala/BigDecimal
   9:	invokeinterface	#64,  3; //InterfaceMethod scala/Ordering$BigDecimalOrdering.compare:(Lscala/BigDecimal;Lscala/BigDecimal;)I
   14:	ireturn
  LineNumberTable: 
   line 101: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      15      0    this       Lscala/Numeric$BigDecimalAsIfIntegral$;
   0      15      1    x       Ljava/lang/Object;
   0      15      2    y       Ljava/lang/Object;


public java.lang.Object quot(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	checkcast	#59; //class scala/BigDecimal
   5:	aload_2
   6:	checkcast	#59; //class scala/BigDecimal
   9:	invokeinterface	#76,  3; //InterfaceMethod scala/Numeric$BigDecimalAsIfIntegral.quot:(Lscala/BigDecimal;Lscala/BigDecimal;)Lscala/BigDecimal;
   14:	areturn
  LineNumberTable: 
   line 101: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      15      0    this       Lscala/Numeric$BigDecimalAsIfIntegral$;
   0      15      1    x       Ljava/lang/Object;
   0      15      2    y       Ljava/lang/Object;


public java.lang.Object rem(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	checkcast	#59; //class scala/BigDecimal
   5:	aload_2
   6:	checkcast	#59; //class scala/BigDecimal
   9:	invokeinterface	#79,  3; //InterfaceMethod scala/Numeric$BigDecimalAsIfIntegral.rem:(Lscala/BigDecimal;Lscala/BigDecimal;)Lscala/BigDecimal;
   14:	areturn
  LineNumberTable: 
   line 101: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      15      0    this       Lscala/Numeric$BigDecimalAsIfIntegral$;
   0      15      1    x       Ljava/lang/Object;
   0      15      2    y       Ljava/lang/Object;


public scala.Numeric$Ops mkNumericOps(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokeinterface	#86,  2; //InterfaceMethod scala/Integral.mkNumericOps:(Ljava/lang/Object;)Lscala/Integral$IntegralOps;
   7:	areturn
  LineNumberTable: 
   line 101: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      8      0    this       Lscala/Numeric$BigDecimalAsIfIntegral$;
   0      8      1    lhs       Ljava/lang/Object;


public java.lang.Object plus(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	checkcast	#59; //class scala/BigDecimal
   5:	aload_2
   6:	checkcast	#59; //class scala/BigDecimal
   9:	invokeinterface	#92,  3; //InterfaceMethod scala/Numeric$BigDecimalIsConflicted.plus:(Lscala/BigDecimal;Lscala/BigDecimal;)Lscala/BigDecimal;
   14:	areturn
  LineNumberTable: 
   line 101: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      15      0    this       Lscala/Numeric$BigDecimalAsIfIntegral$;
   0      15      1    x       Ljava/lang/Object;
   0      15      2    y       Ljava/lang/Object;


public java.lang.Object minus(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	checkcast	#59; //class scala/BigDecimal
   5:	aload_2
   6:	checkcast	#59; //class scala/BigDecimal
   9:	invokeinterface	#95,  3; //InterfaceMethod scala/Numeric$BigDecimalIsConflicted.minus:(Lscala/BigDecimal;Lscala/BigDecimal;)Lscala/BigDecimal;
   14:	areturn
  LineNumberTable: 
   line 101: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      15      0    this       Lscala/Numeric$BigDecimalAsIfIntegral$;
   0      15      1    x       Ljava/lang/Object;
   0      15      2    y       Ljava/lang/Object;


public java.lang.Object times(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	checkcast	#59; //class scala/BigDecimal
   5:	aload_2
   6:	checkcast	#59; //class scala/BigDecimal
   9:	invokeinterface	#98,  3; //InterfaceMethod scala/Numeric$BigDecimalIsConflicted.times:(Lscala/BigDecimal;Lscala/BigDecimal;)Lscala/BigDecimal;
   14:	areturn
  LineNumberTable: 
   line 101: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      15      0    this       Lscala/Numeric$BigDecimalAsIfIntegral$;
   0      15      1    x       Ljava/lang/Object;
   0      15      2    y       Ljava/lang/Object;


public java.lang.Object negate(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	checkcast	#59; //class scala/BigDecimal
   5:	invokeinterface	#103,  2; //InterfaceMethod scala/Numeric$BigDecimalIsConflicted.negate:(Lscala/BigDecimal;)Lscala/BigDecimal;
   10:	areturn
  LineNumberTable: 
   line 101: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      11      0    this       Lscala/Numeric$BigDecimalAsIfIntegral$;
   0      11      1    x       Ljava/lang/Object;


public java.lang.Object fromInt(int);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	invokeinterface	#108,  2; //InterfaceMethod scala/Numeric$BigDecimalIsConflicted.fromInt:(I)Lscala/BigDecimal;
   7:	areturn
  LineNumberTable: 
   line 101: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      8      0    this       Lscala/Numeric$BigDecimalAsIfIntegral$;
   0      8      1    x       I


public int toInt(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	checkcast	#59; //class scala/BigDecimal
   5:	invokeinterface	#114,  2; //InterfaceMethod scala/Numeric$BigDecimalIsConflicted.toInt:(Lscala/BigDecimal;)I
   10:	ireturn
  LineNumberTable: 
   line 101: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      11      0    this       Lscala/Numeric$BigDecimalAsIfIntegral$;
   0      11      1    x       Ljava/lang/Object;


public long toLong(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	checkcast	#59; //class scala/BigDecimal
   5:	invokeinterface	#119,  2; //InterfaceMethod scala/Numeric$BigDecimalIsConflicted.toLong:(Lscala/BigDecimal;)J
   10:	lreturn
  LineNumberTable: 
   line 101: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      11      0    this       Lscala/Numeric$BigDecimalAsIfIntegral$;
   0      11      1    x       Ljava/lang/Object;


public float toFloat(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	checkcast	#59; //class scala/BigDecimal
   5:	invokeinterface	#124,  2; //InterfaceMethod scala/Numeric$BigDecimalIsConflicted.toFloat:(Lscala/BigDecimal;)F
   10:	freturn
  LineNumberTable: 
   line 101: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      11      0    this       Lscala/Numeric$BigDecimalAsIfIntegral$;
   0      11      1    x       Ljava/lang/Object;


public double toDouble(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	checkcast	#59; //class scala/BigDecimal
   5:	invokeinterface	#129,  2; //InterfaceMethod scala/Numeric$BigDecimalIsConflicted.toDouble:(Lscala/BigDecimal;)D
   10:	dreturn
  LineNumberTable: 
   line 101: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      11      0    this       Lscala/Numeric$BigDecimalAsIfIntegral$;
   0      11      1    x       Ljava/lang/Object;


public scala.PartialOrdering reverse();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokeinterface	#136,  1; //InterfaceMethod scala/Ordering.reverse:()Lscala/Ordering;
   6:	areturn
  LineNumberTable: 
   line 101: 0


public scala.Ordering$Ops mkOrderingOps(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#141; //Method scala/Ordering$class.mkOrderingOps:(Lscala/Ordering;Ljava/lang/Object;)Lscala/Ordering$Ops;
   5:	areturn
  LineNumberTable: 
   line 101: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/Numeric$BigDecimalAsIfIntegral$;
   0      6      1    lhs       Ljava/lang/Object;


public scala.Ordering reverse();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#144; //Method scala/Ordering$class.reverse:(Lscala/Ordering;)Lscala/Ordering;
   4:	areturn
  LineNumberTable: 
   line 101: 0


public java.lang.Object min(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#148; //Method scala/Ordering$class.min:(Lscala/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   6:	areturn
  LineNumberTable: 
   line 101: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/Numeric$BigDecimalAsIfIntegral$;
   0      7      1    x       Ljava/lang/Object;
   0      7      2    y       Ljava/lang/Object;


public java.lang.Object max(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#151; //Method scala/Ordering$class.max:(Lscala/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   6:	areturn
  LineNumberTable: 
   line 101: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/Numeric$BigDecimalAsIfIntegral$;
   0      7      1    x       Ljava/lang/Object;
   0      7      2    y       Ljava/lang/Object;


public boolean equiv(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#156; //Method scala/Ordering$class.equiv:(Lscala/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
   6:	ireturn
  LineNumberTable: 
   line 101: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/Numeric$BigDecimalAsIfIntegral$;
   0      7      1    x       Ljava/lang/Object;
   0      7      2    y       Ljava/lang/Object;


public boolean gt(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#159; //Method scala/Ordering$class.gt:(Lscala/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
   6:	ireturn
  LineNumberTable: 
   line 101: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/Numeric$BigDecimalAsIfIntegral$;
   0      7      1    x       Ljava/lang/Object;
   0      7      2    y       Ljava/lang/Object;


public boolean lt(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#162; //Method scala/Ordering$class.lt:(Lscala/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
   6:	ireturn
  LineNumberTable: 
   line 101: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/Numeric$BigDecimalAsIfIntegral$;
   0      7      1    x       Ljava/lang/Object;
   0      7      2    y       Ljava/lang/Object;


public boolean gteq(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#165; //Method scala/Ordering$class.gteq:(Lscala/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
   6:	ireturn
  LineNumberTable: 
   line 101: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/Numeric$BigDecimalAsIfIntegral$;
   0      7      1    x       Ljava/lang/Object;
   0      7      2    y       Ljava/lang/Object;


public boolean lteq(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#168; //Method scala/Ordering$class.lteq:(Lscala/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
   6:	ireturn
  LineNumberTable: 
   line 101: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/Numeric$BigDecimalAsIfIntegral$;
   0      7      1    x       Ljava/lang/Object;
   0      7      2    y       Ljava/lang/Object;


public int signum(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#172; //Method scala/Numeric$class.signum:(Lscala/Numeric;Ljava/lang/Object;)I
   5:	ireturn
  LineNumberTable: 
   line 101: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/Numeric$BigDecimalAsIfIntegral$;
   0      6      1    x       Ljava/lang/Object;


public java.lang.Object abs(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#176; //Method scala/Numeric$class.abs:(Lscala/Numeric;Ljava/lang/Object;)Ljava/lang/Object;
   5:	areturn
  LineNumberTable: 
   line 101: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/Numeric$BigDecimalAsIfIntegral$;
   0      6      1    x       Ljava/lang/Object;


public java.lang.Object one();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#181; //Method scala/Numeric$class.one:(Lscala/Numeric;)Ljava/lang/Object;
   4:	areturn
  LineNumberTable: 
   line 101: 0


public java.lang.Object zero();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#184; //Method scala/Numeric$class.zero:(Lscala/Numeric;)Ljava/lang/Object;
   4:	areturn
  LineNumberTable: 
   line 101: 0


public double toDouble(scala.BigDecimal);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#187; //Method scala/Numeric$BigDecimalIsConflicted$class.toDouble:(Lscala/Numeric$BigDecimalIsConflicted;Lscala/BigDecimal;)D
   5:	dreturn
  LineNumberTable: 
   line 101: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/Numeric$BigDecimalAsIfIntegral$;
   0      6      1    x       Lscala/BigDecimal;


public float toFloat(scala.BigDecimal);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#191; //Method scala/Numeric$BigDecimalIsConflicted$class.toFloat:(Lscala/Numeric$BigDecimalIsConflicted;Lscala/BigDecimal;)F
   5:	freturn
  LineNumberTable: 
   line 101: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/Numeric$BigDecimalAsIfIntegral$;
   0      6      1    x       Lscala/BigDecimal;


public long toLong(scala.BigDecimal);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#194; //Method scala/Numeric$BigDecimalIsConflicted$class.toLong:(Lscala/Numeric$BigDecimalIsConflicted;Lscala/BigDecimal;)J
   5:	lreturn
  LineNumberTable: 
   line 101: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/Numeric$BigDecimalAsIfIntegral$;
   0      6      1    x       Lscala/BigDecimal;


public int toInt(scala.BigDecimal);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#197; //Method scala/Numeric$BigDecimalIsConflicted$class.toInt:(Lscala/Numeric$BigDecimalIsConflicted;Lscala/BigDecimal;)I
   5:	ireturn
  LineNumberTable: 
   line 101: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/Numeric$BigDecimalAsIfIntegral$;
   0      6      1    x       Lscala/BigDecimal;


public scala.BigDecimal fromInt(int);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	invokestatic	#200; //Method scala/Numeric$BigDecimalIsConflicted$class.fromInt:(Lscala/Numeric$BigDecimalIsConflicted;I)Lscala/BigDecimal;
   5:	areturn
  LineNumberTable: 
   line 101: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/Numeric$BigDecimalAsIfIntegral$;
   0      6      1    x       I


public scala.BigDecimal negate(scala.BigDecimal);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#203; //Method scala/Numeric$BigDecimalIsConflicted$class.negate:(Lscala/Numeric$BigDecimalIsConflicted;Lscala/BigDecimal;)Lscala/BigDecimal;
   5:	areturn
  LineNumberTable: 
   line 101: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/Numeric$BigDecimalAsIfIntegral$;
   0      6      1    x       Lscala/BigDecimal;


public scala.BigDecimal times(scala.BigDecimal, scala.BigDecimal);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#206; //Method scala/Numeric$BigDecimalIsConflicted$class.times:(Lscala/Numeric$BigDecimalIsConflicted;Lscala/BigDecimal;Lscala/BigDecimal;)Lscala/BigDecimal;
   6:	areturn
  LineNumberTable: 
   line 101: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/Numeric$BigDecimalAsIfIntegral$;
   0      7      1    x       Lscala/BigDecimal;
   0      7      2    y       Lscala/BigDecimal;


public scala.BigDecimal minus(scala.BigDecimal, scala.BigDecimal);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#208; //Method scala/Numeric$BigDecimalIsConflicted$class.minus:(Lscala/Numeric$BigDecimalIsConflicted;Lscala/BigDecimal;Lscala/BigDecimal;)Lscala/BigDecimal;
   6:	areturn
  LineNumberTable: 
   line 101: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/Numeric$BigDecimalAsIfIntegral$;
   0      7      1    x       Lscala/BigDecimal;
   0      7      2    y       Lscala/BigDecimal;


public scala.BigDecimal plus(scala.BigDecimal, scala.BigDecimal);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#210; //Method scala/Numeric$BigDecimalIsConflicted$class.plus:(Lscala/Numeric$BigDecimalIsConflicted;Lscala/BigDecimal;Lscala/BigDecimal;)Lscala/BigDecimal;
   6:	areturn
  LineNumberTable: 
   line 101: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/Numeric$BigDecimalAsIfIntegral$;
   0      7      1    x       Lscala/BigDecimal;
   0      7      2    y       Lscala/BigDecimal;


public scala.Integral$IntegralOps mkNumericOps(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#213; //Method scala/Integral$class.mkNumericOps:(Lscala/Integral;Ljava/lang/Object;)Lscala/Integral$IntegralOps;
   5:	areturn
  LineNumberTable: 
   line 101: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/Numeric$BigDecimalAsIfIntegral$;
   0      6      1    lhs       Ljava/lang/Object;


public scala.BigDecimal rem(scala.BigDecimal, scala.BigDecimal);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#216; //Method scala/Numeric$BigDecimalAsIfIntegral$class.rem:(Lscala/Numeric$BigDecimalAsIfIntegral;Lscala/BigDecimal;Lscala/BigDecimal;)Lscala/BigDecimal;
   6:	areturn
  LineNumberTable: 
   line 101: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/Numeric$BigDecimalAsIfIntegral$;
   0      7      1    x       Lscala/BigDecimal;
   0      7      2    y       Lscala/BigDecimal;


public scala.BigDecimal quot(scala.BigDecimal, scala.BigDecimal);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#218; //Method scala/Numeric$BigDecimalAsIfIntegral$class.quot:(Lscala/Numeric$BigDecimalAsIfIntegral;Lscala/BigDecimal;Lscala/BigDecimal;)Lscala/BigDecimal;
   6:	areturn
  LineNumberTable: 
   line 101: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/Numeric$BigDecimalAsIfIntegral$;
   0      7      1    x       Lscala/BigDecimal;
   0      7      2    y       Lscala/BigDecimal;


public int compare(scala.BigDecimal, scala.BigDecimal);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#221; //Method scala/Ordering$BigDecimalOrdering$class.compare:(Lscala/Ordering$BigDecimalOrdering;Lscala/BigDecimal;Lscala/BigDecimal;)I
   6:	ireturn
  LineNumberTable: 
   line 101: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/Numeric$BigDecimalAsIfIntegral$;
   0      7      1    x       Lscala/BigDecimal;
   0      7      2    y       Lscala/BigDecimal;


}

