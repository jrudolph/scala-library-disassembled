public abstract class scala.runtime.ExceptionHandling extends java.lang.Object
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Method	#5.#11;	//  java/lang/Object."<init>":()V
const #2 = InterfaceMethod	#12.#13;	//  java/lang/Runnable.run:()V
const #3 = class	#14;	//  java/lang/Throwable
const #4 = class	#15;	//  scala/runtime/ExceptionHandling
const #5 = class	#16;	//  java/lang/Object
const #6 = Asciz	<init>;
const #7 = Asciz	()V;
const #8 = Asciz	Code;
const #9 = Asciz	tryCatch;
const #10 = Asciz	(Ljava/lang/Runnable;)Ljava/lang/Throwable;;
const #11 = NameAndType	#6:#7;//  "<init>":()V
const #12 = class	#17;	//  java/lang/Runnable
const #13 = NameAndType	#18:#7;//  run:()V
const #14 = Asciz	java/lang/Throwable;
const #15 = Asciz	scala/runtime/ExceptionHandling;
const #16 = Asciz	java/lang/Object;
const #17 = Asciz	java/lang/Runnable;
const #18 = Asciz	run;

{
public scala.runtime.ExceptionHandling();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokespecial	#1; //Method java/lang/Object."<init>":()V
   4:	return

public static java.lang.Throwable tryCatch(java.lang.Runnable);
  Code:
   Stack=1, Locals=2, Args_size=1
   0:	aload_0
   1:	invokeinterface	#2,  1; //InterfaceMethod java/lang/Runnable.run:()V
   6:	aconst_null
   7:	areturn
   8:	astore_1
   9:	aload_1
   10:	areturn
  Exception table:
   from   to  target type
     0     7     8   Class java/lang/Throwable


}

