Compiled from "RichDouble.scala"
public final class scala.runtime.RichDouble extends java.lang.Object implements scala.Proxy,scala.math.Ordered,scala.ScalaObject
  SourceFile: "RichDouble.scala"
  Signature: length = 0x2
   00 FFFFFFAA 
  ScalaSig: length = 0x305
   05 00 FFFFFF81 00 06 08 01 02 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF80 02 07 02 0A
   52 69 63 68 44 6F 75 62 6C 65 0A 02 03 04 01 07
   72 75 6E 74 69 6D 65 0A 01 05 01 05 73 63 61 6C
   61 03 00 13 05 00 08 10 14 23 10 02 09 0E 0D 01
   0A 0A 02 0B 0C 01 04 6C 61 6E 67 0A 01 0D 01 04
   6A 61 76 61 09 02 0F 0A 02 06 4F 62 6A 65 63 74
   10 02 11 12 0D 01 04 09 02 13 04 02 05 50 72 6F
   78 79 10 03 15 1D 20 0E 02 16 1B 0E 02 17 1A 0D
   01 18 0A 02 19 06 01 06 3C 72 6F 6F 74 3E 09 01
   05 09 02 1C 04 01 07 70 61 63 6B 61 67 65 09 02
   1E 1F 02 07 4F 72 64 65 72 65 64 0A 02 1C 04 10
   02 11 21 09 02 22 04 02 06 44 6F 75 62 6C 65 10
   02 11 24 09 02 25 04 02 0B 53 63 61 6C 61 4F 62
   6A 65 63 74 08 08 27 00 FFFFFF82 FFFFFF80 FFFFFFA0 FFFFFF80 04 20 01 01
   78 08 05 29 00 FFFFFF84 00 2A 01 06 3C 69 6E 69 74 3E
   14 02 2B 2D 10 02 2C 00 0D 01 02 08 05 27 28 FFFFFFC0
   00 20 08 05 2F 00 FFFFFF84 00 30 01 04 73 65 6C 66 15
   01 31 10 02 11 32 09 02 33 04 02 03 41 6E 79 08
   05 35 00 FFFFFF84 00 36 01 07 63 6F 6D 70 61 72 65 14
   02 37 3A 10 02 11 38 09 02 39 04 02 03 49 6E 74
   08 05 3B 34 FFFFFFC0 00 20 01 01 79 08 05 3D 00 FFFFFF84 00
   3E 01 03 6D 69 6E 14 02 20 3F 08 05 3B 3C FFFFFFC0 00
   20 08 05 41 00 FFFFFF84 00 42 01 03 6D 61 78 14 02 20
   43 08 05 3B 40 FFFFFFC0 00 20 08 05 45 00 FFFFFF84 00 46 01
   03 61 62 73 15 01 20 08 05 48 00 FFFFFF84 00 49 01 05
   72 6F 75 6E 64 15 01 4A 10 02 11 4B 09 02 4C 04
   02 04 4C 6F 6E 67 08 05 4E 00 FFFFFF84 00 46 01 04 63
   65 69 6C 08 05 50 00 FFFFFF84 00 46 01 05 66 6C 6F 6F
   72 08 05 52 00 FFFFFF84 00 53 01 05 75 6E 74 69 6C 14
   02 54 63 10 04 55 5D 20 60 0E 02 56 5B 0D 01 57
   0A 02 58 59 01 09 69 6D 6D 75 74 61 62 6C 65 0A
   02 5A 04 01 0A 63 6F 6C 6C 65 63 74 69 6F 6E 09
   02 5C 57 01 05 52 61 6E 67 65 09 02 5E 5F 02 07
   50 61 72 74 69 61 6C 0A 02 5C 57 10 03 56 61 20
   09 02 62 57 02 0C 4E 75 6D 65 72 69 63 52 61 6E
   67 65 08 05 64 51 FFFFFFC0 00 20 01 03 65 6E 64 08 05
   52 00 FFFFFF84 00 66 14 03 60 67 68 08 05 64 65 FFFFFFC0 00
   20 08 05 69 65 FFFFFFC0 00 20 01 04 73 74 65 70 08 05
   6B 00 FFFFFF84 00 6C 01 02 74 6F 14 02 54 6D 08 05 64
   6A FFFFFFC0 00 20 08 05 6B 00 FFFFFF84 00 6F 14 03 60 70 71
   08 05 64 6E FFFFFFC0 00 20 08 05 69 6E FFFFFFC0 00 20 08 05
   73 00 FFFFFF84 00 46 01 09 74 6F 52 61 64 69 61 6E 73
   08 05 75 00 FFFFFF84 00 46 01 09 74 6F 44 65 67 72 65
   65 73 08 05 77 00 FFFFFF84 00 78 01 0A 69 73 49 6E 66
   69 6E 69 74 79 15 01 79 10 02 11 7A 09 02 7B 04
   02 07 42 6F 6F 6C 65 61 6E 08 05 7D 00 FFFFFF84 00 78
   01 0D 69 73 50 6F 73 49 6E 66 69 6E 69 74 79 08
   05 7F 00 FFFFFF84 00 78 01 0D 69 73 4E 65 67 49 6E 66
   69 6E 69 74 79 
  InnerClass: 
   public #175= #88 of #174; //Partial=class scala/collection/immutable/Range$Partial of class scala/collection/immutable/Range
   public final #176= #90 of #10; //$anonfun$to$1=class scala/runtime/RichDouble$$anonfun$to$1 of class scala/runtime/RichDouble
   public final #177= #104 of #10; //$anonfun$until$1=class scala/runtime/RichDouble$$anonfun$until$1 of class scala/runtime/RichDouble
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	RichDouble.scala;
const #3 = Asciz	x;
const #4 = Asciz	D;
const #5 = Asciz	<init>;
const #6 = Asciz	(D)V;
const #7 = Asciz	Code;
const #8 = Asciz	LineNumberTable;
const #9 = Asciz	scala/runtime/RichDouble;
const #10 = class	#9;	//  scala/runtime/RichDouble
const #11 = NameAndType	#3:#4;//  x:D
const #12 = Field	#10.#11;	//  scala/runtime/RichDouble.x:D
const #13 = Asciz	java/lang/Object;
const #14 = class	#13;	//  java/lang/Object
const #15 = Asciz	()V;
const #16 = NameAndType	#5:#15;//  "<init>":()V
const #17 = Method	#14.#16;	//  java/lang/Object."<init>":()V
const #18 = Asciz	scala/Proxy$class;
const #19 = class	#18;	//  scala/Proxy$class
const #20 = Asciz	$init$;
const #21 = Asciz	(Lscala/Proxy;)V;
const #22 = NameAndType	#20:#21;//  $init$:(Lscala/Proxy;)V
const #23 = Method	#19.#22;	//  scala/Proxy$class.$init$:(Lscala/Proxy;)V
const #24 = Asciz	scala/math/Ordered$class;
const #25 = class	#24;	//  scala/math/Ordered$class
const #26 = Asciz	(Lscala/math/Ordered;)V;
const #27 = NameAndType	#20:#26;//  $init$:(Lscala/math/Ordered;)V
const #28 = Method	#25.#27;	//  scala/math/Ordered$class.$init$:(Lscala/math/Ordered;)V
const #29 = Asciz	this;
const #30 = Asciz	Lscala/runtime/RichDouble;;
const #31 = Asciz	LocalVariableTable;
const #32 = Asciz	compare;
const #33 = Asciz	(Ljava/lang/Object;)I;
const #34 = Asciz	scala/runtime/BoxesRunTime;
const #35 = class	#34;	//  scala/runtime/BoxesRunTime
const #36 = Asciz	unboxToDouble;
const #37 = Asciz	(Ljava/lang/Object;)D;
const #38 = NameAndType	#36:#37;//  unboxToDouble:(Ljava/lang/Object;)D
const #39 = Method	#35.#38;	//  scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
const #40 = Asciz	(D)I;
const #41 = NameAndType	#32:#40;//  compare:(D)I
const #42 = Method	#10.#41;	//  scala/runtime/RichDouble.compare:(D)I
const #43 = Asciz	that;
const #44 = Asciz	Ljava/lang/Object;;
const #45 = Asciz	isNegInfinity;
const #46 = Asciz	()Z;
const #47 = Asciz	java/lang/Double;
const #48 = class	#47;	//  java/lang/Double
const #49 = Asciz	isInfinite;
const #50 = Asciz	(D)Z;
const #51 = NameAndType	#49:#50;//  isInfinite:(D)Z
const #52 = Method	#48.#51;	//  java/lang/Double.isInfinite:(D)Z
const #53 = Asciz	isPosInfinity;
const #54 = Asciz	isInfinity;
const #55 = Asciz	toDegrees;
const #56 = Asciz	()D;
const #57 = Asciz	scala/math/package$;
const #58 = class	#57;	//  scala/math/package$
const #59 = Asciz	MODULE$;
const #60 = Asciz	Lscala/math/package$;;
const #61 = NameAndType	#59:#60;//  MODULE$:Lscala/math/package$;
const #62 = Field	#58.#61;	//  scala/math/package$.MODULE$:Lscala/math/package$;
const #63 = Asciz	scala/MathCommon;
const #64 = class	#63;	//  scala/MathCommon
const #65 = Asciz	(D)D;
const #66 = NameAndType	#55:#65;//  toDegrees:(D)D
const #67 = InterfaceMethod	#64.#66;	//  scala/MathCommon.toDegrees:(D)D
const #68 = Asciz	toRadians;
const #69 = NameAndType	#68:#65;//  toRadians:(D)D
const #70 = InterfaceMethod	#64.#69;	//  scala/MathCommon.toRadians:(D)D
const #71 = Asciz	to;
const #72 = Asciz	(DD)Lscala/collection/immutable/NumericRange;;
const #73 = Asciz	scala/collection/immutable/Range$Double$;
const #74 = class	#73;	//  scala/collection/immutable/Range$Double$
const #75 = Asciz	Lscala/collection/immutable/Range$Double$;;
const #76 = NameAndType	#59:#75;//  MODULE$:Lscala/collection/immutable/Range$Double$;
const #77 = Field	#74.#76;	//  scala/collection/immutable/Range$Double$.MODULE$:Lscala/collection/immutable/Range$Double$;
const #78 = Asciz	inclusive;
const #79 = Asciz	(DDD)Lscala/collection/immutable/NumericRange;;
const #80 = NameAndType	#78:#79;//  inclusive:(DDD)Lscala/collection/immutable/NumericRange;
const #81 = Method	#74.#80;	//  scala/collection/immutable/Range$Double$.inclusive:(DDD)Lscala/collection/immutable/NumericRange;
const #82 = Asciz	end;
const #83 = Asciz	step;
const #84 = Asciz	(DD)Lscala/collection/immutable/NumericRange<Ljava/lang/Double;>;;
const #85 = Asciz	Signature;
const #86 = Asciz	(D)Lscala/collection/immutable/Range$Partial;;
const #87 = Asciz	scala/collection/immutable/Range$Partial;
const #88 = class	#87;	//  scala/collection/immutable/Range$Partial
const #89 = Asciz	scala/runtime/RichDouble$$anonfun$to$1;
const #90 = class	#89;	//  scala/runtime/RichDouble$$anonfun$to$1
const #91 = Asciz	(Lscala/runtime/RichDouble;D)V;
const #92 = NameAndType	#5:#91;//  "<init>":(Lscala/runtime/RichDouble;D)V
const #93 = Method	#90.#92;	//  scala/runtime/RichDouble$$anonfun$to$1."<init>":(Lscala/runtime/RichDouble;D)V
const #94 = Asciz	(Lscala/Function1;)V;
const #95 = NameAndType	#5:#94;//  "<init>":(Lscala/Function1;)V
const #96 = Method	#88.#95;	//  scala/collection/immutable/Range$Partial."<init>":(Lscala/Function1;)V
const #97 = Asciz	end$2;
const #98 = Asciz	(D)Lscala/collection/immutable/Range$Partial<Ljava/lang/Double;Lscala/collection/immutable/NumericRange<Ljava/lang/Double;>;>;;
const #99 = Asciz	until;
const #100 = Asciz	apply;
const #101 = NameAndType	#100:#79;//  apply:(DDD)Lscala/collection/immutable/NumericRange;
const #102 = Method	#74.#101;	//  scala/collection/immutable/Range$Double$.apply:(DDD)Lscala/collection/immutable/NumericRange;
const #103 = Asciz	scala/runtime/RichDouble$$anonfun$until$1;
const #104 = class	#103;	//  scala/runtime/RichDouble$$anonfun$until$1
const #105 = Method	#104.#92;	//  scala/runtime/RichDouble$$anonfun$until$1."<init>":(Lscala/runtime/RichDouble;D)V
const #106 = Asciz	end$1;
const #107 = Asciz	floor;
const #108 = NameAndType	#107:#65;//  floor:(D)D
const #109 = InterfaceMethod	#64.#108;	//  scala/MathCommon.floor:(D)D
const #110 = Asciz	ceil;
const #111 = NameAndType	#110:#65;//  ceil:(D)D
const #112 = InterfaceMethod	#64.#111;	//  scala/MathCommon.ceil:(D)D
const #113 = Asciz	round;
const #114 = Asciz	()J;
const #115 = Asciz	(D)J;
const #116 = NameAndType	#113:#115;//  round:(D)J
const #117 = InterfaceMethod	#64.#116;	//  scala/MathCommon.round:(D)J
const #118 = Asciz	abs;
const #119 = NameAndType	#118:#65;//  abs:(D)D
const #120 = InterfaceMethod	#64.#119;	//  scala/MathCommon.abs:(D)D
const #121 = Asciz	max;
const #122 = Asciz	(DD)D;
const #123 = NameAndType	#121:#122;//  max:(DD)D
const #124 = InterfaceMethod	#64.#123;	//  scala/MathCommon.max:(DD)D
const #125 = Asciz	y;
const #126 = Asciz	min;
const #127 = NameAndType	#126:#122;//  min:(DD)D
const #128 = InterfaceMethod	#64.#127;	//  scala/MathCommon.min:(DD)D
const #129 = Asciz	(DD)I;
const #130 = NameAndType	#32:#129;//  compare:(DD)I
const #131 = Method	#48.#130;	//  java/lang/Double.compare:(DD)I
const #132 = Asciz	self;
const #133 = Asciz	()Ljava/lang/Object;;
const #134 = Asciz	boxToDouble;
const #135 = Asciz	(D)Ljava/lang/Double;;
const #136 = NameAndType	#134:#135;//  boxToDouble:(D)Ljava/lang/Double;
const #137 = Method	#35.#136;	//  scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
const #138 = Asciz	toString;
const #139 = Asciz	()Ljava/lang/String;;
const #140 = Asciz	(Lscala/Proxy;)Ljava/lang/String;;
const #141 = NameAndType	#138:#140;//  toString:(Lscala/Proxy;)Ljava/lang/String;
const #142 = Method	#19.#141;	//  scala/Proxy$class.toString:(Lscala/Proxy;)Ljava/lang/String;
const #143 = Asciz	equals;
const #144 = Asciz	(Ljava/lang/Object;)Z;
const #145 = Asciz	(Lscala/Proxy;Ljava/lang/Object;)Z;
const #146 = NameAndType	#143:#145;//  equals:(Lscala/Proxy;Ljava/lang/Object;)Z
const #147 = Method	#19.#146;	//  scala/Proxy$class.equals:(Lscala/Proxy;Ljava/lang/Object;)Z
const #148 = Asciz	hashCode;
const #149 = Asciz	()I;
const #150 = Asciz	(Lscala/Proxy;)I;
const #151 = NameAndType	#148:#150;//  hashCode:(Lscala/Proxy;)I
const #152 = Method	#19.#151;	//  scala/Proxy$class.hashCode:(Lscala/Proxy;)I
const #153 = Asciz	compareTo;
const #154 = Asciz	(Lscala/math/Ordered;Ljava/lang/Object;)I;
const #155 = NameAndType	#153:#154;//  compareTo:(Lscala/math/Ordered;Ljava/lang/Object;)I
const #156 = Method	#25.#155;	//  scala/math/Ordered$class.compareTo:(Lscala/math/Ordered;Ljava/lang/Object;)I
const #157 = Asciz	$greater$eq;
const #158 = Asciz	(Lscala/math/Ordered;Ljava/lang/Object;)Z;
const #159 = NameAndType	#157:#158;//  $greater$eq:(Lscala/math/Ordered;Ljava/lang/Object;)Z
const #160 = Method	#25.#159;	//  scala/math/Ordered$class.$greater$eq:(Lscala/math/Ordered;Ljava/lang/Object;)Z
const #161 = Asciz	$less$eq;
const #162 = NameAndType	#161:#158;//  $less$eq:(Lscala/math/Ordered;Ljava/lang/Object;)Z
const #163 = Method	#25.#162;	//  scala/math/Ordered$class.$less$eq:(Lscala/math/Ordered;Ljava/lang/Object;)Z
const #164 = Asciz	$greater;
const #165 = NameAndType	#164:#158;//  $greater:(Lscala/math/Ordered;Ljava/lang/Object;)Z
const #166 = Method	#25.#165;	//  scala/math/Ordered$class.$greater:(Lscala/math/Ordered;Ljava/lang/Object;)Z
const #167 = Asciz	$less;
const #168 = NameAndType	#167:#158;//  $less:(Lscala/math/Ordered;Ljava/lang/Object;)Z
const #169 = Method	#25.#168;	//  scala/math/Ordered$class.$less:(Lscala/math/Ordered;Ljava/lang/Object;)Z
const #170 = Asciz	Ljava/lang/Object;Lscala/Proxy;Lscala/math/Ordered<Ljava/lang/Double;>;Lscala/ScalaObject;;
const #171 = Asciz	ScalaSig;
const #172 = Asciz	InnerClasses;
const #173 = Asciz	scala/collection/immutable/Range;
const #174 = class	#173;	//  scala/collection/immutable/Range
const #175 = Asciz	Partial;
const #176 = Asciz	$anonfun$to$1;
const #177 = Asciz	$anonfun$until$1;
const #178 = Asciz	scala/Proxy;
const #179 = class	#178;	//  scala/Proxy
const #180 = Asciz	scala/math/Ordered;
const #181 = class	#180;	//  scala/math/Ordered
const #182 = Asciz	scala/ScalaObject;
const #183 = class	#182;	//  scala/ScalaObject

{
public final double x;

public scala.runtime.RichDouble(double);
  Code:
   Stack=3, Locals=3, Args_size=2
   0:	aload_0
   1:	dload_1
   2:	putfield	#12; //Field x:D
   5:	aload_0
   6:	invokespecial	#17; //Method java/lang/Object."<init>":()V
   9:	aload_0
   10:	invokestatic	#23; //Method scala/Proxy$class.$init$:(Lscala/Proxy;)V
   13:	aload_0
   14:	invokestatic	#28; //Method scala/math/Ordered$class.$init$:(Lscala/math/Ordered;)V
   17:	return
  LineNumberTable: 
   line 16: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      18      0    this       Lscala/runtime/RichDouble;
   0      18      1    x       D


public int compare(java.lang.Object);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#39; //Method scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
   5:	invokevirtual	#42; //Method compare:(D)I
   8:	ireturn
  LineNumberTable: 
   line 16: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/runtime/RichDouble;
   0      9      1    that       Ljava/lang/Object;


public boolean isNegInfinity();
  Code:
   Stack=4, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#12; //Field x:D
   4:	invokestatic	#52; //Method java/lang/Double.isInfinite:(D)Z
   7:	ifeq	23
   10:	aload_0
   11:	getfield	#12; //Field x:D
   14:	dconst_0
   15:	dcmpg
   16:	ifge	23
   19:	iconst_1
   20:	goto	24
   23:	iconst_0
   24:	ireturn
  LineNumberTable: 
   line 66: 0


public boolean isPosInfinity();
  Code:
   Stack=4, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#12; //Field x:D
   4:	invokestatic	#52; //Method java/lang/Double.isInfinite:(D)Z
   7:	ifeq	23
   10:	aload_0
   11:	getfield	#12; //Field x:D
   14:	dconst_0
   15:	dcmpl
   16:	ifle	23
   19:	iconst_1
   20:	goto	24
   23:	iconst_0
   24:	ireturn
  LineNumberTable: 
   line 65: 0


public boolean isInfinity();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#12; //Field x:D
   4:	invokestatic	#52; //Method java/lang/Double.isInfinite:(D)Z
   7:	ireturn
  LineNumberTable: 
   line 64: 0


public double toDegrees();
  Code:
   Stack=3, Locals=1, Args_size=1
   0:	getstatic	#62; //Field scala/math/package$.MODULE$:Lscala/math/package$;
   3:	aload_0
   4:	getfield	#12; //Field x:D
   7:	invokeinterface	#67,  3; //InterfaceMethod scala/MathCommon.toDegrees:(D)D
   12:	dreturn
  LineNumberTable: 
   line 60: 0


public double toRadians();
  Code:
   Stack=3, Locals=1, Args_size=1
   0:	getstatic	#62; //Field scala/math/package$.MODULE$:Lscala/math/package$;
   3:	aload_0
   4:	getfield	#12; //Field x:D
   7:	invokeinterface	#70,  3; //InterfaceMethod scala/MathCommon.toRadians:(D)D
   12:	dreturn
  LineNumberTable: 
   line 52: 0


public scala.collection.immutable.NumericRange to(double, double);
  Code:
   Stack=7, Locals=5, Args_size=3
   0:	getstatic	#77; //Field scala/collection/immutable/Range$Double$.MODULE$:Lscala/collection/immutable/Range$Double$;
   3:	aload_0
   4:	getfield	#12; //Field x:D
   7:	dload_1
   8:	dload_3
   9:	invokevirtual	#81; //Method scala/collection/immutable/Range$Double$.inclusive:(DDD)Lscala/collection/immutable/NumericRange;
   12:	areturn
  LineNumberTable: 
   line 44: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      13      0    this       Lscala/runtime/RichDouble;
   0      13      1    end       D
   0      13      3    step       D

  Signature: length = 0x2
   00 54 

public scala.collection.immutable.Range$Partial to(double);
  Code:
   Stack=7, Locals=3, Args_size=2
   0:	new	#88; //class scala/collection/immutable/Range$Partial
   3:	dup
   4:	new	#90; //class scala/runtime/RichDouble$$anonfun$to$1
   7:	dup
   8:	aload_0
   9:	dload_1
   10:	invokespecial	#93; //Method scala/runtime/RichDouble$$anonfun$to$1."<init>":(Lscala/runtime/RichDouble;D)V
   13:	invokespecial	#96; //Method scala/collection/immutable/Range$Partial."<init>":(Lscala/Function1;)V
   16:	areturn
  LineNumberTable: 
   line 40: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      17      0    this       Lscala/runtime/RichDouble;
   0      17      1    end$2       D

  Signature: length = 0x2
   00 62 

public scala.collection.immutable.NumericRange until(double, double);
  Code:
   Stack=7, Locals=5, Args_size=3
   0:	getstatic	#77; //Field scala/collection/immutable/Range$Double$.MODULE$:Lscala/collection/immutable/Range$Double$;
   3:	aload_0
   4:	getfield	#12; //Field x:D
   7:	dload_1
   8:	dload_3
   9:	invokevirtual	#102; //Method scala/collection/immutable/Range$Double$.apply:(DDD)Lscala/collection/immutable/NumericRange;
   12:	areturn
  LineNumberTable: 
   line 36: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      13      0    this       Lscala/runtime/RichDouble;
   0      13      1    end       D
   0      13      3    step       D

  Signature: length = 0x2
   00 54 

public scala.collection.immutable.Range$Partial until(double);
  Code:
   Stack=7, Locals=3, Args_size=2
   0:	new	#88; //class scala/collection/immutable/Range$Partial
   3:	dup
   4:	new	#104; //class scala/runtime/RichDouble$$anonfun$until$1
   7:	dup
   8:	aload_0
   9:	dload_1
   10:	invokespecial	#105; //Method scala/runtime/RichDouble$$anonfun$until$1."<init>":(Lscala/runtime/RichDouble;D)V
   13:	invokespecial	#96; //Method scala/collection/immutable/Range$Partial."<init>":(Lscala/Function1;)V
   16:	areturn
  LineNumberTable: 
   line 32: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      17      0    this       Lscala/runtime/RichDouble;
   0      17      1    end$1       D

  Signature: length = 0x2
   00 62 

public double floor();
  Code:
   Stack=3, Locals=1, Args_size=1
   0:	getstatic	#62; //Field scala/math/package$.MODULE$:Lscala/math/package$;
   3:	aload_0
   4:	getfield	#12; //Field x:D
   7:	invokeinterface	#109,  3; //InterfaceMethod scala/MathCommon.floor:(D)D
   12:	dreturn
  LineNumberTable: 
   line 28: 0


public double ceil();
  Code:
   Stack=3, Locals=1, Args_size=1
   0:	getstatic	#62; //Field scala/math/package$.MODULE$:Lscala/math/package$;
   3:	aload_0
   4:	getfield	#12; //Field x:D
   7:	invokeinterface	#112,  3; //InterfaceMethod scala/MathCommon.ceil:(D)D
   12:	dreturn
  LineNumberTable: 
   line 27: 0


public long round();
  Code:
   Stack=3, Locals=1, Args_size=1
   0:	getstatic	#62; //Field scala/math/package$.MODULE$:Lscala/math/package$;
   3:	aload_0
   4:	getfield	#12; //Field x:D
   7:	invokeinterface	#117,  3; //InterfaceMethod scala/MathCommon.round:(D)J
   12:	lreturn
  LineNumberTable: 
   line 26: 0


public double abs();
  Code:
   Stack=3, Locals=1, Args_size=1
   0:	getstatic	#62; //Field scala/math/package$.MODULE$:Lscala/math/package$;
   3:	aload_0
   4:	getfield	#12; //Field x:D
   7:	invokeinterface	#120,  3; //InterfaceMethod scala/MathCommon.abs:(D)D
   12:	dreturn
  LineNumberTable: 
   line 24: 0


public double max(double);
  Code:
   Stack=5, Locals=3, Args_size=2
   0:	getstatic	#62; //Field scala/math/package$.MODULE$:Lscala/math/package$;
   3:	aload_0
   4:	getfield	#12; //Field x:D
   7:	dload_1
   8:	invokeinterface	#124,  5; //InterfaceMethod scala/MathCommon.max:(DD)D
   13:	dreturn
  LineNumberTable: 
   line 23: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      14      0    this       Lscala/runtime/RichDouble;
   0      14      1    y       D


public double min(double);
  Code:
   Stack=5, Locals=3, Args_size=2
   0:	getstatic	#62; //Field scala/math/package$.MODULE$:Lscala/math/package$;
   3:	aload_0
   4:	getfield	#12; //Field x:D
   7:	dload_1
   8:	invokeinterface	#128,  5; //InterfaceMethod scala/MathCommon.min:(DD)D
   13:	dreturn
  LineNumberTable: 
   line 22: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      14      0    this       Lscala/runtime/RichDouble;
   0      14      1    y       D


public int compare(double);
  Code:
   Stack=4, Locals=3, Args_size=2
   0:	aload_0
   1:	getfield	#12; //Field x:D
   4:	dload_1
   5:	invokestatic	#131; //Method java/lang/Double.compare:(DD)I
   8:	ireturn
  LineNumberTable: 
   line 20: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/runtime/RichDouble;
   0      9      1    y       D


public java.lang.Object self();
  Code:
   Stack=2, Locals=3, Args_size=1
   0:	aload_0
   1:	getfield	#12; //Field x:D
   4:	dstore_1
   5:	dload_1
   6:	invokestatic	#137; //Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
   9:	areturn
  LineNumberTable: 
   line 18: 0


public java.lang.String toString();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#142; //Method scala/Proxy$class.toString:(Lscala/Proxy;)Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 16: 0


public boolean equals(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#147; //Method scala/Proxy$class.equals:(Lscala/Proxy;Ljava/lang/Object;)Z
   5:	ireturn
  LineNumberTable: 
   line 16: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/runtime/RichDouble;
   0      6      1    that       Ljava/lang/Object;


public int hashCode();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#152; //Method scala/Proxy$class.hashCode:(Lscala/Proxy;)I
   4:	ireturn
  LineNumberTable: 
   line 16: 0


public int compareTo(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#156; //Method scala/math/Ordered$class.compareTo:(Lscala/math/Ordered;Ljava/lang/Object;)I
   5:	ireturn
  LineNumberTable: 
   line 16: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/runtime/RichDouble;
   0      6      1    that       Ljava/lang/Object;


public boolean $greater$eq(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#160; //Method scala/math/Ordered$class.$greater$eq:(Lscala/math/Ordered;Ljava/lang/Object;)Z
   5:	ireturn
  LineNumberTable: 
   line 16: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/runtime/RichDouble;
   0      6      1    that       Ljava/lang/Object;


public boolean $less$eq(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#163; //Method scala/math/Ordered$class.$less$eq:(Lscala/math/Ordered;Ljava/lang/Object;)Z
   5:	ireturn
  LineNumberTable: 
   line 16: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/runtime/RichDouble;
   0      6      1    that       Ljava/lang/Object;


public boolean $greater(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#166; //Method scala/math/Ordered$class.$greater:(Lscala/math/Ordered;Ljava/lang/Object;)Z
   5:	ireturn
  LineNumberTable: 
   line 16: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/runtime/RichDouble;
   0      6      1    that       Ljava/lang/Object;


public boolean $less(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#169; //Method scala/math/Ordered$class.$less:(Lscala/math/Ordered;Ljava/lang/Object;)Z
   5:	ireturn
  LineNumberTable: 
   line 16: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/runtime/RichDouble;
   0      6      1    that       Ljava/lang/Object;


}

