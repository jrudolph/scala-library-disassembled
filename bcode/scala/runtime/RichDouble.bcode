Compiled from "RichDouble.scala"
public final class scala.runtime.RichDouble extends java.lang.Object implements scala.Proxy,scala.Ordered,scala.ScalaObject
  SourceFile: "RichDouble.scala"
  Signature: length = 0x2
   00 FFFFFFB5 
  ScalaSig: length = 0x2FC
   05 00 7D 06 08 01 02 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF80 02 07 02 0A 52
   69 63 68 44 6F 75 62 6C 65 0A 02 03 04 01 07 72
   75 6E 74 69 6D 65 0A 01 05 01 05 73 63 61 6C 61
   03 00 13 05 00 08 10 14 1A 10 02 09 0E 0D 01 0A
   0A 02 0B 0C 01 04 6C 61 6E 67 0A 01 0D 01 04 6A
   61 76 61 09 02 0F 0A 02 06 4F 62 6A 65 63 74 10
   02 11 12 0D 01 04 09 02 13 04 02 05 50 72 6F 78
   79 10 03 11 15 17 09 02 16 04 02 07 4F 72 64 65
   72 65 64 10 02 11 18 09 02 19 04 02 06 44 6F 75
   62 6C 65 10 02 11 1B 09 02 1C 04 02 0B 53 63 61
   6C 61 4F 62 6A 65 63 74 08 08 1E 00 FFFFFF82 FFFFFF80 FFFFFFA0 FFFFFF80
   04 17 01 01 78 08 05 20 00 FFFFFF84 00 21 01 06 3C 69
   6E 69 74 3E 14 02 22 24 10 02 23 00 0D 01 02 08
   05 1E 1F FFFFFFC0 00 17 08 05 26 00 FFFFFF84 00 27 01 04 73
   65 6C 66 15 01 28 10 02 11 29 09 02 2A 04 02 03
   41 6E 79 08 05 2C 00 FFFFFF84 00 2D 01 07 63 6F 6D 70
   61 72 65 14 02 2E 31 10 02 11 2F 09 02 30 04 02
   03 49 6E 74 08 05 32 2B FFFFFFC0 00 17 01 01 79 08 05
   34 00 FFFFFF84 00 35 01 03 6D 69 6E 14 02 17 36 08 05
   32 33 FFFFFFC0 00 17 08 05 38 00 FFFFFF84 00 39 01 03 6D 61
   78 14 02 17 3A 08 05 32 37 FFFFFFC0 00 17 08 05 3C 00
   FFFFFF84 00 3D 01 03 61 62 73 15 01 17 08 05 3F 00 FFFFFF84
   00 40 01 05 72 6F 75 6E 64 15 01 41 10 02 11 42
   09 02 43 04 02 04 4C 6F 6E 67 08 05 45 00 FFFFFF84 00
   3D 01 04 63 65 69 6C 08 05 47 00 FFFFFF84 00 3D 01 05
   66 6C 6F 6F 72 08 05 49 00 FFFFFF84 00 4A 01 05 75 6E
   74 69 6C 14 02 4B 5C 10 04 4C 4F 17 52 0E 02 11
   4D 09 02 4E 04 01 05 52 61 6E 67 65 09 02 50 51
   02 07 50 61 72 74 69 61 6C 0A 02 4E 04 10 03 53
   56 59 0E 02 11 54 09 02 55 04 01 0C 47 65 6E 65
   72 69 63 52 61 6E 67 65 09 02 57 58 02 09 45 78
   63 6C 75 73 69 76 65 0A 02 55 04 10 02 11 5A 09
   02 5B 04 02 0A 42 69 67 44 65 63 69 6D 61 6C 08
   05 5D 48 FFFFFFC0 00 17 01 03 65 6E 64 08 05 49 00 FFFFFF84
   00 5F 14 03 52 60 61 08 05 5D 5E FFFFFFC0 00 17 08 05
   62 5E FFFFFFC0 00 17 01 04 73 74 65 70 08 05 64 00 FFFFFF84
   00 65 01 02 74 6F 14 02 66 6A 10 04 4C 4F 17 67
   10 03 53 68 59 09 02 69 58 02 09 49 6E 63 6C 75
   73 69 76 65 08 05 5D 63 FFFFFFC0 00 17 08 05 64 00 FFFFFF84
   00 6C 14 03 67 6D 6E 08 05 5D 6B FFFFFFC0 00 17 08 05
   62 6B FFFFFFC0 00 17 08 05 70 00 FFFFFF84 00 3D 01 09 74 6F
   52 61 64 69 61 6E 73 08 05 72 00 FFFFFF84 00 3D 01 09
   74 6F 44 65 67 72 65 65 73 08 05 74 00 FFFFFF84 00 75
   01 0A 69 73 49 6E 66 69 6E 69 74 79 15 01 76 10
   02 11 77 09 02 78 04 02 07 42 6F 6F 6C 65 61 6E
   08 05 7A 00 FFFFFF84 00 75 01 0D 69 73 50 6F 73 49 6E
   66 69 6E 69 74 79 08 05 7C 00 FFFFFF84 00 75 01 0D 69
   73 4E 65 67 49 6E 66 69 6E 69 74 79 
  InnerClass: 
   public #186= #96 of #185; //Partial=class scala/Range$Partial of class scala/Range
   public #191= #188 of #190; //Exclusive=class scala/GenericRange$Exclusive of class scala/GenericRange
   public #194= #193 of #190; //Inclusive=class scala/GenericRange$Inclusive of class scala/GenericRange
   public final #195= #98 of #10; //$anonfun$to$1=class scala/runtime/RichDouble$$anonfun$to$1 of class scala/runtime/RichDouble
   public final #196= #114 of #10; //$anonfun$until$1=class scala/runtime/RichDouble$$anonfun$until$1 of class scala/runtime/RichDouble
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	RichDouble.scala;
const #3 = Asciz	x;
const #4 = Asciz	D;
const #5 = Asciz	<init>;
const #6 = Asciz	(D)V;
const #7 = Asciz	Code;
const #8 = Asciz	LineNumberTable;
const #9 = Asciz	scala/runtime/RichDouble;
const #10 = class	#9;	//  scala/runtime/RichDouble
const #11 = NameAndType	#3:#4;//  x:D
const #12 = Field	#10.#11;	//  scala/runtime/RichDouble.x:D
const #13 = Asciz	java/lang/Object;
const #14 = class	#13;	//  java/lang/Object
const #15 = Asciz	()V;
const #16 = NameAndType	#5:#15;//  "<init>":()V
const #17 = Method	#14.#16;	//  java/lang/Object."<init>":()V
const #18 = Asciz	scala/Proxy$class;
const #19 = class	#18;	//  scala/Proxy$class
const #20 = Asciz	$init$;
const #21 = Asciz	(Lscala/Proxy;)V;
const #22 = NameAndType	#20:#21;//  $init$:(Lscala/Proxy;)V
const #23 = Method	#19.#22;	//  scala/Proxy$class.$init$:(Lscala/Proxy;)V
const #24 = Asciz	scala/Ordered$class;
const #25 = class	#24;	//  scala/Ordered$class
const #26 = Asciz	(Lscala/Ordered;)V;
const #27 = NameAndType	#20:#26;//  $init$:(Lscala/Ordered;)V
const #28 = Method	#25.#27;	//  scala/Ordered$class.$init$:(Lscala/Ordered;)V
const #29 = Asciz	this;
const #30 = Asciz	Lscala/runtime/RichDouble;;
const #31 = Asciz	LocalVariableTable;
const #32 = Asciz	compare;
const #33 = Asciz	(Ljava/lang/Object;)I;
const #34 = Asciz	scala/runtime/BoxesRunTime;
const #35 = class	#34;	//  scala/runtime/BoxesRunTime
const #36 = Asciz	unboxToDouble;
const #37 = Asciz	(Ljava/lang/Object;)D;
const #38 = NameAndType	#36:#37;//  unboxToDouble:(Ljava/lang/Object;)D
const #39 = Method	#35.#38;	//  scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
const #40 = Asciz	(D)I;
const #41 = NameAndType	#32:#40;//  compare:(D)I
const #42 = Method	#10.#41;	//  scala/runtime/RichDouble.compare:(D)I
const #43 = Asciz	that;
const #44 = Asciz	Ljava/lang/Object;;
const #45 = Asciz	isNegInfinity;
const #46 = Asciz	()Z;
const #47 = Asciz	isInfinity;
const #48 = NameAndType	#47:#46;//  isInfinity:()Z
const #49 = Method	#10.#48;	//  scala/runtime/RichDouble.isInfinity:()Z
const #50 = Asciz	isPosInfinity;
const #51 = Asciz	java/lang/Double;
const #52 = class	#51;	//  java/lang/Double
const #53 = Asciz	isInfinite;
const #54 = Asciz	(D)Z;
const #55 = NameAndType	#53:#54;//  isInfinite:(D)Z
const #56 = Method	#52.#55;	//  java/lang/Double.isInfinite:(D)Z
const #57 = Asciz	toDegrees;
const #58 = Asciz	()D;
const #59 = Asciz	scala/Math$;
const #60 = class	#59;	//  scala/Math$
const #61 = Asciz	MODULE$;
const #62 = Asciz	Lscala/Math$;;
const #63 = NameAndType	#61:#62;//  MODULE$:Lscala/Math$;
const #64 = Field	#60.#63;	//  scala/Math$.MODULE$:Lscala/Math$;
const #65 = Asciz	(D)D;
const #66 = NameAndType	#57:#65;//  toDegrees:(D)D
const #67 = Method	#60.#66;	//  scala/Math$.toDegrees:(D)D
const #68 = Asciz	toRadians;
const #69 = NameAndType	#68:#65;//  toRadians:(D)D
const #70 = Method	#60.#69;	//  scala/Math$.toRadians:(D)D
const #71 = Asciz	to;
const #72 = Asciz	(DD)Lscala/GenericRange$Inclusive;;
const #73 = Asciz	scala/BigDecimal$;
const #74 = class	#73;	//  scala/BigDecimal$
const #75 = Asciz	Lscala/BigDecimal$;;
const #76 = NameAndType	#61:#75;//  MODULE$:Lscala/BigDecimal$;
const #77 = Field	#74.#76;	//  scala/BigDecimal$.MODULE$:Lscala/BigDecimal$;
const #78 = Asciz	apply;
const #79 = Asciz	(D)Lscala/BigDecimal;;
const #80 = NameAndType	#78:#79;//  apply:(D)Lscala/BigDecimal;
const #81 = Method	#74.#80;	//  scala/BigDecimal$.apply:(D)Lscala/BigDecimal;
const #82 = Asciz	double2bigDecimal;
const #83 = NameAndType	#82:#79;//  double2bigDecimal:(D)Lscala/BigDecimal;
const #84 = Method	#74.#83;	//  scala/BigDecimal$.double2bigDecimal:(D)Lscala/BigDecimal;
const #85 = Asciz	scala/BigDecimal;
const #86 = class	#85;	//  scala/BigDecimal
const #87 = Asciz	(Lscala/BigDecimal;Lscala/BigDecimal;)Lscala/GenericRange$Inclusive;;
const #88 = NameAndType	#71:#87;//  to:(Lscala/BigDecimal;Lscala/BigDecimal;)Lscala/GenericRange$Inclusive;
const #89 = Method	#86.#88;	//  scala/BigDecimal.to:(Lscala/BigDecimal;Lscala/BigDecimal;)Lscala/GenericRange$Inclusive;
const #90 = Asciz	end;
const #91 = Asciz	step;
const #92 = Asciz	(DD)Lscala/GenericRange$Inclusive<Lscala/BigDecimal;>;;
const #93 = Asciz	Signature;
const #94 = Asciz	(D)Lscala/Range$Partial;;
const #95 = Asciz	scala/Range$Partial;
const #96 = class	#95;	//  scala/Range$Partial
const #97 = Asciz	scala/runtime/RichDouble$$anonfun$to$1;
const #98 = class	#97;	//  scala/runtime/RichDouble$$anonfun$to$1
const #99 = Asciz	(Lscala/runtime/RichDouble;D)V;
const #100 = NameAndType	#5:#99;//  "<init>":(Lscala/runtime/RichDouble;D)V
const #101 = Method	#98.#100;	//  scala/runtime/RichDouble$$anonfun$to$1."<init>":(Lscala/runtime/RichDouble;D)V
const #102 = Asciz	(Lscala/Function1;)V;
const #103 = NameAndType	#5:#102;//  "<init>":(Lscala/Function1;)V
const #104 = Method	#96.#103;	//  scala/Range$Partial."<init>":(Lscala/Function1;)V
const #105 = Asciz	end$2;
const #106 = Asciz	(D)Lscala/Range$Partial<Ljava/lang/Double;Lscala/GenericRange$Inclusive<Lscala/BigDecimal;>;>;;
const #107 = Asciz	until;
const #108 = Asciz	(DD)Lscala/GenericRange$Exclusive;;
const #109 = Asciz	(Lscala/BigDecimal;Lscala/BigDecimal;)Lscala/GenericRange$Exclusive;;
const #110 = NameAndType	#107:#109;//  until:(Lscala/BigDecimal;Lscala/BigDecimal;)Lscala/GenericRange$Exclusive;
const #111 = Method	#86.#110;	//  scala/BigDecimal.until:(Lscala/BigDecimal;Lscala/BigDecimal;)Lscala/GenericRange$Exclusive;
const #112 = Asciz	(DD)Lscala/GenericRange$Exclusive<Lscala/BigDecimal;>;;
const #113 = Asciz	scala/runtime/RichDouble$$anonfun$until$1;
const #114 = class	#113;	//  scala/runtime/RichDouble$$anonfun$until$1
const #115 = Method	#114.#100;	//  scala/runtime/RichDouble$$anonfun$until$1."<init>":(Lscala/runtime/RichDouble;D)V
const #116 = Asciz	end$1;
const #117 = Asciz	(D)Lscala/Range$Partial<Ljava/lang/Double;Lscala/GenericRange$Exclusive<Lscala/BigDecimal;>;>;;
const #118 = Asciz	floor;
const #119 = NameAndType	#118:#65;//  floor:(D)D
const #120 = Method	#60.#119;	//  scala/Math$.floor:(D)D
const #121 = Asciz	ceil;
const #122 = NameAndType	#121:#65;//  ceil:(D)D
const #123 = Method	#60.#122;	//  scala/Math$.ceil:(D)D
const #124 = Asciz	round;
const #125 = Asciz	()J;
const #126 = Asciz	(D)J;
const #127 = NameAndType	#124:#126;//  round:(D)J
const #128 = Method	#60.#127;	//  scala/Math$.round:(D)J
const #129 = Asciz	abs;
const #130 = NameAndType	#129:#65;//  abs:(D)D
const #131 = Method	#60.#130;	//  scala/Math$.abs:(D)D
const #132 = Asciz	max;
const #133 = Asciz	(DD)D;
const #134 = NameAndType	#132:#133;//  max:(DD)D
const #135 = Method	#60.#134;	//  scala/Math$.max:(DD)D
const #136 = Asciz	y;
const #137 = Asciz	min;
const #138 = NameAndType	#137:#133;//  min:(DD)D
const #139 = Method	#60.#138;	//  scala/Math$.min:(DD)D
const #140 = Asciz	(DD)I;
const #141 = NameAndType	#32:#140;//  compare:(DD)I
const #142 = Method	#52.#141;	//  java/lang/Double.compare:(DD)I
const #143 = Asciz	self;
const #144 = Asciz	()Ljava/lang/Object;;
const #145 = Asciz	boxToDouble;
const #146 = Asciz	(D)Ljava/lang/Double;;
const #147 = NameAndType	#145:#146;//  boxToDouble:(D)Ljava/lang/Double;
const #148 = Method	#35.#147;	//  scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
const #149 = Asciz	toString;
const #150 = Asciz	()Ljava/lang/String;;
const #151 = Asciz	(Lscala/Proxy;)Ljava/lang/String;;
const #152 = NameAndType	#149:#151;//  toString:(Lscala/Proxy;)Ljava/lang/String;
const #153 = Method	#19.#152;	//  scala/Proxy$class.toString:(Lscala/Proxy;)Ljava/lang/String;
const #154 = Asciz	equals;
const #155 = Asciz	(Ljava/lang/Object;)Z;
const #156 = Asciz	(Lscala/Proxy;Ljava/lang/Object;)Z;
const #157 = NameAndType	#154:#156;//  equals:(Lscala/Proxy;Ljava/lang/Object;)Z
const #158 = Method	#19.#157;	//  scala/Proxy$class.equals:(Lscala/Proxy;Ljava/lang/Object;)Z
const #159 = Asciz	hashCode;
const #160 = Asciz	()I;
const #161 = Asciz	(Lscala/Proxy;)I;
const #162 = NameAndType	#159:#161;//  hashCode:(Lscala/Proxy;)I
const #163 = Method	#19.#162;	//  scala/Proxy$class.hashCode:(Lscala/Proxy;)I
const #164 = Asciz	compareTo;
const #165 = Asciz	(Lscala/Ordered;Ljava/lang/Object;)I;
const #166 = NameAndType	#164:#165;//  compareTo:(Lscala/Ordered;Ljava/lang/Object;)I
const #167 = Method	#25.#166;	//  scala/Ordered$class.compareTo:(Lscala/Ordered;Ljava/lang/Object;)I
const #168 = Asciz	$greater$eq;
const #169 = Asciz	(Lscala/Ordered;Ljava/lang/Object;)Z;
const #170 = NameAndType	#168:#169;//  $greater$eq:(Lscala/Ordered;Ljava/lang/Object;)Z
const #171 = Method	#25.#170;	//  scala/Ordered$class.$greater$eq:(Lscala/Ordered;Ljava/lang/Object;)Z
const #172 = Asciz	$less$eq;
const #173 = NameAndType	#172:#169;//  $less$eq:(Lscala/Ordered;Ljava/lang/Object;)Z
const #174 = Method	#25.#173;	//  scala/Ordered$class.$less$eq:(Lscala/Ordered;Ljava/lang/Object;)Z
const #175 = Asciz	$greater;
const #176 = NameAndType	#175:#169;//  $greater:(Lscala/Ordered;Ljava/lang/Object;)Z
const #177 = Method	#25.#176;	//  scala/Ordered$class.$greater:(Lscala/Ordered;Ljava/lang/Object;)Z
const #178 = Asciz	$less;
const #179 = NameAndType	#178:#169;//  $less:(Lscala/Ordered;Ljava/lang/Object;)Z
const #180 = Method	#25.#179;	//  scala/Ordered$class.$less:(Lscala/Ordered;Ljava/lang/Object;)Z
const #181 = Asciz	Ljava/lang/Object;Lscala/Proxy;Lscala/Ordered<Ljava/lang/Double;>;Lscala/ScalaObject;;
const #182 = Asciz	ScalaSig;
const #183 = Asciz	InnerClasses;
const #184 = Asciz	scala/Range;
const #185 = class	#184;	//  scala/Range
const #186 = Asciz	Partial;
const #187 = Asciz	scala/GenericRange$Exclusive;
const #188 = class	#187;	//  scala/GenericRange$Exclusive
const #189 = Asciz	scala/GenericRange;
const #190 = class	#189;	//  scala/GenericRange
const #191 = Asciz	Exclusive;
const #192 = Asciz	scala/GenericRange$Inclusive;
const #193 = class	#192;	//  scala/GenericRange$Inclusive
const #194 = Asciz	Inclusive;
const #195 = Asciz	$anonfun$to$1;
const #196 = Asciz	$anonfun$until$1;
const #197 = Asciz	scala/Proxy;
const #198 = class	#197;	//  scala/Proxy
const #199 = Asciz	scala/Ordered;
const #200 = class	#199;	//  scala/Ordered
const #201 = Asciz	scala/ScalaObject;
const #202 = class	#201;	//  scala/ScalaObject

{
public scala.runtime.RichDouble(double);
  Code:
   Stack=3, Locals=3, Args_size=2
   0:	aload_0
   1:	dload_1
   2:	putfield	#12; //Field x:D
   5:	aload_0
   6:	invokespecial	#17; //Method java/lang/Object."<init>":()V
   9:	aload_0
   10:	invokestatic	#23; //Method scala/Proxy$class.$init$:(Lscala/Proxy;)V
   13:	aload_0
   14:	invokestatic	#28; //Method scala/Ordered$class.$init$:(Lscala/Ordered;)V
   17:	return
  LineNumberTable: 
   line 15: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      18      0    this       Lscala/runtime/RichDouble;
   0      18      1    x       D


public int compare(java.lang.Object);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#39; //Method scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
   5:	invokevirtual	#42; //Method compare:(D)I
   8:	ireturn
  LineNumberTable: 
   line 15: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/runtime/RichDouble;
   0      9      1    that       Ljava/lang/Object;


public boolean isNegInfinity();
  Code:
   Stack=4, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#49; //Method isInfinity:()Z
   4:	ifeq	20
   7:	aload_0
   8:	getfield	#12; //Field x:D
   11:	dconst_0
   12:	dcmpg
   13:	ifge	20
   16:	iconst_1
   17:	goto	21
   20:	iconst_0
   21:	ireturn
  LineNumberTable: 
   line 65: 0


public boolean isPosInfinity();
  Code:
   Stack=4, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#49; //Method isInfinity:()Z
   4:	ifeq	20
   7:	aload_0
   8:	getfield	#12; //Field x:D
   11:	dconst_0
   12:	dcmpl
   13:	ifle	20
   16:	iconst_1
   17:	goto	21
   20:	iconst_0
   21:	ireturn
  LineNumberTable: 
   line 64: 0


public boolean isInfinity();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#12; //Field x:D
   4:	invokestatic	#56; //Method java/lang/Double.isInfinite:(D)Z
   7:	ireturn
  LineNumberTable: 
   line 63: 0


public double toDegrees();
  Code:
   Stack=3, Locals=1, Args_size=1
   0:	getstatic	#64; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	aload_0
   4:	getfield	#12; //Field x:D
   7:	invokevirtual	#67; //Method scala/Math$.toDegrees:(D)D
   10:	dreturn
  LineNumberTable: 
   line 59: 0


public double toRadians();
  Code:
   Stack=3, Locals=1, Args_size=1
   0:	getstatic	#64; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	aload_0
   4:	getfield	#12; //Field x:D
   7:	invokevirtual	#70; //Method scala/Math$.toRadians:(D)D
   10:	dreturn
  LineNumberTable: 
   line 51: 0


public scala.GenericRange$Inclusive to(double, double);
  Code:
   Stack=5, Locals=5, Args_size=3
   0:	getstatic	#77; //Field scala/BigDecimal$.MODULE$:Lscala/BigDecimal$;
   3:	aload_0
   4:	getfield	#12; //Field x:D
   7:	invokevirtual	#81; //Method scala/BigDecimal$.apply:(D)Lscala/BigDecimal;
   10:	getstatic	#77; //Field scala/BigDecimal$.MODULE$:Lscala/BigDecimal$;
   13:	dload_1
   14:	invokevirtual	#84; //Method scala/BigDecimal$.double2bigDecimal:(D)Lscala/BigDecimal;
   17:	getstatic	#77; //Field scala/BigDecimal$.MODULE$:Lscala/BigDecimal$;
   20:	dload_3
   21:	invokevirtual	#84; //Method scala/BigDecimal$.double2bigDecimal:(D)Lscala/BigDecimal;
   24:	invokevirtual	#89; //Method scala/BigDecimal.to:(Lscala/BigDecimal;Lscala/BigDecimal;)Lscala/GenericRange$Inclusive;
   27:	areturn
  LineNumberTable: 
   line 43: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      28      0    this       Lscala/runtime/RichDouble;
   0      28      1    end       D
   0      28      3    step       D

  Signature: length = 0x2
   00 5C 

public scala.Range$Partial to(double);
  Code:
   Stack=7, Locals=3, Args_size=2
   0:	new	#96; //class scala/Range$Partial
   3:	dup
   4:	new	#98; //class scala/runtime/RichDouble$$anonfun$to$1
   7:	dup
   8:	aload_0
   9:	dload_1
   10:	invokespecial	#101; //Method scala/runtime/RichDouble$$anonfun$to$1."<init>":(Lscala/runtime/RichDouble;D)V
   13:	invokespecial	#104; //Method scala/Range$Partial."<init>":(Lscala/Function1;)V
   16:	areturn
  LineNumberTable: 
   line 39: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      17      0    this       Lscala/runtime/RichDouble;
   0      17      1    end$2       D

  Signature: length = 0x2
   00 6A 

public scala.GenericRange$Exclusive until(double, double);
  Code:
   Stack=5, Locals=5, Args_size=3
   0:	getstatic	#77; //Field scala/BigDecimal$.MODULE$:Lscala/BigDecimal$;
   3:	aload_0
   4:	getfield	#12; //Field x:D
   7:	invokevirtual	#81; //Method scala/BigDecimal$.apply:(D)Lscala/BigDecimal;
   10:	getstatic	#77; //Field scala/BigDecimal$.MODULE$:Lscala/BigDecimal$;
   13:	dload_1
   14:	invokevirtual	#84; //Method scala/BigDecimal$.double2bigDecimal:(D)Lscala/BigDecimal;
   17:	getstatic	#77; //Field scala/BigDecimal$.MODULE$:Lscala/BigDecimal$;
   20:	dload_3
   21:	invokevirtual	#84; //Method scala/BigDecimal$.double2bigDecimal:(D)Lscala/BigDecimal;
   24:	invokevirtual	#111; //Method scala/BigDecimal.until:(Lscala/BigDecimal;Lscala/BigDecimal;)Lscala/GenericRange$Exclusive;
   27:	areturn
  LineNumberTable: 
   line 35: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      28      0    this       Lscala/runtime/RichDouble;
   0      28      1    end       D
   0      28      3    step       D

  Signature: length = 0x2
   00 70 

public scala.Range$Partial until(double);
  Code:
   Stack=7, Locals=3, Args_size=2
   0:	new	#96; //class scala/Range$Partial
   3:	dup
   4:	new	#114; //class scala/runtime/RichDouble$$anonfun$until$1
   7:	dup
   8:	aload_0
   9:	dload_1
   10:	invokespecial	#115; //Method scala/runtime/RichDouble$$anonfun$until$1."<init>":(Lscala/runtime/RichDouble;D)V
   13:	invokespecial	#104; //Method scala/Range$Partial."<init>":(Lscala/Function1;)V
   16:	areturn
  LineNumberTable: 
   line 31: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      17      0    this       Lscala/runtime/RichDouble;
   0      17      1    end$1       D

  Signature: length = 0x2
   00 75 

public double floor();
  Code:
   Stack=3, Locals=1, Args_size=1
   0:	getstatic	#64; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	aload_0
   4:	getfield	#12; //Field x:D
   7:	invokevirtual	#120; //Method scala/Math$.floor:(D)D
   10:	dreturn
  LineNumberTable: 
   line 27: 0


public double ceil();
  Code:
   Stack=3, Locals=1, Args_size=1
   0:	getstatic	#64; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	aload_0
   4:	getfield	#12; //Field x:D
   7:	invokevirtual	#123; //Method scala/Math$.ceil:(D)D
   10:	dreturn
  LineNumberTable: 
   line 26: 0


public long round();
  Code:
   Stack=3, Locals=1, Args_size=1
   0:	getstatic	#64; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	aload_0
   4:	getfield	#12; //Field x:D
   7:	invokevirtual	#128; //Method scala/Math$.round:(D)J
   10:	lreturn
  LineNumberTable: 
   line 25: 0


public double abs();
  Code:
   Stack=3, Locals=1, Args_size=1
   0:	getstatic	#64; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	aload_0
   4:	getfield	#12; //Field x:D
   7:	invokevirtual	#131; //Method scala/Math$.abs:(D)D
   10:	dreturn
  LineNumberTable: 
   line 23: 0


public double max(double);
  Code:
   Stack=5, Locals=3, Args_size=2
   0:	getstatic	#64; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	aload_0
   4:	getfield	#12; //Field x:D
   7:	dload_1
   8:	invokevirtual	#135; //Method scala/Math$.max:(DD)D
   11:	dreturn
  LineNumberTable: 
   line 22: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      12      0    this       Lscala/runtime/RichDouble;
   0      12      1    y       D


public double min(double);
  Code:
   Stack=5, Locals=3, Args_size=2
   0:	getstatic	#64; //Field scala/Math$.MODULE$:Lscala/Math$;
   3:	aload_0
   4:	getfield	#12; //Field x:D
   7:	dload_1
   8:	invokevirtual	#139; //Method scala/Math$.min:(DD)D
   11:	dreturn
  LineNumberTable: 
   line 21: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      12      0    this       Lscala/runtime/RichDouble;
   0      12      1    y       D


public int compare(double);
  Code:
   Stack=4, Locals=3, Args_size=2
   0:	aload_0
   1:	getfield	#12; //Field x:D
   4:	dload_1
   5:	invokestatic	#142; //Method java/lang/Double.compare:(DD)I
   8:	ireturn
  LineNumberTable: 
   line 19: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/runtime/RichDouble;
   0      9      1    y       D


public java.lang.Object self();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#12; //Field x:D
   4:	invokestatic	#148; //Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
   7:	areturn
  LineNumberTable: 
   line 17: 0


public java.lang.String toString();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#153; //Method scala/Proxy$class.toString:(Lscala/Proxy;)Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 15: 0


public boolean equals(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#158; //Method scala/Proxy$class.equals:(Lscala/Proxy;Ljava/lang/Object;)Z
   5:	ireturn
  LineNumberTable: 
   line 15: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/runtime/RichDouble;
   0      6      1    that       Ljava/lang/Object;


public int hashCode();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#163; //Method scala/Proxy$class.hashCode:(Lscala/Proxy;)I
   4:	ireturn
  LineNumberTable: 
   line 15: 0


public int compareTo(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#167; //Method scala/Ordered$class.compareTo:(Lscala/Ordered;Ljava/lang/Object;)I
   5:	ireturn
  LineNumberTable: 
   line 15: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/runtime/RichDouble;
   0      6      1    that       Ljava/lang/Object;


public boolean $greater$eq(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#171; //Method scala/Ordered$class.$greater$eq:(Lscala/Ordered;Ljava/lang/Object;)Z
   5:	ireturn
  LineNumberTable: 
   line 15: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/runtime/RichDouble;
   0      6      1    that       Ljava/lang/Object;


public boolean $less$eq(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#174; //Method scala/Ordered$class.$less$eq:(Lscala/Ordered;Ljava/lang/Object;)Z
   5:	ireturn
  LineNumberTable: 
   line 15: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/runtime/RichDouble;
   0      6      1    that       Ljava/lang/Object;


public boolean $greater(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#177; //Method scala/Ordered$class.$greater:(Lscala/Ordered;Ljava/lang/Object;)Z
   5:	ireturn
  LineNumberTable: 
   line 15: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/runtime/RichDouble;
   0      6      1    that       Ljava/lang/Object;


public boolean $less(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#180; //Method scala/Ordered$class.$less:(Lscala/Ordered;Ljava/lang/Object;)Z
   5:	ireturn
  LineNumberTable: 
   line 15: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/runtime/RichDouble;
   0      6      1    that       Ljava/lang/Object;


}

