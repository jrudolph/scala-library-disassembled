Compiled from "RichDouble.scala"
public final class scala.runtime.RichDouble extends java.lang.Object implements scala.Proxy,scala.math.Ordered,scala.ScalaObject
  SourceFile: "RichDouble.scala"
  ScalaSig: length = 0x3
   05 00 00 
  Signature: length = 0x2
   00 FFFFFFAB 
  RuntimeVisibleAnnotations: length = 0xB
   00 01 00 FFFFFFAC 00 01 00 FFFFFFAD 73 00 FFFFFFAE 
  InnerClass: 
   public Partial=class scala/collection/immutable/Range$Partial of class scala/collection/immutable/Range
   public final $anonfun$to$1=class scala/runtime/RichDouble$$anonfun$to$1 of class scala/runtime/RichDouble
   public final $anonfun$until$1=class scala/runtime/RichDouble$$anonfun$until$1 of class scala/runtime/RichDouble
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	RichDouble.scala;
Asciz	x;
Asciz	D;
Asciz	$less;
Asciz	(Ljava/lang/Object;)Z;
Asciz	Code;
Asciz	LineNumberTable;
Asciz	scala/math/Ordered$class;
class	scala/math/Ordered$class
Asciz	(Lscala/math/Ordered;Ljava/lang/Object;)Z;
NameAndType	$less:(Lscala/math/Ordered;Ljava/lang/Object;)Z
Method	scala/math/Ordered$class.$less:(Lscala/math/Ordered;Ljava/lang/Object;)Z
Asciz	this;
Asciz	Lscala/runtime/RichDouble;;
Asciz	that;
Asciz	Ljava/lang/Object;;
Asciz	LocalVariableTable;
Asciz	$greater;
NameAndType	$greater:(Lscala/math/Ordered;Ljava/lang/Object;)Z
Method	scala/math/Ordered$class.$greater:(Lscala/math/Ordered;Ljava/lang/Object;)Z
Asciz	$less$eq;
NameAndType	$less$eq:(Lscala/math/Ordered;Ljava/lang/Object;)Z
Method	scala/math/Ordered$class.$less$eq:(Lscala/math/Ordered;Ljava/lang/Object;)Z
Asciz	$greater$eq;
NameAndType	$greater$eq:(Lscala/math/Ordered;Ljava/lang/Object;)Z
Method	scala/math/Ordered$class.$greater$eq:(Lscala/math/Ordered;Ljava/lang/Object;)Z
Asciz	compareTo;
Asciz	(Ljava/lang/Object;)I;
Asciz	(Lscala/math/Ordered;Ljava/lang/Object;)I;
NameAndType	compareTo:(Lscala/math/Ordered;Ljava/lang/Object;)I
Method	scala/math/Ordered$class.compareTo:(Lscala/math/Ordered;Ljava/lang/Object;)I
Asciz	hashCode;
Asciz	()I;
Asciz	scala/Proxy$class;
class	scala/Proxy$class
Asciz	(Lscala/Proxy;)I;
NameAndType	hashCode:(Lscala/Proxy;)I
Method	scala/Proxy$class.hashCode:(Lscala/Proxy;)I
Asciz	equals;
Asciz	(Lscala/Proxy;Ljava/lang/Object;)Z;
NameAndType	equals:(Lscala/Proxy;Ljava/lang/Object;)Z
Method	scala/Proxy$class.equals:(Lscala/Proxy;Ljava/lang/Object;)Z
Asciz	toString;
Asciz	()Ljava/lang/String;;
Asciz	(Lscala/Proxy;)Ljava/lang/String;;
NameAndType	toString:(Lscala/Proxy;)Ljava/lang/String;
Method	scala/Proxy$class.toString:(Lscala/Proxy;)Ljava/lang/String;
Asciz	self;
Asciz	()Ljava/lang/Object;;
Asciz	scala/runtime/RichDouble;
class	scala/runtime/RichDouble
NameAndType	x:D
Field	scala/runtime/RichDouble.x:D
Asciz	scala/runtime/BoxesRunTime;
class	scala/runtime/BoxesRunTime
Asciz	boxToDouble;
Asciz	(D)Ljava/lang/Double;;
NameAndType	boxToDouble:(D)Ljava/lang/Double;
Method	scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
Asciz	compare;
Asciz	(D)I;
Asciz	java/lang/Double;
class	java/lang/Double
Asciz	(DD)I;
NameAndType	compare:(DD)I
Method	java/lang/Double.compare:(DD)I
Asciz	y;
Asciz	min;
Asciz	(D)D;
Asciz	scala/math/package$;
class	scala/math/package$
Asciz	MODULE$;
Asciz	Lscala/math/package$;;
NameAndType	MODULE$:Lscala/math/package$;
Field	scala/math/package$.MODULE$:Lscala/math/package$;
Asciz	scala/MathCommon;
class	scala/MathCommon
Asciz	(DD)D;
NameAndType	min:(DD)D
InterfaceMethod	scala/MathCommon.min:(DD)D
Asciz	max;
NameAndType	max:(DD)D
InterfaceMethod	scala/MathCommon.max:(DD)D
Asciz	abs;
Asciz	()D;
NameAndType	abs:(D)D
InterfaceMethod	scala/MathCommon.abs:(D)D
Asciz	round;
Asciz	()J;
Asciz	(D)J;
NameAndType	round:(D)J
InterfaceMethod	scala/MathCommon.round:(D)J
Asciz	ceil;
NameAndType	ceil:(D)D
InterfaceMethod	scala/MathCommon.ceil:(D)D
Asciz	floor;
NameAndType	floor:(D)D
InterfaceMethod	scala/MathCommon.floor:(D)D
Asciz	until;
Asciz	(D)Lscala/collection/immutable/Range$Partial;;
Asciz	scala/collection/immutable/Range$Partial;
class	scala/collection/immutable/Range$Partial
Asciz	scala/runtime/RichDouble$$anonfun$until$1;
class	scala/runtime/RichDouble$$anonfun$until$1
Asciz	<init>;
Asciz	(Lscala/runtime/RichDouble;D)V;
NameAndType	"<init>":(Lscala/runtime/RichDouble;D)V
Method	scala/runtime/RichDouble$$anonfun$until$1."<init>":(Lscala/runtime/RichDouble;D)V
Asciz	(Lscala/Function1;)V;
NameAndType	"<init>":(Lscala/Function1;)V
Method	scala/collection/immutable/Range$Partial."<init>":(Lscala/Function1;)V
Asciz	end$1;
Asciz	(D)Lscala/collection/immutable/Range$Partial<Ljava/lang/Double;Lscala/collection/immutable/NumericRange<Ljava/lang/Double;>;>;;
Asciz	Signature;
Asciz	(DD)Lscala/collection/immutable/NumericRange;;
Asciz	scala/collection/immutable/Range$Double$;
class	scala/collection/immutable/Range$Double$
Asciz	Lscala/collection/immutable/Range$Double$;;
NameAndType	MODULE$:Lscala/collection/immutable/Range$Double$;
Field	scala/collection/immutable/Range$Double$.MODULE$:Lscala/collection/immutable/Range$Double$;
Asciz	apply;
Asciz	(DDD)Lscala/collection/immutable/NumericRange;;
NameAndType	apply:(DDD)Lscala/collection/immutable/NumericRange;
Method	scala/collection/immutable/Range$Double$.apply:(DDD)Lscala/collection/immutable/NumericRange;
Asciz	end;
Asciz	step;
Asciz	(DD)Lscala/collection/immutable/NumericRange<Ljava/lang/Double;>;;
Asciz	to;
Asciz	scala/runtime/RichDouble$$anonfun$to$1;
class	scala/runtime/RichDouble$$anonfun$to$1
Method	scala/runtime/RichDouble$$anonfun$to$1."<init>":(Lscala/runtime/RichDouble;D)V
Asciz	end$2;
Asciz	inclusive;
NameAndType	inclusive:(DDD)Lscala/collection/immutable/NumericRange;
Method	scala/collection/immutable/Range$Double$.inclusive:(DDD)Lscala/collection/immutable/NumericRange;
Asciz	toRadians;
NameAndType	toRadians:(D)D
InterfaceMethod	scala/MathCommon.toRadians:(D)D
Asciz	toDegrees;
NameAndType	toDegrees:(D)D
InterfaceMethod	scala/MathCommon.toDegrees:(D)D
Asciz	isInfinity;
Asciz	()Z;
Asciz	isInfinite;
Asciz	(D)Z;
NameAndType	isInfinite:(D)Z
Method	java/lang/Double.isInfinite:(D)Z
Asciz	isPosInfinity;
Asciz	isNegInfinity;
Asciz	unboxToDouble;
Asciz	(Ljava/lang/Object;)D;
NameAndType	unboxToDouble:(Ljava/lang/Object;)D
Method	scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
NameAndType	compare:(D)I
Method	scala/runtime/RichDouble.compare:(D)I
Asciz	(D)V;
Asciz	java/lang/Object;
class	java/lang/Object
Asciz	()V;
NameAndType	"<init>":()V
Method	java/lang/Object."<init>":()V
Asciz	$init$;
Asciz	(Lscala/Proxy;)V;
NameAndType	$init$:(Lscala/Proxy;)V
Method	scala/Proxy$class.$init$:(Lscala/Proxy;)V
Asciz	(Lscala/math/Ordered;)V;
NameAndType	$init$:(Lscala/math/Ordered;)V
Method	scala/math/Ordered$class.$init$:(Lscala/math/Ordered;)V
Asciz	ScalaSig;
Asciz	Ljava/lang/Object;Lscala/Proxy;Lscala/math/Ordered<Ljava/lang/Double;>;Lscala/ScalaObject;;
Asciz	Lscala/reflect/ScalaSignature;;
Asciz	bytes;
Asciz	aC\t\tQAIK7\r#pk\ndWM\t9!/8uS6,'\"AM\r\1M)\tGABD)1DYtwMCQM^1\n=Q!AB(cUG%5\tA!\t\t)K]8ysBQ#YYbBAA\"BA\ra$o\8u}%\tQ!\t9/Y2lC,B y%Z3sKT!E\tB!u.2mKBJK1bU2bY|%M[3di\"AqBB%%AyI\"+aN\5u}Q1&\tYiAO!\r\t_!\tMgdg-F2!\t\t\"'4\t\tI\=\tUA\r|W]1sKRqG\t#aJ!!%sGC<i%Azi\"?\riNA}BQaABQ!\t1!\1y)\t3\tC<CFa)AbEN,\t!\t!Se>,hZBcSAT8oO\")a\nC\r!1-Z5m\"G1Gn\8s\"T)h^5m)\t!6\rV;gB,\9&B-Z%IW.\;uC\ndWM[\tQ1m7mK$n8\nq;!*b],B0`M;jC2T!X,Y%c/\naa*^7fe&'+8hK\")A-aAQM3\tIA4<CeKCjK%ti\"B6\taA;p)\t!VCeUClqFaaFDQ8ABQ!8ABQa^8SCLM\:\tUA$Q|G)Z4sK\"B<\tAAC5t:4N\5usV\tu&1>|G.Z1oi\"y5I7U8t:4N\5us\")qCqin(fO&sg-8jif;
Asciz	RuntimeVisibleAnnotations;
Asciz	InnerClasses;
Asciz	scala/collection/immutable/Range;
class	scala/collection/immutable/Range
Asciz	Partial;
Asciz	$anonfun$to$1;
Asciz	$anonfun$until$1;
Asciz	scala/Proxy;
class	scala/Proxy
Asciz	scala/math/Ordered;
class	scala/math/Ordered
Asciz	scala/ScalaObject;
class	scala/ScalaObject

{
public final double x;
  Signature: D

public boolean $less(java.lang.Object);
  Signature: (Ljava/lang/Object;)Z
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokestatic	Method scala/math/Ordered$class.$less:(Lscala/math/Ordered;Ljava/lang/Object;)Z
	ireturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/runtime/RichDouble;
   0      6      1    that       Ljava/lang/Object;


public boolean $greater(java.lang.Object);
  Signature: (Ljava/lang/Object;)Z
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokestatic	Method scala/math/Ordered$class.$greater:(Lscala/math/Ordered;Ljava/lang/Object;)Z
	ireturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/runtime/RichDouble;
   0      6      1    that       Ljava/lang/Object;


public boolean $less$eq(java.lang.Object);
  Signature: (Ljava/lang/Object;)Z
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokestatic	Method scala/math/Ordered$class.$less$eq:(Lscala/math/Ordered;Ljava/lang/Object;)Z
	ireturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/runtime/RichDouble;
   0      6      1    that       Ljava/lang/Object;


public boolean $greater$eq(java.lang.Object);
  Signature: (Ljava/lang/Object;)Z
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokestatic	Method scala/math/Ordered$class.$greater$eq:(Lscala/math/Ordered;Ljava/lang/Object;)Z
	ireturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/runtime/RichDouble;
   0      6      1    that       Ljava/lang/Object;


public int compareTo(java.lang.Object);
  Signature: (Ljava/lang/Object;)I
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokestatic	Method scala/math/Ordered$class.compareTo:(Lscala/math/Ordered;Ljava/lang/Object;)I
	ireturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/runtime/RichDouble;
   0      6      1    that       Ljava/lang/Object;


public int hashCode();
  Signature: ()I
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokestatic	Method scala/Proxy$class.hashCode:(Lscala/Proxy;)I
	ireturn
  Labels:

public boolean equals(java.lang.Object);
  Signature: (Ljava/lang/Object;)Z
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokestatic	Method scala/Proxy$class.equals:(Lscala/Proxy;Ljava/lang/Object;)Z
	ireturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/runtime/RichDouble;
   0      6      1    that       Ljava/lang/Object;


public java.lang.String toString();
  Signature: ()Ljava/lang/String;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokestatic	Method scala/Proxy$class.toString:(Lscala/Proxy;)Ljava/lang/String;
	areturn
  Labels:

public java.lang.Object self();
  Signature: ()Ljava/lang/Object;
  Code:
   Stack=2, Locals=3, Args_size=1
	aload_0
	getfield	Field x:D
	dstore_1
	dload_1
	invokestatic	Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
	areturn
  Labels:

public int compare(double);
  Signature: (D)I
  Code:
   Stack=4, Locals=3, Args_size=2
	aload_0
	getfield	Field x:D
	dload_1
	invokestatic	Method java/lang/Double.compare:(DD)I
	ireturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/runtime/RichDouble;
   0      9      1    y       D


public double min(double);
  Signature: (D)D
  Code:
   Stack=5, Locals=3, Args_size=2
	getstatic	Field scala/math/package$.MODULE$:Lscala/math/package$;
	aload_0
	getfield	Field x:D
	dload_1
	invokeinterface	InterfaceMethod scala/MathCommon.min:(DD)D
	dreturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      14      0    this       Lscala/runtime/RichDouble;
   0      14      1    y       D


public double max(double);
  Signature: (D)D
  Code:
   Stack=5, Locals=3, Args_size=2
	getstatic	Field scala/math/package$.MODULE$:Lscala/math/package$;
	aload_0
	getfield	Field x:D
	dload_1
	invokeinterface	InterfaceMethod scala/MathCommon.max:(DD)D
	dreturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      14      0    this       Lscala/runtime/RichDouble;
   0      14      1    y       D


public double abs();
  Signature: ()D
  Code:
   Stack=3, Locals=1, Args_size=1
	getstatic	Field scala/math/package$.MODULE$:Lscala/math/package$;
	aload_0
	getfield	Field x:D
	invokeinterface	InterfaceMethod scala/MathCommon.abs:(D)D
	dreturn
  Labels:

public long round();
  Signature: ()J
  Code:
   Stack=3, Locals=1, Args_size=1
	getstatic	Field scala/math/package$.MODULE$:Lscala/math/package$;
	aload_0
	getfield	Field x:D
	invokeinterface	InterfaceMethod scala/MathCommon.round:(D)J
	lreturn
  Labels:

public double ceil();
  Signature: ()D
  Code:
   Stack=3, Locals=1, Args_size=1
	getstatic	Field scala/math/package$.MODULE$:Lscala/math/package$;
	aload_0
	getfield	Field x:D
	invokeinterface	InterfaceMethod scala/MathCommon.ceil:(D)D
	dreturn
  Labels:

public double floor();
  Signature: ()D
  Code:
   Stack=3, Locals=1, Args_size=1
	getstatic	Field scala/math/package$.MODULE$:Lscala/math/package$;
	aload_0
	getfield	Field x:D
	invokeinterface	InterfaceMethod scala/MathCommon.floor:(D)D
	dreturn
  Labels:

public scala.collection.immutable.Range$Partial until(double);
  Signature: (D)Lscala/collection/immutable/Range$Partial;
  Code:
   Stack=7, Locals=3, Args_size=2
	new	class scala/collection/immutable/Range$Partial
	dup
	new	class scala/runtime/RichDouble$$anonfun$until$1
	dup
	aload_0
	dload_1
	invokespecial	Method scala/runtime/RichDouble$$anonfun$until$1."<init>":(Lscala/runtime/RichDouble;D)V
	invokespecial	Method scala/collection/immutable/Range$Partial."<init>":(Lscala/Function1;)V
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      17      0    this       Lscala/runtime/RichDouble;
   0      17      1    end$1       D

  Signature: length = 0x2
   00 72 

public scala.collection.immutable.NumericRange until(double, double);
  Signature: (DD)Lscala/collection/immutable/NumericRange;
  Code:
   Stack=7, Locals=5, Args_size=3
	getstatic	Field scala/collection/immutable/Range$Double$.MODULE$:Lscala/collection/immutable/Range$Double$;
	aload_0
	getfield	Field x:D
	dload_1
	dload_3
	invokevirtual	Method scala/collection/immutable/Range$Double$.apply:(DDD)Lscala/collection/immutable/NumericRange;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      13      0    this       Lscala/runtime/RichDouble;
   0      13      1    end       D
   0      13      3    step       D

  Signature: length = 0x2
   00 FFFFFF80 

public scala.collection.immutable.Range$Partial to(double);
  Signature: (D)Lscala/collection/immutable/Range$Partial;
  Code:
   Stack=7, Locals=3, Args_size=2
	new	class scala/collection/immutable/Range$Partial
	dup
	new	class scala/runtime/RichDouble$$anonfun$to$1
	dup
	aload_0
	dload_1
	invokespecial	Method scala/runtime/RichDouble$$anonfun$to$1."<init>":(Lscala/runtime/RichDouble;D)V
	invokespecial	Method scala/collection/immutable/Range$Partial."<init>":(Lscala/Function1;)V
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      17      0    this       Lscala/runtime/RichDouble;
   0      17      1    end$2       D

  Signature: length = 0x2
   00 72 

public scala.collection.immutable.NumericRange to(double, double);
  Signature: (DD)Lscala/collection/immutable/NumericRange;
  Code:
   Stack=7, Locals=5, Args_size=3
	getstatic	Field scala/collection/immutable/Range$Double$.MODULE$:Lscala/collection/immutable/Range$Double$;
	aload_0
	getfield	Field x:D
	dload_1
	dload_3
	invokevirtual	Method scala/collection/immutable/Range$Double$.inclusive:(DDD)Lscala/collection/immutable/NumericRange;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      13      0    this       Lscala/runtime/RichDouble;
   0      13      1    end       D
   0      13      3    step       D

  Signature: length = 0x2
   00 FFFFFF80 

public double toRadians();
  Signature: ()D
  Code:
   Stack=3, Locals=1, Args_size=1
	getstatic	Field scala/math/package$.MODULE$:Lscala/math/package$;
	aload_0
	getfield	Field x:D
	invokeinterface	InterfaceMethod scala/MathCommon.toRadians:(D)D
	dreturn
  Labels:

public double toDegrees();
  Signature: ()D
  Code:
   Stack=3, Locals=1, Args_size=1
	getstatic	Field scala/math/package$.MODULE$:Lscala/math/package$;
	aload_0
	getfield	Field x:D
	invokeinterface	InterfaceMethod scala/MathCommon.toDegrees:(D)D
	dreturn
  Labels:

public boolean isInfinity();
  Signature: ()Z
  Code:
   Stack=2, Locals=1, Args_size=1
	aload_0
	getfield	Field x:D
	invokestatic	Method java/lang/Double.isInfinite:(D)Z
	ireturn
  Labels:

public boolean isPosInfinity();
  Signature: ()Z
  Code:
   Stack=4, Locals=1, Args_size=1
	aload_0
	getfield	Field x:D
	invokestatic	Method java/lang/Double.isInfinite:(D)Z
	ifeq	l1 // iconst_0
	aload_0
	getfield	Field x:D
	dconst_0
	dcmpl
	ifle	l1 // iconst_0
	iconst_1
	goto	l2 // ireturn
l1	iconst_0
l2	ireturn
  Labels:
   	l1 = 23 // iconst_0
   	l2 = 24 // ireturn

public boolean isNegInfinity();
  Signature: ()Z
  Code:
   Stack=4, Locals=1, Args_size=1
	aload_0
	getfield	Field x:D
	invokestatic	Method java/lang/Double.isInfinite:(D)Z
	ifeq	l1 // iconst_0
	aload_0
	getfield	Field x:D
	dconst_0
	dcmpg
	ifge	l1 // iconst_0
	iconst_1
	goto	l2 // ireturn
l1	iconst_0
l2	ireturn
  Labels:
   	l1 = 23 // iconst_0
   	l2 = 24 // ireturn

public int compare(java.lang.Object);
  Signature: (Ljava/lang/Object;)I
  Code:
   Stack=3, Locals=2, Args_size=2
	aload_0
	aload_1
	invokestatic	Method scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
	invokevirtual	Method compare:(D)I
	ireturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/runtime/RichDouble;
   0      9      1    that       Ljava/lang/Object;


public scala.runtime.RichDouble(double);
  Signature: (D)V
  Code:
   Stack=3, Locals=3, Args_size=2
	aload_0
	dload_1
	putfield	Field x:D
	aload_0
	invokespecial	Method java/lang/Object."<init>":()V
	aload_0
	invokestatic	Method scala/Proxy$class.$init$:(Lscala/Proxy;)V
	aload_0
	invokestatic	Method scala/math/Ordered$class.$init$:(Lscala/math/Ordered;)V
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      18      0    this       Lscala/runtime/RichDouble;
   0      18      1    x       D


}

