Compiled from "RichException.scala"
public final class scala.runtime.RichException$$anonfun$getStackTraceString$1 extends java.lang.Object implements scala.Function1,scala.ScalaObject,java.io.Serializable
  SourceFile: "RichException.scala"
  Scala: length = 0x
   
  InnerClass: 
   public final #76= #10 of #75; //$anonfun$getStackTraceString$1=class scala/runtime/RichException$$anonfun$getStackTraceString$1 of class scala/runtime/RichException
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	RichException.scala;
const #3 = Asciz	s$1;
const #4 = Asciz	Lscala/collection/mutable/StringBuilder;;
const #5 = Asciz	<init>;
const #6 = Asciz	(Lscala/runtime/RichException;Lscala/collection/mutable/StringBuilder;)V;
const #7 = Asciz	Code;
const #8 = Asciz	LineNumberTable;
const #9 = Asciz	scala/runtime/RichException$$anonfun$getStackTraceString$1;
const #10 = class	#9;	//  scala/runtime/RichException$$anonfun$getStackTraceString$1
const #11 = NameAndType	#3:#4;//  s$1:Lscala/collection/mutable/StringBuilder;
const #12 = Field	#10.#11;	//  scala/runtime/RichException$$anonfun$getStackTraceString$1.s$1:Lscala/collection/mutable/StringBuilder;
const #13 = Asciz	java/lang/Object;
const #14 = class	#13;	//  java/lang/Object
const #15 = Asciz	()V;
const #16 = NameAndType	#5:#15;//  "<init>":()V
const #17 = Method	#14.#16;	//  java/lang/Object."<init>":()V
const #18 = Asciz	scala/Function1$class;
const #19 = class	#18;	//  scala/Function1$class
const #20 = Asciz	$init$;
const #21 = Asciz	(Lscala/Function1;)V;
const #22 = NameAndType	#20:#21;//  $init$:(Lscala/Function1;)V
const #23 = Method	#19.#22;	//  scala/Function1$class.$init$:(Lscala/Function1;)V
const #24 = Asciz	this;
const #25 = Asciz	Lscala/runtime/RichException$$anonfun$getStackTraceString$1;;
const #26 = Asciz	$outer;
const #27 = Asciz	Lscala/runtime/RichException;;
const #28 = Asciz	LocalVariableTable;
const #29 = Asciz	apply;
const #30 = Asciz	(Ljava/lang/Object;)Ljava/lang/Object;;
const #31 = Asciz	java/lang/StackTraceElement;
const #32 = class	#31;	//  java/lang/StackTraceElement
const #33 = Asciz	(Ljava/lang/StackTraceElement;)Lscala/collection/mutable/StringBuilder;;
const #34 = NameAndType	#29:#33;//  apply:(Ljava/lang/StackTraceElement;)Lscala/collection/mutable/StringBuilder;
const #35 = Method	#10.#34;	//  scala/runtime/RichException$$anonfun$getStackTraceString$1.apply:(Ljava/lang/StackTraceElement;)Lscala/collection/mutable/StringBuilder;
const #36 = Asciz	v1;
const #37 = Asciz	Ljava/lang/Object;;
const #38 = Asciz	toString;
const #39 = Asciz	()Ljava/lang/String;;
const #40 = NameAndType	#38:#39;//  toString:()Ljava/lang/String;
const #41 = Method	#32.#40;	//  java/lang/StackTraceElement.toString:()Ljava/lang/String;
const #42 = Asciz	scala/collection/mutable/StringBuilder;
const #43 = class	#42;	//  scala/collection/mutable/StringBuilder
const #44 = Asciz	append;
const #45 = Asciz	(Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;;
const #46 = NameAndType	#44:#45;//  append:(Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
const #47 = Method	#43.#46;	//  scala/collection/mutable/StringBuilder.append:(Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
const #48 = Asciz	scala/compat/Platform$;
const #49 = class	#48;	//  scala/compat/Platform$
const #50 = Asciz	MODULE$;
const #51 = Asciz	Lscala/compat/Platform$;;
const #52 = NameAndType	#50:#51;//  MODULE$:Lscala/compat/Platform$;
const #53 = Field	#49.#52;	//  scala/compat/Platform$.MODULE$:Lscala/compat/Platform$;
const #54 = Asciz	EOL;
const #55 = NameAndType	#54:#39;//  EOL:()Ljava/lang/String;
const #56 = Method	#49.#55;	//  scala/compat/Platform$.EOL:()Ljava/lang/String;
const #57 = Asciz	trElem;
const #58 = Asciz	Ljava/lang/StackTraceElement;;
const #59 = Asciz	andThen;
const #60 = Asciz	(Lscala/Function1;)Lscala/Function1;;
const #61 = Asciz	(Lscala/Function1;Lscala/Function1;)Lscala/Function1;;
const #62 = NameAndType	#59:#61;//  andThen:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
const #63 = Method	#19.#62;	//  scala/Function1$class.andThen:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
const #64 = Asciz	g;
const #65 = Asciz	Lscala/Function1;;
const #66 = Asciz	compose;
const #67 = NameAndType	#66:#61;//  compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
const #68 = Method	#19.#67;	//  scala/Function1$class.compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
const #69 = Asciz	(Lscala/Function1;)Ljava/lang/String;;
const #70 = NameAndType	#38:#69;//  toString:(Lscala/Function1;)Ljava/lang/String;
const #71 = Method	#19.#70;	//  scala/Function1$class.toString:(Lscala/Function1;)Ljava/lang/String;
const #72 = Asciz	Scala;
const #73 = Asciz	InnerClasses;
const #74 = Asciz	scala/runtime/RichException;
const #75 = class	#74;	//  scala/runtime/RichException
const #76 = Asciz	$anonfun$getStackTraceString$1;
const #77 = Asciz	scala/Function1;
const #78 = class	#77;	//  scala/Function1
const #79 = Asciz	scala/ScalaObject;
const #80 = class	#79;	//  scala/ScalaObject
const #81 = Asciz	java/io/Serializable;
const #82 = class	#81;	//  java/io/Serializable

{
public scala.runtime.RichException$$anonfun$getStackTraceString$1(scala.runtime.RichException, scala.collection.mutable.StringBuilder);
  Code:
   Stack=2, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_2
   2:	putfield	#12; //Field s$1:Lscala/collection/mutable/StringBuilder;
   5:	aload_0
   6:	invokespecial	#17; //Method java/lang/Object."<init>":()V
   9:	aload_0
   10:	invokestatic	#23; //Method scala/Function1$class.$init$:(Lscala/Function1;)V
   13:	return
  LineNumberTable: 
   line 21: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      14      0    this       Lscala/runtime/RichException$$anonfun$getStackTraceString$1;
   0      14      1    $outer       Lscala/runtime/RichException;


public final java.lang.Object apply(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	checkcast	#32; //class java/lang/StackTraceElement
   5:	invokevirtual	#35; //Method apply:(Ljava/lang/StackTraceElement;)Lscala/collection/mutable/StringBuilder;
   8:	areturn
  LineNumberTable: 
   line 21: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/runtime/RichException$$anonfun$getStackTraceString$1;
   0      9      1    v1       Ljava/lang/Object;


public final scala.collection.mutable.StringBuilder apply(java.lang.StackTraceElement);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	getfield	#12; //Field s$1:Lscala/collection/mutable/StringBuilder;
   4:	aload_1
   5:	invokevirtual	#41; //Method java/lang/StackTraceElement.toString:()Ljava/lang/String;
   8:	invokevirtual	#47; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
   11:	pop
   12:	aload_0
   13:	getfield	#12; //Field s$1:Lscala/collection/mutable/StringBuilder;
   16:	getstatic	#53; //Field scala/compat/Platform$.MODULE$:Lscala/compat/Platform$;
   19:	invokevirtual	#56; //Method scala/compat/Platform$.EOL:()Ljava/lang/String;
   22:	invokevirtual	#47; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
   25:	areturn
  LineNumberTable: 
   line 22: 0
   line 23: 12

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      26      0    this       Lscala/runtime/RichException$$anonfun$getStackTraceString$1;
   0      26      1    trElem       Ljava/lang/StackTraceElement;


public scala.Function1 andThen(scala.Function1);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#63; //Method scala/Function1$class.andThen:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
   5:	areturn
  LineNumberTable: 
   line 21: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/runtime/RichException$$anonfun$getStackTraceString$1;
   0      6      1    g       Lscala/Function1;


public scala.Function1 compose(scala.Function1);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#68; //Method scala/Function1$class.compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
   5:	areturn
  LineNumberTable: 
   line 21: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/runtime/RichException$$anonfun$getStackTraceString$1;
   0      6      1    g       Lscala/Function1;


public java.lang.String toString();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#71; //Method scala/Function1$class.toString:(Lscala/Function1;)Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 21: 0


}

