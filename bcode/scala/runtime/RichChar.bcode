Compiled from "RichChar.scala"
public final class scala.runtime.RichChar extends java.lang.Object implements scala.Proxy,scala.math.Ordered,scala.ScalaObject
  SourceFile: "RichChar.scala"
  ScalaSig: length = 0x3
   05 00 00 
  Signature: length = 0x2
   00 FFFFFFD1 
  RuntimeVisibleAnnotations: length = 0xB
   00 01 00 FFFFFFD2 00 01 00 FFFFFFD3 73 00 FFFFFFD4 
  InnerClass: 
   public final $anon$1=class scala/runtime/RichChar$$anon$1 of class scala/runtime/RichChar
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	RichChar.scala;
Asciz	scala$runtime$RichChar$$x;
Asciz	C;
Asciz	$less;
Asciz	(Ljava/lang/Object;)Z;
Asciz	Code;
Asciz	LineNumberTable;
Asciz	scala/math/Ordered$class;
class	scala/math/Ordered$class
Asciz	(Lscala/math/Ordered;Ljava/lang/Object;)Z;
NameAndType	$less:(Lscala/math/Ordered;Ljava/lang/Object;)Z
Method	scala/math/Ordered$class.$less:(Lscala/math/Ordered;Ljava/lang/Object;)Z
Asciz	this;
Asciz	Lscala/runtime/RichChar;;
Asciz	that;
Asciz	Ljava/lang/Object;;
Asciz	LocalVariableTable;
Asciz	$greater;
NameAndType	$greater:(Lscala/math/Ordered;Ljava/lang/Object;)Z
Method	scala/math/Ordered$class.$greater:(Lscala/math/Ordered;Ljava/lang/Object;)Z
Asciz	$less$eq;
NameAndType	$less$eq:(Lscala/math/Ordered;Ljava/lang/Object;)Z
Method	scala/math/Ordered$class.$less$eq:(Lscala/math/Ordered;Ljava/lang/Object;)Z
Asciz	$greater$eq;
NameAndType	$greater$eq:(Lscala/math/Ordered;Ljava/lang/Object;)Z
Method	scala/math/Ordered$class.$greater$eq:(Lscala/math/Ordered;Ljava/lang/Object;)Z
Asciz	compareTo;
Asciz	(Ljava/lang/Object;)I;
Asciz	(Lscala/math/Ordered;Ljava/lang/Object;)I;
NameAndType	compareTo:(Lscala/math/Ordered;Ljava/lang/Object;)I
Method	scala/math/Ordered$class.compareTo:(Lscala/math/Ordered;Ljava/lang/Object;)I
Asciz	hashCode;
Asciz	()I;
Asciz	scala/Proxy$class;
class	scala/Proxy$class
Asciz	(Lscala/Proxy;)I;
NameAndType	hashCode:(Lscala/Proxy;)I
Method	scala/Proxy$class.hashCode:(Lscala/Proxy;)I
Asciz	equals;
Asciz	(Lscala/Proxy;Ljava/lang/Object;)Z;
NameAndType	equals:(Lscala/Proxy;Ljava/lang/Object;)Z
Method	scala/Proxy$class.equals:(Lscala/Proxy;Ljava/lang/Object;)Z
Asciz	toString;
Asciz	()Ljava/lang/String;;
Asciz	(Lscala/Proxy;)Ljava/lang/String;;
NameAndType	toString:(Lscala/Proxy;)Ljava/lang/String;
Method	scala/Proxy$class.toString:(Lscala/Proxy;)Ljava/lang/String;
Asciz	self;
Asciz	()Ljava/lang/Object;;
Asciz	scala/runtime/RichChar;
class	scala/runtime/RichChar
NameAndType	scala$runtime$RichChar$$x:C
Field	scala/runtime/RichChar.scala$runtime$RichChar$$x:C
Asciz	scala/runtime/BoxesRunTime;
class	scala/runtime/BoxesRunTime
Asciz	boxToCharacter;
Asciz	(C)Ljava/lang/Character;;
NameAndType	boxToCharacter:(C)Ljava/lang/Character;
Method	scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
Asciz	compare;
Asciz	(C)I;
Asciz	y;
Asciz	asDigit;
int	36;
Asciz	java/lang/Character;
class	java/lang/Character
Asciz	digit;
Asciz	(CI)I;
NameAndType	digit:(CI)I
Method	java/lang/Character.digit:(CI)I
Asciz	isControl;
Asciz	()Z;
Asciz	isISOControl;
Asciz	(C)Z;
NameAndType	isISOControl:(C)Z
Method	java/lang/Character.isISOControl:(C)Z
Asciz	isDigit;
NameAndType	isDigit:(C)Z
Method	java/lang/Character.isDigit:(C)Z
Asciz	isLetter;
NameAndType	isLetter:(C)Z
Method	java/lang/Character.isLetter:(C)Z
Asciz	isLetterOrDigit;
NameAndType	isLetterOrDigit:(C)Z
Method	java/lang/Character.isLetterOrDigit:(C)Z
Asciz	isWhitespace;
NameAndType	isWhitespace:(C)Z
Method	java/lang/Character.isWhitespace:(C)Z
Asciz	isSpaceChar;
NameAndType	isSpaceChar:(C)Z
Method	java/lang/Character.isSpaceChar:(C)Z
Asciz	isHighSurrogate;
NameAndType	isHighSurrogate:(C)Z
Method	java/lang/Character.isHighSurrogate:(C)Z
Asciz	isLowSurrogate;
NameAndType	isLowSurrogate:(C)Z
Method	java/lang/Character.isLowSurrogate:(C)Z
Asciz	isUnicodeIdentifierStart;
NameAndType	isUnicodeIdentifierStart:(C)Z
Method	java/lang/Character.isUnicodeIdentifierStart:(C)Z
Asciz	isUnicodeIdentifierPart;
NameAndType	isUnicodeIdentifierPart:(C)Z
Method	java/lang/Character.isUnicodeIdentifierPart:(C)Z
Asciz	isIdentifierIgnorable;
NameAndType	isIdentifierIgnorable:(C)Z
Method	java/lang/Character.isIdentifierIgnorable:(C)Z
Asciz	isMirrored;
NameAndType	isMirrored:(C)Z
Method	java/lang/Character.isMirrored:(C)Z
Asciz	isLower;
Asciz	isLowerCase;
NameAndType	isLowerCase:(C)Z
Method	java/lang/Character.isLowerCase:(C)Z
Asciz	isUpper;
Asciz	isUpperCase;
NameAndType	isUpperCase:(C)Z
Method	java/lang/Character.isUpperCase:(C)Z
Asciz	isTitleCase;
NameAndType	isTitleCase:(C)Z
Method	java/lang/Character.isTitleCase:(C)Z
Asciz	toLower;
Asciz	()C;
Asciz	toLowerCase;
Asciz	(C)C;
NameAndType	toLowerCase:(C)C
Method	java/lang/Character.toLowerCase:(C)C
Asciz	toUpper;
Asciz	toUpperCase;
NameAndType	toUpperCase:(C)C
Method	java/lang/Character.toUpperCase:(C)C
Asciz	toTitleCase;
NameAndType	toTitleCase:(C)C
Method	java/lang/Character.toTitleCase:(C)C
Asciz	getType;
NameAndType	getType:(C)I
Method	java/lang/Character.getType:(C)I
Asciz	getNumericValue;
NameAndType	getNumericValue:(C)I
Method	java/lang/Character.getNumericValue:(C)I
Asciz	getDirectionality;
Asciz	()B;
Asciz	(C)B;
NameAndType	getDirectionality:(C)B
Method	java/lang/Character.getDirectionality:(C)B
Asciz	reverseBytes;
NameAndType	reverseBytes:(C)C
Method	java/lang/Character.reverseBytes:(C)C
NameAndType	toLower:()C
Method	scala/runtime/RichChar.toLower:()C
Asciz	Deprecated;
NameAndType	toUpper:()C
Method	scala/runtime/RichChar.toUpper:()C
NameAndType	isLower:()Z
Method	scala/runtime/RichChar.isLower:()Z
NameAndType	isUpper:()Z
Method	scala/runtime/RichChar.isUpper:()Z
Asciz	until;
Asciz	(C)Lscala/collection/IndexedSeqView;;
Asciz	scala/collection/IndexedSeq$;
class	scala/collection/IndexedSeq$
Asciz	MODULE$;
Asciz	Lscala/collection/IndexedSeq$;;
NameAndType	MODULE$:Lscala/collection/IndexedSeq$;
Field	scala/collection/IndexedSeq$.MODULE$:Lscala/collection/IndexedSeq$;
Asciz	empty;
Asciz	()Lscala/collection/Traversable;;
NameAndType	empty:()Lscala/collection/Traversable;
Method	scala/collection/IndexedSeq$.empty:()Lscala/collection/Traversable;
Asciz	scala/collection/IndexedSeqLike;
class	scala/collection/IndexedSeqLike
Asciz	view;
Asciz	()Lscala/collection/IndexedSeqView;;
NameAndType	view:()Lscala/collection/IndexedSeqView;
InterfaceMethod	scala/collection/IndexedSeqLike.view:()Lscala/collection/IndexedSeqView;
Asciz	scala/runtime/RichChar$$anon$1;
class	scala/runtime/RichChar$$anon$1
Asciz	<init>;
Asciz	(Lscala/runtime/RichChar;C)V;
NameAndType	"<init>":(Lscala/runtime/RichChar;C)V
Method	scala/runtime/RichChar$$anon$1."<init>":(Lscala/runtime/RichChar;C)V
Asciz	limit$1;
Asciz	(C)Lscala/collection/IndexedSeqView<Ljava/lang/Character;Lscala/collection/IndexedSeq<Ljava/lang/Character;>;>;;
Asciz	Signature;
Asciz	to;
NameAndType	until:(C)Lscala/collection/IndexedSeqView;
Method	scala/runtime/RichChar.until:(C)Lscala/collection/IndexedSeqView;
Asciz	unboxToChar;
Asciz	(Ljava/lang/Object;)C;
NameAndType	unboxToChar:(Ljava/lang/Object;)C
Method	scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
NameAndType	compare:(C)I
Method	scala/runtime/RichChar.compare:(C)I
Asciz	(C)V;
Asciz	java/lang/Object;
class	java/lang/Object
Asciz	()V;
NameAndType	"<init>":()V
Method	java/lang/Object."<init>":()V
Asciz	$init$;
Asciz	(Lscala/Proxy;)V;
NameAndType	$init$:(Lscala/Proxy;)V
Method	scala/Proxy$class.$init$:(Lscala/Proxy;)V
Asciz	(Lscala/math/Ordered;)V;
NameAndType	$init$:(Lscala/math/Ordered;)V
Method	scala/math/Ordered$class.$init$:(Lscala/math/Ordered;)V
Asciz	x;
Asciz	ScalaSig;
Asciz	Ljava/lang/Object;Lscala/Proxy;Lscala/math/Ordered<Ljava/lang/Character;>;Lscala/ScalaObject;;
Asciz	Lscala/reflect/ScalaSignature;;
Asciz	bytes;
Asciz	mbC\t\tQAIK7\r[\"iCJT!aI,h^5nK*\tQ!AtGdmAF%qQ\"-a7b]T!DU4-\t1qJ6fGR\"!\nI!aAx_=UiE79qCG1)DByI|w \nI!A7m[1hK&adJ$WM]3e\taBC%!\"'I%Q'G.Y(cUG(\t\t!!A\"B\tQAj]&$h,[AAA!)qaA!)qCa!1/7g+\tCA\t3\tDAAB]fDQ!Y\nqaY8naX\r8uAOs1!8uYD1!I\"B\tqaB1t\t&<^o!)\tCIn]\"p]Rx\BcQ\tqAQ8pYgCG)AjgKw-;\t!AA!%H*;uKJDQAq\"[:MKR$XM](s\t&<!\t!Q\rSN<.;fgB7-!\t!QSN/Y2f\"'CQ)Ajg\"Kw\r[*veJ|w-;f\"B9I7T8x'V(o\4biDQ$[:V]&wZ3JItG/4jKJF/:u1\"B]I7/8jG>$W-3f]RLg-[3s!HCY)Ajg&#WM;jM&,'/S4o_J'\r\3\tiAA!%X*:s_J,G\rC])Ajg2{w/:\tyAA!%X9fe\")\rCYn+ji2,7)Y:f\"d!xT8xKJ,\tK!\taYi>,]3s9\"d-!xV5uYm]3\t%A ,GV=qK\")1C}yq-;Ok6,'/[2WC2,X\rCna.A\thKR$N]3di&|g.7jif,a\t#AL!!\t\tKH/g!\taY\re4XM]:ff$Xmk!\taYi>dun^3sX\rKuoj\"!=\ne$!A3faJ,7-;fI\n10Vg3\ru_2{w/:!S:H/Z1ei\"d-!x.9qKJm]3)q<x0\t1Rk]3!G\"tCo\+qa%8tiG\r!\t!QSNdun^3sX\rK]I!\t1Rk]3!G\"tn'po%8tiG\r!\t!QSN,]3sX\rK]\"\t1Rk]3!G\"tn]+qa%8tiG\rC!\t!aUtG/7\tuq\t?\t)IA\t\t\tCC$\t!bY8mYG/[8o\t9#!\t%sG-=fIN+OV5foB)qDAA%!QFA)IeZ3yKV-c\t91!a.\5u\t)Co\t!^8\tuwM;
Asciz	RuntimeVisibleAnnotations;
Asciz	InnerClasses;
Asciz	$anon$1;
Asciz	scala/Proxy;
class	scala/Proxy
Asciz	scala/math/Ordered;
class	scala/math/Ordered
Asciz	scala/ScalaObject;
class	scala/ScalaObject

{
public final char scala$runtime$RichChar$$x;
  Signature: C

public boolean $less(java.lang.Object);
  Signature: (Ljava/lang/Object;)Z
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokestatic	Method scala/math/Ordered$class.$less:(Lscala/math/Ordered;Ljava/lang/Object;)Z
	ireturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/runtime/RichChar;
   0      6      1    that       Ljava/lang/Object;


public boolean $greater(java.lang.Object);
  Signature: (Ljava/lang/Object;)Z
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokestatic	Method scala/math/Ordered$class.$greater:(Lscala/math/Ordered;Ljava/lang/Object;)Z
	ireturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/runtime/RichChar;
   0      6      1    that       Ljava/lang/Object;


public boolean $less$eq(java.lang.Object);
  Signature: (Ljava/lang/Object;)Z
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokestatic	Method scala/math/Ordered$class.$less$eq:(Lscala/math/Ordered;Ljava/lang/Object;)Z
	ireturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/runtime/RichChar;
   0      6      1    that       Ljava/lang/Object;


public boolean $greater$eq(java.lang.Object);
  Signature: (Ljava/lang/Object;)Z
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokestatic	Method scala/math/Ordered$class.$greater$eq:(Lscala/math/Ordered;Ljava/lang/Object;)Z
	ireturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/runtime/RichChar;
   0      6      1    that       Ljava/lang/Object;


public int compareTo(java.lang.Object);
  Signature: (Ljava/lang/Object;)I
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokestatic	Method scala/math/Ordered$class.compareTo:(Lscala/math/Ordered;Ljava/lang/Object;)I
	ireturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/runtime/RichChar;
   0      6      1    that       Ljava/lang/Object;


public int hashCode();
  Signature: ()I
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokestatic	Method scala/Proxy$class.hashCode:(Lscala/Proxy;)I
	ireturn
  Labels:

public boolean equals(java.lang.Object);
  Signature: (Ljava/lang/Object;)Z
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokestatic	Method scala/Proxy$class.equals:(Lscala/Proxy;Ljava/lang/Object;)Z
	ireturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/runtime/RichChar;
   0      6      1    that       Ljava/lang/Object;


public java.lang.String toString();
  Signature: ()Ljava/lang/String;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokestatic	Method scala/Proxy$class.toString:(Lscala/Proxy;)Ljava/lang/String;
	areturn
  Labels:

public java.lang.Object self();
  Signature: ()Ljava/lang/Object;
  Code:
   Stack=1, Locals=2, Args_size=1
	aload_0
	getfield	Field scala$runtime$RichChar$$x:C
	istore_1
	iload_1
	invokestatic	Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
	areturn
  Labels:

public int compare(char);
  Signature: (C)I
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	getfield	Field scala$runtime$RichChar$$x:C
	iload_1
	if_icmpge	l1 // aload_0
	iconst_m1
	goto	l2 // ireturn
l1	aload_0
	getfield	Field scala$runtime$RichChar$$x:C
	iload_1
	if_icmple	l3 // iconst_0
	iconst_1
	goto	l2 // ireturn
l3	iconst_0
l2	ireturn
  Labels:
   	l1 = 12 // aload_0
   	l3 = 24 // iconst_0
   	l2 = 25 // ireturn
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      26      0    this       Lscala/runtime/RichChar;
   0      26      1    y       C


public int asDigit();
  Signature: ()I
  Code:
   Stack=2, Locals=1, Args_size=1
	aload_0
	getfield	Field scala$runtime$RichChar$$x:C
	ldc	int 36
	invokestatic	Method java/lang/Character.digit:(CI)I
	ireturn
  Labels:

public boolean isControl();
  Signature: ()Z
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field scala$runtime$RichChar$$x:C
	invokestatic	Method java/lang/Character.isISOControl:(C)Z
	ireturn
  Labels:

public boolean isDigit();
  Signature: ()Z
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field scala$runtime$RichChar$$x:C
	invokestatic	Method java/lang/Character.isDigit:(C)Z
	ireturn
  Labels:

public boolean isLetter();
  Signature: ()Z
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field scala$runtime$RichChar$$x:C
	invokestatic	Method java/lang/Character.isLetter:(C)Z
	ireturn
  Labels:

public boolean isLetterOrDigit();
  Signature: ()Z
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field scala$runtime$RichChar$$x:C
	invokestatic	Method java/lang/Character.isLetterOrDigit:(C)Z
	ireturn
  Labels:

public boolean isWhitespace();
  Signature: ()Z
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field scala$runtime$RichChar$$x:C
	invokestatic	Method java/lang/Character.isWhitespace:(C)Z
	ireturn
  Labels:

public boolean isSpaceChar();
  Signature: ()Z
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field scala$runtime$RichChar$$x:C
	invokestatic	Method java/lang/Character.isSpaceChar:(C)Z
	ireturn
  Labels:

public boolean isHighSurrogate();
  Signature: ()Z
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field scala$runtime$RichChar$$x:C
	invokestatic	Method java/lang/Character.isHighSurrogate:(C)Z
	ireturn
  Labels:

public boolean isLowSurrogate();
  Signature: ()Z
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field scala$runtime$RichChar$$x:C
	invokestatic	Method java/lang/Character.isLowSurrogate:(C)Z
	ireturn
  Labels:

public boolean isUnicodeIdentifierStart();
  Signature: ()Z
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field scala$runtime$RichChar$$x:C
	invokestatic	Method java/lang/Character.isUnicodeIdentifierStart:(C)Z
	ireturn
  Labels:

public boolean isUnicodeIdentifierPart();
  Signature: ()Z
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field scala$runtime$RichChar$$x:C
	invokestatic	Method java/lang/Character.isUnicodeIdentifierPart:(C)Z
	ireturn
  Labels:

public boolean isIdentifierIgnorable();
  Signature: ()Z
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field scala$runtime$RichChar$$x:C
	invokestatic	Method java/lang/Character.isIdentifierIgnorable:(C)Z
	ireturn
  Labels:

public boolean isMirrored();
  Signature: ()Z
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field scala$runtime$RichChar$$x:C
	invokestatic	Method java/lang/Character.isMirrored:(C)Z
	ireturn
  Labels:

public boolean isLower();
  Signature: ()Z
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field scala$runtime$RichChar$$x:C
	invokestatic	Method java/lang/Character.isLowerCase:(C)Z
	ireturn
  Labels:

public boolean isUpper();
  Signature: ()Z
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field scala$runtime$RichChar$$x:C
	invokestatic	Method java/lang/Character.isUpperCase:(C)Z
	ireturn
  Labels:

public boolean isTitleCase();
  Signature: ()Z
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field scala$runtime$RichChar$$x:C
	invokestatic	Method java/lang/Character.isTitleCase:(C)Z
	ireturn
  Labels:

public char toLower();
  Signature: ()C
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field scala$runtime$RichChar$$x:C
	invokestatic	Method java/lang/Character.toLowerCase:(C)C
	ireturn
  Labels:

public char toUpper();
  Signature: ()C
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field scala$runtime$RichChar$$x:C
	invokestatic	Method java/lang/Character.toUpperCase:(C)C
	ireturn
  Labels:

public char toTitleCase();
  Signature: ()C
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field scala$runtime$RichChar$$x:C
	invokestatic	Method java/lang/Character.toTitleCase:(C)C
	ireturn
  Labels:

public int getType();
  Signature: ()I
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field scala$runtime$RichChar$$x:C
	invokestatic	Method java/lang/Character.getType:(C)I
	ireturn
  Labels:

public int getNumericValue();
  Signature: ()I
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field scala$runtime$RichChar$$x:C
	invokestatic	Method java/lang/Character.getNumericValue:(C)I
	ireturn
  Labels:

public byte getDirectionality();
  Signature: ()B
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field scala$runtime$RichChar$$x:C
	invokestatic	Method java/lang/Character.getDirectionality:(C)B
	ireturn
  Labels:

public char reverseBytes();
  Signature: ()C
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field scala$runtime$RichChar$$x:C
	invokestatic	Method java/lang/Character.reverseBytes:(C)C
	ireturn
  Labels:

public char toLowerCase();
  Signature: ()C
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokevirtual	Method toLower:()C
	ireturn
  Labels:
  Deprecated: true

public char toUpperCase();
  Signature: ()C
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokevirtual	Method toUpper:()C
	ireturn
  Labels:
  Deprecated: true

public boolean isLowerCase();
  Signature: ()Z
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokevirtual	Method isLower:()Z
	ireturn
  Labels:
  Deprecated: true

public boolean isUpperCase();
  Signature: ()Z
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokevirtual	Method isUpper:()Z
	ireturn
  Labels:
  Deprecated: true

public scala.collection.IndexedSeqView until(char);
  Signature: (C)Lscala/collection/IndexedSeqView;
  Code:
   Stack=4, Locals=2, Args_size=2
	iload_1
	aload_0
	getfield	Field scala$runtime$RichChar$$x:C
	if_icmpgt	l1 // new
	getstatic	Field scala/collection/IndexedSeq$.MODULE$:Lscala/collection/IndexedSeq$;
	invokevirtual	Method scala/collection/IndexedSeq$.empty:()Lscala/collection/Traversable;
	checkcast	class scala/collection/IndexedSeqLike
	invokeinterface	InterfaceMethod scala/collection/IndexedSeqLike.view:()Lscala/collection/IndexedSeqView;
	goto	l2 // areturn
l1	new	class scala/runtime/RichChar$$anon$1
	dup
	aload_0
	iload_1
	invokespecial	Method scala/runtime/RichChar$$anon$1."<init>":(Lscala/runtime/RichChar;C)V
l2	areturn
  Labels:
   	l1 = 25 // new
   	l2 = 34 // areturn
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      35      0    this       Lscala/runtime/RichChar;
   0      35      1    limit$1       C

  Signature: length = 0x2
   00 FFFFFFB7 

public scala.collection.IndexedSeqView to(char);
  Signature: (C)Lscala/collection/IndexedSeqView;
  Code:
   Stack=3, Locals=2, Args_size=2
	aload_0
	iload_1
	iconst_1
	iadd
	i2c
	invokevirtual	Method until:(C)Lscala/collection/IndexedSeqView;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/runtime/RichChar;
   0      9      1    y       C

  Signature: length = 0x2
   00 FFFFFFB7 

public int compare(java.lang.Object);
  Signature: (Ljava/lang/Object;)I
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokestatic	Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
	invokevirtual	Method compare:(C)I
	ireturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/runtime/RichChar;
   0      9      1    that       Ljava/lang/Object;


public scala.runtime.RichChar(char);
  Signature: (C)V
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	iload_1
	putfield	Field scala$runtime$RichChar$$x:C
	aload_0
	invokespecial	Method java/lang/Object."<init>":()V
	aload_0
	invokestatic	Method scala/Proxy$class.$init$:(Lscala/Proxy;)V
	aload_0
	invokestatic	Method scala/math/Ordered$class.$init$:(Lscala/math/Ordered;)V
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      18      0    this       Lscala/runtime/RichChar;
   0      18      1    x       C


}

