Compiled from "RichChar.scala"
public final class scala.runtime.RichChar extends java.lang.Object implements scala.Proxy,scala.Ordered,scala.ScalaObject
  SourceFile: "RichChar.scala"
  Signature: length = 0x2
   00 FFFFFF9B 
  ScalaSig: length = 0x274
   05 00 62 06 08 01 02 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF80 02 07 02 08 52
   69 63 68 43 68 61 72 0A 02 03 04 01 07 72 75 6E
   74 69 6D 65 0A 01 05 01 05 73 63 61 6C 61 03 00
   13 05 00 08 10 14 1A 10 02 09 0E 0D 01 0A 0A 02
   0B 0C 01 04 6C 61 6E 67 0A 01 0D 01 04 6A 61 76
   61 09 02 0F 0A 02 06 4F 62 6A 65 63 74 10 02 11
   12 0D 01 04 09 02 13 04 02 05 50 72 6F 78 79 10
   03 11 15 17 09 02 16 04 02 07 4F 72 64 65 72 65
   64 10 02 11 18 09 02 19 04 02 04 43 68 61 72 10
   02 11 1B 09 02 1C 04 02 0B 53 63 61 6C 61 4F 62
   6A 65 63 74 08 08 1E 00 FFFFFF82 FFFFFF80 FFFFFFA0 FFFFFF80 04 17 01 01
   78 08 05 20 00 FFFFFF84 00 21 01 06 3C 69 6E 69 74 3E
   14 02 22 24 10 02 23 00 0D 01 02 08 05 1E 1F FFFFFFC0
   00 17 08 05 26 00 FFFFFF84 00 27 01 04 73 65 6C 66 15
   01 28 10 02 11 29 09 02 2A 04 02 03 41 6E 79 08
   05 2C 00 FFFFFF84 00 2D 01 07 63 6F 6D 70 61 72 65 14
   02 2E 31 10 02 11 2F 09 02 30 04 02 03 49 6E 74
   08 05 32 2B FFFFFFC0 00 17 01 01 79 08 05 34 00 FFFFFF84 00
   35 01 07 61 73 44 69 67 69 74 15 01 2E 08 05 37
   00 FFFFFF84 00 38 01 09 69 73 43 6F 6E 74 72 6F 6C 15
   01 39 10 02 11 3A 09 02 3B 04 02 07 42 6F 6F 6C
   65 61 6E 08 05 3D 00 FFFFFF84 00 38 01 07 69 73 44 69
   67 69 74 08 05 3F 00 FFFFFF84 00 38 01 08 69 73 4C 65
   74 74 65 72 08 05 41 00 FFFFFF84 00 38 01 0F 69 73 4C
   65 74 74 65 72 4F 72 44 69 67 69 74 08 05 43 00
   FFFFFF84 00 38 01 0B 69 73 4C 6F 77 65 72 43 61 73 65
   08 05 45 00 FFFFFF84 00 38 01 0B 69 73 55 70 70 65 72
   43 61 73 65 08 05 47 00 FFFFFF84 00 38 01 0C 69 73 57
   68 69 74 65 73 70 61 63 65 08 05 49 00 FFFFFF84 00 4A
   01 0B 74 6F 4C 6F 77 65 72 43 61 73 65 15 01 17
   08 05 4C 00 FFFFFF84 00 4A 01 0B 74 6F 55 70 70 65 72
   43 61 73 65 08 05 4E 00 FFFFFF84 00 4F 01 05 75 6E 74
   69 6C 14 02 50 5C 10 04 51 56 17 58 0D 01 52 0A
   02 53 54 01 07 67 65 6E 65 72 69 63 0A 02 55 04
   01 0A 63 6F 6C 6C 65 63 74 69 6F 6E 09 02 57 52
   02 0A 56 65 63 74 6F 72 56 69 65 77 10 03 59 5A
   17 0D 01 54 09 02 5B 54 02 06 56 65 63 74 6F 72
   08 05 5D 4D FFFFFFC0 00 17 01 05 6C 69 6D 69 74 08 05
   5F 00 FFFFFF84 00 60 01 02 74 6F 14 02 50 61 08 05 32
   5E FFFFFFC0 00 17 
  InnerClass: 
   public final #158= #73 of #10; //$anon$1=class scala/runtime/RichChar$$anon$1 of class scala/runtime/RichChar
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	RichChar.scala;
const #3 = Asciz	scala$runtime$RichChar$$x;
const #4 = Asciz	C;
const #5 = Asciz	<init>;
const #6 = Asciz	(C)V;
const #7 = Asciz	Code;
const #8 = Asciz	LineNumberTable;
const #9 = Asciz	scala/runtime/RichChar;
const #10 = class	#9;	//  scala/runtime/RichChar
const #11 = NameAndType	#3:#4;//  scala$runtime$RichChar$$x:C
const #12 = Field	#10.#11;	//  scala/runtime/RichChar.scala$runtime$RichChar$$x:C
const #13 = Asciz	java/lang/Object;
const #14 = class	#13;	//  java/lang/Object
const #15 = Asciz	()V;
const #16 = NameAndType	#5:#15;//  "<init>":()V
const #17 = Method	#14.#16;	//  java/lang/Object."<init>":()V
const #18 = Asciz	scala/Proxy$class;
const #19 = class	#18;	//  scala/Proxy$class
const #20 = Asciz	$init$;
const #21 = Asciz	(Lscala/Proxy;)V;
const #22 = NameAndType	#20:#21;//  $init$:(Lscala/Proxy;)V
const #23 = Method	#19.#22;	//  scala/Proxy$class.$init$:(Lscala/Proxy;)V
const #24 = Asciz	scala/Ordered$class;
const #25 = class	#24;	//  scala/Ordered$class
const #26 = Asciz	(Lscala/Ordered;)V;
const #27 = NameAndType	#20:#26;//  $init$:(Lscala/Ordered;)V
const #28 = Method	#25.#27;	//  scala/Ordered$class.$init$:(Lscala/Ordered;)V
const #29 = Asciz	this;
const #30 = Asciz	Lscala/runtime/RichChar;;
const #31 = Asciz	x;
const #32 = Asciz	LocalVariableTable;
const #33 = Asciz	compare;
const #34 = Asciz	(Ljava/lang/Object;)I;
const #35 = Asciz	scala/runtime/BoxesRunTime;
const #36 = class	#35;	//  scala/runtime/BoxesRunTime
const #37 = Asciz	unboxToChar;
const #38 = Asciz	(Ljava/lang/Object;)C;
const #39 = NameAndType	#37:#38;//  unboxToChar:(Ljava/lang/Object;)C
const #40 = Method	#36.#39;	//  scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
const #41 = Asciz	(C)I;
const #42 = NameAndType	#33:#41;//  compare:(C)I
const #43 = Method	#10.#42;	//  scala/runtime/RichChar.compare:(C)I
const #44 = Asciz	that;
const #45 = Asciz	Ljava/lang/Object;;
const #46 = Asciz	to;
const #47 = Asciz	(C)Lscala/collection/generic/VectorView;;
const #48 = Asciz	until;
const #49 = NameAndType	#48:#47;//  until:(C)Lscala/collection/generic/VectorView;
const #50 = Method	#10.#49;	//  scala/runtime/RichChar.until:(C)Lscala/collection/generic/VectorView;
const #51 = Asciz	y;
const #52 = Asciz	(C)Lscala/collection/generic/VectorView<Ljava/lang/Character;Lscala/collection/Vector<Ljava/lang/Character;>;>;;
const #53 = Asciz	Signature;
const #54 = Asciz	scala/collection/Vector$;
const #55 = class	#54;	//  scala/collection/Vector$
const #56 = Asciz	MODULE$;
const #57 = Asciz	Lscala/collection/Vector$;;
const #58 = NameAndType	#56:#57;//  MODULE$:Lscala/collection/Vector$;
const #59 = Field	#55.#58;	//  scala/collection/Vector$.MODULE$:Lscala/collection/Vector$;
const #60 = Asciz	empty;
const #61 = Asciz	()Lscala/collection/Traversable;;
const #62 = NameAndType	#60:#61;//  empty:()Lscala/collection/Traversable;
const #63 = Method	#55.#62;	//  scala/collection/Vector$.empty:()Lscala/collection/Traversable;
const #64 = Asciz	scala/collection/generic/VectorTemplate;
const #65 = class	#64;	//  scala/collection/generic/VectorTemplate
const #66 = Asciz	view;
const #67 = Asciz	()Ljava/lang/Object;;
const #68 = NameAndType	#66:#67;//  view:()Ljava/lang/Object;
const #69 = InterfaceMethod	#65.#68;	//  scala/collection/generic/VectorTemplate.view:()Ljava/lang/Object;
const #70 = Asciz	scala/collection/generic/VectorView;
const #71 = class	#70;	//  scala/collection/generic/VectorView
const #72 = Asciz	scala/runtime/RichChar$$anon$1;
const #73 = class	#72;	//  scala/runtime/RichChar$$anon$1
const #74 = Asciz	(Lscala/runtime/RichChar;C)V;
const #75 = NameAndType	#5:#74;//  "<init>":(Lscala/runtime/RichChar;C)V
const #76 = Method	#73.#75;	//  scala/runtime/RichChar$$anon$1."<init>":(Lscala/runtime/RichChar;C)V
const #77 = Asciz	limit$1;
const #78 = Asciz	toUpperCase;
const #79 = Asciz	()C;
const #80 = Asciz	java/lang/Character;
const #81 = class	#80;	//  java/lang/Character
const #82 = Asciz	(C)C;
const #83 = NameAndType	#78:#82;//  toUpperCase:(C)C
const #84 = Method	#81.#83;	//  java/lang/Character.toUpperCase:(C)C
const #85 = Asciz	toLowerCase;
const #86 = NameAndType	#85:#82;//  toLowerCase:(C)C
const #87 = Method	#81.#86;	//  java/lang/Character.toLowerCase:(C)C
const #88 = Asciz	isWhitespace;
const #89 = Asciz	()Z;
const #90 = Asciz	(C)Z;
const #91 = NameAndType	#88:#90;//  isWhitespace:(C)Z
const #92 = Method	#81.#91;	//  java/lang/Character.isWhitespace:(C)Z
const #93 = Asciz	isUpperCase;
const #94 = NameAndType	#93:#90;//  isUpperCase:(C)Z
const #95 = Method	#81.#94;	//  java/lang/Character.isUpperCase:(C)Z
const #96 = Asciz	isLowerCase;
const #97 = NameAndType	#96:#90;//  isLowerCase:(C)Z
const #98 = Method	#81.#97;	//  java/lang/Character.isLowerCase:(C)Z
const #99 = Asciz	isLetterOrDigit;
const #100 = NameAndType	#99:#90;//  isLetterOrDigit:(C)Z
const #101 = Method	#81.#100;	//  java/lang/Character.isLetterOrDigit:(C)Z
const #102 = Asciz	isLetter;
const #103 = NameAndType	#102:#90;//  isLetter:(C)Z
const #104 = Method	#81.#103;	//  java/lang/Character.isLetter:(C)Z
const #105 = Asciz	isDigit;
const #106 = NameAndType	#105:#90;//  isDigit:(C)Z
const #107 = Method	#81.#106;	//  java/lang/Character.isDigit:(C)Z
const #108 = Asciz	isControl;
const #109 = Asciz	isISOControl;
const #110 = NameAndType	#109:#90;//  isISOControl:(C)Z
const #111 = Method	#81.#110;	//  java/lang/Character.isISOControl:(C)Z
const #112 = Asciz	asDigit;
const #113 = Asciz	()I;
const #114 = int	36;
const #115 = Asciz	digit;
const #116 = Asciz	(CI)I;
const #117 = NameAndType	#115:#116;//  digit:(CI)I
const #118 = Method	#81.#117;	//  java/lang/Character.digit:(CI)I
const #119 = Asciz	self;
const #120 = Asciz	boxToCharacter;
const #121 = Asciz	(C)Ljava/lang/Character;;
const #122 = NameAndType	#120:#121;//  boxToCharacter:(C)Ljava/lang/Character;
const #123 = Method	#36.#122;	//  scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
const #124 = Asciz	toString;
const #125 = Asciz	()Ljava/lang/String;;
const #126 = Asciz	(Lscala/Proxy;)Ljava/lang/String;;
const #127 = NameAndType	#124:#126;//  toString:(Lscala/Proxy;)Ljava/lang/String;
const #128 = Method	#19.#127;	//  scala/Proxy$class.toString:(Lscala/Proxy;)Ljava/lang/String;
const #129 = Asciz	equals;
const #130 = Asciz	(Ljava/lang/Object;)Z;
const #131 = Asciz	(Lscala/Proxy;Ljava/lang/Object;)Z;
const #132 = NameAndType	#129:#131;//  equals:(Lscala/Proxy;Ljava/lang/Object;)Z
const #133 = Method	#19.#132;	//  scala/Proxy$class.equals:(Lscala/Proxy;Ljava/lang/Object;)Z
const #134 = Asciz	hashCode;
const #135 = Asciz	(Lscala/Proxy;)I;
const #136 = NameAndType	#134:#135;//  hashCode:(Lscala/Proxy;)I
const #137 = Method	#19.#136;	//  scala/Proxy$class.hashCode:(Lscala/Proxy;)I
const #138 = Asciz	compareTo;
const #139 = Asciz	(Lscala/Ordered;Ljava/lang/Object;)I;
const #140 = NameAndType	#138:#139;//  compareTo:(Lscala/Ordered;Ljava/lang/Object;)I
const #141 = Method	#25.#140;	//  scala/Ordered$class.compareTo:(Lscala/Ordered;Ljava/lang/Object;)I
const #142 = Asciz	$greater$eq;
const #143 = Asciz	(Lscala/Ordered;Ljava/lang/Object;)Z;
const #144 = NameAndType	#142:#143;//  $greater$eq:(Lscala/Ordered;Ljava/lang/Object;)Z
const #145 = Method	#25.#144;	//  scala/Ordered$class.$greater$eq:(Lscala/Ordered;Ljava/lang/Object;)Z
const #146 = Asciz	$less$eq;
const #147 = NameAndType	#146:#143;//  $less$eq:(Lscala/Ordered;Ljava/lang/Object;)Z
const #148 = Method	#25.#147;	//  scala/Ordered$class.$less$eq:(Lscala/Ordered;Ljava/lang/Object;)Z
const #149 = Asciz	$greater;
const #150 = NameAndType	#149:#143;//  $greater:(Lscala/Ordered;Ljava/lang/Object;)Z
const #151 = Method	#25.#150;	//  scala/Ordered$class.$greater:(Lscala/Ordered;Ljava/lang/Object;)Z
const #152 = Asciz	$less;
const #153 = NameAndType	#152:#143;//  $less:(Lscala/Ordered;Ljava/lang/Object;)Z
const #154 = Method	#25.#153;	//  scala/Ordered$class.$less:(Lscala/Ordered;Ljava/lang/Object;)Z
const #155 = Asciz	Ljava/lang/Object;Lscala/Proxy;Lscala/Ordered<Ljava/lang/Character;>;Lscala/ScalaObject;;
const #156 = Asciz	ScalaSig;
const #157 = Asciz	InnerClasses;
const #158 = Asciz	$anon$1;
const #159 = Asciz	scala/Proxy;
const #160 = class	#159;	//  scala/Proxy
const #161 = Asciz	scala/Ordered;
const #162 = class	#161;	//  scala/Ordered
const #163 = Asciz	scala/ScalaObject;
const #164 = class	#163;	//  scala/ScalaObject

{
public final char scala$runtime$RichChar$$x;

public scala.runtime.RichChar(char);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	putfield	#12; //Field scala$runtime$RichChar$$x:C
   5:	aload_0
   6:	invokespecial	#17; //Method java/lang/Object."<init>":()V
   9:	aload_0
   10:	invokestatic	#23; //Method scala/Proxy$class.$init$:(Lscala/Proxy;)V
   13:	aload_0
   14:	invokestatic	#28; //Method scala/Ordered$class.$init$:(Lscala/Ordered;)V
   17:	return
  LineNumberTable: 
   line 35: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      18      0    this       Lscala/runtime/RichChar;
   0      18      1    x       C


public int compare(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#40; //Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
   5:	invokevirtual	#43; //Method compare:(C)I
   8:	ireturn
  LineNumberTable: 
   line 35: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/runtime/RichChar;
   0      9      1    that       Ljava/lang/Object;


public scala.collection.generic.VectorView to(char);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	iconst_1
   3:	iadd
   4:	i2c
   5:	invokevirtual	#50; //Method until:(C)Lscala/collection/generic/VectorView;
   8:	areturn
  LineNumberTable: 
   line 72: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/runtime/RichChar;
   0      9      1    y       C

  Signature: length = 0x2
   00 34 

public scala.collection.generic.VectorView until(char);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	iload_1
   1:	aload_0
   2:	getfield	#12; //Field scala$runtime$RichChar$$x:C
   5:	if_icmpgt	28
   8:	getstatic	#59; //Field scala/collection/Vector$.MODULE$:Lscala/collection/Vector$;
   11:	invokevirtual	#63; //Method scala/collection/Vector$.empty:()Lscala/collection/Traversable;
   14:	checkcast	#65; //class scala/collection/generic/VectorTemplate
   17:	invokeinterface	#69,  1; //InterfaceMethod scala/collection/generic/VectorTemplate.view:()Ljava/lang/Object;
   22:	checkcast	#71; //class scala/collection/generic/VectorView
   25:	goto	37
   28:	new	#73; //class scala/runtime/RichChar$$anon$1
   31:	dup
   32:	aload_0
   33:	iload_1
   34:	invokespecial	#76; //Method scala/runtime/RichChar$$anon$1."<init>":(Lscala/runtime/RichChar;C)V
   37:	areturn
  LineNumberTable: 
   line 59: 0
   line 61: 28
   line 59: 37

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      38      0    this       Lscala/runtime/RichChar;
   0      38      1    limit$1       C

  Signature: length = 0x2
   00 34 

public char toUpperCase();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#12; //Field scala$runtime$RichChar$$x:C
   4:	invokestatic	#84; //Method java/lang/Character.toUpperCase:(C)C
   7:	ireturn
  LineNumberTable: 
   line 54: 0


public char toLowerCase();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#12; //Field scala$runtime$RichChar$$x:C
   4:	invokestatic	#87; //Method java/lang/Character.toLowerCase:(C)C
   7:	ireturn
  LineNumberTable: 
   line 53: 0


public boolean isWhitespace();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#12; //Field scala$runtime$RichChar$$x:C
   4:	invokestatic	#92; //Method java/lang/Character.isWhitespace:(C)Z
   7:	ireturn
  LineNumberTable: 
   line 51: 0


public boolean isUpperCase();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#12; //Field scala$runtime$RichChar$$x:C
   4:	invokestatic	#95; //Method java/lang/Character.isUpperCase:(C)Z
   7:	ireturn
  LineNumberTable: 
   line 50: 0


public boolean isLowerCase();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#12; //Field scala$runtime$RichChar$$x:C
   4:	invokestatic	#98; //Method java/lang/Character.isLowerCase:(C)Z
   7:	ireturn
  LineNumberTable: 
   line 49: 0


public boolean isLetterOrDigit();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#12; //Field scala$runtime$RichChar$$x:C
   4:	invokestatic	#101; //Method java/lang/Character.isLetterOrDigit:(C)Z
   7:	ireturn
  LineNumberTable: 
   line 48: 0


public boolean isLetter();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#12; //Field scala$runtime$RichChar$$x:C
   4:	invokestatic	#104; //Method java/lang/Character.isLetter:(C)Z
   7:	ireturn
  LineNumberTable: 
   line 47: 0


public boolean isDigit();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#12; //Field scala$runtime$RichChar$$x:C
   4:	invokestatic	#107; //Method java/lang/Character.isDigit:(C)Z
   7:	ireturn
  LineNumberTable: 
   line 46: 0


public boolean isControl();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#12; //Field scala$runtime$RichChar$$x:C
   4:	invokestatic	#111; //Method java/lang/Character.isISOControl:(C)Z
   7:	ireturn
  LineNumberTable: 
   line 45: 0


public int asDigit();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#12; //Field scala$runtime$RichChar$$x:C
   4:	ldc	#114; //int 36
   6:	invokestatic	#118; //Method java/lang/Character.digit:(CI)I
   9:	ireturn
  LineNumberTable: 
   line 43: 0


public int compare(char);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	getfield	#12; //Field scala$runtime$RichChar$$x:C
   4:	iload_1
   5:	if_icmpge	12
   8:	iconst_m1
   9:	goto	25
   12:	aload_0
   13:	getfield	#12; //Field scala$runtime$RichChar$$x:C
   16:	iload_1
   17:	if_icmple	24
   20:	iconst_1
   21:	goto	25
   24:	iconst_0
   25:	ireturn
  LineNumberTable: 
   line 41: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      26      0    this       Lscala/runtime/RichChar;
   0      26      1    y       C


public java.lang.Object self();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#12; //Field scala$runtime$RichChar$$x:C
   4:	invokestatic	#123; //Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
   7:	areturn
  LineNumberTable: 
   line 38: 0


public java.lang.String toString();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#128; //Method scala/Proxy$class.toString:(Lscala/Proxy;)Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 35: 0


public boolean equals(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#133; //Method scala/Proxy$class.equals:(Lscala/Proxy;Ljava/lang/Object;)Z
   5:	ireturn
  LineNumberTable: 
   line 35: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/runtime/RichChar;
   0      6      1    that       Ljava/lang/Object;


public int hashCode();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#137; //Method scala/Proxy$class.hashCode:(Lscala/Proxy;)I
   4:	ireturn
  LineNumberTable: 
   line 35: 0


public int compareTo(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#141; //Method scala/Ordered$class.compareTo:(Lscala/Ordered;Ljava/lang/Object;)I
   5:	ireturn
  LineNumberTable: 
   line 35: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/runtime/RichChar;
   0      6      1    that       Ljava/lang/Object;


public boolean $greater$eq(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#145; //Method scala/Ordered$class.$greater$eq:(Lscala/Ordered;Ljava/lang/Object;)Z
   5:	ireturn
  LineNumberTable: 
   line 35: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/runtime/RichChar;
   0      6      1    that       Ljava/lang/Object;


public boolean $less$eq(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#148; //Method scala/Ordered$class.$less$eq:(Lscala/Ordered;Ljava/lang/Object;)Z
   5:	ireturn
  LineNumberTable: 
   line 35: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/runtime/RichChar;
   0      6      1    that       Ljava/lang/Object;


public boolean $greater(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#151; //Method scala/Ordered$class.$greater:(Lscala/Ordered;Ljava/lang/Object;)Z
   5:	ireturn
  LineNumberTable: 
   line 35: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/runtime/RichChar;
   0      6      1    that       Ljava/lang/Object;


public boolean $less(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#154; //Method scala/Ordered$class.$less:(Lscala/Ordered;Ljava/lang/Object;)Z
   5:	ireturn
  LineNumberTable: 
   line 35: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/runtime/RichChar;
   0      6      1    that       Ljava/lang/Object;


}

