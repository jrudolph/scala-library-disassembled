Compiled from "RichInt.scala"
public final class scala.runtime.RichInt extends java.lang.Object implements scala.Proxy,scala.math.Ordered,scala.ScalaObject
  SourceFile: "RichInt.scala"
  Signature: length = 0x2
   00 7D 
  ScalaSig: length = 0x2F4
   05 00 7D 06 08 01 02 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF80 02 07 02 07 52
   69 63 68 49 6E 74 0A 02 03 04 01 07 72 75 6E 74
   69 6D 65 0A 01 05 01 05 73 63 61 6C 61 03 00 13
   05 00 08 10 14 23 10 02 09 0E 0D 01 0A 0A 02 0B
   0C 01 04 6C 61 6E 67 0A 01 0D 01 04 6A 61 76 61
   09 02 0F 0A 02 06 4F 62 6A 65 63 74 10 02 11 12
   0D 01 04 09 02 13 04 02 05 50 72 6F 78 79 10 03
   15 1D 20 0E 02 16 1B 0E 02 17 1A 0D 01 18 0A 02
   19 06 01 06 3C 72 6F 6F 74 3E 09 01 05 09 02 1C
   04 01 07 70 61 63 6B 61 67 65 09 02 1E 1F 02 07
   4F 72 64 65 72 65 64 0A 02 1C 04 10 02 11 21 09
   02 22 04 02 03 49 6E 74 10 02 11 24 09 02 25 04
   02 0B 53 63 61 6C 61 4F 62 6A 65 63 74 08 08 27
   00 FFFFFF82 FFFFFFC2 FFFFFF80 FFFFFF84 00 28 01 05 73 74 61 72 74 15 01
   20 08 08 2A 00 FFFFFF82 FFFFFF80 FFFFFFA0 FFFFFF80 04 20 01 06 73 74 61
   72 74 20 08 05 2C 00 FFFFFF84 00 2D 01 06 3C 69 6E 69
   74 3E 14 02 2E 30 10 02 2F 00 0D 01 02 08 05 27
   2B FFFFFFC0 00 20 08 05 32 00 FFFFFF84 00 33 01 04 73 65 6C
   66 15 01 34 10 02 11 35 09 02 36 04 02 03 41 6E
   79 08 05 38 00 FFFFFF84 00 39 01 07 63 6F 6D 70 61 72
   65 14 02 20 3A 08 05 3B 37 FFFFFFC0 00 20 01 04 74 68
   61 74 08 05 3D 00 FFFFFF84 00 3E 01 05 75 6E 74 69 6C
   14 02 3F 51 12 03 40 42 4A 06 08 41 00 FFFFFF84 FFFFFF80 FFFFFF80
   FFFFFF80 00 3F 02 0C 3C 72 65 66 69 6E 65 6D 65 6E 74
   3E 10 02 43 48 0D 01 44 0A 02 45 46 01 09 69 6D
   6D 75 74 61 62 6C 65 0A 02 47 04 01 0A 63 6F 6C
   6C 65 63 74 69 6F 6E 09 02 49 44 02 05 52 61 6E
   67 65 10 02 4B 4E 0E 02 43 4C 09 02 4D 44 01 05
   52 61 6E 67 65 09 02 4F 50 02 05 42 79 4F 6E 65
   0A 02 4D 44 08 05 52 3C FFFFFFC0 00 20 01 03 65 6E 64
   08 05 3D 00 FFFFFF84 00 54 14 03 42 55 56 08 05 52 53
   FFFFFFC0 00 20 08 05 57 53 FFFFFFC0 00 20 01 04 73 74 65 70
   08 05 59 00 FFFFFF84 00 5A 01 02 74 6F 14 02 5B 60 12
   03 5C 5D 4A 06 08 41 00 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF80 00 5B 10 02
   4B 5E 09 02 5F 50 02 09 49 6E 63 6C 75 73 69 76
   65 08 05 52 58 FFFFFFC0 00 20 08 05 59 00 FFFFFF84 00 62 14
   03 5D 63 64 08 05 52 61 FFFFFFC0 00 20 08 05 57 61 FFFFFFC0
   00 20 08 05 66 00 FFFFFF84 00 67 01 03 6D 69 6E 14 02
   20 68 08 05 3B 65 FFFFFFC0 00 20 08 05 6A 00 FFFFFF84 00 6B
   01 03 6D 61 78 14 02 20 6C 08 05 3B 69 FFFFFFC0 00 20
   08 05 6E 00 FFFFFF84 00 28 01 03 61 62 73 08 05 70 00
   FFFFFF84 00 71 01 0E 74 6F 42 69 6E 61 72 79 53 74 72
   69 6E 67 15 01 72 10 02 73 76 0E 02 11 74 09 02
   75 04 01 06 50 72 65 64 65 66 09 02 77 78 02 06
   53 74 72 69 6E 67 0A 02 75 04 08 05 7A 00 FFFFFF84 00
   71 01 0B 74 6F 48 65 78 53 74 72 69 6E 67 08 05
   7C 00 FFFFFF84 00 71 01 0D 74 6F 4F 63 74 61 6C 53 74
   72 69 6E 67 
  InnerClass: 
   public #133= #130 of #132; //Inclusive=class scala/collection/immutable/Range$Inclusive of class scala/collection/immutable/Range
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	RichInt.scala;
const #3 = Asciz	start;
const #4 = Asciz	I;
const #5 = Asciz	<init>;
const #6 = Asciz	(I)V;
const #7 = Asciz	Code;
const #8 = Asciz	LineNumberTable;
const #9 = Asciz	scala/runtime/RichInt;
const #10 = class	#9;	//  scala/runtime/RichInt
const #11 = NameAndType	#3:#4;//  start:I
const #12 = Field	#10.#11;	//  scala/runtime/RichInt.start:I
const #13 = Asciz	java/lang/Object;
const #14 = class	#13;	//  java/lang/Object
const #15 = Asciz	()V;
const #16 = NameAndType	#5:#15;//  "<init>":()V
const #17 = Method	#14.#16;	//  java/lang/Object."<init>":()V
const #18 = Asciz	scala/Proxy$class;
const #19 = class	#18;	//  scala/Proxy$class
const #20 = Asciz	$init$;
const #21 = Asciz	(Lscala/Proxy;)V;
const #22 = NameAndType	#20:#21;//  $init$:(Lscala/Proxy;)V
const #23 = Method	#19.#22;	//  scala/Proxy$class.$init$:(Lscala/Proxy;)V
const #24 = Asciz	scala/math/Ordered$class;
const #25 = class	#24;	//  scala/math/Ordered$class
const #26 = Asciz	(Lscala/math/Ordered;)V;
const #27 = NameAndType	#20:#26;//  $init$:(Lscala/math/Ordered;)V
const #28 = Method	#25.#27;	//  scala/math/Ordered$class.$init$:(Lscala/math/Ordered;)V
const #29 = Asciz	this;
const #30 = Asciz	Lscala/runtime/RichInt;;
const #31 = Asciz	LocalVariableTable;
const #32 = Asciz	compare;
const #33 = Asciz	(Ljava/lang/Object;)I;
const #34 = Asciz	scala/runtime/BoxesRunTime;
const #35 = class	#34;	//  scala/runtime/BoxesRunTime
const #36 = Asciz	unboxToInt;
const #37 = NameAndType	#36:#33;//  unboxToInt:(Ljava/lang/Object;)I
const #38 = Method	#35.#37;	//  scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
const #39 = Asciz	(I)I;
const #40 = NameAndType	#32:#39;//  compare:(I)I
const #41 = Method	#10.#40;	//  scala/runtime/RichInt.compare:(I)I
const #42 = Asciz	that;
const #43 = Asciz	Ljava/lang/Object;;
const #44 = Asciz	toOctalString;
const #45 = Asciz	()Ljava/lang/String;;
const #46 = Asciz	()I;
const #47 = NameAndType	#3:#46;//  start:()I
const #48 = Method	#10.#47;	//  scala/runtime/RichInt.start:()I
const #49 = Asciz	java/lang/Integer;
const #50 = class	#49;	//  java/lang/Integer
const #51 = Asciz	(I)Ljava/lang/String;;
const #52 = NameAndType	#44:#51;//  toOctalString:(I)Ljava/lang/String;
const #53 = Method	#50.#52;	//  java/lang/Integer.toOctalString:(I)Ljava/lang/String;
const #54 = Asciz	toHexString;
const #55 = NameAndType	#54:#51;//  toHexString:(I)Ljava/lang/String;
const #56 = Method	#50.#55;	//  java/lang/Integer.toHexString:(I)Ljava/lang/String;
const #57 = Asciz	toBinaryString;
const #58 = NameAndType	#57:#51;//  toBinaryString:(I)Ljava/lang/String;
const #59 = Method	#50.#58;	//  java/lang/Integer.toBinaryString:(I)Ljava/lang/String;
const #60 = Asciz	abs;
const #61 = Asciz	max;
const #62 = Asciz	min;
const #63 = Asciz	to;
const #64 = Asciz	(II)Lscala/collection/immutable/Range$Inclusive;;
const #65 = Asciz	scala/collection/immutable/Range$;
const #66 = class	#65;	//  scala/collection/immutable/Range$
const #67 = Asciz	MODULE$;
const #68 = Asciz	Lscala/collection/immutable/Range$;;
const #69 = NameAndType	#67:#68;//  MODULE$:Lscala/collection/immutable/Range$;
const #70 = Field	#66.#69;	//  scala/collection/immutable/Range$.MODULE$:Lscala/collection/immutable/Range$;
const #71 = Asciz	inclusive;
const #72 = Asciz	(III)Lscala/collection/immutable/Range$Inclusive;;
const #73 = NameAndType	#71:#72;//  inclusive:(III)Lscala/collection/immutable/Range$Inclusive;
const #74 = Method	#66.#73;	//  scala/collection/immutable/Range$.inclusive:(III)Lscala/collection/immutable/Range$Inclusive;
const #75 = Asciz	end;
const #76 = Asciz	step;
const #77 = Asciz	(I)Lscala/collection/immutable/Range$Inclusive;;
const #78 = NameAndType	#71:#64;//  inclusive:(II)Lscala/collection/immutable/Range$Inclusive;
const #79 = Method	#66.#78;	//  scala/collection/immutable/Range$.inclusive:(II)Lscala/collection/immutable/Range$Inclusive;
const #80 = Asciz	until;
const #81 = Asciz	(II)Lscala/collection/immutable/Range;;
const #82 = Asciz	apply;
const #83 = Asciz	(III)Lscala/collection/immutable/Range;;
const #84 = NameAndType	#82:#83;//  apply:(III)Lscala/collection/immutable/Range;
const #85 = Method	#66.#84;	//  scala/collection/immutable/Range$.apply:(III)Lscala/collection/immutable/Range;
const #86 = Asciz	(I)Lscala/collection/immutable/Range;;
const #87 = NameAndType	#82:#81;//  apply:(II)Lscala/collection/immutable/Range;
const #88 = Method	#66.#87;	//  scala/collection/immutable/Range$.apply:(II)Lscala/collection/immutable/Range;
const #89 = Asciz	self;
const #90 = Asciz	()Ljava/lang/Object;;
const #91 = Asciz	boxToInteger;
const #92 = Asciz	(I)Ljava/lang/Integer;;
const #93 = NameAndType	#91:#92;//  boxToInteger:(I)Ljava/lang/Integer;
const #94 = Method	#35.#93;	//  scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
const #95 = Asciz	toString;
const #96 = Asciz	(Lscala/Proxy;)Ljava/lang/String;;
const #97 = NameAndType	#95:#96;//  toString:(Lscala/Proxy;)Ljava/lang/String;
const #98 = Method	#19.#97;	//  scala/Proxy$class.toString:(Lscala/Proxy;)Ljava/lang/String;
const #99 = Asciz	equals;
const #100 = Asciz	(Ljava/lang/Object;)Z;
const #101 = Asciz	(Lscala/Proxy;Ljava/lang/Object;)Z;
const #102 = NameAndType	#99:#101;//  equals:(Lscala/Proxy;Ljava/lang/Object;)Z
const #103 = Method	#19.#102;	//  scala/Proxy$class.equals:(Lscala/Proxy;Ljava/lang/Object;)Z
const #104 = Asciz	hashCode;
const #105 = Asciz	(Lscala/Proxy;)I;
const #106 = NameAndType	#104:#105;//  hashCode:(Lscala/Proxy;)I
const #107 = Method	#19.#106;	//  scala/Proxy$class.hashCode:(Lscala/Proxy;)I
const #108 = Asciz	compareTo;
const #109 = Asciz	(Lscala/math/Ordered;Ljava/lang/Object;)I;
const #110 = NameAndType	#108:#109;//  compareTo:(Lscala/math/Ordered;Ljava/lang/Object;)I
const #111 = Method	#25.#110;	//  scala/math/Ordered$class.compareTo:(Lscala/math/Ordered;Ljava/lang/Object;)I
const #112 = Asciz	$greater$eq;
const #113 = Asciz	(Lscala/math/Ordered;Ljava/lang/Object;)Z;
const #114 = NameAndType	#112:#113;//  $greater$eq:(Lscala/math/Ordered;Ljava/lang/Object;)Z
const #115 = Method	#25.#114;	//  scala/math/Ordered$class.$greater$eq:(Lscala/math/Ordered;Ljava/lang/Object;)Z
const #116 = Asciz	$less$eq;
const #117 = NameAndType	#116:#113;//  $less$eq:(Lscala/math/Ordered;Ljava/lang/Object;)Z
const #118 = Method	#25.#117;	//  scala/math/Ordered$class.$less$eq:(Lscala/math/Ordered;Ljava/lang/Object;)Z
const #119 = Asciz	$greater;
const #120 = NameAndType	#119:#113;//  $greater:(Lscala/math/Ordered;Ljava/lang/Object;)Z
const #121 = Method	#25.#120;	//  scala/math/Ordered$class.$greater:(Lscala/math/Ordered;Ljava/lang/Object;)Z
const #122 = Asciz	$less;
const #123 = NameAndType	#122:#113;//  $less:(Lscala/math/Ordered;Ljava/lang/Object;)Z
const #124 = Method	#25.#123;	//  scala/math/Ordered$class.$less:(Lscala/math/Ordered;Ljava/lang/Object;)Z
const #125 = Asciz	Ljava/lang/Object;Lscala/Proxy;Lscala/math/Ordered<Ljava/lang/Integer;>;Lscala/ScalaObject;;
const #126 = Asciz	Signature;
const #127 = Asciz	ScalaSig;
const #128 = Asciz	InnerClasses;
const #129 = Asciz	scala/collection/immutable/Range$Inclusive;
const #130 = class	#129;	//  scala/collection/immutable/Range$Inclusive
const #131 = Asciz	scala/collection/immutable/Range;
const #132 = class	#131;	//  scala/collection/immutable/Range
const #133 = Asciz	Inclusive;
const #134 = Asciz	scala/Proxy;
const #135 = class	#134;	//  scala/Proxy
const #136 = Asciz	scala/math/Ordered;
const #137 = class	#136;	//  scala/math/Ordered
const #138 = Asciz	scala/ScalaObject;
const #139 = class	#138;	//  scala/ScalaObject

{
public final int start;

public scala.runtime.RichInt(int);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	putfield	#12; //Field start:I
   5:	aload_0
   6:	invokespecial	#17; //Method java/lang/Object."<init>":()V
   9:	aload_0
   10:	invokestatic	#23; //Method scala/Proxy$class.$init$:(Lscala/Proxy;)V
   13:	aload_0
   14:	invokestatic	#28; //Method scala/math/Ordered$class.$init$:(Lscala/math/Ordered;)V
   17:	return
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      18      0    this       Lscala/runtime/RichInt;
   0      18      1    start       I


public int compare(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#38; //Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
   5:	invokevirtual	#41; //Method compare:(I)I
   8:	ireturn
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/runtime/RichInt;
   0      9      1    that       Ljava/lang/Object;


public java.lang.String toOctalString();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#48; //Method start:()I
   4:	invokestatic	#53; //Method java/lang/Integer.toOctalString:(I)Ljava/lang/String;
   7:	areturn
  LineNumberTable: 
   line 38: 0


public java.lang.String toHexString();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#48; //Method start:()I
   4:	invokestatic	#56; //Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
   7:	areturn
  LineNumberTable: 
   line 37: 0


public java.lang.String toBinaryString();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#48; //Method start:()I
   4:	invokestatic	#59; //Method java/lang/Integer.toBinaryString:(I)Ljava/lang/String;
   7:	areturn
  LineNumberTable: 
   line 36: 0


public int abs();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#12; //Field start:I
   4:	iconst_0
   5:	if_icmpge	16
   8:	aload_0
   9:	getfield	#12; //Field start:I
   12:	ineg
   13:	goto	20
   16:	aload_0
   17:	getfield	#12; //Field start:I
   20:	ireturn
  LineNumberTable: 
   line 34: 0


public int max(int);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	getfield	#12; //Field start:I
   4:	iload_1
   5:	if_icmple	15
   8:	aload_0
   9:	getfield	#12; //Field start:I
   12:	goto	16
   15:	iload_1
   16:	ireturn
  LineNumberTable: 
   line 33: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      17      0    this       Lscala/runtime/RichInt;
   0      17      1    that       I


public int min(int);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	getfield	#12; //Field start:I
   4:	iload_1
   5:	if_icmpge	15
   8:	aload_0
   9:	getfield	#12; //Field start:I
   12:	goto	16
   15:	iload_1
   16:	ireturn
  LineNumberTable: 
   line 32: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      17      0    this       Lscala/runtime/RichInt;
   0      17      1    that       I


public scala.collection.immutable.Range$Inclusive to(int, int);
  Code:
   Stack=4, Locals=3, Args_size=3
   0:	getstatic	#70; //Field scala/collection/immutable/Range$.MODULE$:Lscala/collection/immutable/Range$;
   3:	aload_0
   4:	invokevirtual	#48; //Method start:()I
   7:	iload_1
   8:	iload_2
   9:	invokevirtual	#74; //Method scala/collection/immutable/Range$.inclusive:(III)Lscala/collection/immutable/Range$Inclusive;
   12:	areturn
  LineNumberTable: 
   line 30: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      13      0    this       Lscala/runtime/RichInt;
   0      13      1    end       I
   0      13      2    step       I


public scala.collection.immutable.Range$Inclusive to(int);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	getstatic	#70; //Field scala/collection/immutable/Range$.MODULE$:Lscala/collection/immutable/Range$;
   3:	aload_0
   4:	invokevirtual	#48; //Method start:()I
   7:	iload_1
   8:	invokevirtual	#79; //Method scala/collection/immutable/Range$.inclusive:(II)Lscala/collection/immutable/Range$Inclusive;
   11:	areturn
  LineNumberTable: 
   line 29: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      12      0    this       Lscala/runtime/RichInt;
   0      12      1    end       I


public scala.collection.immutable.Range until(int, int);
  Code:
   Stack=4, Locals=3, Args_size=3
   0:	getstatic	#70; //Field scala/collection/immutable/Range$.MODULE$:Lscala/collection/immutable/Range$;
   3:	aload_0
   4:	invokevirtual	#48; //Method start:()I
   7:	iload_1
   8:	iload_2
   9:	invokevirtual	#85; //Method scala/collection/immutable/Range$.apply:(III)Lscala/collection/immutable/Range;
   12:	areturn
  LineNumberTable: 
   line 26: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      13      0    this       Lscala/runtime/RichInt;
   0      13      1    end       I
   0      13      2    step       I


public scala.collection.immutable.Range until(int);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	getstatic	#70; //Field scala/collection/immutable/Range$.MODULE$:Lscala/collection/immutable/Range$;
   3:	aload_0
   4:	invokevirtual	#48; //Method start:()I
   7:	iload_1
   8:	invokevirtual	#88; //Method scala/collection/immutable/Range$.apply:(II)Lscala/collection/immutable/Range;
   11:	areturn
  LineNumberTable: 
   line 25: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      12      0    this       Lscala/runtime/RichInt;
   0      12      1    end       I


public int compare(int);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	getfield	#12; //Field start:I
   4:	iload_1
   5:	if_icmpge	12
   8:	iconst_m1
   9:	goto	25
   12:	aload_0
   13:	getfield	#12; //Field start:I
   16:	iload_1
   17:	if_icmple	24
   20:	iconst_1
   21:	goto	25
   24:	iconst_0
   25:	ireturn
  LineNumberTable: 
   line 23: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      26      0    this       Lscala/runtime/RichInt;
   0      26      1    that       I


public java.lang.Object self();
  Code:
   Stack=1, Locals=2, Args_size=1
   0:	aload_0
   1:	invokevirtual	#48; //Method start:()I
   4:	istore_1
   5:	iload_1
   6:	invokestatic	#94; //Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   9:	areturn
  LineNumberTable: 
   line 20: 0


public int start();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#12; //Field start:I
   4:	ireturn
  LineNumberTable: 
   line 17: 0


public java.lang.String toString();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#98; //Method scala/Proxy$class.toString:(Lscala/Proxy;)Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 17: 0


public boolean equals(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#103; //Method scala/Proxy$class.equals:(Lscala/Proxy;Ljava/lang/Object;)Z
   5:	ireturn
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/runtime/RichInt;
   0      6      1    that       Ljava/lang/Object;


public int hashCode();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#107; //Method scala/Proxy$class.hashCode:(Lscala/Proxy;)I
   4:	ireturn
  LineNumberTable: 
   line 17: 0


public int compareTo(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#111; //Method scala/math/Ordered$class.compareTo:(Lscala/math/Ordered;Ljava/lang/Object;)I
   5:	ireturn
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/runtime/RichInt;
   0      6      1    that       Ljava/lang/Object;


public boolean $greater$eq(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#115; //Method scala/math/Ordered$class.$greater$eq:(Lscala/math/Ordered;Ljava/lang/Object;)Z
   5:	ireturn
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/runtime/RichInt;
   0      6      1    that       Ljava/lang/Object;


public boolean $less$eq(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#118; //Method scala/math/Ordered$class.$less$eq:(Lscala/math/Ordered;Ljava/lang/Object;)Z
   5:	ireturn
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/runtime/RichInt;
   0      6      1    that       Ljava/lang/Object;


public boolean $greater(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#121; //Method scala/math/Ordered$class.$greater:(Lscala/math/Ordered;Ljava/lang/Object;)Z
   5:	ireturn
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/runtime/RichInt;
   0      6      1    that       Ljava/lang/Object;


public boolean $less(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#124; //Method scala/math/Ordered$class.$less:(Lscala/math/Ordered;Ljava/lang/Object;)Z
   5:	ireturn
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/runtime/RichInt;
   0      6      1    that       Ljava/lang/Object;


}

