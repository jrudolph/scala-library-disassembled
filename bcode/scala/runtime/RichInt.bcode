Compiled from "RichInt.scala"
public final class scala.runtime.RichInt extends java.lang.Object implements scala.Proxy,scala.Ordered,scala.ScalaObject
  SourceFile: "RichInt.scala"
  Signature: length = 0x2
   00 78 
  ScalaSig: length = 0x246
   05 00 60 06 08 01 02 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF80 02 07 02 07 52
   69 63 68 49 6E 74 0A 02 03 04 01 07 72 75 6E 74
   69 6D 65 0A 01 05 01 05 73 63 61 6C 61 03 00 13
   05 00 08 10 14 1A 10 02 09 0E 0D 01 0A 0A 02 0B
   0C 01 04 6C 61 6E 67 0A 01 0D 01 04 6A 61 76 61
   09 02 0F 0A 02 06 4F 62 6A 65 63 74 10 02 11 12
   0D 01 04 09 02 13 04 02 05 50 72 6F 78 79 10 03
   11 15 17 09 02 16 04 02 07 4F 72 64 65 72 65 64
   10 02 11 18 09 02 19 04 02 03 49 6E 74 10 02 11
   1B 09 02 1C 04 02 0B 53 63 61 6C 61 4F 62 6A 65
   63 74 08 08 1E 00 FFFFFF82 FFFFFFC2 FFFFFF80 FFFFFF84 00 1F 01 05 73 74
   61 72 74 15 01 17 08 08 21 00 FFFFFF82 FFFFFF80 FFFFFFA0 FFFFFF80 04 17
   01 06 73 74 61 72 74 20 08 05 23 00 FFFFFF84 00 24 01
   06 3C 69 6E 69 74 3E 14 02 25 27 10 02 26 00 0D
   01 02 08 05 1E 22 FFFFFFC0 00 17 08 05 29 00 FFFFFF84 00 2A
   01 04 73 65 6C 66 15 01 2B 10 02 11 2C 09 02 2D
   04 02 03 41 6E 79 08 05 2F 00 FFFFFF84 00 30 01 07 63
   6F 6D 70 61 72 65 14 02 17 31 08 05 32 2E FFFFFFC0 00
   17 01 04 74 68 61 74 08 05 34 00 FFFFFF84 00 35 01 05
   75 6E 74 69 6C 14 02 36 39 10 02 11 37 09 02 38
   04 02 05 52 61 6E 67 65 08 05 3A 33 FFFFFFC0 00 17 01
   03 65 6E 64 08 05 34 00 FFFFFF84 00 3C 14 03 36 3D 3E
   08 05 3A 3B FFFFFFC0 00 17 08 05 3F 3B FFFFFFC0 00 17 01 04
   73 74 65 70 08 05 41 00 FFFFFF84 00 42 01 02 74 6F 14
   02 36 43 08 05 3A 40 FFFFFFC0 00 17 08 05 41 00 FFFFFF84 00
   45 14 03 36 46 47 08 05 3A 44 FFFFFFC0 00 17 08 05 3F
   44 FFFFFFC0 00 17 08 05 49 00 FFFFFF84 00 4A 01 03 6D 69 6E
   14 02 17 4B 08 05 32 48 FFFFFFC0 00 17 08 05 4D 00 FFFFFF84
   00 4E 01 03 6D 61 78 14 02 17 4F 08 05 32 4C FFFFFFC0
   00 17 08 05 51 00 FFFFFF84 00 1F 01 03 61 62 73 08 05
   53 00 FFFFFF84 00 54 01 0E 74 6F 42 69 6E 61 72 79 53
   74 72 69 6E 67 15 01 55 10 02 56 59 0E 02 11 57
   09 02 58 04 01 06 50 72 65 64 65 66 09 02 5A 5B
   02 06 53 74 72 69 6E 67 0A 02 58 04 08 05 5D 00
   FFFFFF84 00 54 01 0B 74 6F 48 65 78 53 74 72 69 6E 67
   08 05 5F 00 FFFFFF84 00 54 01 0D 74 6F 4F 63 74 61 6C
   53 74 72 69 6E 67 
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	RichInt.scala;
const #3 = Asciz	start;
const #4 = Asciz	I;
const #5 = Asciz	<init>;
const #6 = Asciz	(I)V;
const #7 = Asciz	Code;
const #8 = Asciz	LineNumberTable;
const #9 = Asciz	scala/runtime/RichInt;
const #10 = class	#9;	//  scala/runtime/RichInt
const #11 = NameAndType	#3:#4;//  start:I
const #12 = Field	#10.#11;	//  scala/runtime/RichInt.start:I
const #13 = Asciz	java/lang/Object;
const #14 = class	#13;	//  java/lang/Object
const #15 = Asciz	()V;
const #16 = NameAndType	#5:#15;//  "<init>":()V
const #17 = Method	#14.#16;	//  java/lang/Object."<init>":()V
const #18 = Asciz	scala/Proxy$class;
const #19 = class	#18;	//  scala/Proxy$class
const #20 = Asciz	$init$;
const #21 = Asciz	(Lscala/Proxy;)V;
const #22 = NameAndType	#20:#21;//  $init$:(Lscala/Proxy;)V
const #23 = Method	#19.#22;	//  scala/Proxy$class.$init$:(Lscala/Proxy;)V
const #24 = Asciz	scala/Ordered$class;
const #25 = class	#24;	//  scala/Ordered$class
const #26 = Asciz	(Lscala/Ordered;)V;
const #27 = NameAndType	#20:#26;//  $init$:(Lscala/Ordered;)V
const #28 = Method	#25.#27;	//  scala/Ordered$class.$init$:(Lscala/Ordered;)V
const #29 = Asciz	this;
const #30 = Asciz	Lscala/runtime/RichInt;;
const #31 = Asciz	LocalVariableTable;
const #32 = Asciz	compare;
const #33 = Asciz	(Ljava/lang/Object;)I;
const #34 = Asciz	scala/runtime/BoxesRunTime;
const #35 = class	#34;	//  scala/runtime/BoxesRunTime
const #36 = Asciz	unboxToInt;
const #37 = NameAndType	#36:#33;//  unboxToInt:(Ljava/lang/Object;)I
const #38 = Method	#35.#37;	//  scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
const #39 = Asciz	(I)I;
const #40 = NameAndType	#32:#39;//  compare:(I)I
const #41 = Method	#10.#40;	//  scala/runtime/RichInt.compare:(I)I
const #42 = Asciz	that;
const #43 = Asciz	Ljava/lang/Object;;
const #44 = Asciz	toOctalString;
const #45 = Asciz	()Ljava/lang/String;;
const #46 = Asciz	()I;
const #47 = NameAndType	#3:#46;//  start:()I
const #48 = Method	#10.#47;	//  scala/runtime/RichInt.start:()I
const #49 = Asciz	java/lang/Integer;
const #50 = class	#49;	//  java/lang/Integer
const #51 = Asciz	(I)Ljava/lang/String;;
const #52 = NameAndType	#44:#51;//  toOctalString:(I)Ljava/lang/String;
const #53 = Method	#50.#52;	//  java/lang/Integer.toOctalString:(I)Ljava/lang/String;
const #54 = Asciz	toHexString;
const #55 = NameAndType	#54:#51;//  toHexString:(I)Ljava/lang/String;
const #56 = Method	#50.#55;	//  java/lang/Integer.toHexString:(I)Ljava/lang/String;
const #57 = Asciz	toBinaryString;
const #58 = NameAndType	#57:#51;//  toBinaryString:(I)Ljava/lang/String;
const #59 = Method	#50.#58;	//  java/lang/Integer.toBinaryString:(I)Ljava/lang/String;
const #60 = Asciz	abs;
const #61 = Asciz	max;
const #62 = Asciz	min;
const #63 = Asciz	to;
const #64 = Asciz	(II)Lscala/Range;;
const #65 = Asciz	scala/Range$;
const #66 = class	#65;	//  scala/Range$
const #67 = Asciz	MODULE$;
const #68 = Asciz	Lscala/Range$;;
const #69 = NameAndType	#67:#68;//  MODULE$:Lscala/Range$;
const #70 = Field	#66.#69;	//  scala/Range$.MODULE$:Lscala/Range$;
const #71 = Asciz	inclusive;
const #72 = Asciz	(III)Lscala/Range;;
const #73 = NameAndType	#71:#72;//  inclusive:(III)Lscala/Range;
const #74 = Method	#66.#73;	//  scala/Range$.inclusive:(III)Lscala/Range;
const #75 = Asciz	end;
const #76 = Asciz	step;
const #77 = Asciz	(I)Lscala/Range;;
const #78 = Asciz	until;
const #79 = Asciz	scala/Range;
const #80 = class	#79;	//  scala/Range
const #81 = Asciz	(III)V;
const #82 = NameAndType	#5:#81;//  "<init>":(III)V
const #83 = Method	#80.#82;	//  scala/Range."<init>":(III)V
const #84 = Asciz	self;
const #85 = Asciz	()Ljava/lang/Object;;
const #86 = Asciz	boxToInteger;
const #87 = Asciz	(I)Ljava/lang/Integer;;
const #88 = NameAndType	#86:#87;//  boxToInteger:(I)Ljava/lang/Integer;
const #89 = Method	#35.#88;	//  scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
const #90 = Asciz	toString;
const #91 = Asciz	(Lscala/Proxy;)Ljava/lang/String;;
const #92 = NameAndType	#90:#91;//  toString:(Lscala/Proxy;)Ljava/lang/String;
const #93 = Method	#19.#92;	//  scala/Proxy$class.toString:(Lscala/Proxy;)Ljava/lang/String;
const #94 = Asciz	equals;
const #95 = Asciz	(Ljava/lang/Object;)Z;
const #96 = Asciz	(Lscala/Proxy;Ljava/lang/Object;)Z;
const #97 = NameAndType	#94:#96;//  equals:(Lscala/Proxy;Ljava/lang/Object;)Z
const #98 = Method	#19.#97;	//  scala/Proxy$class.equals:(Lscala/Proxy;Ljava/lang/Object;)Z
const #99 = Asciz	hashCode;
const #100 = Asciz	(Lscala/Proxy;)I;
const #101 = NameAndType	#99:#100;//  hashCode:(Lscala/Proxy;)I
const #102 = Method	#19.#101;	//  scala/Proxy$class.hashCode:(Lscala/Proxy;)I
const #103 = Asciz	compareTo;
const #104 = Asciz	(Lscala/Ordered;Ljava/lang/Object;)I;
const #105 = NameAndType	#103:#104;//  compareTo:(Lscala/Ordered;Ljava/lang/Object;)I
const #106 = Method	#25.#105;	//  scala/Ordered$class.compareTo:(Lscala/Ordered;Ljava/lang/Object;)I
const #107 = Asciz	$greater$eq;
const #108 = Asciz	(Lscala/Ordered;Ljava/lang/Object;)Z;
const #109 = NameAndType	#107:#108;//  $greater$eq:(Lscala/Ordered;Ljava/lang/Object;)Z
const #110 = Method	#25.#109;	//  scala/Ordered$class.$greater$eq:(Lscala/Ordered;Ljava/lang/Object;)Z
const #111 = Asciz	$less$eq;
const #112 = NameAndType	#111:#108;//  $less$eq:(Lscala/Ordered;Ljava/lang/Object;)Z
const #113 = Method	#25.#112;	//  scala/Ordered$class.$less$eq:(Lscala/Ordered;Ljava/lang/Object;)Z
const #114 = Asciz	$greater;
const #115 = NameAndType	#114:#108;//  $greater:(Lscala/Ordered;Ljava/lang/Object;)Z
const #116 = Method	#25.#115;	//  scala/Ordered$class.$greater:(Lscala/Ordered;Ljava/lang/Object;)Z
const #117 = Asciz	$less;
const #118 = NameAndType	#117:#108;//  $less:(Lscala/Ordered;Ljava/lang/Object;)Z
const #119 = Method	#25.#118;	//  scala/Ordered$class.$less:(Lscala/Ordered;Ljava/lang/Object;)Z
const #120 = Asciz	Ljava/lang/Object;Lscala/Proxy;Lscala/Ordered<Ljava/lang/Integer;>;Lscala/ScalaObject;;
const #121 = Asciz	Signature;
const #122 = Asciz	ScalaSig;
const #123 = Asciz	scala/Proxy;
const #124 = class	#123;	//  scala/Proxy
const #125 = Asciz	scala/Ordered;
const #126 = class	#125;	//  scala/Ordered
const #127 = Asciz	scala/ScalaObject;
const #128 = class	#127;	//  scala/ScalaObject

{
public scala.runtime.RichInt(int);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	putfield	#12; //Field start:I
   5:	aload_0
   6:	invokespecial	#17; //Method java/lang/Object."<init>":()V
   9:	aload_0
   10:	invokestatic	#23; //Method scala/Proxy$class.$init$:(Lscala/Proxy;)V
   13:	aload_0
   14:	invokestatic	#28; //Method scala/Ordered$class.$init$:(Lscala/Ordered;)V
   17:	return
  LineNumberTable: 
   line 15: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      18      0    this       Lscala/runtime/RichInt;
   0      18      1    start       I


public int compare(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#38; //Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
   5:	invokevirtual	#41; //Method compare:(I)I
   8:	ireturn
  LineNumberTable: 
   line 15: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/runtime/RichInt;
   0      9      1    that       Ljava/lang/Object;


public java.lang.String toOctalString();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#48; //Method start:()I
   4:	invokestatic	#53; //Method java/lang/Integer.toOctalString:(I)Ljava/lang/String;
   7:	areturn
  LineNumberTable: 
   line 37: 0


public java.lang.String toHexString();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#48; //Method start:()I
   4:	invokestatic	#56; //Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
   7:	areturn
  LineNumberTable: 
   line 36: 0


public java.lang.String toBinaryString();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#48; //Method start:()I
   4:	invokestatic	#59; //Method java/lang/Integer.toBinaryString:(I)Ljava/lang/String;
   7:	areturn
  LineNumberTable: 
   line 35: 0


public int abs();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#48; //Method start:()I
   4:	iconst_0
   5:	if_icmpge	16
   8:	aload_0
   9:	invokevirtual	#48; //Method start:()I
   12:	ineg
   13:	goto	20
   16:	aload_0
   17:	invokevirtual	#48; //Method start:()I
   20:	ireturn
  LineNumberTable: 
   line 33: 0


public int max(int);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	invokevirtual	#48; //Method start:()I
   4:	iload_1
   5:	if_icmple	15
   8:	aload_0
   9:	invokevirtual	#48; //Method start:()I
   12:	goto	16
   15:	iload_1
   16:	ireturn
  LineNumberTable: 
   line 32: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      17      0    this       Lscala/runtime/RichInt;
   0      17      1    that       I


public int min(int);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	invokevirtual	#48; //Method start:()I
   4:	iload_1
   5:	if_icmpge	15
   8:	aload_0
   9:	invokevirtual	#48; //Method start:()I
   12:	goto	16
   15:	iload_1
   16:	ireturn
  LineNumberTable: 
   line 31: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      17      0    this       Lscala/runtime/RichInt;
   0      17      1    that       I


public scala.Range to(int, int);
  Code:
   Stack=4, Locals=3, Args_size=3
   0:	getstatic	#70; //Field scala/Range$.MODULE$:Lscala/Range$;
   3:	aload_0
   4:	invokevirtual	#48; //Method start:()I
   7:	iload_1
   8:	iload_2
   9:	invokevirtual	#74; //Method scala/Range$.inclusive:(III)Lscala/Range;
   12:	areturn
  LineNumberTable: 
   line 29: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      13      0    this       Lscala/runtime/RichInt;
   0      13      1    end       I
   0      13      2    step       I


public scala.Range to(int);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	getstatic	#70; //Field scala/Range$.MODULE$:Lscala/Range$;
   3:	aload_0
   4:	invokevirtual	#48; //Method start:()I
   7:	iload_1
   8:	iconst_1
   9:	invokevirtual	#74; //Method scala/Range$.inclusive:(III)Lscala/Range;
   12:	areturn
  LineNumberTable: 
   line 28: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      13      0    this       Lscala/runtime/RichInt;
   0      13      1    end       I


public scala.Range until(int, int);
  Code:
   Stack=5, Locals=3, Args_size=3
   0:	new	#80; //class scala/Range
   3:	dup
   4:	aload_0
   5:	invokevirtual	#48; //Method start:()I
   8:	iload_1
   9:	iload_2
   10:	invokespecial	#83; //Method scala/Range."<init>":(III)V
   13:	areturn
  LineNumberTable: 
   line 25: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      14      0    this       Lscala/runtime/RichInt;
   0      14      1    end       I
   0      14      2    step       I


public scala.Range until(int);
  Code:
   Stack=5, Locals=2, Args_size=2
   0:	new	#80; //class scala/Range
   3:	dup
   4:	aload_0
   5:	invokevirtual	#48; //Method start:()I
   8:	iload_1
   9:	iconst_1
   10:	invokespecial	#83; //Method scala/Range."<init>":(III)V
   13:	areturn
  LineNumberTable: 
   line 24: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      14      0    this       Lscala/runtime/RichInt;
   0      14      1    end       I


public int compare(int);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	invokevirtual	#48; //Method start:()I
   4:	iload_1
   5:	if_icmpge	12
   8:	iconst_m1
   9:	goto	25
   12:	aload_0
   13:	invokevirtual	#48; //Method start:()I
   16:	iload_1
   17:	if_icmple	24
   20:	iconst_1
   21:	goto	25
   24:	iconst_0
   25:	ireturn
  LineNumberTable: 
   line 21: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      26      0    this       Lscala/runtime/RichInt;
   0      26      1    that       I


public java.lang.Object self();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#48; //Method start:()I
   4:	invokestatic	#89; //Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   7:	areturn
  LineNumberTable: 
   line 18: 0


public int start();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#12; //Field start:I
   4:	ireturn
  LineNumberTable: 
   line 15: 0


public java.lang.String toString();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#93; //Method scala/Proxy$class.toString:(Lscala/Proxy;)Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 15: 0


public boolean equals(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#98; //Method scala/Proxy$class.equals:(Lscala/Proxy;Ljava/lang/Object;)Z
   5:	ireturn
  LineNumberTable: 
   line 15: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/runtime/RichInt;
   0      6      1    that       Ljava/lang/Object;


public int hashCode();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#102; //Method scala/Proxy$class.hashCode:(Lscala/Proxy;)I
   4:	ireturn
  LineNumberTable: 
   line 15: 0


public int compareTo(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#106; //Method scala/Ordered$class.compareTo:(Lscala/Ordered;Ljava/lang/Object;)I
   5:	ireturn
  LineNumberTable: 
   line 15: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/runtime/RichInt;
   0      6      1    that       Ljava/lang/Object;


public boolean $greater$eq(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#110; //Method scala/Ordered$class.$greater$eq:(Lscala/Ordered;Ljava/lang/Object;)Z
   5:	ireturn
  LineNumberTable: 
   line 15: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/runtime/RichInt;
   0      6      1    that       Ljava/lang/Object;


public boolean $less$eq(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#113; //Method scala/Ordered$class.$less$eq:(Lscala/Ordered;Ljava/lang/Object;)Z
   5:	ireturn
  LineNumberTable: 
   line 15: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/runtime/RichInt;
   0      6      1    that       Ljava/lang/Object;


public boolean $greater(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#116; //Method scala/Ordered$class.$greater:(Lscala/Ordered;Ljava/lang/Object;)Z
   5:	ireturn
  LineNumberTable: 
   line 15: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/runtime/RichInt;
   0      6      1    that       Ljava/lang/Object;


public boolean $less(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#119; //Method scala/Ordered$class.$less:(Lscala/Ordered;Ljava/lang/Object;)Z
   5:	ireturn
  LineNumberTable: 
   line 15: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/runtime/RichInt;
   0      6      1    that       Ljava/lang/Object;


}

