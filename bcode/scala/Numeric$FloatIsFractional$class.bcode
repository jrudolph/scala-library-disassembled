Compiled from "Numeric.scala"
public abstract class scala.Numeric$FloatIsFractional$class extends java.lang.Object
  SourceFile: "Numeric.scala"
  Scala: length = 0x
   
  InnerClass: 
   public abstract #50= #47 of #49; //FloatIsFractional=class scala/Numeric$FloatIsFractional of class scala/Numeric
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Numeric.scala;
const #3 = Asciz	$init$;
const #4 = Asciz	(Lscala/Numeric$FloatIsFractional;)V;
const #5 = Asciz	Code;
const #6 = Asciz	LineNumberTable;
const #7 = Asciz	$this;
const #8 = Asciz	Lscala/Numeric$FloatIsFractional;;
const #9 = Asciz	LocalVariableTable;
const #10 = Asciz	toDouble;
const #11 = Asciz	(Lscala/Numeric$FloatIsFractional;F)D;
const #12 = Asciz	scala/Predef$;
const #13 = class	#12;	//  scala/Predef$
const #14 = Asciz	MODULE$;
const #15 = Asciz	Lscala/Predef$;;
const #16 = NameAndType	#14:#15;//  MODULE$:Lscala/Predef$;
const #17 = Field	#13.#16;	//  scala/Predef$.MODULE$:Lscala/Predef$;
const #18 = Asciz	float2double;
const #19 = Asciz	(F)D;
const #20 = NameAndType	#18:#19;//  float2double:(F)D
const #21 = Method	#13.#20;	//  scala/Predef$.float2double:(F)D
const #22 = Asciz	x;
const #23 = Asciz	F;
const #24 = Asciz	toFloat;
const #25 = Asciz	(Lscala/Numeric$FloatIsFractional;F)F;
const #26 = Asciz	toLong;
const #27 = Asciz	(Lscala/Numeric$FloatIsFractional;F)J;
const #28 = Asciz	toInt;
const #29 = Asciz	(Lscala/Numeric$FloatIsFractional;F)I;
const #30 = Asciz	fromInt;
const #31 = Asciz	(Lscala/Numeric$FloatIsFractional;I)F;
const #32 = Asciz	int2float;
const #33 = Asciz	(I)F;
const #34 = NameAndType	#32:#33;//  int2float:(I)F
const #35 = Method	#13.#34;	//  scala/Predef$.int2float:(I)F
const #36 = Asciz	I;
const #37 = Asciz	negate;
const #38 = Asciz	div;
const #39 = Asciz	(Lscala/Numeric$FloatIsFractional;FF)F;
const #40 = Asciz	y;
const #41 = Asciz	times;
const #42 = Asciz	minus;
const #43 = Asciz	plus;
const #44 = Asciz	Scala;
const #45 = Asciz	InnerClasses;
const #46 = Asciz	scala/Numeric$FloatIsFractional;
const #47 = class	#46;	//  scala/Numeric$FloatIsFractional
const #48 = Asciz	scala/Numeric;
const #49 = class	#48;	//  scala/Numeric
const #50 = Asciz	FloatIsFractional;
const #51 = Asciz	scala/Numeric$FloatIsFractional$class;
const #52 = class	#51;	//  scala/Numeric$FloatIsFractional$class
const #53 = Asciz	java/lang/Object;
const #54 = class	#53;	//  java/lang/Object

{
public static void $init$(scala.Numeric$FloatIsFractional);
  Code:
   Stack=0, Locals=1, Args_size=1
   0:	return
  LineNumberTable: 
   line 49: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      1      0    $this       Lscala/Numeric$FloatIsFractional;


public static double toDouble(scala.Numeric$FloatIsFractional, float);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	getstatic	#17; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   3:	fload_1
   4:	invokevirtual	#21; //Method scala/Predef$.float2double:(F)D
   7:	dreturn
  LineNumberTable: 
   line 59: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      8      0    $this       Lscala/Numeric$FloatIsFractional;
   0      8      1    x       F


public static float toFloat(scala.Numeric$FloatIsFractional, float);
  Code:
   Stack=1, Locals=2, Args_size=2
   0:	fload_1
   1:	freturn
  LineNumberTable: 
   line 58: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      2      0    $this       Lscala/Numeric$FloatIsFractional;
   0      2      1    x       F


public static long toLong(scala.Numeric$FloatIsFractional, float);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	fload_1
   1:	f2l
   2:	lreturn
  LineNumberTable: 
   line 57: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      3      0    $this       Lscala/Numeric$FloatIsFractional;
   0      3      1    x       F


public static int toInt(scala.Numeric$FloatIsFractional, float);
  Code:
   Stack=1, Locals=2, Args_size=2
   0:	fload_1
   1:	f2i
   2:	ireturn
  LineNumberTable: 
   line 56: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      3      0    $this       Lscala/Numeric$FloatIsFractional;
   0      3      1    x       F


public static float fromInt(scala.Numeric$FloatIsFractional, int);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	getstatic	#17; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   3:	iload_1
   4:	invokevirtual	#35; //Method scala/Predef$.int2float:(I)F
   7:	freturn
  LineNumberTable: 
   line 55: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      8      0    $this       Lscala/Numeric$FloatIsFractional;
   0      8      1    x       I


public static float negate(scala.Numeric$FloatIsFractional, float);
  Code:
   Stack=1, Locals=2, Args_size=2
   0:	fload_1
   1:	fneg
   2:	freturn
  LineNumberTable: 
   line 54: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      3      0    $this       Lscala/Numeric$FloatIsFractional;
   0      3      1    x       F


public static float div(scala.Numeric$FloatIsFractional, float, float);
  Code:
   Stack=2, Locals=3, Args_size=3
   0:	fload_1
   1:	fload_2
   2:	fdiv
   3:	freturn
  LineNumberTable: 
   line 53: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      4      0    $this       Lscala/Numeric$FloatIsFractional;
   0      4      1    x       F
   0      4      2    y       F


public static float times(scala.Numeric$FloatIsFractional, float, float);
  Code:
   Stack=2, Locals=3, Args_size=3
   0:	fload_1
   1:	fload_2
   2:	fmul
   3:	freturn
  LineNumberTable: 
   line 52: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      4      0    $this       Lscala/Numeric$FloatIsFractional;
   0      4      1    x       F
   0      4      2    y       F


public static float minus(scala.Numeric$FloatIsFractional, float, float);
  Code:
   Stack=2, Locals=3, Args_size=3
   0:	fload_1
   1:	fload_2
   2:	fsub
   3:	freturn
  LineNumberTable: 
   line 51: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      4      0    $this       Lscala/Numeric$FloatIsFractional;
   0      4      1    x       F
   0      4      2    y       F


public static float plus(scala.Numeric$FloatIsFractional, float, float);
  Code:
   Stack=2, Locals=3, Args_size=3
   0:	fload_1
   1:	fload_2
   2:	fadd
   3:	freturn
  LineNumberTable: 
   line 50: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      4      0    $this       Lscala/Numeric$FloatIsFractional;
   0      4      1    x       F
   0      4      2    y       F


}

