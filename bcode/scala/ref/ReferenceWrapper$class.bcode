Compiled from "ReferenceWrapper.scala"
public abstract class scala.ref.ReferenceWrapper$class extends java.lang.Object
  SourceFile: "ReferenceWrapper.scala"
  Scala: length = 0x
   
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	ReferenceWrapper.scala;
const #3 = Asciz	$init$;
const #4 = Asciz	(Lscala/ref/ReferenceWrapper;)V;
const #5 = Asciz	Code;
const #6 = Asciz	LineNumberTable;
const #7 = Asciz	$this;
const #8 = Asciz	Lscala/ref/ReferenceWrapper;;
const #9 = Asciz	LocalVariableTable;
const #10 = Asciz	self;
const #11 = Asciz	(Lscala/ref/ReferenceWrapper;)Ljava/lang/ref/Reference;;
const #12 = Asciz	scala/ref/ReferenceWrapper;
const #13 = class	#12;	//  scala/ref/ReferenceWrapper
const #14 = Asciz	underlying;
const #15 = Asciz	()Ljava/lang/ref/Reference;;
const #16 = NameAndType	#14:#15;//  underlying:()Ljava/lang/ref/Reference;
const #17 = InterfaceMethod	#13.#16;	//  scala/ref/ReferenceWrapper.underlying:()Ljava/lang/ref/Reference;
const #18 = Asciz	isEnqueued;
const #19 = Asciz	(Lscala/ref/ReferenceWrapper;)Z;
const #20 = Asciz	java/lang/ref/Reference;
const #21 = class	#20;	//  java/lang/ref/Reference
const #22 = Asciz	()Z;
const #23 = NameAndType	#18:#22;//  isEnqueued:()Z
const #24 = Method	#21.#23;	//  java/lang/ref/Reference.isEnqueued:()Z
const #25 = Asciz	enqueue;
const #26 = NameAndType	#25:#22;//  enqueue:()Z
const #27 = Method	#21.#26;	//  java/lang/ref/Reference.enqueue:()Z
const #28 = Asciz	clear;
const #29 = Asciz	()V;
const #30 = NameAndType	#28:#29;//  clear:()V
const #31 = Method	#21.#30;	//  java/lang/ref/Reference.clear:()V
const #32 = Asciz	apply;
const #33 = Asciz	(Lscala/ref/ReferenceWrapper;)Ljava/lang/Object;;
const #34 = Asciz	get;
const #35 = Asciz	()Ljava/lang/Object;;
const #36 = NameAndType	#34:#35;//  get:()Ljava/lang/Object;
const #37 = Method	#21.#36;	//  java/lang/ref/Reference.get:()Ljava/lang/Object;
const #38 = Asciz	java/util/NoSuchElementException;
const #39 = class	#38;	//  java/util/NoSuchElementException
const #40 = Asciz	<init>;
const #41 = NameAndType	#40:#29;//  "<init>":()V
const #42 = Method	#39.#41;	//  java/util/NoSuchElementException."<init>":()V
const #43 = Asciz	ret;
const #44 = Asciz	Ljava/lang/Object;;
const #45 = Asciz	(Lscala/ref/ReferenceWrapper;)Lscala/Option;;
const #46 = Asciz	scala/None$;
const #47 = class	#46;	//  scala/None$
const #48 = Asciz	MODULE$;
const #49 = Asciz	Lscala/None$;;
const #50 = NameAndType	#48:#49;//  MODULE$:Lscala/None$;
const #51 = Field	#47.#50;	//  scala/None$.MODULE$:Lscala/None$;
const #52 = Asciz	scala/Some;
const #53 = class	#52;	//  scala/Some
const #54 = Asciz	(Ljava/lang/Object;)V;
const #55 = NameAndType	#40:#54;//  "<init>":(Ljava/lang/Object;)V
const #56 = Method	#53.#55;	//  scala/Some."<init>":(Ljava/lang/Object;)V
const #57 = Asciz	isValid;
const #58 = Asciz	scala/runtime/BoxesRunTime;
const #59 = class	#58;	//  scala/runtime/BoxesRunTime
const #60 = Asciz	equals;
const #61 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)Z;
const #62 = NameAndType	#60:#61;//  equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
const #63 = Method	#59.#62;	//  scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
const #64 = Asciz	Scala;
const #65 = Asciz	scala/ref/ReferenceWrapper$class;
const #66 = class	#65;	//  scala/ref/ReferenceWrapper$class
const #67 = Asciz	java/lang/Object;
const #68 = class	#67;	//  java/lang/Object

{
public static void $init$(scala.ref.ReferenceWrapper);
  Code:
   Stack=0, Locals=1, Args_size=1
   0:	return
  LineNumberTable: 
   line 16: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      1      0    $this       Lscala/ref/ReferenceWrapper;


public static java.lang.ref.Reference self(scala.ref.ReferenceWrapper);
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokeinterface	#17,  1; //InterfaceMethod scala/ref/ReferenceWrapper.underlying:()Ljava/lang/ref/Reference;
   6:	areturn
  LineNumberTable: 
   line 32: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    $this       Lscala/ref/ReferenceWrapper;


public static boolean isEnqueued(scala.ref.ReferenceWrapper);
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokeinterface	#17,  1; //InterfaceMethod scala/ref/ReferenceWrapper.underlying:()Ljava/lang/ref/Reference;
   6:	invokevirtual	#24; //Method java/lang/ref/Reference.isEnqueued:()Z
   9:	ireturn
  LineNumberTable: 
   line 30: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    $this       Lscala/ref/ReferenceWrapper;


public static boolean enqueue(scala.ref.ReferenceWrapper);
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokeinterface	#17,  1; //InterfaceMethod scala/ref/ReferenceWrapper.underlying:()Ljava/lang/ref/Reference;
   6:	invokevirtual	#27; //Method java/lang/ref/Reference.enqueue:()Z
   9:	ireturn
  LineNumberTable: 
   line 29: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    $this       Lscala/ref/ReferenceWrapper;


public static void clear(scala.ref.ReferenceWrapper);
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokeinterface	#17,  1; //InterfaceMethod scala/ref/ReferenceWrapper.underlying:()Ljava/lang/ref/Reference;
   6:	invokevirtual	#31; //Method java/lang/ref/Reference.clear:()V
   9:	return
  LineNumberTable: 
   line 28: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    $this       Lscala/ref/ReferenceWrapper;


public static java.lang.Object apply(scala.ref.ReferenceWrapper);
  Code:
   Stack=2, Locals=2, Args_size=1
   0:	aload_0
   1:	invokeinterface	#17,  1; //InterfaceMethod scala/ref/ReferenceWrapper.underlying:()Ljava/lang/ref/Reference;
   6:	invokevirtual	#37; //Method java/lang/ref/Reference.get:()Ljava/lang/Object;
   9:	astore_1
   10:	aload_1
   11:	ifnonnull	22
   14:	new	#39; //class java/util/NoSuchElementException
   17:	dup
   18:	invokespecial	#42; //Method java/util/NoSuchElementException."<init>":()V
   21:	athrow
   22:	aload_1
   23:	areturn
  LineNumberTable: 
   line 24: 0
   line 25: 10
   line 26: 22

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      24      0    $this       Lscala/ref/ReferenceWrapper;
   10      13      1    ret       Ljava/lang/Object;


public static scala.Option get(scala.ref.ReferenceWrapper);
  Code:
   Stack=3, Locals=2, Args_size=1
   0:	aload_0
   1:	invokeinterface	#17,  1; //InterfaceMethod scala/ref/ReferenceWrapper.underlying:()Ljava/lang/ref/Reference;
   6:	invokevirtual	#37; //Method java/lang/ref/Reference.get:()Ljava/lang/Object;
   9:	astore_1
   10:	aload_1
   11:	ifnonnull	20
   14:	getstatic	#51; //Field scala/None$.MODULE$:Lscala/None$;
   17:	goto	28
   20:	new	#53; //class scala/Some
   23:	dup
   24:	aload_1
   25:	invokespecial	#56; //Method scala/Some."<init>":(Ljava/lang/Object;)V
   28:	areturn
  LineNumberTable: 
   line 20: 0
   line 21: 10
   line 19: 28

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      29      0    $this       Lscala/ref/ReferenceWrapper;
   10      19      1    ret       Ljava/lang/Object;


public static boolean isValid(scala.ref.ReferenceWrapper);
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	invokeinterface	#17,  1; //InterfaceMethod scala/ref/ReferenceWrapper.underlying:()Ljava/lang/ref/Reference;
   6:	invokevirtual	#37; //Method java/lang/ref/Reference.get:()Ljava/lang/Object;
   9:	aconst_null
   10:	pop
   11:	aconst_null
   12:	invokestatic	#63; //Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
   15:	ifeq	22
   18:	iconst_0
   19:	goto	23
   22:	iconst_1
   23:	ireturn
  LineNumberTable: 
   line 18: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      24      0    $this       Lscala/ref/ReferenceWrapper;


}

