Compiled from "PhantomReference.scala"
public class scala.ref.PhantomReference extends java.lang.Object implements scala.ref.ReferenceWrapper,scala.ScalaObject
  SourceFile: "PhantomReference.scala"
  ScalaSig: length = 0x3
   05 00 00 
  Signature: length = 0x2
   00 FFFFFF92 
  RuntimeVisibleAnnotations: length = 0xB
   00 01 00 FFFFFF93 00 01 00 FFFFFF94 73 00 FFFFFF95 
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	PhantomReference.scala;
Asciz	underlying;
Asciz	Ljava/lang/ref/PhantomReference;;
Asciz	Ljava/lang/ref/PhantomReference<+TT;>;;
Asciz	Signature;
Asciz	get;
Asciz	()Lscala/Option;;
Asciz	Code;
Asciz	LineNumberTable;
Asciz	scala/ref/ReferenceWrapper$class;
class	scala/ref/ReferenceWrapper$class
Asciz	(Lscala/ref/ReferenceWrapper;)Lscala/Option;;
NameAndType	get:(Lscala/ref/ReferenceWrapper;)Lscala/Option;
Method	scala/ref/ReferenceWrapper$class.get:(Lscala/ref/ReferenceWrapper;)Lscala/Option;
Asciz	apply;
Asciz	()Ljava/lang/Object;;
Asciz	(Lscala/ref/ReferenceWrapper;)Ljava/lang/Object;;
NameAndType	apply:(Lscala/ref/ReferenceWrapper;)Ljava/lang/Object;
Method	scala/ref/ReferenceWrapper$class.apply:(Lscala/ref/ReferenceWrapper;)Ljava/lang/Object;
Asciz	clear;
Asciz	()V;
Asciz	(Lscala/ref/ReferenceWrapper;)V;
NameAndType	clear:(Lscala/ref/ReferenceWrapper;)V
Method	scala/ref/ReferenceWrapper$class.clear:(Lscala/ref/ReferenceWrapper;)V
Asciz	enqueue;
Asciz	()Z;
Asciz	(Lscala/ref/ReferenceWrapper;)Z;
NameAndType	enqueue:(Lscala/ref/ReferenceWrapper;)Z
Method	scala/ref/ReferenceWrapper$class.enqueue:(Lscala/ref/ReferenceWrapper;)Z
Asciz	isEnqueued;
NameAndType	isEnqueued:(Lscala/ref/ReferenceWrapper;)Z
Method	scala/ref/ReferenceWrapper$class.isEnqueued:(Lscala/ref/ReferenceWrapper;)Z
Asciz	self;
Asciz	()Ljava/lang/ref/Reference;;
Asciz	(Lscala/ref/ReferenceWrapper;)Ljava/lang/ref/Reference;;
NameAndType	self:(Lscala/ref/ReferenceWrapper;)Ljava/lang/ref/Reference;
Method	scala/ref/ReferenceWrapper$class.self:(Lscala/ref/ReferenceWrapper;)Ljava/lang/ref/Reference;
Asciz	hashCode;
Asciz	()I;
Asciz	scala/Proxy$class;
class	scala/Proxy$class
Asciz	(Lscala/Proxy;)I;
NameAndType	hashCode:(Lscala/Proxy;)I
Method	scala/Proxy$class.hashCode:(Lscala/Proxy;)I
Asciz	equals;
Asciz	(Ljava/lang/Object;)Z;
Asciz	(Lscala/Proxy;Ljava/lang/Object;)Z;
NameAndType	equals:(Lscala/Proxy;Ljava/lang/Object;)Z
Method	scala/Proxy$class.equals:(Lscala/Proxy;Ljava/lang/Object;)Z
Asciz	this;
Asciz	Lscala/ref/PhantomReference;;
Asciz	that;
Asciz	Ljava/lang/Object;;
Asciz	LocalVariableTable;
Asciz	toString;
Asciz	()Ljava/lang/String;;
Asciz	(Lscala/Proxy;)Ljava/lang/String;;
NameAndType	toString:(Lscala/Proxy;)Ljava/lang/String;
Method	scala/Proxy$class.toString:(Lscala/Proxy;)Ljava/lang/String;
Asciz	apply$mcV$sp;
Asciz	scala/Function0$class;
class	scala/Function0$class
Asciz	(Lscala/Function0;)V;
NameAndType	apply$mcV$sp:(Lscala/Function0;)V
Method	scala/Function0$class.apply$mcV$sp:(Lscala/Function0;)V
Asciz	apply$mcZ$sp;
Asciz	(Lscala/Function0;)Z;
NameAndType	apply$mcZ$sp:(Lscala/Function0;)Z
Method	scala/Function0$class.apply$mcZ$sp:(Lscala/Function0;)Z
Asciz	apply$mcB$sp;
Asciz	()B;
Asciz	(Lscala/Function0;)B;
NameAndType	apply$mcB$sp:(Lscala/Function0;)B
Method	scala/Function0$class.apply$mcB$sp:(Lscala/Function0;)B
Asciz	apply$mcS$sp;
Asciz	()S;
Asciz	(Lscala/Function0;)S;
NameAndType	apply$mcS$sp:(Lscala/Function0;)S
Method	scala/Function0$class.apply$mcS$sp:(Lscala/Function0;)S
Asciz	apply$mcC$sp;
Asciz	()C;
Asciz	(Lscala/Function0;)C;
NameAndType	apply$mcC$sp:(Lscala/Function0;)C
Method	scala/Function0$class.apply$mcC$sp:(Lscala/Function0;)C
Asciz	apply$mcI$sp;
Asciz	(Lscala/Function0;)I;
NameAndType	apply$mcI$sp:(Lscala/Function0;)I
Method	scala/Function0$class.apply$mcI$sp:(Lscala/Function0;)I
Asciz	apply$mcL$sp;
Asciz	()J;
Asciz	(Lscala/Function0;)J;
NameAndType	apply$mcL$sp:(Lscala/Function0;)J
Method	scala/Function0$class.apply$mcL$sp:(Lscala/Function0;)J
Asciz	apply$mcF$sp;
Asciz	()F;
Asciz	(Lscala/Function0;)F;
NameAndType	apply$mcF$sp:(Lscala/Function0;)F
Method	scala/Function0$class.apply$mcF$sp:(Lscala/Function0;)F
Asciz	apply$mcD$sp;
Asciz	()D;
Asciz	(Lscala/Function0;)D;
NameAndType	apply$mcD$sp:(Lscala/Function0;)D
Method	scala/Function0$class.apply$mcD$sp:(Lscala/Function0;)D
Asciz	()Ljava/lang/ref/PhantomReference;;
Asciz	scala/ref/PhantomReference;
class	scala/ref/PhantomReference
NameAndType	underlying:Ljava/lang/ref/PhantomReference;
Field	scala/ref/PhantomReference.underlying:Ljava/lang/ref/PhantomReference;
Asciz	()Ljava/lang/ref/PhantomReference<+TT;>;;
Asciz	scala/ref/ReferenceWrapper;
class	scala/ref/ReferenceWrapper
NameAndType	self:()Ljava/lang/ref/Reference;
InterfaceMethod	scala/ref/ReferenceWrapper.self:()Ljava/lang/ref/Reference;
NameAndType	underlying:()Ljava/lang/ref/PhantomReference;
Method	scala/ref/PhantomReference.underlying:()Ljava/lang/ref/PhantomReference;
Asciz	<init>;
Asciz	(Ljava/lang/Object;Lscala/ref/ReferenceQueue;)V;
Asciz	java/lang/Object;
class	java/lang/Object
NameAndType	"<init>":()V
Method	java/lang/Object."<init>":()V
Asciz	$init$;
NameAndType	$init$:(Lscala/Function0;)V
Method	scala/Function0$class.$init$:(Lscala/Function0;)V
Asciz	scala/ref/Reference$class;
class	scala/ref/Reference$class
Asciz	(Lscala/ref/Reference;)V;
NameAndType	$init$:(Lscala/ref/Reference;)V
Method	scala/ref/Reference$class.$init$:(Lscala/ref/Reference;)V
Asciz	(Lscala/Proxy;)V;
NameAndType	$init$:(Lscala/Proxy;)V
Method	scala/Proxy$class.$init$:(Lscala/Proxy;)V
NameAndType	$init$:(Lscala/ref/ReferenceWrapper;)V
Method	scala/ref/ReferenceWrapper$class.$init$:(Lscala/ref/ReferenceWrapper;)V
Asciz	scala/ref/PhantomReferenceWithWrapper;
class	scala/ref/PhantomReferenceWithWrapper
Asciz	(Ljava/lang/Object;Lscala/ref/ReferenceQueue;Lscala/ref/PhantomReference;)V;
NameAndType	"<init>":(Ljava/lang/Object;Lscala/ref/ReferenceQueue;Lscala/ref/PhantomReference;)V
Method	scala/ref/PhantomReferenceWithWrapper."<init>":(Ljava/lang/Object;Lscala/ref/ReferenceQueue;Lscala/ref/PhantomReference;)V
Asciz	value;
Asciz	queue;
Asciz	Lscala/ref/ReferenceQueue;;
Asciz	(TT;Lscala/ref/ReferenceQueue<TT;>;)V;
Asciz	ScalaSig;
Asciz	<T:Ljava/lang/Object;>Ljava/lang/Object;Lscala/ref/ReferenceWrapper<TT;>;Lscala/ScalaObject;;
Asciz	Lscala/reflect/ScalaSignature;;
Asciz	bytes;
Asciz	\r3A!\t[1oi>l'+4fet7-\t1A]3g)!B:dC27A]BACA!bD)A\"DYtwMCQM^1\nAY!AB(cUGE'UiAA)\tCU3gKJ,gnY3Xe/:Y9B\t1!\t\"b3\t\tA+=A1H\t%Q>$.8h!\tYr$!\t\t1I\=SK\"a\n\r\"!aC*dC2wJ6fGRD\"\nI!FmdW/\tO\t)AQ)/^3vKB!#K\n)!A*fMXM\2f#V,W/Y!\t!Ly%t 9zEUAQ!JAUAQaJA!BqA\rC1'v],'\=j],ki2A:9$BA\t\tquA1CAHA`IE\n\"AG\t\ry!@-)hZ3sYfLgn1c9BaC\tw!\t!By;
Asciz	RuntimeVisibleAnnotations;
Asciz	scala/ScalaObject;
class	scala/ScalaObject

{
private final java.lang.ref.PhantomReference underlying;
  Signature: Ljava/lang/ref/PhantomReference;
  Signature: length = 0x2
   00 05 

public scala.Option get();
  Signature: ()Lscala/Option;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokestatic	Method scala/ref/ReferenceWrapper$class.get:(Lscala/ref/ReferenceWrapper;)Lscala/Option;
	areturn
  Labels:

public java.lang.Object apply();
  Signature: ()Ljava/lang/Object;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokestatic	Method scala/ref/ReferenceWrapper$class.apply:(Lscala/ref/ReferenceWrapper;)Ljava/lang/Object;
	areturn
  Labels:

public void clear();
  Signature: ()V
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokestatic	Method scala/ref/ReferenceWrapper$class.clear:(Lscala/ref/ReferenceWrapper;)V
	return
  Labels:

public boolean enqueue();
  Signature: ()Z
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokestatic	Method scala/ref/ReferenceWrapper$class.enqueue:(Lscala/ref/ReferenceWrapper;)Z
	ireturn
  Labels:

public boolean isEnqueued();
  Signature: ()Z
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokestatic	Method scala/ref/ReferenceWrapper$class.isEnqueued:(Lscala/ref/ReferenceWrapper;)Z
	ireturn
  Labels:

public java.lang.ref.Reference self();
  Signature: ()Ljava/lang/ref/Reference;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokestatic	Method scala/ref/ReferenceWrapper$class.self:(Lscala/ref/ReferenceWrapper;)Ljava/lang/ref/Reference;
	areturn
  Labels:

public int hashCode();
  Signature: ()I
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokestatic	Method scala/Proxy$class.hashCode:(Lscala/Proxy;)I
	ireturn
  Labels:

public boolean equals(java.lang.Object);
  Signature: (Ljava/lang/Object;)Z
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokestatic	Method scala/Proxy$class.equals:(Lscala/Proxy;Ljava/lang/Object;)Z
	ireturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/ref/PhantomReference;
   0      6      1    that       Ljava/lang/Object;


public java.lang.String toString();
  Signature: ()Ljava/lang/String;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokestatic	Method scala/Proxy$class.toString:(Lscala/Proxy;)Ljava/lang/String;
	areturn
  Labels:

public void apply$mcV$sp();
  Signature: ()V
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokestatic	Method scala/Function0$class.apply$mcV$sp:(Lscala/Function0;)V
	return
  Labels:

public boolean apply$mcZ$sp();
  Signature: ()Z
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokestatic	Method scala/Function0$class.apply$mcZ$sp:(Lscala/Function0;)Z
	ireturn
  Labels:

public byte apply$mcB$sp();
  Signature: ()B
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokestatic	Method scala/Function0$class.apply$mcB$sp:(Lscala/Function0;)B
	ireturn
  Labels:

public short apply$mcS$sp();
  Signature: ()S
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokestatic	Method scala/Function0$class.apply$mcS$sp:(Lscala/Function0;)S
	ireturn
  Labels:

public char apply$mcC$sp();
  Signature: ()C
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokestatic	Method scala/Function0$class.apply$mcC$sp:(Lscala/Function0;)C
	ireturn
  Labels:

public int apply$mcI$sp();
  Signature: ()I
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokestatic	Method scala/Function0$class.apply$mcI$sp:(Lscala/Function0;)I
	ireturn
  Labels:

public long apply$mcL$sp();
  Signature: ()J
  Code:
   Stack=2, Locals=1, Args_size=1
	aload_0
	invokestatic	Method scala/Function0$class.apply$mcL$sp:(Lscala/Function0;)J
	lreturn
  Labels:

public float apply$mcF$sp();
  Signature: ()F
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokestatic	Method scala/Function0$class.apply$mcF$sp:(Lscala/Function0;)F
	freturn
  Labels:

public double apply$mcD$sp();
  Signature: ()D
  Code:
   Stack=2, Locals=1, Args_size=1
	aload_0
	invokestatic	Method scala/Function0$class.apply$mcD$sp:(Lscala/Function0;)D
	dreturn
  Labels:

public java.lang.ref.PhantomReference underlying();
  Signature: ()Ljava/lang/ref/PhantomReference;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field underlying:Ljava/lang/ref/PhantomReference;
	areturn
  Labels:
  Signature: length = 0x2
   00 6E 

public java.lang.Object self();
  Signature: ()Ljava/lang/Object;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokeinterface	InterfaceMethod scala/ref/ReferenceWrapper.self:()Ljava/lang/ref/Reference;
	areturn
  Labels:

public java.lang.ref.Reference underlying();
  Signature: ()Ljava/lang/ref/Reference;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokevirtual	Method underlying:()Ljava/lang/ref/PhantomReference;
	areturn
  Labels:

public scala.ref.PhantomReference(java.lang.Object, scala.ref.ReferenceQueue);
  Signature: (Ljava/lang/Object;Lscala/ref/ReferenceQueue;)V
  Code:
   Stack=6, Locals=3, Args_size=3
	aload_0
	invokespecial	Method java/lang/Object."<init>":()V
	aload_0
	invokestatic	Method scala/Function0$class.$init$:(Lscala/Function0;)V
	aload_0
	invokestatic	Method scala/ref/Reference$class.$init$:(Lscala/ref/Reference;)V
	aload_0
	invokestatic	Method scala/Proxy$class.$init$:(Lscala/Proxy;)V
	aload_0
	invokestatic	Method scala/ref/ReferenceWrapper$class.$init$:(Lscala/ref/ReferenceWrapper;)V
	aload_0
	new	class scala/ref/PhantomReferenceWithWrapper
	dup
	aload_1
	aload_2
	aload_0
	invokespecial	Method scala/ref/PhantomReferenceWithWrapper."<init>":(Ljava/lang/Object;Lscala/ref/ReferenceQueue;Lscala/ref/PhantomReference;)V
	putfield	Field underlying:Ljava/lang/ref/PhantomReference;
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      35      0    this       Lscala/ref/PhantomReference;
   0      35      1    value       Ljava/lang/Object;
   0      35      2    queue       Lscala/ref/ReferenceQueue;

  Signature: length = 0x2
   00 FFFFFF90 

}

