Compiled from "BigInt.scala"
public class scala.BigInt extends java.lang.Number implements scala.ScalaObject,java.io.Serializable
  SourceFile: "BigInt.scala"
  ScalaSig: length = 0xA71
   05 00 FFFFFF82 6A 07 05 01 02 FFFFFF88 02 05 01 06 42 69 67
   49 6E 74 0A 01 03 01 05 73 63 61 6C 61 03 00 10
   02 06 07 0D 01 02 06 08 08 02 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF88 02 09
   02 06 42 69 67 49 6E 74 13 03 07 0A 12 10 02 0B
   10 0D 01 0C 0A 02 0D 0E 01 04 6C 61 6E 67 0A 01
   0F 01 04 6A 61 76 61 09 02 11 0C 02 06 4F 62 6A
   65 63 74 10 02 06 13 09 02 14 02 02 0B 53 63 61
   6C 61 4F 62 6A 65 63 74 08 05 16 07 FFFFFF84 00 17 01
   06 3C 69 6E 69 74 3E 14 01 05 08 07 19 07 FFFFFFC2 FFFFFF80
   FFFFFF84 04 1A 01 09 6D 69 6E 43 61 63 68 65 64 15 01
   1B 10 02 06 1C 09 02 1D 02 02 03 49 6E 74 08 06
   1F 07 FFFFFFA0 FFFFFF80 04 1B 01 0A 6D 69 6E 43 61 63 68 65
   64 20 08 07 21 07 FFFFFFC2 FFFFFF80 FFFFFF84 04 1A 01 09 6D 61 78
   43 61 63 68 65 64 08 06 23 07 FFFFFFA0 FFFFFF80 04 1B 01 0A
   6D 61 78 43 61 63 68 65 64 20 08 07 25 07 FFFFFFC2 FFFFFF80
   FFFFFF84 04 26 01 05 63 61 63 68 65 15 01 27 10 03 06
   28 2A 09 02 29 02 02 05 41 72 72 61 79 10 02 06
   2B 06 08 08 02 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF80 00 2C 13 03 2B 2D 12
   10 02 0B 2E 09 02 2F 0C 02 06 4E 75 6D 62 65 72
   08 08 31 2B FFFFFF82 FFFFFFC2 FFFFFF80 FFFFFF84 00 32 01 0A 62 69 67 49
   6E 74 65 67 65 72 15 01 33 10 02 34 37 0D 01 35
   0A 02 36 0E 01 04 6D 61 74 68 09 02 38 35 02 0A
   42 69 67 49 6E 74 65 67 65 72 08 08 3A 2B FFFFFF82 FFFFFF80
   FFFFFFA0 FFFFFF80 04 33 01 0B 62 69 67 49 6E 74 65 67 65 72
   20 08 05 16 2B FFFFFF84 00 3C 14 02 2A 3D 08 05 31 3B
   FFFFFFC0 00 33 08 05 3F 2B FFFFFF84 20 40 01 08 68 61 73 68
   43 6F 64 65 14 01 1B 08 05 42 2B FFFFFF84 20 43 01 06
   65 71 75 61 6C 73 14 02 44 47 10 02 06 45 09 02
   46 02 02 07 42 6F 6F 6C 65 61 6E 08 05 48 41 FFFFFFC0
   00 49 01 04 74 68 61 74 10 02 06 4A 09 02 4B 02
   02 03 41 6E 79 08 05 42 2B FFFFFF84 00 4D 14 02 44 4E
   08 05 48 4C FFFFFFC0 00 2A 08 05 50 2B FFFFFF84 00 51 01 07
   63 6F 6D 70 61 72 65 14 02 1B 52 08 05 48 4F FFFFFFC0
   00 2A 08 05 54 2B FFFFFF84 00 55 01 08 24 6C 65 73 73
   24 65 71 14 02 44 56 08 05 48 53 FFFFFFC0 00 2A 08 05
   58 2B FFFFFF84 00 59 01 0B 24 67 72 65 61 74 65 72 24
   65 71 14 02 44 5A 08 05 48 57 FFFFFFC0 00 2A 08 05 5C
   2B FFFFFF84 00 5D 01 05 24 6C 65 73 73 14 02 44 5E 08
   05 48 5B FFFFFFC0 00 2A 08 05 60 2B FFFFFF84 00 61 01 08 24
   67 72 65 61 74 65 72 14 02 44 62 08 05 48 5F FFFFFFC0
   00 2A 08 05 64 2B FFFFFF84 00 65 01 05 24 70 6C 75 73
   14 02 2A 66 08 05 48 63 FFFFFFC0 00 2A 08 05 68 2B FFFFFF84
   00 69 01 06 24 6D 69 6E 75 73 14 02 2A 6A 08 05
   48 67 FFFFFFC0 00 2A 08 05 6C 2B FFFFFF84 00 6D 01 06 24 74
   69 6D 65 73 14 02 2A 6E 08 05 48 6B FFFFFFC0 00 2A 08
   05 70 2B FFFFFF84 00 71 01 04 24 64 69 76 14 02 2A 72
   08 05 48 6F FFFFFFC0 00 2A 08 05 74 2B FFFFFF84 00 75 01 08
   24 70 65 72 63 65 6E 74 14 02 2A 76 08 05 48 73
   FFFFFFC0 00 2A 08 05 78 2B FFFFFF84 00 79 01 0C 24 64 69 76
   24 70 65 72 63 65 6E 74 14 02 7A 7D 10 04 06 7B
   2A 2A 09 02 7C 02 02 06 54 75 70 6C 65 32 08 05
   48 77 FFFFFFC0 00 2A 08 06 7F 2B FFFFFF84 00 FFFFFF81 00 01 0A 24
   6C 65 73 73 24 6C 65 73 73 14 03 2A FFFFFF81 01 08 06
   FFFFFF81 02 7E FFFFFFC0 00 1B 01 01 6E 08 07 FFFFFF81 04 2B FFFFFF84 00
   FFFFFF81 05 01 10 24 67 72 65 61 74 65 72 24 67 72 65
   61 74 65 72 14 03 2A FFFFFF81 06 08 07 FFFFFF81 02 FFFFFF81 03 FFFFFFC0
   00 1B 08 07 FFFFFF81 08 2B FFFFFF84 00 FFFFFF81 09 01 04 24 61 6D
   70 14 03 2A FFFFFF81 0A 08 06 48 FFFFFF81 07 FFFFFFC0 00 2A 08 07
   FFFFFF81 0C 2B FFFFFF84 00 FFFFFF81 0D 01 04 24 62 61 72 14 03 2A
   FFFFFF81 0E 08 06 48 FFFFFF81 0B FFFFFFC0 00 2A 08 07 FFFFFF81 10 2B FFFFFF84
   00 FFFFFF81 11 01 03 24 75 70 14 03 2A FFFFFF81 12 08 06 48
   FFFFFF81 0F FFFFFFC0 00 2A 08 07 FFFFFF81 14 2B FFFFFF84 00 FFFFFF81 15 01 0A
   24 61 6D 70 24 74 69 6C 64 65 14 03 2A FFFFFF81 16 08
   06 48 FFFFFF81 13 FFFFFFC0 00 2A 08 07 FFFFFF81 18 2B FFFFFF84 00 FFFFFF81 19
   01 03 67 63 64 14 03 2A FFFFFF81 1A 08 06 48 FFFFFF81 17 FFFFFFC0
   00 2A 08 07 FFFFFF81 1C 2B FFFFFF84 00 FFFFFF81 1D 01 03 6D 6F 64
   14 03 2A FFFFFF81 1E 08 06 48 FFFFFF81 1B FFFFFFC0 00 2A 08 07 FFFFFF81
   20 2B FFFFFF84 00 FFFFFF81 21 01 03 6D 69 6E 14 03 2A FFFFFF81 22
   08 06 48 FFFFFF81 1F FFFFFFC0 00 2A 08 07 FFFFFF81 24 2B FFFFFF84 00 FFFFFF81
   25 01 03 6D 61 78 14 03 2A FFFFFF81 26 08 06 48 FFFFFF81 23
   FFFFFFC0 00 2A 08 07 FFFFFF81 28 2B FFFFFF84 00 FFFFFF81 29 01 03 70 6F
   77 14 03 2A FFFFFF81 2A 08 07 FFFFFF81 2B FFFFFF81 27 FFFFFFC0 00 1B 01
   03 65 78 70 08 07 FFFFFF81 2D 2B FFFFFF84 00 FFFFFF81 2E 01 06 6D
   6F 64 50 6F 77 14 05 2A FFFFFF81 2F FFFFFF81 30 08 07 FFFFFF81 2B
   FFFFFF81 2C FFFFFFC0 00 2A 08 07 FFFFFF81 31 FFFFFF81 2C FFFFFFC0 00 2A 01 01
   6D 08 07 FFFFFF81 33 2B FFFFFF84 00 FFFFFF81 34 01 0A 6D 6F 64 49
   6E 76 65 72 73 65 14 03 2A FFFFFF81 35 08 07 FFFFFF81 31 FFFFFF81
   32 FFFFFFC0 00 2A 08 07 FFFFFF81 37 2B FFFFFF84 00 FFFFFF81 38 01 0C 75
   6E 61 72 79 5F 24 6D 69 6E 75 73 15 01 2A 08 07
   FFFFFF81 3A 2B FFFFFF84 00 FFFFFF81 38 01 03 61 62 73 08 06 FFFFFF81 3C
   2B FFFFFF84 00 1A 01 06 73 69 67 6E 75 6D 08 07 FFFFFF81 3E
   2B FFFFFF84 00 FFFFFF81 38 01 06 24 74 69 6C 64 65 08 07 FFFFFF81
   40 2B FFFFFF84 00 FFFFFF81 41 01 07 74 65 73 74 42 69 74 14
   03 44 FFFFFF81 42 08 07 FFFFFF81 02 FFFFFF81 3F FFFFFFC0 00 1B 08 07 FFFFFF81
   44 2B FFFFFF84 00 FFFFFF81 45 01 06 73 65 74 42 69 74 14 03
   2A FFFFFF81 46 08 07 FFFFFF81 02 FFFFFF81 43 FFFFFFC0 00 1B 08 07 FFFFFF81 48
   2B FFFFFF84 00 FFFFFF81 49 01 08 63 6C 65 61 72 42 69 74 14
   03 2A FFFFFF81 4A 08 07 FFFFFF81 02 FFFFFF81 47 FFFFFFC0 00 1B 08 07 FFFFFF81
   4C 2B FFFFFF84 00 FFFFFF81 4D 01 07 66 6C 69 70 42 69 74 14
   03 2A FFFFFF81 4E 08 07 FFFFFF81 02 FFFFFF81 4B FFFFFFC0 00 1B 08 06 FFFFFF81
   50 2B FFFFFF84 00 1A 01 0C 6C 6F 77 65 73 74 53 65 74
   42 69 74 08 06 FFFFFF81 52 2B FFFFFF84 00 1A 01 09 62 69 74
   4C 65 6E 67 74 68 08 06 FFFFFF81 54 2B FFFFFF84 00 1A 01 08
   62 69 74 43 6F 75 6E 74 08 07 FFFFFF81 56 2B FFFFFF84 00 FFFFFF81
   57 01 0F 69 73 50 72 6F 62 61 62 6C 65 50 72 69
   6D 65 14 03 44 FFFFFF81 58 08 07 FFFFFF81 59 FFFFFF81 55 FFFFFFC0 00 1B
   01 09 63 65 72 74 61 69 6E 74 79 08 07 FFFFFF81 5B 2B
   FFFFFF84 20 FFFFFF81 5C 01 09 62 79 74 65 56 61 6C 75 65 14
   02 FFFFFF81 5D 10 03 06 FFFFFF81 5E 09 03 FFFFFF81 5F 02 02 04 42
   79 74 65 08 07 FFFFFF81 61 2B FFFFFF84 20 FFFFFF81 62 01 0A 73 68
   6F 72 74 56 61 6C 75 65 14 02 FFFFFF81 63 10 03 06 FFFFFF81
   64 09 03 FFFFFF81 65 02 02 05 53 68 6F 72 74 08 07 FFFFFF81
   67 2B FFFFFF84 00 FFFFFF81 68 01 09 63 68 61 72 56 61 6C 75
   65 15 02 FFFFFF81 69 10 03 06 FFFFFF81 6A 09 03 FFFFFF81 6B 02 02
   04 43 68 61 72 08 06 FFFFFF81 6D 2B FFFFFF84 00 40 01 08 69
   6E 74 56 61 6C 75 65 08 07 FFFFFF81 6F 2B FFFFFF84 00 FFFFFF81 70
   01 09 6C 6F 6E 67 56 61 6C 75 65 14 02 FFFFFF81 71 10
   03 06 FFFFFF81 72 09 03 FFFFFF81 73 02 02 04 4C 6F 6E 67 08
   07 FFFFFF81 75 2B FFFFFF84 00 FFFFFF81 76 01 0A 66 6C 6F 61 74 56
   61 6C 75 65 14 02 FFFFFF81 77 10 03 06 FFFFFF81 78 09 03 FFFFFF81
   79 02 02 05 46 6C 6F 61 74 08 07 FFFFFF81 7B 2B FFFFFF84 00
   FFFFFF81 7C 01 0B 64 6F 75 62 6C 65 56 61 6C 75 65 14
   02 FFFFFF81 7D 10 03 06 FFFFFF81 7E 09 03 FFFFFF81 7F 02 02 06 44
   6F 75 62 6C 65 08 07 FFFFFF82 01 2B FFFFFF84 00 FFFFFF82 02 01 05
   75 6E 74 69 6C 14 06 FFFFFF82 03 FFFFFF82 0A FFFFFF82 0C 10 05 FFFFFF82
   04 FFFFFF82 07 2A 0E 03 06 FFFFFF82 05 09 03 FFFFFF82 06 02 01 0C
   47 65 6E 65 72 69 63 52 61 6E 67 65 09 04 FFFFFF82 08
   FFFFFF82 09 02 09 45 78 63 6C 75 73 69 76 65 0A 03 FFFFFF82
   06 02 08 07 FFFFFF82 0B FFFFFF82 00 FFFFFFC0 00 2A 01 03 65 6E 64
   08 0B FFFFFF82 0E FFFFFF82 0D FFFFFF82 00 FFFFFF90 FFFFFF80 FFFFFFC0 00 2A 01 04 73
   74 65 70 08 09 FFFFFF82 0F 2B FFFFFF91 FFFFFF80 FFFFFF84 00 FFFFFF81 38 01 0F
   75 6E 74 69 6C 24 64 65 66 61 75 6C 74 24 32 08
   07 FFFFFF82 11 2B FFFFFF84 00 FFFFFF82 12 01 02 74 6F 14 06 FFFFFF82 13
   FFFFFF82 16 FFFFFF82 17 10 05 FFFFFF82 04 FFFFFF82 14 2A 09 04 FFFFFF82 15 FFFFFF82
   09 02 09 49 6E 63 6C 75 73 69 76 65 08 07 FFFFFF82 0B
   FFFFFF82 10 FFFFFFC0 00 2A 08 0B FFFFFF82 18 FFFFFF82 0D FFFFFF82 10 FFFFFF90 FFFFFF80 FFFFFFC0
   00 2A 08 09 FFFFFF82 19 2B FFFFFF91 FFFFFF80 FFFFFF84 00 FFFFFF81 38 01 0C 74
   6F 24 64 65 66 61 75 6C 74 24 32 08 07 FFFFFF82 1B 2B
   FFFFFF84 20 FFFFFF82 1C 01 08 74 6F 53 74 72 69 6E 67 14 02
   FFFFFF82 1D 10 04 FFFFFF82 1E FFFFFF82 21 0E 03 06 FFFFFF82 1F 09 03 FFFFFF82
   20 02 01 06 50 72 65 64 65 66 09 04 FFFFFF82 22 FFFFFF82 23
   02 06 53 74 72 69 6E 67 0A 03 FFFFFF82 20 02 08 07 FFFFFF82
   1B 2B FFFFFF84 00 FFFFFF82 25 14 04 FFFFFF82 1D FFFFFF82 26 08 07 FFFFFF82 27
   FFFFFF82 24 FFFFFFC0 00 1B 01 05 72 61 64 69 78 08 07 FFFFFF82 29
   2B FFFFFF84 00 FFFFFF82 2A 01 0B 74 6F 42 79 74 65 41 72 72
   61 79 15 02 FFFFFF82 2B 10 04 06 28 FFFFFF81 5D 28 03 2B FFFFFF82
   2D 10 03 06 FFFFFF82 2E 09 03 FFFFFF82 2F 02 02 0C 73 65 72
   69 61 6C 69 7A 61 62 6C 65 08 07 FFFFFF82 31 07 FFFFFFA0 FFFFFF80
   04 27 01 06 63 61 63 68 65 20 08 07 FFFFFF82 33 07 FFFFFF84
   00 FFFFFF82 34 01 05 61 70 70 6C 79 14 03 2A FFFFFF82 35 08
   07 FFFFFF82 36 FFFFFF82 32 FFFFFFC0 00 1B 01 01 69 08 07 FFFFFF82 33 07
   FFFFFF84 00 FFFFFF82 38 14 03 2A FFFFFF82 39 08 08 FFFFFF82 3A FFFFFF82 37 FFFFFFC0
   00 FFFFFF81 71 01 01 6C 08 07 FFFFFF82 33 07 FFFFFF84 00 FFFFFF82 3C 14
   03 2A FFFFFF82 3D 08 08 FFFFFF82 3E FFFFFF82 3B FFFFFFC0 00 FFFFFF82 2B 01 01
   78 08 07 FFFFFF82 33 07 FFFFFF84 00 FFFFFF82 40 14 05 2A FFFFFF82 41 FFFFFF82
   42 08 07 FFFFFF81 3C FFFFFF82 3F FFFFFFC0 00 1B 08 08 FFFFFF82 43 FFFFFF82 3F
   FFFFFFC0 00 FFFFFF82 2B 01 09 6D 61 67 6E 69 74 75 64 65 08
   07 FFFFFF82 33 07 FFFFFF84 00 FFFFFF82 45 14 07 2A FFFFFF82 46 FFFFFF82 48 FFFFFF82
   49 08 07 FFFFFF82 47 FFFFFF82 44 FFFFFFC0 00 1B 01 09 62 69 74 6C
   65 6E 67 74 68 08 07 FFFFFF81 59 FFFFFF82 44 FFFFFFC0 00 1B 08 08
   FFFFFF82 4A FFFFFF82 44 FFFFFFC0 00 FFFFFF82 4B 01 03 72 6E 64 10 04 FFFFFF82
   4C FFFFFF82 4F 0D 02 FFFFFF82 4D 0A 03 FFFFFF82 4E 02 01 04 75 74
   69 6C 09 04 FFFFFF82 50 FFFFFF82 4D 02 06 52 61 6E 64 6F 6D
   08 07 FFFFFF82 33 07 FFFFFF84 00 FFFFFF82 52 14 05 2A FFFFFF82 53 FFFFFF82 55
   08 07 FFFFFF82 54 FFFFFF82 51 FFFFFFC0 00 1B 01 07 6E 75 6D 62 69
   74 73 08 08 FFFFFF82 4A FFFFFF82 51 FFFFFFC0 00 FFFFFF82 4B 08 07 FFFFFF82 33
   07 FFFFFF84 00 FFFFFF82 57 14 03 2A FFFFFF82 58 08 08 FFFFFF82 3E FFFFFF82 56
   FFFFFFC0 00 FFFFFF82 1D 08 07 FFFFFF82 33 07 FFFFFF84 00 FFFFFF82 5A 14 05 2A
   FFFFFF82 5B FFFFFF82 5C 08 08 FFFFFF82 3E FFFFFF82 59 FFFFFFC0 00 FFFFFF82 1D 08 07
   FFFFFF82 27 FFFFFF82 59 FFFFFFC0 00 1B 08 07 FFFFFF82 5E 07 FFFFFF84 00 FFFFFF82 5F
   01 0D 70 72 6F 62 61 62 6C 65 50 72 69 6D 65 14
   05 2A FFFFFF82 60 FFFFFF82 61 08 07 FFFFFF81 52 FFFFFF82 5D FFFFFFC0 00 1B 08
   08 FFFFFF82 4A FFFFFF82 5D FFFFFFC0 00 FFFFFF82 4B 08 07 FFFFFF82 63 07 FFFFFF84 01
   FFFFFF82 64 01 0A 69 6E 74 32 62 69 67 49 6E 74 14 03
   2A FFFFFF82 65 08 07 FFFFFF82 36 FFFFFF82 62 FFFFFFC0 00 1B 08 07 FFFFFF82 67
   07 FFFFFF84 01 FFFFFF82 68 01 0B 6C 6F 6E 67 32 62 69 67 49
   6E 74 14 03 2A FFFFFF82 69 08 08 FFFFFF82 3A FFFFFF82 66 FFFFFFC0 00 FFFFFF81
   71 
  InnerClass: 
   public #257= #254 of #256; //Inclusive=class scala/GenericRange$Inclusive of class scala/GenericRange
   public #260= #259 of #256; //Exclusive=class scala/GenericRange$Exclusive of class scala/GenericRange
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	BigInt.scala;
const #3 = Asciz	bigInteger;
const #4 = Asciz	Ljava/math/BigInteger;;
const #5 = Asciz	<init>;
const #6 = Asciz	(Ljava/math/BigInteger;)V;
const #7 = Asciz	Code;
const #8 = Asciz	LineNumberTable;
const #9 = Asciz	scala/BigInt;
const #10 = class	#9;	//  scala/BigInt
const #11 = NameAndType	#3:#4;//  bigInteger:Ljava/math/BigInteger;
const #12 = Field	#10.#11;	//  scala/BigInt.bigInteger:Ljava/math/BigInteger;
const #13 = Asciz	java/lang/Number;
const #14 = class	#13;	//  java/lang/Number
const #15 = Asciz	()V;
const #16 = NameAndType	#5:#15;//  "<init>":()V
const #17 = Method	#14.#16;	//  java/lang/Number."<init>":()V
const #18 = Asciz	this;
const #19 = Asciz	Lscala/BigInt;;
const #20 = Asciz	LocalVariableTable;
const #21 = Asciz	until$default$2;
const #22 = Asciz	()Lscala/BigInt;;
const #23 = Asciz	scala/BigInt$;
const #24 = class	#23;	//  scala/BigInt$
const #25 = Asciz	MODULE$;
const #26 = Asciz	Lscala/BigInt$;;
const #27 = NameAndType	#25:#26;//  MODULE$:Lscala/BigInt$;
const #28 = Field	#24.#27;	//  scala/BigInt$.MODULE$:Lscala/BigInt$;
const #29 = Asciz	apply;
const #30 = Asciz	(I)Lscala/BigInt;;
const #31 = NameAndType	#29:#30;//  apply:(I)Lscala/BigInt;
const #32 = Method	#24.#31;	//  scala/BigInt$.apply:(I)Lscala/BigInt;
const #33 = Asciz	to$default$2;
const #34 = Asciz	toByteArray;
const #35 = Asciz	()[B;
const #36 = Asciz	()Ljava/math/BigInteger;;
const #37 = NameAndType	#3:#36;//  bigInteger:()Ljava/math/BigInteger;
const #38 = Method	#10.#37;	//  scala/BigInt.bigInteger:()Ljava/math/BigInteger;
const #39 = Asciz	java/math/BigInteger;
const #40 = class	#39;	//  java/math/BigInteger
const #41 = NameAndType	#34:#35;//  toByteArray:()[B
const #42 = Method	#40.#41;	//  java/math/BigInteger.toByteArray:()[B
const #43 = Asciz	toString;
const #44 = Asciz	(I)Ljava/lang/String;;
const #45 = NameAndType	#43:#44;//  toString:(I)Ljava/lang/String;
const #46 = Method	#40.#45;	//  java/math/BigInteger.toString:(I)Ljava/lang/String;
const #47 = Asciz	radix;
const #48 = Asciz	I;
const #49 = Asciz	()Ljava/lang/String;;
const #50 = NameAndType	#43:#49;//  toString:()Ljava/lang/String;
const #51 = Method	#40.#50;	//  java/math/BigInteger.toString:()Ljava/lang/String;
const #52 = Asciz	to;
const #53 = Asciz	(Lscala/BigInt;Lscala/BigInt;)Lscala/GenericRange$Inclusive;;
const #54 = Asciz	scala/Range$BigInt$;
const #55 = class	#54;	//  scala/Range$BigInt$
const #56 = Asciz	Lscala/Range$BigInt$;;
const #57 = NameAndType	#25:#56;//  MODULE$:Lscala/Range$BigInt$;
const #58 = Field	#55.#57;	//  scala/Range$BigInt$.MODULE$:Lscala/Range$BigInt$;
const #59 = Asciz	inclusive;
const #60 = Asciz	(Lscala/BigInt;Lscala/BigInt;Lscala/BigInt;)Lscala/GenericRange$Inclusive;;
const #61 = NameAndType	#59:#60;//  inclusive:(Lscala/BigInt;Lscala/BigInt;Lscala/BigInt;)Lscala/GenericRange$Inclusive;
const #62 = Method	#55.#61;	//  scala/Range$BigInt$.inclusive:(Lscala/BigInt;Lscala/BigInt;Lscala/BigInt;)Lscala/GenericRange$Inclusive;
const #63 = Asciz	end;
const #64 = Asciz	step;
const #65 = Asciz	(Lscala/BigInt;Lscala/BigInt;)Lscala/GenericRange$Inclusive<Lscala/BigInt;>;;
const #66 = Asciz	Signature;
const #67 = Asciz	until;
const #68 = Asciz	(Lscala/BigInt;Lscala/BigInt;)Lscala/GenericRange$Exclusive;;
const #69 = Asciz	(Lscala/BigInt;Lscala/BigInt;Lscala/BigInt;)Lscala/GenericRange$Exclusive;;
const #70 = NameAndType	#29:#69;//  apply:(Lscala/BigInt;Lscala/BigInt;Lscala/BigInt;)Lscala/GenericRange$Exclusive;
const #71 = Method	#55.#70;	//  scala/Range$BigInt$.apply:(Lscala/BigInt;Lscala/BigInt;Lscala/BigInt;)Lscala/GenericRange$Exclusive;
const #72 = Asciz	(Lscala/BigInt;Lscala/BigInt;)Lscala/GenericRange$Exclusive<Lscala/BigInt;>;;
const #73 = Asciz	doubleValue;
const #74 = Asciz	()D;
const #75 = NameAndType	#73:#74;//  doubleValue:()D
const #76 = Method	#40.#75;	//  java/math/BigInteger.doubleValue:()D
const #77 = Asciz	floatValue;
const #78 = Asciz	()F;
const #79 = NameAndType	#77:#78;//  floatValue:()F
const #80 = Method	#40.#79;	//  java/math/BigInteger.floatValue:()F
const #81 = Asciz	longValue;
const #82 = Asciz	()J;
const #83 = NameAndType	#81:#82;//  longValue:()J
const #84 = Method	#40.#83;	//  java/math/BigInteger.longValue:()J
const #85 = Asciz	intValue;
const #86 = Asciz	()I;
const #87 = NameAndType	#85:#86;//  intValue:()I
const #88 = Method	#40.#87;	//  java/math/BigInteger.intValue:()I
const #89 = Asciz	charValue;
const #90 = Asciz	()C;
const #91 = Method	#10.#87;	//  scala/BigInt.intValue:()I
const #92 = Asciz	shortValue;
const #93 = Asciz	()S;
const #94 = Asciz	byteValue;
const #95 = Asciz	()B;
const #96 = Asciz	isProbablePrime;
const #97 = Asciz	(I)Z;
const #98 = NameAndType	#96:#97;//  isProbablePrime:(I)Z
const #99 = Method	#40.#98;	//  java/math/BigInteger.isProbablePrime:(I)Z
const #100 = Asciz	certainty;
const #101 = Asciz	bitCount;
const #102 = NameAndType	#101:#86;//  bitCount:()I
const #103 = Method	#40.#102;	//  java/math/BigInteger.bitCount:()I
const #104 = Asciz	bitLength;
const #105 = NameAndType	#104:#86;//  bitLength:()I
const #106 = Method	#40.#105;	//  java/math/BigInteger.bitLength:()I
const #107 = Asciz	lowestSetBit;
const #108 = Asciz	getLowestSetBit;
const #109 = NameAndType	#108:#86;//  getLowestSetBit:()I
const #110 = Method	#40.#109;	//  java/math/BigInteger.getLowestSetBit:()I
const #111 = Asciz	flipBit;
const #112 = Asciz	(I)Ljava/math/BigInteger;;
const #113 = NameAndType	#111:#112;//  flipBit:(I)Ljava/math/BigInteger;
const #114 = Method	#40.#113;	//  java/math/BigInteger.flipBit:(I)Ljava/math/BigInteger;
const #115 = NameAndType	#5:#6;//  "<init>":(Ljava/math/BigInteger;)V
const #116 = Method	#10.#115;	//  scala/BigInt."<init>":(Ljava/math/BigInteger;)V
const #117 = Asciz	n;
const #118 = Asciz	clearBit;
const #119 = NameAndType	#118:#112;//  clearBit:(I)Ljava/math/BigInteger;
const #120 = Method	#40.#119;	//  java/math/BigInteger.clearBit:(I)Ljava/math/BigInteger;
const #121 = Asciz	setBit;
const #122 = NameAndType	#121:#112;//  setBit:(I)Ljava/math/BigInteger;
const #123 = Method	#40.#122;	//  java/math/BigInteger.setBit:(I)Ljava/math/BigInteger;
const #124 = Asciz	testBit;
const #125 = NameAndType	#124:#97;//  testBit:(I)Z
const #126 = Method	#40.#125;	//  java/math/BigInteger.testBit:(I)Z
const #127 = Asciz	$tilde;
const #128 = Asciz	not;
const #129 = NameAndType	#128:#36;//  not:()Ljava/math/BigInteger;
const #130 = Method	#40.#129;	//  java/math/BigInteger.not:()Ljava/math/BigInteger;
const #131 = Asciz	signum;
const #132 = NameAndType	#131:#86;//  signum:()I
const #133 = Method	#40.#132;	//  java/math/BigInteger.signum:()I
const #134 = Asciz	abs;
const #135 = NameAndType	#134:#36;//  abs:()Ljava/math/BigInteger;
const #136 = Method	#40.#135;	//  java/math/BigInteger.abs:()Ljava/math/BigInteger;
const #137 = Asciz	unary_$minus;
const #138 = Asciz	negate;
const #139 = NameAndType	#138:#36;//  negate:()Ljava/math/BigInteger;
const #140 = Method	#40.#139;	//  java/math/BigInteger.negate:()Ljava/math/BigInteger;
const #141 = Asciz	modInverse;
const #142 = Asciz	(Lscala/BigInt;)Lscala/BigInt;;
const #143 = Asciz	(Ljava/math/BigInteger;)Ljava/math/BigInteger;;
const #144 = NameAndType	#141:#143;//  modInverse:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #145 = Method	#40.#144;	//  java/math/BigInteger.modInverse:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #146 = Asciz	m;
const #147 = Asciz	modPow;
const #148 = Asciz	(Lscala/BigInt;Lscala/BigInt;)Lscala/BigInt;;
const #149 = Asciz	(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;;
const #150 = NameAndType	#147:#149;//  modPow:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #151 = Method	#40.#150;	//  java/math/BigInteger.modPow:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #152 = Asciz	exp;
const #153 = Asciz	pow;
const #154 = NameAndType	#153:#112;//  pow:(I)Ljava/math/BigInteger;
const #155 = Method	#40.#154;	//  java/math/BigInteger.pow:(I)Ljava/math/BigInteger;
const #156 = Asciz	max;
const #157 = NameAndType	#156:#143;//  max:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #158 = Method	#40.#157;	//  java/math/BigInteger.max:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #159 = Asciz	that;
const #160 = Asciz	min;
const #161 = NameAndType	#160:#143;//  min:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #162 = Method	#40.#161;	//  java/math/BigInteger.min:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #163 = Asciz	mod;
const #164 = NameAndType	#163:#143;//  mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #165 = Method	#40.#164;	//  java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #166 = Asciz	gcd;
const #167 = NameAndType	#166:#143;//  gcd:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #168 = Method	#40.#167;	//  java/math/BigInteger.gcd:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #169 = Asciz	$amp$tilde;
const #170 = Asciz	andNot;
const #171 = NameAndType	#170:#143;//  andNot:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #172 = Method	#40.#171;	//  java/math/BigInteger.andNot:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #173 = Asciz	$up;
const #174 = Asciz	xor;
const #175 = NameAndType	#174:#143;//  xor:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #176 = Method	#40.#175;	//  java/math/BigInteger.xor:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #177 = Asciz	$bar;
const #178 = Asciz	or;
const #179 = NameAndType	#178:#143;//  or:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #180 = Method	#40.#179;	//  java/math/BigInteger.or:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #181 = Asciz	$amp;
const #182 = Asciz	and;
const #183 = NameAndType	#182:#143;//  and:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #184 = Method	#40.#183;	//  java/math/BigInteger.and:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #185 = Asciz	$greater$greater;
const #186 = Asciz	shiftRight;
const #187 = NameAndType	#186:#112;//  shiftRight:(I)Ljava/math/BigInteger;
const #188 = Method	#40.#187;	//  java/math/BigInteger.shiftRight:(I)Ljava/math/BigInteger;
const #189 = Asciz	$less$less;
const #190 = Asciz	shiftLeft;
const #191 = NameAndType	#190:#112;//  shiftLeft:(I)Ljava/math/BigInteger;
const #192 = Method	#40.#191;	//  java/math/BigInteger.shiftLeft:(I)Ljava/math/BigInteger;
const #193 = Asciz	$div$percent;
const #194 = Asciz	(Lscala/BigInt;)Lscala/Tuple2;;
const #195 = Asciz	divideAndRemainder;
const #196 = Asciz	(Ljava/math/BigInteger;)[Ljava/math/BigInteger;;
const #197 = NameAndType	#195:#196;//  divideAndRemainder:(Ljava/math/BigInteger;)[Ljava/math/BigInteger;
const #198 = Method	#40.#197;	//  java/math/BigInteger.divideAndRemainder:(Ljava/math/BigInteger;)[Ljava/math/BigInteger;
const #199 = Asciz	scala/Tuple2;
const #200 = class	#199;	//  scala/Tuple2
const #201 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)V;
const #202 = NameAndType	#5:#201;//  "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
const #203 = Method	#200.#202;	//  scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
const #204 = Asciz	dr;
const #205 = Asciz	[Ljava/math/BigInteger;;
const #206 = Asciz	(Lscala/BigInt;)Lscala/Tuple2<Lscala/BigInt;Lscala/BigInt;>;;
const #207 = Asciz	$percent;
const #208 = Asciz	remainder;
const #209 = NameAndType	#208:#143;//  remainder:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #210 = Method	#40.#209;	//  java/math/BigInteger.remainder:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #211 = Asciz	$div;
const #212 = Asciz	divide;
const #213 = NameAndType	#212:#143;//  divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #214 = Method	#40.#213;	//  java/math/BigInteger.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #215 = Asciz	$times;
const #216 = Asciz	multiply;
const #217 = NameAndType	#216:#143;//  multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #218 = Method	#40.#217;	//  java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #219 = Asciz	$minus;
const #220 = Asciz	subtract;
const #221 = NameAndType	#220:#143;//  subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #222 = Method	#40.#221;	//  java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #223 = Asciz	$plus;
const #224 = Asciz	add;
const #225 = NameAndType	#224:#143;//  add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #226 = Method	#40.#225;	//  java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
const #227 = Asciz	$greater;
const #228 = Asciz	(Lscala/BigInt;)Z;
const #229 = Asciz	compare;
const #230 = Asciz	(Lscala/BigInt;)I;
const #231 = NameAndType	#229:#230;//  compare:(Lscala/BigInt;)I
const #232 = Method	#10.#231;	//  scala/BigInt.compare:(Lscala/BigInt;)I
const #233 = Asciz	$less;
const #234 = Asciz	$greater$eq;
const #235 = Asciz	$less$eq;
const #236 = Asciz	compareTo;
const #237 = Asciz	(Ljava/math/BigInteger;)I;
const #238 = NameAndType	#236:#237;//  compareTo:(Ljava/math/BigInteger;)I
const #239 = Method	#40.#238;	//  java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
const #240 = Asciz	equals;
const #241 = Asciz	(Ljava/lang/Object;)Z;
const #242 = NameAndType	#240:#228;//  equals:(Lscala/BigInt;)Z
const #243 = Method	#10.#242;	//  scala/BigInt.equals:(Lscala/BigInt;)Z
const #244 = Asciz	Ljava/lang/Object;;
const #245 = Asciz	temp1;
const #246 = Asciz	temp2;
const #247 = Asciz	temp3;
const #248 = Asciz	hashCode;
const #249 = NameAndType	#248:#86;//  hashCode:()I
const #250 = Method	#40.#249;	//  java/math/BigInteger.hashCode:()I
const #251 = Asciz	ScalaSig;
const #252 = Asciz	InnerClasses;
const #253 = Asciz	scala/GenericRange$Inclusive;
const #254 = class	#253;	//  scala/GenericRange$Inclusive
const #255 = Asciz	scala/GenericRange;
const #256 = class	#255;	//  scala/GenericRange
const #257 = Asciz	Inclusive;
const #258 = Asciz	scala/GenericRange$Exclusive;
const #259 = class	#258;	//  scala/GenericRange$Exclusive
const #260 = Asciz	Exclusive;
const #261 = Asciz	scala/ScalaObject;
const #262 = class	#261;	//  scala/ScalaObject
const #263 = Asciz	java/io/Serializable;
const #264 = class	#263;	//  java/io/Serializable

{
public scala.BigInt(java.math.BigInteger);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	putfield	#12; //Field bigInteger:Ljava/math/BigInteger;
   5:	aload_0
   6:	invokespecial	#17; //Method java/lang/Number."<init>":()V
   9:	return
  LineNumberTable: 
   line 112: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    this       Lscala/BigInt;
   0      10      1    bigInteger       Ljava/math/BigInteger;


public scala.BigInt until$default$2();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	getstatic	#28; //Field scala/BigInt$.MODULE$:Lscala/BigInt$;
   3:	iconst_1
   4:	invokevirtual	#32; //Method scala/BigInt$.apply:(I)Lscala/BigInt;
   7:	areturn
  LineNumberTable: 
   line 348: 0


public scala.BigInt to$default$2();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	getstatic	#28; //Field scala/BigInt$.MODULE$:Lscala/BigInt$;
   3:	iconst_1
   4:	invokevirtual	#32; //Method scala/BigInt$.apply:(I)Lscala/BigInt;
   7:	areturn
  LineNumberTable: 
   line 352: 0


public byte[] toByteArray();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#38; //Method bigInteger:()Ljava/math/BigInteger;
   4:	invokevirtual	#42; //Method java/math/BigInteger.toByteArray:()[B
   7:	areturn
  LineNumberTable: 
   line 368: 0


public java.lang.String toString(int);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	invokevirtual	#38; //Method bigInteger:()Ljava/math/BigInteger;
   4:	iload_1
   5:	invokevirtual	#46; //Method java/math/BigInteger.toString:(I)Ljava/lang/String;
   8:	areturn
  LineNumberTable: 
   line 360: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/BigInt;
   0      9      1    radix       I


public java.lang.String toString();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#38; //Method bigInteger:()Ljava/math/BigInteger;
   4:	invokevirtual	#51; //Method java/math/BigInteger.toString:()Ljava/lang/String;
   7:	areturn
  LineNumberTable: 
   line 356: 0


public scala.GenericRange$Inclusive to(scala.BigInt, scala.BigInt);
  Code:
   Stack=4, Locals=3, Args_size=3
   0:	getstatic	#58; //Field scala/Range$BigInt$.MODULE$:Lscala/Range$BigInt$;
   3:	aload_0
   4:	aload_1
   5:	aload_2
   6:	invokevirtual	#62; //Method scala/Range$BigInt$.inclusive:(Lscala/BigInt;Lscala/BigInt;Lscala/BigInt;)Lscala/GenericRange$Inclusive;
   9:	areturn
  LineNumberTable: 
   line 352: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    this       Lscala/BigInt;
   0      10      1    end       Lscala/BigInt;
   0      10      2    step       Lscala/BigInt;

  Signature: length = 0x2
   00 41 

public scala.GenericRange$Exclusive until(scala.BigInt, scala.BigInt);
  Code:
   Stack=4, Locals=3, Args_size=3
   0:	getstatic	#58; //Field scala/Range$BigInt$.MODULE$:Lscala/Range$BigInt$;
   3:	aload_0
   4:	aload_1
   5:	aload_2
   6:	invokevirtual	#71; //Method scala/Range$BigInt$.apply:(Lscala/BigInt;Lscala/BigInt;Lscala/BigInt;)Lscala/GenericRange$Exclusive;
   9:	areturn
  LineNumberTable: 
   line 348: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    this       Lscala/BigInt;
   0      10      1    end       Lscala/BigInt;
   0      10      2    step       Lscala/BigInt;

  Signature: length = 0x2
   00 48 

public double doubleValue();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#38; //Method bigInteger:()Ljava/math/BigInteger;
   4:	invokevirtual	#76; //Method java/math/BigInteger.doubleValue:()D
   7:	dreturn
  LineNumberTable: 
   line 339: 0


public float floatValue();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#38; //Method bigInteger:()Ljava/math/BigInteger;
   4:	invokevirtual	#80; //Method java/math/BigInteger.floatValue:()F
   7:	freturn
  LineNumberTable: 
   line 332: 0


public long longValue();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#38; //Method bigInteger:()Ljava/math/BigInteger;
   4:	invokevirtual	#84; //Method java/math/BigInteger.longValue:()J
   7:	lreturn
  LineNumberTable: 
   line 325: 0


public int intValue();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#38; //Method bigInteger:()Ljava/math/BigInteger;
   4:	invokevirtual	#88; //Method java/math/BigInteger.intValue:()I
   7:	ireturn
  LineNumberTable: 
   line 317: 0


public char charValue();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#91; //Method intValue:()I
   4:	i2c
   5:	ireturn
  LineNumberTable: 
   line 309: 0


public short shortValue();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#91; //Method intValue:()I
   4:	i2s
   5:	ireturn
  LineNumberTable: 
   line 302: 0


public byte byteValue();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#91; //Method intValue:()I
   4:	i2b
   5:	ireturn
  LineNumberTable: 
   line 295: 0


public boolean isProbablePrime(int);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	invokevirtual	#38; //Method bigInteger:()Ljava/math/BigInteger;
   4:	iload_1
   5:	invokevirtual	#99; //Method java/math/BigInteger.isProbablePrime:(I)Z
   8:	ireturn
  LineNumberTable: 
   line 288: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/BigInt;
   0      9      1    certainty       I


public int bitCount();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#38; //Method bigInteger:()Ljava/math/BigInteger;
   4:	invokevirtual	#103; //Method java/math/BigInteger.bitCount:()I
   7:	ireturn
  LineNumberTable: 
   line 279: 0


public int bitLength();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#38; //Method bigInteger:()Ljava/math/BigInteger;
   4:	invokevirtual	#106; //Method java/math/BigInteger.bitLength:()I
   7:	ireturn
  LineNumberTable: 
   line 274: 0


public int lowestSetBit();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#38; //Method bigInteger:()Ljava/math/BigInteger;
   4:	invokevirtual	#110; //Method java/math/BigInteger.getLowestSetBit:()I
   7:	ireturn
  LineNumberTable: 
   line 269: 0


public scala.BigInt flipBit(int);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#10; //class scala/BigInt
   3:	dup
   4:	aload_0
   5:	invokevirtual	#38; //Method bigInteger:()Ljava/math/BigInteger;
   8:	iload_1
   9:	invokevirtual	#114; //Method java/math/BigInteger.flipBit:(I)Ljava/math/BigInteger;
   12:	invokespecial	#116; //Method "<init>":(Ljava/math/BigInteger;)V
   15:	areturn
  LineNumberTable: 
   line 264: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      16      0    this       Lscala/BigInt;
   0      16      1    n       I


public scala.BigInt clearBit(int);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#10; //class scala/BigInt
   3:	dup
   4:	aload_0
   5:	invokevirtual	#38; //Method bigInteger:()Ljava/math/BigInteger;
   8:	iload_1
   9:	invokevirtual	#120; //Method java/math/BigInteger.clearBit:(I)Ljava/math/BigInteger;
   12:	invokespecial	#116; //Method "<init>":(Ljava/math/BigInteger;)V
   15:	areturn
  LineNumberTable: 
   line 260: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      16      0    this       Lscala/BigInt;
   0      16      1    n       I


public scala.BigInt setBit(int);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#10; //class scala/BigInt
   3:	dup
   4:	aload_0
   5:	invokevirtual	#38; //Method bigInteger:()Ljava/math/BigInteger;
   8:	iload_1
   9:	invokevirtual	#123; //Method java/math/BigInteger.setBit:(I)Ljava/math/BigInteger;
   12:	invokespecial	#116; //Method "<init>":(Ljava/math/BigInteger;)V
   15:	areturn
  LineNumberTable: 
   line 256: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      16      0    this       Lscala/BigInt;
   0      16      1    n       I


public boolean testBit(int);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	invokevirtual	#38; //Method bigInteger:()Ljava/math/BigInteger;
   4:	iload_1
   5:	invokevirtual	#126; //Method java/math/BigInteger.testBit:(I)Z
   8:	ireturn
  LineNumberTable: 
   line 252: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/BigInt;
   0      9      1    n       I


public scala.BigInt $tilde();
  Code:
   Stack=3, Locals=1, Args_size=1
   0:	new	#10; //class scala/BigInt
   3:	dup
   4:	aload_0
   5:	invokevirtual	#38; //Method bigInteger:()Ljava/math/BigInteger;
   8:	invokevirtual	#130; //Method java/math/BigInteger.not:()Ljava/math/BigInteger;
   11:	invokespecial	#116; //Method "<init>":(Ljava/math/BigInteger;)V
   14:	areturn
  LineNumberTable: 
   line 248: 0


public int signum();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#38; //Method bigInteger:()Ljava/math/BigInteger;
   4:	invokevirtual	#133; //Method java/math/BigInteger.signum:()I
   7:	ireturn
  LineNumberTable: 
   line 244: 0


public scala.BigInt abs();
  Code:
   Stack=3, Locals=1, Args_size=1
   0:	new	#10; //class scala/BigInt
   3:	dup
   4:	aload_0
   5:	invokevirtual	#38; //Method bigInteger:()Ljava/math/BigInteger;
   8:	invokevirtual	#136; //Method java/math/BigInteger.abs:()Ljava/math/BigInteger;
   11:	invokespecial	#116; //Method "<init>":(Ljava/math/BigInteger;)V
   14:	areturn
  LineNumberTable: 
   line 237: 0


public scala.BigInt unary_$minus();
  Code:
   Stack=3, Locals=1, Args_size=1
   0:	new	#10; //class scala/BigInt
   3:	dup
   4:	aload_0
   5:	invokevirtual	#38; //Method bigInteger:()Ljava/math/BigInteger;
   8:	invokevirtual	#140; //Method java/math/BigInteger.negate:()Ljava/math/BigInteger;
   11:	invokespecial	#116; //Method "<init>":(Ljava/math/BigInteger;)V
   14:	areturn
  LineNumberTable: 
   line 233: 0


public scala.BigInt modInverse(scala.BigInt);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#10; //class scala/BigInt
   3:	dup
   4:	aload_0
   5:	invokevirtual	#38; //Method bigInteger:()Ljava/math/BigInteger;
   8:	aload_1
   9:	invokevirtual	#38; //Method bigInteger:()Ljava/math/BigInteger;
   12:	invokevirtual	#145; //Method java/math/BigInteger.modInverse:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
   15:	invokespecial	#116; //Method "<init>":(Ljava/math/BigInteger;)V
   18:	areturn
  LineNumberTable: 
   line 229: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      19      0    this       Lscala/BigInt;
   0      19      1    m       Lscala/BigInt;


public scala.BigInt modPow(scala.BigInt, scala.BigInt);
  Code:
   Stack=5, Locals=3, Args_size=3
   0:	new	#10; //class scala/BigInt
   3:	dup
   4:	aload_0
   5:	invokevirtual	#38; //Method bigInteger:()Ljava/math/BigInteger;
   8:	aload_1
   9:	invokevirtual	#38; //Method bigInteger:()Ljava/math/BigInteger;
   12:	aload_2
   13:	invokevirtual	#38; //Method bigInteger:()Ljava/math/BigInteger;
   16:	invokevirtual	#151; //Method java/math/BigInteger.modPow:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   19:	invokespecial	#116; //Method "<init>":(Ljava/math/BigInteger;)V
   22:	areturn
  LineNumberTable: 
   line 225: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      23      0    this       Lscala/BigInt;
   0      23      1    exp       Lscala/BigInt;
   0      23      2    m       Lscala/BigInt;


public scala.BigInt pow(int);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#10; //class scala/BigInt
   3:	dup
   4:	aload_0
   5:	invokevirtual	#38; //Method bigInteger:()Ljava/math/BigInteger;
   8:	iload_1
   9:	invokevirtual	#155; //Method java/math/BigInteger.pow:(I)Ljava/math/BigInteger;
   12:	invokespecial	#116; //Method "<init>":(Ljava/math/BigInteger;)V
   15:	areturn
  LineNumberTable: 
   line 219: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      16      0    this       Lscala/BigInt;
   0      16      1    exp       I


public scala.BigInt max(scala.BigInt);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#10; //class scala/BigInt
   3:	dup
   4:	aload_0
   5:	invokevirtual	#38; //Method bigInteger:()Ljava/math/BigInteger;
   8:	aload_1
   9:	invokevirtual	#38; //Method bigInteger:()Ljava/math/BigInteger;
   12:	invokevirtual	#158; //Method java/math/BigInteger.max:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
   15:	invokespecial	#116; //Method "<init>":(Ljava/math/BigInteger;)V
   18:	areturn
  LineNumberTable: 
   line 215: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      19      0    this       Lscala/BigInt;
   0      19      1    that       Lscala/BigInt;


public scala.BigInt min(scala.BigInt);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#10; //class scala/BigInt
   3:	dup
   4:	aload_0
   5:	invokevirtual	#38; //Method bigInteger:()Ljava/math/BigInteger;
   8:	aload_1
   9:	invokevirtual	#38; //Method bigInteger:()Ljava/math/BigInteger;
   12:	invokevirtual	#162; //Method java/math/BigInteger.min:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
   15:	invokespecial	#116; //Method "<init>":(Ljava/math/BigInteger;)V
   18:	areturn
  LineNumberTable: 
   line 211: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      19      0    this       Lscala/BigInt;
   0      19      1    that       Lscala/BigInt;


public scala.BigInt mod(scala.BigInt);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#10; //class scala/BigInt
   3:	dup
   4:	aload_0
   5:	invokevirtual	#38; //Method bigInteger:()Ljava/math/BigInteger;
   8:	aload_1
   9:	invokevirtual	#38; //Method bigInteger:()Ljava/math/BigInteger;
   12:	invokevirtual	#165; //Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
   15:	invokespecial	#116; //Method "<init>":(Ljava/math/BigInteger;)V
   18:	areturn
  LineNumberTable: 
   line 207: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      19      0    this       Lscala/BigInt;
   0      19      1    that       Lscala/BigInt;


public scala.BigInt gcd(scala.BigInt);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#10; //class scala/BigInt
   3:	dup
   4:	aload_0
   5:	invokevirtual	#38; //Method bigInteger:()Ljava/math/BigInteger;
   8:	aload_1
   9:	invokevirtual	#38; //Method bigInteger:()Ljava/math/BigInteger;
   12:	invokevirtual	#168; //Method java/math/BigInteger.gcd:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
   15:	invokespecial	#116; //Method "<init>":(Ljava/math/BigInteger;)V
   18:	areturn
  LineNumberTable: 
   line 202: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      19      0    this       Lscala/BigInt;
   0      19      1    that       Lscala/BigInt;


public scala.BigInt $amp$tilde(scala.BigInt);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#10; //class scala/BigInt
   3:	dup
   4:	aload_0
   5:	invokevirtual	#38; //Method bigInteger:()Ljava/math/BigInteger;
   8:	aload_1
   9:	invokevirtual	#38; //Method bigInteger:()Ljava/math/BigInteger;
   12:	invokevirtual	#172; //Method java/math/BigInteger.andNot:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
   15:	invokespecial	#116; //Method "<init>":(Ljava/math/BigInteger;)V
   18:	areturn
  LineNumberTable: 
   line 198: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      19      0    this       Lscala/BigInt;
   0      19      1    that       Lscala/BigInt;


public scala.BigInt $up(scala.BigInt);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#10; //class scala/BigInt
   3:	dup
   4:	aload_0
   5:	invokevirtual	#38; //Method bigInteger:()Ljava/math/BigInteger;
   8:	aload_1
   9:	invokevirtual	#38; //Method bigInteger:()Ljava/math/BigInteger;
   12:	invokevirtual	#176; //Method java/math/BigInteger.xor:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
   15:	invokespecial	#116; //Method "<init>":(Ljava/math/BigInteger;)V
   18:	areturn
  LineNumberTable: 
   line 194: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      19      0    this       Lscala/BigInt;
   0      19      1    that       Lscala/BigInt;


public scala.BigInt $bar(scala.BigInt);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#10; //class scala/BigInt
   3:	dup
   4:	aload_0
   5:	invokevirtual	#38; //Method bigInteger:()Ljava/math/BigInteger;
   8:	aload_1
   9:	invokevirtual	#38; //Method bigInteger:()Ljava/math/BigInteger;
   12:	invokevirtual	#180; //Method java/math/BigInteger.or:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
   15:	invokespecial	#116; //Method "<init>":(Ljava/math/BigInteger;)V
   18:	areturn
  LineNumberTable: 
   line 190: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      19      0    this       Lscala/BigInt;
   0      19      1    that       Lscala/BigInt;


public scala.BigInt $amp(scala.BigInt);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#10; //class scala/BigInt
   3:	dup
   4:	aload_0
   5:	invokevirtual	#38; //Method bigInteger:()Ljava/math/BigInteger;
   8:	aload_1
   9:	invokevirtual	#38; //Method bigInteger:()Ljava/math/BigInteger;
   12:	invokevirtual	#184; //Method java/math/BigInteger.and:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
   15:	invokespecial	#116; //Method "<init>":(Ljava/math/BigInteger;)V
   18:	areturn
  LineNumberTable: 
   line 186: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      19      0    this       Lscala/BigInt;
   0      19      1    that       Lscala/BigInt;


public scala.BigInt $greater$greater(int);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#10; //class scala/BigInt
   3:	dup
   4:	aload_0
   5:	invokevirtual	#38; //Method bigInteger:()Ljava/math/BigInteger;
   8:	iload_1
   9:	invokevirtual	#188; //Method java/math/BigInteger.shiftRight:(I)Ljava/math/BigInteger;
   12:	invokespecial	#116; //Method "<init>":(Ljava/math/BigInteger;)V
   15:	areturn
  LineNumberTable: 
   line 182: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      16      0    this       Lscala/BigInt;
   0      16      1    n       I


public scala.BigInt $less$less(int);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#10; //class scala/BigInt
   3:	dup
   4:	aload_0
   5:	invokevirtual	#38; //Method bigInteger:()Ljava/math/BigInteger;
   8:	iload_1
   9:	invokevirtual	#192; //Method java/math/BigInteger.shiftLeft:(I)Ljava/math/BigInteger;
   12:	invokespecial	#116; //Method "<init>":(Ljava/math/BigInteger;)V
   15:	areturn
  LineNumberTable: 
   line 178: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      16      0    this       Lscala/BigInt;
   0      16      1    n       I


public scala.Tuple2 $div$percent(scala.BigInt);
  Code:
   Stack=7, Locals=3, Args_size=2
   0:	aload_0
   1:	invokevirtual	#38; //Method bigInteger:()Ljava/math/BigInteger;
   4:	aload_1
   5:	invokevirtual	#38; //Method bigInteger:()Ljava/math/BigInteger;
   8:	invokevirtual	#198; //Method java/math/BigInteger.divideAndRemainder:(Ljava/math/BigInteger;)[Ljava/math/BigInteger;
   11:	astore_2
   12:	new	#200; //class scala/Tuple2
   15:	dup
   16:	new	#10; //class scala/BigInt
   19:	dup
   20:	aload_2
   21:	iconst_0
   22:	aaload
   23:	invokespecial	#116; //Method "<init>":(Ljava/math/BigInteger;)V
   26:	new	#10; //class scala/BigInt
   29:	dup
   30:	aload_2
   31:	iconst_1
   32:	aaload
   33:	invokespecial	#116; //Method "<init>":(Ljava/math/BigInteger;)V
   36:	invokespecial	#203; //Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
   39:	areturn
  LineNumberTable: 
   line 172: 0
   line 173: 12

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      40      0    this       Lscala/BigInt;
   0      40      1    that       Lscala/BigInt;
   12      27      2    dr       [Ljava/math/BigInteger;

  Signature: length = 0x2
   00 FFFFFFCE 

public scala.BigInt $percent(scala.BigInt);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#10; //class scala/BigInt
   3:	dup
   4:	aload_0
   5:	invokevirtual	#38; //Method bigInteger:()Ljava/math/BigInteger;
   8:	aload_1
   9:	invokevirtual	#38; //Method bigInteger:()Ljava/math/BigInteger;
   12:	invokevirtual	#210; //Method java/math/BigInteger.remainder:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
   15:	invokespecial	#116; //Method "<init>":(Ljava/math/BigInteger;)V
   18:	areturn
  LineNumberTable: 
   line 167: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      19      0    this       Lscala/BigInt;
   0      19      1    that       Lscala/BigInt;


public scala.BigInt $div(scala.BigInt);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#10; //class scala/BigInt
   3:	dup
   4:	aload_0
   5:	invokevirtual	#38; //Method bigInteger:()Ljava/math/BigInteger;
   8:	aload_1
   9:	invokevirtual	#38; //Method bigInteger:()Ljava/math/BigInteger;
   12:	invokevirtual	#214; //Method java/math/BigInteger.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
   15:	invokespecial	#116; //Method "<init>":(Ljava/math/BigInteger;)V
   18:	areturn
  LineNumberTable: 
   line 163: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      19      0    this       Lscala/BigInt;
   0      19      1    that       Lscala/BigInt;


public scala.BigInt $times(scala.BigInt);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#10; //class scala/BigInt
   3:	dup
   4:	aload_0
   5:	invokevirtual	#38; //Method bigInteger:()Ljava/math/BigInteger;
   8:	aload_1
   9:	invokevirtual	#38; //Method bigInteger:()Ljava/math/BigInteger;
   12:	invokevirtual	#218; //Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
   15:	invokespecial	#116; //Method "<init>":(Ljava/math/BigInteger;)V
   18:	areturn
  LineNumberTable: 
   line 159: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      19      0    this       Lscala/BigInt;
   0      19      1    that       Lscala/BigInt;


public scala.BigInt $minus(scala.BigInt);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#10; //class scala/BigInt
   3:	dup
   4:	aload_0
   5:	invokevirtual	#38; //Method bigInteger:()Ljava/math/BigInteger;
   8:	aload_1
   9:	invokevirtual	#38; //Method bigInteger:()Ljava/math/BigInteger;
   12:	invokevirtual	#222; //Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
   15:	invokespecial	#116; //Method "<init>":(Ljava/math/BigInteger;)V
   18:	areturn
  LineNumberTable: 
   line 155: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      19      0    this       Lscala/BigInt;
   0      19      1    that       Lscala/BigInt;


public scala.BigInt $plus(scala.BigInt);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#10; //class scala/BigInt
   3:	dup
   4:	aload_0
   5:	invokevirtual	#38; //Method bigInteger:()Ljava/math/BigInteger;
   8:	aload_1
   9:	invokevirtual	#38; //Method bigInteger:()Ljava/math/BigInteger;
   12:	invokevirtual	#226; //Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
   15:	invokespecial	#116; //Method "<init>":(Ljava/math/BigInteger;)V
   18:	areturn
  LineNumberTable: 
   line 151: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      19      0    this       Lscala/BigInt;
   0      19      1    that       Lscala/BigInt;


public boolean $greater(scala.BigInt);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokevirtual	#232; //Method compare:(Lscala/BigInt;)I
   5:	iconst_0
   6:	if_icmple	13
   9:	iconst_1
   10:	goto	14
   13:	iconst_0
   14:	ireturn
  LineNumberTable: 
   line 147: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      15      0    this       Lscala/BigInt;
   0      15      1    that       Lscala/BigInt;


public boolean $less(scala.BigInt);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokevirtual	#232; //Method compare:(Lscala/BigInt;)I
   5:	iconst_0
   6:	if_icmpge	13
   9:	iconst_1
   10:	goto	14
   13:	iconst_0
   14:	ireturn
  LineNumberTable: 
   line 143: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      15      0    this       Lscala/BigInt;
   0      15      1    that       Lscala/BigInt;


public boolean $greater$eq(scala.BigInt);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokevirtual	#232; //Method compare:(Lscala/BigInt;)I
   5:	iconst_0
   6:	if_icmplt	13
   9:	iconst_1
   10:	goto	14
   13:	iconst_0
   14:	ireturn
  LineNumberTable: 
   line 139: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      15      0    this       Lscala/BigInt;
   0      15      1    that       Lscala/BigInt;


public boolean $less$eq(scala.BigInt);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokevirtual	#232; //Method compare:(Lscala/BigInt;)I
   5:	iconst_0
   6:	if_icmpgt	13
   9:	iconst_1
   10:	goto	14
   13:	iconst_0
   14:	ireturn
  LineNumberTable: 
   line 135: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      15      0    this       Lscala/BigInt;
   0      15      1    that       Lscala/BigInt;


public int compare(scala.BigInt);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	invokevirtual	#38; //Method bigInteger:()Ljava/math/BigInteger;
   4:	aload_1
   5:	invokevirtual	#38; //Method bigInteger:()Ljava/math/BigInteger;
   8:	invokevirtual	#239; //Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
   11:	ireturn
  LineNumberTable: 
   line 131: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      12      0    this       Lscala/BigInt;
   0      12      1    that       Lscala/BigInt;


public boolean equals(scala.BigInt);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokevirtual	#232; //Method compare:(Lscala/BigInt;)I
   5:	iconst_0
   6:	if_icmpne	13
   9:	iconst_1
   10:	goto	14
   13:	iconst_0
   14:	ireturn
  LineNumberTable: 
   line 127: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      15      0    this       Lscala/BigInt;
   0      15      1    that       Lscala/BigInt;


public boolean equals(java.lang.Object);
  Code:
   Stack=4, Locals=5, Args_size=2
   0:	aload_1
   1:	astore_2
   2:	aload_2
   3:	instanceof	#10; //class scala/BigInt
   6:	ifeq	22
   9:	aload_2
   10:	checkcast	#10; //class scala/BigInt
   13:	astore_3
   14:	aload_0
   15:	aload_3
   16:	invokevirtual	#243; //Method equals:(Lscala/BigInt;)Z
   19:	goto	52
   22:	aload_2
   23:	instanceof	#40; //class java/math/BigInteger
   26:	ifeq	51
   29:	aload_2
   30:	checkcast	#40; //class java/math/BigInteger
   33:	astore	4
   35:	aload_0
   36:	new	#10; //class scala/BigInt
   39:	dup
   40:	aload	4
   42:	invokespecial	#116; //Method "<init>":(Ljava/math/BigInteger;)V
   45:	invokevirtual	#243; //Method equals:(Lscala/BigInt;)Z
   48:	goto	52
   51:	iconst_0
   52:	ireturn
  LineNumberTable: 
   line 119: 0
   line 120: 14
   line 119: 22
   line 121: 35
   line 122: 51
   line 119: 52

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      53      0    this       Lscala/BigInt;
   0      53      1    that       Ljava/lang/Object;
   2      51      2    temp1       Ljava/lang/Object;
   14      5      3    temp2       Lscala/BigInt;
   35      13      4    temp3       Ljava/math/BigInteger;


public int hashCode();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#38; //Method bigInteger:()Ljava/math/BigInteger;
   4:	invokevirtual	#250; //Method java/math/BigInteger.hashCode:()I
   7:	ireturn
  LineNumberTable: 
   line 115: 0


public java.math.BigInteger bigInteger();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#12; //Field bigInteger:Ljava/math/BigInteger;
   4:	areturn
  LineNumberTable: 
   line 112: 0


}

