Compiled from "ops.scala"
public final class scala.concurrent.ops$ extends java.lang.Object implements scala.ScalaObject
  SourceFile: "ops.scala"
  Scala: length = 0x
   
  InnerClass: 
   public final #148= #125 of #147; //$anon$1=class scala/concurrent/ops$$anon$1 of class scala/concurrent/ops
   public final #149= #59 of #147; //$anonfun$par$1=class scala/concurrent/ops$$anonfun$par$1 of class scala/concurrent/ops
   public final #150= #114 of #147; //$anonfun$future$1=class scala/concurrent/ops$$anonfun$future$1 of class scala/concurrent/ops
   public final #151= #117 of #147; //$anonfun$future$2=class scala/concurrent/ops$$anonfun$future$2 of class scala/concurrent/ops
   public final #152= #35 of #147; //$anonfun$replicate$1=class scala/concurrent/ops$$anonfun$replicate$1 of class scala/concurrent/ops
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	ops.scala;
const #3 = Asciz	Scala;
const #4 = Asciz	MODULE$;
const #5 = Asciz	Lscala/concurrent/ops$;;
const #6 = Asciz	<clinit>;
const #7 = Asciz	()V;
const #8 = Asciz	Code;
const #9 = Asciz	scala/concurrent/ops$;
const #10 = class	#9;	//  scala/concurrent/ops$
const #11 = Asciz	<init>;
const #12 = NameAndType	#11:#7;//  "<init>":()V
const #13 = Method	#10.#12;	//  scala/concurrent/ops$."<init>":()V
const #14 = Asciz	LineNumberTable;
const #15 = Asciz	java/lang/Object;
const #16 = class	#15;	//  java/lang/Object
const #17 = Method	#16.#12;	//  java/lang/Object."<init>":()V
const #18 = NameAndType	#4:#5;//  MODULE$:Lscala/concurrent/ops$;
const #19 = Field	#10.#18;	//  scala/concurrent/ops$.MODULE$:Lscala/concurrent/ops$;
const #20 = Asciz	replicate;
const #21 = Asciz	(IILscala/Function1;)V;
const #22 = Asciz	scala/runtime/BoxesRunTime;
const #23 = class	#22;	//  scala/runtime/BoxesRunTime
const #24 = Asciz	boxToInteger;
const #25 = Asciz	(I)Ljava/lang/Integer;;
const #26 = NameAndType	#24:#25;//  boxToInteger:(I)Ljava/lang/Integer;
const #27 = Method	#23.#26;	//  scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
const #28 = Asciz	scala/Function1;
const #29 = class	#28;	//  scala/Function1
const #30 = Asciz	apply;
const #31 = Asciz	(Ljava/lang/Object;)Ljava/lang/Object;;
const #32 = NameAndType	#30:#31;//  apply:(Ljava/lang/Object;)Ljava/lang/Object;
const #33 = InterfaceMethod	#29.#32;	//  scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
const #34 = Asciz	scala/concurrent/ops$$anonfun$replicate$1;
const #35 = class	#34;	//  scala/concurrent/ops$$anonfun$replicate$1
const #36 = Asciz	(ILscala/Function1;I)V;
const #37 = NameAndType	#11:#36;//  "<init>":(ILscala/Function1;I)V
const #38 = Method	#35.#37;	//  scala/concurrent/ops$$anonfun$replicate$1."<init>":(ILscala/Function1;I)V
const #39 = Asciz	spawn;
const #40 = Asciz	(Lscala/Function0;)V;
const #41 = NameAndType	#39:#40;//  spawn:(Lscala/Function0;)V
const #42 = Method	#10.#41;	//  scala/concurrent/ops$.spawn:(Lscala/Function0;)V
const #43 = Asciz	this;
const #44 = Asciz	start$1;
const #45 = Asciz	I;
const #46 = Asciz	end;
const #47 = Asciz	p$3;
const #48 = Asciz	Lscala/Function1;;
const #49 = Asciz	mid$1;
const #50 = Asciz	LocalVariableTable;
const #51 = Asciz	(IILscala/Function1<Ljava/lang/Integer;Ljava/lang/Object;>;)V;
const #52 = Asciz	Signature;
const #53 = Asciz	par;
const #54 = Asciz	(Lscala/Function0;Lscala/Function0;)Lscala/Tuple2;;
const #55 = Asciz	scala/concurrent/SyncVar;
const #56 = class	#55;	//  scala/concurrent/SyncVar
const #57 = Method	#56.#12;	//  scala/concurrent/SyncVar."<init>":()V
const #58 = Asciz	scala/concurrent/ops$$anonfun$par$1;
const #59 = class	#58;	//  scala/concurrent/ops$$anonfun$par$1
const #60 = Asciz	(Lscala/Function0;Lscala/concurrent/SyncVar;)V;
const #61 = NameAndType	#11:#60;//  "<init>":(Lscala/Function0;Lscala/concurrent/SyncVar;)V
const #62 = Method	#59.#61;	//  scala/concurrent/ops$$anonfun$par$1."<init>":(Lscala/Function0;Lscala/concurrent/SyncVar;)V
const #63 = Asciz	scala/Tuple2;
const #64 = class	#63;	//  scala/Tuple2
const #65 = Asciz	scala/Function0;
const #66 = class	#65;	//  scala/Function0
const #67 = Asciz	()Ljava/lang/Object;;
const #68 = NameAndType	#30:#67;//  apply:()Ljava/lang/Object;
const #69 = InterfaceMethod	#66.#68;	//  scala/Function0.apply:()Ljava/lang/Object;
const #70 = Asciz	get;
const #71 = NameAndType	#70:#67;//  get:()Ljava/lang/Object;
const #72 = Method	#56.#71;	//  scala/concurrent/SyncVar.get:()Ljava/lang/Object;
const #73 = Asciz	scala/Either;
const #74 = class	#73;	//  scala/Either
const #75 = Asciz	scala/Left;
const #76 = class	#75;	//  scala/Left
const #77 = Asciz	a;
const #78 = NameAndType	#77:#67;//  a:()Ljava/lang/Object;
const #79 = Method	#76.#78;	//  scala/Left.a:()Ljava/lang/Object;
const #80 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)V;
const #81 = NameAndType	#11:#80;//  "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
const #82 = Method	#64.#81;	//  scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
const #83 = Asciz	scala/Right;
const #84 = class	#83;	//  scala/Right
const #85 = Asciz	b;
const #86 = NameAndType	#85:#67;//  b:()Ljava/lang/Object;
const #87 = Method	#84.#86;	//  scala/Right.b:()Ljava/lang/Object;
const #88 = Asciz	java/lang/Throwable;
const #89 = class	#88;	//  java/lang/Throwable
const #90 = Asciz	scala/MatchError;
const #91 = class	#90;	//  scala/MatchError
const #92 = Asciz	toString;
const #93 = Asciz	()Ljava/lang/String;;
const #94 = NameAndType	#92:#93;//  toString:()Ljava/lang/String;
const #95 = Method	#74.#94;	//  scala/Either.toString:()Ljava/lang/String;
const #96 = Asciz	(Ljava/lang/String;)V;
const #97 = NameAndType	#11:#96;//  "<init>":(Ljava/lang/String;)V
const #98 = Method	#91.#97;	//  scala/MatchError."<init>":(Ljava/lang/String;)V
const #99 = Asciz	xp;
const #100 = Asciz	Lscala/Function0;;
const #101 = Asciz	yp$1;
const #102 = Asciz	y$1;
const #103 = Asciz	Lscala/concurrent/SyncVar;;
const #104 = Asciz	temp6;
const #105 = Asciz	Lscala/Either;;
const #106 = Asciz	temp7;
const #107 = Asciz	Lscala/Left;;
const #108 = Asciz	temp8;
const #109 = Asciz	Ljava/lang/Object;;
const #110 = Asciz	<A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/Function0<TA;>;Lscala/Function0<TB;>;)Lscala/Tuple2<TA;TB;>;;
const #111 = Asciz	future;
const #112 = Asciz	(Lscala/Function0;)Lscala/Function0;;
const #113 = Asciz	scala/concurrent/ops$$anonfun$future$1;
const #114 = class	#113;	//  scala/concurrent/ops$$anonfun$future$1
const #115 = Method	#114.#61;	//  scala/concurrent/ops$$anonfun$future$1."<init>":(Lscala/Function0;Lscala/concurrent/SyncVar;)V
const #116 = Asciz	scala/concurrent/ops$$anonfun$future$2;
const #117 = class	#116;	//  scala/concurrent/ops$$anonfun$future$2
const #118 = Asciz	(Lscala/concurrent/SyncVar;)V;
const #119 = NameAndType	#11:#118;//  "<init>":(Lscala/concurrent/SyncVar;)V
const #120 = Method	#117.#119;	//  scala/concurrent/ops$$anonfun$future$2."<init>":(Lscala/concurrent/SyncVar;)V
const #121 = Asciz	p$1;
const #122 = Asciz	result$1;
const #123 = Asciz	<A:Ljava/lang/Object;>(Lscala/Function0<TA;>;)Lscala/Function0<TA;>;;
const #124 = Asciz	scala/concurrent/ops$$anon$1;
const #125 = class	#124;	//  scala/concurrent/ops$$anon$1
const #126 = NameAndType	#11:#40;//  "<init>":(Lscala/Function0;)V
const #127 = Method	#125.#126;	//  scala/concurrent/ops$$anon$1."<init>":(Lscala/Function0;)V
const #128 = Asciz	java/lang/Thread;
const #129 = class	#128;	//  java/lang/Thread
const #130 = Asciz	start;
const #131 = NameAndType	#130:#7;//  start:()V
const #132 = Method	#129.#131;	//  java/lang/Thread.start:()V
const #133 = Asciz	p$2;
const #134 = Asciz	t;
const #135 = Asciz	Ljava/lang/Thread;;
const #136 = Asciz	(Lscala/Function0<Ljava/lang/Object;>;)V;
const #137 = Asciz	scala$concurrent$ops$$tryCatch;
const #138 = Asciz	(Lscala/Function0;)Lscala/Either;;
const #139 = Asciz	(Ljava/lang/Object;)V;
const #140 = NameAndType	#11:#139;//  "<init>":(Ljava/lang/Object;)V
const #141 = Method	#76.#140;	//  scala/Left."<init>":(Ljava/lang/Object;)V
const #142 = Method	#84.#140;	//  scala/Right."<init>":(Ljava/lang/Object;)V
const #143 = Asciz	left;
const #144 = Asciz	exceptionResult1;
const #145 = Asciz	InnerClasses;
const #146 = Asciz	scala/concurrent/ops;
const #147 = class	#146;	//  scala/concurrent/ops
const #148 = Asciz	$anon$1;
const #149 = Asciz	$anonfun$par$1;
const #150 = Asciz	$anonfun$future$1;
const #151 = Asciz	$anonfun$future$2;
const #152 = Asciz	$anonfun$replicate$1;
const #153 = Asciz	scala/ScalaObject;
const #154 = class	#153;	//  scala/ScalaObject

{
public static final scala.concurrent.ops$ MODULE$;

public static {};
  Code:
   Stack=1, Locals=0, Args_size=0
   0:	new	#10; //class scala/concurrent/ops$
   3:	invokespecial	#13; //Method "<init>":()V
   6:	return

public void replicate(int, int, scala.Function1);
  Code:
   Stack=6, Locals=6, Args_size=4
   0:	iload_1
   1:	iload_2
   2:	if_icmpeq	23
   5:	iload_1
   6:	iconst_1
   7:	iadd
   8:	iload_2
   9:	if_icmpne	24
   12:	aload_3
   13:	iload_1
   14:	invokestatic	#27; //Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   17:	invokeinterface	#33,  2; //InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
   22:	pop
   23:	return
   24:	iload_1
   25:	iload_2
   26:	iadd
   27:	iconst_2
   28:	idiv
   29:	istore	5
   31:	aload_0
   32:	new	#35; //class scala/concurrent/ops$$anonfun$replicate$1
   35:	dup
   36:	iload_1
   37:	aload_3
   38:	iload	5
   40:	invokespecial	#38; //Method scala/concurrent/ops$$anonfun$replicate$1."<init>":(ILscala/Function1;I)V
   43:	invokevirtual	#42; //Method spawn:(Lscala/Function0;)V
   46:	iload	5
   48:	istore_1
   49:	goto	0
  LineNumberTable: 
   line 77: 0
   line 79: 5
   line 80: 12
   line 76: 23
   line 82: 24
   line 83: 31
   line 84: 46

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      52      0    this       Lscala/concurrent/ops$;
   0      52      1    start$1       I
   0      52      2    end       I
   0      52      3    p$3       Lscala/Function1;
   31      21      5    mid$1       I

  Signature: length = 0x2
   00 33 

public scala.Tuple2 par(scala.Function0, scala.Function0);
  Code:
   Stack=6, Locals=7, Args_size=3
   0:	new	#56; //class scala/concurrent/SyncVar
   3:	dup
   4:	invokespecial	#57; //Method scala/concurrent/SyncVar."<init>":()V
   7:	astore_3
   8:	aload_0
   9:	new	#59; //class scala/concurrent/ops$$anonfun$par$1
   12:	dup
   13:	aload_2
   14:	aload_3
   15:	invokespecial	#62; //Method scala/concurrent/ops$$anonfun$par$1."<init>":(Lscala/Function0;Lscala/concurrent/SyncVar;)V
   18:	invokevirtual	#42; //Method spawn:(Lscala/Function0;)V
   21:	new	#64; //class scala/Tuple2
   24:	dup
   25:	aload_1
   26:	invokeinterface	#69,  1; //InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
   31:	aload_3
   32:	invokevirtual	#72; //Method scala/concurrent/SyncVar.get:()Ljava/lang/Object;
   35:	checkcast	#74; //class scala/Either
   38:	astore	4
   40:	aload	4
   42:	instanceof	#76; //class scala/Left
   45:	ifeq	68
   48:	aload	4
   50:	checkcast	#76; //class scala/Left
   53:	astore	5
   55:	aload	5
   57:	invokevirtual	#79; //Method scala/Left.a:()Ljava/lang/Object;
   60:	astore	6
   62:	aload	6
   64:	invokespecial	#82; //Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
   67:	areturn
   68:	aload	4
   70:	instanceof	#84; //class scala/Right
   73:	ifeq	88
   76:	aload	4
   78:	checkcast	#84; //class scala/Right
   81:	invokevirtual	#87; //Method scala/Right.b:()Ljava/lang/Object;
   84:	checkcast	#89; //class java/lang/Throwable
   87:	athrow
   88:	new	#91; //class scala/MatchError
   91:	dup
   92:	aload	4
   94:	invokevirtual	#95; //Method scala/Either.toString:()Ljava/lang/String;
   97:	invokespecial	#98; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   100:	athrow
  LineNumberTable: 
   line 63: 0
   line 64: 8
   line 65: 21
   line 66: 62
   line 65: 64
   line 67: 87
   line 65: 88

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      101      0    this       Lscala/concurrent/ops$;
   0      101      1    xp       Lscala/Function0;
   0      101      2    yp$1       Lscala/Function0;
   8      59      3    y$1       Lscala/concurrent/SyncVar;
   68      33      3    y$1       Lscala/concurrent/SyncVar;
   40      61      4    temp6       Lscala/Either;
   55      9      5    temp7       Lscala/Left;
   62      2      6    temp8       Ljava/lang/Object;

  Signature: length = 0x2
   00 6E 

public scala.Function0 future(scala.Function0);
  Code:
   Stack=5, Locals=3, Args_size=2
   0:	new	#56; //class scala/concurrent/SyncVar
   3:	dup
   4:	invokespecial	#57; //Method scala/concurrent/SyncVar."<init>":()V
   7:	astore_2
   8:	aload_0
   9:	new	#114; //class scala/concurrent/ops$$anonfun$future$1
   12:	dup
   13:	aload_1
   14:	aload_2
   15:	invokespecial	#115; //Method scala/concurrent/ops$$anonfun$future$1."<init>":(Lscala/Function0;Lscala/concurrent/SyncVar;)V
   18:	invokevirtual	#42; //Method spawn:(Lscala/Function0;)V
   21:	new	#117; //class scala/concurrent/ops$$anonfun$future$2
   24:	dup
   25:	aload_2
   26:	invokespecial	#120; //Method scala/concurrent/ops$$anonfun$future$2."<init>":(Lscala/concurrent/SyncVar;)V
   29:	areturn
  LineNumberTable: 
   line 49: 0
   line 50: 8
   line 51: 21

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      30      0    this       Lscala/concurrent/ops$;
   0      30      1    p$1       Lscala/Function0;
   8      21      2    result$1       Lscala/concurrent/SyncVar;

  Signature: length = 0x2
   00 7B 

public void spawn(scala.Function0);
  Code:
   Stack=3, Locals=3, Args_size=2
   0:	new	#125; //class scala/concurrent/ops$$anon$1
   3:	dup
   4:	aload_1
   5:	invokespecial	#127; //Method scala/concurrent/ops$$anon$1."<init>":(Lscala/Function0;)V
   8:	astore_2
   9:	aload_2
   10:	invokevirtual	#132; //Method java/lang/Thread.start:()V
   13:	return
  LineNumberTable: 
   line 40: 0
   line 41: 9

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      14      0    this       Lscala/concurrent/ops$;
   0      14      1    p$2       Lscala/Function0;
   9      4      2    t       Ljava/lang/Thread;

  Signature: length = 0x2
   00 FFFFFF88 

public final scala.Either scala$concurrent$ops$$tryCatch(scala.Function0);
  Code:
   Stack=3, Locals=4, Args_size=2
   0:	aconst_null
   1:	astore_2
   2:	new	#76; //class scala/Left
   5:	dup
   6:	aload_1
   7:	invokeinterface	#69,  1; //InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
   12:	invokespecial	#141; //Method scala/Left."<init>":(Ljava/lang/Object;)V
   15:	astore_2
   16:	goto	29
   19:	astore_3
   20:	new	#84; //class scala/Right
   23:	dup
   24:	aload_3
   25:	invokespecial	#142; //Method scala/Right."<init>":(Ljava/lang/Object;)V
   28:	astore_2
   29:	aload_2
   30:	areturn
  Exception table:
   from   to  target type
     2    19    19   Class java/lang/Throwable

  LineNumberTable: 
   line 29: 0
   line 28: 1
   line 29: 2
   line 31: 19

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      31      0    this       Lscala/concurrent/ops$;
   0      31      1    left       Lscala/Function0;
   2      28      2    exceptionResult1       Lscala/Either;


}

