Compiled from "TaskRunner.scala"
public abstract class scala.concurrent.TaskRunner$class extends java.lang.Object
  SourceFile: "TaskRunner.scala"
  Scala: length = 0x
   
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	TaskRunner.scala;
Asciz	tryCatch;
Asciz	(Lscala/concurrent/TaskRunner;Lscala/Function0;)Lscala/Either;;
Asciz	Code;
Asciz	scala/concurrent/ops$;
class	scala/concurrent/ops$
Asciz	MODULE$;
Asciz	Lscala/concurrent/ops$;;
NameAndType	MODULE$:Lscala/concurrent/ops$;
Field	scala/concurrent/ops$.MODULE$:Lscala/concurrent/ops$;
Asciz	LineNumberTable;
Asciz	tryCatchEx;
Asciz	(Lscala/Function0;)Lscala/Either;;
NameAndType	tryCatchEx:(Lscala/Function0;)Lscala/Either;
Method	scala/concurrent/ops$.tryCatchEx:(Lscala/Function0;)Lscala/Either;
Asciz	$this;
Asciz	Lscala/concurrent/TaskRunner;;
Asciz	body;
Asciz	Lscala/Function0;;
Asciz	LocalVariableTable;
Asciz	$init$;
Asciz	(Lscala/concurrent/TaskRunner;)V;
Asciz	Scala;
Asciz	scala/concurrent/TaskRunner$class;
class	scala/concurrent/TaskRunner$class
Asciz	java/lang/Object;
class	java/lang/Object

{
public static scala.Either tryCatch(scala.concurrent.TaskRunner, scala.Function0);
  Signature: (Lscala/concurrent/TaskRunner;Lscala/Function0;)Lscala/Either;
  Code:
   Stack=2, Locals=2, Args_size=2
	getstatic	Field scala/concurrent/ops$.MODULE$:Lscala/concurrent/ops$;
	aload_1
	invokevirtual	Method scala/concurrent/ops$.tryCatchEx:(Lscala/Function0;)Lscala/Either;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      8      0    $this       Lscala/concurrent/TaskRunner;
   0      8      1    body       Lscala/Function0;


public static void $init$(scala.concurrent.TaskRunner);
  Signature: (Lscala/concurrent/TaskRunner;)V
  Code:
   Stack=0, Locals=1, Args_size=1
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      1      0    $this       Lscala/concurrent/TaskRunner;


}

