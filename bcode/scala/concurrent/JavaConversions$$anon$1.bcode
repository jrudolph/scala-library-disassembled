Compiled from "JavaConversions.scala"
public final class scala.concurrent.JavaConversions$$anon$1 extends java.lang.Object implements scala.concurrent.ThreadPoolRunner
  SourceFile: "JavaConversions.scala"
  Scala: length = 0x
   
  InnerClass: 
   public final #101= #10 of #100; //$anon$1=class scala/concurrent/JavaConversions$$anon$1 of class scala/concurrent/JavaConversions
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	JavaConversions.scala;
const #3 = Asciz	exec$1;
const #4 = Asciz	Ljava/util/concurrent/ExecutorService;;
const #5 = Asciz	<init>;
const #6 = Asciz	(Ljava/util/concurrent/ExecutorService;)V;
const #7 = Asciz	Code;
const #8 = Asciz	LineNumberTable;
const #9 = Asciz	scala/concurrent/JavaConversions$$anon$1;
const #10 = class	#9;	//  scala/concurrent/JavaConversions$$anon$1
const #11 = NameAndType	#3:#4;//  exec$1:Ljava/util/concurrent/ExecutorService;
const #12 = Field	#10.#11;	//  scala/concurrent/JavaConversions$$anon$1.exec$1:Ljava/util/concurrent/ExecutorService;
const #13 = Asciz	java/lang/Object;
const #14 = class	#13;	//  java/lang/Object
const #15 = Asciz	()V;
const #16 = NameAndType	#5:#15;//  "<init>":()V
const #17 = Method	#14.#16;	//  java/lang/Object."<init>":()V
const #18 = Asciz	scala/concurrent/TaskRunner$class;
const #19 = class	#18;	//  scala/concurrent/TaskRunner$class
const #20 = Asciz	$init$;
const #21 = Asciz	(Lscala/concurrent/TaskRunner;)V;
const #22 = NameAndType	#20:#21;//  $init$:(Lscala/concurrent/TaskRunner;)V
const #23 = Method	#19.#22;	//  scala/concurrent/TaskRunner$class.$init$:(Lscala/concurrent/TaskRunner;)V
const #24 = Asciz	scala/concurrent/ThreadPoolRunner$class;
const #25 = class	#24;	//  scala/concurrent/ThreadPoolRunner$class
const #26 = Asciz	(Lscala/concurrent/ThreadPoolRunner;)V;
const #27 = NameAndType	#20:#26;//  $init$:(Lscala/concurrent/ThreadPoolRunner;)V
const #28 = Method	#25.#27;	//  scala/concurrent/ThreadPoolRunner$class.$init$:(Lscala/concurrent/ThreadPoolRunner;)V
const #29 = Asciz	functionAsTask;
const #30 = Asciz	(Lscala/Function0;)Ljava/lang/Object;;
const #31 = Asciz	scala/concurrent/ThreadPoolRunner;
const #32 = class	#31;	//  scala/concurrent/ThreadPoolRunner
const #33 = Asciz	(Lscala/Function0;)Ljava/util/concurrent/Callable;;
const #34 = NameAndType	#29:#33;//  functionAsTask:(Lscala/Function0;)Ljava/util/concurrent/Callable;
const #35 = InterfaceMethod	#32.#34;	//  scala/concurrent/ThreadPoolRunner.functionAsTask:(Lscala/Function0;)Ljava/util/concurrent/Callable;
const #36 = Asciz	this;
const #37 = Asciz	Lscala/concurrent/JavaConversions$$anon$1;;
const #38 = Asciz	fun;
const #39 = Asciz	Lscala/Function0;;
const #40 = Asciz	LocalVariableTable;
const #41 = Asciz	futureAsFunction;
const #42 = Asciz	(Ljava/lang/Object;)Lscala/Function0;;
const #43 = Asciz	java/util/concurrent/Future;
const #44 = class	#43;	//  java/util/concurrent/Future
const #45 = Asciz	(Ljava/util/concurrent/Future;)Lscala/Function0;;
const #46 = NameAndType	#41:#45;//  futureAsFunction:(Ljava/util/concurrent/Future;)Lscala/Function0;
const #47 = InterfaceMethod	#32.#46;	//  scala/concurrent/ThreadPoolRunner.futureAsFunction:(Ljava/util/concurrent/Future;)Lscala/Function0;
const #48 = Asciz	x;
const #49 = Asciz	Ljava/lang/Object;;
const #50 = Asciz	submit;
const #51 = Asciz	(Ljava/lang/Object;)Ljava/lang/Object;;
const #52 = Asciz	java/util/concurrent/Callable;
const #53 = class	#52;	//  java/util/concurrent/Callable
const #54 = Asciz	(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;;
const #55 = NameAndType	#50:#54;//  submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
const #56 = InterfaceMethod	#32.#55;	//  scala/concurrent/ThreadPoolRunner.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
const #57 = Asciz	task;
const #58 = Asciz	execute;
const #59 = Asciz	(Ljava/lang/Object;)V;
const #60 = Asciz	(Ljava/util/concurrent/Callable;)V;
const #61 = NameAndType	#58:#60;//  execute:(Ljava/util/concurrent/Callable;)V
const #62 = InterfaceMethod	#32.#61;	//  scala/concurrent/ThreadPoolRunner.execute:(Ljava/util/concurrent/Callable;)V
const #63 = Asciz	shutdown;
const #64 = Asciz	java/util/concurrent/ExecutorService;
const #65 = class	#64;	//  java/util/concurrent/ExecutorService
const #66 = NameAndType	#63:#15;//  shutdown:()V
const #67 = InterfaceMethod	#65.#66;	//  java/util/concurrent/ExecutorService.shutdown:()V
const #68 = Asciz	executor;
const #69 = Asciz	()Ljava/util/concurrent/ExecutorService;;
const #70 = Asciz	tryCatch;
const #71 = Asciz	(Lscala/Function0;)Lscala/Either;;
const #72 = Asciz	(Lscala/concurrent/TaskRunner;Lscala/Function0;)Lscala/Either;;
const #73 = NameAndType	#70:#72;//  tryCatch:(Lscala/concurrent/TaskRunner;Lscala/Function0;)Lscala/Either;
const #74 = Method	#19.#73;	//  scala/concurrent/TaskRunner$class.tryCatch:(Lscala/concurrent/TaskRunner;Lscala/Function0;)Lscala/Either;
const #75 = Asciz	body;
const #76 = Asciz	managedBlock;
const #77 = Asciz	(Lscala/concurrent/ManagedBlocker;)V;
const #78 = Asciz	(Lscala/concurrent/ThreadPoolRunner;Lscala/concurrent/ManagedBlocker;)V;
const #79 = NameAndType	#76:#78;//  managedBlock:(Lscala/concurrent/ThreadPoolRunner;Lscala/concurrent/ManagedBlocker;)V
const #80 = Method	#25.#79;	//  scala/concurrent/ThreadPoolRunner$class.managedBlock:(Lscala/concurrent/ThreadPoolRunner;Lscala/concurrent/ManagedBlocker;)V
const #81 = Asciz	blocker;
const #82 = Asciz	Lscala/concurrent/ManagedBlocker;;
const #83 = Asciz	(Lscala/concurrent/ThreadPoolRunner;Ljava/util/concurrent/Callable;)V;
const #84 = NameAndType	#58:#83;//  execute:(Lscala/concurrent/ThreadPoolRunner;Ljava/util/concurrent/Callable;)V
const #85 = Method	#25.#84;	//  scala/concurrent/ThreadPoolRunner$class.execute:(Lscala/concurrent/ThreadPoolRunner;Ljava/util/concurrent/Callable;)V
const #86 = Asciz	Ljava/util/concurrent/Callable;;
const #87 = Asciz	(Lscala/concurrent/ThreadPoolRunner;Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;;
const #88 = NameAndType	#50:#87;//  submit:(Lscala/concurrent/ThreadPoolRunner;Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
const #89 = Method	#25.#88;	//  scala/concurrent/ThreadPoolRunner$class.submit:(Lscala/concurrent/ThreadPoolRunner;Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
const #90 = Asciz	(Lscala/concurrent/ThreadPoolRunner;Ljava/util/concurrent/Future;)Lscala/Function0;;
const #91 = NameAndType	#41:#90;//  futureAsFunction:(Lscala/concurrent/ThreadPoolRunner;Ljava/util/concurrent/Future;)Lscala/Function0;
const #92 = Method	#25.#91;	//  scala/concurrent/ThreadPoolRunner$class.futureAsFunction:(Lscala/concurrent/ThreadPoolRunner;Ljava/util/concurrent/Future;)Lscala/Function0;
const #93 = Asciz	Ljava/util/concurrent/Future;;
const #94 = Asciz	(Lscala/concurrent/ThreadPoolRunner;Lscala/Function0;)Ljava/util/concurrent/Callable;;
const #95 = NameAndType	#29:#94;//  functionAsTask:(Lscala/concurrent/ThreadPoolRunner;Lscala/Function0;)Ljava/util/concurrent/Callable;
const #96 = Method	#25.#95;	//  scala/concurrent/ThreadPoolRunner$class.functionAsTask:(Lscala/concurrent/ThreadPoolRunner;Lscala/Function0;)Ljava/util/concurrent/Callable;
const #97 = Asciz	Scala;
const #98 = Asciz	InnerClasses;
const #99 = Asciz	scala/concurrent/JavaConversions;
const #100 = class	#99;	//  scala/concurrent/JavaConversions
const #101 = Asciz	$anon$1;

{
public scala.concurrent.JavaConversions$$anon$1(java.util.concurrent.ExecutorService);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	putfield	#12; //Field exec$1:Ljava/util/concurrent/ExecutorService;
   5:	aload_0
   6:	invokespecial	#17; //Method java/lang/Object."<init>":()V
   9:	aload_0
   10:	invokestatic	#23; //Method scala/concurrent/TaskRunner$class.$init$:(Lscala/concurrent/TaskRunner;)V
   13:	aload_0
   14:	invokestatic	#28; //Method scala/concurrent/ThreadPoolRunner$class.$init$:(Lscala/concurrent/ThreadPoolRunner;)V
   17:	return
  LineNumberTable: 
   line 23: 0


public java.lang.Object functionAsTask(scala.Function0);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokeinterface	#35,  2; //InterfaceMethod scala/concurrent/ThreadPoolRunner.functionAsTask:(Lscala/Function0;)Ljava/util/concurrent/Callable;
   7:	areturn
  LineNumberTable: 
   line 23: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      8      0    this       Lscala/concurrent/JavaConversions$$anon$1;
   0      8      1    fun       Lscala/Function0;


public scala.Function0 futureAsFunction(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	checkcast	#44; //class java/util/concurrent/Future
   5:	invokeinterface	#47,  2; //InterfaceMethod scala/concurrent/ThreadPoolRunner.futureAsFunction:(Ljava/util/concurrent/Future;)Lscala/Function0;
   10:	areturn
  LineNumberTable: 
   line 23: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      11      0    this       Lscala/concurrent/JavaConversions$$anon$1;
   0      11      1    x       Ljava/lang/Object;


public java.lang.Object submit(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	checkcast	#53; //class java/util/concurrent/Callable
   5:	invokeinterface	#56,  2; //InterfaceMethod scala/concurrent/ThreadPoolRunner.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
   10:	areturn
  LineNumberTable: 
   line 23: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      11      0    this       Lscala/concurrent/JavaConversions$$anon$1;
   0      11      1    task       Ljava/lang/Object;


public void execute(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	checkcast	#53; //class java/util/concurrent/Callable
   5:	invokeinterface	#62,  2; //InterfaceMethod scala/concurrent/ThreadPoolRunner.execute:(Ljava/util/concurrent/Callable;)V
   10:	return
  LineNumberTable: 
   line 23: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      11      0    this       Lscala/concurrent/JavaConversions$$anon$1;
   0      11      1    task       Ljava/lang/Object;


public void shutdown();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#12; //Field exec$1:Ljava/util/concurrent/ExecutorService;
   4:	invokeinterface	#67,  1; //InterfaceMethod java/util/concurrent/ExecutorService.shutdown:()V
   9:	return
  LineNumberTable: 
   line 28: 0


public java.util.concurrent.ExecutorService executor();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#12; //Field exec$1:Ljava/util/concurrent/ExecutorService;
   4:	areturn
  LineNumberTable: 
   line 25: 0


public scala.Either tryCatch(scala.Function0);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#74; //Method scala/concurrent/TaskRunner$class.tryCatch:(Lscala/concurrent/TaskRunner;Lscala/Function0;)Lscala/Either;
   5:	areturn
  LineNumberTable: 
   line 23: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/concurrent/JavaConversions$$anon$1;
   0      6      1    body       Lscala/Function0;


public void managedBlock(scala.concurrent.ManagedBlocker);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#80; //Method scala/concurrent/ThreadPoolRunner$class.managedBlock:(Lscala/concurrent/ThreadPoolRunner;Lscala/concurrent/ManagedBlocker;)V
   5:	return
  LineNumberTable: 
   line 23: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/concurrent/JavaConversions$$anon$1;
   0      6      1    blocker       Lscala/concurrent/ManagedBlocker;


public void execute(java.util.concurrent.Callable);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#85; //Method scala/concurrent/ThreadPoolRunner$class.execute:(Lscala/concurrent/ThreadPoolRunner;Ljava/util/concurrent/Callable;)V
   5:	return
  LineNumberTable: 
   line 23: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/concurrent/JavaConversions$$anon$1;
   0      6      1    task       Ljava/util/concurrent/Callable;


public java.util.concurrent.Future submit(java.util.concurrent.Callable);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#89; //Method scala/concurrent/ThreadPoolRunner$class.submit:(Lscala/concurrent/ThreadPoolRunner;Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
   5:	areturn
  LineNumberTable: 
   line 23: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/concurrent/JavaConversions$$anon$1;
   0      6      1    task       Ljava/util/concurrent/Callable;


public scala.Function0 futureAsFunction(java.util.concurrent.Future);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#92; //Method scala/concurrent/ThreadPoolRunner$class.futureAsFunction:(Lscala/concurrent/ThreadPoolRunner;Ljava/util/concurrent/Future;)Lscala/Function0;
   5:	areturn
  LineNumberTable: 
   line 23: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/concurrent/JavaConversions$$anon$1;
   0      6      1    x       Ljava/util/concurrent/Future;


public java.util.concurrent.Callable functionAsTask(scala.Function0);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#96; //Method scala/concurrent/ThreadPoolRunner$class.functionAsTask:(Lscala/concurrent/ThreadPoolRunner;Lscala/Function0;)Ljava/util/concurrent/Callable;
   5:	areturn
  LineNumberTable: 
   line 23: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/concurrent/JavaConversions$$anon$1;
   0      6      1    fun       Lscala/Function0;


}

