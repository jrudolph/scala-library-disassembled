Compiled from "ThreadPoolRunner.scala"
public abstract class scala.concurrent.ThreadPoolRunner$class extends java.lang.Object
  SourceFile: "ThreadPoolRunner.scala"
  Scala: length = 0x
   
  InnerClass: 
   public #65= #57 of #23; //RunCallable=class scala/concurrent/ThreadPoolRunner$RunCallable of class scala/concurrent/ThreadPoolRunner
   public final #66= #47 of #23; //$anonfun$futureAsFunction$1=class scala/concurrent/ThreadPoolRunner$$anonfun$futureAsFunction$1 of class scala/concurrent/ThreadPoolRunner
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	ThreadPoolRunner.scala;
const #3 = Asciz	$init$;
const #4 = Asciz	(Lscala/concurrent/ThreadPoolRunner;)V;
const #5 = Asciz	Code;
const #6 = Asciz	LineNumberTable;
const #7 = Asciz	$this;
const #8 = Asciz	Lscala/concurrent/ThreadPoolRunner;;
const #9 = Asciz	LocalVariableTable;
const #10 = Asciz	managedBlock;
const #11 = Asciz	(Lscala/concurrent/ThreadPoolRunner;Lscala/concurrent/ManagedBlocker;)V;
const #12 = Asciz	scala/concurrent/ManagedBlocker;
const #13 = class	#12;	//  scala/concurrent/ManagedBlocker
const #14 = Asciz	block;
const #15 = Asciz	()Z;
const #16 = NameAndType	#14:#15;//  block:()Z
const #17 = InterfaceMethod	#13.#16;	//  scala/concurrent/ManagedBlocker.block:()Z
const #18 = Asciz	blocker;
const #19 = Asciz	Lscala/concurrent/ManagedBlocker;;
const #20 = Asciz	execute;
const #21 = Asciz	(Lscala/concurrent/ThreadPoolRunner;Ljava/util/concurrent/Callable;)V;
const #22 = Asciz	scala/concurrent/ThreadPoolRunner;
const #23 = class	#22;	//  scala/concurrent/ThreadPoolRunner
const #24 = Asciz	executor;
const #25 = Asciz	()Ljava/util/concurrent/ExecutorService;;
const #26 = NameAndType	#24:#25;//  executor:()Ljava/util/concurrent/ExecutorService;
const #27 = InterfaceMethod	#23.#26;	//  scala/concurrent/ThreadPoolRunner.executor:()Ljava/util/concurrent/ExecutorService;
const #28 = Asciz	java/lang/Runnable;
const #29 = class	#28;	//  java/lang/Runnable
const #30 = Asciz	java/util/concurrent/Executor;
const #31 = class	#30;	//  java/util/concurrent/Executor
const #32 = Asciz	(Ljava/lang/Runnable;)V;
const #33 = NameAndType	#20:#32;//  execute:(Ljava/lang/Runnable;)V
const #34 = InterfaceMethod	#31.#33;	//  java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
const #35 = Asciz	task;
const #36 = Asciz	Ljava/util/concurrent/Callable;;
const #37 = Asciz	submit;
const #38 = Asciz	(Lscala/concurrent/ThreadPoolRunner;Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;;
const #39 = Asciz	java/util/concurrent/ExecutorService;
const #40 = class	#39;	//  java/util/concurrent/ExecutorService
const #41 = Asciz	(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;;
const #42 = NameAndType	#37:#41;//  submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
const #43 = InterfaceMethod	#40.#42;	//  java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
const #44 = Asciz	futureAsFunction;
const #45 = Asciz	(Lscala/concurrent/ThreadPoolRunner;Ljava/util/concurrent/Future;)Lscala/Function0;;
const #46 = Asciz	scala/concurrent/ThreadPoolRunner$$anonfun$futureAsFunction$1;
const #47 = class	#46;	//  scala/concurrent/ThreadPoolRunner$$anonfun$futureAsFunction$1
const #48 = Asciz	<init>;
const #49 = Asciz	(Lscala/concurrent/ThreadPoolRunner;Ljava/util/concurrent/Future;)V;
const #50 = NameAndType	#48:#49;//  "<init>":(Lscala/concurrent/ThreadPoolRunner;Ljava/util/concurrent/Future;)V
const #51 = Method	#47.#50;	//  scala/concurrent/ThreadPoolRunner$$anonfun$futureAsFunction$1."<init>":(Lscala/concurrent/ThreadPoolRunner;Ljava/util/concurrent/Future;)V
const #52 = Asciz	x$1;
const #53 = Asciz	Ljava/util/concurrent/Future;;
const #54 = Asciz	functionAsTask;
const #55 = Asciz	(Lscala/concurrent/ThreadPoolRunner;Lscala/Function0;)Ljava/util/concurrent/Callable;;
const #56 = Asciz	scala/concurrent/ThreadPoolRunner$RunCallable;
const #57 = class	#56;	//  scala/concurrent/ThreadPoolRunner$RunCallable
const #58 = Asciz	(Lscala/concurrent/ThreadPoolRunner;Lscala/Function0;)V;
const #59 = NameAndType	#48:#58;//  "<init>":(Lscala/concurrent/ThreadPoolRunner;Lscala/Function0;)V
const #60 = Method	#57.#59;	//  scala/concurrent/ThreadPoolRunner$RunCallable."<init>":(Lscala/concurrent/ThreadPoolRunner;Lscala/Function0;)V
const #61 = Asciz	fun;
const #62 = Asciz	Lscala/Function0;;
const #63 = Asciz	Scala;
const #64 = Asciz	InnerClasses;
const #65 = Asciz	RunCallable;
const #66 = Asciz	$anonfun$futureAsFunction$1;
const #67 = Asciz	scala/concurrent/ThreadPoolRunner$class;
const #68 = class	#67;	//  scala/concurrent/ThreadPoolRunner$class
const #69 = Asciz	java/lang/Object;
const #70 = class	#69;	//  java/lang/Object

{
public static void $init$(scala.concurrent.ThreadPoolRunner);
  Code:
   Stack=0, Locals=1, Args_size=1
   0:	return
  LineNumberTable: 
   line 22: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      1      0    $this       Lscala/concurrent/ThreadPoolRunner;


public static void managedBlock(scala.concurrent.ThreadPoolRunner, scala.concurrent.ManagedBlocker);
  Code:
   Stack=1, Locals=2, Args_size=2
   0:	aload_1
   1:	invokeinterface	#17,  1; //InterfaceMethod scala/concurrent/ManagedBlocker.block:()Z
   6:	pop
   7:	return
  LineNumberTable: 
   line 49: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      8      0    $this       Lscala/concurrent/ThreadPoolRunner;
   0      8      1    blocker       Lscala/concurrent/ManagedBlocker;


public static void execute(scala.concurrent.ThreadPoolRunner, java.util.concurrent.Callable);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	invokeinterface	#27,  1; //InterfaceMethod scala/concurrent/ThreadPoolRunner.executor:()Ljava/util/concurrent/ExecutorService;
   6:	aload_1
   7:	checkcast	#29; //class java/lang/Runnable
   10:	invokeinterface	#34,  2; //InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
   15:	return
  LineNumberTable: 
   line 45: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      16      0    $this       Lscala/concurrent/ThreadPoolRunner;
   0      16      1    task       Ljava/util/concurrent/Callable;


public static java.util.concurrent.Future submit(scala.concurrent.ThreadPoolRunner, java.util.concurrent.Callable);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	invokeinterface	#27,  1; //InterfaceMethod scala/concurrent/ThreadPoolRunner.executor:()Ljava/util/concurrent/ExecutorService;
   6:	aload_1
   7:	invokeinterface	#43,  2; //InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
   12:	areturn
  LineNumberTable: 
   line 41: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      13      0    $this       Lscala/concurrent/ThreadPoolRunner;
   0      13      1    task       Ljava/util/concurrent/Callable;


public static scala.Function0 futureAsFunction(scala.concurrent.ThreadPoolRunner, java.util.concurrent.Future);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#47; //class scala/concurrent/ThreadPoolRunner$$anonfun$futureAsFunction$1
   3:	dup
   4:	aload_0
   5:	aload_1
   6:	invokespecial	#51; //Method scala/concurrent/ThreadPoolRunner$$anonfun$futureAsFunction$1."<init>":(Lscala/concurrent/ThreadPoolRunner;Ljava/util/concurrent/Future;)V
   9:	areturn
  LineNumberTable: 
   line 36: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    $this       Lscala/concurrent/ThreadPoolRunner;
   0      10      1    x$1       Ljava/util/concurrent/Future;


public static java.util.concurrent.Callable functionAsTask(scala.concurrent.ThreadPoolRunner, scala.Function0);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#57; //class scala/concurrent/ThreadPoolRunner$RunCallable
   3:	dup
   4:	aload_0
   5:	aload_1
   6:	invokespecial	#60; //Method scala/concurrent/ThreadPoolRunner$RunCallable."<init>":(Lscala/concurrent/ThreadPoolRunner;Lscala/Function0;)V
   9:	areturn
  LineNumberTable: 
   line 33: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    $this       Lscala/concurrent/ThreadPoolRunner;
   0      10      1    fun       Lscala/Function0;


}

