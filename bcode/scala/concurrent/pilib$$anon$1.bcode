Compiled from "pilib.scala"
public final class scala.concurrent.pilib$$anon$1 extends scala.concurrent.pilib$Spawn
  SourceFile: "pilib.scala"
  Scala: length = 0x
   
  InnerClass: 
   public abstract #46= #8 of #45; //Spawn=class scala/concurrent/pilib$Spawn of class scala/concurrent/pilib
   public final #49= #48 of #45; //$anon$1=class scala/concurrent/pilib$$anon$1 of class scala/concurrent/pilib
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	pilib.scala;
const #3 = Asciz	<init>;
const #4 = Asciz	()V;
const #5 = Asciz	Code;
const #6 = Asciz	LineNumberTable;
const #7 = Asciz	scala/concurrent/pilib$Spawn;
const #8 = class	#7;	//  scala/concurrent/pilib$Spawn
const #9 = NameAndType	#3:#4;//  "<init>":()V
const #10 = Method	#8.#9;	//  scala/concurrent/pilib$Spawn."<init>":()V
const #11 = Asciz	$greater;
const #12 = Asciz	$bar;
const #13 = Asciz	(Lscala/Function0;)Lscala/concurrent/pilib$Spawn;;
const #14 = Asciz	scala/concurrent/TaskRunners$;
const #15 = class	#14;	//  scala/concurrent/TaskRunners$
const #16 = Asciz	MODULE$;
const #17 = Asciz	Lscala/concurrent/TaskRunners$;;
const #18 = NameAndType	#16:#17;//  MODULE$:Lscala/concurrent/TaskRunners$;
const #19 = Field	#15.#18;	//  scala/concurrent/TaskRunners$.MODULE$:Lscala/concurrent/TaskRunners$;
const #20 = Asciz	threadRunner;
const #21 = Asciz	()Lscala/concurrent/FutureTaskRunner;;
const #22 = NameAndType	#20:#21;//  threadRunner:()Lscala/concurrent/FutureTaskRunner;
const #23 = Method	#15.#22;	//  scala/concurrent/TaskRunners$.threadRunner:()Lscala/concurrent/FutureTaskRunner;
const #24 = Asciz	scala/concurrent/TaskRunner;
const #25 = class	#24;	//  scala/concurrent/TaskRunner
const #26 = Asciz	functionAsTask;
const #27 = Asciz	(Lscala/Function0;)Ljava/lang/Object;;
const #28 = NameAndType	#26:#27;//  functionAsTask:(Lscala/Function0;)Ljava/lang/Object;
const #29 = InterfaceMethod	#25.#28;	//  scala/concurrent/TaskRunner.functionAsTask:(Lscala/Function0;)Ljava/lang/Object;
const #30 = Asciz	execute;
const #31 = Asciz	(Ljava/lang/Object;)V;
const #32 = NameAndType	#30:#31;//  execute:(Ljava/lang/Object;)V
const #33 = InterfaceMethod	#25.#32;	//  scala/concurrent/TaskRunner.execute:(Ljava/lang/Object;)V
const #34 = Asciz	this;
const #35 = Asciz	Lscala/concurrent/pilib$$anon$1;;
const #36 = Asciz	p;
const #37 = Asciz	Lscala/Function0;;
const #38 = Asciz	LocalVariableTable;
const #39 = Asciz	(Lscala/Function0<Ljava/lang/Object;>;)Lscala/concurrent/pilib$Spawn;;
const #40 = Asciz	Signature;
const #41 = Asciz	$less;
const #42 = Asciz	Scala;
const #43 = Asciz	InnerClasses;
const #44 = Asciz	scala/concurrent/pilib;
const #45 = class	#44;	//  scala/concurrent/pilib
const #46 = Asciz	Spawn;
const #47 = Asciz	scala/concurrent/pilib$$anon$1;
const #48 = class	#47;	//  scala/concurrent/pilib$$anon$1
const #49 = Asciz	$anon$1;

{
public scala.concurrent.pilib$$anon$1();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokespecial	#10; //Method scala/concurrent/pilib$Spawn."<init>":()V
   4:	return
  LineNumberTable: 
   line 48: 0


public void $greater();
  Code:
   Stack=0, Locals=1, Args_size=1
   0:	return
  LineNumberTable: 
   line 52: 0


public scala.concurrent.pilib$Spawn $bar(scala.Function0);
  Code:
   Stack=3, Locals=3, Args_size=2
   0:	getstatic	#19; //Field scala/concurrent/TaskRunners$.MODULE$:Lscala/concurrent/TaskRunners$;
   3:	invokevirtual	#23; //Method scala/concurrent/TaskRunners$.threadRunner:()Lscala/concurrent/FutureTaskRunner;
   6:	astore_2
   7:	aload_2
   8:	aload_2
   9:	aload_1
   10:	invokeinterface	#29,  2; //InterfaceMethod scala/concurrent/TaskRunner.functionAsTask:(Lscala/Function0;)Ljava/lang/Object;
   15:	invokeinterface	#33,  2; //InterfaceMethod scala/concurrent/TaskRunner.execute:(Ljava/lang/Object;)V
   20:	aload_0
   21:	areturn
  LineNumberTable: 
   line 51: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      22      0    this       Lscala/concurrent/pilib$$anon$1;
   0      22      1    p       Lscala/Function0;

  Signature: length = 0x2
   00 27 

public scala.concurrent.pilib$Spawn $less(scala.Function0);
  Code:
   Stack=3, Locals=3, Args_size=2
   0:	getstatic	#19; //Field scala/concurrent/TaskRunners$.MODULE$:Lscala/concurrent/TaskRunners$;
   3:	invokevirtual	#23; //Method scala/concurrent/TaskRunners$.threadRunner:()Lscala/concurrent/FutureTaskRunner;
   6:	astore_2
   7:	aload_2
   8:	aload_2
   9:	aload_1
   10:	invokeinterface	#29,  2; //InterfaceMethod scala/concurrent/TaskRunner.functionAsTask:(Lscala/Function0;)Ljava/lang/Object;
   15:	invokeinterface	#33,  2; //InterfaceMethod scala/concurrent/TaskRunner.execute:(Ljava/lang/Object;)V
   20:	aload_0
   21:	areturn
  LineNumberTable: 
   line 50: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      22      0    this       Lscala/concurrent/pilib$$anon$1;
   0      22      1    p       Lscala/Function0;

  Signature: length = 0x2
   00 27 

}

