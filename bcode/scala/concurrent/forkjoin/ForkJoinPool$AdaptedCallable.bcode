final class scala.concurrent.forkjoin.ForkJoinPool$AdaptedCallable extends scala.concurrent.forkjoin.ForkJoinTask implements java.util.concurrent.RunnableFuture
  Signature: length = 0x2
   00 24 
  InnerClass: 
   final #50= #12 of #48; //AdaptedCallable=class scala/concurrent/forkjoin/ForkJoinPool$AdaptedCallable of class scala/concurrent/forkjoin/ForkJoinPool
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Method	#13.#37;	//  scala/concurrent/forkjoin/ForkJoinTask."<init>":()V
const #2 = class	#38;	//  java/lang/NullPointerException
const #3 = Method	#2.#37;	//  java/lang/NullPointerException."<init>":()V
const #4 = Field	#12.#39;	//  scala/concurrent/forkjoin/ForkJoinPool$AdaptedCallable.callable:Ljava/util/concurrent/Callable;
const #5 = Field	#12.#40;	//  scala/concurrent/forkjoin/ForkJoinPool$AdaptedCallable.result:Ljava/lang/Object;
const #6 = InterfaceMethod	#41.#42;	//  java/util/concurrent/Callable.call:()Ljava/lang/Object;
const #7 = class	#43;	//  java/lang/Error
const #8 = class	#44;	//  java/lang/RuntimeException
const #9 = class	#45;	//  java/lang/Exception
const #10 = Method	#8.#46;	//  java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
const #11 = Method	#12.#47;	//  scala/concurrent/forkjoin/ForkJoinPool$AdaptedCallable.invoke:()Ljava/lang/Object;
const #12 = class	#49;	//  scala/concurrent/forkjoin/ForkJoinPool$AdaptedCallable
const #13 = class	#52;	//  scala/concurrent/forkjoin/ForkJoinTask
const #14 = class	#53;	//  java/util/concurrent/RunnableFuture
const #15 = Asciz	callable;
const #16 = Asciz	Ljava/util/concurrent/Callable;;
const #17 = Asciz	Signature;
const #18 = Asciz	Ljava/util/concurrent/Callable<TT;>;;
const #19 = Asciz	result;
const #20 = Asciz	Ljava/lang/Object;;
const #21 = Asciz	TT;;
const #22 = Asciz	<init>;
const #23 = Asciz	(Ljava/util/concurrent/Callable;)V;
const #24 = Asciz	Code;
const #25 = Asciz	(Ljava/util/concurrent/Callable<TT;>;)V;
const #26 = Asciz	getRawResult;
const #27 = Asciz	()Ljava/lang/Object;;
const #28 = Asciz	()TT;;
const #29 = Asciz	setRawResult;
const #30 = Asciz	(Ljava/lang/Object;)V;
const #31 = Asciz	(TT;)V;
const #32 = Asciz	exec;
const #33 = Asciz	()Z;
const #34 = Asciz	run;
const #35 = Asciz	()V;
const #36 = Asciz	<T:Ljava/lang/Object;>Lscala/concurrent/forkjoin/ForkJoinTask<TT;>;Ljava/util/concurrent/RunnableFuture<TT;>;;
const #37 = NameAndType	#22:#35;//  "<init>":()V
const #38 = Asciz	java/lang/NullPointerException;
const #39 = NameAndType	#15:#16;//  callable:Ljava/util/concurrent/Callable;
const #40 = NameAndType	#19:#20;//  result:Ljava/lang/Object;
const #41 = class	#54;	//  java/util/concurrent/Callable
const #42 = NameAndType	#55:#27;//  call:()Ljava/lang/Object;
const #43 = Asciz	java/lang/Error;
const #44 = Asciz	java/lang/RuntimeException;
const #45 = Asciz	java/lang/Exception;
const #46 = NameAndType	#22:#56;//  "<init>":(Ljava/lang/Throwable;)V
const #47 = NameAndType	#57:#27;//  invoke:()Ljava/lang/Object;
const #48 = class	#58;	//  scala/concurrent/forkjoin/ForkJoinPool
const #49 = Asciz	scala/concurrent/forkjoin/ForkJoinPool$AdaptedCallable;
const #50 = Asciz	AdaptedCallable;
const #51 = Asciz	InnerClasses;
const #52 = Asciz	scala/concurrent/forkjoin/ForkJoinTask;
const #53 = Asciz	java/util/concurrent/RunnableFuture;
const #54 = Asciz	java/util/concurrent/Callable;
const #55 = Asciz	call;
const #56 = Asciz	(Ljava/lang/Throwable;)V;
const #57 = Asciz	invoke;
const #58 = Asciz	scala/concurrent/forkjoin/ForkJoinPool;

{
final java.util.concurrent.Callable callable;
  Signature: length = 0x2
   00 12 

java.lang.Object result;
  Signature: length = 0x2
   00 15 

scala.concurrent.forkjoin.ForkJoinPool$AdaptedCallable(java.util.concurrent.Callable);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	invokespecial	#1; //Method scala/concurrent/forkjoin/ForkJoinTask."<init>":()V
   4:	aload_1
   5:	ifnonnull	16
   8:	new	#2; //class java/lang/NullPointerException
   11:	dup
   12:	invokespecial	#3; //Method java/lang/NullPointerException."<init>":()V
   15:	athrow
   16:	aload_0
   17:	aload_1
   18:	putfield	#4; //Field callable:Ljava/util/concurrent/Callable;
   21:	return
  Signature: length = 0x2
   00 19 

public java.lang.Object getRawResult();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#5; //Field result:Ljava/lang/Object;
   4:	areturn
  Signature: length = 0x2
   00 1C 

public void setRawResult(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	putfield	#5; //Field result:Ljava/lang/Object;
   5:	return
  Signature: length = 0x2
   00 1F 

public boolean exec();
  Code:
   Stack=3, Locals=2, Args_size=1
   0:	aload_0
   1:	aload_0
   2:	getfield	#4; //Field callable:Ljava/util/concurrent/Callable;
   5:	invokeinterface	#6,  1; //InterfaceMethod java/util/concurrent/Callable.call:()Ljava/lang/Object;
   10:	putfield	#5; //Field result:Ljava/lang/Object;
   13:	iconst_1
   14:	ireturn
   15:	astore_1
   16:	aload_1
   17:	athrow
   18:	astore_1
   19:	aload_1
   20:	athrow
   21:	astore_1
   22:	new	#8; //class java/lang/RuntimeException
   25:	dup
   26:	aload_1
   27:	invokespecial	#10; //Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
   30:	athrow
  Exception table:
   from   to  target type
     0    14    15   Class java/lang/Error

     0    14    18   Class java/lang/RuntimeException

     0    14    21   Class java/lang/Exception


public void run();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#11; //Method invoke:()Ljava/lang/Object;
   4:	pop
   5:	return

}

