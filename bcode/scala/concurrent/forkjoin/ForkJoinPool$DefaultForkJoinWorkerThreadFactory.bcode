class scala.concurrent.forkjoin.ForkJoinPool$DefaultForkJoinWorkerThreadFactory extends java.lang.Object implements scala.concurrent.forkjoin.ForkJoinPool$ForkJoinWorkerThreadFactory
  InnerClass: 
   #19= #5 of #17; //DefaultForkJoinWorkerThreadFactory=class scala/concurrent/forkjoin/ForkJoinPool$DefaultForkJoinWorkerThreadFactory of class scala/concurrent/forkjoin/ForkJoinPool
   public abstract #23= #7 of #17; //ForkJoinWorkerThreadFactory=class scala/concurrent/forkjoin/ForkJoinPool$ForkJoinWorkerThreadFactory of class scala/concurrent/forkjoin/ForkJoinPool
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Method	#6.#13;	//  java/lang/Object."<init>":()V
const #2 = class	#14;	//  scala/concurrent/forkjoin/ForkJoinWorkerThread
const #3 = Method	#2.#15;	//  scala/concurrent/forkjoin/ForkJoinWorkerThread."<init>":(Lscala/concurrent/forkjoin/ForkJoinPool;)V
const #4 = class	#16;	//  java/lang/OutOfMemoryError
const #5 = class	#18;	//  scala/concurrent/forkjoin/ForkJoinPool$DefaultForkJoinWorkerThreadFactory
const #6 = class	#21;	//  java/lang/Object
const #7 = class	#22;	//  scala/concurrent/forkjoin/ForkJoinPool$ForkJoinWorkerThreadFactory
const #8 = Asciz	<init>;
const #9 = Asciz	()V;
const #10 = Asciz	Code;
const #11 = Asciz	newThread;
const #12 = Asciz	(Lscala/concurrent/forkjoin/ForkJoinPool;)Lscala/concurrent/forkjoin/ForkJoinWorkerThread;;
const #13 = NameAndType	#8:#9;//  "<init>":()V
const #14 = Asciz	scala/concurrent/forkjoin/ForkJoinWorkerThread;
const #15 = NameAndType	#8:#24;//  "<init>":(Lscala/concurrent/forkjoin/ForkJoinPool;)V
const #16 = Asciz	java/lang/OutOfMemoryError;
const #17 = class	#25;	//  scala/concurrent/forkjoin/ForkJoinPool
const #18 = Asciz	scala/concurrent/forkjoin/ForkJoinPool$DefaultForkJoinWorkerThreadFactory;
const #19 = Asciz	DefaultForkJoinWorkerThreadFactory;
const #20 = Asciz	InnerClasses;
const #21 = Asciz	java/lang/Object;
const #22 = Asciz	scala/concurrent/forkjoin/ForkJoinPool$ForkJoinWorkerThreadFactory;
const #23 = Asciz	ForkJoinWorkerThreadFactory;
const #24 = Asciz	(Lscala/concurrent/forkjoin/ForkJoinPool;)V;
const #25 = Asciz	scala/concurrent/forkjoin/ForkJoinPool;

{
scala.concurrent.forkjoin.ForkJoinPool$DefaultForkJoinWorkerThreadFactory();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokespecial	#1; //Method java/lang/Object."<init>":()V
   4:	return

public scala.concurrent.forkjoin.ForkJoinWorkerThread newThread(scala.concurrent.forkjoin.ForkJoinPool);
  Code:
   Stack=3, Locals=3, Args_size=2
   0:	new	#2; //class scala/concurrent/forkjoin/ForkJoinWorkerThread
   3:	dup
   4:	aload_1
   5:	invokespecial	#3; //Method scala/concurrent/forkjoin/ForkJoinWorkerThread."<init>":(Lscala/concurrent/forkjoin/ForkJoinPool;)V
   8:	areturn
   9:	astore_2
   10:	aconst_null
   11:	areturn
  Exception table:
   from   to  target type
     0     8     9   Class java/lang/OutOfMemoryError


}

