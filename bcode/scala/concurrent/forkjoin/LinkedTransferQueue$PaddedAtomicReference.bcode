final class scala.concurrent.forkjoin.LinkedTransferQueue$PaddedAtomicReference extends java.util.concurrent.atomic.AtomicReference
  Signature: length = 0x2
   00 19 
  InnerClass: 
   final #29= #2 of #27; //PaddedAtomicReference=class scala/concurrent/forkjoin/LinkedTransferQueue$PaddedAtomicReference of class scala/concurrent/forkjoin/LinkedTransferQueue
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Method	#3.#26;	//  java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
const #2 = class	#28;	//  scala/concurrent/forkjoin/LinkedTransferQueue$PaddedAtomicReference
const #3 = class	#31;	//  java/util/concurrent/atomic/AtomicReference
const #4 = Asciz	p0;
const #5 = Asciz	Ljava/lang/Object;;
const #6 = Asciz	p1;
const #7 = Asciz	p2;
const #8 = Asciz	p3;
const #9 = Asciz	p4;
const #10 = Asciz	p5;
const #11 = Asciz	p6;
const #12 = Asciz	p7;
const #13 = Asciz	p8;
const #14 = Asciz	p9;
const #15 = Asciz	pa;
const #16 = Asciz	pb;
const #17 = Asciz	pc;
const #18 = Asciz	pd;
const #19 = Asciz	pe;
const #20 = Asciz	<init>;
const #21 = Asciz	(Ljava/lang/Object;)V;
const #22 = Asciz	Code;
const #23 = Asciz	Signature;
const #24 = Asciz	(TT;)V;
const #25 = Asciz	<T:Ljava/lang/Object;>Ljava/util/concurrent/atomic/AtomicReference<TT;>;;
const #26 = NameAndType	#20:#21;//  "<init>":(Ljava/lang/Object;)V
const #27 = class	#32;	//  scala/concurrent/forkjoin/LinkedTransferQueue
const #28 = Asciz	scala/concurrent/forkjoin/LinkedTransferQueue$PaddedAtomicReference;
const #29 = Asciz	PaddedAtomicReference;
const #30 = Asciz	InnerClasses;
const #31 = Asciz	java/util/concurrent/atomic/AtomicReference;
const #32 = Asciz	scala/concurrent/forkjoin/LinkedTransferQueue;

{
java.lang.Object p0;

java.lang.Object p1;

java.lang.Object p2;

java.lang.Object p3;

java.lang.Object p4;

java.lang.Object p5;

java.lang.Object p6;

java.lang.Object p7;

java.lang.Object p8;

java.lang.Object p9;

java.lang.Object pa;

java.lang.Object pb;

java.lang.Object pc;

java.lang.Object pd;

java.lang.Object pe;

scala.concurrent.forkjoin.LinkedTransferQueue$PaddedAtomicReference(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokespecial	#1; //Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
   5:	return
  Signature: length = 0x2
   00 18 

}

