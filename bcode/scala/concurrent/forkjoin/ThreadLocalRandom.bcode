Compiled from "ThreadLocalRandom.java"
public class scala.concurrent.forkjoin.ThreadLocalRandom extends java.util.Random
  SourceFile: "ThreadLocalRandom.java"
  InnerClass: 
   #25; //class scala/concurrent/forkjoin/ThreadLocalRandom$1
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Method	#27.#82;	//  java/util/Random."<init>":()V
const #2 = Field	#4.#83;	//  scala/concurrent/forkjoin/ThreadLocalRandom.localRandom:Ljava/lang/ThreadLocal;
const #3 = Method	#84.#85;	//  java/lang/ThreadLocal.get:()Ljava/lang/Object;
const #4 = class	#86;	//  scala/concurrent/forkjoin/ThreadLocalRandom
const #5 = Field	#4.#87;	//  scala/concurrent/forkjoin/ThreadLocalRandom.initialized:Z
const #6 = class	#88;	//  java/lang/UnsupportedOperationException
const #7 = Method	#6.#82;	//  java/lang/UnsupportedOperationException."<init>":()V
const #8 = long	25214903917l;
const #10 = long	281474976710655l;
const #12 = Field	#4.#89;	//  scala/concurrent/forkjoin/ThreadLocalRandom.rnd:J
const #13 = long	11l;
const #15 = class	#90;	//  java/lang/IllegalArgumentException
const #16 = Method	#15.#82;	//  java/lang/IllegalArgumentException."<init>":()V
const #17 = Method	#4.#91;	//  scala/concurrent/forkjoin/ThreadLocalRandom.nextInt:(I)I
const #18 = String	#92;	//  n must be positive
const #19 = Method	#15.#93;	//  java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
const #20 = long	2147483647l;
const #22 = Method	#4.#94;	//  scala/concurrent/forkjoin/ThreadLocalRandom.next:(I)I
const #23 = Method	#4.#95;	//  scala/concurrent/forkjoin/ThreadLocalRandom.nextLong:(J)J
const #24 = Method	#4.#96;	//  scala/concurrent/forkjoin/ThreadLocalRandom.nextDouble:()D
const #25 = class	#97;	//  scala/concurrent/forkjoin/ThreadLocalRandom$1
const #26 = Method	#25.#82;	//  scala/concurrent/forkjoin/ThreadLocalRandom$1."<init>":()V
const #27 = class	#100;	//  java/util/Random
const #28 = Asciz	multiplier;
const #29 = Asciz	J;
const #30 = Asciz	ConstantValue;
const #31 = Asciz	addend;
const #32 = Asciz	mask;
const #33 = Asciz	rnd;
const #34 = Asciz	initialized;
const #35 = Asciz	Z;
const #36 = Asciz	pad0;
const #37 = Asciz	pad1;
const #38 = Asciz	pad2;
const #39 = Asciz	pad3;
const #40 = Asciz	pad4;
const #41 = Asciz	pad5;
const #42 = Asciz	pad6;
const #43 = Asciz	pad7;
const #44 = Asciz	localRandom;
const #45 = Asciz	Ljava/lang/ThreadLocal;;
const #46 = Asciz	Signature;
const #47 = Asciz	Ljava/lang/ThreadLocal<Lscala/concurrent/forkjoin/ThreadLocalRandom;>;;
const #48 = Asciz	<init>;
const #49 = Asciz	()V;
const #50 = Asciz	Code;
const #51 = Asciz	LineNumberTable;
const #52 = Asciz	LocalVariableTable;
const #53 = Asciz	this;
const #54 = Asciz	Lscala/concurrent/forkjoin/ThreadLocalRandom;;
const #55 = Asciz	current;
const #56 = Asciz	()Lscala/concurrent/forkjoin/ThreadLocalRandom;;
const #57 = Asciz	setSeed;
const #58 = Asciz	(J)V;
const #59 = Asciz	seed;
const #60 = Asciz	next;
const #61 = Asciz	(I)I;
const #62 = Asciz	bits;
const #63 = Asciz	I;
const #64 = Asciz	nextInt;
const #65 = Asciz	(II)I;
const #66 = Asciz	least;
const #67 = Asciz	bound;
const #68 = Asciz	nextLong;
const #69 = Asciz	(J)J;
const #70 = Asciz	half;
const #71 = Asciz	nextn;
const #72 = Asciz	n;
const #73 = Asciz	offset;
const #74 = Asciz	(JJ)J;
const #75 = Asciz	nextDouble;
const #76 = Asciz	(D)D;
const #77 = Asciz	D;
const #78 = Asciz	(DD)D;
const #79 = Asciz	<clinit>;
const #80 = Asciz	SourceFile;
const #81 = Asciz	ThreadLocalRandom.java;
const #82 = NameAndType	#48:#49;//  "<init>":()V
const #83 = NameAndType	#44:#45;//  localRandom:Ljava/lang/ThreadLocal;
const #84 = class	#101;	//  java/lang/ThreadLocal
const #85 = NameAndType	#102:#103;//  get:()Ljava/lang/Object;
const #86 = Asciz	scala/concurrent/forkjoin/ThreadLocalRandom;
const #87 = NameAndType	#34:#35;//  initialized:Z
const #88 = Asciz	java/lang/UnsupportedOperationException;
const #89 = NameAndType	#33:#29;//  rnd:J
const #90 = Asciz	java/lang/IllegalArgumentException;
const #91 = NameAndType	#64:#61;//  nextInt:(I)I
const #92 = Asciz	n must be positive;
const #93 = NameAndType	#48:#104;//  "<init>":(Ljava/lang/String;)V
const #94 = NameAndType	#60:#61;//  next:(I)I
const #95 = NameAndType	#68:#69;//  nextLong:(J)J
const #96 = NameAndType	#75:#105;//  nextDouble:()D
const #97 = Asciz	scala/concurrent/forkjoin/ThreadLocalRandom$1;
const #98 = Asciz	;
const #99 = Asciz	InnerClasses;
const #100 = Asciz	java/util/Random;
const #101 = Asciz	java/lang/ThreadLocal;
const #102 = Asciz	get;
const #103 = Asciz	()Ljava/lang/Object;;
const #104 = Asciz	(Ljava/lang/String;)V;
const #105 = Asciz	()D;

{
boolean initialized;

scala.concurrent.forkjoin.ThreadLocalRandom();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokespecial	#1; //Method java/util/Random."<init>":()V
   4:	return
  LineNumberTable: 
   line 72: 0
   line 73: 4

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    this       Lscala/concurrent/forkjoin/ThreadLocalRandom;


public static scala.concurrent.forkjoin.ThreadLocalRandom current();
  Code:
   Stack=1, Locals=0, Args_size=0
   0:	getstatic	#2; //Field localRandom:Ljava/lang/ThreadLocal;
   3:	invokevirtual	#3; //Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
   6:	checkcast	#4; //class scala/concurrent/forkjoin/ThreadLocalRandom
   9:	areturn
  LineNumberTable: 
   line 80: 0


public void setSeed(long);
  Code:
   Stack=5, Locals=3, Args_size=2
   0:	aload_0
   1:	getfield	#5; //Field initialized:Z
   4:	ifeq	15
   7:	new	#6; //class java/lang/UnsupportedOperationException
   10:	dup
   11:	invokespecial	#7; //Method java/lang/UnsupportedOperationException."<init>":()V
   14:	athrow
   15:	aload_0
   16:	iconst_1
   17:	putfield	#5; //Field initialized:Z
   20:	aload_0
   21:	lload_1
   22:	ldc2_w	#8; //long 25214903917l
   25:	lxor
   26:	ldc2_w	#10; //long 281474976710655l
   29:	land
   30:	putfield	#12; //Field rnd:J
   33:	return
  LineNumberTable: 
   line 89: 0
   line 90: 7
   line 91: 15
   line 92: 20
   line 93: 33

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      34      0    this       Lscala/concurrent/forkjoin/ThreadLocalRandom;
   0      34      1    seed       J


protected int next(int);
  Code:
   Stack=5, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_0
   2:	getfield	#12; //Field rnd:J
   5:	ldc2_w	#8; //long 25214903917l
   8:	lmul
   9:	ldc2_w	#13; //long 11l
   12:	ladd
   13:	ldc2_w	#10; //long 281474976710655l
   16:	land
   17:	dup2_x1
   18:	putfield	#12; //Field rnd:J
   21:	bipush	48
   23:	iload_1
   24:	isub
   25:	lushr
   26:	l2i
   27:	ireturn
  LineNumberTable: 
   line 96: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      28      0    this       Lscala/concurrent/forkjoin/ThreadLocalRandom;
   0      28      1    bits       I


public int nextInt(int, int);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	iload_1
   1:	iload_2
   2:	if_icmplt	13
   5:	new	#15; //class java/lang/IllegalArgumentException
   8:	dup
   9:	invokespecial	#16; //Method java/lang/IllegalArgumentException."<init>":()V
   12:	athrow
   13:	aload_0
   14:	iload_2
   15:	iload_1
   16:	isub
   17:	invokevirtual	#17; //Method nextInt:(I)I
   20:	iload_1
   21:	iadd
   22:	ireturn
  LineNumberTable: 
   line 109: 0
   line 110: 5
   line 111: 13

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      23      0    this       Lscala/concurrent/forkjoin/ThreadLocalRandom;
   0      23      1    least       I
   0      23      2    bound       I


public long nextLong(long);
  Code:
   Stack=6, Locals=10, Args_size=2
   0:	lload_1
   1:	lconst_0
   2:	lcmp
   3:	ifgt	16
   6:	new	#15; //class java/lang/IllegalArgumentException
   9:	dup
   10:	ldc	#18; //String n must be positive
   12:	invokespecial	#19; //Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
   15:	athrow
   16:	lconst_0
   17:	lstore_3
   18:	lload_1
   19:	ldc2_w	#20; //long 2147483647l
   22:	lcmp
   23:	iflt	76
   26:	aload_0
   27:	iconst_2
   28:	invokevirtual	#22; //Method next:(I)I
   31:	istore	5
   33:	lload_1
   34:	iconst_1
   35:	lushr
   36:	lstore	6
   38:	iload	5
   40:	iconst_2
   41:	iand
   42:	ifne	50
   45:	lload	6
   47:	goto	54
   50:	lload_1
   51:	lload	6
   53:	lsub
   54:	lstore	8
   56:	iload	5
   58:	iconst_1
   59:	iand
   60:	ifne	70
   63:	lload_3
   64:	lload_1
   65:	lload	8
   67:	lsub
   68:	ladd
   69:	lstore_3
   70:	lload	8
   72:	lstore_1
   73:	goto	18
   76:	lload_3
   77:	aload_0
   78:	lload_1
   79:	l2i
   80:	invokevirtual	#17; //Method nextInt:(I)I
   83:	i2l
   84:	ladd
   85:	lreturn
  LineNumberTable: 
   line 123: 0
   line 124: 6
   line 130: 16
   line 131: 18
   line 132: 26
   line 133: 33
   line 134: 38
   line 135: 56
   line 136: 63
   line 137: 70
   line 138: 73
   line 139: 76

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   33      40      5    bits       I
   38      35      6    half       J
   56      17      8    nextn       J
   0      86      0    this       Lscala/concurrent/forkjoin/ThreadLocalRandom;
   0      86      1    n       J
   18      68      3    offset       J


public long nextLong(long, long);
  Code:
   Stack=5, Locals=5, Args_size=3
   0:	lload_1
   1:	lload_3
   2:	lcmp
   3:	iflt	14
   6:	new	#15; //class java/lang/IllegalArgumentException
   9:	dup
   10:	invokespecial	#16; //Method java/lang/IllegalArgumentException."<init>":()V
   13:	athrow
   14:	aload_0
   15:	lload_3
   16:	lload_1
   17:	lsub
   18:	invokevirtual	#23; //Method nextLong:(J)J
   21:	lload_1
   22:	ladd
   23:	lreturn
  LineNumberTable: 
   line 152: 0
   line 153: 6
   line 154: 14

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      24      0    this       Lscala/concurrent/forkjoin/ThreadLocalRandom;
   0      24      1    least       J
   0      24      3    bound       J


public double nextDouble(double);
  Code:
   Stack=4, Locals=3, Args_size=2
   0:	dload_1
   1:	dconst_0
   2:	dcmpg
   3:	ifgt	16
   6:	new	#15; //class java/lang/IllegalArgumentException
   9:	dup
   10:	ldc	#18; //String n must be positive
   12:	invokespecial	#19; //Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
   15:	athrow
   16:	aload_0
   17:	invokevirtual	#24; //Method nextDouble:()D
   20:	dload_1
   21:	dmul
   22:	dreturn
  LineNumberTable: 
   line 166: 0
   line 167: 6
   line 168: 16

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      23      0    this       Lscala/concurrent/forkjoin/ThreadLocalRandom;
   0      23      1    n       D


public double nextDouble(double, double);
  Code:
   Stack=6, Locals=5, Args_size=3
   0:	dload_1
   1:	dload_3
   2:	dcmpl
   3:	iflt	14
   6:	new	#15; //class java/lang/IllegalArgumentException
   9:	dup
   10:	invokespecial	#16; //Method java/lang/IllegalArgumentException."<init>":()V
   13:	athrow
   14:	aload_0
   15:	invokevirtual	#24; //Method nextDouble:()D
   18:	dload_3
   19:	dload_1
   20:	dsub
   21:	dmul
   22:	dload_1
   23:	dadd
   24:	dreturn
  LineNumberTable: 
   line 181: 0
   line 182: 6
   line 183: 14

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      25      0    this       Lscala/concurrent/forkjoin/ThreadLocalRandom;
   0      25      1    least       D
   0      25      3    bound       D


static {};
  Code:
   Stack=2, Locals=0, Args_size=0
   0:	new	#25; //class scala/concurrent/forkjoin/ThreadLocalRandom$1
   3:	dup
   4:	invokespecial	#26; //Method scala/concurrent/forkjoin/ThreadLocalRandom$1."<init>":()V
   7:	putstatic	#2; //Field localRandom:Ljava/lang/ThreadLocal;
   10:	return
  LineNumberTable: 
   line 58: 0


}

