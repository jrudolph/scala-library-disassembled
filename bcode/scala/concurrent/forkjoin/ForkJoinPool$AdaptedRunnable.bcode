final class scala.concurrent.forkjoin.ForkJoinPool$AdaptedRunnable extends scala.concurrent.forkjoin.ForkJoinTask implements java.util.concurrent.RunnableFuture
  Signature: length = 0x2
   00 21 
  InnerClass: 
   final #44= #9 of #42; //AdaptedRunnable=class scala/concurrent/forkjoin/ForkJoinPool$AdaptedRunnable of class scala/concurrent/forkjoin/ForkJoinPool
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Method	#10.#34;	//  scala/concurrent/forkjoin/ForkJoinTask."<init>":()V
const #2 = class	#35;	//  java/lang/NullPointerException
const #3 = Method	#2.#34;	//  java/lang/NullPointerException."<init>":()V
const #4 = Field	#9.#36;	//  scala/concurrent/forkjoin/ForkJoinPool$AdaptedRunnable.runnable:Ljava/lang/Runnable;
const #5 = Field	#9.#37;	//  scala/concurrent/forkjoin/ForkJoinPool$AdaptedRunnable.resultOnCompletion:Ljava/lang/Object;
const #6 = Field	#9.#38;	//  scala/concurrent/forkjoin/ForkJoinPool$AdaptedRunnable.result:Ljava/lang/Object;
const #7 = InterfaceMethod	#39.#40;	//  java/lang/Runnable.run:()V
const #8 = Method	#9.#41;	//  scala/concurrent/forkjoin/ForkJoinPool$AdaptedRunnable.invoke:()Ljava/lang/Object;
const #9 = class	#43;	//  scala/concurrent/forkjoin/ForkJoinPool$AdaptedRunnable
const #10 = class	#46;	//  scala/concurrent/forkjoin/ForkJoinTask
const #11 = class	#47;	//  java/util/concurrent/RunnableFuture
const #12 = Asciz	runnable;
const #13 = Asciz	Ljava/lang/Runnable;;
const #14 = Asciz	resultOnCompletion;
const #15 = Asciz	Ljava/lang/Object;;
const #16 = Asciz	Signature;
const #17 = Asciz	TT;;
const #18 = Asciz	result;
const #19 = Asciz	<init>;
const #20 = Asciz	(Ljava/lang/Runnable;Ljava/lang/Object;)V;
const #21 = Asciz	Code;
const #22 = Asciz	(Ljava/lang/Runnable;TT;)V;
const #23 = Asciz	getRawResult;
const #24 = Asciz	()Ljava/lang/Object;;
const #25 = Asciz	()TT;;
const #26 = Asciz	setRawResult;
const #27 = Asciz	(Ljava/lang/Object;)V;
const #28 = Asciz	(TT;)V;
const #29 = Asciz	exec;
const #30 = Asciz	()Z;
const #31 = Asciz	run;
const #32 = Asciz	()V;
const #33 = Asciz	<T:Ljava/lang/Object;>Lscala/concurrent/forkjoin/ForkJoinTask<TT;>;Ljava/util/concurrent/RunnableFuture<TT;>;;
const #34 = NameAndType	#19:#32;//  "<init>":()V
const #35 = Asciz	java/lang/NullPointerException;
const #36 = NameAndType	#12:#13;//  runnable:Ljava/lang/Runnable;
const #37 = NameAndType	#14:#15;//  resultOnCompletion:Ljava/lang/Object;
const #38 = NameAndType	#18:#15;//  result:Ljava/lang/Object;
const #39 = class	#48;	//  java/lang/Runnable
const #40 = NameAndType	#31:#32;//  run:()V
const #41 = NameAndType	#49:#24;//  invoke:()Ljava/lang/Object;
const #42 = class	#50;	//  scala/concurrent/forkjoin/ForkJoinPool
const #43 = Asciz	scala/concurrent/forkjoin/ForkJoinPool$AdaptedRunnable;
const #44 = Asciz	AdaptedRunnable;
const #45 = Asciz	InnerClasses;
const #46 = Asciz	scala/concurrent/forkjoin/ForkJoinTask;
const #47 = Asciz	java/util/concurrent/RunnableFuture;
const #48 = Asciz	java/lang/Runnable;
const #49 = Asciz	invoke;
const #50 = Asciz	scala/concurrent/forkjoin/ForkJoinPool;

{
final java.lang.Runnable runnable;

final java.lang.Object resultOnCompletion;
  Signature: length = 0x2
   00 11 

java.lang.Object result;
  Signature: length = 0x2
   00 11 

scala.concurrent.forkjoin.ForkJoinPool$AdaptedRunnable(java.lang.Runnable, java.lang.Object);
  Code:
   Stack=2, Locals=3, Args_size=3
   0:	aload_0
   1:	invokespecial	#1; //Method scala/concurrent/forkjoin/ForkJoinTask."<init>":()V
   4:	aload_1
   5:	ifnonnull	16
   8:	new	#2; //class java/lang/NullPointerException
   11:	dup
   12:	invokespecial	#3; //Method java/lang/NullPointerException."<init>":()V
   15:	athrow
   16:	aload_0
   17:	aload_1
   18:	putfield	#4; //Field runnable:Ljava/lang/Runnable;
   21:	aload_0
   22:	aload_2
   23:	putfield	#5; //Field resultOnCompletion:Ljava/lang/Object;
   26:	return
  Signature: length = 0x2
   00 16 

public java.lang.Object getRawResult();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#6; //Field result:Ljava/lang/Object;
   4:	areturn
  Signature: length = 0x2
   00 19 

public void setRawResult(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	putfield	#6; //Field result:Ljava/lang/Object;
   5:	return
  Signature: length = 0x2
   00 1C 

public boolean exec();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#4; //Field runnable:Ljava/lang/Runnable;
   4:	invokeinterface	#7,  1; //InterfaceMethod java/lang/Runnable.run:()V
   9:	aload_0
   10:	aload_0
   11:	getfield	#5; //Field resultOnCompletion:Ljava/lang/Object;
   14:	putfield	#6; //Field result:Ljava/lang/Object;
   17:	iconst_1
   18:	ireturn

public void run();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#8; //Method invoke:()Ljava/lang/Object;
   4:	pop
   5:	return

}

