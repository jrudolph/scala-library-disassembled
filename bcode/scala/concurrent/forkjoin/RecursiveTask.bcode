Compiled from "RecursiveTask.java"
public abstract class scala.concurrent.forkjoin.RecursiveTask extends scala.concurrent.forkjoin.ForkJoinTask
  Signature: length = 0x2
   00 1D 
  SourceFile: "RecursiveTask.java"
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Method	#5.#32;	//  scala/concurrent/forkjoin/ForkJoinTask."<init>":()V
const #2 = Field	#4.#33;	//  scala/concurrent/forkjoin/RecursiveTask.result:Ljava/lang/Object;
const #3 = Method	#4.#34;	//  scala/concurrent/forkjoin/RecursiveTask.compute:()Ljava/lang/Object;
const #4 = class	#35;	//  scala/concurrent/forkjoin/RecursiveTask
const #5 = class	#36;	//  scala/concurrent/forkjoin/ForkJoinTask
const #6 = Asciz	result;
const #7 = Asciz	Ljava/lang/Object;;
const #8 = Asciz	Signature;
const #9 = Asciz	TV;;
const #10 = Asciz	<init>;
const #11 = Asciz	()V;
const #12 = Asciz	Code;
const #13 = Asciz	LineNumberTable;
const #14 = Asciz	LocalVariableTable;
const #15 = Asciz	this;
const #16 = Asciz	Lscala/concurrent/forkjoin/RecursiveTask;;
const #17 = Asciz	LocalVariableTypeTable;
const #18 = Asciz	Lscala/concurrent/forkjoin/RecursiveTask<TV;>;;
const #19 = Asciz	compute;
const #20 = Asciz	()Ljava/lang/Object;;
const #21 = Asciz	()TV;;
const #22 = Asciz	getRawResult;
const #23 = Asciz	setRawResult;
const #24 = Asciz	(Ljava/lang/Object;)V;
const #25 = Asciz	value;
const #26 = Asciz	(TV;)V;
const #27 = Asciz	exec;
const #28 = Asciz	()Z;
const #29 = Asciz	<V:Ljava/lang/Object;>Lscala/concurrent/forkjoin/ForkJoinTask<TV;>;;
const #30 = Asciz	SourceFile;
const #31 = Asciz	RecursiveTask.java;
const #32 = NameAndType	#10:#11;//  "<init>":()V
const #33 = NameAndType	#6:#7;//  result:Ljava/lang/Object;
const #34 = NameAndType	#19:#20;//  compute:()Ljava/lang/Object;
const #35 = Asciz	scala/concurrent/forkjoin/RecursiveTask;
const #36 = Asciz	scala/concurrent/forkjoin/ForkJoinTask;

{
java.lang.Object result;
  Signature: length = 0x2
   00 09 

protected scala.concurrent.forkjoin.RecursiveTask();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokespecial	#1; //Method scala/concurrent/forkjoin/ForkJoinTask."<init>":()V
   4:	return
  LineNumberTable: 
   line 42: 0
   line 43: 4

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    this       Lscala/concurrent/forkjoin/RecursiveTask;

  LocalVariableTypeTable: length = 0xC
   00 01 00 00 00 05 00 0F 00 12 00 00 

protected abstract java.lang.Object compute();
  Signature: length = 0x2
   00 15 

public final java.lang.Object getRawResult();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#2; //Field result:Ljava/lang/Object;
   4:	areturn
  LineNumberTable: 
   line 56: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    this       Lscala/concurrent/forkjoin/RecursiveTask;

  LocalVariableTypeTable: length = 0xC
   00 01 00 00 00 05 00 0F 00 12 00 00 
  Signature: length = 0x2
   00 15 

protected final void setRawResult(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	putfield	#2; //Field result:Ljava/lang/Object;
   5:	return
  LineNumberTable: 
   line 60: 0
   line 61: 5

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/concurrent/forkjoin/RecursiveTask;
   0      6      1    value       Ljava/lang/Object;

  LocalVariableTypeTable: length = 0x16
   00 02 00 00 00 06 00 0F 00 12 00 00 00 00 00 06
   00 19 00 09 00 01 
  Signature: length = 0x2
   00 1A 

protected final boolean exec();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	aload_0
   2:	invokevirtual	#3; //Method compute:()Ljava/lang/Object;
   5:	putfield	#2; //Field result:Ljava/lang/Object;
   8:	iconst_1
   9:	ireturn
  LineNumberTable: 
   line 67: 0
   line 68: 8

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    this       Lscala/concurrent/forkjoin/RecursiveTask;

  LocalVariableTypeTable: length = 0xC
   00 01 00 00 00 0A 00 0F 00 12 00 00 

}

