public abstract class scala.concurrent.forkjoin.RecursiveTask extends scala.concurrent.forkjoin.ForkJoinTask
  Signature: length = 0x2
   00 16 
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Method	#5.#23;	//  scala/concurrent/forkjoin/ForkJoinTask."<init>":()V
const #2 = Field	#4.#24;	//  scala/concurrent/forkjoin/RecursiveTask.result:Ljava/lang/Object;
const #3 = Method	#4.#25;	//  scala/concurrent/forkjoin/RecursiveTask.compute:()Ljava/lang/Object;
const #4 = class	#26;	//  scala/concurrent/forkjoin/RecursiveTask
const #5 = class	#27;	//  scala/concurrent/forkjoin/ForkJoinTask
const #6 = Asciz	result;
const #7 = Asciz	Ljava/lang/Object;;
const #8 = Asciz	Signature;
const #9 = Asciz	TV;;
const #10 = Asciz	<init>;
const #11 = Asciz	()V;
const #12 = Asciz	Code;
const #13 = Asciz	compute;
const #14 = Asciz	()Ljava/lang/Object;;
const #15 = Asciz	()TV;;
const #16 = Asciz	getRawResult;
const #17 = Asciz	setRawResult;
const #18 = Asciz	(Ljava/lang/Object;)V;
const #19 = Asciz	(TV;)V;
const #20 = Asciz	exec;
const #21 = Asciz	()Z;
const #22 = Asciz	<V:Ljava/lang/Object;>Lscala/concurrent/forkjoin/ForkJoinTask<TV;>;;
const #23 = NameAndType	#10:#11;//  "<init>":()V
const #24 = NameAndType	#6:#7;//  result:Ljava/lang/Object;
const #25 = NameAndType	#13:#14;//  compute:()Ljava/lang/Object;
const #26 = Asciz	scala/concurrent/forkjoin/RecursiveTask;
const #27 = Asciz	scala/concurrent/forkjoin/ForkJoinTask;

{
java.lang.Object result;
  Signature: length = 0x2
   00 09 

protected scala.concurrent.forkjoin.RecursiveTask();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokespecial	#1; //Method scala/concurrent/forkjoin/ForkJoinTask."<init>":()V
   4:	return

protected abstract java.lang.Object compute();
  Signature: length = 0x2
   00 0F 

public final java.lang.Object getRawResult();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#2; //Field result:Ljava/lang/Object;
   4:	areturn
  Signature: length = 0x2
   00 0F 

protected final void setRawResult(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	putfield	#2; //Field result:Ljava/lang/Object;
   5:	return
  Signature: length = 0x2
   00 13 

protected final boolean exec();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	aload_0
   2:	invokevirtual	#3; //Method compute:()Ljava/lang/Object;
   5:	putfield	#2; //Field result:Ljava/lang/Object;
   8:	iconst_1
   9:	ireturn

}

