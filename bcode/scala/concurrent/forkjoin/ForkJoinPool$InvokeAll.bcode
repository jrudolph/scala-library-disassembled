final class scala.concurrent.forkjoin.ForkJoinPool$InvokeAll extends scala.concurrent.forkjoin.RecursiveAction
  Signature: length = 0x2
   00 11 
  InnerClass: 
   final #24= #5 of #22; //InvokeAll=class scala/concurrent/forkjoin/ForkJoinPool$InvokeAll of class scala/concurrent/forkjoin/ForkJoinPool
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Method	#6.#18;	//  scala/concurrent/forkjoin/RecursiveAction."<init>":()V
const #2 = Field	#5.#19;	//  scala/concurrent/forkjoin/ForkJoinPool$InvokeAll.tasks:Ljava/util/ArrayList;
const #3 = Method	#5.#20;	//  scala/concurrent/forkjoin/ForkJoinPool$InvokeAll.invokeAll:(Ljava/util/Collection;)V
const #4 = class	#21;	//  java/lang/Exception
const #5 = class	#23;	//  scala/concurrent/forkjoin/ForkJoinPool$InvokeAll
const #6 = class	#26;	//  scala/concurrent/forkjoin/RecursiveAction
const #7 = Asciz	tasks;
const #8 = Asciz	Ljava/util/ArrayList;;
const #9 = Asciz	Signature;
const #10 = Asciz	Ljava/util/ArrayList<Lscala/concurrent/forkjoin/ForkJoinTask<TT;>;>;;
const #11 = Asciz	<init>;
const #12 = Asciz	(Ljava/util/ArrayList;)V;
const #13 = Asciz	Code;
const #14 = Asciz	(Ljava/util/ArrayList<Lscala/concurrent/forkjoin/ForkJoinTask<TT;>;>;)V;
const #15 = Asciz	compute;
const #16 = Asciz	()V;
const #17 = Asciz	<T:Ljava/lang/Object;>Lscala/concurrent/forkjoin/RecursiveAction;;
const #18 = NameAndType	#11:#16;//  "<init>":()V
const #19 = NameAndType	#7:#8;//  tasks:Ljava/util/ArrayList;
const #20 = NameAndType	#27:#28;//  invokeAll:(Ljava/util/Collection;)V
const #21 = Asciz	java/lang/Exception;
const #22 = class	#29;	//  scala/concurrent/forkjoin/ForkJoinPool
const #23 = Asciz	scala/concurrent/forkjoin/ForkJoinPool$InvokeAll;
const #24 = Asciz	InvokeAll;
const #25 = Asciz	InnerClasses;
const #26 = Asciz	scala/concurrent/forkjoin/RecursiveAction;
const #27 = Asciz	invokeAll;
const #28 = Asciz	(Ljava/util/Collection;)V;
const #29 = Asciz	scala/concurrent/forkjoin/ForkJoinPool;

{
final java.util.ArrayList tasks;
  Signature: length = 0x2
   00 0A 

scala.concurrent.forkjoin.ForkJoinPool$InvokeAll(java.util.ArrayList);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	invokespecial	#1; //Method scala/concurrent/forkjoin/RecursiveAction."<init>":()V
   4:	aload_0
   5:	aload_1
   6:	putfield	#2; //Field tasks:Ljava/util/ArrayList;
   9:	return
  Signature: length = 0x2
   00 0E 

public void compute();
  Code:
   Stack=1, Locals=2, Args_size=1
   0:	aload_0
   1:	getfield	#2; //Field tasks:Ljava/util/ArrayList;
   4:	invokestatic	#3; //Method invokeAll:(Ljava/util/Collection;)V
   7:	goto	11
   10:	astore_1
   11:	return
  Exception table:
   from   to  target type
     0     7    10   Class java/lang/Exception


}

