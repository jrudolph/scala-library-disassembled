Compiled from "LinkedTransferQueue.java"
public class scala.concurrent.forkjoin.LinkedTransferQueue extends java.util.AbstractQueue implements scala.concurrent.forkjoin.TransferQueue,java.io.Serializable
  Signature: length = 0x2
   01 05 
  SourceFile: "LinkedTransferQueue.java"
  InnerClass: 
   #97= #50 of #80; //Itr=class scala/concurrent/forkjoin/LinkedTransferQueue$Itr of class scala/concurrent/forkjoin/LinkedTransferQueue
   final #99= #34 of #80; //PaddedAtomicReference=class scala/concurrent/forkjoin/LinkedTransferQueue$PaddedAtomicReference of class scala/concurrent/forkjoin/LinkedTransferQueue
   final #100= #9 of #80; //QNode=class scala/concurrent/forkjoin/LinkedTransferQueue$QNode of class scala/concurrent/forkjoin/LinkedTransferQueue
   #70; //class scala/concurrent/forkjoin/LinkedTransferQueue$1
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Method	#80.#264;	//  scala/concurrent/forkjoin/LinkedTransferQueue.getUnsafePrivileged:()Lsun/misc/Unsafe;
const #2 = Method	#80.#265;	//  scala/concurrent/forkjoin/LinkedTransferQueue.clean:(Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;)V
const #3 = Method	#80.#266;	//  scala/concurrent/forkjoin/LinkedTransferQueue.traversalHead:()Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;
const #4 = Field	#80.#267;	//  scala/concurrent/forkjoin/LinkedTransferQueue.head:Lscala/concurrent/forkjoin/LinkedTransferQueue$PaddedAtomicReference;
const #5 = Method	#34.#268;	//  scala/concurrent/forkjoin/LinkedTransferQueue$PaddedAtomicReference.get:()Ljava/lang/Object;
const #6 = Method	#34.#269;	//  scala/concurrent/forkjoin/LinkedTransferQueue$PaddedAtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
const #7 = Method	#9.#270;	//  scala/concurrent/forkjoin/LinkedTransferQueue$QNode.clearNext:()V
const #8 = Field	#80.#271;	//  scala/concurrent/forkjoin/LinkedTransferQueue.tail:Lscala/concurrent/forkjoin/LinkedTransferQueue$PaddedAtomicReference;
const #9 = class	#272;	//  scala/concurrent/forkjoin/LinkedTransferQueue$QNode
const #10 = Field	#9.#273;	//  scala/concurrent/forkjoin/LinkedTransferQueue$QNode.isData:Z
const #11 = Method	#9.#274;	//  scala/concurrent/forkjoin/LinkedTransferQueue$QNode."<init>":(Ljava/lang/Object;Z)V
const #12 = Field	#9.#275;	//  scala/concurrent/forkjoin/LinkedTransferQueue$QNode.next:Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;
const #13 = Method	#9.#276;	//  scala/concurrent/forkjoin/LinkedTransferQueue$QNode.casNext:(Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;)Z
const #14 = Method	#80.#277;	//  scala/concurrent/forkjoin/LinkedTransferQueue.awaitFulfill:(Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;Ljava/lang/Object;IJ)Ljava/lang/Object;
const #15 = Method	#80.#278;	//  scala/concurrent/forkjoin/LinkedTransferQueue.advanceHead:(Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;)Z
const #16 = Method	#9.#268;	//  scala/concurrent/forkjoin/LinkedTransferQueue$QNode.get:()Ljava/lang/Object;
const #17 = Method	#9.#269;	//  scala/concurrent/forkjoin/LinkedTransferQueue$QNode.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
const #18 = Field	#9.#279;	//  scala/concurrent/forkjoin/LinkedTransferQueue$QNode.waiter:Ljava/lang/Thread;
const #19 = Method	#280.#281;	//  java/util/concurrent/locks/LockSupport.unpark:(Ljava/lang/Thread;)V
const #20 = Method	#282.#283;	//  java/lang/System.nanoTime:()J
const #21 = Method	#284.#285;	//  java/lang/Thread.currentThread:()Ljava/lang/Thread;
const #22 = Method	#284.#286;	//  java/lang/Thread.isInterrupted:()Z
const #23 = Method	#9.#287;	//  scala/concurrent/forkjoin/LinkedTransferQueue$QNode.set:(Ljava/lang/Object;)V
const #24 = Field	#80.#288;	//  scala/concurrent/forkjoin/LinkedTransferQueue.maxTimedSpins:I
const #25 = Field	#80.#289;	//  scala/concurrent/forkjoin/LinkedTransferQueue.maxUntimedSpins:I
const #26 = Method	#280.#290;	//  java/util/concurrent/locks/LockSupport.park:(Ljava/lang/Object;)V
const #27 = long	1000l;
const #29 = Method	#280.#291;	//  java/util/concurrent/locks/LockSupport.parkNanos:(Ljava/lang/Object;J)V
const #30 = Method	#80.#292;	//  scala/concurrent/forkjoin/LinkedTransferQueue.reclean:()Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;
const #31 = Method	#80.#293;	//  scala/concurrent/forkjoin/LinkedTransferQueue.getValidatedTail:()Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;
const #32 = Field	#80.#294;	//  scala/concurrent/forkjoin/LinkedTransferQueue.cleanMe:Lscala/concurrent/forkjoin/LinkedTransferQueue$PaddedAtomicReference;
const #33 = Method	#94.#295;	//  java/util/AbstractQueue."<init>":()V
const #34 = class	#296;	//  scala/concurrent/forkjoin/LinkedTransferQueue$PaddedAtomicReference
const #35 = Method	#34.#297;	//  scala/concurrent/forkjoin/LinkedTransferQueue$PaddedAtomicReference."<init>":(Ljava/lang/Object;)V
const #36 = Method	#80.#295;	//  scala/concurrent/forkjoin/LinkedTransferQueue."<init>":()V
const #37 = Method	#80.#298;	//  scala/concurrent/forkjoin/LinkedTransferQueue.addAll:(Ljava/util/Collection;)Z
const #38 = class	#299;	//  java/lang/NullPointerException
const #39 = Method	#38.#295;	//  java/lang/NullPointerException."<init>":()V
const #40 = Method	#284.#300;	//  java/lang/Thread.interrupted:()Z
const #41 = class	#301;	//  java/lang/InterruptedException
const #42 = Method	#41.#295;	//  java/lang/InterruptedException."<init>":()V
const #43 = Method	#80.#302;	//  scala/concurrent/forkjoin/LinkedTransferQueue.xfer:(Ljava/lang/Object;IJ)Ljava/lang/Object;
const #44 = Method	#303.#304;	//  java/util/concurrent/TimeUnit.toNanos:(J)J
const #45 = Method	#80.#305;	//  scala/concurrent/forkjoin/LinkedTransferQueue.fulfill:(Ljava/lang/Object;)Ljava/lang/Object;
const #46 = class	#306;	//  java/lang/IllegalArgumentException
const #47 = Method	#46.#295;	//  java/lang/IllegalArgumentException."<init>":()V
const #48 = Method	#80.#307;	//  scala/concurrent/forkjoin/LinkedTransferQueue.poll:()Ljava/lang/Object;
const #49 = InterfaceMethod	#308.#309;	//  java/util/Collection.add:(Ljava/lang/Object;)Z
const #50 = class	#310;	//  scala/concurrent/forkjoin/LinkedTransferQueue$Itr
const #51 = Method	#50.#311;	//  scala/concurrent/forkjoin/LinkedTransferQueue$Itr."<init>":(Lscala/concurrent/forkjoin/LinkedTransferQueue;)V
const #52 = int	2147483647;
const #53 = Method	#312.#313;	//  java/lang/Object.equals:(Ljava/lang/Object;)Z
const #54 = Method	#314.#315;	//  java/io/ObjectOutputStream.defaultWriteObject:()V
const #55 = Method	#80.#316;	//  scala/concurrent/forkjoin/LinkedTransferQueue.iterator:()Ljava/util/Iterator;
const #56 = InterfaceMethod	#317.#318;	//  java/util/Iterator.hasNext:()Z
const #57 = InterfaceMethod	#317.#319;	//  java/util/Iterator.next:()Ljava/lang/Object;
const #58 = Method	#314.#320;	//  java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
const #59 = Method	#321.#322;	//  java/io/ObjectInputStream.defaultReadObject:()V
const #60 = Method	#80.#323;	//  scala/concurrent/forkjoin/LinkedTransferQueue.resetHeadAndTail:()V
const #61 = Method	#321.#324;	//  java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
const #62 = Method	#80.#325;	//  scala/concurrent/forkjoin/LinkedTransferQueue.offer:(Ljava/lang/Object;)Z
const #63 = Field	#80.#326;	//  scala/concurrent/forkjoin/LinkedTransferQueue._unsafe:Lsun/misc/Unsafe;
const #64 = Field	#80.#327;	//  scala/concurrent/forkjoin/LinkedTransferQueue.headOffset:J
const #65 = Method	#73.#328;	//  sun/misc/Unsafe.putObjectVolatile:(Ljava/lang/Object;JLjava/lang/Object;)V
const #66 = Field	#80.#329;	//  scala/concurrent/forkjoin/LinkedTransferQueue.tailOffset:J
const #67 = Field	#80.#330;	//  scala/concurrent/forkjoin/LinkedTransferQueue.cleanMeOffset:J
const #68 = Method	#73.#331;	//  sun/misc/Unsafe.getUnsafe:()Lsun/misc/Unsafe;
const #69 = class	#332;	//  java/lang/SecurityException
const #70 = class	#333;	//  scala/concurrent/forkjoin/LinkedTransferQueue$1
const #71 = Method	#70.#295;	//  scala/concurrent/forkjoin/LinkedTransferQueue$1."<init>":()V
const #72 = Method	#335.#336;	//  java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;
const #73 = class	#337;	//  sun/misc/Unsafe
const #74 = class	#338;	//  java/security/PrivilegedActionException
const #75 = Method	#74.#339;	//  java/security/PrivilegedActionException.getCause:()Ljava/lang/Throwable;
const #76 = String	#340;	//  theUnsafe
const #77 = Method	#341.#342;	//  java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
const #78 = Method	#343.#344;	//  java/lang/reflect/Field.setAccessible:(Z)V
const #79 = Method	#343.#345;	//  java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
const #80 = class	#346;	//  scala/concurrent/forkjoin/LinkedTransferQueue
const #81 = Method	#73.#347;	//  sun/misc/Unsafe.objectFieldOffset:(Ljava/lang/reflect/Field;)J
const #82 = Method	#348.#349;	//  java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
const #83 = Method	#348.#350;	//  java/lang/Runtime.availableProcessors:()I
const #84 = Field	#80.#351;	//  scala/concurrent/forkjoin/LinkedTransferQueue.NCPUS:I
const #85 = Method	#80.#331;	//  scala/concurrent/forkjoin/LinkedTransferQueue.getUnsafe:()Lsun/misc/Unsafe;
const #86 = String	#117;	//  head
const #87 = Method	#80.#352;	//  scala/concurrent/forkjoin/LinkedTransferQueue.fieldOffset:(Ljava/lang/String;)J
const #88 = String	#121;	//  tail
const #89 = String	#122;	//  cleanMe
const #90 = class	#353;	//  java/lang/Throwable
const #91 = class	#354;	//  java/lang/RuntimeException
const #92 = String	#355;	//  Could not initialize intrinsics
const #93 = Method	#91.#356;	//  java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
const #94 = class	#357;	//  java/util/AbstractQueue
const #95 = class	#358;	//  scala/concurrent/forkjoin/TransferQueue
const #96 = class	#359;	//  java/io/Serializable
const #97 = Asciz	Itr;
const #98 = Asciz	InnerClasses;
const #99 = Asciz	PaddedAtomicReference;
const #100 = Asciz	QNode;
const #101 = Asciz	serialVersionUID;
const #102 = Asciz	J;
const #103 = Asciz	ConstantValue;
const #104 = long	-3223113410248163686l;
const #106 = Asciz	NOWAIT;
const #107 = Asciz	I;
const #108 = int	0;
const #109 = Asciz	TIMEOUT;
const #110 = int	1;
const #111 = Asciz	WAIT;
const #112 = int	2;
const #113 = Asciz	NCPUS;
const #114 = Asciz	maxTimedSpins;
const #115 = Asciz	maxUntimedSpins;
const #116 = Asciz	spinForTimeoutThreshold;
const #117 = Asciz	head;
const #118 = Asciz	Lscala/concurrent/forkjoin/LinkedTransferQueue$PaddedAtomicReference;;
const #119 = Asciz	Signature;
const #120 = Asciz	Lscala/concurrent/forkjoin/LinkedTransferQueue$PaddedAtomicReference<Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;>;;
const #121 = Asciz	tail;
const #122 = Asciz	cleanMe;
const #123 = Asciz	_unsafe;
const #124 = Asciz	Lsun/misc/Unsafe;;
const #125 = Asciz	headOffset;
const #126 = Asciz	tailOffset;
const #127 = Asciz	cleanMeOffset;
const #128 = Asciz	advanceHead;
const #129 = Asciz	(Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;)Z;
const #130 = Asciz	Code;
const #131 = Asciz	LineNumberTable;
const #132 = Asciz	LocalVariableTable;
const #133 = Asciz	this;
const #134 = Asciz	Lscala/concurrent/forkjoin/LinkedTransferQueue;;
const #135 = Asciz	h;
const #136 = Asciz	Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;;
const #137 = Asciz	nh;
const #138 = Asciz	LocalVariableTypeTable;
const #139 = Asciz	Lscala/concurrent/forkjoin/LinkedTransferQueue<TE;>;;
const #140 = Asciz	xfer;
const #141 = Asciz	(Ljava/lang/Object;IJ)Ljava/lang/Object;;
const #142 = Asciz	last;
const #143 = Asciz	x;
const #144 = Asciz	Ljava/lang/Object;;
const #145 = Asciz	first;
const #146 = Asciz	t;
const #147 = Asciz	e;
const #148 = Asciz	mode;
const #149 = Asciz	nanos;
const #150 = Asciz	isData;
const #151 = Asciz	Z;
const #152 = Asciz	s;
const #153 = Asciz	fulfill;
const #154 = Asciz	(Ljava/lang/Object;)Ljava/lang/Object;;
const #155 = Asciz	awaitFulfill;
const #156 = Asciz	(Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;Ljava/lang/Object;IJ)Ljava/lang/Object;;
const #157 = Asciz	now;
const #158 = Asciz	pred;
const #159 = Asciz	lastTime;
const #160 = Asciz	w;
const #161 = Asciz	Ljava/lang/Thread;;
const #162 = Asciz	spins;
const #163 = Asciz	getValidatedTail;
const #164 = Asciz	()Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;;
const #165 = Asciz	clean;
const #166 = Asciz	(Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;)V;
const #167 = Asciz	sn;
const #168 = Asciz	oldpred;
const #169 = Asciz	reclean;
const #170 = Asciz	<init>;
const #171 = Asciz	()V;
const #172 = Asciz	dummy;
const #173 = Asciz	(Ljava/util/Collection;)V;
const #174 = Asciz	c;
const #175 = Asciz	Ljava/util/Collection;;
const #176 = Asciz	Ljava/util/Collection<+TE;>;;
const #177 = Asciz	(Ljava/util/Collection<+TE;>;)V;
const #178 = Asciz	put;
const #179 = Asciz	(Ljava/lang/Object;)V;
const #180 = Asciz	TE;;
const #181 = Asciz	Exceptions;
const #182 = Asciz	(TE;)V;
const #183 = Asciz	offer;
const #184 = Asciz	(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z;
const #185 = Asciz	timeout;
const #186 = Asciz	unit;
const #187 = Asciz	Ljava/util/concurrent/TimeUnit;;
const #188 = Asciz	(TE;JLjava/util/concurrent/TimeUnit;)Z;
const #189 = Asciz	(Ljava/lang/Object;)Z;
const #190 = Asciz	(TE;)Z;
const #191 = Asciz	add;
const #192 = Asciz	transfer;
const #193 = Asciz	tryTransfer;
const #194 = Asciz	take;
const #195 = Asciz	()Ljava/lang/Object;;
const #196 = Asciz	()TE;;
const #197 = Asciz	poll;
const #198 = Asciz	(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;;
const #199 = Asciz	(JLjava/util/concurrent/TimeUnit;)TE;;
const #200 = Asciz	drainTo;
const #201 = Asciz	(Ljava/util/Collection;)I;
const #202 = Asciz	n;
const #203 = Asciz	Ljava/util/Collection<-TE;>;;
const #204 = Asciz	(Ljava/util/Collection<-TE;>;)I;
const #205 = Asciz	(Ljava/util/Collection;I)I;
const #206 = Asciz	maxElements;
const #207 = Asciz	(Ljava/util/Collection<-TE;>;I)I;
const #208 = Asciz	traversalHead;
const #209 = Asciz	iterator;
const #210 = Asciz	()Ljava/util/Iterator;;
const #211 = Asciz	()Ljava/util/Iterator<TE;>;;
const #212 = Asciz	peek;
const #213 = Asciz	p;
const #214 = Asciz	isEmpty;
const #215 = Asciz	()Z;
const #216 = Asciz	hasWaitingConsumer;
const #217 = Asciz	size;
const #218 = Asciz	()I;
const #219 = Asciz	count;
const #220 = Asciz	getWaitingConsumerCount;
const #221 = Asciz	remainingCapacity;
const #222 = Asciz	remove;
const #223 = Asciz	q;
const #224 = Asciz	o;
const #225 = Asciz	writeObject;
const #226 = Asciz	(Ljava/io/ObjectOutputStream;)V;
const #227 = Asciz	i$;
const #228 = Asciz	Ljava/util/Iterator;;
const #229 = Asciz	Ljava/io/ObjectOutputStream;;
const #230 = class	#360;	//  java/io/IOException
const #231 = Asciz	readObject;
const #232 = Asciz	(Ljava/io/ObjectInputStream;)V;
const #233 = Asciz	item;
const #234 = Asciz	Ljava/io/ObjectInputStream;;
const #235 = class	#361;	//  java/lang/ClassNotFoundException
const #236 = Asciz	resetHeadAndTail;
const #237 = Asciz	getUnsafe;
const #238 = Asciz	()Lsun/misc/Unsafe;;
const #239 = Asciz	Ljava/security/PrivilegedActionException;;
const #240 = Asciz	se;
const #241 = Asciz	Ljava/lang/SecurityException;;
const #242 = Asciz	getUnsafePrivileged;
const #243 = Asciz	f;
const #244 = Asciz	Ljava/lang/reflect/Field;;
const #245 = class	#362;	//  java/lang/NoSuchFieldException
const #246 = class	#363;	//  java/lang/IllegalAccessException
const #247 = Asciz	fieldOffset;
const #248 = Asciz	(Ljava/lang/String;)J;
const #249 = Asciz	fieldName;
const #250 = Asciz	Ljava/lang/String;;
const #251 = Asciz	access$000;
const #252 = Asciz	(Lscala/concurrent/forkjoin/LinkedTransferQueue;)Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;;
const #253 = Asciz	x0;
const #254 = Asciz	access$100;
const #255 = Asciz	(Lscala/concurrent/forkjoin/LinkedTransferQueue;Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;)V;
const #256 = Asciz	x1;
const #257 = Asciz	x2;
const #258 = Asciz	access$200;
const #259 = Asciz	<clinit>;
const #260 = Asciz	Ljava/lang/Throwable;;
const #261 = Asciz	<E:Ljava/lang/Object;>Ljava/util/AbstractQueue<TE;>;Lscala/concurrent/forkjoin/TransferQueue<TE;>;Ljava/io/Serializable;;
const #262 = Asciz	SourceFile;
const #263 = Asciz	LinkedTransferQueue.java;
const #264 = NameAndType	#242:#238;//  getUnsafePrivileged:()Lsun/misc/Unsafe;
const #265 = NameAndType	#165:#166;//  clean:(Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;)V
const #266 = NameAndType	#208:#164;//  traversalHead:()Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;
const #267 = NameAndType	#117:#118;//  head:Lscala/concurrent/forkjoin/LinkedTransferQueue$PaddedAtomicReference;
const #268 = NameAndType	#364:#195;//  get:()Ljava/lang/Object;
const #269 = NameAndType	#365:#366;//  compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
const #270 = NameAndType	#367:#171;//  clearNext:()V
const #271 = NameAndType	#121:#118;//  tail:Lscala/concurrent/forkjoin/LinkedTransferQueue$PaddedAtomicReference;
const #272 = Asciz	scala/concurrent/forkjoin/LinkedTransferQueue$QNode;
const #273 = NameAndType	#150:#151;//  isData:Z
const #274 = NameAndType	#170:#368;//  "<init>":(Ljava/lang/Object;Z)V
const #275 = NameAndType	#369:#136;//  next:Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;
const #276 = NameAndType	#370:#129;//  casNext:(Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;)Z
const #277 = NameAndType	#155:#156;//  awaitFulfill:(Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;Ljava/lang/Object;IJ)Ljava/lang/Object;
const #278 = NameAndType	#128:#129;//  advanceHead:(Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;)Z
const #279 = NameAndType	#371:#161;//  waiter:Ljava/lang/Thread;
const #280 = class	#372;	//  java/util/concurrent/locks/LockSupport
const #281 = NameAndType	#373:#374;//  unpark:(Ljava/lang/Thread;)V
const #282 = class	#375;	//  java/lang/System
const #283 = NameAndType	#376:#377;//  nanoTime:()J
const #284 = class	#378;	//  java/lang/Thread
const #285 = NameAndType	#379:#380;//  currentThread:()Ljava/lang/Thread;
const #286 = NameAndType	#381:#215;//  isInterrupted:()Z
const #287 = NameAndType	#382:#179;//  set:(Ljava/lang/Object;)V
const #288 = NameAndType	#114:#107;//  maxTimedSpins:I
const #289 = NameAndType	#115:#107;//  maxUntimedSpins:I
const #290 = NameAndType	#383:#179;//  park:(Ljava/lang/Object;)V
const #291 = NameAndType	#384:#385;//  parkNanos:(Ljava/lang/Object;J)V
const #292 = NameAndType	#169:#164;//  reclean:()Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;
const #293 = NameAndType	#163:#164;//  getValidatedTail:()Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;
const #294 = NameAndType	#122:#118;//  cleanMe:Lscala/concurrent/forkjoin/LinkedTransferQueue$PaddedAtomicReference;
const #295 = NameAndType	#170:#171;//  "<init>":()V
const #296 = Asciz	scala/concurrent/forkjoin/LinkedTransferQueue$PaddedAtomicReference;
const #297 = NameAndType	#170:#179;//  "<init>":(Ljava/lang/Object;)V
const #298 = NameAndType	#386:#387;//  addAll:(Ljava/util/Collection;)Z
const #299 = Asciz	java/lang/NullPointerException;
const #300 = NameAndType	#388:#215;//  interrupted:()Z
const #301 = Asciz	java/lang/InterruptedException;
const #302 = NameAndType	#140:#141;//  xfer:(Ljava/lang/Object;IJ)Ljava/lang/Object;
const #303 = class	#389;	//  java/util/concurrent/TimeUnit
const #304 = NameAndType	#390:#391;//  toNanos:(J)J
const #305 = NameAndType	#153:#154;//  fulfill:(Ljava/lang/Object;)Ljava/lang/Object;
const #306 = Asciz	java/lang/IllegalArgumentException;
const #307 = NameAndType	#197:#195;//  poll:()Ljava/lang/Object;
const #308 = class	#392;	//  java/util/Collection
const #309 = NameAndType	#191:#189;//  add:(Ljava/lang/Object;)Z
const #310 = Asciz	scala/concurrent/forkjoin/LinkedTransferQueue$Itr;
const #311 = NameAndType	#170:#393;//  "<init>":(Lscala/concurrent/forkjoin/LinkedTransferQueue;)V
const #312 = class	#394;	//  java/lang/Object
const #313 = NameAndType	#395:#189;//  equals:(Ljava/lang/Object;)Z
const #314 = class	#396;	//  java/io/ObjectOutputStream
const #315 = NameAndType	#397:#171;//  defaultWriteObject:()V
const #316 = NameAndType	#209:#210;//  iterator:()Ljava/util/Iterator;
const #317 = class	#398;	//  java/util/Iterator
const #318 = NameAndType	#399:#215;//  hasNext:()Z
const #319 = NameAndType	#369:#195;//  next:()Ljava/lang/Object;
const #320 = NameAndType	#225:#179;//  writeObject:(Ljava/lang/Object;)V
const #321 = class	#400;	//  java/io/ObjectInputStream
const #322 = NameAndType	#401:#171;//  defaultReadObject:()V
const #323 = NameAndType	#236:#171;//  resetHeadAndTail:()V
const #324 = NameAndType	#231:#195;//  readObject:()Ljava/lang/Object;
const #325 = NameAndType	#183:#189;//  offer:(Ljava/lang/Object;)Z
const #326 = NameAndType	#123:#124;//  _unsafe:Lsun/misc/Unsafe;
const #327 = NameAndType	#125:#102;//  headOffset:J
const #328 = NameAndType	#402:#403;//  putObjectVolatile:(Ljava/lang/Object;JLjava/lang/Object;)V
const #329 = NameAndType	#126:#102;//  tailOffset:J
const #330 = NameAndType	#127:#102;//  cleanMeOffset:J
const #331 = NameAndType	#237:#238;//  getUnsafe:()Lsun/misc/Unsafe;
const #332 = Asciz	java/lang/SecurityException;
const #333 = Asciz	scala/concurrent/forkjoin/LinkedTransferQueue$1;
const #334 = Asciz	;
const #335 = class	#404;	//  java/security/AccessController
const #336 = NameAndType	#405:#406;//  doPrivileged:(Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;
const #337 = Asciz	sun/misc/Unsafe;
const #338 = Asciz	java/security/PrivilegedActionException;
const #339 = NameAndType	#407:#408;//  getCause:()Ljava/lang/Throwable;
const #340 = Asciz	theUnsafe;
const #341 = class	#409;	//  java/lang/Class
const #342 = NameAndType	#410:#411;//  getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
const #343 = class	#412;	//  java/lang/reflect/Field
const #344 = NameAndType	#413:#414;//  setAccessible:(Z)V
const #345 = NameAndType	#364:#154;//  get:(Ljava/lang/Object;)Ljava/lang/Object;
const #346 = Asciz	scala/concurrent/forkjoin/LinkedTransferQueue;
const #347 = NameAndType	#415:#416;//  objectFieldOffset:(Ljava/lang/reflect/Field;)J
const #348 = class	#417;	//  java/lang/Runtime
const #349 = NameAndType	#418:#419;//  getRuntime:()Ljava/lang/Runtime;
const #350 = NameAndType	#420:#218;//  availableProcessors:()I
const #351 = NameAndType	#113:#107;//  NCPUS:I
const #352 = NameAndType	#247:#248;//  fieldOffset:(Ljava/lang/String;)J
const #353 = Asciz	java/lang/Throwable;
const #354 = Asciz	java/lang/RuntimeException;
const #355 = Asciz	Could not initialize intrinsics;
const #356 = NameAndType	#170:#421;//  "<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
const #357 = Asciz	java/util/AbstractQueue;
const #358 = Asciz	scala/concurrent/forkjoin/TransferQueue;
const #359 = Asciz	java/io/Serializable;
const #360 = Asciz	java/io/IOException;
const #361 = Asciz	java/lang/ClassNotFoundException;
const #362 = Asciz	java/lang/NoSuchFieldException;
const #363 = Asciz	java/lang/IllegalAccessException;
const #364 = Asciz	get;
const #365 = Asciz	compareAndSet;
const #366 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)Z;
const #367 = Asciz	clearNext;
const #368 = Asciz	(Ljava/lang/Object;Z)V;
const #369 = Asciz	next;
const #370 = Asciz	casNext;
const #371 = Asciz	waiter;
const #372 = Asciz	java/util/concurrent/locks/LockSupport;
const #373 = Asciz	unpark;
const #374 = Asciz	(Ljava/lang/Thread;)V;
const #375 = Asciz	java/lang/System;
const #376 = Asciz	nanoTime;
const #377 = Asciz	()J;
const #378 = Asciz	java/lang/Thread;
const #379 = Asciz	currentThread;
const #380 = Asciz	()Ljava/lang/Thread;;
const #381 = Asciz	isInterrupted;
const #382 = Asciz	set;
const #383 = Asciz	park;
const #384 = Asciz	parkNanos;
const #385 = Asciz	(Ljava/lang/Object;J)V;
const #386 = Asciz	addAll;
const #387 = Asciz	(Ljava/util/Collection;)Z;
const #388 = Asciz	interrupted;
const #389 = Asciz	java/util/concurrent/TimeUnit;
const #390 = Asciz	toNanos;
const #391 = Asciz	(J)J;
const #392 = Asciz	java/util/Collection;
const #393 = Asciz	(Lscala/concurrent/forkjoin/LinkedTransferQueue;)V;
const #394 = Asciz	java/lang/Object;
const #395 = Asciz	equals;
const #396 = Asciz	java/io/ObjectOutputStream;
const #397 = Asciz	defaultWriteObject;
const #398 = Asciz	java/util/Iterator;
const #399 = Asciz	hasNext;
const #400 = Asciz	java/io/ObjectInputStream;
const #401 = Asciz	defaultReadObject;
const #402 = Asciz	putObjectVolatile;
const #403 = Asciz	(Ljava/lang/Object;JLjava/lang/Object;)V;
const #404 = Asciz	java/security/AccessController;
const #405 = Asciz	doPrivileged;
const #406 = Asciz	(Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;;
const #407 = Asciz	getCause;
const #408 = Asciz	()Ljava/lang/Throwable;;
const #409 = Asciz	java/lang/Class;
const #410 = Asciz	getDeclaredField;
const #411 = Asciz	(Ljava/lang/String;)Ljava/lang/reflect/Field;;
const #412 = Asciz	java/lang/reflect/Field;
const #413 = Asciz	setAccessible;
const #414 = Asciz	(Z)V;
const #415 = Asciz	objectFieldOffset;
const #416 = Asciz	(Ljava/lang/reflect/Field;)J;
const #417 = Asciz	java/lang/Runtime;
const #418 = Asciz	getRuntime;
const #419 = Asciz	()Ljava/lang/Runtime;;
const #420 = Asciz	availableProcessors;
const #421 = Asciz	(Ljava/lang/String;Ljava/lang/Throwable;)V;

{
static final int NOWAIT;
  Constant value: int 0
static final int TIMEOUT;
  Constant value: int 1
static final int WAIT;
  Constant value: int 2
static final int NCPUS;

static final int maxTimedSpins;

static final int maxUntimedSpins;

static final long spinForTimeoutThreshold;
  Constant value: long 1000l
public scala.concurrent.forkjoin.LinkedTransferQueue();
  Code:
   Stack=4, Locals=2, Args_size=1
   0:	aload_0
   1:	invokespecial	#33; //Method java/util/AbstractQueue."<init>":()V
   4:	new	#9; //class scala/concurrent/forkjoin/LinkedTransferQueue$QNode
   7:	dup
   8:	aconst_null
   9:	iconst_0
   10:	invokespecial	#11; //Method scala/concurrent/forkjoin/LinkedTransferQueue$QNode."<init>":(Ljava/lang/Object;Z)V
   13:	astore_1
   14:	aload_0
   15:	new	#34; //class scala/concurrent/forkjoin/LinkedTransferQueue$PaddedAtomicReference
   18:	dup
   19:	aload_1
   20:	invokespecial	#35; //Method scala/concurrent/forkjoin/LinkedTransferQueue$PaddedAtomicReference."<init>":(Ljava/lang/Object;)V
   23:	putfield	#4; //Field head:Lscala/concurrent/forkjoin/LinkedTransferQueue$PaddedAtomicReference;
   26:	aload_0
   27:	new	#34; //class scala/concurrent/forkjoin/LinkedTransferQueue$PaddedAtomicReference
   30:	dup
   31:	aload_1
   32:	invokespecial	#35; //Method scala/concurrent/forkjoin/LinkedTransferQueue$PaddedAtomicReference."<init>":(Ljava/lang/Object;)V
   35:	putfield	#8; //Field tail:Lscala/concurrent/forkjoin/LinkedTransferQueue$PaddedAtomicReference;
   38:	aload_0
   39:	new	#34; //class scala/concurrent/forkjoin/LinkedTransferQueue$PaddedAtomicReference
   42:	dup
   43:	aconst_null
   44:	invokespecial	#35; //Method scala/concurrent/forkjoin/LinkedTransferQueue$PaddedAtomicReference."<init>":(Ljava/lang/Object;)V
   47:	putfield	#32; //Field cleanMe:Lscala/concurrent/forkjoin/LinkedTransferQueue$PaddedAtomicReference;
   50:	return
  LineNumberTable: 
   line 417: 0
   line 418: 4
   line 419: 14
   line 420: 26
   line 421: 38
   line 422: 50

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      51      0    this       Lscala/concurrent/forkjoin/LinkedTransferQueue;
   14      37      1    dummy       Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;

  LocalVariableTypeTable: length = 0xC
   00 01 00 00 00 33 00 FFFFFF85 00 FFFFFF8B 00 00 

public scala.concurrent.forkjoin.LinkedTransferQueue(java.util.Collection);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	invokespecial	#36; //Method "<init>":()V
   4:	aload_0
   5:	aload_1
   6:	invokevirtual	#37; //Method addAll:(Ljava/util/Collection;)Z
   9:	pop
   10:	return
  LineNumberTable: 
   line 434: 0
   line 435: 4
   line 436: 10

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      11      0    this       Lscala/concurrent/forkjoin/LinkedTransferQueue;
   0      11      1    c       Ljava/util/Collection;

  LocalVariableTypeTable: length = 0x16
   00 02 00 00 00 0B 00 FFFFFF85 00 FFFFFF8B 00 00 00 00 00 0B
   00 FFFFFFAE 00 FFFFFFB0 00 01 
  Signature: length = 0x2
   00 FFFFFFB1 

public void put(java.lang.Object)   throws java.lang.InterruptedException;
  Code:
   Stack=5, Locals=2, Args_size=2
   0:	aload_1
   1:	ifnonnull	12
   4:	new	#38; //class java/lang/NullPointerException
   7:	dup
   8:	invokespecial	#39; //Method java/lang/NullPointerException."<init>":()V
   11:	athrow
   12:	invokestatic	#40; //Method java/lang/Thread.interrupted:()Z
   15:	ifeq	26
   18:	new	#41; //class java/lang/InterruptedException
   21:	dup
   22:	invokespecial	#42; //Method java/lang/InterruptedException."<init>":()V
   25:	athrow
   26:	aload_0
   27:	aload_1
   28:	iconst_0
   29:	lconst_0
   30:	invokespecial	#43; //Method xfer:(Ljava/lang/Object;IJ)Ljava/lang/Object;
   33:	pop
   34:	return
  LineNumberTable: 
   line 439: 0
   line 440: 12
   line 441: 26
   line 442: 34

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      35      0    this       Lscala/concurrent/forkjoin/LinkedTransferQueue;
   0      35      1    e       Ljava/lang/Object;

  LocalVariableTypeTable: length = 0x16
   00 02 00 00 00 23 00 FFFFFF85 00 FFFFFF8B 00 00 00 00 00 23
   00 FFFFFF93 00 FFFFFFB4 00 01 
  Exceptions: 
   throws java.lang.InterruptedException  Signature: length = 0x2
   00 FFFFFFB6 

public boolean offer(java.lang.Object, long, java.util.concurrent.TimeUnit)   throws java.lang.InterruptedException;
  Code:
   Stack=5, Locals=5, Args_size=4
   0:	aload_1
   1:	ifnonnull	12
   4:	new	#38; //class java/lang/NullPointerException
   7:	dup
   8:	invokespecial	#39; //Method java/lang/NullPointerException."<init>":()V
   11:	athrow
   12:	invokestatic	#40; //Method java/lang/Thread.interrupted:()Z
   15:	ifeq	26
   18:	new	#41; //class java/lang/InterruptedException
   21:	dup
   22:	invokespecial	#42; //Method java/lang/InterruptedException."<init>":()V
   25:	athrow
   26:	aload_0
   27:	aload_1
   28:	iconst_0
   29:	lconst_0
   30:	invokespecial	#43; //Method xfer:(Ljava/lang/Object;IJ)Ljava/lang/Object;
   33:	pop
   34:	iconst_1
   35:	ireturn
  LineNumberTable: 
   line 446: 0
   line 447: 12
   line 448: 26
   line 449: 34

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      36      0    this       Lscala/concurrent/forkjoin/LinkedTransferQueue;
   0      36      1    e       Ljava/lang/Object;
   0      36      2    timeout       J
   0      36      4    unit       Ljava/util/concurrent/TimeUnit;

  LocalVariableTypeTable: length = 0x16
   00 02 00 00 00 24 00 FFFFFF85 00 FFFFFF8B 00 00 00 00 00 24
   00 FFFFFF93 00 FFFFFFB4 00 01 
  Exceptions: 
   throws java.lang.InterruptedException  Signature: length = 0x2
   00 FFFFFFBC 

public boolean offer(java.lang.Object);
  Code:
   Stack=5, Locals=2, Args_size=2
   0:	aload_1
   1:	ifnonnull	12
   4:	new	#38; //class java/lang/NullPointerException
   7:	dup
   8:	invokespecial	#39; //Method java/lang/NullPointerException."<init>":()V
   11:	athrow
   12:	aload_0
   13:	aload_1
   14:	iconst_0
   15:	lconst_0
   16:	invokespecial	#43; //Method xfer:(Ljava/lang/Object;IJ)Ljava/lang/Object;
   19:	pop
   20:	iconst_1
   21:	ireturn
  LineNumberTable: 
   line 453: 0
   line 454: 12
   line 455: 20

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      22      0    this       Lscala/concurrent/forkjoin/LinkedTransferQueue;
   0      22      1    e       Ljava/lang/Object;

  LocalVariableTypeTable: length = 0x16
   00 02 00 00 00 16 00 FFFFFF85 00 FFFFFF8B 00 00 00 00 00 16
   00 FFFFFF93 00 FFFFFFB4 00 01 
  Signature: length = 0x2
   00 FFFFFFBE 

public boolean add(java.lang.Object);
  Code:
   Stack=5, Locals=2, Args_size=2
   0:	aload_1
   1:	ifnonnull	12
   4:	new	#38; //class java/lang/NullPointerException
   7:	dup
   8:	invokespecial	#39; //Method java/lang/NullPointerException."<init>":()V
   11:	athrow
   12:	aload_0
   13:	aload_1
   14:	iconst_0
   15:	lconst_0
   16:	invokespecial	#43; //Method xfer:(Ljava/lang/Object;IJ)Ljava/lang/Object;
   19:	pop
   20:	iconst_1
   21:	ireturn
  LineNumberTable: 
   line 459: 0
   line 460: 12
   line 461: 20

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      22      0    this       Lscala/concurrent/forkjoin/LinkedTransferQueue;
   0      22      1    e       Ljava/lang/Object;

  LocalVariableTypeTable: length = 0x16
   00 02 00 00 00 16 00 FFFFFF85 00 FFFFFF8B 00 00 00 00 00 16
   00 FFFFFF93 00 FFFFFFB4 00 01 
  Signature: length = 0x2
   00 FFFFFFBE 

public void transfer(java.lang.Object)   throws java.lang.InterruptedException;
  Code:
   Stack=5, Locals=2, Args_size=2
   0:	aload_1
   1:	ifnonnull	12
   4:	new	#38; //class java/lang/NullPointerException
   7:	dup
   8:	invokespecial	#39; //Method java/lang/NullPointerException."<init>":()V
   11:	athrow
   12:	aload_0
   13:	aload_1
   14:	iconst_2
   15:	lconst_0
   16:	invokespecial	#43; //Method xfer:(Ljava/lang/Object;IJ)Ljava/lang/Object;
   19:	ifnonnull	34
   22:	invokestatic	#40; //Method java/lang/Thread.interrupted:()Z
   25:	pop
   26:	new	#41; //class java/lang/InterruptedException
   29:	dup
   30:	invokespecial	#42; //Method java/lang/InterruptedException."<init>":()V
   33:	athrow
   34:	return
  LineNumberTable: 
   line 465: 0
   line 466: 12
   line 467: 22
   line 468: 26
   line 470: 34

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      35      0    this       Lscala/concurrent/forkjoin/LinkedTransferQueue;
   0      35      1    e       Ljava/lang/Object;

  LocalVariableTypeTable: length = 0x16
   00 02 00 00 00 23 00 FFFFFF85 00 FFFFFF8B 00 00 00 00 00 23
   00 FFFFFF93 00 FFFFFFB4 00 01 
  Exceptions: 
   throws java.lang.InterruptedException  Signature: length = 0x2
   00 FFFFFFB6 

public boolean tryTransfer(java.lang.Object, long, java.util.concurrent.TimeUnit)   throws java.lang.InterruptedException;
  Code:
   Stack=6, Locals=5, Args_size=4
   0:	aload_1
   1:	ifnonnull	12
   4:	new	#38; //class java/lang/NullPointerException
   7:	dup
   8:	invokespecial	#39; //Method java/lang/NullPointerException."<init>":()V
   11:	athrow
   12:	aload_0
   13:	aload_1
   14:	iconst_1
   15:	aload	4
   17:	lload_2
   18:	invokevirtual	#44; //Method java/util/concurrent/TimeUnit.toNanos:(J)J
   21:	invokespecial	#43; //Method xfer:(Ljava/lang/Object;IJ)Ljava/lang/Object;
   24:	ifnull	29
   27:	iconst_1
   28:	ireturn
   29:	invokestatic	#40; //Method java/lang/Thread.interrupted:()Z
   32:	ifne	37
   35:	iconst_0
   36:	ireturn
   37:	new	#41; //class java/lang/InterruptedException
   40:	dup
   41:	invokespecial	#42; //Method java/lang/InterruptedException."<init>":()V
   44:	athrow
  LineNumberTable: 
   line 474: 0
   line 475: 12
   line 476: 27
   line 477: 29
   line 478: 35
   line 479: 37

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      45      0    this       Lscala/concurrent/forkjoin/LinkedTransferQueue;
   0      45      1    e       Ljava/lang/Object;
   0      45      2    timeout       J
   0      45      4    unit       Ljava/util/concurrent/TimeUnit;

  LocalVariableTypeTable: length = 0x16
   00 02 00 00 00 2D 00 FFFFFF85 00 FFFFFF8B 00 00 00 00 00 2D
   00 FFFFFF93 00 FFFFFFB4 00 01 
  Exceptions: 
   throws java.lang.InterruptedException  Signature: length = 0x2
   00 FFFFFFBC 

public boolean tryTransfer(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_1
   1:	ifnonnull	12
   4:	new	#38; //class java/lang/NullPointerException
   7:	dup
   8:	invokespecial	#39; //Method java/lang/NullPointerException."<init>":()V
   11:	athrow
   12:	aload_0
   13:	aload_1
   14:	invokespecial	#45; //Method fulfill:(Ljava/lang/Object;)Ljava/lang/Object;
   17:	ifnull	24
   20:	iconst_1
   21:	goto	25
   24:	iconst_0
   25:	ireturn
  LineNumberTable: 
   line 483: 0
   line 484: 12

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      26      0    this       Lscala/concurrent/forkjoin/LinkedTransferQueue;
   0      26      1    e       Ljava/lang/Object;

  LocalVariableTypeTable: length = 0x16
   00 02 00 00 00 1A 00 FFFFFF85 00 FFFFFF8B 00 00 00 00 00 1A
   00 FFFFFF93 00 FFFFFFB4 00 01 
  Signature: length = 0x2
   00 FFFFFFBE 

public java.lang.Object take()   throws java.lang.InterruptedException;
  Code:
   Stack=5, Locals=2, Args_size=1
   0:	aload_0
   1:	aconst_null
   2:	iconst_2
   3:	lconst_0
   4:	invokespecial	#43; //Method xfer:(Ljava/lang/Object;IJ)Ljava/lang/Object;
   7:	astore_1
   8:	aload_1
   9:	ifnull	14
   12:	aload_1
   13:	areturn
   14:	invokestatic	#40; //Method java/lang/Thread.interrupted:()Z
   17:	pop
   18:	new	#41; //class java/lang/InterruptedException
   21:	dup
   22:	invokespecial	#42; //Method java/lang/InterruptedException."<init>":()V
   25:	athrow
  LineNumberTable: 
   line 488: 0
   line 489: 8
   line 490: 12
   line 491: 14
   line 492: 18

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      26      0    this       Lscala/concurrent/forkjoin/LinkedTransferQueue;
   8      18      1    e       Ljava/lang/Object;

  LocalVariableTypeTable: length = 0xC
   00 01 00 00 00 1A 00 FFFFFF85 00 FFFFFF8B 00 00 
  Exceptions: 
   throws java.lang.InterruptedException  Signature: length = 0x2
   00 FFFFFFC4 

public java.lang.Object poll(long, java.util.concurrent.TimeUnit)   throws java.lang.InterruptedException;
  Code:
   Stack=6, Locals=5, Args_size=3
   0:	aload_0
   1:	aconst_null
   2:	iconst_1
   3:	aload_3
   4:	lload_1
   5:	invokevirtual	#44; //Method java/util/concurrent/TimeUnit.toNanos:(J)J
   8:	invokespecial	#43; //Method xfer:(Ljava/lang/Object;IJ)Ljava/lang/Object;
   11:	astore	4
   13:	aload	4
   15:	ifnonnull	24
   18:	invokestatic	#40; //Method java/lang/Thread.interrupted:()Z
   21:	ifne	27
   24:	aload	4
   26:	areturn
   27:	new	#41; //class java/lang/InterruptedException
   30:	dup
   31:	invokespecial	#42; //Method java/lang/InterruptedException."<init>":()V
   34:	athrow
  LineNumberTable: 
   line 496: 0
   line 497: 13
   line 498: 24
   line 499: 27

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      35      0    this       Lscala/concurrent/forkjoin/LinkedTransferQueue;
   0      35      1    timeout       J
   0      35      3    unit       Ljava/util/concurrent/TimeUnit;
   13      22      4    e       Ljava/lang/Object;

  LocalVariableTypeTable: length = 0xC
   00 01 00 00 00 23 00 FFFFFF85 00 FFFFFF8B 00 00 
  Exceptions: 
   throws java.lang.InterruptedException  Signature: length = 0x2
   00 FFFFFFC7 

public java.lang.Object poll();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	aconst_null
   2:	invokespecial	#45; //Method fulfill:(Ljava/lang/Object;)Ljava/lang/Object;
   5:	areturn
  LineNumberTable: 
   line 503: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/concurrent/forkjoin/LinkedTransferQueue;

  LocalVariableTypeTable: length = 0xC
   00 01 00 00 00 06 00 FFFFFF85 00 FFFFFF8B 00 00 
  Signature: length = 0x2
   00 FFFFFFC4 

public int drainTo(java.util.Collection);
  Code:
   Stack=2, Locals=4, Args_size=2
   0:	aload_1
   1:	ifnonnull	12
   4:	new	#38; //class java/lang/NullPointerException
   7:	dup
   8:	invokespecial	#39; //Method java/lang/NullPointerException."<init>":()V
   11:	athrow
   12:	aload_1
   13:	aload_0
   14:	if_acmpne	25
   17:	new	#46; //class java/lang/IllegalArgumentException
   20:	dup
   21:	invokespecial	#47; //Method java/lang/IllegalArgumentException."<init>":()V
   24:	athrow
   25:	iconst_0
   26:	istore_2
   27:	aload_0
   28:	invokevirtual	#48; //Method poll:()Ljava/lang/Object;
   31:	dup
   32:	astore_3
   33:	ifnull	50
   36:	aload_1
   37:	aload_3
   38:	invokeinterface	#49,  2; //InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
   43:	pop
   44:	iinc	2, 1
   47:	goto	27
   50:	iload_2
   51:	ireturn
  LineNumberTable: 
   line 507: 0
   line 508: 4
   line 509: 12
   line 510: 17
   line 511: 25
   line 513: 27
   line 514: 36
   line 515: 44
   line 517: 50

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      52      0    this       Lscala/concurrent/forkjoin/LinkedTransferQueue;
   0      52      1    c       Ljava/util/Collection;
   27      25      2    n       I
   33      19      3    e       Ljava/lang/Object;

  LocalVariableTypeTable: length = 0x20
   00 03 00 00 00 34 00 FFFFFF85 00 FFFFFF8B 00 00 00 00 00 34
   00 FFFFFFAE 00 FFFFFFCB 00 01 00 21 00 13 00 FFFFFF93 00 FFFFFFB4 00 03
   
  Signature: length = 0x2
   00 FFFFFFCC 

public int drainTo(java.util.Collection, int);
  Code:
   Stack=2, Locals=5, Args_size=3
   0:	aload_1
   1:	ifnonnull	12
   4:	new	#38; //class java/lang/NullPointerException
   7:	dup
   8:	invokespecial	#39; //Method java/lang/NullPointerException."<init>":()V
   11:	athrow
   12:	aload_1
   13:	aload_0
   14:	if_acmpne	25
   17:	new	#46; //class java/lang/IllegalArgumentException
   20:	dup
   21:	invokespecial	#47; //Method java/lang/IllegalArgumentException."<init>":()V
   24:	athrow
   25:	iconst_0
   26:	istore_3
   27:	iload_3
   28:	iload_2
   29:	if_icmpge	57
   32:	aload_0
   33:	invokevirtual	#48; //Method poll:()Ljava/lang/Object;
   36:	dup
   37:	astore	4
   39:	ifnull	57
   42:	aload_1
   43:	aload	4
   45:	invokeinterface	#49,  2; //InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
   50:	pop
   51:	iinc	3, 1
   54:	goto	27
   57:	iload_3
   58:	ireturn
  LineNumberTable: 
   line 521: 0
   line 522: 4
   line 523: 12
   line 524: 17
   line 525: 25
   line 527: 27
   line 528: 42
   line 529: 51
   line 531: 57

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   39      18      4    e       Ljava/lang/Object;
   0      59      0    this       Lscala/concurrent/forkjoin/LinkedTransferQueue;
   0      59      1    c       Ljava/util/Collection;
   0      59      2    maxElements       I
   27      32      3    n       I

  LocalVariableTypeTable: length = 0x20
   00 03 00 27 00 12 00 FFFFFF93 00 FFFFFFB4 00 04 00 00 00 3B
   00 FFFFFF85 00 FFFFFF8B 00 00 00 00 00 3B 00 FFFFFFAE 00 FFFFFFCB 00 01
   
  Signature: length = 0x2
   00 FFFFFFCF 

public java.util.Iterator iterator();
  Code:
   Stack=3, Locals=1, Args_size=1
   0:	new	#50; //class scala/concurrent/forkjoin/LinkedTransferQueue$Itr
   3:	dup
   4:	aload_0
   5:	invokespecial	#51; //Method scala/concurrent/forkjoin/LinkedTransferQueue$Itr."<init>":(Lscala/concurrent/forkjoin/LinkedTransferQueue;)V
   8:	areturn
  LineNumberTable: 
   line 566: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/concurrent/forkjoin/LinkedTransferQueue;

  LocalVariableTypeTable: length = 0xC
   00 01 00 00 00 09 00 FFFFFF85 00 FFFFFF8B 00 00 
  Signature: length = 0x2
   00 FFFFFFD3 

public java.lang.Object peek();
  Code:
   Stack=2, Locals=4, Args_size=1
   0:	aload_0
   1:	invokespecial	#3; //Method traversalHead:()Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;
   4:	astore_1
   5:	aload_1
   6:	getfield	#12; //Field scala/concurrent/forkjoin/LinkedTransferQueue$QNode.next:Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;
   9:	astore_2
   10:	aload_2
   11:	ifnonnull	16
   14:	aconst_null
   15:	areturn
   16:	aload_2
   17:	invokevirtual	#16; //Method scala/concurrent/forkjoin/LinkedTransferQueue$QNode.get:()Ljava/lang/Object;
   20:	astore_3
   21:	aload_2
   22:	aload_3
   23:	if_acmpeq	41
   26:	aload_2
   27:	getfield	#10; //Field scala/concurrent/forkjoin/LinkedTransferQueue$QNode.isData:Z
   30:	ifne	35
   33:	aconst_null
   34:	areturn
   35:	aload_3
   36:	ifnull	41
   39:	aload_3
   40:	areturn
   41:	goto	0
  LineNumberTable: 
   line 644: 0
   line 645: 5
   line 646: 10
   line 647: 14
   line 648: 16
   line 649: 21
   line 650: 26
   line 651: 33
   line 652: 35
   line 653: 39
   line 655: 41

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   5      36      1    h       Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;
   10      31      2    p       Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;
   21      20      3    x       Ljava/lang/Object;
   0      44      0    this       Lscala/concurrent/forkjoin/LinkedTransferQueue;

  LocalVariableTypeTable: length = 0xC
   00 01 00 00 00 2C 00 FFFFFF85 00 FFFFFF8B 00 00 
  Signature: length = 0x2
   00 FFFFFFC4 

public boolean isEmpty();
  Code:
   Stack=2, Locals=4, Args_size=1
   0:	aload_0
   1:	invokespecial	#3; //Method traversalHead:()Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;
   4:	astore_1
   5:	aload_1
   6:	getfield	#12; //Field scala/concurrent/forkjoin/LinkedTransferQueue$QNode.next:Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;
   9:	astore_2
   10:	aload_2
   11:	ifnonnull	16
   14:	iconst_1
   15:	ireturn
   16:	aload_2
   17:	invokevirtual	#16; //Method scala/concurrent/forkjoin/LinkedTransferQueue$QNode.get:()Ljava/lang/Object;
   20:	astore_3
   21:	aload_2
   22:	aload_3
   23:	if_acmpeq	41
   26:	aload_2
   27:	getfield	#10; //Field scala/concurrent/forkjoin/LinkedTransferQueue$QNode.isData:Z
   30:	ifne	35
   33:	iconst_1
   34:	ireturn
   35:	aload_3
   36:	ifnull	41
   39:	iconst_0
   40:	ireturn
   41:	goto	0
  LineNumberTable: 
   line 660: 0
   line 661: 5
   line 662: 10
   line 663: 14
   line 664: 16
   line 665: 21
   line 666: 26
   line 667: 33
   line 668: 35
   line 669: 39
   line 671: 41

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   5      36      1    h       Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;
   10      31      2    p       Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;
   21      20      3    x       Ljava/lang/Object;
   0      44      0    this       Lscala/concurrent/forkjoin/LinkedTransferQueue;

  LocalVariableTypeTable: length = 0xC
   00 01 00 00 00 2C 00 FFFFFF85 00 FFFFFF8B 00 00 

public boolean hasWaitingConsumer();
  Code:
   Stack=2, Locals=4, Args_size=1
   0:	aload_0
   1:	invokespecial	#3; //Method traversalHead:()Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;
   4:	astore_1
   5:	aload_1
   6:	getfield	#12; //Field scala/concurrent/forkjoin/LinkedTransferQueue$QNode.next:Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;
   9:	astore_2
   10:	aload_2
   11:	ifnonnull	16
   14:	iconst_0
   15:	ireturn
   16:	aload_2
   17:	invokevirtual	#16; //Method scala/concurrent/forkjoin/LinkedTransferQueue$QNode.get:()Ljava/lang/Object;
   20:	astore_3
   21:	aload_2
   22:	aload_3
   23:	if_acmpeq	39
   26:	aload_2
   27:	getfield	#10; //Field scala/concurrent/forkjoin/LinkedTransferQueue$QNode.isData:Z
   30:	ifne	37
   33:	iconst_1
   34:	goto	38
   37:	iconst_0
   38:	ireturn
   39:	goto	0
  LineNumberTable: 
   line 676: 0
   line 677: 5
   line 678: 10
   line 679: 14
   line 680: 16
   line 681: 21
   line 682: 26
   line 683: 39

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   5      34      1    h       Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;
   10      29      2    p       Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;
   21      18      3    x       Ljava/lang/Object;
   0      42      0    this       Lscala/concurrent/forkjoin/LinkedTransferQueue;

  LocalVariableTypeTable: length = 0xC
   00 01 00 00 00 2A 00 FFFFFF85 00 FFFFFF8B 00 00 

public int size();
  Code:
   Stack=2, Locals=5, Args_size=1
   0:	iconst_0
   1:	istore_1
   2:	aload_0
   3:	invokespecial	#3; //Method traversalHead:()Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;
   6:	astore_2
   7:	aload_2
   8:	getfield	#12; //Field scala/concurrent/forkjoin/LinkedTransferQueue$QNode.next:Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;
   11:	astore_3
   12:	aload_3
   13:	ifnull	60
   16:	aload_3
   17:	getfield	#10; //Field scala/concurrent/forkjoin/LinkedTransferQueue$QNode.isData:Z
   20:	ifeq	60
   23:	aload_3
   24:	invokevirtual	#16; //Method scala/concurrent/forkjoin/LinkedTransferQueue$QNode.get:()Ljava/lang/Object;
   27:	astore	4
   29:	aload	4
   31:	ifnull	52
   34:	aload	4
   36:	aload_3
   37:	if_acmpeq	52
   40:	iinc	1, 1
   43:	iload_1
   44:	ldc	#52; //int 2147483647
   46:	if_icmpne	52
   49:	goto	60
   52:	aload_3
   53:	getfield	#12; //Field scala/concurrent/forkjoin/LinkedTransferQueue$QNode.next:Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;
   56:	astore_3
   57:	goto	12
   60:	iload_1
   61:	ireturn
  LineNumberTable: 
   line 699: 0
   line 700: 2
   line 701: 7
   line 702: 23
   line 703: 29
   line 704: 40
   line 705: 49
   line 701: 52
   line 708: 60

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   29      23      4    x       Ljava/lang/Object;
   12      48      3    p       Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;
   0      62      0    this       Lscala/concurrent/forkjoin/LinkedTransferQueue;
   2      60      1    count       I
   7      55      2    h       Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;

  LocalVariableTypeTable: length = 0xC
   00 01 00 00 00 3E 00 FFFFFF85 00 FFFFFF8B 00 00 

public int getWaitingConsumerCount();
  Code:
   Stack=2, Locals=4, Args_size=1
   0:	iconst_0
   1:	istore_1
   2:	aload_0
   3:	invokespecial	#3; //Method traversalHead:()Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;
   6:	astore_2
   7:	aload_2
   8:	getfield	#12; //Field scala/concurrent/forkjoin/LinkedTransferQueue$QNode.next:Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;
   11:	astore_3
   12:	aload_3
   13:	ifnull	50
   16:	aload_3
   17:	getfield	#10; //Field scala/concurrent/forkjoin/LinkedTransferQueue$QNode.isData:Z
   20:	ifne	50
   23:	aload_3
   24:	invokevirtual	#16; //Method scala/concurrent/forkjoin/LinkedTransferQueue$QNode.get:()Ljava/lang/Object;
   27:	ifnonnull	42
   30:	iinc	1, 1
   33:	iload_1
   34:	ldc	#52; //int 2147483647
   36:	if_icmpne	42
   39:	goto	50
   42:	aload_3
   43:	getfield	#12; //Field scala/concurrent/forkjoin/LinkedTransferQueue$QNode.next:Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;
   46:	astore_3
   47:	goto	12
   50:	iload_1
   51:	ireturn
  LineNumberTable: 
   line 712: 0
   line 713: 2
   line 714: 7
   line 715: 23
   line 716: 30
   line 717: 39
   line 714: 42
   line 720: 50

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   12      38      3    p       Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;
   0      52      0    this       Lscala/concurrent/forkjoin/LinkedTransferQueue;
   2      50      1    count       I
   7      45      2    h       Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;

  LocalVariableTypeTable: length = 0xC
   00 01 00 00 00 34 00 FFFFFF85 00 FFFFFF8B 00 00 

public int remainingCapacity();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	ldc	#52; //int 2147483647
   2:	ireturn
  LineNumberTable: 
   line 724: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      3      0    this       Lscala/concurrent/forkjoin/LinkedTransferQueue;

  LocalVariableTypeTable: length = 0xC
   00 01 00 00 00 03 00 FFFFFF85 00 FFFFFF8B 00 00 

public boolean remove(java.lang.Object);
  Code:
   Stack=3, Locals=5, Args_size=2
   0:	aload_1
   1:	ifnonnull	6
   4:	iconst_0
   5:	ireturn
   6:	aload_0
   7:	invokespecial	#3; //Method traversalHead:()Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;
   10:	astore_2
   11:	aload_2
   12:	getfield	#12; //Field scala/concurrent/forkjoin/LinkedTransferQueue$QNode.next:Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;
   15:	astore_3
   16:	aload_3
   17:	ifnull	27
   20:	aload_3
   21:	getfield	#10; //Field scala/concurrent/forkjoin/LinkedTransferQueue$QNode.isData:Z
   24:	ifne	29
   27:	iconst_0
   28:	ireturn
   29:	aload_3
   30:	aload_2
   31:	if_acmpne	37
   34:	goto	86
   37:	aload_3
   38:	invokevirtual	#16; //Method scala/concurrent/forkjoin/LinkedTransferQueue$QNode.get:()Ljava/lang/Object;
   41:	astore	4
   43:	aload	4
   45:	ifnull	81
   48:	aload	4
   50:	aload_3
   51:	if_acmpeq	81
   54:	aload_1
   55:	aload	4
   57:	invokevirtual	#53; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   60:	ifeq	81
   63:	aload_3
   64:	aload	4
   66:	aload_3
   67:	invokevirtual	#17; //Method scala/concurrent/forkjoin/LinkedTransferQueue$QNode.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
   70:	ifeq	81
   73:	aload_0
   74:	aload_2
   75:	aload_3
   76:	invokespecial	#2; //Method clean:(Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;)V
   79:	iconst_1
   80:	ireturn
   81:	aload_3
   82:	astore_2
   83:	goto	11
   86:	goto	6
  LineNumberTable: 
   line 728: 0
   line 729: 4
   line 731: 6
   line 733: 11
   line 734: 16
   line 735: 27
   line 736: 29
   line 737: 34
   line 738: 37
   line 739: 43
   line 741: 73
   line 742: 79
   line 744: 81
   line 745: 83
   line 746: 86

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   16      67      3    q       Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;
   43      40      4    x       Ljava/lang/Object;
   11      75      2    pred       Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;
   0      89      0    this       Lscala/concurrent/forkjoin/LinkedTransferQueue;
   0      89      1    o       Ljava/lang/Object;

  LocalVariableTypeTable: length = 0xC
   00 01 00 00 00 59 00 FFFFFF85 00 FFFFFF8B 00 00 

static scala.concurrent.forkjoin.LinkedTransferQueue$QNode access$000(scala.concurrent.forkjoin.LinkedTransferQueue);
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokespecial	#3; //Method traversalHead:()Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;
   4:	areturn
  LineNumberTable: 
   line 49: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    x0       Lscala/concurrent/forkjoin/LinkedTransferQueue;


static void access$100(scala.concurrent.forkjoin.LinkedTransferQueue, scala.concurrent.forkjoin.LinkedTransferQueue$QNode, scala.concurrent.forkjoin.LinkedTransferQueue$QNode);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokespecial	#2; //Method clean:(Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;)V
   6:	return
  LineNumberTable: 
   line 49: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    x0       Lscala/concurrent/forkjoin/LinkedTransferQueue;
   0      7      1    x1       Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;
   0      7      2    x2       Lscala/concurrent/forkjoin/LinkedTransferQueue$QNode;


static sun.misc.Unsafe access$200()   throws java.lang.NoSuchFieldException, java.lang.IllegalAccessException;
  Code:
   Stack=1, Locals=0, Args_size=0
   0:	invokestatic	#1; //Method getUnsafePrivileged:()Lsun/misc/Unsafe;
   3:	areturn
  LineNumberTable: 
   line 49: 0

  Exceptions: 
   throws java.lang.NoSuchFieldException, java.lang.IllegalAccessException
static {};
  Code:
   Stack=4, Locals=1, Args_size=0
   0:	invokestatic	#82; //Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
   3:	invokevirtual	#83; //Method java/lang/Runtime.availableProcessors:()I
   6:	putstatic	#84; //Field NCPUS:I
   9:	getstatic	#84; //Field NCPUS:I
   12:	iconst_2
   13:	if_icmpge	20
   16:	iconst_0
   17:	goto	22
   20:	bipush	32
   22:	putstatic	#24; //Field maxTimedSpins:I
   25:	getstatic	#24; //Field maxTimedSpins:I
   28:	bipush	16
   30:	imul
   31:	putstatic	#25; //Field maxUntimedSpins:I
   34:	invokestatic	#85; //Method getUnsafe:()Lsun/misc/Unsafe;
   37:	putstatic	#63; //Field _unsafe:Lsun/misc/Unsafe;
   40:	ldc	#86; //String head
   42:	invokestatic	#87; //Method fieldOffset:(Ljava/lang/String;)J
   45:	putstatic	#64; //Field headOffset:J
   48:	ldc	#88; //String tail
   50:	invokestatic	#87; //Method fieldOffset:(Ljava/lang/String;)J
   53:	putstatic	#66; //Field tailOffset:J
   56:	ldc	#89; //String cleanMe
   58:	invokestatic	#87; //Method fieldOffset:(Ljava/lang/String;)J
   61:	putstatic	#67; //Field cleanMeOffset:J
   64:	goto	79
   67:	astore_0
   68:	new	#91; //class java/lang/RuntimeException
   71:	dup
   72:	ldc	#92; //String Could not initialize intrinsics
   74:	aload_0
   75:	invokespecial	#93; //Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
   78:	athrow
   79:	return
  Exception table:
   from   to  target type
    34    64    67   Class java/lang/Throwable

  LineNumberTable: 
   line 75: 0
   line 84: 9
   line 91: 25
   line 831: 34
   line 832: 40
   line 833: 48
   line 834: 56
   line 837: 64
   line 835: 67
   line 836: 68
   line 838: 79

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   68      11      0    e       Ljava/lang/Throwable;


}

