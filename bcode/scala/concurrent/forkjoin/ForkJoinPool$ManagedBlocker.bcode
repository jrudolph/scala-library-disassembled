public interface scala.concurrent.forkjoin.ForkJoinPool$ManagedBlocker
  InnerClass: 
   public abstract #10= #1 of #8; //ManagedBlocker=class scala/concurrent/forkjoin/ForkJoinPool$ManagedBlocker of class scala/concurrent/forkjoin/ForkJoinPool
  minor version: 0
  major version: 49
  Constant pool:
const #1 = class	#9;	//  scala/concurrent/forkjoin/ForkJoinPool$ManagedBlocker
const #2 = class	#12;	//  java/lang/Object
const #3 = Asciz	block;
const #4 = Asciz	()Z;
const #5 = Asciz	Exceptions;
const #6 = class	#13;	//  java/lang/InterruptedException
const #7 = Asciz	isReleasable;
const #8 = class	#14;	//  scala/concurrent/forkjoin/ForkJoinPool
const #9 = Asciz	scala/concurrent/forkjoin/ForkJoinPool$ManagedBlocker;
const #10 = Asciz	ManagedBlocker;
const #11 = Asciz	InnerClasses;
const #12 = Asciz	java/lang/Object;
const #13 = Asciz	java/lang/InterruptedException;
const #14 = Asciz	scala/concurrent/forkjoin/ForkJoinPool;

{
public abstract boolean block()   throws java.lang.InterruptedException;
  Exceptions: 
   throws java.lang.InterruptedException
public abstract boolean isReleasable();

}

