Compiled from "ForkJoinWorkerThread.java"
public class scala.concurrent.forkjoin.ForkJoinWorkerThread extends java.lang.Thread
  SourceFile: "ForkJoinWorkerThread.java"
  InnerClass: 
   #68; //class scala/concurrent/forkjoin/ForkJoinWorkerThread$1
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Method	#78.#260;	//  scala/concurrent/forkjoin/ForkJoinWorkerThread.getUnsafePrivileged:()Lsun/misc/Unsafe;
const #2 = Method	#96.#261;	//  java/lang/Thread."<init>":()V
const #3 = class	#262;	//  java/lang/NullPointerException
const #4 = Method	#3.#261;	//  java/lang/NullPointerException."<init>":()V
const #5 = Field	#78.#263;	//  scala/concurrent/forkjoin/ForkJoinWorkerThread.pool:Lscala/concurrent/forkjoin/ForkJoinPool;
const #6 = Field	#78.#264;	//  scala/concurrent/forkjoin/ForkJoinWorkerThread.poolIndex:I
const #7 = Field	#78.#265;	//  scala/concurrent/forkjoin/ForkJoinWorkerThread.locallyFifo:Z
const #8 = Field	#78.#266;	//  scala/concurrent/forkjoin/ForkJoinWorkerThread.runState:I
const #9 = Method	#78.#267;	//  scala/concurrent/forkjoin/ForkJoinWorkerThread.transitionRunStateTo:(I)Z
const #10 = Field	#78.#268;	//  scala/concurrent/forkjoin/ForkJoinWorkerThread._unsafe:Lsun/misc/Unsafe;
const #11 = Field	#78.#269;	//  scala/concurrent/forkjoin/ForkJoinWorkerThread.runStateOffset:J
const #12 = Method	#71.#270;	//  sun/misc/Unsafe.compareAndSwapInt:(Ljava/lang/Object;JII)Z
const #13 = Field	#78.#271;	//  scala/concurrent/forkjoin/ForkJoinWorkerThread.active:Z
const #14 = Method	#272.#273;	//  scala/concurrent/forkjoin/ForkJoinPool.tryIncrementActiveCount:()Z
const #15 = Method	#272.#274;	//  scala/concurrent/forkjoin/ForkJoinPool.tryDecrementActiveCount:()Z
const #16 = Method	#78.#275;	//  scala/concurrent/forkjoin/ForkJoinWorkerThread.onStart:()V
const #17 = Method	#272.#276;	//  scala/concurrent/forkjoin/ForkJoinPool.sync:(Lscala/concurrent/forkjoin/ForkJoinWorkerThread;)V
const #18 = Method	#78.#277;	//  scala/concurrent/forkjoin/ForkJoinWorkerThread.mainLoop:()V
const #19 = Method	#78.#278;	//  scala/concurrent/forkjoin/ForkJoinWorkerThread.onTermination:(Ljava/lang/Throwable;)V
const #20 = class	#279;	//  java/lang/Throwable
const #21 = Method	#78.#280;	//  scala/concurrent/forkjoin/ForkJoinWorkerThread.isShutdown:()Z
const #22 = Method	#78.#281;	//  scala/concurrent/forkjoin/ForkJoinWorkerThread.pollTask:()Lscala/concurrent/forkjoin/ForkJoinTask;
const #23 = Method	#78.#282;	//  scala/concurrent/forkjoin/ForkJoinWorkerThread.pollSubmission:()Lscala/concurrent/forkjoin/ForkJoinTask;
const #24 = Method	#26.#283;	//  scala/concurrent/forkjoin/ForkJoinTask.quietlyExec:()V
const #25 = Method	#78.#284;	//  scala/concurrent/forkjoin/ForkJoinWorkerThread.tryInactivate:()Z
const #26 = class	#285;	//  scala/concurrent/forkjoin/ForkJoinTask
const #27 = Field	#78.#286;	//  scala/concurrent/forkjoin/ForkJoinWorkerThread.queue:[Lscala/concurrent/forkjoin/ForkJoinTask;
const #28 = Field	#78.#287;	//  scala/concurrent/forkjoin/ForkJoinWorkerThread.seed:I
const #29 = Method	#272.#288;	//  scala/concurrent/forkjoin/ForkJoinPool.isTerminating:()Z
const #30 = Field	#78.#289;	//  scala/concurrent/forkjoin/ForkJoinWorkerThread.base:I
const #31 = Field	#78.#290;	//  scala/concurrent/forkjoin/ForkJoinWorkerThread.sp:I
const #32 = Method	#78.#291;	//  scala/concurrent/forkjoin/ForkJoinWorkerThread.popTask:()Lscala/concurrent/forkjoin/ForkJoinTask;
const #33 = Method	#78.#292;	//  scala/concurrent/forkjoin/ForkJoinWorkerThread.cancelTasks:()V
const #34 = Method	#272.#293;	//  scala/concurrent/forkjoin/ForkJoinPool.workerTerminated:(Lscala/concurrent/forkjoin/ForkJoinWorkerThread;)V
const #35 = Method	#26.#294;	//  scala/concurrent/forkjoin/ForkJoinTask.rethrowException:(Ljava/lang/Throwable;)V
const #36 = Field	#78.#295;	//  scala/concurrent/forkjoin/ForkJoinWorkerThread.qShift:I
const #37 = Field	#78.#296;	//  scala/concurrent/forkjoin/ForkJoinWorkerThread.qBase:J
const #38 = Method	#71.#297;	//  sun/misc/Unsafe.putOrderedObject:(Ljava/lang/Object;JLjava/lang/Object;)V
const #39 = Method	#71.#298;	//  sun/misc/Unsafe.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z
const #40 = Field	#78.#299;	//  scala/concurrent/forkjoin/ForkJoinWorkerThread.spOffset:J
const #41 = Method	#71.#300;	//  sun/misc/Unsafe.putOrderedInt:(Ljava/lang/Object;JI)V
const #42 = Method	#78.#301;	//  scala/concurrent/forkjoin/ForkJoinWorkerThread.setSlot:([Lscala/concurrent/forkjoin/ForkJoinTask;ILscala/concurrent/forkjoin/ForkJoinTask;)V
const #43 = Method	#78.#302;	//  scala/concurrent/forkjoin/ForkJoinWorkerThread.storeSp:(I)V
const #44 = Method	#272.#303;	//  scala/concurrent/forkjoin/ForkJoinPool.signalWork:()V
const #45 = Method	#78.#304;	//  scala/concurrent/forkjoin/ForkJoinWorkerThread.growQueue:()V
const #46 = Method	#78.#305;	//  scala/concurrent/forkjoin/ForkJoinWorkerThread.casSlotNull:([Lscala/concurrent/forkjoin/ForkJoinTask;ILscala/concurrent/forkjoin/ForkJoinTask;)Z
const #47 = Method	#78.#306;	//  scala/concurrent/forkjoin/ForkJoinWorkerThread.tryActivate:()Z
const #48 = int	268435456;
const #49 = class	#307;	//  java/util/concurrent/RejectedExecutionException
const #50 = String	#308;	//  Queue capacity exceeded
const #51 = Method	#49.#309;	//  java/util/concurrent/RejectedExecutionException."<init>":(Ljava/lang/String;)V
const #52 = Field	#272.#310;	//  scala/concurrent/forkjoin/ForkJoinPool.workers:[Lscala/concurrent/forkjoin/ForkJoinWorkerThread;
const #53 = Method	#78.#311;	//  scala/concurrent/forkjoin/ForkJoinWorkerThread.xorShift:(I)I
const #54 = Method	#78.#312;	//  scala/concurrent/forkjoin/ForkJoinWorkerThread.deqTask:()Lscala/concurrent/forkjoin/ForkJoinTask;
const #55 = Method	#272.#313;	//  scala/concurrent/forkjoin/ForkJoinPool.hasNewSyncEvent:(Lscala/concurrent/forkjoin/ForkJoinWorkerThread;)Z
const #56 = Method	#78.#314;	//  scala/concurrent/forkjoin/ForkJoinWorkerThread.scan:()Lscala/concurrent/forkjoin/ForkJoinTask;
const #57 = Field	#78.#315;	//  scala/concurrent/forkjoin/ForkJoinWorkerThread.stealCount:I
const #58 = Method	#272.#316;	//  scala/concurrent/forkjoin/ForkJoinPool.hasQueuedSubmissions:()Z
const #59 = Method	#272.#282;	//  scala/concurrent/forkjoin/ForkJoinPool.pollSubmission:()Lscala/concurrent/forkjoin/ForkJoinTask;
const #60 = Method	#26.#317;	//  scala/concurrent/forkjoin/ForkJoinTask.cancelIgnoringExceptions:()V
const #61 = InterfaceMethod	#318.#319;	//  java/util/Collection.add:(Ljava/lang/Object;)Z
const #62 = Method	#272.#320;	//  scala/concurrent/forkjoin/ForkJoinPool.getIdleThreadCount:()I
const #63 = Field	#26.#321;	//  scala/concurrent/forkjoin/ForkJoinTask.status:I
const #64 = Method	#78.#322;	//  scala/concurrent/forkjoin/ForkJoinWorkerThread.pushTask:(Lscala/concurrent/forkjoin/ForkJoinTask;)V
const #65 = Method	#272.#323;	//  scala/concurrent/forkjoin/ForkJoinPool.isQuiescent:()Z
const #66 = Method	#71.#324;	//  sun/misc/Unsafe.getUnsafe:()Lsun/misc/Unsafe;
const #67 = class	#325;	//  java/lang/SecurityException
const #68 = class	#326;	//  scala/concurrent/forkjoin/ForkJoinWorkerThread$1
const #69 = Method	#68.#261;	//  scala/concurrent/forkjoin/ForkJoinWorkerThread$1."<init>":()V
const #70 = Method	#329.#330;	//  java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;
const #71 = class	#331;	//  sun/misc/Unsafe
const #72 = class	#332;	//  java/security/PrivilegedActionException
const #73 = Method	#72.#333;	//  java/security/PrivilegedActionException.getCause:()Ljava/lang/Throwable;
const #74 = String	#334;	//  theUnsafe
const #75 = Method	#335.#336;	//  java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
const #76 = Method	#337.#338;	//  java/lang/reflect/Field.setAccessible:(Z)V
const #77 = Method	#337.#339;	//  java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
const #78 = class	#340;	//  scala/concurrent/forkjoin/ForkJoinWorkerThread
const #79 = Method	#71.#341;	//  sun/misc/Unsafe.objectFieldOffset:(Ljava/lang/reflect/Field;)J
const #80 = Method	#78.#324;	//  scala/concurrent/forkjoin/ForkJoinWorkerThread.getUnsafe:()Lsun/misc/Unsafe;
const #81 = String	#109;	//  base
const #82 = Method	#78.#342;	//  scala/concurrent/forkjoin/ForkJoinWorkerThread.fieldOffset:(Ljava/lang/String;)J
const #83 = Field	#78.#343;	//  scala/concurrent/forkjoin/ForkJoinWorkerThread.baseOffset:J
const #84 = String	#108;	//  sp
const #85 = String	#112;	//  runState
const #86 = class	#105;	//  "[Lscala/concurrent/forkjoin/ForkJoinTask;"
const #87 = Method	#71.#344;	//  sun/misc/Unsafe.arrayBaseOffset:(Ljava/lang/Class;)I
const #88 = Method	#71.#345;	//  sun/misc/Unsafe.arrayIndexScale:(Ljava/lang/Class;)I
const #89 = class	#346;	//  java/lang/Error
const #90 = String	#347;	//  data type scale not a power of two
const #91 = Method	#89.#309;	//  java/lang/Error."<init>":(Ljava/lang/String;)V
const #92 = Method	#348.#349;	//  java/lang/Integer.numberOfLeadingZeros:(I)I
const #93 = class	#350;	//  java/lang/RuntimeException
const #94 = String	#351;	//  Could not initialize intrinsics
const #95 = Method	#93.#352;	//  java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
const #96 = class	#353;	//  java/lang/Thread
const #97 = Asciz	INITIAL_QUEUE_CAPACITY;
const #98 = Asciz	I;
const #99 = Asciz	ConstantValue;
const #100 = int	8192;
const #101 = Asciz	MAXIMUM_QUEUE_CAPACITY;
const #102 = Asciz	pool;
const #103 = Asciz	Lscala/concurrent/forkjoin/ForkJoinPool;;
const #104 = Asciz	queue;
const #105 = Asciz	[Lscala/concurrent/forkjoin/ForkJoinTask;;
const #106 = Asciz	Signature;
const #107 = Asciz	[Lscala/concurrent/forkjoin/ForkJoinTask<*>;;
const #108 = Asciz	sp;
const #109 = Asciz	base;
const #110 = Asciz	active;
const #111 = Asciz	Z;
const #112 = Asciz	runState;
const #113 = Asciz	seed;
const #114 = Asciz	stealCount;
const #115 = Asciz	poolIndex;
const #116 = Asciz	lastEventCount;
const #117 = Asciz	J;
const #118 = Asciz	locallyFifo;
const #119 = Asciz	RUNNING;
const #120 = int	0;
const #121 = Asciz	SHUTDOWN;
const #122 = int	1;
const #123 = Asciz	TERMINATING;
const #124 = int	2;
const #125 = Asciz	TERMINATED;
const #126 = int	3;
const #127 = Asciz	_unsafe;
const #128 = Asciz	Lsun/misc/Unsafe;;
const #129 = Asciz	baseOffset;
const #130 = Asciz	spOffset;
const #131 = Asciz	runStateOffset;
const #132 = Asciz	qBase;
const #133 = Asciz	qShift;
const #134 = Asciz	<init>;
const #135 = Asciz	(Lscala/concurrent/forkjoin/ForkJoinPool;)V;
const #136 = Asciz	Code;
const #137 = Asciz	LineNumberTable;
const #138 = Asciz	LocalVariableTable;
const #139 = Asciz	this;
const #140 = Asciz	Lscala/concurrent/forkjoin/ForkJoinWorkerThread;;
const #141 = Asciz	getPool;
const #142 = Asciz	()Lscala/concurrent/forkjoin/ForkJoinPool;;
const #143 = Asciz	getPoolIndex;
const #144 = Asciz	()I;
const #145 = Asciz	setAsyncMode;
const #146 = Asciz	(Z)V;
const #147 = Asciz	async;
const #148 = Asciz	isShutdown;
const #149 = Asciz	()Z;
const #150 = Asciz	isTerminating;
const #151 = Asciz	isTerminated;
const #152 = Asciz	shutdown;
const #153 = Asciz	shutdownNow;
const #154 = Asciz	transitionRunStateTo;
const #155 = Asciz	(I)Z;
const #156 = Asciz	s;
const #157 = Asciz	state;
const #158 = Asciz	tryActivate;
const #159 = Asciz	tryInactivate;
const #160 = Asciz	xorShift;
const #161 = Asciz	(I)I;
const #162 = Asciz	r;
const #163 = Asciz	run;
const #164 = Asciz	()V;
const #165 = Asciz	ex;
const #166 = Asciz	Ljava/lang/Throwable;;
const #167 = Asciz	exception;
const #168 = Asciz	mainLoop;
const #169 = Asciz	t;
const #170 = Asciz	Lscala/concurrent/forkjoin/ForkJoinTask;;
const #171 = Asciz	LocalVariableTypeTable;
const #172 = Asciz	Lscala/concurrent/forkjoin/ForkJoinTask<*>;;
const #173 = Asciz	onStart;
const #174 = Asciz	p;
const #175 = Asciz	onTermination;
const #176 = Asciz	(Ljava/lang/Throwable;)V;
const #177 = Asciz	setSlot;
const #178 = Asciz	([Lscala/concurrent/forkjoin/ForkJoinTask;ILscala/concurrent/forkjoin/ForkJoinTask;)V;
const #179 = Asciz	q;
const #180 = Asciz	i;
const #181 = Asciz	([Lscala/concurrent/forkjoin/ForkJoinTask<*>;ILscala/concurrent/forkjoin/ForkJoinTask<*>;)V;
const #182 = Asciz	casSlotNull;
const #183 = Asciz	([Lscala/concurrent/forkjoin/ForkJoinTask;ILscala/concurrent/forkjoin/ForkJoinTask;)Z;
const #184 = Asciz	([Lscala/concurrent/forkjoin/ForkJoinTask<*>;ILscala/concurrent/forkjoin/ForkJoinTask<*>;)Z;
const #185 = Asciz	storeSp;
const #186 = Asciz	(I)V;
const #187 = Asciz	pushTask;
const #188 = Asciz	(Lscala/concurrent/forkjoin/ForkJoinTask;)V;
const #189 = Asciz	mask;
const #190 = Asciz	(Lscala/concurrent/forkjoin/ForkJoinTask<*>;)V;
const #191 = Asciz	deqTask;
const #192 = Asciz	()Lscala/concurrent/forkjoin/ForkJoinTask;;
const #193 = Asciz	b;
const #194 = Asciz	()Lscala/concurrent/forkjoin/ForkJoinTask<*>;;
const #195 = Asciz	popTask;
const #196 = Asciz	unpushTask;
const #197 = Asciz	(Lscala/concurrent/forkjoin/ForkJoinTask;)Z;
const #198 = Asciz	(Lscala/concurrent/forkjoin/ForkJoinTask<*>;)Z;
const #199 = Asciz	peekTask;
const #200 = Asciz	growQueue;
const #201 = Asciz	oldIndex;
const #202 = Asciz	oldQ;
const #203 = Asciz	oldSize;
const #204 = Asciz	newSize;
const #205 = Asciz	newQ;
const #206 = Asciz	bf;
const #207 = Asciz	oldMask;
const #208 = Asciz	newMask;
const #209 = Asciz	scan;
const #210 = Asciz	v;
const #211 = Asciz	idx;
const #212 = Asciz	probes;
const #213 = Asciz	ws;
const #214 = Asciz	[Lscala/concurrent/forkjoin/ForkJoinWorkerThread;;
const #215 = Asciz	pollTask;
const #216 = Asciz	pollLocalTask;
const #217 = Asciz	pollSubmission;
const #218 = Asciz	cancelTasks;
const #219 = Asciz	drainTasksTo;
const #220 = Asciz	(Ljava/util/Collection;)I;
const #221 = Asciz	c;
const #222 = Asciz	Ljava/util/Collection;;
const #223 = Asciz	n;
const #224 = Asciz	Ljava/util/Collection<Lscala/concurrent/forkjoin/ForkJoinTask<*>;>;;
const #225 = Asciz	(Ljava/util/Collection<Lscala/concurrent/forkjoin/ForkJoinTask<*>;>;)I;
const #226 = Asciz	getAndClearStealCount;
const #227 = Asciz	sc;
const #228 = Asciz	hasQueuedTasks;
const #229 = Asciz	([Lscala/concurrent/forkjoin/ForkJoinWorkerThread;)Z;
const #230 = Asciz	w;
const #231 = Asciz	j;
const #232 = Asciz	len;
const #233 = Asciz	getQueueSize;
const #234 = Asciz	getEstimatedSurplusTaskCount;
const #235 = Asciz	scanWhileJoining;
const #236 = Asciz	(Lscala/concurrent/forkjoin/ForkJoinTask;)Lscala/concurrent/forkjoin/ForkJoinTask;;
const #237 = Asciz	joinMe;
const #238 = Asciz	(Lscala/concurrent/forkjoin/ForkJoinTask<*>;)Lscala/concurrent/forkjoin/ForkJoinTask<*>;;
const #239 = Asciz	helpQuiescePool;
const #240 = Asciz	getUnsafe;
const #241 = Asciz	()Lsun/misc/Unsafe;;
const #242 = Asciz	e;
const #243 = Asciz	Ljava/security/PrivilegedActionException;;
const #244 = Asciz	se;
const #245 = Asciz	Ljava/lang/SecurityException;;
const #246 = Asciz	Exceptions;
const #247 = Asciz	getUnsafePrivileged;
const #248 = Asciz	f;
const #249 = Asciz	Ljava/lang/reflect/Field;;
const #250 = class	#354;	//  java/lang/NoSuchFieldException
const #251 = class	#355;	//  java/lang/IllegalAccessException
const #252 = Asciz	fieldOffset;
const #253 = Asciz	(Ljava/lang/String;)J;
const #254 = Asciz	fieldName;
const #255 = Asciz	Ljava/lang/String;;
const #256 = Asciz	access$000;
const #257 = Asciz	<clinit>;
const #258 = Asciz	SourceFile;
const #259 = Asciz	ForkJoinWorkerThread.java;
const #260 = NameAndType	#247:#241;//  getUnsafePrivileged:()Lsun/misc/Unsafe;
const #261 = NameAndType	#134:#164;//  "<init>":()V
const #262 = Asciz	java/lang/NullPointerException;
const #263 = NameAndType	#102:#103;//  pool:Lscala/concurrent/forkjoin/ForkJoinPool;
const #264 = NameAndType	#115:#98;//  poolIndex:I
const #265 = NameAndType	#118:#111;//  locallyFifo:Z
const #266 = NameAndType	#112:#98;//  runState:I
const #267 = NameAndType	#154:#155;//  transitionRunStateTo:(I)Z
const #268 = NameAndType	#127:#128;//  _unsafe:Lsun/misc/Unsafe;
const #269 = NameAndType	#131:#117;//  runStateOffset:J
const #270 = NameAndType	#356:#357;//  compareAndSwapInt:(Ljava/lang/Object;JII)Z
const #271 = NameAndType	#110:#111;//  active:Z
const #272 = class	#358;	//  scala/concurrent/forkjoin/ForkJoinPool
const #273 = NameAndType	#359:#149;//  tryIncrementActiveCount:()Z
const #274 = NameAndType	#360:#149;//  tryDecrementActiveCount:()Z
const #275 = NameAndType	#173:#164;//  onStart:()V
const #276 = NameAndType	#361:#362;//  sync:(Lscala/concurrent/forkjoin/ForkJoinWorkerThread;)V
const #277 = NameAndType	#168:#164;//  mainLoop:()V
const #278 = NameAndType	#175:#176;//  onTermination:(Ljava/lang/Throwable;)V
const #279 = Asciz	java/lang/Throwable;
const #280 = NameAndType	#148:#149;//  isShutdown:()Z
const #281 = NameAndType	#215:#192;//  pollTask:()Lscala/concurrent/forkjoin/ForkJoinTask;
const #282 = NameAndType	#217:#192;//  pollSubmission:()Lscala/concurrent/forkjoin/ForkJoinTask;
const #283 = NameAndType	#363:#164;//  quietlyExec:()V
const #284 = NameAndType	#159:#149;//  tryInactivate:()Z
const #285 = Asciz	scala/concurrent/forkjoin/ForkJoinTask;
const #286 = NameAndType	#104:#105;//  queue:[Lscala/concurrent/forkjoin/ForkJoinTask;
const #287 = NameAndType	#113:#98;//  seed:I
const #288 = NameAndType	#150:#149;//  isTerminating:()Z
const #289 = NameAndType	#109:#98;//  base:I
const #290 = NameAndType	#108:#98;//  sp:I
const #291 = NameAndType	#195:#192;//  popTask:()Lscala/concurrent/forkjoin/ForkJoinTask;
const #292 = NameAndType	#218:#164;//  cancelTasks:()V
const #293 = NameAndType	#364:#362;//  workerTerminated:(Lscala/concurrent/forkjoin/ForkJoinWorkerThread;)V
const #294 = NameAndType	#365:#176;//  rethrowException:(Ljava/lang/Throwable;)V
const #295 = NameAndType	#133:#98;//  qShift:I
const #296 = NameAndType	#132:#117;//  qBase:J
const #297 = NameAndType	#366:#367;//  putOrderedObject:(Ljava/lang/Object;JLjava/lang/Object;)V
const #298 = NameAndType	#368:#369;//  compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z
const #299 = NameAndType	#130:#117;//  spOffset:J
const #300 = NameAndType	#370:#371;//  putOrderedInt:(Ljava/lang/Object;JI)V
const #301 = NameAndType	#177:#178;//  setSlot:([Lscala/concurrent/forkjoin/ForkJoinTask;ILscala/concurrent/forkjoin/ForkJoinTask;)V
const #302 = NameAndType	#185:#186;//  storeSp:(I)V
const #303 = NameAndType	#372:#164;//  signalWork:()V
const #304 = NameAndType	#200:#164;//  growQueue:()V
const #305 = NameAndType	#182:#183;//  casSlotNull:([Lscala/concurrent/forkjoin/ForkJoinTask;ILscala/concurrent/forkjoin/ForkJoinTask;)Z
const #306 = NameAndType	#158:#149;//  tryActivate:()Z
const #307 = Asciz	java/util/concurrent/RejectedExecutionException;
const #308 = Asciz	Queue capacity exceeded;
const #309 = NameAndType	#134:#373;//  "<init>":(Ljava/lang/String;)V
const #310 = NameAndType	#374:#214;//  workers:[Lscala/concurrent/forkjoin/ForkJoinWorkerThread;
const #311 = NameAndType	#160:#161;//  xorShift:(I)I
const #312 = NameAndType	#191:#192;//  deqTask:()Lscala/concurrent/forkjoin/ForkJoinTask;
const #313 = NameAndType	#375:#376;//  hasNewSyncEvent:(Lscala/concurrent/forkjoin/ForkJoinWorkerThread;)Z
const #314 = NameAndType	#209:#192;//  scan:()Lscala/concurrent/forkjoin/ForkJoinTask;
const #315 = NameAndType	#114:#98;//  stealCount:I
const #316 = NameAndType	#377:#149;//  hasQueuedSubmissions:()Z
const #317 = NameAndType	#378:#164;//  cancelIgnoringExceptions:()V
const #318 = class	#379;	//  java/util/Collection
const #319 = NameAndType	#380:#381;//  add:(Ljava/lang/Object;)Z
const #320 = NameAndType	#382:#144;//  getIdleThreadCount:()I
const #321 = NameAndType	#383:#98;//  status:I
const #322 = NameAndType	#187:#188;//  pushTask:(Lscala/concurrent/forkjoin/ForkJoinTask;)V
const #323 = NameAndType	#384:#149;//  isQuiescent:()Z
const #324 = NameAndType	#240:#241;//  getUnsafe:()Lsun/misc/Unsafe;
const #325 = Asciz	java/lang/SecurityException;
const #326 = Asciz	scala/concurrent/forkjoin/ForkJoinWorkerThread$1;
const #327 = Asciz	;
const #328 = Asciz	InnerClasses;
const #329 = class	#385;	//  java/security/AccessController
const #330 = NameAndType	#386:#387;//  doPrivileged:(Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;
const #331 = Asciz	sun/misc/Unsafe;
const #332 = Asciz	java/security/PrivilegedActionException;
const #333 = NameAndType	#388:#389;//  getCause:()Ljava/lang/Throwable;
const #334 = Asciz	theUnsafe;
const #335 = class	#390;	//  java/lang/Class
const #336 = NameAndType	#391:#392;//  getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
const #337 = class	#393;	//  java/lang/reflect/Field
const #338 = NameAndType	#394:#146;//  setAccessible:(Z)V
const #339 = NameAndType	#395:#396;//  get:(Ljava/lang/Object;)Ljava/lang/Object;
const #340 = Asciz	scala/concurrent/forkjoin/ForkJoinWorkerThread;
const #341 = NameAndType	#397:#398;//  objectFieldOffset:(Ljava/lang/reflect/Field;)J
const #342 = NameAndType	#252:#253;//  fieldOffset:(Ljava/lang/String;)J
const #343 = NameAndType	#129:#117;//  baseOffset:J
const #344 = NameAndType	#399:#400;//  arrayBaseOffset:(Ljava/lang/Class;)I
const #345 = NameAndType	#401:#400;//  arrayIndexScale:(Ljava/lang/Class;)I
const #346 = Asciz	java/lang/Error;
const #347 = Asciz	data type scale not a power of two;
const #348 = class	#402;	//  java/lang/Integer
const #349 = NameAndType	#403:#161;//  numberOfLeadingZeros:(I)I
const #350 = Asciz	java/lang/RuntimeException;
const #351 = Asciz	Could not initialize intrinsics;
const #352 = NameAndType	#134:#404;//  "<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
const #353 = Asciz	java/lang/Thread;
const #354 = Asciz	java/lang/NoSuchFieldException;
const #355 = Asciz	java/lang/IllegalAccessException;
const #356 = Asciz	compareAndSwapInt;
const #357 = Asciz	(Ljava/lang/Object;JII)Z;
const #358 = Asciz	scala/concurrent/forkjoin/ForkJoinPool;
const #359 = Asciz	tryIncrementActiveCount;
const #360 = Asciz	tryDecrementActiveCount;
const #361 = Asciz	sync;
const #362 = Asciz	(Lscala/concurrent/forkjoin/ForkJoinWorkerThread;)V;
const #363 = Asciz	quietlyExec;
const #364 = Asciz	workerTerminated;
const #365 = Asciz	rethrowException;
const #366 = Asciz	putOrderedObject;
const #367 = Asciz	(Ljava/lang/Object;JLjava/lang/Object;)V;
const #368 = Asciz	compareAndSwapObject;
const #369 = Asciz	(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z;
const #370 = Asciz	putOrderedInt;
const #371 = Asciz	(Ljava/lang/Object;JI)V;
const #372 = Asciz	signalWork;
const #373 = Asciz	(Ljava/lang/String;)V;
const #374 = Asciz	workers;
const #375 = Asciz	hasNewSyncEvent;
const #376 = Asciz	(Lscala/concurrent/forkjoin/ForkJoinWorkerThread;)Z;
const #377 = Asciz	hasQueuedSubmissions;
const #378 = Asciz	cancelIgnoringExceptions;
const #379 = Asciz	java/util/Collection;
const #380 = Asciz	add;
const #381 = Asciz	(Ljava/lang/Object;)Z;
const #382 = Asciz	getIdleThreadCount;
const #383 = Asciz	status;
const #384 = Asciz	isQuiescent;
const #385 = Asciz	java/security/AccessController;
const #386 = Asciz	doPrivileged;
const #387 = Asciz	(Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;;
const #388 = Asciz	getCause;
const #389 = Asciz	()Ljava/lang/Throwable;;
const #390 = Asciz	java/lang/Class;
const #391 = Asciz	getDeclaredField;
const #392 = Asciz	(Ljava/lang/String;)Ljava/lang/reflect/Field;;
const #393 = Asciz	java/lang/reflect/Field;
const #394 = Asciz	setAccessible;
const #395 = Asciz	get;
const #396 = Asciz	(Ljava/lang/Object;)Ljava/lang/Object;;
const #397 = Asciz	objectFieldOffset;
const #398 = Asciz	(Ljava/lang/reflect/Field;)J;
const #399 = Asciz	arrayBaseOffset;
const #400 = Asciz	(Ljava/lang/Class;)I;
const #401 = Asciz	arrayIndexScale;
const #402 = Asciz	java/lang/Integer;
const #403 = Asciz	numberOfLeadingZeros;
const #404 = Asciz	(Ljava/lang/String;Ljava/lang/Throwable;)V;

{
final scala.concurrent.forkjoin.ForkJoinPool pool;

int poolIndex;

long lastEventCount;

static final sun.misc.Unsafe _unsafe;

static final long baseOffset;

static final long spOffset;

static final long runStateOffset;

static final long qBase;

static final int qShift;

protected scala.concurrent.forkjoin.ForkJoinWorkerThread(scala.concurrent.forkjoin.ForkJoinPool);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	invokespecial	#2; //Method java/lang/Thread."<init>":()V
   4:	aload_1
   5:	ifnonnull	16
   8:	new	#3; //class java/lang/NullPointerException
   11:	dup
   12:	invokespecial	#4; //Method java/lang/NullPointerException."<init>":()V
   15:	athrow
   16:	aload_0
   17:	aload_1
   18:	putfield	#5; //Field pool:Lscala/concurrent/forkjoin/ForkJoinPool;
   21:	return
  LineNumberTable: 
   line 211: 0
   line 212: 4
   line 213: 16
   line 216: 21

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      22      0    this       Lscala/concurrent/forkjoin/ForkJoinWorkerThread;
   0      22      1    pool       Lscala/concurrent/forkjoin/ForkJoinPool;


public scala.concurrent.forkjoin.ForkJoinPool getPool();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#5; //Field pool:Lscala/concurrent/forkjoin/ForkJoinPool;
   4:	areturn
  LineNumberTable: 
   line 225: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    this       Lscala/concurrent/forkjoin/ForkJoinWorkerThread;


public int getPoolIndex();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#6; //Field poolIndex:I
   4:	ireturn
  LineNumberTable: 
   line 237: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    this       Lscala/concurrent/forkjoin/ForkJoinWorkerThread;


void setAsyncMode(boolean);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	putfield	#7; //Field locallyFifo:Z
   5:	return
  LineNumberTable: 
   line 246: 0
   line 247: 5

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/concurrent/forkjoin/ForkJoinWorkerThread;
   0      6      1    async       Z


final boolean isShutdown();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#8; //Field runState:I
   4:	iconst_1
   5:	if_icmplt	12
   8:	iconst_1
   9:	goto	13
   12:	iconst_0
   13:	ireturn
  LineNumberTable: 
   line 257: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      14      0    this       Lscala/concurrent/forkjoin/ForkJoinWorkerThread;


final boolean isTerminating();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#8; //Field runState:I
   4:	iconst_2
   5:	if_icmplt	12
   8:	iconst_1
   9:	goto	13
   12:	iconst_0
   13:	ireturn
  LineNumberTable: 
   line 258: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      14      0    this       Lscala/concurrent/forkjoin/ForkJoinWorkerThread;


final boolean isTerminated();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#8; //Field runState:I
   4:	iconst_3
   5:	if_icmpne	12
   8:	iconst_1
   9:	goto	13
   12:	iconst_0
   13:	ireturn
  LineNumberTable: 
   line 259: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      14      0    this       Lscala/concurrent/forkjoin/ForkJoinWorkerThread;


final boolean shutdown();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	iconst_1
   2:	invokespecial	#9; //Method transitionRunStateTo:(I)Z
   5:	ireturn
  LineNumberTable: 
   line 260: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/concurrent/forkjoin/ForkJoinWorkerThread;


final boolean shutdownNow();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	iconst_2
   2:	invokespecial	#9; //Method transitionRunStateTo:(I)Z
   5:	ireturn
  LineNumberTable: 
   line 261: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/concurrent/forkjoin/ForkJoinWorkerThread;


public void run();
  Code:
   Stack=2, Locals=4, Args_size=1
   0:	aconst_null
   1:	astore_1
   2:	aload_0
   3:	invokevirtual	#16; //Method onStart:()V
   6:	aload_0
   7:	getfield	#5; //Field pool:Lscala/concurrent/forkjoin/ForkJoinPool;
   10:	aload_0
   11:	invokevirtual	#17; //Method scala/concurrent/forkjoin/ForkJoinPool.sync:(Lscala/concurrent/forkjoin/ForkJoinWorkerThread;)V
   14:	aload_0
   15:	invokespecial	#18; //Method mainLoop:()V
   18:	aload_0
   19:	aload_1
   20:	invokevirtual	#19; //Method onTermination:(Ljava/lang/Throwable;)V
   23:	goto	45
   26:	astore_2
   27:	aload_2
   28:	astore_1
   29:	aload_0
   30:	aload_1
   31:	invokevirtual	#19; //Method onTermination:(Ljava/lang/Throwable;)V
   34:	goto	45
   37:	astore_3
   38:	aload_0
   39:	aload_1
   40:	invokevirtual	#19; //Method onTermination:(Ljava/lang/Throwable;)V
   43:	aload_3
   44:	athrow
   45:	return
  Exception table:
   from   to  target type
     2    18    26   Class java/lang/Throwable

     2    18    37   any
    26    29    37   any
    37    38    37   any
  LineNumberTable: 
   line 321: 0
   line 323: 2
   line 324: 6
   line 325: 14
   line 329: 18
   line 330: 23
   line 326: 26
   line 327: 27
   line 329: 29
   line 330: 34
   line 329: 37
   line 331: 45

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   27      2      2    ex       Ljava/lang/Throwable;
   0      46      0    this       Lscala/concurrent/forkjoin/ForkJoinWorkerThread;
   2      44      1    exception       Ljava/lang/Throwable;


protected void onStart();
  Code:
   Stack=4, Locals=2, Args_size=1
   0:	aload_0
   1:	sipush	8192
   4:	anewarray	#26; //class scala/concurrent/forkjoin/ForkJoinTask
   7:	putfield	#27; //Field queue:[Lscala/concurrent/forkjoin/ForkJoinTask;
   10:	aload_0
   11:	getfield	#6; //Field poolIndex:I
   14:	iconst_1
   15:	iadd
   16:	istore_1
   17:	aload_0
   18:	iload_1
   19:	iload_1
   20:	bipush	8
   22:	ishl
   23:	iadd
   24:	iload_1
   25:	bipush	16
   27:	ishl
   28:	iadd
   29:	iload_1
   30:	bipush	24
   32:	ishl
   33:	iadd
   34:	putfield	#28; //Field seed:I
   37:	return
  LineNumberTable: 
   line 358: 0
   line 361: 10
   line 362: 17
   line 363: 37

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      38      0    this       Lscala/concurrent/forkjoin/ForkJoinWorkerThread;
   17      21      1    p       I


protected void onTermination(java.lang.Throwable);
  Code:
   Stack=2, Locals=4, Args_size=2
   0:	aload_1
   1:	ifnonnull	47
   4:	aload_0
   5:	getfield	#5; //Field pool:Lscala/concurrent/forkjoin/ForkJoinPool;
   8:	invokevirtual	#29; //Method scala/concurrent/forkjoin/ForkJoinPool.isTerminating:()Z
   11:	ifne	47
   14:	aload_0
   15:	getfield	#30; //Field base:I
   18:	aload_0
   19:	getfield	#31; //Field sp:I
   22:	if_icmpeq	47
   25:	aload_0
   26:	invokevirtual	#32; //Method popTask:()Lscala/concurrent/forkjoin/ForkJoinTask;
   29:	astore_2
   30:	aload_2
   31:	ifnull	38
   34:	aload_2
   35:	invokevirtual	#24; //Method scala/concurrent/forkjoin/ForkJoinTask.quietlyExec:()V
   38:	goto	0
   41:	astore_2
   42:	aload_2
   43:	astore_1
   44:	goto	0
   47:	aload_0
   48:	invokespecial	#25; //Method tryInactivate:()Z
   51:	ifeq	47
   54:	aload_0
   55:	invokevirtual	#33; //Method cancelTasks:()V
   58:	aload_0
   59:	iconst_3
   60:	putfield	#8; //Field runState:I
   63:	aload_0
   64:	getfield	#5; //Field pool:Lscala/concurrent/forkjoin/ForkJoinPool;
   67:	aload_0
   68:	invokevirtual	#34; //Method scala/concurrent/forkjoin/ForkJoinPool.workerTerminated:(Lscala/concurrent/forkjoin/ForkJoinWorkerThread;)V
   71:	aload_1
   72:	ifnull	111
   75:	aload_1
   76:	invokestatic	#35; //Method scala/concurrent/forkjoin/ForkJoinTask.rethrowException:(Ljava/lang/Throwable;)V
   79:	goto	111
   82:	astore_2
   83:	aload_1
   84:	ifnonnull	89
   87:	aload_2
   88:	astore_1
   89:	aload_1
   90:	ifnull	111
   93:	aload_1
   94:	invokestatic	#35; //Method scala/concurrent/forkjoin/ForkJoinTask.rethrowException:(Ljava/lang/Throwable;)V
   97:	goto	111
   100:	astore_3
   101:	aload_1
   102:	ifnull	109
   105:	aload_1
   106:	invokestatic	#35; //Method scala/concurrent/forkjoin/ForkJoinTask.rethrowException:(Ljava/lang/Throwable;)V
   109:	aload_3
   110:	athrow
   111:	return
  Exception table:
   from   to  target type
    25    38    41   Class java/lang/Throwable

    47    71    82   Class java/lang/Throwable

    47    71   100   any
    82    89   100   any
   100   101   100   any
  LineNumberTable: 
   line 375: 0
   line 377: 25
   line 378: 30
   line 379: 34
   line 382: 38
   line 380: 41
   line 381: 42
   line 382: 44
   line 387: 47
   line 388: 54
   line 389: 58
   line 390: 63
   line 395: 71
   line 396: 75
   line 391: 82
   line 392: 83
   line 393: 87
   line 395: 89
   line 396: 93
   line 395: 100
   line 396: 105
   line 398: 111

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   30      8      2    t       Lscala/concurrent/forkjoin/ForkJoinTask;
   42      2      2    ex       Ljava/lang/Throwable;
   83      6      2    ex       Ljava/lang/Throwable;
   0      112      0    this       Lscala/concurrent/forkjoin/ForkJoinWorkerThread;
   0      112      1    exception       Ljava/lang/Throwable;

  LocalVariableTypeTable: length = 0xC
   00 01 00 1E 00 08 00 FFFFFFA9 00 FFFFFFAC 00 02 

final void pushTask(scala.concurrent.forkjoin.ForkJoinTask);
  Code:
   Stack=3, Locals=5, Args_size=2
   0:	aload_0
   1:	getfield	#27; //Field queue:[Lscala/concurrent/forkjoin/ForkJoinTask;
   4:	astore_2
   5:	aload_2
   6:	arraylength
   7:	iconst_1
   8:	isub
   9:	istore_3
   10:	aload_0
   11:	getfield	#31; //Field sp:I
   14:	istore	4
   16:	aload_2
   17:	iload	4
   19:	iload_3
   20:	iand
   21:	aload_1
   22:	invokestatic	#42; //Method setSlot:([Lscala/concurrent/forkjoin/ForkJoinTask;ILscala/concurrent/forkjoin/ForkJoinTask;)V
   25:	aload_0
   26:	iinc	4, 1
   29:	iload	4
   31:	invokespecial	#43; //Method storeSp:(I)V
   34:	iload	4
   36:	aload_0
   37:	getfield	#30; //Field base:I
   40:	isub
   41:	dup
   42:	istore	4
   44:	iconst_1
   45:	if_icmpne	58
   48:	aload_0
   49:	getfield	#5; //Field pool:Lscala/concurrent/forkjoin/ForkJoinPool;
   52:	invokevirtual	#44; //Method scala/concurrent/forkjoin/ForkJoinPool.signalWork:()V
   55:	goto	68
   58:	iload	4
   60:	iload_3
   61:	if_icmplt	68
   64:	aload_0
   65:	invokespecial	#45; //Method growQueue:()V
   68:	return
  LineNumberTable: 
   line 434: 0
   line 435: 5
   line 436: 10
   line 437: 16
   line 438: 25
   line 439: 34
   line 440: 48
   line 441: 58
   line 442: 64
   line 443: 68

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      69      0    this       Lscala/concurrent/forkjoin/ForkJoinWorkerThread;
   0      69      1    t       Lscala/concurrent/forkjoin/ForkJoinTask;
   5      64      2    q       [Lscala/concurrent/forkjoin/ForkJoinTask;
   10      59      3    mask       I
   16      53      4    s       I

  LocalVariableTypeTable: length = 0x16
   00 02 00 00 00 45 00 FFFFFFA9 00 FFFFFFAC 00 01 00 05 00 40
   00 FFFFFFB3 00 6B 00 02 
  Signature: length = 0x2
   00 FFFFFFBE 

final scala.concurrent.forkjoin.ForkJoinTask deqTask();
  Code:
   Stack=3, Locals=5, Args_size=1
   0:	aload_0
   1:	getfield	#31; //Field sp:I
   4:	aload_0
   5:	getfield	#30; //Field base:I
   8:	dup
   9:	istore	4
   11:	if_icmpeq	58
   14:	aload_0
   15:	getfield	#27; //Field queue:[Lscala/concurrent/forkjoin/ForkJoinTask;
   18:	dup
   19:	astore_2
   20:	ifnull	58
   23:	aload_2
   24:	aload_2
   25:	arraylength
   26:	iconst_1
   27:	isub
   28:	iload	4
   30:	iand
   31:	dup
   32:	istore_3
   33:	aaload
   34:	dup
   35:	astore_1
   36:	ifnull	58
   39:	aload_2
   40:	iload_3
   41:	aload_1
   42:	invokestatic	#46; //Method casSlotNull:([Lscala/concurrent/forkjoin/ForkJoinTask;ILscala/concurrent/forkjoin/ForkJoinTask;)Z
   45:	ifeq	58
   48:	aload_0
   49:	iload	4
   51:	iconst_1
   52:	iadd
   53:	putfield	#30; //Field base:I
   56:	aload_1
   57:	areturn
   58:	aconst_null
   59:	areturn
  LineNumberTable: 
   line 455: 0
   line 459: 48
   line 460: 56
   line 462: 58

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   36      22      1    t       Lscala/concurrent/forkjoin/ForkJoinTask;
   20      38      2    q       [Lscala/concurrent/forkjoin/ForkJoinTask;
   33      25      3    i       I
   0      60      0    this       Lscala/concurrent/forkjoin/ForkJoinWorkerThread;
   11      49      4    b       I

  LocalVariableTypeTable: length = 0x16
   00 02 00 24 00 16 00 FFFFFFA9 00 FFFFFFAC 00 01 00 14 00 26
   00 FFFFFFB3 00 6B 00 02 
  Signature: length = 0x2
   00 FFFFFFC2 

final scala.concurrent.forkjoin.ForkJoinTask popTask();
  Code:
   Stack=3, Locals=6, Args_size=1
   0:	aload_0
   1:	getfield	#31; //Field sp:I
   4:	istore_1
   5:	iload_1
   6:	aload_0
   7:	getfield	#30; //Field base:I
   10:	if_icmpeq	72
   13:	aload_0
   14:	invokespecial	#47; //Method tryActivate:()Z
   17:	ifeq	5
   20:	aload_0
   21:	getfield	#27; //Field queue:[Lscala/concurrent/forkjoin/ForkJoinTask;
   24:	astore_2
   25:	aload_2
   26:	arraylength
   27:	iconst_1
   28:	isub
   29:	istore_3
   30:	iload_1
   31:	iconst_1
   32:	isub
   33:	iload_3
   34:	iand
   35:	istore	4
   37:	aload_2
   38:	iload	4
   40:	aaload
   41:	astore	5
   43:	aload	5
   45:	ifnull	72
   48:	aload_2
   49:	iload	4
   51:	aload	5
   53:	invokestatic	#46; //Method casSlotNull:([Lscala/concurrent/forkjoin/ForkJoinTask;ILscala/concurrent/forkjoin/ForkJoinTask;)Z
   56:	ifne	62
   59:	goto	72
   62:	aload_0
   63:	iload_1
   64:	iconst_1
   65:	isub
   66:	invokespecial	#43; //Method storeSp:(I)V
   69:	aload	5
   71:	areturn
   72:	aconst_null
   73:	areturn
  LineNumberTable: 
   line 470: 0
   line 471: 5
   line 472: 13
   line 473: 20
   line 474: 25
   line 475: 30
   line 476: 37
   line 477: 43
   line 478: 59
   line 479: 62
   line 480: 69
   line 483: 72

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   25      47      2    q       [Lscala/concurrent/forkjoin/ForkJoinTask;
   30      42      3    mask       I
   37      35      4    i       I
   43      29      5    t       Lscala/concurrent/forkjoin/ForkJoinTask;
   0      74      0    this       Lscala/concurrent/forkjoin/ForkJoinWorkerThread;
   5      69      1    s       I

  LocalVariableTypeTable: length = 0x16
   00 02 00 19 00 2F 00 FFFFFFB3 00 6B 00 02 00 2B 00 1D
   00 FFFFFFA9 00 FFFFFFAC 00 05 
  Signature: length = 0x2
   00 FFFFFFC2 

final boolean unpushTask(scala.concurrent.forkjoin.ForkJoinTask);
  Code:
   Stack=3, Locals=5, Args_size=2
   0:	aload_0
   1:	getfield	#27; //Field queue:[Lscala/concurrent/forkjoin/ForkJoinTask;
   4:	astore_2
   5:	aload_2
   6:	arraylength
   7:	iconst_1
   8:	isub
   9:	istore_3
   10:	aload_0
   11:	getfield	#31; //Field sp:I
   14:	iconst_1
   15:	isub
   16:	istore	4
   18:	aload_2
   19:	iload	4
   21:	iload_3
   22:	iand
   23:	aload_1
   24:	invokestatic	#46; //Method casSlotNull:([Lscala/concurrent/forkjoin/ForkJoinTask;ILscala/concurrent/forkjoin/ForkJoinTask;)Z
   27:	ifeq	38
   30:	aload_0
   31:	iload	4
   33:	invokespecial	#43; //Method storeSp:(I)V
   36:	iconst_1
   37:	ireturn
   38:	iconst_0
   39:	ireturn
  LineNumberTable: 
   line 493: 0
   line 494: 5
   line 495: 10
   line 496: 18
   line 497: 30
   line 498: 36
   line 500: 38

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      40      0    this       Lscala/concurrent/forkjoin/ForkJoinWorkerThread;
   0      40      1    t       Lscala/concurrent/forkjoin/ForkJoinTask;
   5      35      2    q       [Lscala/concurrent/forkjoin/ForkJoinTask;
   10      30      3    mask       I
   18      22      4    s       I

  LocalVariableTypeTable: length = 0x16
   00 02 00 00 00 28 00 FFFFFFA9 00 FFFFFFAC 00 01 00 05 00 23
   00 FFFFFFB3 00 6B 00 02 
  Signature: length = 0x2
   00 FFFFFFC6 

final scala.concurrent.forkjoin.ForkJoinTask peekTask();
  Code:
   Stack=3, Locals=4, Args_size=1
   0:	aload_0
   1:	getfield	#27; //Field queue:[Lscala/concurrent/forkjoin/ForkJoinTask;
   4:	astore_1
   5:	aload_1
   6:	ifnonnull	11
   9:	aconst_null
   10:	areturn
   11:	aload_1
   12:	arraylength
   13:	iconst_1
   14:	isub
   15:	istore_2
   16:	aload_0
   17:	getfield	#7; //Field locallyFifo:Z
   20:	ifeq	30
   23:	aload_0
   24:	getfield	#30; //Field base:I
   27:	goto	36
   30:	aload_0
   31:	getfield	#31; //Field sp:I
   34:	iconst_1
   35:	isub
   36:	istore_3
   37:	aload_1
   38:	iload_3
   39:	iload_2
   40:	iand
   41:	aaload
   42:	areturn
  LineNumberTable: 
   line 507: 0
   line 508: 5
   line 509: 9
   line 510: 11
   line 511: 16
   line 512: 37

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      43      0    this       Lscala/concurrent/forkjoin/ForkJoinWorkerThread;
   5      38      1    q       [Lscala/concurrent/forkjoin/ForkJoinTask;
   16      27      2    mask       I
   37      6      3    i       I

  LocalVariableTypeTable: length = 0xC
   00 01 00 05 00 26 00 FFFFFFB3 00 6B 00 01 
  Signature: length = 0x2
   00 FFFFFFC2 

final scala.concurrent.forkjoin.ForkJoinTask pollTask();
  Code:
   Stack=3, Locals=2, Args_size=1
   0:	aload_0
   1:	getfield	#7; //Field locallyFifo:Z
   4:	ifeq	14
   7:	aload_0
   8:	invokevirtual	#54; //Method deqTask:()Lscala/concurrent/forkjoin/ForkJoinTask;
   11:	goto	18
   14:	aload_0
   15:	invokevirtual	#32; //Method popTask:()Lscala/concurrent/forkjoin/ForkJoinTask;
   18:	astore_1
   19:	aload_1
   20:	ifnonnull	42
   23:	aload_0
   24:	invokespecial	#56; //Method scan:()Lscala/concurrent/forkjoin/ForkJoinTask;
   27:	dup
   28:	astore_1
   29:	ifnull	42
   32:	aload_0
   33:	dup
   34:	getfield	#57; //Field stealCount:I
   37:	iconst_1
   38:	iadd
   39:	putfield	#57; //Field stealCount:I
   42:	aload_1
   43:	areturn
  LineNumberTable: 
   line 594: 0
   line 595: 19
   line 596: 32
   line 597: 42

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      44      0    this       Lscala/concurrent/forkjoin/ForkJoinWorkerThread;
   19      25      1    t       Lscala/concurrent/forkjoin/ForkJoinTask;

  LocalVariableTypeTable: length = 0xC
   00 01 00 13 00 19 00 FFFFFFA9 00 FFFFFFAC 00 01 
  Signature: length = 0x2
   00 FFFFFFC2 

final scala.concurrent.forkjoin.ForkJoinTask pollLocalTask();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#7; //Field locallyFifo:Z
   4:	ifeq	14
   7:	aload_0
   8:	invokevirtual	#54; //Method deqTask:()Lscala/concurrent/forkjoin/ForkJoinTask;
   11:	goto	18
   14:	aload_0
   15:	invokevirtual	#32; //Method popTask:()Lscala/concurrent/forkjoin/ForkJoinTask;
   18:	areturn
  LineNumberTable: 
   line 605: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      19      0    this       Lscala/concurrent/forkjoin/ForkJoinWorkerThread;

  Signature: length = 0x2
   00 FFFFFFC2 

final void cancelTasks();
  Code:
   Stack=2, Locals=2, Args_size=1
   0:	aload_0
   1:	getfield	#30; //Field base:I
   4:	aload_0
   5:	getfield	#31; //Field sp:I
   8:	if_icmpeq	27
   11:	aload_0
   12:	invokevirtual	#54; //Method deqTask:()Lscala/concurrent/forkjoin/ForkJoinTask;
   15:	dup
   16:	astore_1
   17:	ifnull	27
   20:	aload_1
   21:	invokevirtual	#60; //Method scala/concurrent/forkjoin/ForkJoinTask.cancelIgnoringExceptions:()V
   24:	goto	0
   27:	return
  LineNumberTable: 
   line 630: 0
   line 631: 20
   line 632: 27

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   17      10      1    t       Lscala/concurrent/forkjoin/ForkJoinTask;
   0      28      0    this       Lscala/concurrent/forkjoin/ForkJoinWorkerThread;

  LocalVariableTypeTable: length = 0xC
   00 01 00 11 00 0A 00 FFFFFFA9 00 FFFFFFAC 00 01 

final int drainTasksTo(java.util.Collection);
  Code:
   Stack=2, Locals=4, Args_size=2
   0:	iconst_0
   1:	istore_2
   2:	aload_0
   3:	getfield	#30; //Field base:I
   6:	aload_0
   7:	getfield	#31; //Field sp:I
   10:	if_icmpeq	36
   13:	aload_0
   14:	invokevirtual	#54; //Method deqTask:()Lscala/concurrent/forkjoin/ForkJoinTask;
   17:	dup
   18:	astore_3
   19:	ifnull	36
   22:	aload_1
   23:	aload_3
   24:	invokeinterface	#61,  2; //InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
   29:	pop
   30:	iinc	2, 1
   33:	goto	2
   36:	iload_2
   37:	ireturn
  LineNumberTable: 
   line 639: 0
   line 641: 2
   line 642: 22
   line 643: 30
   line 645: 36

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   19      17      3    t       Lscala/concurrent/forkjoin/ForkJoinTask;
   0      38      0    this       Lscala/concurrent/forkjoin/ForkJoinWorkerThread;
   0      38      1    c       Ljava/util/Collection;
   2      36      2    n       I

  LocalVariableTypeTable: length = 0x16
   00 02 00 13 00 11 00 FFFFFFA9 00 FFFFFFAC 00 03 00 00 00 26
   00 FFFFFFDD 00 FFFFFFE0 00 01 
  Signature: length = 0x2
   00 FFFFFFE1 

final int getAndClearStealCount();
  Code:
   Stack=2, Locals=2, Args_size=1
   0:	aload_0
   1:	getfield	#57; //Field stealCount:I
   4:	istore_1
   5:	aload_0
   6:	iconst_0
   7:	putfield	#57; //Field stealCount:I
   10:	iload_1
   11:	ireturn
  LineNumberTable: 
   line 653: 0
   line 654: 5
   line 655: 10

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      12      0    this       Lscala/concurrent/forkjoin/ForkJoinWorkerThread;
   5      7      1    sc       I


static boolean hasQueuedTasks(scala.concurrent.forkjoin.ForkJoinWorkerThread[]);
  Code:
   Stack=2, Locals=5, Args_size=1
   0:	aload_0
   1:	ifnull	58
   4:	aload_0
   5:	arraylength
   6:	istore_1
   7:	iconst_0
   8:	istore_2
   9:	iload_2
   10:	iconst_2
   11:	if_icmpge	58
   14:	iconst_0
   15:	istore_3
   16:	iload_3
   17:	iload_1
   18:	if_icmpge	52
   21:	aload_0
   22:	iload_3
   23:	aaload
   24:	astore	4
   26:	aload	4
   28:	ifnull	46
   31:	aload	4
   33:	getfield	#31; //Field sp:I
   36:	aload	4
   38:	getfield	#30; //Field base:I
   41:	if_icmpeq	46
   44:	iconst_1
   45:	ireturn
   46:	iinc	3, 1
   49:	goto	16
   52:	iinc	2, 1
   55:	goto	9
   58:	iconst_0
   59:	ireturn
  LineNumberTable: 
   line 664: 0
   line 665: 4
   line 666: 7
   line 667: 14
   line 668: 21
   line 669: 26
   line 670: 44
   line 667: 46
   line 666: 52
   line 674: 58

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   26      20      4    w       Lscala/concurrent/forkjoin/ForkJoinWorkerThread;
   16      36      3    i       I
   9      49      2    j       I
   7      51      1    len       I
   0      60      0    ws       [Lscala/concurrent/forkjoin/ForkJoinWorkerThread;


final int getQueueSize();
  Code:
   Stack=2, Locals=2, Args_size=1
   0:	aload_0
   1:	getfield	#31; //Field sp:I
   4:	aload_0
   5:	getfield	#30; //Field base:I
   8:	isub
   9:	istore_1
   10:	iload_1
   11:	ifge	18
   14:	iconst_0
   15:	goto	19
   18:	iload_1
   19:	ireturn
  LineNumberTable: 
   line 683: 0
   line 684: 10

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      20      0    this       Lscala/concurrent/forkjoin/ForkJoinWorkerThread;
   10      10      1    n       I


final int getEstimatedSurplusTaskCount();
  Code:
   Stack=3, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#31; //Field sp:I
   4:	aload_0
   5:	getfield	#30; //Field base:I
   8:	isub
   9:	aload_0
   10:	getfield	#5; //Field pool:Lscala/concurrent/forkjoin/ForkJoinPool;
   13:	invokevirtual	#62; //Method scala/concurrent/forkjoin/ForkJoinPool.getIdleThreadCount:()I
   16:	iconst_1
   17:	iushr
   18:	isub
   19:	ireturn
  LineNumberTable: 
   line 693: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      20      0    this       Lscala/concurrent/forkjoin/ForkJoinWorkerThread;


final scala.concurrent.forkjoin.ForkJoinTask scanWhileJoining(scala.concurrent.forkjoin.ForkJoinTask);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	aload_0
   1:	invokevirtual	#22; //Method pollTask:()Lscala/concurrent/forkjoin/ForkJoinTask;
   4:	astore_2
   5:	aload_2
   6:	ifnull	34
   9:	aload_1
   10:	getfield	#63; //Field scala/concurrent/forkjoin/ForkJoinTask.status:I
   13:	ifge	34
   16:	aload_0
   17:	getfield	#31; //Field sp:I
   20:	aload_0
   21:	getfield	#30; //Field base:I
   24:	if_icmpne	34
   27:	aload_0
   28:	aload_2
   29:	invokevirtual	#64; //Method pushTask:(Lscala/concurrent/forkjoin/ForkJoinTask;)V
   32:	aconst_null
   33:	astore_2
   34:	aload_2
   35:	areturn
  LineNumberTable: 
   line 700: 0
   line 701: 5
   line 702: 27
   line 703: 32
   line 705: 34

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      36      0    this       Lscala/concurrent/forkjoin/ForkJoinWorkerThread;
   0      36      1    joinMe       Lscala/concurrent/forkjoin/ForkJoinTask;
   5      31      2    t       Lscala/concurrent/forkjoin/ForkJoinTask;

  LocalVariableTypeTable: length = 0x16
   00 02 00 00 00 24 00 FFFFFFED 00 FFFFFFAC 00 01 00 05 00 1F
   00 FFFFFFA9 00 FFFFFFAC 00 02 
  Signature: length = 0x2
   00 FFFFFFEE 

final void helpQuiescePool();
  Code:
   Stack=1, Locals=2, Args_size=1
   0:	aload_0
   1:	invokevirtual	#22; //Method pollTask:()Lscala/concurrent/forkjoin/ForkJoinTask;
   4:	astore_1
   5:	aload_1
   6:	ifnull	16
   9:	aload_1
   10:	invokevirtual	#24; //Method scala/concurrent/forkjoin/ForkJoinTask.quietlyExec:()V
   13:	goto	36
   16:	aload_0
   17:	invokespecial	#25; //Method tryInactivate:()Z
   20:	ifeq	36
   23:	aload_0
   24:	getfield	#5; //Field pool:Lscala/concurrent/forkjoin/ForkJoinPool;
   27:	invokevirtual	#65; //Method scala/concurrent/forkjoin/ForkJoinPool.isQuiescent:()Z
   30:	ifeq	36
   33:	goto	39
   36:	goto	0
   39:	aload_0
   40:	invokespecial	#47; //Method tryActivate:()Z
   43:	ifeq	39
   46:	return
  LineNumberTable: 
   line 713: 0
   line 714: 5
   line 715: 9
   line 716: 16
   line 717: 33
   line 718: 36
   line 719: 39
   line 720: 46

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   5      31      1    t       Lscala/concurrent/forkjoin/ForkJoinTask;
   0      47      0    this       Lscala/concurrent/forkjoin/ForkJoinWorkerThread;

  LocalVariableTypeTable: length = 0xC
   00 01 00 05 00 1F 00 FFFFFFA9 00 FFFFFFAC 00 01 

static sun.misc.Unsafe access$000()   throws java.lang.NoSuchFieldException, java.lang.IllegalAccessException;
  Code:
   Stack=1, Locals=0, Args_size=0
   0:	invokestatic	#1; //Method getUnsafePrivileged:()Lsun/misc/Unsafe;
   3:	areturn
  LineNumberTable: 
   line 25: 0

  Exceptions: 
   throws java.lang.NoSuchFieldException, java.lang.IllegalAccessException
static {};
  Code:
   Stack=4, Locals=1, Args_size=0
   0:	invokestatic	#80; //Method getUnsafe:()Lsun/misc/Unsafe;
   3:	putstatic	#10; //Field _unsafe:Lsun/misc/Unsafe;
   6:	ldc	#81; //String base
   8:	invokestatic	#82; //Method fieldOffset:(Ljava/lang/String;)J
   11:	putstatic	#83; //Field baseOffset:J
   14:	ldc	#84; //String sp
   16:	invokestatic	#82; //Method fieldOffset:(Ljava/lang/String;)J
   19:	putstatic	#40; //Field spOffset:J
   22:	ldc	#85; //String runState
   24:	invokestatic	#82; //Method fieldOffset:(Ljava/lang/String;)J
   27:	putstatic	#11; //Field runStateOffset:J
   30:	getstatic	#10; //Field _unsafe:Lsun/misc/Unsafe;
   33:	ldc_w	#86; //class "[Lscala/concurrent/forkjoin/ForkJoinTask;"
   36:	invokevirtual	#87; //Method sun/misc/Unsafe.arrayBaseOffset:(Ljava/lang/Class;)I
   39:	i2l
   40:	putstatic	#37; //Field qBase:J
   43:	getstatic	#10; //Field _unsafe:Lsun/misc/Unsafe;
   46:	ldc_w	#86; //class "[Lscala/concurrent/forkjoin/ForkJoinTask;"
   49:	invokevirtual	#88; //Method sun/misc/Unsafe.arrayIndexScale:(Ljava/lang/Class;)I
   52:	istore_0
   53:	iload_0
   54:	iload_0
   55:	iconst_1
   56:	isub
   57:	iand
   58:	ifeq	71
   61:	new	#89; //class java/lang/Error
   64:	dup
   65:	ldc	#90; //String data type scale not a power of two
   67:	invokespecial	#91; //Method java/lang/Error."<init>":(Ljava/lang/String;)V
   70:	athrow
   71:	bipush	31
   73:	iload_0
   74:	invokestatic	#92; //Method java/lang/Integer.numberOfLeadingZeros:(I)I
   77:	isub
   78:	putstatic	#36; //Field qShift:I
   81:	goto	96
   84:	astore_0
   85:	new	#93; //class java/lang/RuntimeException
   88:	dup
   89:	ldc	#94; //String Could not initialize intrinsics
   91:	aload_0
   92:	invokespecial	#95; //Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
   95:	athrow
   96:	return
  Exception table:
   from   to  target type
     0    81    84   Class java/lang/Throwable

  LineNumberTable: 
   line 760: 0
   line 761: 6
   line 762: 14
   line 763: 22
   line 764: 30
   line 765: 43
   line 766: 53
   line 767: 61
   line 768: 71
   line 771: 81
   line 769: 84
   line 770: 85
   line 772: 96

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   53      28      0    s       I
   85      11      0    e       Ljava/lang/Throwable;


}

