Compiled from "ops.scala"
public final class scala.concurrent.ops$$anonfun$par$1 extends java.lang.Object implements scala.Function0,scala.ScalaObject,java.io.Serializable
  SourceFile: "ops.scala"
  Scala: length = 0x
   
  InnerClass: 
   public #81= #44 of #80; //Catch=class scala/util/control/Exception$Catch of class scala/util/control/Exception
   public final #84= #9 of #83; //$anonfun$par$1=class scala/concurrent/ops$$anonfun$par$1 of class scala/concurrent/ops
   public abstract #85= #54 of #80; //Described=class scala/util/control/Exception$Described of class scala/util/control/Exception
   public final #86= #46 of #80; //$anonfun$allCatch$1=class scala/util/control/Exception$$anonfun$allCatch$1 of class scala/util/control/Exception
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	ops.scala;
const #3 = Asciz	<clinit>;
const #4 = Asciz	()V;
const #5 = Asciz	Code;
const #6 = Asciz	serialVersionUID;
const #7 = Asciz	J;
const #8 = Asciz	scala/concurrent/ops$$anonfun$par$1;
const #9 = class	#8;	//  scala/concurrent/ops$$anonfun$par$1
const #10 = NameAndType	#6:#7;//  serialVersionUID:J
const #11 = Field	#9.#10;	//  scala/concurrent/ops$$anonfun$par$1.serialVersionUID:J
const #12 = Asciz	y$1;
const #13 = Asciz	Lscala/concurrent/SyncVar;;
const #14 = Asciz	yp$1;
const #15 = Asciz	Lscala/Function0;;
const #16 = Asciz	<init>;
const #17 = Asciz	(Lscala/Function0;Lscala/concurrent/SyncVar;)V;
const #18 = Asciz	LineNumberTable;
const #19 = NameAndType	#14:#15;//  yp$1:Lscala/Function0;
const #20 = Field	#9.#19;	//  scala/concurrent/ops$$anonfun$par$1.yp$1:Lscala/Function0;
const #21 = NameAndType	#12:#13;//  y$1:Lscala/concurrent/SyncVar;
const #22 = Field	#9.#21;	//  scala/concurrent/ops$$anonfun$par$1.y$1:Lscala/concurrent/SyncVar;
const #23 = Asciz	java/lang/Object;
const #24 = class	#23;	//  java/lang/Object
const #25 = NameAndType	#16:#4;//  "<init>":()V
const #26 = Method	#24.#25;	//  java/lang/Object."<init>":()V
const #27 = Asciz	scala/Function0$class;
const #28 = class	#27;	//  scala/Function0$class
const #29 = Asciz	$init$;
const #30 = Asciz	(Lscala/Function0;)V;
const #31 = NameAndType	#29:#30;//  $init$:(Lscala/Function0;)V
const #32 = Method	#28.#31;	//  scala/Function0$class.$init$:(Lscala/Function0;)V
const #33 = Asciz	apply;
const #34 = Asciz	()Ljava/lang/Object;;
const #35 = NameAndType	#33:#4;//  apply:()V
const #36 = Method	#9.#35;	//  scala/concurrent/ops$$anonfun$par$1.apply:()V
const #37 = Asciz	scala/runtime/BoxedUnit;
const #38 = class	#37;	//  scala/runtime/BoxedUnit
const #39 = Asciz	UNIT;
const #40 = Asciz	Lscala/runtime/BoxedUnit;;
const #41 = NameAndType	#39:#40;//  UNIT:Lscala/runtime/BoxedUnit;
const #42 = Field	#38.#41;	//  scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
const #43 = Asciz	scala/util/control/Exception$Catch;
const #44 = class	#43;	//  scala/util/control/Exception$Catch
const #45 = Asciz	scala/util/control/Exception$$anonfun$allCatch$1;
const #46 = class	#45;	//  scala/util/control/Exception$$anonfun$allCatch$1
const #47 = Method	#46.#25;	//  scala/util/control/Exception$$anonfun$allCatch$1."<init>":()V
const #48 = Asciz	(Lscala/PartialFunction;)V;
const #49 = NameAndType	#16:#48;//  "<init>":(Lscala/PartialFunction;)V
const #50 = Method	#44.#49;	//  scala/util/control/Exception$Catch."<init>":(Lscala/PartialFunction;)V
const #51 = Asciz	<everything>;
const #52 = String	#51;	//  <everything>
const #53 = Asciz	scala/util/control/Exception$Described;
const #54 = class	#53;	//  scala/util/control/Exception$Described
const #55 = Asciz	withDesc;
const #56 = Asciz	(Ljava/lang/String;)Lscala/util/control/Exception$Described;;
const #57 = NameAndType	#55:#56;//  withDesc:(Ljava/lang/String;)Lscala/util/control/Exception$Described;
const #58 = InterfaceMethod	#54.#57;	//  scala/util/control/Exception$Described.withDesc:(Ljava/lang/String;)Lscala/util/control/Exception$Described;
const #59 = Asciz	either;
const #60 = Asciz	(Lscala/Function0;)Lscala/Either;;
const #61 = NameAndType	#59:#60;//  either:(Lscala/Function0;)Lscala/Either;
const #62 = Method	#44.#61;	//  scala/util/control/Exception$Catch.either:(Lscala/Function0;)Lscala/Either;
const #63 = Asciz	scala/concurrent/SyncVar;
const #64 = class	#63;	//  scala/concurrent/SyncVar
const #65 = Asciz	set;
const #66 = Asciz	(Ljava/lang/Object;)V;
const #67 = NameAndType	#65:#66;//  set:(Ljava/lang/Object;)V
const #68 = Method	#64.#67;	//  scala/concurrent/SyncVar.set:(Ljava/lang/Object;)V
const #69 = Asciz	this;
const #70 = Asciz	Lscala/concurrent/ops$$anonfun$par$1;;
const #71 = Asciz	LocalVariableTable;
const #72 = Asciz	toString;
const #73 = Asciz	()Ljava/lang/String;;
const #74 = Asciz	(Lscala/Function0;)Ljava/lang/String;;
const #75 = NameAndType	#72:#74;//  toString:(Lscala/Function0;)Ljava/lang/String;
const #76 = Method	#28.#75;	//  scala/Function0$class.toString:(Lscala/Function0;)Ljava/lang/String;
const #77 = Asciz	Scala;
const #78 = Asciz	InnerClasses;
const #79 = Asciz	scala/util/control/Exception;
const #80 = class	#79;	//  scala/util/control/Exception
const #81 = Asciz	Catch;
const #82 = Asciz	scala/concurrent/ops;
const #83 = class	#82;	//  scala/concurrent/ops
const #84 = Asciz	$anonfun$par$1;
const #85 = Asciz	Described;
const #86 = Asciz	$anonfun$allCatch$1;
const #87 = Asciz	scala/Function0;
const #88 = class	#87;	//  scala/Function0
const #89 = Asciz	scala/ScalaObject;
const #90 = class	#89;	//  scala/ScalaObject
const #91 = Asciz	java/io/Serializable;
const #92 = class	#91;	//  java/io/Serializable

{
public static final long serialVersionUID;

public static {};
  Code:
   Stack=2, Locals=0, Args_size=0
   0:	lconst_0
   1:	putstatic	#11; //Field serialVersionUID:J
   4:	return

public scala.concurrent.ops$$anonfun$par$1(scala.Function0, scala.concurrent.SyncVar);
  Code:
   Stack=2, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	putfield	#20; //Field yp$1:Lscala/Function0;
   5:	aload_0
   6:	aload_2
   7:	putfield	#22; //Field y$1:Lscala/concurrent/SyncVar;
   10:	aload_0
   11:	invokespecial	#26; //Method java/lang/Object."<init>":()V
   14:	aload_0
   15:	invokestatic	#32; //Method scala/Function0$class.$init$:(Lscala/Function0;)V
   18:	return
  LineNumberTable: 
   line 66: 0


public final java.lang.Object apply();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#36; //Method apply:()V
   4:	getstatic	#42; //Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
   7:	areturn
  LineNumberTable: 
   line 66: 0


public final void apply();
  Code:
   Stack=5, Locals=2, Args_size=1
   0:	aload_0
   1:	getfield	#22; //Field y$1:Lscala/concurrent/SyncVar;
   4:	aload_0
   5:	getfield	#20; //Field yp$1:Lscala/Function0;
   8:	astore_1
   9:	new	#44; //class scala/util/control/Exception$Catch
   12:	dup
   13:	new	#46; //class scala/util/control/Exception$$anonfun$allCatch$1
   16:	dup
   17:	invokespecial	#47; //Method scala/util/control/Exception$$anonfun$allCatch$1."<init>":()V
   20:	invokespecial	#50; //Method scala/util/control/Exception$Catch."<init>":(Lscala/PartialFunction;)V
   23:	ldc	#52; //String <everything>
   25:	invokeinterface	#58,  2; //InterfaceMethod scala/util/control/Exception$Described.withDesc:(Ljava/lang/String;)Lscala/util/control/Exception$Described;
   30:	checkcast	#44; //class scala/util/control/Exception$Catch
   33:	aload_1
   34:	invokevirtual	#62; //Method scala/util/control/Exception$Catch.either:(Lscala/Function0;)Lscala/Either;
   37:	invokevirtual	#68; //Method scala/concurrent/SyncVar.set:(Ljava/lang/Object;)V
   40:	return
  LineNumberTable: 
   line 66: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      41      0    this       Lscala/concurrent/ops$$anonfun$par$1;


public java.lang.String toString();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#76; //Method scala/Function0$class.toString:(Lscala/Function0;)Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 66: 0


}

