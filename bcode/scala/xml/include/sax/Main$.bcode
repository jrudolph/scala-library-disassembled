Compiled from "Main.scala"
public final class scala.xml.include.sax.Main$ extends java.lang.Object implements scala.ScalaObject
  SourceFile: "Main.scala"
  Scala: length = 0x
   
  InnerClass: 
   public #191= #41 of #190; //ofRef=class scala/collection/mutable/ArrayOps$ofRef of class scala/collection/mutable/ArrayOps
   public #194= #98 of #193; //Catch=class scala/util/control/Exception$Catch of class scala/util/control/Exception
   public final #197= #156 of #196; //$anonfun$4=class scala/xml/include/sax/Main$$anonfun$4 of class scala/xml/include/sax/Main
   public final #198= #151 of #196; //$anonfun$3=class scala/xml/include/sax/Main$$anonfun$3 of class scala/xml/include/sax/Main
   public final #199= #110 of #196; //$anonfun$2=class scala/xml/include/sax/Main$$anonfun$2 of class scala/xml/include/sax/Main
   public final #200= #107 of #196; //$anonfun$1=class scala/xml/include/sax/Main$$anonfun$1 of class scala/xml/include/sax/Main
   public final #201= #162 of #196; //$anonfun$main$1=class scala/xml/include/sax/Main$$anonfun$main$1 of class scala/xml/include/sax/Main
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Main.scala;
const #3 = Asciz	Scala;
const #4 = Asciz	MODULE$;
const #5 = Asciz	Lscala/xml/include/sax/Main$;;
const #6 = Asciz	<clinit>;
const #7 = Asciz	()V;
const #8 = Asciz	Code;
const #9 = Asciz	scala/xml/include/sax/Main$;
const #10 = class	#9;	//  scala/xml/include/sax/Main$
const #11 = Asciz	<init>;
const #12 = NameAndType	#11:#7;//  "<init>":()V
const #13 = Method	#10.#12;	//  scala/xml/include/sax/Main$."<init>":()V
const #14 = Asciz	scala$xml$include$sax$Main$$lexicalHandler;
const #15 = Asciz	Ljava/lang/String;;
const #16 = Asciz	namespacePrefixes;
const #17 = Asciz	scala$xml$include$sax$Main$$xercesClass;
const #18 = Asciz	LineNumberTable;
const #19 = Asciz	java/lang/Object;
const #20 = class	#19;	//  java/lang/Object
const #21 = Method	#20.#12;	//  java/lang/Object."<init>":()V
const #22 = NameAndType	#4:#5;//  MODULE$:Lscala/xml/include/sax/Main$;
const #23 = Field	#10.#22;	//  scala/xml/include/sax/Main$.MODULE$:Lscala/xml/include/sax/Main$;
const #24 = Asciz	org.apache.xerces.parsers.SAXParser;
const #25 = String	#24;	//  org.apache.xerces.parsers.SAXParser
const #26 = NameAndType	#17:#15;//  scala$xml$include$sax$Main$$xercesClass:Ljava/lang/String;
const #27 = Field	#10.#26;	//  scala/xml/include/sax/Main$.scala$xml$include$sax$Main$$xercesClass:Ljava/lang/String;
const #28 = Asciz	http://xml.org/sax/features/namespace-prefixes;
const #29 = String	#28;	//  http://xml.org/sax/features/namespace-prefixes
const #30 = NameAndType	#16:#15;//  namespacePrefixes:Ljava/lang/String;
const #31 = Field	#10.#30;	//  scala/xml/include/sax/Main$.namespacePrefixes:Ljava/lang/String;
const #32 = Asciz	http://xml.org/sax/properties/lexical-handler;
const #33 = String	#32;	//  http://xml.org/sax/properties/lexical-handler
const #34 = NameAndType	#14:#15;//  scala$xml$include$sax$Main$$lexicalHandler:Ljava/lang/String;
const #35 = Field	#10.#34;	//  scala/xml/include/sax/Main$.scala$xml$include$sax$Main$$lexicalHandler:Ljava/lang/String;
const #36 = Asciz	dashR$1;
const #37 = Asciz	([Ljava/lang/String;)Z;
const #38 = Asciz	[Ljava/lang/Object;;
const #39 = class	#38;	//  "[Ljava/lang/Object;"
const #40 = Asciz	scala/collection/mutable/ArrayOps$ofRef;
const #41 = class	#40;	//  scala/collection/mutable/ArrayOps$ofRef
const #42 = Asciz	([Ljava/lang/Object;)V;
const #43 = NameAndType	#11:#42;//  "<init>":([Ljava/lang/Object;)V
const #44 = Method	#41.#43;	//  scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
const #45 = Asciz	scala/collection/SeqLike;
const #46 = class	#45;	//  scala/collection/SeqLike
const #47 = Asciz	size;
const #48 = Asciz	()I;
const #49 = NameAndType	#47:#48;//  size:()I
const #50 = InterfaceMethod	#46.#49;	//  scala/collection/SeqLike.size:()I
const #51 = Asciz	-r;
const #52 = String	#51;	//  -r
const #53 = Asciz	equals;
const #54 = Asciz	(Ljava/lang/Object;)Z;
const #55 = NameAndType	#53:#54;//  equals:(Ljava/lang/Object;)Z
const #56 = Method	#20.#55;	//  java/lang/Object.equals:(Ljava/lang/Object;)Z
const #57 = Asciz	this;
const #58 = Asciz	LocalVariableTable;
const #59 = Asciz	error$1;
const #60 = Asciz	(Ljava/lang/String;)V;
const #61 = Asciz	java/lang/System;
const #62 = class	#61;	//  java/lang/System
const #63 = Asciz	err;
const #64 = Asciz	Ljava/io/PrintStream;;
const #65 = NameAndType	#63:#64;//  err:Ljava/io/PrintStream;
const #66 = Field	#62.#65;	//  java/lang/System.err:Ljava/io/PrintStream;
const #67 = Asciz	java/io/PrintStream;
const #68 = class	#67;	//  java/io/PrintStream
const #69 = Asciz	println;
const #70 = NameAndType	#69:#60;//  println:(Ljava/lang/String;)V
const #71 = Method	#68.#70;	//  java/io/PrintStream.println:(Ljava/lang/String;)V
const #72 = Asciz	msg;
const #73 = Asciz	saxe$1;
const #74 = Asciz	(Lscala/Function0;)Lscala/Option;;
const #75 = Asciz	scala/util/control/Exception$;
const #76 = class	#75;	//  scala/util/control/Exception$
const #77 = Asciz	Lscala/util/control/Exception$;;
const #78 = NameAndType	#4:#77;//  MODULE$:Lscala/util/control/Exception$;
const #79 = Field	#76.#78;	//  scala/util/control/Exception$.MODULE$:Lscala/util/control/Exception$;
const #80 = Asciz	scala/Predef$;
const #81 = class	#80;	//  scala/Predef$
const #82 = Asciz	Lscala/Predef$;;
const #83 = NameAndType	#4:#82;//  MODULE$:Lscala/Predef$;
const #84 = Field	#81.#83;	//  scala/Predef$.MODULE$:Lscala/Predef$;
const #85 = Asciz	java/lang/Class;
const #86 = class	#85;	//  java/lang/Class
const #87 = Asciz	org/xml/sax/SAXException;
const #88 = class	#87;	//  org/xml/sax/SAXException
const #89 = Asciz	wrapRefArray;
const #90 = Asciz	([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;;
const #91 = NameAndType	#89:#90;//  wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
const #92 = Method	#81.#91;	//  scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
const #93 = Asciz	catching;
const #94 = Asciz	(Lscala/collection/Seq;)Lscala/util/control/Exception$Catch;;
const #95 = NameAndType	#93:#94;//  catching:(Lscala/collection/Seq;)Lscala/util/control/Exception$Catch;
const #96 = Method	#76.#95;	//  scala/util/control/Exception$.catching:(Lscala/collection/Seq;)Lscala/util/control/Exception$Catch;
const #97 = Asciz	scala/util/control/Exception$Catch;
const #98 = class	#97;	//  scala/util/control/Exception$Catch
const #99 = Asciz	opt;
const #100 = NameAndType	#99:#74;//  opt:(Lscala/Function0;)Lscala/Option;
const #101 = Method	#98.#100;	//  scala/util/control/Exception$Catch.opt:(Lscala/Function0;)Lscala/Option;
const #102 = Asciz	body;
const #103 = Asciz	Lscala/Function0;;
const #104 = Asciz	main;
const #105 = Asciz	([Ljava/lang/String;)V;
const #106 = Asciz	scala/xml/include/sax/Main$$anonfun$1;
const #107 = class	#106;	//  scala/xml/include/sax/Main$$anonfun$1
const #108 = Method	#107.#12;	//  scala/xml/include/sax/Main$$anonfun$1."<init>":()V
const #109 = Asciz	scala/xml/include/sax/Main$$anonfun$2;
const #110 = class	#109;	//  scala/xml/include/sax/Main$$anonfun$2
const #111 = Asciz	(Ljava/lang/Object;)V;
const #112 = NameAndType	#11:#111;//  "<init>":(Ljava/lang/Object;)V
const #113 = Method	#110.#112;	//  scala/xml/include/sax/Main$$anonfun$2."<init>":(Ljava/lang/Object;)V
const #114 = Asciz	scala/Option;
const #115 = class	#114;	//  scala/Option
const #116 = Asciz	getOrElse;
const #117 = Asciz	(Lscala/Function0;)Ljava/lang/Object;;
const #118 = NameAndType	#116:#117;//  getOrElse:(Lscala/Function0;)Ljava/lang/Object;
const #119 = Method	#115.#118;	//  scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
const #120 = Asciz	org/xml/sax/XMLReader;
const #121 = class	#120;	//  org/xml/sax/XMLReader
const #122 = Asciz	()Ljava/lang/String;;
const #123 = NameAndType	#16:#122;//  namespacePrefixes:()Ljava/lang/String;
const #124 = Method	#10.#123;	//  scala/xml/include/sax/Main$.namespacePrefixes:()Ljava/lang/String;
const #125 = Asciz	setFeature;
const #126 = Asciz	(Ljava/lang/String;Z)V;
const #127 = NameAndType	#125:#126;//  setFeature:(Ljava/lang/String;Z)V
const #128 = InterfaceMethod	#121.#127;	//  org/xml/sax/XMLReader.setFeature:(Ljava/lang/String;Z)V
const #129 = Asciz	scala/collection/IndexedSeqLike;
const #130 = class	#129;	//  scala/collection/IndexedSeqLike
const #131 = Asciz	isEmpty;
const #132 = Asciz	()Z;
const #133 = NameAndType	#131:#132;//  isEmpty:()Z
const #134 = InterfaceMethod	#130.#133;	//  scala/collection/IndexedSeqLike.isEmpty:()Z
const #135 = NameAndType	#36:#37;//  dashR$1:([Ljava/lang/String;)Z
const #136 = Method	#10.#135;	//  scala/xml/include/sax/Main$.dashR$1:([Ljava/lang/String;)Z
const #137 = Asciz	drop;
const #138 = Asciz	(I)Ljava/lang/Object;;
const #139 = NameAndType	#137:#138;//  drop:(I)Ljava/lang/Object;
const #140 = InterfaceMethod	#130.#139;	//  scala/collection/IndexedSeqLike.drop:(I)Ljava/lang/Object;
const #141 = Asciz	[Ljava/lang/String;;
const #142 = class	#141;	//  "[Ljava/lang/String;"
const #143 = Asciz	scala/None$;
const #144 = class	#143;	//  scala/None$
const #145 = Asciz	Lscala/None$;;
const #146 = NameAndType	#4:#145;//  MODULE$:Lscala/None$;
const #147 = Field	#144.#146;	//  scala/None$.MODULE$:Lscala/None$;
const #148 = Asciz	java/lang/Exception;
const #149 = class	#148;	//  java/lang/Exception
const #150 = Asciz	scala/xml/include/sax/Main$$anonfun$3;
const #151 = class	#150;	//  scala/xml/include/sax/Main$$anonfun$3
const #152 = Asciz	([Ljava/lang/String;Lorg/xml/sax/XMLReader;)V;
const #153 = NameAndType	#11:#152;//  "<init>":([Ljava/lang/String;Lorg/xml/sax/XMLReader;)V
const #154 = Method	#151.#153;	//  scala/xml/include/sax/Main$$anonfun$3."<init>":([Ljava/lang/String;Lorg/xml/sax/XMLReader;)V
const #155 = Asciz	scala/xml/include/sax/Main$$anonfun$4;
const #156 = class	#155;	//  scala/xml/include/sax/Main$$anonfun$4
const #157 = Method	#156.#112;	//  scala/xml/include/sax/Main$$anonfun$4."<init>":(Ljava/lang/Object;)V
const #158 = Asciz	orElse;
const #159 = NameAndType	#158:#74;//  orElse:(Lscala/Function0;)Lscala/Option;
const #160 = Method	#115.#159;	//  scala/Option.orElse:(Lscala/Function0;)Lscala/Option;
const #161 = Asciz	scala/xml/include/sax/Main$$anonfun$main$1;
const #162 = class	#161;	//  scala/xml/include/sax/Main$$anonfun$main$1
const #163 = Asciz	(Lorg/xml/sax/XMLReader;Lscala/Option;)V;
const #164 = NameAndType	#11:#163;//  "<init>":(Lorg/xml/sax/XMLReader;Lscala/Option;)V
const #165 = Method	#162.#164;	//  scala/xml/include/sax/Main$$anonfun$main$1."<init>":(Lorg/xml/sax/XMLReader;Lscala/Option;)V
const #166 = Asciz	foreach;
const #167 = Asciz	(Lscala/Function1;)V;
const #168 = NameAndType	#166:#167;//  foreach:(Lscala/Function1;)V
const #169 = InterfaceMethod	#130.#168;	//  scala/collection/IndexedSeqLike.foreach:(Lscala/Function1;)V
const #170 = NameAndType	#69:#111;//  println:(Ljava/lang/Object;)V
const #171 = Method	#68.#170;	//  java/io/PrintStream.println:(Ljava/lang/Object;)V
const #172 = Asciz	scala/runtime/NonLocalReturnException;
const #173 = class	#172;	//  scala/runtime/NonLocalReturnException
const #174 = Asciz	key;
const #175 = Asciz	()Ljava/lang/Object;;
const #176 = NameAndType	#174:#175;//  key:()Ljava/lang/Object;
const #177 = Method	#173.#176;	//  scala/runtime/NonLocalReturnException.key:()Ljava/lang/Object;
const #178 = Asciz	args$1;
const #179 = Asciz	body0;
const #180 = Asciz	xs0;
const #181 = Asciz	xs1;
const #182 = Asciz	args2;
const #183 = Asciz	xs2;
const #184 = Asciz	parser$1;
const #185 = Asciz	Lorg/xml/sax/XMLReader;;
const #186 = Asciz	resolver$1;
const #187 = Asciz	Lscala/Option;;
const #188 = Asciz	InnerClasses;
const #189 = Asciz	scala/collection/mutable/ArrayOps;
const #190 = class	#189;	//  scala/collection/mutable/ArrayOps
const #191 = Asciz	ofRef;
const #192 = Asciz	scala/util/control/Exception;
const #193 = class	#192;	//  scala/util/control/Exception
const #194 = Asciz	Catch;
const #195 = Asciz	scala/xml/include/sax/Main;
const #196 = class	#195;	//  scala/xml/include/sax/Main
const #197 = Asciz	$anonfun$4;
const #198 = Asciz	$anonfun$3;
const #199 = Asciz	$anonfun$2;
const #200 = Asciz	$anonfun$1;
const #201 = Asciz	$anonfun$main$1;
const #202 = Asciz	scala/ScalaObject;
const #203 = class	#202;	//  scala/ScalaObject

{
public static final scala.xml.include.sax.Main$ MODULE$;

public static {};
  Code:
   Stack=1, Locals=0, Args_size=0
   0:	new	#10; //class scala/xml/include/sax/Main$
   3:	invokespecial	#13; //Method "<init>":()V
   6:	return

public final void error$1(java.lang.String);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	getstatic	#66; //Field java/lang/System.err:Ljava/io/PrintStream;
   3:	aload_1
   4:	invokevirtual	#71; //Method java/io/PrintStream.println:(Ljava/lang/String;)V
   7:	return
  LineNumberTable: 
   line 34: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      8      0    this       Lscala/xml/include/sax/Main$;
   0      8      1    msg       Ljava/lang/String;


public final scala.Option saxe$1(scala.Function0);
  Code:
   Stack=6, Locals=2, Args_size=2
   0:	getstatic	#79; //Field scala/util/control/Exception$.MODULE$:Lscala/util/control/Exception$;
   3:	getstatic	#84; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   6:	iconst_1
   7:	anewarray	#86; //class java/lang/Class
   10:	dup
   11:	iconst_0
   12:	ldc	#88; //class org/xml/sax/SAXException
   14:	aastore
   15:	checkcast	#39; //class "[Ljava/lang/Object;"
   18:	invokevirtual	#92; //Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
   21:	invokevirtual	#96; //Method scala/util/control/Exception$.catching:(Lscala/collection/Seq;)Lscala/util/control/Exception$Catch;
   24:	aload_1
   25:	invokevirtual	#101; //Method scala/util/control/Exception$Catch.opt:(Lscala/Function0;)Lscala/Option;
   28:	areturn
  LineNumberTable: 
   line 33: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      29      0    this       Lscala/xml/include/sax/Main$;
   0      29      1    body       Lscala/Function0;


public void main(java.lang.String[]);
  Code:
   Stack=6, Locals=12, Args_size=2
   0:	new	#20; //class java/lang/Object
   3:	dup
   4:	invokespecial	#21; //Method java/lang/Object."<init>":()V
   7:	astore	10
   9:	new	#107; //class scala/xml/include/sax/Main$$anonfun$1
   12:	dup
   13:	invokespecial	#108; //Method scala/xml/include/sax/Main$$anonfun$1."<init>":()V
   16:	astore_2
   17:	getstatic	#79; //Field scala/util/control/Exception$.MODULE$:Lscala/util/control/Exception$;
   20:	getstatic	#84; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   23:	iconst_1
   24:	anewarray	#86; //class java/lang/Class
   27:	dup
   28:	iconst_0
   29:	ldc	#88; //class org/xml/sax/SAXException
   31:	aastore
   32:	checkcast	#39; //class "[Ljava/lang/Object;"
   35:	invokevirtual	#92; //Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
   38:	invokevirtual	#96; //Method scala/util/control/Exception$.catching:(Lscala/collection/Seq;)Lscala/util/control/Exception$Catch;
   41:	aload_2
   42:	invokevirtual	#101; //Method scala/util/control/Exception$Catch.opt:(Lscala/Function0;)Lscala/Option;
   45:	new	#110; //class scala/xml/include/sax/Main$$anonfun$2
   48:	dup
   49:	aload	10
   51:	invokespecial	#113; //Method scala/xml/include/sax/Main$$anonfun$2."<init>":(Ljava/lang/Object;)V
   54:	invokevirtual	#119; //Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
   57:	checkcast	#121; //class org/xml/sax/XMLReader
   60:	astore	7
   62:	aload	7
   64:	aload_0
   65:	invokespecial	#124; //Method namespacePrefixes:()Ljava/lang/String;
   68:	iconst_1
   69:	invokeinterface	#128,  3; //InterfaceMethod org/xml/sax/XMLReader.setFeature:(Ljava/lang/String;Z)V
   74:	aload_1
   75:	checkcast	#39; //class "[Ljava/lang/Object;"
   78:	astore_3
   79:	new	#41; //class scala/collection/mutable/ArrayOps$ofRef
   82:	dup
   83:	aload_3
   84:	invokespecial	#44; //Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
   87:	invokeinterface	#134,  1; //InterfaceMethod scala/collection/IndexedSeqLike.isEmpty:()Z
   92:	ifeq	96
   95:	return
   96:	aload_0
   97:	aload_1
   98:	invokespecial	#136; //Method dashR$1:([Ljava/lang/String;)Z
   101:	ifeq	131
   104:	aload_1
   105:	checkcast	#39; //class "[Ljava/lang/Object;"
   108:	astore	4
   110:	new	#41; //class scala/collection/mutable/ArrayOps$ofRef
   113:	dup
   114:	aload	4
   116:	invokespecial	#44; //Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
   119:	iconst_2
   120:	invokeinterface	#140,  2; //InterfaceMethod scala/collection/IndexedSeqLike.drop:(I)Ljava/lang/Object;
   125:	checkcast	#142; //class "[Ljava/lang/String;"
   128:	goto	132
   131:	aload_1
   132:	astore	5
   134:	aload_0
   135:	aload_1
   136:	invokespecial	#136; //Method dashR$1:([Ljava/lang/String;)Z
   139:	ifeq	148
   142:	getstatic	#147; //Field scala/None$.MODULE$:Lscala/None$;
   145:	goto	197
   148:	getstatic	#79; //Field scala/util/control/Exception$.MODULE$:Lscala/util/control/Exception$;
   151:	getstatic	#84; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   154:	iconst_1
   155:	anewarray	#86; //class java/lang/Class
   158:	dup
   159:	iconst_0
   160:	ldc	#149; //class java/lang/Exception
   162:	aastore
   163:	checkcast	#39; //class "[Ljava/lang/Object;"
   166:	invokevirtual	#92; //Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
   169:	invokevirtual	#96; //Method scala/util/control/Exception$.catching:(Lscala/collection/Seq;)Lscala/util/control/Exception$Catch;
   172:	new	#151; //class scala/xml/include/sax/Main$$anonfun$3
   175:	dup
   176:	aload_1
   177:	aload	7
   179:	invokespecial	#154; //Method scala/xml/include/sax/Main$$anonfun$3."<init>":([Ljava/lang/String;Lorg/xml/sax/XMLReader;)V
   182:	invokevirtual	#101; //Method scala/util/control/Exception$Catch.opt:(Lscala/Function0;)Lscala/Option;
   185:	new	#156; //class scala/xml/include/sax/Main$$anonfun$4
   188:	dup
   189:	aload	10
   191:	invokespecial	#157; //Method scala/xml/include/sax/Main$$anonfun$4."<init>":(Ljava/lang/Object;)V
   194:	invokevirtual	#160; //Method scala/Option.orElse:(Lscala/Function0;)Lscala/Option;
   197:	astore	8
   199:	aload	5
   201:	checkcast	#39; //class "[Ljava/lang/Object;"
   204:	astore	6
   206:	new	#41; //class scala/collection/mutable/ArrayOps$ofRef
   209:	dup
   210:	aload	6
   212:	invokespecial	#44; //Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
   215:	new	#162; //class scala/xml/include/sax/Main$$anonfun$main$1
   218:	dup
   219:	aload	7
   221:	aload	8
   223:	invokespecial	#165; //Method scala/xml/include/sax/Main$$anonfun$main$1."<init>":(Lorg/xml/sax/XMLReader;Lscala/Option;)V
   226:	invokeinterface	#169,  2; //InterfaceMethod scala/collection/IndexedSeqLike.foreach:(Lscala/Function1;)V
   231:	goto	257
   234:	astore	9
   236:	getstatic	#66; //Field java/lang/System.err:Ljava/io/PrintStream;
   239:	aload	9
   241:	invokevirtual	#171; //Method java/io/PrintStream.println:(Ljava/lang/Object;)V
   244:	return
   245:	astore	11
   247:	aload	11
   249:	invokevirtual	#177; //Method scala/runtime/NonLocalReturnException.key:()Ljava/lang/Object;
   252:	aload	10
   254:	if_acmpne	258
   257:	return
   258:	aload	11
   260:	athrow
  Exception table:
   from   to  target type
    62    74   234   Class org/xml/sax/SAXException

     9   245   245   Class scala/runtime/NonLocalReturnException

  LineNumberTable: 
   line 32: 0
   line 37: 9
   line 38: 45
   line 37: 54
   line 36: 60
   line 44: 62
   line 47: 74
   line 48: 95
   line 51: 96
   line 53: 134
   line 54: 148
   line 58: 185
   line 52: 197
   line 60: 199
   line 45: 234
   line 32: 245

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      261      0    this       Lscala/xml/include/sax/Main$;
   0      261      1    args$1       [Ljava/lang/String;
   17      28      2    body0       Lscala/Function0;
   79      8      3    xs0       [Ljava/lang/Object;
   110      9      4    xs1       [Ljava/lang/Object;
   134      97      5    args2       [Ljava/lang/String;
   206      9      6    xs2       [Ljava/lang/Object;
   62      169      7    parser$1       Lorg/xml/sax/XMLReader;
   234      11      7    parser$1       Lorg/xml/sax/XMLReader;
   199      32      8    resolver$1       Lscala/Option;


public final java.lang.String scala$xml$include$sax$Main$$lexicalHandler();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#35; //Field scala$xml$include$sax$Main$$lexicalHandler:Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 22: 0


public final java.lang.String scala$xml$include$sax$Main$$xercesClass();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#27; //Field scala$xml$include$sax$Main$$xercesClass:Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 20: 0


}

