Compiled from "Main.scala"
public final class scala.xml.include.sax.Main$$anonfun$2 extends scala.runtime.AbstractFunction0 implements java.io.Serializable
  SourceFile: "Main.scala"
  Scala: length = 0x
   
  InnerClass: 
   public Catch=class scala/util/control/Exception$Catch of class scala/util/control/Exception
   public final $anonfun$2=class scala/xml/include/sax/Main$$anonfun$2 of class scala/xml/include/sax/Main
   public final $anonfun$apply$2=class scala/xml/include/sax/Main$$anonfun$2$$anonfun$apply$2 of class scala/xml/include/sax/Main$$anonfun$2
   public final $anonfun$apply$1=class scala/xml/include/sax/Main$$anonfun$2$$anonfun$apply$1 of class scala/xml/include/sax/Main$$anonfun$2
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	Main.scala;
Asciz	<clinit>;
Asciz	()V;
Asciz	Code;
Asciz	serialVersionUID;
Asciz	J;
Asciz	scala/xml/include/sax/Main$$anonfun$2;
class	scala/xml/include/sax/Main$$anonfun$2
NameAndType	serialVersionUID:J
Field	scala/xml/include/sax/Main$$anonfun$2.serialVersionUID:J
Asciz	nonLocalReturnKey1$1;
Asciz	Ljava/lang/Object;;
Asciz	<init>;
Asciz	(Ljava/lang/Object;)V;
Asciz	LineNumberTable;
NameAndType	nonLocalReturnKey1$1:Ljava/lang/Object;
Field	scala/xml/include/sax/Main$$anonfun$2.nonLocalReturnKey1$1:Ljava/lang/Object;
Asciz	scala/runtime/AbstractFunction0;
class	scala/runtime/AbstractFunction0
NameAndType	"<init>":()V
Method	scala/runtime/AbstractFunction0."<init>":()V
Asciz	apply;
Asciz	()Ljava/lang/Object;;
Asciz	()Lorg/xml/sax/XMLReader;;
NameAndType	apply:()Lorg/xml/sax/XMLReader;
Method	scala/xml/include/sax/Main$$anonfun$2.apply:()Lorg/xml/sax/XMLReader;
Asciz	scala/xml/include/sax/Main$$anonfun$2$$anonfun$apply$1;
class	scala/xml/include/sax/Main$$anonfun$2$$anonfun$apply$1
Asciz	(Lscala/xml/include/sax/Main$$anonfun$2;)V;
NameAndType	"<init>":(Lscala/xml/include/sax/Main$$anonfun$2;)V
Method	scala/xml/include/sax/Main$$anonfun$2$$anonfun$apply$1."<init>":(Lscala/xml/include/sax/Main$$anonfun$2;)V
Asciz	scala/util/control/Exception$;
class	scala/util/control/Exception$
Asciz	MODULE$;
Asciz	Lscala/util/control/Exception$;;
NameAndType	MODULE$:Lscala/util/control/Exception$;
Field	scala/util/control/Exception$.MODULE$:Lscala/util/control/Exception$;
Asciz	scala/Predef$;
class	scala/Predef$
Asciz	Lscala/Predef$;;
NameAndType	MODULE$:Lscala/Predef$;
Field	scala/Predef$.MODULE$:Lscala/Predef$;
Asciz	java/lang/Class;
class	java/lang/Class
Asciz	org/xml/sax/SAXException;
class	org/xml/sax/SAXException
Asciz	[Ljava/lang/Object;;
class	"[Ljava/lang/Object;"
Asciz	wrapRefArray;
Asciz	([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;;
NameAndType	wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
Method	scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
Asciz	catching;
Asciz	(Lscala/collection/Seq;)Lscala/util/control/Exception$Catch;;
NameAndType	catching:(Lscala/collection/Seq;)Lscala/util/control/Exception$Catch;
Method	scala/util/control/Exception$.catching:(Lscala/collection/Seq;)Lscala/util/control/Exception$Catch;
Asciz	scala/util/control/Exception$Catch;
class	scala/util/control/Exception$Catch
Asciz	opt;
Asciz	(Lscala/Function0;)Lscala/Option;;
NameAndType	opt:(Lscala/Function0;)Lscala/Option;
Method	scala/util/control/Exception$Catch.opt:(Lscala/Function0;)Lscala/Option;
Asciz	scala/xml/include/sax/Main$$anonfun$2$$anonfun$apply$2;
class	scala/xml/include/sax/Main$$anonfun$2$$anonfun$apply$2
Method	scala/xml/include/sax/Main$$anonfun$2$$anonfun$apply$2."<init>":(Lscala/xml/include/sax/Main$$anonfun$2;)V
Asciz	scala/Option;
class	scala/Option
Asciz	getOrElse;
Asciz	(Lscala/Function0;)Ljava/lang/Object;;
NameAndType	getOrElse:(Lscala/Function0;)Ljava/lang/Object;
Method	scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
Asciz	org/xml/sax/XMLReader;
class	org/xml/sax/XMLReader
Asciz	this;
Asciz	Lscala/xml/include/sax/Main$$anonfun$2;;
Asciz	LocalVariableTable;
Asciz	Scala;
Asciz	InnerClasses;
Asciz	scala/util/control/Exception;
class	scala/util/control/Exception
Asciz	Catch;
Asciz	scala/xml/include/sax/Main;
class	scala/xml/include/sax/Main
Asciz	$anonfun$2;
Asciz	$anonfun$apply$2;
Asciz	$anonfun$apply$1;
Asciz	java/io/Serializable;
class	java/io/Serializable

{
public static final long serialVersionUID;
  Signature: J

public final java.lang.Object nonLocalReturnKey1$1;
  Signature: Ljava/lang/Object;

public static {};
  Signature: ()V
  Code:
   Stack=2, Locals=0, Args_size=0
	lconst_0
	putstatic	Field serialVersionUID:J
	return
  Labels:

public scala.xml.include.sax.Main$$anonfun$2(java.lang.Object);
  Signature: (Ljava/lang/Object;)V
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	putfield	Field nonLocalReturnKey1$1:Ljava/lang/Object;
	aload_0
	invokespecial	Method scala/runtime/AbstractFunction0."<init>":()V
	return
  Labels:

public final java.lang.Object apply();
  Signature: ()Ljava/lang/Object;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokevirtual	Method apply:()Lorg/xml/sax/XMLReader;
	areturn
  Labels:

public final org.xml.sax.XMLReader apply();
  Signature: ()Lorg/xml/sax/XMLReader;
  Code:
   Stack=6, Locals=2, Args_size=1
	new	class scala/xml/include/sax/Main$$anonfun$2$$anonfun$apply$1
	dup
	aload_0
	invokespecial	Method scala/xml/include/sax/Main$$anonfun$2$$anonfun$apply$1."<init>":(Lscala/xml/include/sax/Main$$anonfun$2;)V
	astore_1
	getstatic	Field scala/util/control/Exception$.MODULE$:Lscala/util/control/Exception$;
	getstatic	Field scala/Predef$.MODULE$:Lscala/Predef$;
	iconst_1
	anewarray	class java/lang/Class
	dup
	iconst_0
	ldc	class org/xml/sax/SAXException
	aastore
	checkcast	class "[Ljava/lang/Object;"
	invokevirtual	Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
	invokevirtual	Method scala/util/control/Exception$.catching:(Lscala/collection/Seq;)Lscala/util/control/Exception$Catch;
	aload_1
	invokevirtual	Method scala/util/control/Exception$Catch.opt:(Lscala/Function0;)Lscala/Option;
	new	class scala/xml/include/sax/Main$$anonfun$2$$anonfun$apply$2
	dup
	aload_0
	invokespecial	Method scala/xml/include/sax/Main$$anonfun$2$$anonfun$apply$2."<init>":(Lscala/xml/include/sax/Main$$anonfun$2;)V
	invokevirtual	Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
	checkcast	class org/xml/sax/XMLReader
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      52      0    this       Lscala/xml/include/sax/Main$$anonfun$2;


}

