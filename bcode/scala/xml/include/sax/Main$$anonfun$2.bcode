Compiled from "Main.scala"
public final class scala.xml.include.sax.Main$$anonfun$2 extends java.lang.Object implements scala.Function0,scala.ScalaObject,java.io.Serializable
  SourceFile: "Main.scala"
  Scala: length = 0x
   
  InnerClass: 
   public #93= #65 of #92; //Catch=class scala/util/control/Exception$Catch of class scala/util/control/Exception
   public final #96= #9 of #95; //$anonfun$2=class scala/xml/include/sax/Main$$anonfun$2 of class scala/xml/include/sax/Main
   public final #97= #71 of #9; //$anonfun$apply$2=class scala/xml/include/sax/Main$$anonfun$2$$anonfun$apply$2 of class scala/xml/include/sax/Main$$anonfun$2
   public final #98= #35 of #9; //$anonfun$apply$1=class scala/xml/include/sax/Main$$anonfun$2$$anonfun$apply$1 of class scala/xml/include/sax/Main$$anonfun$2
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Main.scala;
const #3 = Asciz	<clinit>;
const #4 = Asciz	()V;
const #5 = Asciz	Code;
const #6 = Asciz	serialVersionUID;
const #7 = Asciz	J;
const #8 = Asciz	scala/xml/include/sax/Main$$anonfun$2;
const #9 = class	#8;	//  scala/xml/include/sax/Main$$anonfun$2
const #10 = NameAndType	#6:#7;//  serialVersionUID:J
const #11 = Field	#9.#10;	//  scala/xml/include/sax/Main$$anonfun$2.serialVersionUID:J
const #12 = Asciz	nonLocalReturnKey1$1;
const #13 = Asciz	Ljava/lang/Object;;
const #14 = Asciz	<init>;
const #15 = Asciz	(Ljava/lang/Object;)V;
const #16 = Asciz	LineNumberTable;
const #17 = NameAndType	#12:#13;//  nonLocalReturnKey1$1:Ljava/lang/Object;
const #18 = Field	#9.#17;	//  scala/xml/include/sax/Main$$anonfun$2.nonLocalReturnKey1$1:Ljava/lang/Object;
const #19 = Asciz	java/lang/Object;
const #20 = class	#19;	//  java/lang/Object
const #21 = NameAndType	#14:#4;//  "<init>":()V
const #22 = Method	#20.#21;	//  java/lang/Object."<init>":()V
const #23 = Asciz	scala/Function0$class;
const #24 = class	#23;	//  scala/Function0$class
const #25 = Asciz	$init$;
const #26 = Asciz	(Lscala/Function0;)V;
const #27 = NameAndType	#25:#26;//  $init$:(Lscala/Function0;)V
const #28 = Method	#24.#27;	//  scala/Function0$class.$init$:(Lscala/Function0;)V
const #29 = Asciz	apply;
const #30 = Asciz	()Ljava/lang/Object;;
const #31 = Asciz	()Lorg/xml/sax/XMLReader;;
const #32 = NameAndType	#29:#31;//  apply:()Lorg/xml/sax/XMLReader;
const #33 = Method	#9.#32;	//  scala/xml/include/sax/Main$$anonfun$2.apply:()Lorg/xml/sax/XMLReader;
const #34 = Asciz	scala/xml/include/sax/Main$$anonfun$2$$anonfun$apply$1;
const #35 = class	#34;	//  scala/xml/include/sax/Main$$anonfun$2$$anonfun$apply$1
const #36 = Asciz	(Lscala/xml/include/sax/Main$$anonfun$2;)V;
const #37 = NameAndType	#14:#36;//  "<init>":(Lscala/xml/include/sax/Main$$anonfun$2;)V
const #38 = Method	#35.#37;	//  scala/xml/include/sax/Main$$anonfun$2$$anonfun$apply$1."<init>":(Lscala/xml/include/sax/Main$$anonfun$2;)V
const #39 = Asciz	scala/util/control/Exception$;
const #40 = class	#39;	//  scala/util/control/Exception$
const #41 = Asciz	MODULE$;
const #42 = Asciz	Lscala/util/control/Exception$;;
const #43 = NameAndType	#41:#42;//  MODULE$:Lscala/util/control/Exception$;
const #44 = Field	#40.#43;	//  scala/util/control/Exception$.MODULE$:Lscala/util/control/Exception$;
const #45 = Asciz	scala/Predef$;
const #46 = class	#45;	//  scala/Predef$
const #47 = Asciz	Lscala/Predef$;;
const #48 = NameAndType	#41:#47;//  MODULE$:Lscala/Predef$;
const #49 = Field	#46.#48;	//  scala/Predef$.MODULE$:Lscala/Predef$;
const #50 = Asciz	java/lang/Class;
const #51 = class	#50;	//  java/lang/Class
const #52 = Asciz	org/xml/sax/SAXException;
const #53 = class	#52;	//  org/xml/sax/SAXException
const #54 = Asciz	[Ljava/lang/Object;;
const #55 = class	#54;	//  "[Ljava/lang/Object;"
const #56 = Asciz	wrapRefArray;
const #57 = Asciz	([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;;
const #58 = NameAndType	#56:#57;//  wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
const #59 = Method	#46.#58;	//  scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
const #60 = Asciz	catching;
const #61 = Asciz	(Lscala/collection/Seq;)Lscala/util/control/Exception$Catch;;
const #62 = NameAndType	#60:#61;//  catching:(Lscala/collection/Seq;)Lscala/util/control/Exception$Catch;
const #63 = Method	#40.#62;	//  scala/util/control/Exception$.catching:(Lscala/collection/Seq;)Lscala/util/control/Exception$Catch;
const #64 = Asciz	scala/util/control/Exception$Catch;
const #65 = class	#64;	//  scala/util/control/Exception$Catch
const #66 = Asciz	opt;
const #67 = Asciz	(Lscala/Function0;)Lscala/Option;;
const #68 = NameAndType	#66:#67;//  opt:(Lscala/Function0;)Lscala/Option;
const #69 = Method	#65.#68;	//  scala/util/control/Exception$Catch.opt:(Lscala/Function0;)Lscala/Option;
const #70 = Asciz	scala/xml/include/sax/Main$$anonfun$2$$anonfun$apply$2;
const #71 = class	#70;	//  scala/xml/include/sax/Main$$anonfun$2$$anonfun$apply$2
const #72 = Method	#71.#37;	//  scala/xml/include/sax/Main$$anonfun$2$$anonfun$apply$2."<init>":(Lscala/xml/include/sax/Main$$anonfun$2;)V
const #73 = Asciz	scala/Option;
const #74 = class	#73;	//  scala/Option
const #75 = Asciz	getOrElse;
const #76 = Asciz	(Lscala/Function0;)Ljava/lang/Object;;
const #77 = NameAndType	#75:#76;//  getOrElse:(Lscala/Function0;)Ljava/lang/Object;
const #78 = Method	#74.#77;	//  scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
const #79 = Asciz	org/xml/sax/XMLReader;
const #80 = class	#79;	//  org/xml/sax/XMLReader
const #81 = Asciz	this;
const #82 = Asciz	Lscala/xml/include/sax/Main$$anonfun$2;;
const #83 = Asciz	LocalVariableTable;
const #84 = Asciz	toString;
const #85 = Asciz	()Ljava/lang/String;;
const #86 = Asciz	(Lscala/Function0;)Ljava/lang/String;;
const #87 = NameAndType	#84:#86;//  toString:(Lscala/Function0;)Ljava/lang/String;
const #88 = Method	#24.#87;	//  scala/Function0$class.toString:(Lscala/Function0;)Ljava/lang/String;
const #89 = Asciz	Scala;
const #90 = Asciz	InnerClasses;
const #91 = Asciz	scala/util/control/Exception;
const #92 = class	#91;	//  scala/util/control/Exception
const #93 = Asciz	Catch;
const #94 = Asciz	scala/xml/include/sax/Main;
const #95 = class	#94;	//  scala/xml/include/sax/Main
const #96 = Asciz	$anonfun$2;
const #97 = Asciz	$anonfun$apply$2;
const #98 = Asciz	$anonfun$apply$1;
const #99 = Asciz	scala/Function0;
const #100 = class	#99;	//  scala/Function0
const #101 = Asciz	scala/ScalaObject;
const #102 = class	#101;	//  scala/ScalaObject
const #103 = Asciz	java/io/Serializable;
const #104 = class	#103;	//  java/io/Serializable

{
public static final long serialVersionUID;

public final java.lang.Object nonLocalReturnKey1$1;

public static {};
  Code:
   Stack=2, Locals=0, Args_size=0
   0:	lconst_0
   1:	putstatic	#11; //Field serialVersionUID:J
   4:	return

public scala.xml.include.sax.Main$$anonfun$2(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	putfield	#18; //Field nonLocalReturnKey1$1:Ljava/lang/Object;
   5:	aload_0
   6:	invokespecial	#22; //Method java/lang/Object."<init>":()V
   9:	aload_0
   10:	invokestatic	#28; //Method scala/Function0$class.$init$:(Lscala/Function0;)V
   13:	return
  LineNumberTable: 
   line 38: 0


public final java.lang.Object apply();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#33; //Method apply:()Lorg/xml/sax/XMLReader;
   4:	areturn
  LineNumberTable: 
   line 38: 0


public final org.xml.sax.XMLReader apply();
  Code:
   Stack=6, Locals=2, Args_size=1
   0:	new	#35; //class scala/xml/include/sax/Main$$anonfun$2$$anonfun$apply$1
   3:	dup
   4:	aload_0
   5:	invokespecial	#38; //Method scala/xml/include/sax/Main$$anonfun$2$$anonfun$apply$1."<init>":(Lscala/xml/include/sax/Main$$anonfun$2;)V
   8:	astore_1
   9:	getstatic	#44; //Field scala/util/control/Exception$.MODULE$:Lscala/util/control/Exception$;
   12:	getstatic	#49; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   15:	iconst_1
   16:	anewarray	#51; //class java/lang/Class
   19:	dup
   20:	iconst_0
   21:	ldc	#53; //class org/xml/sax/SAXException
   23:	aastore
   24:	checkcast	#55; //class "[Ljava/lang/Object;"
   27:	invokevirtual	#59; //Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
   30:	invokevirtual	#63; //Method scala/util/control/Exception$.catching:(Lscala/collection/Seq;)Lscala/util/control/Exception$Catch;
   33:	aload_1
   34:	invokevirtual	#69; //Method scala/util/control/Exception$Catch.opt:(Lscala/Function0;)Lscala/Option;
   37:	new	#71; //class scala/xml/include/sax/Main$$anonfun$2$$anonfun$apply$2
   40:	dup
   41:	aload_0
   42:	invokespecial	#72; //Method scala/xml/include/sax/Main$$anonfun$2$$anonfun$apply$2."<init>":(Lscala/xml/include/sax/Main$$anonfun$2;)V
   45:	invokevirtual	#78; //Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
   48:	checkcast	#80; //class org/xml/sax/XMLReader
   51:	areturn
  LineNumberTable: 
   line 38: 0
   line 39: 37
   line 38: 45

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      52      0    this       Lscala/xml/include/sax/Main$$anonfun$2;


public java.lang.String toString();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#88; //Method scala/Function0$class.toString:(Lscala/Function0;)Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 38: 0


}

