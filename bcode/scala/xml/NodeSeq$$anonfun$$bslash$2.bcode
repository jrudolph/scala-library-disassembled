Compiled from "NodeSeq.scala"
public final class scala.xml.NodeSeq$$anonfun$$bslash$2 extends java.lang.Object implements scala.Function1,scala.ScalaObject,java.io.Serializable
  SourceFile: "NodeSeq.scala"
  Scala: length = 0x
   
  InnerClass: 
   public final #75= #9 of #74; //$anonfun$$bslash$2=class scala/xml/NodeSeq$$anonfun$$bslash$2 of class scala/xml/NodeSeq
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	NodeSeq.scala;
const #3 = Asciz	<clinit>;
const #4 = Asciz	()V;
const #5 = Asciz	Code;
const #6 = Asciz	serialVersionUID;
const #7 = Asciz	J;
const #8 = Asciz	scala/xml/NodeSeq$$anonfun$$bslash$2;
const #9 = class	#8;	//  scala/xml/NodeSeq$$anonfun$$bslash$2
const #10 = NameAndType	#6:#7;//  serialVersionUID:J
const #11 = Field	#9.#10;	//  scala/xml/NodeSeq$$anonfun$$bslash$2.serialVersionUID:J
const #12 = Asciz	that$1;
const #13 = Asciz	Ljava/lang/String;;
const #14 = Asciz	<init>;
const #15 = Asciz	(Lscala/xml/NodeSeq;Ljava/lang/String;)V;
const #16 = Asciz	LineNumberTable;
const #17 = NameAndType	#12:#13;//  that$1:Ljava/lang/String;
const #18 = Field	#9.#17;	//  scala/xml/NodeSeq$$anonfun$$bslash$2.that$1:Ljava/lang/String;
const #19 = Asciz	java/lang/Object;
const #20 = class	#19;	//  java/lang/Object
const #21 = NameAndType	#14:#4;//  "<init>":()V
const #22 = Method	#20.#21;	//  java/lang/Object."<init>":()V
const #23 = Asciz	scala/Function1$class;
const #24 = class	#23;	//  scala/Function1$class
const #25 = Asciz	$init$;
const #26 = Asciz	(Lscala/Function1;)V;
const #27 = NameAndType	#25:#26;//  $init$:(Lscala/Function1;)V
const #28 = Method	#24.#27;	//  scala/Function1$class.$init$:(Lscala/Function1;)V
const #29 = Asciz	this;
const #30 = Asciz	Lscala/xml/NodeSeq$$anonfun$$bslash$2;;
const #31 = Asciz	$outer;
const #32 = Asciz	Lscala/xml/NodeSeq;;
const #33 = Asciz	LocalVariableTable;
const #34 = Asciz	apply;
const #35 = Asciz	(Ljava/lang/Object;)Ljava/lang/Object;;
const #36 = Asciz	scala/xml/Node;
const #37 = class	#36;	//  scala/xml/Node
const #38 = Asciz	(Lscala/xml/Node;)Z;
const #39 = NameAndType	#34:#38;//  apply:(Lscala/xml/Node;)Z
const #40 = Method	#9.#39;	//  scala/xml/NodeSeq$$anonfun$$bslash$2.apply:(Lscala/xml/Node;)Z
const #41 = Asciz	scala/runtime/BoxesRunTime;
const #42 = class	#41;	//  scala/runtime/BoxesRunTime
const #43 = Asciz	boxToBoolean;
const #44 = Asciz	(Z)Ljava/lang/Boolean;;
const #45 = NameAndType	#43:#44;//  boxToBoolean:(Z)Ljava/lang/Boolean;
const #46 = Method	#42.#45;	//  scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
const #47 = Asciz	v1;
const #48 = Asciz	Ljava/lang/Object;;
const #49 = Asciz	label;
const #50 = Asciz	()Ljava/lang/String;;
const #51 = NameAndType	#49:#50;//  label:()Ljava/lang/String;
const #52 = Method	#37.#51;	//  scala/xml/Node.label:()Ljava/lang/String;
const #53 = Asciz	equals;
const #54 = Asciz	(Ljava/lang/Object;)Z;
const #55 = NameAndType	#53:#54;//  equals:(Ljava/lang/Object;)Z
const #56 = Method	#20.#55;	//  java/lang/Object.equals:(Ljava/lang/Object;)Z
const #57 = Asciz	andThen;
const #58 = Asciz	(Lscala/Function1;)Lscala/Function1;;
const #59 = Asciz	(Lscala/Function1;Lscala/Function1;)Lscala/Function1;;
const #60 = NameAndType	#57:#59;//  andThen:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
const #61 = Method	#24.#60;	//  scala/Function1$class.andThen:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
const #62 = Asciz	g;
const #63 = Asciz	Lscala/Function1;;
const #64 = Asciz	compose;
const #65 = NameAndType	#64:#59;//  compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
const #66 = Method	#24.#65;	//  scala/Function1$class.compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
const #67 = Asciz	toString;
const #68 = Asciz	(Lscala/Function1;)Ljava/lang/String;;
const #69 = NameAndType	#67:#68;//  toString:(Lscala/Function1;)Ljava/lang/String;
const #70 = Method	#24.#69;	//  scala/Function1$class.toString:(Lscala/Function1;)Ljava/lang/String;
const #71 = Asciz	Scala;
const #72 = Asciz	InnerClasses;
const #73 = Asciz	scala/xml/NodeSeq;
const #74 = class	#73;	//  scala/xml/NodeSeq
const #75 = Asciz	$anonfun$$bslash$2;
const #76 = Asciz	scala/Function1;
const #77 = class	#76;	//  scala/Function1
const #78 = Asciz	scala/ScalaObject;
const #79 = class	#78;	//  scala/ScalaObject
const #80 = Asciz	java/io/Serializable;
const #81 = class	#80;	//  java/io/Serializable

{
public static final long serialVersionUID;

public static {};
  Code:
   Stack=2, Locals=0, Args_size=0
   0:	lconst_0
   1:	putstatic	#11; //Field serialVersionUID:J
   4:	return

public scala.xml.NodeSeq$$anonfun$$bslash$2(scala.xml.NodeSeq, java.lang.String);
  Code:
   Stack=2, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_2
   2:	putfield	#18; //Field that$1:Ljava/lang/String;
   5:	aload_0
   6:	invokespecial	#22; //Method java/lang/Object."<init>":()V
   9:	aload_0
   10:	invokestatic	#28; //Method scala/Function1$class.$init$:(Lscala/Function1;)V
   13:	return
  LineNumberTable: 
   line 109: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      14      0    this       Lscala/xml/NodeSeq$$anonfun$$bslash$2;
   0      14      1    $outer       Lscala/xml/NodeSeq;


public final java.lang.Object apply(java.lang.Object);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	checkcast	#37; //class scala/xml/Node
   5:	invokevirtual	#40; //Method apply:(Lscala/xml/Node;)Z
   8:	istore_2
   9:	iload_2
   10:	invokestatic	#46; //Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
   13:	areturn
  LineNumberTable: 
   line 109: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      14      0    this       Lscala/xml/NodeSeq$$anonfun$$bslash$2;
   0      14      1    v1       Ljava/lang/Object;


public final boolean apply(scala.xml.Node);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	aload_1
   1:	invokevirtual	#52; //Method scala/xml/Node.label:()Ljava/lang/String;
   4:	aload_0
   5:	getfield	#18; //Field that$1:Ljava/lang/String;
   8:	astore_2
   9:	dup
   10:	ifnonnull	21
   13:	pop
   14:	aload_2
   15:	ifnull	28
   18:	goto	32
   21:	aload_2
   22:	invokevirtual	#56; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   25:	ifeq	32
   28:	iconst_1
   29:	goto	33
   32:	iconst_0
   33:	ireturn
  LineNumberTable: 
   line 109: 0


public scala.Function1 andThen(scala.Function1);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#61; //Method scala/Function1$class.andThen:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
   5:	areturn
  LineNumberTable: 
   line 109: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/NodeSeq$$anonfun$$bslash$2;
   0      6      1    g       Lscala/Function1;


public scala.Function1 compose(scala.Function1);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#66; //Method scala/Function1$class.compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
   5:	areturn
  LineNumberTable: 
   line 109: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/NodeSeq$$anonfun$$bslash$2;
   0      6      1    g       Lscala/Function1;


public java.lang.String toString();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#70; //Method scala/Function1$class.toString:(Lscala/Function1;)Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 109: 0


}

