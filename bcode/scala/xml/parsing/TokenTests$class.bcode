Compiled from "TokenTests.scala"
public abstract class scala.xml.parsing.TokenTests$class extends java.lang.Object
  SourceFile: "TokenTests.scala"
  Scala: length = 0x
   
  InnerClass: 
   public final #178= #138 of #13; //$anonfun$isName$1=class scala/xml/parsing/TokenTests$$anonfun$isName$1 of class scala/xml/parsing/TokenTests
   public final #179= #173 of #13; //$anonfun$isSpace$1=class scala/xml/parsing/TokenTests$$anonfun$isSpace$1 of class scala/xml/parsing/TokenTests
   public final #180= #81 of #13; //$anonfun$checkSysID$1=class scala/xml/parsing/TokenTests$$anonfun$checkSysID$1 of class scala/xml/parsing/TokenTests
   public final #181= #53 of #13; //$anonfun$checkPubID$1=class scala/xml/parsing/TokenTests$$anonfun$checkPubID$1 of class scala/xml/parsing/TokenTests
   public final #182= #116 of #13; //$anonfun$isValidIANAEncoding$1=class scala/xml/parsing/TokenTests$$anonfun$isValidIANAEncoding$1 of class scala/xml/parsing/TokenTests
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	TokenTests.scala;
const #3 = Asciz	$init$;
const #4 = Asciz	(Lscala/xml/parsing/TokenTests;)V;
const #5 = Asciz	Code;
const #6 = Asciz	LineNumberTable;
const #7 = Asciz	$this;
const #8 = Asciz	Lscala/xml/parsing/TokenTests;;
const #9 = Asciz	LocalVariableTable;
const #10 = Asciz	charOK$1;
const #11 = Asciz	(Lscala/xml/parsing/TokenTests;C)Z;
const #12 = Asciz	scala/xml/parsing/TokenTests;
const #13 = class	#12;	//  scala/xml/parsing/TokenTests
const #14 = Asciz	isAlphaDigit;
const #15 = Asciz	(C)Z;
const #16 = NameAndType	#14:#15;//  isAlphaDigit:(C)Z
const #17 = InterfaceMethod	#13.#16;	//  scala/xml/parsing/TokenTests.isAlphaDigit:(C)Z
const #18 = Asciz	._-;
const #19 = String	#18;	//  ._-
const #20 = Asciz	scala/collection/immutable/StringOps;
const #21 = class	#20;	//  scala/collection/immutable/StringOps
const #22 = Asciz	<init>;
const #23 = Asciz	(Ljava/lang/String;)V;
const #24 = NameAndType	#22:#23;//  "<init>":(Ljava/lang/String;)V
const #25 = Method	#21.#24;	//  scala/collection/immutable/StringOps."<init>":(Ljava/lang/String;)V
const #26 = Asciz	scala/runtime/BoxesRunTime;
const #27 = class	#26;	//  scala/runtime/BoxesRunTime
const #28 = Asciz	boxToCharacter;
const #29 = Asciz	(C)Ljava/lang/Character;;
const #30 = NameAndType	#28:#29;//  boxToCharacter:(C)Ljava/lang/Character;
const #31 = Method	#27.#30;	//  scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
const #32 = Asciz	scala/collection/SeqLike;
const #33 = class	#32;	//  scala/collection/SeqLike
const #34 = Asciz	contains;
const #35 = Asciz	(Ljava/lang/Object;)Z;
const #36 = NameAndType	#34:#35;//  contains:(Ljava/lang/Object;)Z
const #37 = InterfaceMethod	#33.#36;	//  scala/collection/SeqLike.contains:(Ljava/lang/Object;)Z
const #38 = Asciz	c;
const #39 = Asciz	C;
const #40 = Asciz	checkPubID;
const #41 = Asciz	(Lscala/xml/parsing/TokenTests;Ljava/lang/String;)Z;
const #42 = Asciz	scala/Predef$;
const #43 = class	#42;	//  scala/Predef$
const #44 = Asciz	MODULE$;
const #45 = Asciz	Lscala/Predef$;;
const #46 = NameAndType	#44:#45;//  MODULE$:Lscala/Predef$;
const #47 = Field	#43.#46;	//  scala/Predef$.MODULE$:Lscala/Predef$;
const #48 = Asciz	augmentString;
const #49 = Asciz	(Ljava/lang/String;)Lscala/collection/immutable/StringOps;;
const #50 = NameAndType	#48:#49;//  augmentString:(Ljava/lang/String;)Lscala/collection/immutable/StringOps;
const #51 = Method	#43.#50;	//  scala/Predef$.augmentString:(Ljava/lang/String;)Lscala/collection/immutable/StringOps;
const #52 = Asciz	scala/xml/parsing/TokenTests$$anonfun$checkPubID$1;
const #53 = class	#52;	//  scala/xml/parsing/TokenTests$$anonfun$checkPubID$1
const #54 = NameAndType	#22:#4;//  "<init>":(Lscala/xml/parsing/TokenTests;)V
const #55 = Method	#53.#54;	//  scala/xml/parsing/TokenTests$$anonfun$checkPubID$1."<init>":(Lscala/xml/parsing/TokenTests;)V
const #56 = Asciz	scala/collection/IndexedSeqLike;
const #57 = class	#56;	//  scala/collection/IndexedSeqLike
const #58 = Asciz	forall;
const #59 = Asciz	(Lscala/Function1;)Z;
const #60 = NameAndType	#58:#59;//  forall:(Lscala/Function1;)Z
const #61 = InterfaceMethod	#57.#60;	//  scala/collection/IndexedSeqLike.forall:(Lscala/Function1;)Z
const #62 = Asciz	s;
const #63 = Asciz	Ljava/lang/String;;
const #64 = Asciz	checkSysID;
const #65 = Asciz	scala/collection/immutable/List$;
const #66 = class	#65;	//  scala/collection/immutable/List$
const #67 = Asciz	Lscala/collection/immutable/List$;;
const #68 = NameAndType	#44:#67;//  MODULE$:Lscala/collection/immutable/List$;
const #69 = Field	#66.#68;	//  scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
const #70 = int	34;
const #71 = int	39;
const #72 = Asciz	wrapCharArray;
const #73 = Asciz	([C)Lscala/collection/mutable/WrappedArray;;
const #74 = NameAndType	#72:#73;//  wrapCharArray:([C)Lscala/collection/mutable/WrappedArray;
const #75 = Method	#43.#74;	//  scala/Predef$.wrapCharArray:([C)Lscala/collection/mutable/WrappedArray;
const #76 = Asciz	apply;
const #77 = Asciz	(Lscala/collection/Seq;)Lscala/collection/immutable/List;;
const #78 = NameAndType	#76:#77;//  apply:(Lscala/collection/Seq;)Lscala/collection/immutable/List;
const #79 = Method	#66.#78;	//  scala/collection/immutable/List$.apply:(Lscala/collection/Seq;)Lscala/collection/immutable/List;
const #80 = Asciz	scala/xml/parsing/TokenTests$$anonfun$checkSysID$1;
const #81 = class	#80;	//  scala/xml/parsing/TokenTests$$anonfun$checkSysID$1
const #82 = Asciz	(Lscala/xml/parsing/TokenTests;Ljava/lang/String;)V;
const #83 = NameAndType	#22:#82;//  "<init>":(Lscala/xml/parsing/TokenTests;Ljava/lang/String;)V
const #84 = Method	#81.#83;	//  scala/xml/parsing/TokenTests$$anonfun$checkSysID$1."<init>":(Lscala/xml/parsing/TokenTests;Ljava/lang/String;)V
const #85 = Asciz	scala/collection/LinearSeqLike;
const #86 = class	#85;	//  scala/collection/LinearSeqLike
const #87 = Asciz	exists;
const #88 = NameAndType	#87:#59;//  exists:(Lscala/Function1;)Z
const #89 = InterfaceMethod	#86.#88;	//  scala/collection/LinearSeqLike.exists:(Lscala/Function1;)Z
const #90 = Asciz	s$1;
const #91 = Asciz	isValidIANAEncoding;
const #92 = Asciz	(Lscala/xml/parsing/TokenTests;Lscala/collection/Seq;)Z;
const #93 = Asciz	scala/collection/TraversableLike;
const #94 = class	#93;	//  scala/collection/TraversableLike
const #95 = Asciz	nonEmpty;
const #96 = Asciz	()Z;
const #97 = NameAndType	#95:#96;//  nonEmpty:()Z
const #98 = InterfaceMethod	#94.#97;	//  scala/collection/TraversableLike.nonEmpty:()Z
const #99 = Asciz	scala/collection/IterableLike;
const #100 = class	#99;	//  scala/collection/IterableLike
const #101 = Asciz	head;
const #102 = Asciz	()Ljava/lang/Object;;
const #103 = NameAndType	#101:#102;//  head:()Ljava/lang/Object;
const #104 = InterfaceMethod	#100.#103;	//  scala/collection/IterableLike.head:()Ljava/lang/Object;
const #105 = Asciz	unboxToChar;
const #106 = Asciz	(Ljava/lang/Object;)C;
const #107 = NameAndType	#105:#106;//  unboxToChar:(Ljava/lang/Object;)C
const #108 = Method	#27.#107;	//  scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
const #109 = Asciz	isAlpha;
const #110 = NameAndType	#109:#15;//  isAlpha:(C)Z
const #111 = InterfaceMethod	#13.#110;	//  scala/xml/parsing/TokenTests.isAlpha:(C)Z
const #112 = Asciz	tail;
const #113 = NameAndType	#112:#102;//  tail:()Ljava/lang/Object;
const #114 = InterfaceMethod	#94.#113;	//  scala/collection/TraversableLike.tail:()Ljava/lang/Object;
const #115 = Asciz	scala/xml/parsing/TokenTests$$anonfun$isValidIANAEncoding$1;
const #116 = class	#115;	//  scala/xml/parsing/TokenTests$$anonfun$isValidIANAEncoding$1
const #117 = Method	#116.#54;	//  scala/xml/parsing/TokenTests$$anonfun$isValidIANAEncoding$1."<init>":(Lscala/xml/parsing/TokenTests;)V
const #118 = InterfaceMethod	#100.#60;	//  scala/collection/IterableLike.forall:(Lscala/Function1;)Z
const #119 = Asciz	ianaEncoding;
const #120 = Asciz	Lscala/collection/Seq;;
const #121 = Asciz	isPubIDChar;
const #122 = Asciz	isSpace;
const #123 = NameAndType	#122:#15;//  isSpace:(C)Z
const #124 = InterfaceMethod	#13.#123;	//  scala/xml/parsing/TokenTests.isSpace:(C)Z
const #125 = int	9;
const #126 = Asciz	-\()+,./:=?;!*#@$_%;
const #127 = String	#126;	//  -\()+,./:=?;!*#@$_%
const #128 = Asciz	ch;
const #129 = Asciz	isName;
const #130 = InterfaceMethod	#57.#103;	//  scala/collection/IndexedSeqLike.head:()Ljava/lang/Object;
const #131 = Asciz	isNameStart;
const #132 = NameAndType	#131:#15;//  isNameStart:(C)Z
const #133 = InterfaceMethod	#13.#132;	//  scala/xml/parsing/TokenTests.isNameStart:(C)Z
const #134 = InterfaceMethod	#57.#113;	//  scala/collection/IndexedSeqLike.tail:()Ljava/lang/Object;
const #135 = Asciz	java/lang/String;
const #136 = class	#135;	//  java/lang/String
const #137 = Asciz	scala/xml/parsing/TokenTests$$anonfun$isName$1;
const #138 = class	#137;	//  scala/xml/parsing/TokenTests$$anonfun$isName$1
const #139 = Method	#138.#54;	//  scala/xml/parsing/TokenTests$$anonfun$isName$1."<init>":(Lscala/xml/parsing/TokenTests;)V
const #140 = Asciz	java/lang/Character;
const #141 = class	#140;	//  java/lang/Character
const #142 = Asciz	getType;
const #143 = Asciz	(C)I;
const #144 = NameAndType	#142:#143;//  getType:(C)I
const #145 = Method	#141.#144;	//  java/lang/Character.getType:(C)I
const #146 = int	95;
const #147 = Asciz	scala/MatchError;
const #148 = class	#147;	//  scala/MatchError
const #149 = Asciz	boxToByte;
const #150 = Asciz	(B)Ljava/lang/Byte;;
const #151 = NameAndType	#149:#150;//  boxToByte:(B)Ljava/lang/Byte;
const #152 = Method	#27.#151;	//  scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
const #153 = Asciz	java/lang/Object;
const #154 = class	#153;	//  java/lang/Object
const #155 = Asciz	toString;
const #156 = Asciz	()Ljava/lang/String;;
const #157 = NameAndType	#155:#156;//  toString:()Ljava/lang/String;
const #158 = Method	#154.#157;	//  java/lang/Object.toString:()Ljava/lang/String;
const #159 = Method	#148.#24;	//  scala/MatchError."<init>":(Ljava/lang/String;)V
const #160 = Asciz	temp3;
const #161 = Asciz	B;
const #162 = Asciz	isNameChar;
const #163 = Asciz	.-:;
const #164 = String	#163;	//  .-:
const #165 = Asciz	temp2;
const #166 = int	48;
const #167 = int	57;
const #168 = int	65;
const #169 = int	90;
const #170 = int	97;
const #171 = int	122;
const #172 = Asciz	scala/xml/parsing/TokenTests$$anonfun$isSpace$1;
const #173 = class	#172;	//  scala/xml/parsing/TokenTests$$anonfun$isSpace$1
const #174 = Method	#173.#54;	//  scala/xml/parsing/TokenTests$$anonfun$isSpace$1."<init>":(Lscala/xml/parsing/TokenTests;)V
const #175 = Asciz	cs;
const #176 = Asciz	Scala;
const #177 = Asciz	InnerClasses;
const #178 = Asciz	$anonfun$isName$1;
const #179 = Asciz	$anonfun$isSpace$1;
const #180 = Asciz	$anonfun$checkSysID$1;
const #181 = Asciz	$anonfun$checkPubID$1;
const #182 = Asciz	$anonfun$isValidIANAEncoding$1;
const #183 = Asciz	scala/xml/parsing/TokenTests$class;
const #184 = class	#183;	//  scala/xml/parsing/TokenTests$class

{
public static void $init$(scala.xml.parsing.TokenTests);
  Code:
   Stack=0, Locals=1, Args_size=1
   0:	return
  LineNumberTable: 
   line 20: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      1      0    $this       Lscala/xml/parsing/TokenTests;


public static final boolean charOK$1(scala.xml.parsing.TokenTests, char);
  Code:
   Stack=3, Locals=3, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	invokeinterface	#17,  2; //InterfaceMethod scala/xml/parsing/TokenTests.isAlphaDigit:(C)Z
   7:	ifne	33
   10:	ldc	#19; //String ._-
   12:	astore_2
   13:	new	#21; //class scala/collection/immutable/StringOps
   16:	dup
   17:	aload_2
   18:	invokespecial	#25; //Method scala/collection/immutable/StringOps."<init>":(Ljava/lang/String;)V
   21:	iload_1
   22:	invokestatic	#31; //Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
   25:	invokeinterface	#37,  2; //InterfaceMethod scala/collection/SeqLike.contains:(Ljava/lang/Object;)Z
   30:	ifeq	37
   33:	iconst_1
   34:	goto	38
   37:	iconst_0
   38:	ireturn
  LineNumberTable: 
   line 89: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      39      0    $this       Lscala/xml/parsing/TokenTests;
   0      39      1    c       C


public static boolean checkPubID(scala.xml.parsing.TokenTests, java.lang.String);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	getstatic	#47; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   3:	aload_1
   4:	invokevirtual	#51; //Method scala/Predef$.augmentString:(Ljava/lang/String;)Lscala/collection/immutable/StringOps;
   7:	new	#53; //class scala/xml/parsing/TokenTests$$anonfun$checkPubID$1
   10:	dup
   11:	aload_0
   12:	invokespecial	#55; //Method scala/xml/parsing/TokenTests$$anonfun$checkPubID$1."<init>":(Lscala/xml/parsing/TokenTests;)V
   15:	invokeinterface	#61,  2; //InterfaceMethod scala/collection/IndexedSeqLike.forall:(Lscala/Function1;)Z
   20:	ireturn
  LineNumberTable: 
   line 96: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      21      0    $this       Lscala/xml/parsing/TokenTests;
   0      21      1    s       Ljava/lang/String;


public static boolean checkSysID(scala.xml.parsing.TokenTests, java.lang.String);
  Code:
   Stack=6, Locals=2, Args_size=2
   0:	getstatic	#69; //Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
   3:	getstatic	#47; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   6:	iconst_2
   7:	newarray char
   9:	dup
   10:	iconst_0
   11:	ldc	#70; //int 34
   13:	castore
   14:	dup
   15:	iconst_1
   16:	ldc	#71; //int 39
   18:	castore
   19:	invokevirtual	#75; //Method scala/Predef$.wrapCharArray:([C)Lscala/collection/mutable/WrappedArray;
   22:	invokevirtual	#79; //Method scala/collection/immutable/List$.apply:(Lscala/collection/Seq;)Lscala/collection/immutable/List;
   25:	new	#81; //class scala/xml/parsing/TokenTests$$anonfun$checkSysID$1
   28:	dup
   29:	aload_0
   30:	aload_1
   31:	invokespecial	#84; //Method scala/xml/parsing/TokenTests$$anonfun$checkSysID$1."<init>":(Lscala/xml/parsing/TokenTests;Ljava/lang/String;)V
   34:	invokeinterface	#89,  2; //InterfaceMethod scala/collection/LinearSeqLike.exists:(Lscala/Function1;)Z
   39:	ireturn
  LineNumberTable: 
   line 95: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      40      0    $this       Lscala/xml/parsing/TokenTests;
   0      40      1    s$1       Ljava/lang/String;


public static boolean isValidIANAEncoding(scala.xml.parsing.TokenTests, scala.collection.Seq);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	aload_1
   1:	invokeinterface	#98,  1; //InterfaceMethod scala/collection/TraversableLike.nonEmpty:()Z
   6:	ifeq	56
   9:	aload_0
   10:	aload_1
   11:	invokeinterface	#104,  1; //InterfaceMethod scala/collection/IterableLike.head:()Ljava/lang/Object;
   16:	invokestatic	#108; //Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
   19:	invokeinterface	#111,  2; //InterfaceMethod scala/xml/parsing/TokenTests.isAlpha:(C)Z
   24:	ifeq	56
   27:	aload_1
   28:	invokeinterface	#114,  1; //InterfaceMethod scala/collection/TraversableLike.tail:()Ljava/lang/Object;
   33:	checkcast	#100; //class scala/collection/IterableLike
   36:	new	#116; //class scala/xml/parsing/TokenTests$$anonfun$isValidIANAEncoding$1
   39:	dup
   40:	aload_0
   41:	invokespecial	#117; //Method scala/xml/parsing/TokenTests$$anonfun$isValidIANAEncoding$1."<init>":(Lscala/xml/parsing/TokenTests;)V
   44:	invokeinterface	#118,  2; //InterfaceMethod scala/collection/IterableLike.forall:(Lscala/Function1;)Z
   49:	ifeq	56
   52:	iconst_1
   53:	goto	57
   56:	iconst_0
   57:	ireturn
  LineNumberTable: 
   line 91: 0
   line 92: 27
   line 91: 52

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      58      0    $this       Lscala/xml/parsing/TokenTests;
   0      58      1    ianaEncoding       Lscala/collection/Seq;


public static boolean isPubIDChar(scala.xml.parsing.TokenTests, char);
  Code:
   Stack=3, Locals=3, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	invokeinterface	#17,  2; //InterfaceMethod scala/xml/parsing/TokenTests.isAlphaDigit:(C)Z
   7:	ifne	49
   10:	aload_0
   11:	iload_1
   12:	invokeinterface	#124,  2; //InterfaceMethod scala/xml/parsing/TokenTests.isSpace:(C)Z
   17:	ifeq	26
   20:	iload_1
   21:	ldc	#125; //int 9
   23:	if_icmpne	49
   26:	ldc	#127; //String -\()+,./:=?;!*#@$_%
   28:	astore_2
   29:	new	#21; //class scala/collection/immutable/StringOps
   32:	dup
   33:	aload_2
   34:	invokespecial	#25; //Method scala/collection/immutable/StringOps."<init>":(Ljava/lang/String;)V
   37:	iload_1
   38:	invokestatic	#31; //Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
   41:	invokeinterface	#37,  2; //InterfaceMethod scala/collection/SeqLike.contains:(Ljava/lang/Object;)Z
   46:	ifeq	53
   49:	iconst_1
   50:	goto	54
   53:	iconst_0
   54:	ireturn
  LineNumberTable: 
   line 77: 0
   line 78: 26
   line 77: 49

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      55      0    $this       Lscala/xml/parsing/TokenTests;
   0      55      1    ch       C


public static boolean isName(scala.xml.parsing.TokenTests, java.lang.String);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#21; //class scala/collection/immutable/StringOps
   3:	dup
   4:	aload_1
   5:	invokespecial	#25; //Method scala/collection/immutable/StringOps."<init>":(Ljava/lang/String;)V
   8:	invokeinterface	#98,  1; //InterfaceMethod scala/collection/TraversableLike.nonEmpty:()Z
   13:	ifeq	83
   16:	aload_0
   17:	new	#21; //class scala/collection/immutable/StringOps
   20:	dup
   21:	aload_1
   22:	invokespecial	#25; //Method scala/collection/immutable/StringOps."<init>":(Ljava/lang/String;)V
   25:	invokeinterface	#130,  1; //InterfaceMethod scala/collection/IndexedSeqLike.head:()Ljava/lang/Object;
   30:	invokestatic	#108; //Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
   33:	invokeinterface	#133,  2; //InterfaceMethod scala/xml/parsing/TokenTests.isNameStart:(C)Z
   38:	ifeq	83
   41:	getstatic	#47; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   44:	new	#21; //class scala/collection/immutable/StringOps
   47:	dup
   48:	aload_1
   49:	invokespecial	#25; //Method scala/collection/immutable/StringOps."<init>":(Ljava/lang/String;)V
   52:	invokeinterface	#134,  1; //InterfaceMethod scala/collection/IndexedSeqLike.tail:()Ljava/lang/Object;
   57:	checkcast	#136; //class java/lang/String
   60:	invokevirtual	#51; //Method scala/Predef$.augmentString:(Ljava/lang/String;)Lscala/collection/immutable/StringOps;
   63:	new	#138; //class scala/xml/parsing/TokenTests$$anonfun$isName$1
   66:	dup
   67:	aload_0
   68:	invokespecial	#139; //Method scala/xml/parsing/TokenTests$$anonfun$isName$1."<init>":(Lscala/xml/parsing/TokenTests;)V
   71:	invokeinterface	#61,  2; //InterfaceMethod scala/collection/IndexedSeqLike.forall:(Lscala/Function1;)Z
   76:	ifeq	83
   79:	iconst_1
   80:	goto	84
   83:	iconst_0
   84:	ireturn
  LineNumberTable: 
   line 74: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      85      0    $this       Lscala/xml/parsing/TokenTests;
   0      85      1    s       Ljava/lang/String;


public static boolean isNameStart(scala.xml.parsing.TokenTests, char);
  Code:
   Stack=3, Locals=3, Args_size=2
   0:	iload_1
   1:	invokestatic	#145; //Method java/lang/Character.getType:(C)I
   4:	i2b
   5:	istore_2
   6:	iload_2
   7:	lookupswitch{ //5
		1: 181;
		2: 158;
		3: 135;
		5: 112;
		10: 89;
		default: 56 }
   56:	iconst_1
   57:	ifeq	74
   60:	iload_1
   61:	ldc	#146; //int 95
   63:	if_icmpne	70
   66:	iconst_1
   67:	goto	186
   70:	iconst_0
   71:	goto	186
   74:	new	#148; //class scala/MatchError
   77:	dup
   78:	iload_2
   79:	invokestatic	#152; //Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
   82:	invokevirtual	#158; //Method java/lang/Object.toString:()Ljava/lang/String;
   85:	invokespecial	#159; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   88:	athrow
   89:	iconst_1
   90:	ifeq	97
   93:	iconst_1
   94:	goto	186
   97:	new	#148; //class scala/MatchError
   100:	dup
   101:	iload_2
   102:	invokestatic	#152; //Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
   105:	invokevirtual	#158; //Method java/lang/Object.toString:()Ljava/lang/String;
   108:	invokespecial	#159; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   111:	athrow
   112:	iconst_1
   113:	ifeq	120
   116:	iconst_1
   117:	goto	186
   120:	new	#148; //class scala/MatchError
   123:	dup
   124:	iload_2
   125:	invokestatic	#152; //Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
   128:	invokevirtual	#158; //Method java/lang/Object.toString:()Ljava/lang/String;
   131:	invokespecial	#159; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   134:	athrow
   135:	iconst_1
   136:	ifeq	143
   139:	iconst_1
   140:	goto	186
   143:	new	#148; //class scala/MatchError
   146:	dup
   147:	iload_2
   148:	invokestatic	#152; //Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
   151:	invokevirtual	#158; //Method java/lang/Object.toString:()Ljava/lang/String;
   154:	invokespecial	#159; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   157:	athrow
   158:	iconst_1
   159:	ifeq	166
   162:	iconst_1
   163:	goto	186
   166:	new	#148; //class scala/MatchError
   169:	dup
   170:	iload_2
   171:	invokestatic	#152; //Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
   174:	invokevirtual	#158; //Method java/lang/Object.toString:()Ljava/lang/String;
   177:	invokespecial	#159; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   180:	athrow
   181:	iconst_1
   182:	ifeq	187
   185:	iconst_1
   186:	ireturn
   187:	new	#148; //class scala/MatchError
   190:	dup
   191:	iload_2
   192:	invokestatic	#152; //Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
   195:	invokevirtual	#158; //Method java/lang/Object.toString:()Ljava/lang/String;
   198:	invokespecial	#159; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   201:	athrow
  LineNumberTable: 
   line 61: 0
   line 21: 56
   line 65: 60
   line 61: 74
   line 21: 89
   line 64: 93
   line 61: 97
   line 21: 112
   line 64: 116
   line 61: 120
   line 21: 135
   line 64: 139
   line 61: 143
   line 21: 158
   line 64: 162
   line 61: 166
   line 21: 181
   line 64: 185
   line 61: 186

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      202      0    $this       Lscala/xml/parsing/TokenTests;
   0      202      1    ch       C
   6      196      2    temp3       B


public static boolean isNameChar(scala.xml.parsing.TokenTests, char);
  Code:
   Stack=3, Locals=4, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	invokeinterface	#133,  2; //InterfaceMethod scala/xml/parsing/TokenTests.isNameStart:(C)Z
   7:	ifne	198
   10:	iload_1
   11:	invokestatic	#145; //Method java/lang/Character.getType:(C)I
   14:	i2b
   15:	istore_3
   16:	iload_3
   17:	tableswitch{ //4 to 9
		4: 190;
		5: 56;
		6: 167;
		7: 144;
		8: 121;
		9: 98;
		default: 56 }
   56:	iconst_1
   57:	ifeq	83
   60:	ldc	#164; //String .-:
   62:	astore_2
   63:	new	#21; //class scala/collection/immutable/StringOps
   66:	dup
   67:	aload_2
   68:	invokespecial	#25; //Method scala/collection/immutable/StringOps."<init>":(Ljava/lang/String;)V
   71:	iload_1
   72:	invokestatic	#31; //Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
   75:	invokeinterface	#37,  2; //InterfaceMethod scala/collection/SeqLike.contains:(Ljava/lang/Object;)Z
   80:	goto	195
   83:	new	#148; //class scala/MatchError
   86:	dup
   87:	iload_3
   88:	invokestatic	#152; //Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
   91:	invokevirtual	#158; //Method java/lang/Object.toString:()Ljava/lang/String;
   94:	invokespecial	#159; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   97:	athrow
   98:	iconst_1
   99:	ifeq	106
   102:	iconst_1
   103:	goto	195
   106:	new	#148; //class scala/MatchError
   109:	dup
   110:	iload_3
   111:	invokestatic	#152; //Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
   114:	invokevirtual	#158; //Method java/lang/Object.toString:()Ljava/lang/String;
   117:	invokespecial	#159; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   120:	athrow
   121:	iconst_1
   122:	ifeq	129
   125:	iconst_1
   126:	goto	195
   129:	new	#148; //class scala/MatchError
   132:	dup
   133:	iload_3
   134:	invokestatic	#152; //Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
   137:	invokevirtual	#158; //Method java/lang/Object.toString:()Ljava/lang/String;
   140:	invokespecial	#159; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   143:	athrow
   144:	iconst_1
   145:	ifeq	152
   148:	iconst_1
   149:	goto	195
   152:	new	#148; //class scala/MatchError
   155:	dup
   156:	iload_3
   157:	invokestatic	#152; //Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
   160:	invokevirtual	#158; //Method java/lang/Object.toString:()Ljava/lang/String;
   163:	invokespecial	#159; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   166:	athrow
   167:	iconst_1
   168:	ifeq	175
   171:	iconst_1
   172:	goto	195
   175:	new	#148; //class scala/MatchError
   178:	dup
   179:	iload_3
   180:	invokestatic	#152; //Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
   183:	invokevirtual	#158; //Method java/lang/Object.toString:()Ljava/lang/String;
   186:	invokespecial	#159; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   189:	athrow
   190:	iconst_1
   191:	ifeq	204
   194:	iconst_1
   195:	ifeq	202
   198:	iconst_1
   199:	goto	203
   202:	iconst_0
   203:	ireturn
   204:	new	#148; //class scala/MatchError
   207:	dup
   208:	iload_3
   209:	invokestatic	#152; //Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
   212:	invokevirtual	#158; //Method java/lang/Object.toString:()Ljava/lang/String;
   215:	invokespecial	#159; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   218:	athrow
  LineNumberTable: 
   line 43: 0
   line 21: 56
   line 47: 60
   line 43: 83
   line 21: 98
   line 46: 102
   line 43: 106
   line 21: 121
   line 46: 125
   line 43: 129
   line 21: 144
   line 46: 148
   line 43: 152
   line 21: 167
   line 46: 171
   line 43: 175
   line 21: 190
   line 46: 194
   line 43: 195

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      219      0    $this       Lscala/xml/parsing/TokenTests;
   0      219      1    ch       C
   16      182      3    temp2       B
   204      15      3    temp2       B


public static boolean isAlphaDigit(scala.xml.parsing.TokenTests, char);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	invokeinterface	#111,  2; //InterfaceMethod scala/xml/parsing/TokenTests.isAlpha:(C)Z
   7:	ifne	22
   10:	iload_1
   11:	ldc	#166; //int 48
   13:	if_icmplt	26
   16:	iload_1
   17:	ldc	#167; //int 57
   19:	if_icmpgt	26
   22:	iconst_1
   23:	goto	27
   26:	iconst_0
   27:	ireturn
  LineNumberTable: 
   line 32: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      28      0    $this       Lscala/xml/parsing/TokenTests;
   0      28      1    c       C


public static boolean isAlpha(scala.xml.parsing.TokenTests, char);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	iload_1
   1:	ldc	#168; //int 65
   3:	if_icmplt	12
   6:	iload_1
   7:	ldc	#169; //int 90
   9:	if_icmple	24
   12:	iload_1
   13:	ldc	#170; //int 97
   15:	if_icmplt	28
   18:	iload_1
   19:	ldc	#171; //int 122
   21:	if_icmpgt	28
   24:	iconst_1
   25:	goto	29
   28:	iconst_0
   29:	ireturn
  LineNumberTable: 
   line 31: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      30      0    $this       Lscala/xml/parsing/TokenTests;
   0      30      1    c       C


public static final boolean isSpace(scala.xml.parsing.TokenTests, scala.collection.Seq);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	aload_1
   1:	invokeinterface	#98,  1; //InterfaceMethod scala/collection/TraversableLike.nonEmpty:()Z
   6:	ifeq	30
   9:	aload_1
   10:	new	#173; //class scala/xml/parsing/TokenTests$$anonfun$isSpace$1
   13:	dup
   14:	aload_0
   15:	invokespecial	#174; //Method scala/xml/parsing/TokenTests$$anonfun$isSpace$1."<init>":(Lscala/xml/parsing/TokenTests;)V
   18:	invokeinterface	#118,  2; //InterfaceMethod scala/collection/IterableLike.forall:(Lscala/Function1;)Z
   23:	ifeq	30
   26:	iconst_1
   27:	goto	31
   30:	iconst_0
   31:	ireturn
  LineNumberTable: 
   line 28: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      32      0    $this       Lscala/xml/parsing/TokenTests;
   0      32      1    cs       Lscala/collection/Seq;


public static final boolean isSpace(scala.xml.parsing.TokenTests, char);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	iload_1
   1:	lookupswitch{ //4
		9: 136;
		10: 113;
		13: 90;
		32: 67;
		default: 44 }
   44:	iconst_1
   45:	ifeq	52
   48:	iconst_0
   49:	goto	141
   52:	new	#148; //class scala/MatchError
   55:	dup
   56:	iload_1
   57:	invokestatic	#31; //Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
   60:	invokevirtual	#158; //Method java/lang/Object.toString:()Ljava/lang/String;
   63:	invokespecial	#159; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   66:	athrow
   67:	iconst_1
   68:	ifeq	75
   71:	iconst_1
   72:	goto	141
   75:	new	#148; //class scala/MatchError
   78:	dup
   79:	iload_1
   80:	invokestatic	#31; //Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
   83:	invokevirtual	#158; //Method java/lang/Object.toString:()Ljava/lang/String;
   86:	invokespecial	#159; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   89:	athrow
   90:	iconst_1
   91:	ifeq	98
   94:	iconst_1
   95:	goto	141
   98:	new	#148; //class scala/MatchError
   101:	dup
   102:	iload_1
   103:	invokestatic	#31; //Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
   106:	invokevirtual	#158; //Method java/lang/Object.toString:()Ljava/lang/String;
   109:	invokespecial	#159; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   112:	athrow
   113:	iconst_1
   114:	ifeq	121
   117:	iconst_1
   118:	goto	141
   121:	new	#148; //class scala/MatchError
   124:	dup
   125:	iload_1
   126:	invokestatic	#31; //Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
   129:	invokevirtual	#158; //Method java/lang/Object.toString:()Ljava/lang/String;
   132:	invokespecial	#159; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   135:	athrow
   136:	iconst_1
   137:	ifeq	142
   140:	iconst_1
   141:	ireturn
   142:	new	#148; //class scala/MatchError
   145:	dup
   146:	iload_1
   147:	invokestatic	#31; //Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
   150:	invokevirtual	#158; //Method java/lang/Object.toString:()Ljava/lang/String;
   153:	invokespecial	#159; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   156:	athrow
  LineNumberTable: 
   line 23: 0
   line 21: 44
   line 25: 48
   line 23: 52
   line 21: 67
   line 24: 71
   line 23: 75
   line 21: 90
   line 24: 94
   line 23: 98
   line 21: 113
   line 24: 117
   line 23: 121
   line 21: 136
   line 24: 140
   line 23: 141

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      157      0    $this       Lscala/xml/parsing/TokenTests;
   0      157      1    ch       C


}

