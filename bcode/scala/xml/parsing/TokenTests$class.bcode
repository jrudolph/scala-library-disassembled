Compiled from "TokenTests.scala"
public abstract class scala.xml.parsing.TokenTests$class extends java.lang.Object
  SourceFile: "TokenTests.scala"
  Scala: length = 0x
   
  InnerClass: 
   public final $anonfun$isName$1=class scala/xml/parsing/TokenTests$$anonfun$isName$1 of class scala/xml/parsing/TokenTests
   public final $anonfun$isSpace$1=class scala/xml/parsing/TokenTests$$anonfun$isSpace$1 of class scala/xml/parsing/TokenTests
   public final $anonfun$checkPubID$1=class scala/xml/parsing/TokenTests$$anonfun$checkPubID$1 of class scala/xml/parsing/TokenTests
   public final $anonfun$checkSysID$1=class scala/xml/parsing/TokenTests$$anonfun$checkSysID$1 of class scala/xml/parsing/TokenTests
   public final $anonfun$isValidIANAEncoding$1=class scala/xml/parsing/TokenTests$$anonfun$isValidIANAEncoding$1 of class scala/xml/parsing/TokenTests
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	TokenTests.scala;
Asciz	isSpace;
Asciz	(Lscala/xml/parsing/TokenTests;C)Z;
Asciz	Code;
Asciz	LineNumberTable;
Asciz	$this;
Asciz	Lscala/xml/parsing/TokenTests;;
Asciz	ch;
Asciz	C;
Asciz	temp1;
Asciz	LocalVariableTable;
Asciz	(Lscala/xml/parsing/TokenTests;Lscala/collection/Seq;)Z;
Asciz	scala/collection/TraversableLike;
class	scala/collection/TraversableLike
Asciz	nonEmpty;
Asciz	()Z;
NameAndType	nonEmpty:()Z
InterfaceMethod	scala/collection/TraversableLike.nonEmpty:()Z
Asciz	scala/xml/parsing/TokenTests$$anonfun$isSpace$1;
class	scala/xml/parsing/TokenTests$$anonfun$isSpace$1
Asciz	<init>;
Asciz	(Lscala/xml/parsing/TokenTests;)V;
NameAndType	"<init>":(Lscala/xml/parsing/TokenTests;)V
Method	scala/xml/parsing/TokenTests$$anonfun$isSpace$1."<init>":(Lscala/xml/parsing/TokenTests;)V
Asciz	scala/collection/IterableLike;
class	scala/collection/IterableLike
Asciz	forall;
Asciz	(Lscala/Function1;)Z;
NameAndType	forall:(Lscala/Function1;)Z
InterfaceMethod	scala/collection/IterableLike.forall:(Lscala/Function1;)Z
Asciz	cs;
Asciz	Lscala/collection/Seq;;
Asciz	isAlpha;
int	65;
int	90;
int	97;
int	122;
Asciz	c;
Asciz	isAlphaDigit;
Asciz	scala/xml/parsing/TokenTests;
class	scala/xml/parsing/TokenTests
Asciz	(C)Z;
NameAndType	isAlpha:(C)Z
InterfaceMethod	scala/xml/parsing/TokenTests.isAlpha:(C)Z
int	48;
int	57;
Asciz	isNameChar;
Asciz	isNameStart;
NameAndType	isNameStart:(C)Z
InterfaceMethod	scala/xml/parsing/TokenTests.isNameStart:(C)Z
Asciz	java/lang/Character;
class	java/lang/Character
Asciz	getType;
Asciz	(C)I;
NameAndType	getType:(C)I
Method	java/lang/Character.getType:(C)I
Asciz	scala/Predef$;
class	scala/Predef$
Asciz	MODULE$;
Asciz	Lscala/Predef$;;
NameAndType	MODULE$:Lscala/Predef$;
Field	scala/Predef$.MODULE$:Lscala/Predef$;
Asciz	.-:;
String	.-:
Asciz	augmentString;
Asciz	(Ljava/lang/String;)Lscala/collection/immutable/StringOps;;
NameAndType	augmentString:(Ljava/lang/String;)Lscala/collection/immutable/StringOps;
Method	scala/Predef$.augmentString:(Ljava/lang/String;)Lscala/collection/immutable/StringOps;
Asciz	scala/runtime/BoxesRunTime;
class	scala/runtime/BoxesRunTime
Asciz	boxToCharacter;
Asciz	(C)Ljava/lang/Character;;
NameAndType	boxToCharacter:(C)Ljava/lang/Character;
Method	scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
Asciz	scala/collection/SeqLike;
class	scala/collection/SeqLike
Asciz	contains;
Asciz	(Ljava/lang/Object;)Z;
NameAndType	contains:(Ljava/lang/Object;)Z
InterfaceMethod	scala/collection/SeqLike.contains:(Ljava/lang/Object;)Z
Asciz	temp2;
Asciz	B;
int	95;
Asciz	temp3;
Asciz	isName;
Asciz	(Lscala/xml/parsing/TokenTests;Ljava/lang/String;)Z;
Asciz	scala/collection/IndexedSeqLike;
class	scala/collection/IndexedSeqLike
Asciz	head;
Asciz	()Ljava/lang/Object;;
NameAndType	head:()Ljava/lang/Object;
InterfaceMethod	scala/collection/IndexedSeqLike.head:()Ljava/lang/Object;
Asciz	unboxToChar;
Asciz	(Ljava/lang/Object;)C;
NameAndType	unboxToChar:(Ljava/lang/Object;)C
Method	scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
Asciz	tail;
NameAndType	tail:()Ljava/lang/Object;
InterfaceMethod	scala/collection/IndexedSeqLike.tail:()Ljava/lang/Object;
Asciz	java/lang/String;
class	java/lang/String
Asciz	scala/xml/parsing/TokenTests$$anonfun$isName$1;
class	scala/xml/parsing/TokenTests$$anonfun$isName$1
Method	scala/xml/parsing/TokenTests$$anonfun$isName$1."<init>":(Lscala/xml/parsing/TokenTests;)V
InterfaceMethod	scala/collection/IndexedSeqLike.forall:(Lscala/Function1;)Z
Asciz	s;
Asciz	Ljava/lang/String;;
Asciz	isPubIDChar;
NameAndType	isAlphaDigit:(C)Z
InterfaceMethod	scala/xml/parsing/TokenTests.isAlphaDigit:(C)Z
NameAndType	isSpace:(C)Z
InterfaceMethod	scala/xml/parsing/TokenTests.isSpace:(C)Z
int	9;
Asciz	-\()+,./:=?;!*#@$_%;
String	-\()+,./:=?;!*#@$_%
Asciz	isValidIANAEncoding;
InterfaceMethod	scala/collection/IterableLike.head:()Ljava/lang/Object;
InterfaceMethod	scala/collection/TraversableLike.tail:()Ljava/lang/Object;
Asciz	scala/xml/parsing/TokenTests$$anonfun$isValidIANAEncoding$1;
class	scala/xml/parsing/TokenTests$$anonfun$isValidIANAEncoding$1
Method	scala/xml/parsing/TokenTests$$anonfun$isValidIANAEncoding$1."<init>":(Lscala/xml/parsing/TokenTests;)V
Asciz	ianaEncoding;
Asciz	checkSysID;
Asciz	scala/collection/immutable/List$;
class	scala/collection/immutable/List$
Asciz	Lscala/collection/immutable/List$;;
NameAndType	MODULE$:Lscala/collection/immutable/List$;
Field	scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
int	34;
int	39;
Asciz	wrapCharArray;
Asciz	([C)Lscala/collection/mutable/WrappedArray;;
NameAndType	wrapCharArray:([C)Lscala/collection/mutable/WrappedArray;
Method	scala/Predef$.wrapCharArray:([C)Lscala/collection/mutable/WrappedArray;
Asciz	apply;
Asciz	(Lscala/collection/Seq;)Lscala/collection/immutable/List;;
NameAndType	apply:(Lscala/collection/Seq;)Lscala/collection/immutable/List;
Method	scala/collection/immutable/List$.apply:(Lscala/collection/Seq;)Lscala/collection/immutable/List;
Asciz	scala/xml/parsing/TokenTests$$anonfun$checkSysID$1;
class	scala/xml/parsing/TokenTests$$anonfun$checkSysID$1
Asciz	(Lscala/xml/parsing/TokenTests;Ljava/lang/String;)V;
NameAndType	"<init>":(Lscala/xml/parsing/TokenTests;Ljava/lang/String;)V
Method	scala/xml/parsing/TokenTests$$anonfun$checkSysID$1."<init>":(Lscala/xml/parsing/TokenTests;Ljava/lang/String;)V
Asciz	scala/collection/LinearSeqLike;
class	scala/collection/LinearSeqLike
Asciz	exists;
NameAndType	exists:(Lscala/Function1;)Z
InterfaceMethod	scala/collection/LinearSeqLike.exists:(Lscala/Function1;)Z
Asciz	s$1;
Asciz	checkPubID;
Asciz	scala/xml/parsing/TokenTests$$anonfun$checkPubID$1;
class	scala/xml/parsing/TokenTests$$anonfun$checkPubID$1
Method	scala/xml/parsing/TokenTests$$anonfun$checkPubID$1."<init>":(Lscala/xml/parsing/TokenTests;)V
Asciz	charOK$1;
Asciz	._-;
String	._-
Asciz	$init$;
Asciz	Scala;
Asciz	InnerClasses;
Asciz	$anonfun$isName$1;
Asciz	$anonfun$isSpace$1;
Asciz	$anonfun$checkPubID$1;
Asciz	$anonfun$checkSysID$1;
Asciz	$anonfun$isValidIANAEncoding$1;
Asciz	scala/xml/parsing/TokenTests$class;
class	scala/xml/parsing/TokenTests$class
Asciz	java/lang/Object;
class	java/lang/Object

{
public static final boolean isSpace(scala.xml.parsing.TokenTests, char);
  Signature: (Lscala/xml/parsing/TokenTests;C)Z
  Code:
   Stack=1, Locals=3, Args_size=2
	iload_1
	istore_2
	iload_2
	lookupswitch{ //4
		9: 60;
		10: 56;
		13: 52;
		32: 48;
		default: 44 }
	iconst_0
	goto	l1 // ireturn
	iconst_1
	goto	l1 // ireturn
	iconst_1
	goto	l1 // ireturn
	iconst_1
	goto	l1 // ireturn
	iconst_1
l1	ireturn
  Labels:
   	l1 = 61 // ireturn
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      62      0    $this       Lscala/xml/parsing/TokenTests;
   0      62      1    ch       C
   2      60      2    temp1       C


public static final boolean isSpace(scala.xml.parsing.TokenTests, scala.collection.Seq);
  Signature: (Lscala/xml/parsing/TokenTests;Lscala/collection/Seq;)Z
  Code:
   Stack=4, Locals=2, Args_size=2
	aload_1
	invokeinterface	InterfaceMethod scala/collection/TraversableLike.nonEmpty:()Z
	ifeq	l1 // iconst_0
	aload_1
	new	class scala/xml/parsing/TokenTests$$anonfun$isSpace$1
	dup
	aload_0
	invokespecial	Method scala/xml/parsing/TokenTests$$anonfun$isSpace$1."<init>":(Lscala/xml/parsing/TokenTests;)V
	invokeinterface	InterfaceMethod scala/collection/IterableLike.forall:(Lscala/Function1;)Z
	ifeq	l1 // iconst_0
	iconst_1
	goto	l2 // ireturn
l1	iconst_0
l2	ireturn
  Labels:
   	l1 = 30 // iconst_0
   	l2 = 31 // ireturn
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      32      0    $this       Lscala/xml/parsing/TokenTests;
   0      32      1    cs       Lscala/collection/Seq;


public static boolean isAlpha(scala.xml.parsing.TokenTests, char);
  Signature: (Lscala/xml/parsing/TokenTests;C)Z
  Code:
   Stack=2, Locals=2, Args_size=2
	iload_1
	ldc	int 65
	if_icmplt	l1 // iload_1
	iload_1
	ldc	int 90
	if_icmple	l2 // iconst_1
l1	iload_1
	ldc	int 97
	if_icmplt	l3 // iconst_0
	iload_1
	ldc	int 122
	if_icmpgt	l3 // iconst_0
l2	iconst_1
	goto	l4 // ireturn
l3	iconst_0
l4	ireturn
  Labels:
   	l1 = 12 // iload_1
   	l2 = 24 // iconst_1
   	l3 = 28 // iconst_0
   	l4 = 29 // ireturn
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      30      0    $this       Lscala/xml/parsing/TokenTests;
   0      30      1    c       C


public static boolean isAlphaDigit(scala.xml.parsing.TokenTests, char);
  Signature: (Lscala/xml/parsing/TokenTests;C)Z
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	iload_1
	invokeinterface	InterfaceMethod scala/xml/parsing/TokenTests.isAlpha:(C)Z
	ifne	l1 // iconst_1
	iload_1
	ldc	int 48
	if_icmplt	l2 // iconst_0
	iload_1
	ldc	int 57
	if_icmpgt	l2 // iconst_0
l1	iconst_1
	goto	l3 // ireturn
l2	iconst_0
l3	ireturn
  Labels:
   	l1 = 22 // iconst_1
   	l2 = 26 // iconst_0
   	l3 = 27 // ireturn
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      28      0    $this       Lscala/xml/parsing/TokenTests;
   0      28      1    c       C


public static boolean isNameChar(scala.xml.parsing.TokenTests, char);
  Signature: (Lscala/xml/parsing/TokenTests;C)Z
  Code:
   Stack=2, Locals=3, Args_size=2
	aload_0
	iload_1
	invokeinterface	InterfaceMethod scala/xml/parsing/TokenTests.isNameStart:(C)Z
	ifne	l1 // iconst_1
	iload_1
	invokestatic	Method java/lang/Character.getType:(C)I
	i2b
	istore_2
	iload_2
	tableswitch{ //4 to 9
		4: 92;
		5: 56;
		6: 88;
		7: 84;
		8: 80;
		9: 76;
		default: 56 }
	getstatic	Field scala/Predef$.MODULE$:Lscala/Predef$;
	ldc	String .-:
	invokevirtual	Method scala/Predef$.augmentString:(Ljava/lang/String;)Lscala/collection/immutable/StringOps;
	iload_1
	invokestatic	Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
	invokeinterface	InterfaceMethod scala/collection/SeqLike.contains:(Ljava/lang/Object;)Z
	goto	l2 // ifeq
	iconst_1
	goto	l2 // ifeq
	iconst_1
	goto	l2 // ifeq
	iconst_1
	goto	l2 // ifeq
	iconst_1
	goto	l2 // ifeq
	iconst_1
l2	ifeq	l3 // iconst_0
l1	iconst_1
	goto	l4 // ireturn
l3	iconst_0
l4	ireturn
  Labels:
   	l2 = 93 // ifeq
   	l1 = 96 // iconst_1
   	l3 = 100 // iconst_0
   	l4 = 101 // ireturn
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      102      0    $this       Lscala/xml/parsing/TokenTests;
   0      102      1    ch       C
   16      80      2    temp2       B


public static boolean isNameStart(scala.xml.parsing.TokenTests, char);
  Signature: (Lscala/xml/parsing/TokenTests;C)Z
  Code:
   Stack=2, Locals=3, Args_size=2
	iload_1
	invokestatic	Method java/lang/Character.getType:(C)I
	i2b
	istore_2
	iload_2
	lookupswitch{ //5
		1: 86;
		2: 82;
		3: 78;
		5: 74;
		10: 70;
		default: 56 }
	iload_1
	ldc	int 95
	if_icmpne	l1 // iconst_0
	iconst_1
	goto	l2 // ireturn
l1	iconst_0
	goto	l2 // ireturn
	iconst_1
	goto	l2 // ireturn
	iconst_1
	goto	l2 // ireturn
	iconst_1
	goto	l2 // ireturn
	iconst_1
	goto	l2 // ireturn
	iconst_1
l2	ireturn
  Labels:
   	l1 = 66 // iconst_0
   	l2 = 87 // ireturn
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      88      0    $this       Lscala/xml/parsing/TokenTests;
   0      88      1    ch       C
   6      82      2    temp3       B


public static boolean isName(scala.xml.parsing.TokenTests, java.lang.String);
  Signature: (Lscala/xml/parsing/TokenTests;Ljava/lang/String;)Z
  Code:
   Stack=4, Locals=2, Args_size=2
	getstatic	Field scala/Predef$.MODULE$:Lscala/Predef$;
	aload_1
	invokevirtual	Method scala/Predef$.augmentString:(Ljava/lang/String;)Lscala/collection/immutable/StringOps;
	invokeinterface	InterfaceMethod scala/collection/TraversableLike.nonEmpty:()Z
	ifeq	l1 // iconst_0
	aload_0
	getstatic	Field scala/Predef$.MODULE$:Lscala/Predef$;
	aload_1
	invokevirtual	Method scala/Predef$.augmentString:(Ljava/lang/String;)Lscala/collection/immutable/StringOps;
	invokeinterface	InterfaceMethod scala/collection/IndexedSeqLike.head:()Ljava/lang/Object;
	invokestatic	Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
	invokeinterface	InterfaceMethod scala/xml/parsing/TokenTests.isNameStart:(C)Z
	ifeq	l1 // iconst_0
	getstatic	Field scala/Predef$.MODULE$:Lscala/Predef$;
	getstatic	Field scala/Predef$.MODULE$:Lscala/Predef$;
	aload_1
	invokevirtual	Method scala/Predef$.augmentString:(Ljava/lang/String;)Lscala/collection/immutable/StringOps;
	invokeinterface	InterfaceMethod scala/collection/IndexedSeqLike.tail:()Ljava/lang/Object;
	checkcast	class java/lang/String
	invokevirtual	Method scala/Predef$.augmentString:(Ljava/lang/String;)Lscala/collection/immutable/StringOps;
	new	class scala/xml/parsing/TokenTests$$anonfun$isName$1
	dup
	aload_0
	invokespecial	Method scala/xml/parsing/TokenTests$$anonfun$isName$1."<init>":(Lscala/xml/parsing/TokenTests;)V
	invokeinterface	InterfaceMethod scala/collection/IndexedSeqLike.forall:(Lscala/Function1;)Z
	ifeq	l1 // iconst_0
	iconst_1
	goto	l2 // ireturn
l1	iconst_0
l2	ireturn
  Labels:
   	l1 = 80 // iconst_0
   	l2 = 81 // ireturn
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      82      0    $this       Lscala/xml/parsing/TokenTests;
   0      82      1    s       Ljava/lang/String;


public static boolean isPubIDChar(scala.xml.parsing.TokenTests, char);
  Signature: (Lscala/xml/parsing/TokenTests;C)Z
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	iload_1
	invokeinterface	InterfaceMethod scala/xml/parsing/TokenTests.isAlphaDigit:(C)Z
	ifne	l1 // iconst_1
	aload_0
	iload_1
	invokeinterface	InterfaceMethod scala/xml/parsing/TokenTests.isSpace:(C)Z
	ifeq	l2 // getstatic
	iload_1
	ldc	int 9
	if_icmpne	l1 // iconst_1
l2	getstatic	Field scala/Predef$.MODULE$:Lscala/Predef$;
	ldc	String -\()+,./:=?;!*#@$_%
	invokevirtual	Method scala/Predef$.augmentString:(Ljava/lang/String;)Lscala/collection/immutable/StringOps;
	iload_1
	invokestatic	Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
	invokeinterface	InterfaceMethod scala/collection/SeqLike.contains:(Ljava/lang/Object;)Z
	ifeq	l3 // iconst_0
l1	iconst_1
	goto	l4 // ireturn
l3	iconst_0
l4	ireturn
  Labels:
   	l2 = 26 // getstatic
   	l1 = 46 // iconst_1
   	l3 = 50 // iconst_0
   	l4 = 51 // ireturn
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      52      0    $this       Lscala/xml/parsing/TokenTests;
   0      52      1    ch       C


public static boolean isValidIANAEncoding(scala.xml.parsing.TokenTests, scala.collection.Seq);
  Signature: (Lscala/xml/parsing/TokenTests;Lscala/collection/Seq;)Z
  Code:
   Stack=4, Locals=2, Args_size=2
	aload_1
	invokeinterface	InterfaceMethod scala/collection/TraversableLike.nonEmpty:()Z
	ifeq	l1 // iconst_0
	aload_0
	aload_1
	invokeinterface	InterfaceMethod scala/collection/IterableLike.head:()Ljava/lang/Object;
	invokestatic	Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
	invokeinterface	InterfaceMethod scala/xml/parsing/TokenTests.isAlpha:(C)Z
	ifeq	l1 // iconst_0
	aload_1
	invokeinterface	InterfaceMethod scala/collection/TraversableLike.tail:()Ljava/lang/Object;
	checkcast	class scala/collection/IterableLike
	new	class scala/xml/parsing/TokenTests$$anonfun$isValidIANAEncoding$1
	dup
	aload_0
	invokespecial	Method scala/xml/parsing/TokenTests$$anonfun$isValidIANAEncoding$1."<init>":(Lscala/xml/parsing/TokenTests;)V
	invokeinterface	InterfaceMethod scala/collection/IterableLike.forall:(Lscala/Function1;)Z
	ifeq	l1 // iconst_0
	iconst_1
	goto	l2 // ireturn
l1	iconst_0
l2	ireturn
  Labels:
   	l1 = 56 // iconst_0
   	l2 = 57 // ireturn
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      58      0    $this       Lscala/xml/parsing/TokenTests;
   0      58      1    ianaEncoding       Lscala/collection/Seq;


public static boolean checkSysID(scala.xml.parsing.TokenTests, java.lang.String);
  Signature: (Lscala/xml/parsing/TokenTests;Ljava/lang/String;)Z
  Code:
   Stack=6, Locals=2, Args_size=2
	getstatic	Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
	getstatic	Field scala/Predef$.MODULE$:Lscala/Predef$;
	iconst_2
	newarray char
	dup
	iconst_0
	ldc	int 34
	castore
	dup
	iconst_1
	ldc	int 39
	castore
	invokevirtual	Method scala/Predef$.wrapCharArray:([C)Lscala/collection/mutable/WrappedArray;
	invokevirtual	Method scala/collection/immutable/List$.apply:(Lscala/collection/Seq;)Lscala/collection/immutable/List;
	new	class scala/xml/parsing/TokenTests$$anonfun$checkSysID$1
	dup
	aload_0
	aload_1
	invokespecial	Method scala/xml/parsing/TokenTests$$anonfun$checkSysID$1."<init>":(Lscala/xml/parsing/TokenTests;Ljava/lang/String;)V
	invokeinterface	InterfaceMethod scala/collection/LinearSeqLike.exists:(Lscala/Function1;)Z
	ireturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      40      0    $this       Lscala/xml/parsing/TokenTests;
   0      40      1    s$1       Ljava/lang/String;


public static boolean checkPubID(scala.xml.parsing.TokenTests, java.lang.String);
  Signature: (Lscala/xml/parsing/TokenTests;Ljava/lang/String;)Z
  Code:
   Stack=4, Locals=2, Args_size=2
	getstatic	Field scala/Predef$.MODULE$:Lscala/Predef$;
	aload_1
	invokevirtual	Method scala/Predef$.augmentString:(Ljava/lang/String;)Lscala/collection/immutable/StringOps;
	new	class scala/xml/parsing/TokenTests$$anonfun$checkPubID$1
	dup
	aload_0
	invokespecial	Method scala/xml/parsing/TokenTests$$anonfun$checkPubID$1."<init>":(Lscala/xml/parsing/TokenTests;)V
	invokeinterface	InterfaceMethod scala/collection/IndexedSeqLike.forall:(Lscala/Function1;)Z
	ireturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      21      0    $this       Lscala/xml/parsing/TokenTests;
   0      21      1    s       Ljava/lang/String;


public static final boolean charOK$1(scala.xml.parsing.TokenTests, char);
  Signature: (Lscala/xml/parsing/TokenTests;C)Z
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	iload_1
	invokeinterface	InterfaceMethod scala/xml/parsing/TokenTests.isAlphaDigit:(C)Z
	ifne	l1 // iconst_1
	getstatic	Field scala/Predef$.MODULE$:Lscala/Predef$;
	ldc	String ._-
	invokevirtual	Method scala/Predef$.augmentString:(Ljava/lang/String;)Lscala/collection/immutable/StringOps;
	iload_1
	invokestatic	Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
	invokeinterface	InterfaceMethod scala/collection/SeqLike.contains:(Ljava/lang/Object;)Z
	ifeq	l2 // iconst_0
l1	iconst_1
	goto	l3 // ireturn
l2	iconst_0
l3	ireturn
  Labels:
   	l1 = 30 // iconst_1
   	l2 = 34 // iconst_0
   	l3 = 35 // ireturn
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      36      0    $this       Lscala/xml/parsing/TokenTests;
   0      36      1    c       C


public static void $init$(scala.xml.parsing.TokenTests);
  Signature: (Lscala/xml/parsing/TokenTests;)V
  Code:
   Stack=0, Locals=1, Args_size=1
	return
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      1      0    $this       Lscala/xml/parsing/TokenTests;


}

