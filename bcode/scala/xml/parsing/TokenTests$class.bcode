Compiled from "TokenTests.scala"
public abstract class scala.xml.parsing.TokenTests$class extends java.lang.Object
  SourceFile: "TokenTests.scala"
  Scala: length = 0x
   
  InnerClass: 
   public final #146= #134 of #50; //$anonfun$isSpace$1=class scala/xml/parsing/TokenTests$$anonfun$isSpace$1 of class scala/xml/parsing/TokenTests
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	TokenTests.scala;
const #3 = Asciz	$init$;
const #4 = Asciz	(Lscala/xml/parsing/TokenTests;)V;
const #5 = Asciz	Code;
const #6 = Asciz	LineNumberTable;
const #7 = Asciz	$this;
const #8 = Asciz	Lscala/xml/parsing/TokenTests;;
const #9 = Asciz	LocalVariableTable;
const #10 = Asciz	gd1$1;
const #11 = Asciz	(Lscala/xml/parsing/TokenTests;C)Z;
const #12 = int	48;
const #13 = int	57;
const #14 = int	97;
const #15 = int	122;
const #16 = int	65;
const #17 = int	90;
const #18 = Asciz	checkPubID;
const #19 = Asciz	(Lscala/xml/parsing/TokenTests;Ljava/lang/String;)Z;
const #20 = Asciz	java/lang/String;
const #21 = class	#20;	//  java/lang/String
const #22 = Asciz	length;
const #23 = Asciz	()I;
const #24 = NameAndType	#22:#23;//  length:()I
const #25 = Method	#21.#24;	//  java/lang/String.length:()I
const #26 = Asciz	scala/Predef$;
const #27 = class	#26;	//  scala/Predef$
const #28 = Asciz	MODULE$;
const #29 = Asciz	Lscala/Predef$;;
const #30 = NameAndType	#28:#29;//  MODULE$:Lscala/Predef$;
const #31 = Field	#27.#30;	//  scala/Predef$.MODULE$:Lscala/Predef$;
const #32 = Asciz	stringWrapper;
const #33 = Asciz	(Ljava/lang/String;)Lscala/runtime/RichString;;
const #34 = NameAndType	#32:#33;//  stringWrapper:(Ljava/lang/String;)Lscala/runtime/RichString;
const #35 = Method	#27.#34;	//  scala/Predef$.stringWrapper:(Ljava/lang/String;)Lscala/runtime/RichString;
const #36 = Asciz	scala/collection/generic/VectorTemplate;
const #37 = class	#36;	//  scala/collection/generic/VectorTemplate
const #38 = Asciz	iterator;
const #39 = Asciz	()Lscala/collection/Iterator;;
const #40 = NameAndType	#38:#39;//  iterator:()Lscala/collection/Iterator;
const #41 = InterfaceMethod	#37.#40;	//  scala/collection/generic/VectorTemplate.iterator:()Lscala/collection/Iterator;
const #42 = int	32;
const #43 = Asciz	scala/collection/Iterator;
const #44 = class	#43;	//  scala/collection/Iterator
const #45 = Asciz	hasNext;
const #46 = Asciz	()Z;
const #47 = NameAndType	#45:#46;//  hasNext:()Z
const #48 = InterfaceMethod	#44.#47;	//  scala/collection/Iterator.hasNext:()Z
const #49 = Asciz	scala/xml/parsing/TokenTests;
const #50 = class	#49;	//  scala/xml/parsing/TokenTests
const #51 = Asciz	isPubIDChar;
const #52 = Asciz	(C)Z;
const #53 = NameAndType	#51:#52;//  isPubIDChar:(C)Z
const #54 = InterfaceMethod	#50.#53;	//  scala/xml/parsing/TokenTests.isPubIDChar:(C)Z
const #55 = Asciz	next;
const #56 = Asciz	()Ljava/lang/Object;;
const #57 = NameAndType	#55:#56;//  next:()Ljava/lang/Object;
const #58 = InterfaceMethod	#44.#57;	//  scala/collection/Iterator.next:()Ljava/lang/Object;
const #59 = Asciz	scala/runtime/BoxesRunTime;
const #60 = class	#59;	//  scala/runtime/BoxesRunTime
const #61 = Asciz	unboxToChar;
const #62 = Asciz	(Ljava/lang/Object;)C;
const #63 = NameAndType	#61:#62;//  unboxToChar:(Ljava/lang/Object;)C
const #64 = Method	#60.#63;	//  scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
const #65 = Asciz	s;
const #66 = Asciz	Ljava/lang/String;;
const #67 = Asciz	y;
const #68 = Asciz	Lscala/collection/Iterator;;
const #69 = Asciz	c;
const #70 = Asciz	C;
const #71 = Asciz	checkSysID;
const #72 = int	34;
const #73 = Asciz	indexOf;
const #74 = Asciz	(I)I;
const #75 = NameAndType	#73:#74;//  indexOf:(I)I
const #76 = Method	#21.#75;	//  java/lang/String.indexOf:(I)I
const #77 = int	39;
const #78 = Asciz	isValidIANAEncoding;
const #79 = Asciz	(Lscala/xml/parsing/TokenTests;Lscala/collection/Sequence;)Z;
const #80 = Asciz	scala/collection/generic/IterableTemplate;
const #81 = class	#80;	//  scala/collection/generic/IterableTemplate
const #82 = InterfaceMethod	#81.#40;	//  scala/collection/generic/IterableTemplate.iterator:()Lscala/collection/Iterator;
const #83 = int	46;
const #84 = int	95;
const #85 = int	45;
const #86 = Asciz	ianaEncoding;
const #87 = Asciz	Lscala/collection/Sequence;;
const #88 = Asciz	it;
const #89 = Asciz	boxToCharacter;
const #90 = Asciz	(C)Ljava/lang/Character;;
const #91 = NameAndType	#89:#90;//  boxToCharacter:(C)Ljava/lang/Character;
const #92 = Method	#60.#91;	//  scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
const #93 = Asciz	equals;
const #94 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)Z;
const #95 = NameAndType	#93:#94;//  equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
const #96 = Method	#60.#95;	//  scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
const #97 = int	13;
const #98 = int	10;
const #99 = Asciz	scala/xml/parsing/TokenTests$class;
const #100 = class	#99;	//  scala/xml/parsing/TokenTests$class
const #101 = NameAndType	#10:#11;//  gd1$1:(Lscala/xml/parsing/TokenTests;C)Z
const #102 = Method	#100.#101;	//  scala/xml/parsing/TokenTests$class.gd1$1:(Lscala/xml/parsing/TokenTests;C)Z
const #103 = Asciz	ch$1;
const #104 = Asciz	temp16;
const #105 = Asciz	isName;
const #106 = Asciz	isNameStart;
const #107 = NameAndType	#106:#52;//  isNameStart:(C)Z
const #108 = InterfaceMethod	#50.#107;	//  scala/xml/parsing/TokenTests.isNameStart:(C)Z
const #109 = Asciz	isNameChar;
const #110 = NameAndType	#109:#52;//  isNameChar:(C)Z
const #111 = InterfaceMethod	#50.#110;	//  scala/xml/parsing/TokenTests.isNameChar:(C)Z
const #112 = Asciz	java/lang/Character;
const #113 = class	#112;	//  java/lang/Character
const #114 = Asciz	getType;
const #115 = Asciz	(C)I;
const #116 = NameAndType	#114:#115;//  getType:(C)I
const #117 = Method	#113.#116;	//  java/lang/Character.getType:(C)I
const #118 = Asciz	boxToByte;
const #119 = Asciz	(B)Ljava/lang/Byte;;
const #120 = NameAndType	#118:#119;//  boxToByte:(B)Ljava/lang/Byte;
const #121 = Method	#60.#120;	//  scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
const #122 = Asciz	boxToInteger;
const #123 = Asciz	(I)Ljava/lang/Integer;;
const #124 = NameAndType	#122:#123;//  boxToInteger:(I)Ljava/lang/Integer;
const #125 = Method	#60.#124;	//  scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
const #126 = Asciz	ch;
const #127 = Asciz	temp10;
const #128 = Asciz	B;
const #129 = Asciz	temp9;
const #130 = Asciz	temp8;
const #131 = Asciz	temp2;
const #132 = Asciz	isSpace;
const #133 = Asciz	scala/xml/parsing/TokenTests$$anonfun$isSpace$1;
const #134 = class	#133;	//  scala/xml/parsing/TokenTests$$anonfun$isSpace$1
const #135 = Asciz	<init>;
const #136 = NameAndType	#135:#4;//  "<init>":(Lscala/xml/parsing/TokenTests;)V
const #137 = Method	#134.#136;	//  scala/xml/parsing/TokenTests$$anonfun$isSpace$1."<init>":(Lscala/xml/parsing/TokenTests;)V
const #138 = Asciz	forall;
const #139 = Asciz	(Lscala/Function1;)Z;
const #140 = NameAndType	#138:#139;//  forall:(Lscala/Function1;)Z
const #141 = InterfaceMethod	#44.#140;	//  scala/collection/Iterator.forall:(Lscala/Function1;)Z
const #142 = Asciz	cs;
const #143 = Asciz	temp1;
const #144 = Asciz	Scala;
const #145 = Asciz	InnerClasses;
const #146 = Asciz	$anonfun$isSpace$1;
const #147 = Asciz	java/lang/Object;
const #148 = class	#147;	//  java/lang/Object

{
public static void $init$(scala.xml.parsing.TokenTests);
  Code:
   Stack=0, Locals=1, Args_size=1
   0:	return
  LineNumberTable: 
   line 19: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      1      0    $this       Lscala/xml/parsing/TokenTests;


public static boolean checkPubID(scala.xml.parsing.TokenTests, java.lang.String);
  Code:
   Stack=2, Locals=4, Args_size=2
   0:	aload_1
   1:	invokevirtual	#25; //Method java/lang/String.length:()I
   4:	iconst_0
   5:	if_icmple	73
   8:	getstatic	#31; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   11:	aload_1
   12:	invokevirtual	#35; //Method scala/Predef$.stringWrapper:(Ljava/lang/String;)Lscala/runtime/RichString;
   15:	invokeinterface	#41,  1; //InterfaceMethod scala/collection/generic/VectorTemplate.iterator:()Lscala/collection/Iterator;
   20:	astore_2
   21:	ldc	#42; //int 32
   23:	istore_3
   24:	aload_2
   25:	invokeinterface	#48,  1; //InterfaceMethod scala/collection/Iterator.hasNext:()Z
   30:	ifeq	56
   33:	aload_0
   34:	iload_3
   35:	invokeinterface	#54,  2; //InterfaceMethod scala/xml/parsing/TokenTests.isPubIDChar:(C)Z
   40:	ifeq	56
   43:	aload_2
   44:	invokeinterface	#58,  1; //InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
   49:	invokestatic	#64; //Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
   52:	istore_3
   53:	goto	24
   56:	aload_2
   57:	invokeinterface	#48,  1; //InterfaceMethod scala/collection/Iterator.hasNext:()Z
   62:	ifeq	69
   65:	iconst_0
   66:	goto	74
   69:	iconst_1
   70:	goto	74
   73:	iconst_1
   74:	ireturn
  LineNumberTable: 
   line 134: 0
   line 135: 8
   line 136: 21
   line 137: 24
   line 139: 43
   line 141: 56
   line 144: 73
   line 134: 74

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      75      0    $this       Lscala/xml/parsing/TokenTests;
   0      75      1    s       Ljava/lang/String;
   21      52      2    y       Lscala/collection/Iterator;
   24      49      3    c       C


public static boolean checkSysID(scala.xml.parsing.TokenTests, java.lang.String);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_1
   1:	ldc	#72; //int 34
   3:	invokevirtual	#76; //Method java/lang/String.indexOf:(I)I
   6:	iconst_m1
   7:	if_icmpeq	20
   10:	aload_1
   11:	ldc	#77; //int 39
   13:	invokevirtual	#76; //Method java/lang/String.indexOf:(I)I
   16:	iconst_m1
   17:	if_icmpne	24
   20:	iconst_1
   21:	goto	25
   24:	iconst_0
   25:	ireturn
  LineNumberTable: 
   line 129: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      26      0    $this       Lscala/xml/parsing/TokenTests;
   0      26      1    s       Ljava/lang/String;


public static boolean isValidIANAEncoding(scala.xml.parsing.TokenTests, scala.collection.Sequence);
  Code:
   Stack=2, Locals=4, Args_size=2
   0:	aload_1
   1:	invokeinterface	#82,  1; //InterfaceMethod scala/collection/generic/IterableTemplate.iterator:()Lscala/collection/Iterator;
   6:	astore_2
   7:	aload_2
   8:	invokeinterface	#48,  1; //InterfaceMethod scala/collection/Iterator.hasNext:()Z
   13:	ifeq	129
   16:	aload_2
   17:	invokeinterface	#58,  1; //InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
   22:	invokestatic	#64; //Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
   25:	istore_3
   26:	iload_3
   27:	ldc	#16; //int 65
   29:	if_icmplt	38
   32:	iload_3
   33:	ldc	#17; //int 90
   35:	if_icmple	50
   38:	iload_3
   39:	ldc	#14; //int 97
   41:	if_icmplt	127
   44:	iload_3
   45:	ldc	#15; //int 122
   47:	if_icmpgt	127
   50:	aload_2
   51:	invokeinterface	#48,  1; //InterfaceMethod scala/collection/Iterator.hasNext:()Z
   56:	ifeq	125
   59:	aload_2
   60:	invokeinterface	#58,  1; //InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
   65:	invokestatic	#64; //Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
   68:	istore_3
   69:	iload_3
   70:	ldc	#16; //int 65
   72:	if_icmplt	81
   75:	iload_3
   76:	ldc	#17; //int 90
   78:	if_icmple	50
   81:	iload_3
   82:	ldc	#14; //int 97
   84:	if_icmplt	93
   87:	iload_3
   88:	ldc	#15; //int 122
   90:	if_icmple	50
   93:	iload_3
   94:	ldc	#12; //int 48
   96:	if_icmplt	105
   99:	iload_3
   100:	ldc	#13; //int 57
   102:	if_icmple	50
   105:	iload_3
   106:	ldc	#83; //int 46
   108:	if_icmpeq	50
   111:	iload_3
   112:	ldc	#84; //int 95
   114:	if_icmpeq	50
   117:	iload_3
   118:	ldc	#85; //int 45
   120:	if_icmpeq	50
   123:	iconst_0
   124:	ireturn
   125:	iconst_1
   126:	ireturn
   127:	iconst_0
   128:	ireturn
   129:	iconst_0
   130:	ireturn
  LineNumberTable: 
   line 109: 0
   line 110: 7
   line 113: 16
   line 114: 26
   line 115: 50
   line 116: 59
   line 117: 69
   line 118: 93
   line 119: 117
   line 120: 123
   line 123: 125
   line 125: 127
   line 111: 129

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      131      0    $this       Lscala/xml/parsing/TokenTests;
   0      131      1    ianaEncoding       Lscala/collection/Sequence;
   7      124      2    it       Lscala/collection/Iterator;
   26      103      3    c       C


public static boolean isPubIDChar(scala.xml.parsing.TokenTests, char);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	iload_1
   1:	istore_2
   2:	iload_2
   3:	invokestatic	#92; //Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
   6:	ldc	#42; //int 32
   8:	invokestatic	#92; //Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
   11:	invokestatic	#96; //Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
   14:	ifeq	21
   17:	iconst_1
   18:	goto	313
   21:	iload_2
   22:	invokestatic	#92; //Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
   25:	ldc	#97; //int 13
   27:	invokestatic	#92; //Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
   30:	invokestatic	#96; //Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
   33:	ifeq	40
   36:	iconst_1
   37:	goto	313
   40:	iload_2
   41:	invokestatic	#92; //Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
   44:	ldc	#98; //int 10
   46:	invokestatic	#92; //Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
   49:	invokestatic	#96; //Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
   52:	ifeq	59
   55:	iconst_1
   56:	goto	313
   59:	aload_0
   60:	iload_1
   61:	invokestatic	#102; //Method gd1$1:(Lscala/xml/parsing/TokenTests;C)Z
   64:	ifeq	71
   67:	iconst_1
   68:	goto	313
   71:	iload_2
   72:	lookupswitch{ //19
		33: 312;
		35: 308;
		36: 304;
		37: 300;
		39: 296;
		40: 292;
		41: 288;
		42: 284;
		43: 280;
		44: 276;
		45: 272;
		46: 268;
		47: 264;
		58: 260;
		59: 256;
		61: 252;
		63: 248;
		64: 244;
		95: 240;
		default: 236 }
   236:	iconst_0
   237:	goto	313
   240:	iconst_1
   241:	goto	313
   244:	iconst_1
   245:	goto	313
   248:	iconst_1
   249:	goto	313
   252:	iconst_1
   253:	goto	313
   256:	iconst_1
   257:	goto	313
   260:	iconst_1
   261:	goto	313
   264:	iconst_1
   265:	goto	313
   268:	iconst_1
   269:	goto	313
   272:	iconst_1
   273:	goto	313
   276:	iconst_1
   277:	goto	313
   280:	iconst_1
   281:	goto	313
   284:	iconst_1
   285:	goto	313
   288:	iconst_1
   289:	goto	313
   292:	iconst_1
   293:	goto	313
   296:	iconst_1
   297:	goto	313
   300:	iconst_1
   301:	goto	313
   304:	iconst_1
   305:	goto	313
   308:	iconst_1
   309:	goto	313
   312:	iconst_1
   313:	ireturn
  LineNumberTable: 
   line 86: 0
   line 87: 17
   line 86: 21
   line 87: 36
   line 86: 40
   line 87: 55
   line 86: 59
   line 90: 67
   line 86: 71
   line 96: 236
   line 86: 237
   line 93: 240
   line 86: 241
   line 93: 244
   line 86: 245
   line 93: 248
   line 86: 249
   line 93: 252
   line 86: 253
   line 93: 256
   line 86: 257
   line 93: 260
   line 86: 261
   line 93: 264
   line 86: 265
   line 93: 268
   line 86: 269
   line 93: 272
   line 86: 273
   line 93: 276
   line 86: 277
   line 93: 280
   line 86: 281
   line 93: 284
   line 86: 285
   line 93: 288
   line 86: 289
   line 93: 292
   line 86: 293
   line 93: 296
   line 86: 297
   line 93: 300
   line 86: 301
   line 93: 304
   line 86: 305
   line 93: 308
   line 86: 309
   line 93: 312
   line 86: 313

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      314      0    $this       Lscala/xml/parsing/TokenTests;
   0      314      1    ch$1       C
   2      312      2    temp16       C


public static boolean isName(scala.xml.parsing.TokenTests, java.lang.String);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	aload_1
   1:	invokevirtual	#25; //Method java/lang/String.length:()I
   4:	iconst_0
   5:	if_icmple	87
   8:	getstatic	#31; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   11:	aload_1
   12:	invokevirtual	#35; //Method scala/Predef$.stringWrapper:(Ljava/lang/String;)Lscala/runtime/RichString;
   15:	invokeinterface	#41,  1; //InterfaceMethod scala/collection/generic/VectorTemplate.iterator:()Lscala/collection/Iterator;
   20:	astore_2
   21:	aload_0
   22:	aload_2
   23:	invokeinterface	#58,  1; //InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
   28:	invokestatic	#64; //Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
   31:	invokeinterface	#108,  2; //InterfaceMethod scala/xml/parsing/TokenTests.isNameStart:(C)Z
   36:	ifeq	83
   39:	aload_2
   40:	invokeinterface	#48,  1; //InterfaceMethod scala/collection/Iterator.hasNext:()Z
   45:	ifeq	66
   48:	aload_0
   49:	aload_2
   50:	invokeinterface	#58,  1; //InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
   55:	invokestatic	#64; //Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
   58:	invokeinterface	#111,  2; //InterfaceMethod scala/xml/parsing/TokenTests.isNameChar:(C)Z
   63:	ifne	39
   66:	aload_2
   67:	invokeinterface	#48,  1; //InterfaceMethod scala/collection/Iterator.hasNext:()Z
   72:	ifeq	79
   75:	iconst_0
   76:	goto	88
   79:	iconst_1
   80:	goto	88
   83:	iconst_0
   84:	goto	88
   87:	iconst_0
   88:	ireturn
  LineNumberTable: 
   line 75: 0
   line 76: 8
   line 77: 21
   line 78: 39
   line 79: 66
   line 80: 83
   line 81: 87
   line 75: 88

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      89      0    $this       Lscala/xml/parsing/TokenTests;
   0      89      1    s       Ljava/lang/String;
   21      66      2    y       Lscala/collection/Iterator;


public static boolean isNameStart(scala.xml.parsing.TokenTests, char);
  Code:
   Stack=2, Locals=4, Args_size=2
   0:	iload_1
   1:	invokestatic	#117; //Method java/lang/Character.getType:(C)I
   4:	i2b
   5:	istore_2
   6:	iload_2
   7:	invokestatic	#121; //Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
   10:	bipush	2
   12:	invokestatic	#121; //Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
   15:	invokestatic	#96; //Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
   18:	ifeq	25
   21:	iconst_1
   22:	goto	123
   25:	iload_2
   26:	invokestatic	#121; //Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
   29:	bipush	1
   31:	invokestatic	#121; //Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
   34:	invokestatic	#96; //Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
   37:	ifeq	44
   40:	iconst_1
   41:	goto	123
   44:	iload_2
   45:	invokestatic	#121; //Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
   48:	bipush	5
   50:	invokestatic	#121; //Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
   53:	invokestatic	#96; //Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
   56:	ifeq	63
   59:	iconst_1
   60:	goto	123
   63:	iload_2
   64:	invokestatic	#121; //Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
   67:	bipush	3
   69:	invokestatic	#121; //Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
   72:	invokestatic	#96; //Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
   75:	ifeq	82
   78:	iconst_1
   79:	goto	123
   82:	iload_2
   83:	invokestatic	#121; //Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
   86:	bipush	10
   88:	invokestatic	#121; //Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
   91:	invokestatic	#96; //Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
   94:	ifeq	101
   97:	iconst_1
   98:	goto	123
   101:	iload_1
   102:	istore_3
   103:	iload_3
   104:	invokestatic	#92; //Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
   107:	ldc	#84; //int 95
   109:	invokestatic	#125; //Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   112:	invokestatic	#96; //Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
   115:	ifeq	122
   118:	iconst_1
   119:	goto	123
   122:	iconst_0
   123:	ireturn
  LineNumberTable: 
   line 58: 0
   line 59: 21
   line 58: 25
   line 60: 40
   line 58: 44
   line 61: 59
   line 58: 63
   line 62: 78
   line 58: 82
   line 63: 97
   line 64: 101
   line 58: 123

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      124      0    $this       Lscala/xml/parsing/TokenTests;
   0      124      1    ch       C
   6      118      2    temp10       B
   103      20      3    temp9       C


public static boolean isNameChar(scala.xml.parsing.TokenTests, char);
  Code:
   Stack=2, Locals=4, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	invokeinterface	#108,  2; //InterfaceMethod scala/xml/parsing/TokenTests.isNameStart:(C)Z
   7:	ifne	165
   10:	iload_1
   11:	istore_2
   12:	iload_2
   13:	lookupswitch{ //3
		45: 161;
		46: 157;
		58: 153;
		default: 48 }
   48:	iload_1
   49:	invokestatic	#117; //Method java/lang/Character.getType:(C)I
   52:	i2b
   53:	istore_3
   54:	iload_3
   55:	invokestatic	#121; //Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
   58:	bipush	8
   60:	invokestatic	#121; //Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
   63:	invokestatic	#96; //Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
   66:	ifeq	73
   69:	iconst_1
   70:	goto	162
   73:	iload_3
   74:	invokestatic	#121; //Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
   77:	bipush	7
   79:	invokestatic	#121; //Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
   82:	invokestatic	#96; //Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
   85:	ifeq	92
   88:	iconst_1
   89:	goto	162
   92:	iload_3
   93:	invokestatic	#121; //Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
   96:	bipush	6
   98:	invokestatic	#121; //Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
   101:	invokestatic	#96; //Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
   104:	ifeq	111
   107:	iconst_1
   108:	goto	162
   111:	iload_3
   112:	invokestatic	#121; //Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
   115:	bipush	4
   117:	invokestatic	#121; //Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
   120:	invokestatic	#96; //Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
   123:	ifeq	130
   126:	iconst_1
   127:	goto	162
   130:	iload_3
   131:	invokestatic	#121; //Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
   134:	bipush	9
   136:	invokestatic	#121; //Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
   139:	invokestatic	#96; //Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
   142:	ifeq	149
   145:	iconst_1
   146:	goto	162
   149:	iconst_0
   150:	goto	162
   153:	iconst_1
   154:	goto	162
   157:	iconst_1
   158:	goto	162
   161:	iconst_1
   162:	ifeq	169
   165:	iconst_1
   166:	goto	170
   169:	iconst_0
   170:	ireturn
  LineNumberTable: 
   line 38: 0
   line 40: 48
   line 41: 69
   line 40: 73
   line 42: 88
   line 40: 92
   line 43: 107
   line 40: 111
   line 44: 126
   line 40: 130
   line 39: 153
   line 38: 154
   line 39: 157
   line 38: 158
   line 39: 161
   line 38: 162

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      171      0    $this       Lscala/xml/parsing/TokenTests;
   0      171      1    ch       C
   12      153      2    temp8       C
   54      99      3    temp2       B


public static final boolean isSpace(scala.xml.parsing.TokenTests, scala.collection.Sequence);
  Code:
   Stack=4, Locals=3, Args_size=2
   0:	aload_1
   1:	invokeinterface	#82,  1; //InterfaceMethod scala/collection/generic/IterableTemplate.iterator:()Lscala/collection/Iterator;
   6:	astore_2
   7:	aload_2
   8:	invokeinterface	#48,  1; //InterfaceMethod scala/collection/Iterator.hasNext:()Z
   13:	ifeq	37
   16:	aload_2
   17:	new	#134; //class scala/xml/parsing/TokenTests$$anonfun$isSpace$1
   20:	dup
   21:	aload_0
   22:	invokespecial	#137; //Method scala/xml/parsing/TokenTests$$anonfun$isSpace$1."<init>":(Lscala/xml/parsing/TokenTests;)V
   25:	invokeinterface	#141,  2; //InterfaceMethod scala/collection/Iterator.forall:(Lscala/Function1;)Z
   30:	ifeq	37
   33:	iconst_1
   34:	goto	38
   37:	iconst_0
   38:	ireturn
  LineNumberTable: 
   line 29: 0
   line 30: 7
   line 28: 38

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      39      0    $this       Lscala/xml/parsing/TokenTests;
   0      39      1    cs       Lscala/collection/Sequence;
   7      32      2    it       Lscala/collection/Iterator;


public static final boolean isSpace(scala.xml.parsing.TokenTests, char);
  Code:
   Stack=1, Locals=3, Args_size=2
   0:	iload_1
   1:	istore_2
   2:	iload_2
   3:	lookupswitch{ //4
		9: 60;
		10: 56;
		13: 52;
		32: 48;
		default: 44 }
   44:	iconst_0
   45:	goto	61
   48:	iconst_1
   49:	goto	61
   52:	iconst_1
   53:	goto	61
   56:	iconst_1
   57:	goto	61
   60:	iconst_1
   61:	ireturn
  LineNumberTable: 
   line 22: 0
   line 24: 44
   line 22: 45
   line 23: 48
   line 22: 49
   line 23: 52
   line 22: 53
   line 23: 56
   line 22: 57
   line 23: 60
   line 22: 61

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      62      0    $this       Lscala/xml/parsing/TokenTests;
   0      62      1    ch       C
   2      60      2    temp1       C


}

