Compiled from "MarkupParser.scala"
public interface scala.xml.parsing.MarkupParser extends scala.xml.parsing.TokenTests,scala.ScalaObject
  SourceFile: "MarkupParser.scala"
  ScalaSig: length = 0xB81
   05 00 FFFFFF82 7D 06 0A 01 02 FFFFFF84 FFFFFF90 FFFFFF80 FFFFFF81 00 09 FFFFFF82 79
   02 0C 4D 61 72 6B 75 70 50 61 72 73 65 72 0A 02
   03 04 01 07 70 61 72 73 69 6E 67 0A 02 05 06 01
   03 78 6D 6C 0A 01 07 01 05 73 63 61 6C 61 03 00
   13 04 00 0A 12 16 10 02 0B 10 0D 01 0C 0A 02 0D
   0E 01 04 6C 61 6E 67 0A 01 0F 01 04 6A 61 76 61
   09 02 11 0C 02 06 4F 62 6A 65 63 74 10 02 13 14
   0D 01 02 09 02 15 02 02 0A 54 6F 6B 65 6E 54 65
   73 74 73 10 02 17 18 0D 01 06 09 02 19 06 02 0B
   53 63 61 6C 61 4F 62 6A 65 63 74 08 05 1B 00 FFFFFF84
   00 1C 01 06 24 69 6E 69 74 24 14 01 1D 10 02 17
   1E 09 02 1F 06 02 04 55 6E 69 74 08 07 21 00 FFFFFFC2
   FFFFFF80 FFFFFF86 00 22 01 05 69 6E 70 75 74 15 01 23 10 02
   24 27 0D 01 25 0A 02 26 06 01 02 69 6F 09 02 28
   25 02 06 53 6F 75 72 63 65 08 07 2A 00 FFFFFFC2 FFFFFF80 FFFFFF86
   00 2B 01 0A 70 72 65 73 65 72 76 65 57 53 15 01
   2C 10 02 17 2D 09 02 2E 06 02 07 42 6F 6F 6C 65
   61 6E 08 05 30 00 FFFFFF86 00 31 01 0E 65 78 74 65 72
   6E 61 6C 53 6F 75 72 63 65 14 02 23 32 08 05 33
   2F FFFFFFC0 00 34 01 0D 73 79 73 74 65 6D 4C 69 74 65
   72 61 6C 10 02 35 38 0E 02 17 36 09 02 37 06 01
   06 50 72 65 64 65 66 09 02 39 3A 02 06 53 74 72
   69 6E 67 0A 02 37 06 08 07 3C 00 FFFFFFC0 FFFFFF80 FFFFFF84 00 22
   01 08 63 75 72 49 6E 70 75 74 08 07 3E 00 FFFFFFC0 FFFFFF80
   FFFFFF84 00 3F 01 0C 63 75 72 49 6E 70 75 74 5F 24 65
   71 14 02 1D 40 08 07 41 3D FFFFFF81 FFFFFF80 FFFFFFC0 00 23 01 03
   78 24 31 08 06 43 00 FFFFFFA0 FFFFFFA0 04 23 01 09 63 75 72
   49 6E 70 75 74 20 08 07 45 00 FFFFFFC2 FFFFFF80 FFFFFF84 04 46 01
   06 68 61 6E 64 6C 65 15 01 47 10 02 13 48 09 02
   49 02 02 0D 4D 61 72 6B 75 70 48 61 6E 64 6C 65
   72 08 06 4B 00 FFFFFFA0 FFFFFF80 04 47 01 07 68 61 6E 64 6C
   65 20 08 07 4D 00 FFFFFFC0 FFFFFF80 FFFFFF84 00 4E 01 08 69 6E 70
   53 74 61 63 6B 15 01 4F 10 03 50 58 23 0E 02 51
   56 0E 02 52 55 0D 01 53 0A 02 54 08 01 06 3C 72
   6F 6F 74 3E 09 01 07 09 02 57 06 01 07 70 61 63
   6B 61 67 65 09 02 59 5A 02 04 4C 69 73 74 0A 02
   57 06 08 07 5C 00 FFFFFFC0 FFFFFF80 FFFFFF84 00 5D 01 0C 69 6E 70
   53 74 61 63 6B 5F 24 65 71 14 02 1D 5E 08 07 41
   5B FFFFFF81 FFFFFF80 FFFFFFC0 00 4F 08 06 60 00 FFFFFFA0 FFFFFFA0 04 4F 01 09
   69 6E 70 53 74 61 63 6B 20 08 07 62 00 FFFFFFC0 FFFFFF80 FFFFFF84
   00 63 01 03 70 6F 73 15 01 64 10 02 17 65 09 02
   66 06 02 03 49 6E 74 08 07 68 00 FFFFFFC0 FFFFFF80 FFFFFF84 00 69
   01 07 70 6F 73 5F 24 65 71 14 02 1D 6A 08 07 41
   67 FFFFFF81 FFFFFF80 FFFFFFC0 00 64 08 06 6C 00 FFFFFFA0 FFFFFFA0 04 64 01 04
   70 6F 73 20 08 07 6E 00 FFFFFFC0 FFFFFF80 FFFFFF84 00 63 01 08 65
   78 74 49 6E 64 65 78 08 07 70 00 FFFFFFC0 FFFFFF80 FFFFFF84 00 71
   01 0C 65 78 74 49 6E 64 65 78 5F 24 65 71 14 02
   1D 72 08 07 41 6F FFFFFF81 FFFFFF80 FFFFFFC0 00 64 08 06 74 00 FFFFFFA0
   FFFFFFA0 04 64 01 09 65 78 74 49 6E 64 65 78 20 08 07
   76 00 FFFFFFC0 FFFFFF80 FFFFFF84 00 63 01 06 74 6D 70 70 6F 73 08
   07 78 00 FFFFFFC0 FFFFFF80 FFFFFF84 00 79 01 0A 74 6D 70 70 6F 73
   5F 24 65 71 14 02 1D 7A 08 07 41 77 FFFFFF81 FFFFFF80 FFFFFFC0 00
   64 08 06 7C 00 FFFFFFA0 FFFFFFA0 04 64 01 07 74 6D 70 70 6F
   73 20 08 07 7E 00 FFFFFFC0 FFFFFF80 FFFFFF84 00 7F 01 02 63 68 15
   02 FFFFFF81 00 10 03 17 FFFFFF81 01 09 03 FFFFFF81 02 06 02 04 43
   68 61 72 08 09 FFFFFF81 04 00 FFFFFFC0 FFFFFF80 FFFFFF84 00 FFFFFF81 05 01 06
   63 68 5F 24 65 71 14 03 1D FFFFFF81 06 08 09 41 FFFFFF81 03
   FFFFFF81 FFFFFF80 FFFFFFC0 00 FFFFFF81 00 08 08 FFFFFF81 08 00 FFFFFFA0 FFFFFFA0 04 FFFFFF81 00
   01 03 63 68 20 08 09 FFFFFF81 0A 00 FFFFFFC2 FFFFFF80 FFFFFF84 08 FFFFFF81 0B
   01 04 63 62 75 66 15 02 FFFFFF81 0C 10 04 FFFFFF81 0D FFFFFF81 12
   0D 02 FFFFFF81 0E 0A 04 FFFFFF81 0F FFFFFF81 10 01 07 6D 75 74 61
   62 6C 65 0A 03 FFFFFF81 11 06 01 0A 63 6F 6C 6C 65 63
   74 69 6F 6E 09 04 FFFFFF81 13 FFFFFF81 0E 02 0D 53 74 72 69
   6E 67 42 75 69 6C 64 65 72 08 08 FFFFFF81 15 00 FFFFFFA0 FFFFFF80
   04 FFFFFF81 0C 01 05 63 62 75 66 20 08 09 FFFFFF81 17 00 FFFFFFC0
   FFFFFF80 FFFFFF84 00 FFFFFF81 18 01 03 64 74 64 15 02 FFFFFF81 19 10 04
   FFFFFF81 1A FFFFFF81 1C 0D 02 FFFFFF81 1B 0A 03 FFFFFF81 17 04 09 04 FFFFFF81
   1D FFFFFF81 1B 02 03 44 54 44 08 09 FFFFFF81 1F 00 FFFFFFC0 FFFFFF80 FFFFFF84
   00 FFFFFF81 20 01 07 64 74 64 5F 24 65 71 14 03 1D FFFFFF81
   21 08 09 41 FFFFFF81 1E FFFFFF81 FFFFFF80 FFFFFFC0 00 FFFFFF81 19 08 08 FFFFFF81 23
   00 FFFFFFA0 FFFFFFA0 04 FFFFFF81 19 01 04 64 74 64 20 08 09 FFFFFF81 25
   00 FFFFFFC0 FFFFFF80 FFFFFF84 08 FFFFFF81 26 01 03 64 6F 63 15 02 FFFFFF81 27
   10 04 FFFFFF81 28 FFFFFF81 29 0D 01 04 09 03 FFFFFF81 2A 04 02 08
   44 6F 63 75 6D 65 6E 74 08 09 FFFFFF81 2C 00 FFFFFFC0 FFFFFF80 FFFFFF84
   08 FFFFFF81 2D 01 07 64 6F 63 5F 24 65 71 14 03 1D FFFFFF81
   2E 08 09 41 FFFFFF81 2B FFFFFF81 FFFFFF80 FFFFFFC0 00 FFFFFF81 27 08 08 FFFFFF81 30
   00 FFFFFFA0 FFFFFFA0 04 FFFFFF81 27 01 04 64 6F 63 20 08 08 FFFFFF81 32
   00 FFFFFFC0 FFFFFF80 FFFFFF84 00 2B 01 03 65 6F 66 08 09 FFFFFF81 34 00
   FFFFFFC0 FFFFFF80 FFFFFF84 00 FFFFFF81 35 01 07 65 6F 66 5F 24 65 71 14
   03 1D FFFFFF81 36 08 08 41 FFFFFF81 33 FFFFFF81 FFFFFF80 FFFFFFC0 00 2C 08 07
   FFFFFF81 38 00 FFFFFFA0 FFFFFFA0 04 2C 01 04 65 6F 66 20 08 07 FFFFFF81
   3A 00 FFFFFF84 00 FFFFFF81 3B 01 0C 78 6D 6C 50 72 6F 63 49
   6E 73 74 72 14 02 FFFFFF81 3C 10 04 FFFFFF81 28 FFFFFF81 3D 09 03
   FFFFFF81 3E 04 02 08 4D 65 74 61 44 61 74 61 08 07 FFFFFF81
   40 00 FFFFFF84 00 FFFFFF81 41 01 06 70 72 6F 6C 6F 67 14 02
   FFFFFF81 42 10 09 17 FFFFFF81 43 FFFFFF81 45 FFFFFF81 45 FFFFFF81 48 09 03 FFFFFF81
   44 06 02 06 54 75 70 6C 65 33 10 04 17 FFFFFF81 46 34
   09 03 FFFFFF81 47 06 02 06 4F 70 74 69 6F 6E 10 04 17
   FFFFFF81 46 2C 08 07 FFFFFF81 4A 00 FFFFFF84 00 FFFFFF81 4B 01 08 74 65
   78 74 44 65 63 6C 14 02 FFFFFF81 4C 10 07 17 FFFFFF81 4D FFFFFF81
   45 FFFFFF81 45 09 03 FFFFFF81 4E 06 02 06 54 75 70 6C 65 32
   08 07 FFFFFF81 50 00 FFFFFF84 00 FFFFFF81 51 01 08 64 6F 63 75 6D
   65 6E 74 14 02 FFFFFF81 27 08 07 FFFFFF81 53 00 FFFFFF84 08 FFFFFF81 54
   01 07 70 75 74 43 68 61 72 14 04 FFFFFF81 0C FFFFFF81 55 08
   08 FFFFFF81 56 FFFFFF81 52 FFFFFFC0 00 FFFFFF81 00 01 01 63 08 07 FFFFFF81 58
   00 FFFFFF84 00 FFFFFF81 59 01 0A 69 6E 69 74 69 61 6C 69 7A
   65 15 02 FFFFFF81 5A 0D 01 00 08 07 FFFFFF81 5C 00 FFFFFF84 00 FFFFFF81
   5D 01 06 6E 65 78 74 63 68 15 01 1D 08 07 FFFFFF81 5F
   00 FFFFFF84 00 FFFFFF81 60 01 06 78 54 6F 6B 65 6E 14 03 1D
   FFFFFF81 61 08 08 FFFFFF81 62 FFFFFF81 5E FFFFFFC0 00 FFFFFF81 00 01 04 74 68
   61 74 08 07 FFFFFF81 5F 00 FFFFFF84 00 FFFFFF81 64 14 03 1D FFFFFF81 65
   08 08 FFFFFF81 62 FFFFFF81 63 FFFFFFC0 00 FFFFFF81 66 10 05 50 FFFFFF81 67 FFFFFF81
   00 09 03 FFFFFF81 68 5A 02 03 53 65 71 08 07 FFFFFF81 6A 00
   FFFFFF84 00 FFFFFF81 6B 01 0B 78 41 74 74 72 69 62 75 74 65
   73 14 04 FFFFFF81 6C FFFFFF81 70 10 07 17 FFFFFF81 4D FFFFFF81 3C FFFFFF81 6D
   10 04 FFFFFF81 28 FFFFFF81 6E 09 03 FFFFFF81 6F 04 02 10 4E 61 6D
   65 73 70 61 63 65 42 69 6E 64 69 6E 67 08 08 FFFFFF81
   71 FFFFFF81 69 FFFFFFC0 00 FFFFFF81 6D 01 06 70 73 63 6F 70 65 08
   07 FFFFFF81 73 00 FFFFFF84 00 FFFFFF81 74 01 0F 78 41 74 74 72 69
   62 75 74 65 56 61 6C 75 65 14 01 34 08 07 FFFFFF81 76
   00 FFFFFF84 00 FFFFFF81 74 01 0C 78 45 6E 74 69 74 79 56 61
   6C 75 65 08 07 FFFFFF81 78 00 FFFFFF84 08 FFFFFF81 79 01 04 78 54
   61 67 14 04 FFFFFF81 7A FFFFFF81 7B 10 08 17 FFFFFF81 43 34 FFFFFF81 3C
   FFFFFF81 6D 08 08 FFFFFF81 71 FFFFFF81 77 FFFFFFC0 00 FFFFFF81 6D 08 07 FFFFFF81 7D
   00 FFFFFF84 00 FFFFFF81 7E 01 07 78 45 6E 64 54 61 67 14 03
   1D FFFFFF81 7F 08 07 FFFFFF82 00 FFFFFF81 7C FFFFFFC0 00 34 01 01 6E 08
   07 FFFFFF82 02 00 FFFFFF84 00 FFFFFF82 03 01 09 78 43 68 61 72 44
   61 74 61 15 02 FFFFFF82 04 10 04 FFFFFF81 28 FFFFFF82 05 09 03 FFFFFF82
   06 04 02 07 4E 6F 64 65 53 65 71 08 07 FFFFFF82 08 00
   FFFFFF84 00 FFFFFF82 09 01 08 78 43 68 61 72 52 65 66 14 05
   34 FFFFFF82 0A FFFFFF82 0E 08 07 7E FFFFFF82 07 FFFFFFC0 00 FFFFFF82 0B 10 05
   17 FFFFFF82 0C FFFFFF81 00 09 03 FFFFFF82 0D 06 02 09 46 75 6E 63
   74 69 6F 6E 30 08 08 FFFFFF81 5C FFFFFF82 07 FFFFFFC0 00 FFFFFF82 0F 10
   04 17 FFFFFF82 0C 1D 08 07 FFFFFF82 11 00 FFFFFF84 00 FFFFFF82 03 01 08
   78 43 6F 6D 6D 65 6E 74 08 07 FFFFFF82 13 00 FFFFFF84 00 FFFFFF82
   14 01 0A 61 70 70 65 6E 64 54 65 78 74 14 07 1D
   FFFFFF82 15 FFFFFF82 16 FFFFFF82 1B 08 06 62 FFFFFF82 12 FFFFFFC0 00 64 08 08
   FFFFFF82 17 FFFFFF82 12 FFFFFFC0 00 FFFFFF82 18 01 02 74 73 10 04 FFFFFF81 28
   FFFFFF82 19 09 03 FFFFFF82 1A 04 02 0A 4E 6F 64 65 42 75 66
   66 65 72 08 07 FFFFFF82 1C FFFFFF82 12 FFFFFFC0 00 34 01 03 74 78
   74 08 07 FFFFFF82 1E 00 FFFFFF84 00 FFFFFF82 1F 01 08 63 6F 6E 74
   65 6E 74 31 14 05 1D FFFFFF82 20 FFFFFF82 21 08 08 FFFFFF81 71 FFFFFF82
   1D FFFFFFC0 00 FFFFFF81 6D 08 08 FFFFFF82 17 FFFFFF82 1D FFFFFFC0 00 FFFFFF82 18 08
   07 FFFFFF82 23 00 FFFFFF84 00 FFFFFF82 24 01 07 63 6F 6E 74 65 6E
   74 14 04 FFFFFF82 04 FFFFFF82 25 08 08 FFFFFF81 71 FFFFFF82 22 FFFFFFC0 00 FFFFFF81
   6D 08 07 FFFFFF82 27 00 FFFFFF84 00 FFFFFF82 28 01 0A 65 78 74 65
   72 6E 61 6C 49 44 14 02 FFFFFF82 29 10 04 FFFFFF81 1A FFFFFF82 2A
   09 04 FFFFFF82 2B FFFFFF81 1B 02 0A 45 78 74 65 72 6E 61 6C
   49 44 08 06 FFFFFF82 2D 00 FFFFFF84 00 1C 01 08 70 61 72 73
   65 44 54 44 08 07 FFFFFF82 2F 00 FFFFFF84 00 FFFFFF82 30 01 07 65
   6C 65 6D 65 6E 74 14 04 FFFFFF82 04 FFFFFF82 31 08 08 FFFFFF81 71
   FFFFFF82 2E FFFFFFC0 00 FFFFFF81 6D 08 07 FFFFFF82 33 00 FFFFFF84 00 FFFFFF82 34 01
   08 65 6C 65 6D 65 6E 74 31 14 04 FFFFFF82 04 FFFFFF82 35 08
   08 FFFFFF81 71 FFFFFF82 32 FFFFFFC0 00 FFFFFF81 6D 08 07 FFFFFF82 37 00 FFFFFF84 00
   FFFFFF82 38 01 05 78 4E 61 6D 65 15 01 34 08 07 FFFFFF82 3A
   00 FFFFFF84 00 FFFFFF81 5D 01 03 78 45 51 08 07 FFFFFF82 3C 00 FFFFFF84
   00 FFFFFF81 5D 01 09 78 53 70 61 63 65 4F 70 74 08 07
   FFFFFF82 3E 00 FFFFFF84 00 FFFFFF81 5D 01 06 78 53 70 61 63 65 08
   07 FFFFFF82 40 00 FFFFFF84 00 FFFFFF82 03 01 0A 78 50 72 6F 63 49
   6E 73 74 72 08 07 FFFFFF82 42 00 FFFFFF84 00 FFFFFF82 38 01 05 78
   54 65 78 74 08 06 33 00 FFFFFF84 00 FFFFFF81 74 08 07 FFFFFF82 45
   00 FFFFFF84 00 FFFFFF81 74 01 0C 70 75 62 69 64 4C 69 74 65
   72 61 6C 08 06 FFFFFF82 47 00 FFFFFF84 00 1C 01 09 65 78 74
   53 75 62 73 65 74 08 07 FFFFFF82 49 00 FFFFFF84 00 FFFFFF82 4A 01
   0B 6D 61 72 6B 75 70 44 65 63 6C 31 14 02 FFFFFF82 4B
   10 03 17 FFFFFF82 4C 09 03 FFFFFF82 4D 06 02 03 41 6E 79 08
   06 FFFFFF82 4F 00 FFFFFF84 00 1C 01 0A 6D 61 72 6B 75 70 44
   65 63 6C 08 06 FFFFFF82 51 00 FFFFFF84 00 1C 01 09 69 6E 74
   53 75 62 73 65 74 08 06 FFFFFF82 53 00 FFFFFF84 00 1C 01 0B
   65 6C 65 6D 65 6E 74 44 65 63 6C 08 06 FFFFFF82 55 00
   FFFFFF84 00 1C 01 08 61 74 74 72 44 65 63 6C 08 06 FFFFFF82
   57 00 FFFFFF84 00 1C 01 0A 65 6E 74 69 74 79 44 65 63
   6C 08 06 FFFFFF82 59 00 FFFFFF84 00 1C 01 0C 6E 6F 74 61 74
   69 6F 6E 44 65 63 6C 08 07 FFFFFF82 5B 00 FFFFFF84 00 FFFFFF82 5C
   01 11 72 65 70 6F 72 74 53 79 6E 74 61 78 45 72
   72 6F 72 14 05 1D FFFFFF82 5D FFFFFF82 5E 08 06 62 FFFFFF82 5A FFFFFFC0
   00 64 08 07 FFFFFF82 5F FFFFFF82 5A FFFFFFC0 00 34 01 03 73 74 72
   08 07 FFFFFF82 5B 00 FFFFFF84 00 FFFFFF82 61 14 03 1D FFFFFF82 62 08 07
   FFFFFF82 5F FFFFFF82 60 FFFFFFC0 00 34 08 07 FFFFFF82 64 00 FFFFFF84 00 FFFFFF82 65
   01 15 72 65 70 6F 72 74 56 61 6C 69 64 61 74 69
   6F 6E 45 72 72 6F 72 14 05 1D FFFFFF82 66 FFFFFF82 67 08 06
   62 FFFFFF82 63 FFFFFFC0 00 64 08 07 FFFFFF82 5F FFFFFF82 63 FFFFFFC0 00 34 08
   07 FFFFFF82 69 00 FFFFFF84 00 FFFFFF82 6A 01 04 70 75 73 68 14 03
   1D FFFFFF82 6B 08 07 FFFFFF82 6C FFFFFF82 68 FFFFFFC0 00 34 01 0A 65 6E
   74 69 74 79 4E 61 6D 65 08 07 FFFFFF82 6E 00 FFFFFF84 00 FFFFFF82
   6F 01 0C 70 75 73 68 45 78 74 65 72 6E 61 6C 14
   03 1D FFFFFF82 70 08 07 FFFFFF82 71 FFFFFF82 6D FFFFFFC0 00 34 01 08 73
   79 73 74 65 6D 49 64 08 06 FFFFFF82 73 00 FFFFFF84 00 1C 01
   03 70 6F 70 08 07 FFFFFF82 75 00 FFFFFF84 00 FFFFFF82 76 01 17 6E
   6F 72 6D 61 6C 69 7A 65 41 74 74 72 69 62 75 74
   65 56 61 6C 75 65 14 03 34 FFFFFF82 77 08 07 FFFFFF82 78 FFFFFF82
   74 FFFFFFC0 00 34 01 06 61 74 74 76 61 6C 12 05 FFFFFF82 7A
   FFFFFF82 7C 47 06 0A FFFFFF82 7B 00 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF80 00 FFFFFF82 79 02
   0C 3C 72 65 66 69 6E 65 6D 65 6E 74 3E 10 02 13
   00 
  InnerClass: 
   public final #127= #124 of #126; //$anon$2=class scala/xml/parsing/MarkupParser$$anon$2 of class scala/xml/parsing/MarkupParser
   public final #130= #129 of #126; //$anon$1=class scala/xml/parsing/MarkupParser$$anon$1 of class scala/xml/parsing/MarkupParser
   public final #133= #132 of #126; //$anonfun$4=class scala/xml/parsing/MarkupParser$$anonfun$4 of class scala/xml/parsing/MarkupParser
   public final #136= #135 of #126; //$anonfun$3=class scala/xml/parsing/MarkupParser$$anonfun$3 of class scala/xml/parsing/MarkupParser
   public final #139= #138 of #126; //$anonfun$2=class scala/xml/parsing/MarkupParser$$anonfun$2 of class scala/xml/parsing/MarkupParser
   public final #142= #141 of #126; //$anonfun$1=class scala/xml/parsing/MarkupParser$$anonfun$1 of class scala/xml/parsing/MarkupParser
   public final #145= #144 of #126; //$anonfun$xToken$1=class scala/xml/parsing/MarkupParser$$anonfun$xToken$1 of class scala/xml/parsing/MarkupParser
   public final #148= #147 of #126; //$anonfun$xCharRef$1=class scala/xml/parsing/MarkupParser$$anonfun$xCharRef$1 of class scala/xml/parsing/MarkupParser
   public final #151= #150 of #126; //$anonfun$document$1=class scala/xml/parsing/MarkupParser$$anonfun$document$1 of class scala/xml/parsing/MarkupParser
   public final #154= #153 of #126; //$anonfun$appendText$1=class scala/xml/parsing/MarkupParser$$anonfun$appendText$1 of class scala/xml/parsing/MarkupParser
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	MarkupParser.scala;
const #3 = Asciz	normalizeAttributeValue;
const #4 = Asciz	(Ljava/lang/String;)Ljava/lang/String;;
const #5 = Asciz	pop;
const #6 = Asciz	()V;
const #7 = Asciz	pushExternal;
const #8 = Asciz	(Ljava/lang/String;)V;
const #9 = Asciz	push;
const #10 = Asciz	reportValidationError;
const #11 = Asciz	(ILjava/lang/String;)V;
const #12 = Asciz	reportSyntaxError;
const #13 = Asciz	notationDecl;
const #14 = Asciz	entityDecl;
const #15 = Asciz	attrDecl;
const #16 = Asciz	elementDecl;
const #17 = Asciz	intSubset;
const #18 = Asciz	markupDecl;
const #19 = Asciz	markupDecl1;
const #20 = Asciz	()Ljava/lang/Object;;
const #21 = Asciz	extSubset;
const #22 = Asciz	pubidLiteral;
const #23 = Asciz	()Ljava/lang/String;;
const #24 = Asciz	systemLiteral;
const #25 = Asciz	xText;
const #26 = Asciz	xProcInstr;
const #27 = Asciz	()Lscala/xml/NodeSeq;;
const #28 = Asciz	xSpace;
const #29 = Asciz	xSpaceOpt;
const #30 = Asciz	xEQ;
const #31 = Asciz	xName;
const #32 = Asciz	element1;
const #33 = Asciz	(Lscala/xml/NamespaceBinding;)Lscala/xml/NodeSeq;;
const #34 = Asciz	element;
const #35 = Asciz	parseDTD;
const #36 = Asciz	externalID;
const #37 = Asciz	()Lscala/xml/dtd/ExternalID;;
const #38 = Asciz	content;
const #39 = Asciz	content1;
const #40 = Asciz	(Lscala/xml/NamespaceBinding;Lscala/xml/NodeBuffer;)V;
const #41 = Asciz	appendText;
const #42 = Asciz	(ILscala/xml/NodeBuffer;Ljava/lang/String;)V;
const #43 = Asciz	xComment;
const #44 = Asciz	xCharRef;
const #45 = Asciz	(Lscala/Function0;Lscala/Function0;)Ljava/lang/String;;
const #46 = Asciz	(Lscala/Function0<Ljava/lang/Character;>;Lscala/Function0<Ljava/lang/Object;>;)Ljava/lang/String;;
const #47 = Asciz	Signature;
const #48 = Asciz	xCharData;
const #49 = Asciz	xEndTag;
const #50 = Asciz	xTag;
const #51 = Asciz	(Lscala/xml/NamespaceBinding;)Lscala/Tuple3;;
const #52 = Asciz	(Lscala/xml/NamespaceBinding;)Lscala/Tuple3<Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;>;;
const #53 = Asciz	xEntityValue;
const #54 = Asciz	xAttributeValue;
const #55 = Asciz	xAttributes;
const #56 = Asciz	(Lscala/xml/NamespaceBinding;)Lscala/Tuple2;;
const #57 = Asciz	(Lscala/xml/NamespaceBinding;)Lscala/Tuple2<Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;>;;
const #58 = Asciz	xToken;
const #59 = Asciz	(Lscala/collection/Seq;)V;
const #60 = Asciz	(Lscala/collection/Seq<Ljava/lang/Character;>;)V;
const #61 = Asciz	(C)V;
const #62 = Asciz	nextch;
const #63 = Asciz	initialize;
const #64 = Asciz	()Lscala/xml/parsing/MarkupParser;;
const #65 = Asciz	putChar;
const #66 = Asciz	(C)Lscala/collection/mutable/StringBuilder;;
const #67 = Asciz	document;
const #68 = Asciz	()Lscala/xml/Document;;
const #69 = Asciz	textDecl;
const #70 = Asciz	()Lscala/Tuple2;;
const #71 = Asciz	()Lscala/Tuple2<Lscala/Option<Ljava/lang/String;>;Lscala/Option<Ljava/lang/String;>;>;;
const #72 = Asciz	prolog;
const #73 = Asciz	()Lscala/Tuple3;;
const #74 = Asciz	()Lscala/Tuple3<Lscala/Option<Ljava/lang/String;>;Lscala/Option<Ljava/lang/String;>;Lscala/Option<Ljava/lang/Boolean;>;>;;
const #75 = Asciz	xmlProcInstr;
const #76 = Asciz	()Lscala/xml/MetaData;;
const #77 = Asciz	eof_$eq;
const #78 = Asciz	(Z)V;
const #79 = Asciz	eof;
const #80 = Asciz	()Z;
const #81 = Asciz	doc_$eq;
const #82 = Asciz	(Lscala/xml/Document;)V;
const #83 = Asciz	doc;
const #84 = Asciz	dtd_$eq;
const #85 = Asciz	(Lscala/xml/dtd/DTD;)V;
const #86 = Asciz	dtd;
const #87 = Asciz	()Lscala/xml/dtd/DTD;;
const #88 = Asciz	cbuf;
const #89 = Asciz	()Lscala/collection/mutable/StringBuilder;;
const #90 = Asciz	ch_$eq;
const #91 = Asciz	ch;
const #92 = Asciz	()C;
const #93 = Asciz	tmppos_$eq;
const #94 = Asciz	(I)V;
const #95 = Asciz	tmppos;
const #96 = Asciz	()I;
const #97 = Asciz	extIndex_$eq;
const #98 = Asciz	extIndex;
const #99 = Asciz	pos_$eq;
const #100 = Asciz	pos;
const #101 = Asciz	inpStack_$eq;
const #102 = Asciz	(Lscala/collection/immutable/List;)V;
const #103 = Asciz	(Lscala/collection/immutable/List<Lscala/io/Source;>;)V;
const #104 = Asciz	inpStack;
const #105 = Asciz	()Lscala/collection/immutable/List;;
const #106 = Asciz	()Lscala/collection/immutable/List<Lscala/io/Source;>;;
const #107 = Asciz	scala$xml$parsing$MarkupParser$$handle;
const #108 = Asciz	()Lscala/xml/parsing/MarkupHandler;;
const #109 = Asciz	curInput_$eq;
const #110 = Asciz	(Lscala/io/Source;)V;
const #111 = Asciz	curInput;
const #112 = Asciz	()Lscala/io/Source;;
const #113 = Asciz	externalSource;
const #114 = Asciz	(Ljava/lang/String;)Lscala/io/Source;;
const #115 = Asciz	preserveWS;
const #116 = Asciz	input;
const #117 = Asciz	scala$xml$parsing$MarkupParser$_setter_$cbuf_$eq;
const #118 = Asciz	(Lscala/collection/mutable/StringBuilder;)V;
const #119 = Asciz	scala$xml$parsing$MarkupParser$_setter_$scala$xml$parsing$MarkupParser$$handle_$eq;
const #120 = Asciz	(Lscala/xml/parsing/MarkupHandler;)V;
const #121 = Asciz	ScalaSig;
const #122 = Asciz	InnerClasses;
const #123 = Asciz	scala/xml/parsing/MarkupParser$$anon$2;
const #124 = class	#123;	//  scala/xml/parsing/MarkupParser$$anon$2
const #125 = Asciz	scala/xml/parsing/MarkupParser;
const #126 = class	#125;	//  scala/xml/parsing/MarkupParser
const #127 = Asciz	$anon$2;
const #128 = Asciz	scala/xml/parsing/MarkupParser$$anon$1;
const #129 = class	#128;	//  scala/xml/parsing/MarkupParser$$anon$1
const #130 = Asciz	$anon$1;
const #131 = Asciz	scala/xml/parsing/MarkupParser$$anonfun$4;
const #132 = class	#131;	//  scala/xml/parsing/MarkupParser$$anonfun$4
const #133 = Asciz	$anonfun$4;
const #134 = Asciz	scala/xml/parsing/MarkupParser$$anonfun$3;
const #135 = class	#134;	//  scala/xml/parsing/MarkupParser$$anonfun$3
const #136 = Asciz	$anonfun$3;
const #137 = Asciz	scala/xml/parsing/MarkupParser$$anonfun$2;
const #138 = class	#137;	//  scala/xml/parsing/MarkupParser$$anonfun$2
const #139 = Asciz	$anonfun$2;
const #140 = Asciz	scala/xml/parsing/MarkupParser$$anonfun$1;
const #141 = class	#140;	//  scala/xml/parsing/MarkupParser$$anonfun$1
const #142 = Asciz	$anonfun$1;
const #143 = Asciz	scala/xml/parsing/MarkupParser$$anonfun$xToken$1;
const #144 = class	#143;	//  scala/xml/parsing/MarkupParser$$anonfun$xToken$1
const #145 = Asciz	$anonfun$xToken$1;
const #146 = Asciz	scala/xml/parsing/MarkupParser$$anonfun$xCharRef$1;
const #147 = class	#146;	//  scala/xml/parsing/MarkupParser$$anonfun$xCharRef$1
const #148 = Asciz	$anonfun$xCharRef$1;
const #149 = Asciz	scala/xml/parsing/MarkupParser$$anonfun$document$1;
const #150 = class	#149;	//  scala/xml/parsing/MarkupParser$$anonfun$document$1
const #151 = Asciz	$anonfun$document$1;
const #152 = Asciz	scala/xml/parsing/MarkupParser$$anonfun$appendText$1;
const #153 = class	#152;	//  scala/xml/parsing/MarkupParser$$anonfun$appendText$1
const #154 = Asciz	$anonfun$appendText$1;
const #155 = Asciz	java/lang/Object;
const #156 = class	#155;	//  java/lang/Object
const #157 = Asciz	scala/xml/parsing/TokenTests;
const #158 = class	#157;	//  scala/xml/parsing/TokenTests
const #159 = Asciz	scala/ScalaObject;
const #160 = class	#159;	//  scala/ScalaObject

{
public abstract java.lang.String normalizeAttributeValue(java.lang.String);

public abstract void pop();

public abstract void pushExternal(java.lang.String);

public abstract void push(java.lang.String);

public abstract void reportValidationError(int, java.lang.String);

public abstract void reportSyntaxError(java.lang.String);

public abstract void reportSyntaxError(int, java.lang.String);

public abstract void notationDecl();

public abstract void entityDecl();

public abstract void attrDecl();

public abstract void elementDecl();

public abstract void intSubset();

public abstract void markupDecl();

public abstract java.lang.Object markupDecl1();

public abstract void extSubset();

public abstract java.lang.String pubidLiteral();

public abstract java.lang.String systemLiteral();

public abstract java.lang.String xText();

public abstract scala.xml.NodeSeq xProcInstr();

public abstract void xSpace();

public abstract void xSpaceOpt();

public abstract void xEQ();

public abstract java.lang.String xName();

public abstract scala.xml.NodeSeq element1(scala.xml.NamespaceBinding);

public abstract scala.xml.NodeSeq element(scala.xml.NamespaceBinding);

public abstract void parseDTD();

public abstract scala.xml.dtd.ExternalID externalID();

public abstract scala.xml.NodeSeq content(scala.xml.NamespaceBinding);

public abstract void content1(scala.xml.NamespaceBinding, scala.xml.NodeBuffer);

public abstract void appendText(int, scala.xml.NodeBuffer, java.lang.String);

public abstract scala.xml.NodeSeq xComment();

public abstract java.lang.String xCharRef(scala.Function0, scala.Function0);
  Signature: length = 0x2
   00 2E 

public abstract scala.xml.NodeSeq xCharData();

public abstract void xEndTag(java.lang.String);

public abstract scala.Tuple3 xTag(scala.xml.NamespaceBinding);
  Signature: length = 0x2
   00 34 

public abstract java.lang.String xEntityValue();

public abstract java.lang.String xAttributeValue();

public abstract scala.Tuple2 xAttributes(scala.xml.NamespaceBinding);
  Signature: length = 0x2
   00 39 

public abstract void xToken(scala.collection.Seq);
  Signature: length = 0x2
   00 3C 

public abstract void xToken(char);

public abstract void nextch();

public abstract scala.xml.parsing.MarkupParser initialize();

public abstract scala.collection.mutable.StringBuilder putChar(char);

public abstract scala.xml.Document document();

public abstract scala.Tuple2 textDecl();
  Signature: length = 0x2
   00 47 

public abstract scala.Tuple3 prolog();
  Signature: length = 0x2
   00 4A 

public abstract scala.xml.MetaData xmlProcInstr();

public abstract void eof_$eq(boolean);

public abstract boolean eof();

public abstract void doc_$eq(scala.xml.Document);

public abstract scala.xml.Document doc();

public abstract void dtd_$eq(scala.xml.dtd.DTD);

public abstract scala.xml.dtd.DTD dtd();

public abstract scala.collection.mutable.StringBuilder cbuf();

public abstract void ch_$eq(char);

public abstract char ch();

public abstract void tmppos_$eq(int);

public abstract int tmppos();

public abstract void extIndex_$eq(int);

public abstract int extIndex();

public abstract void pos_$eq(int);

public abstract int pos();

public abstract void inpStack_$eq(scala.collection.immutable.List);
  Signature: length = 0x2
   00 67 

public abstract scala.collection.immutable.List inpStack();
  Signature: length = 0x2
   00 6A 

public abstract scala.xml.parsing.MarkupHandler scala$xml$parsing$MarkupParser$$handle();

public abstract void curInput_$eq(scala.io.Source);

public abstract scala.io.Source curInput();

public abstract scala.io.Source externalSource(java.lang.String);

public abstract boolean preserveWS();

public abstract scala.io.Source input();

public abstract void scala$xml$parsing$MarkupParser$_setter_$cbuf_$eq(scala.collection.mutable.StringBuilder);

public abstract void scala$xml$parsing$MarkupParser$_setter_$scala$xml$parsing$MarkupParser$$handle_$eq(scala.xml.parsing.MarkupHandler);

}

