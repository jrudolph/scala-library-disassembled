Compiled from "TokenTests.scala"
public final class scala.xml.parsing.TokenTests$$anonfun$isSpace$1 extends java.lang.Object implements scala.Function1,scala.ScalaObject,java.io.Serializable
  SourceFile: "TokenTests.scala"
  Scala: length = 0x
   
  InnerClass: 
   public final #69= #15 of #48; //$anonfun$isSpace$1=class scala/xml/parsing/TokenTests$$anonfun$isSpace$1 of class scala/xml/parsing/TokenTests
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	TokenTests.scala;
const #3 = Asciz	$outer;
const #4 = Asciz	Lscala/xml/parsing/TokenTests;;
const #5 = Asciz	<init>;
const #6 = Asciz	(Lscala/xml/parsing/TokenTests;)V;
const #7 = Asciz	Code;
const #8 = Asciz	LineNumberTable;
const #9 = Asciz	java/lang/NullPointerException;
const #10 = class	#9;	//  java/lang/NullPointerException
const #11 = Asciz	()V;
const #12 = NameAndType	#5:#11;//  "<init>":()V
const #13 = Method	#10.#12;	//  java/lang/NullPointerException."<init>":()V
const #14 = Asciz	scala/xml/parsing/TokenTests$$anonfun$isSpace$1;
const #15 = class	#14;	//  scala/xml/parsing/TokenTests$$anonfun$isSpace$1
const #16 = NameAndType	#3:#4;//  $outer:Lscala/xml/parsing/TokenTests;
const #17 = Field	#15.#16;	//  scala/xml/parsing/TokenTests$$anonfun$isSpace$1.$outer:Lscala/xml/parsing/TokenTests;
const #18 = Asciz	java/lang/Object;
const #19 = class	#18;	//  java/lang/Object
const #20 = Method	#19.#12;	//  java/lang/Object."<init>":()V
const #21 = Asciz	scala/Function1$class;
const #22 = class	#21;	//  scala/Function1$class
const #23 = Asciz	$init$;
const #24 = Asciz	(Lscala/Function1;)V;
const #25 = NameAndType	#23:#24;//  $init$:(Lscala/Function1;)V
const #26 = Method	#22.#25;	//  scala/Function1$class.$init$:(Lscala/Function1;)V
const #27 = Asciz	this;
const #28 = Asciz	Lscala/xml/parsing/TokenTests$$anonfun$isSpace$1;;
const #29 = Asciz	LocalVariableTable;
const #30 = Asciz	apply;
const #31 = Asciz	(Ljava/lang/Object;)Ljava/lang/Object;;
const #32 = Asciz	scala/runtime/BoxesRunTime;
const #33 = class	#32;	//  scala/runtime/BoxesRunTime
const #34 = Asciz	unboxToChar;
const #35 = Asciz	(Ljava/lang/Object;)C;
const #36 = NameAndType	#34:#35;//  unboxToChar:(Ljava/lang/Object;)C
const #37 = Method	#33.#36;	//  scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
const #38 = Asciz	(C)Z;
const #39 = NameAndType	#30:#38;//  apply:(C)Z
const #40 = Method	#15.#39;	//  scala/xml/parsing/TokenTests$$anonfun$isSpace$1.apply:(C)Z
const #41 = Asciz	boxToBoolean;
const #42 = Asciz	(Z)Ljava/lang/Boolean;;
const #43 = NameAndType	#41:#42;//  boxToBoolean:(Z)Ljava/lang/Boolean;
const #44 = Method	#33.#43;	//  scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
const #45 = Asciz	v1;
const #46 = Asciz	Ljava/lang/Object;;
const #47 = Asciz	scala/xml/parsing/TokenTests;
const #48 = class	#47;	//  scala/xml/parsing/TokenTests
const #49 = Asciz	isSpace;
const #50 = NameAndType	#49:#38;//  isSpace:(C)Z
const #51 = InterfaceMethod	#48.#50;	//  scala/xml/parsing/TokenTests.isSpace:(C)Z
const #52 = Asciz	andThen;
const #53 = Asciz	(Lscala/Function1;)Lscala/Function1;;
const #54 = Asciz	(Lscala/Function1;Lscala/Function1;)Lscala/Function1;;
const #55 = NameAndType	#52:#54;//  andThen:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
const #56 = Method	#22.#55;	//  scala/Function1$class.andThen:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
const #57 = Asciz	g;
const #58 = Asciz	Lscala/Function1;;
const #59 = Asciz	compose;
const #60 = NameAndType	#59:#54;//  compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
const #61 = Method	#22.#60;	//  scala/Function1$class.compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
const #62 = Asciz	toString;
const #63 = Asciz	()Ljava/lang/String;;
const #64 = Asciz	(Lscala/Function1;)Ljava/lang/String;;
const #65 = NameAndType	#62:#64;//  toString:(Lscala/Function1;)Ljava/lang/String;
const #66 = Method	#22.#65;	//  scala/Function1$class.toString:(Lscala/Function1;)Ljava/lang/String;
const #67 = Asciz	Scala;
const #68 = Asciz	InnerClasses;
const #69 = Asciz	$anonfun$isSpace$1;
const #70 = Asciz	scala/Function1;
const #71 = class	#70;	//  scala/Function1
const #72 = Asciz	scala/ScalaObject;
const #73 = class	#72;	//  scala/ScalaObject
const #74 = Asciz	java/io/Serializable;
const #75 = class	#74;	//  java/io/Serializable

{
public scala.xml.parsing.TokenTests$$anonfun$isSpace$1(scala.xml.parsing.TokenTests);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_1
   1:	ifnonnull	12
   4:	new	#10; //class java/lang/NullPointerException
   7:	dup
   8:	invokespecial	#13; //Method java/lang/NullPointerException."<init>":()V
   11:	athrow
   12:	aload_0
   13:	aload_1
   14:	putfield	#17; //Field $outer:Lscala/xml/parsing/TokenTests;
   17:	aload_0
   18:	invokespecial	#20; //Method java/lang/Object."<init>":()V
   21:	aload_0
   22:	invokestatic	#26; //Method scala/Function1$class.$init$:(Lscala/Function1;)V
   25:	return
  LineNumberTable: 
   line 30: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      26      0    this       Lscala/xml/parsing/TokenTests$$anonfun$isSpace$1;
   0      26      1    $outer       Lscala/xml/parsing/TokenTests;


public final java.lang.Object apply(java.lang.Object);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	aload_0
   1:	getfield	#17; //Field $outer:Lscala/xml/parsing/TokenTests;
   4:	astore_2
   5:	aload_0
   6:	aload_1
   7:	invokestatic	#37; //Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
   10:	invokevirtual	#40; //Method apply:(C)Z
   13:	invokestatic	#44; //Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
   16:	areturn
  LineNumberTable: 
   line 30: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      17      0    this       Lscala/xml/parsing/TokenTests$$anonfun$isSpace$1;
   5      12      1    v1       Ljava/lang/Object;


public final boolean apply(char);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	aload_0
   1:	getfield	#17; //Field $outer:Lscala/xml/parsing/TokenTests;
   4:	astore_2
   5:	aload_0
   6:	getfield	#17; //Field $outer:Lscala/xml/parsing/TokenTests;
   9:	iload_1
   10:	invokeinterface	#51,  2; //InterfaceMethod scala/xml/parsing/TokenTests.isSpace:(C)Z
   15:	ireturn
  LineNumberTable: 
   line 30: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      16      0    this       Lscala/xml/parsing/TokenTests$$anonfun$isSpace$1;


public scala.Function1 andThen(scala.Function1);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#56; //Method scala/Function1$class.andThen:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
   5:	areturn
  LineNumberTable: 
   line 30: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/parsing/TokenTests$$anonfun$isSpace$1;
   0      6      1    g       Lscala/Function1;


public scala.Function1 compose(scala.Function1);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#61; //Method scala/Function1$class.compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
   5:	areturn
  LineNumberTable: 
   line 30: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/parsing/TokenTests$$anonfun$isSpace$1;
   0      6      1    g       Lscala/Function1;


public java.lang.String toString();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#66; //Method scala/Function1$class.toString:(Lscala/Function1;)Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 30: 0


}

