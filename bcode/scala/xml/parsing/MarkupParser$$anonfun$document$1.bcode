Compiled from "MarkupParser.scala"
public final class scala.xml.parsing.MarkupParser$$anonfun$document$1 extends scala.runtime.AbstractFunction1 implements java.io.Serializable
  SourceFile: "MarkupParser.scala"
  Scala: length = 0x
   
  InnerClass: 
   public final #102= #9 of #70; //$anonfun$document$1=class scala/xml/parsing/MarkupParser$$anonfun$document$1 of class scala/xml/parsing/MarkupParser
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	MarkupParser.scala;
const #3 = Asciz	<clinit>;
const #4 = Asciz	()V;
const #5 = Asciz	Code;
const #6 = Asciz	serialVersionUID;
const #7 = Asciz	J;
const #8 = Asciz	scala/xml/parsing/MarkupParser$$anonfun$document$1;
const #9 = class	#8;	//  scala/xml/parsing/MarkupParser$$anonfun$document$1
const #10 = NameAndType	#6:#7;//  serialVersionUID:J
const #11 = Field	#9.#10;	//  scala/xml/parsing/MarkupParser$$anonfun$document$1.serialVersionUID:J
const #12 = Asciz	theNode$1;
const #13 = Asciz	Lscala/runtime/ObjectRef;;
const #14 = Asciz	elemCount$1;
const #15 = Asciz	Lscala/runtime/IntRef;;
const #16 = Asciz	$outer;
const #17 = Asciz	Lscala/xml/parsing/MarkupParser;;
const #18 = Asciz	<init>;
const #19 = Asciz	(Lscala/xml/parsing/MarkupParser;Lscala/runtime/IntRef;Lscala/runtime/ObjectRef;)V;
const #20 = Asciz	LineNumberTable;
const #21 = Asciz	java/lang/NullPointerException;
const #22 = class	#21;	//  java/lang/NullPointerException
const #23 = NameAndType	#18:#4;//  "<init>":()V
const #24 = Method	#22.#23;	//  java/lang/NullPointerException."<init>":()V
const #25 = NameAndType	#16:#17;//  $outer:Lscala/xml/parsing/MarkupParser;
const #26 = Field	#9.#25;	//  scala/xml/parsing/MarkupParser$$anonfun$document$1.$outer:Lscala/xml/parsing/MarkupParser;
const #27 = NameAndType	#14:#15;//  elemCount$1:Lscala/runtime/IntRef;
const #28 = Field	#9.#27;	//  scala/xml/parsing/MarkupParser$$anonfun$document$1.elemCount$1:Lscala/runtime/IntRef;
const #29 = NameAndType	#12:#13;//  theNode$1:Lscala/runtime/ObjectRef;
const #30 = Field	#9.#29;	//  scala/xml/parsing/MarkupParser$$anonfun$document$1.theNode$1:Lscala/runtime/ObjectRef;
const #31 = Asciz	scala/runtime/AbstractFunction1;
const #32 = class	#31;	//  scala/runtime/AbstractFunction1
const #33 = Method	#32.#23;	//  scala/runtime/AbstractFunction1."<init>":()V
const #34 = Asciz	this;
const #35 = Asciz	Lscala/xml/parsing/MarkupParser$$anonfun$document$1;;
const #36 = Asciz	LocalVariableTable;
const #37 = Asciz	apply;
const #38 = Asciz	(Ljava/lang/Object;)Ljava/lang/Object;;
const #39 = Asciz	scala/xml/Node;
const #40 = class	#39;	//  scala/xml/Node
const #41 = Asciz	(Lscala/xml/Node;)V;
const #42 = NameAndType	#37:#41;//  apply:(Lscala/xml/Node;)V
const #43 = Method	#9.#42;	//  scala/xml/parsing/MarkupParser$$anonfun$document$1.apply:(Lscala/xml/Node;)V
const #44 = Asciz	scala/runtime/BoxedUnit;
const #45 = class	#44;	//  scala/runtime/BoxedUnit
const #46 = Asciz	UNIT;
const #47 = Asciz	Lscala/runtime/BoxedUnit;;
const #48 = NameAndType	#46:#47;//  UNIT:Lscala/runtime/BoxedUnit;
const #49 = Field	#45.#48;	//  scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
const #50 = Asciz	v1;
const #51 = Asciz	Ljava/lang/Object;;
const #52 = Asciz	scala/xml/ProcInstr;
const #53 = class	#52;	//  scala/xml/ProcInstr
const #54 = Asciz	scala/MatchError;
const #55 = class	#54;	//  scala/MatchError
const #56 = Asciz	toString;
const #57 = Asciz	()Ljava/lang/String;;
const #58 = NameAndType	#56:#57;//  toString:()Ljava/lang/String;
const #59 = Method	#40.#58;	//  scala/xml/Node.toString:()Ljava/lang/String;
const #60 = Asciz	(Ljava/lang/String;)V;
const #61 = NameAndType	#18:#60;//  "<init>":(Ljava/lang/String;)V
const #62 = Method	#55.#61;	//  scala/MatchError."<init>":(Ljava/lang/String;)V
const #63 = Asciz	scala/xml/Comment;
const #64 = class	#63;	//  scala/xml/Comment
const #65 = Asciz	scala/xml/EntityRef;
const #66 = class	#65;	//  scala/xml/EntityRef
const #67 = Asciz	no entity references alllowed here;
const #68 = String	#67;	//  no entity references alllowed here
const #69 = Asciz	scala/xml/parsing/MarkupParser;
const #70 = class	#69;	//  scala/xml/parsing/MarkupParser
const #71 = Asciz	reportSyntaxError;
const #72 = NameAndType	#71:#60;//  reportSyntaxError:(Ljava/lang/String;)V
const #73 = InterfaceMethod	#70.#72;	//  scala/xml/parsing/MarkupParser.reportSyntaxError:(Ljava/lang/String;)V
const #74 = Asciz	scala/xml/SpecialNode;
const #75 = class	#74;	//  scala/xml/SpecialNode
const #76 = Method	#75.#58;	//  scala/xml/SpecialNode.toString:()Ljava/lang/String;
const #77 = Asciz	java/lang/String;
const #78 = class	#77;	//  java/lang/String
const #79 = Asciz	trim;
const #80 = NameAndType	#79:#57;//  trim:()Ljava/lang/String;
const #81 = Method	#78.#80;	//  java/lang/String.trim:()Ljava/lang/String;
const #82 = Asciz	length;
const #83 = Asciz	()I;
const #84 = NameAndType	#82:#83;//  length:()I
const #85 = Method	#78.#84;	//  java/lang/String.length:()I
const #86 = Asciz	scala/runtime/IntRef;
const #87 = class	#86;	//  scala/runtime/IntRef
const #88 = Asciz	elem;
const #89 = Asciz	I;
const #90 = NameAndType	#88:#89;//  elem:I
const #91 = Field	#87.#90;	//  scala/runtime/IntRef.elem:I
const #92 = Asciz	scala/runtime/ObjectRef;
const #93 = class	#92;	//  scala/runtime/ObjectRef
const #94 = NameAndType	#88:#51;//  elem:Ljava/lang/Object;
const #95 = Field	#93.#94;	//  scala/runtime/ObjectRef.elem:Ljava/lang/Object;
const #96 = Asciz	c;
const #97 = Asciz	Lscala/xml/Node;;
const #98 = Asciz	temp36;
const #99 = Asciz	Lscala/xml/SpecialNode;;
const #100 = Asciz	Scala;
const #101 = Asciz	InnerClasses;
const #102 = Asciz	$anonfun$document$1;
const #103 = Asciz	java/io/Serializable;
const #104 = class	#103;	//  java/io/Serializable

{
public static final long serialVersionUID;

public static {};
  Code:
   Stack=2, Locals=0, Args_size=0
   0:	lconst_0
   1:	putstatic	#11; //Field serialVersionUID:J
   4:	return

public scala.xml.parsing.MarkupParser$$anonfun$document$1(scala.xml.parsing.MarkupParser, scala.runtime.IntRef, scala.runtime.ObjectRef);
  Code:
   Stack=2, Locals=4, Args_size=4
   0:	aload_1
   1:	ifnonnull	12
   4:	new	#22; //class java/lang/NullPointerException
   7:	dup
   8:	invokespecial	#24; //Method java/lang/NullPointerException."<init>":()V
   11:	athrow
   12:	aload_0
   13:	aload_1
   14:	putfield	#26; //Field $outer:Lscala/xml/parsing/MarkupParser;
   17:	aload_0
   18:	aload_2
   19:	putfield	#28; //Field elemCount$1:Lscala/runtime/IntRef;
   22:	aload_0
   23:	aload_3
   24:	putfield	#30; //Field theNode$1:Lscala/runtime/ObjectRef;
   27:	aload_0
   28:	invokespecial	#33; //Method scala/runtime/AbstractFunction1."<init>":()V
   31:	return
  LineNumberTable: 
   line 217: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      32      0    this       Lscala/xml/parsing/MarkupParser$$anonfun$document$1;
   0      32      1    $outer       Lscala/xml/parsing/MarkupParser;


public final java.lang.Object apply(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	checkcast	#40; //class scala/xml/Node
   5:	invokevirtual	#43; //Method apply:(Lscala/xml/Node;)V
   8:	getstatic	#49; //Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
   11:	areturn
  LineNumberTable: 
   line 217: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      12      0    this       Lscala/xml/parsing/MarkupParser$$anonfun$document$1;
   0      12      1    v1       Ljava/lang/Object;


public final void apply(scala.xml.Node);
  Code:
   Stack=3, Locals=3, Args_size=2
   0:	aload_1
   1:	instanceof	#53; //class scala/xml/ProcInstr
   4:	ifeq	23
   7:	iconst_1
   8:	ifne	176
   11:	new	#55; //class scala/MatchError
   14:	dup
   15:	aload_1
   16:	invokevirtual	#59; //Method scala/xml/Node.toString:()Ljava/lang/String;
   19:	invokespecial	#62; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   22:	athrow
   23:	aload_1
   24:	instanceof	#64; //class scala/xml/Comment
   27:	ifeq	46
   30:	iconst_1
   31:	ifne	176
   34:	new	#55; //class scala/MatchError
   37:	dup
   38:	aload_1
   39:	invokevirtual	#59; //Method scala/xml/Node.toString:()Ljava/lang/String;
   42:	invokespecial	#62; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   45:	athrow
   46:	aload_1
   47:	instanceof	#66; //class scala/xml/EntityRef
   50:	ifeq	83
   53:	iconst_1
   54:	ifeq	71
   57:	aload_0
   58:	getfield	#26; //Field $outer:Lscala/xml/parsing/MarkupParser;
   61:	ldc	#68; //String no entity references alllowed here
   63:	invokeinterface	#73,  2; //InterfaceMethod scala/xml/parsing/MarkupParser.reportSyntaxError:(Ljava/lang/String;)V
   68:	goto	176
   71:	new	#55; //class scala/MatchError
   74:	dup
   75:	aload_1
   76:	invokevirtual	#59; //Method scala/xml/Node.toString:()Ljava/lang/String;
   79:	invokespecial	#62; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   82:	athrow
   83:	aload_1
   84:	instanceof	#75; //class scala/xml/SpecialNode
   87:	ifeq	144
   90:	aload_1
   91:	checkcast	#75; //class scala/xml/SpecialNode
   94:	astore_2
   95:	iconst_1
   96:	ifeq	132
   99:	aload_2
   100:	invokevirtual	#76; //Method scala/xml/SpecialNode.toString:()Ljava/lang/String;
   103:	invokevirtual	#81; //Method java/lang/String.trim:()Ljava/lang/String;
   106:	invokevirtual	#85; //Method java/lang/String.length:()I
   109:	iconst_0
   110:	if_icmple	176
   113:	aload_0
   114:	getfield	#28; //Field elemCount$1:Lscala/runtime/IntRef;
   117:	aload_0
   118:	getfield	#28; //Field elemCount$1:Lscala/runtime/IntRef;
   121:	getfield	#91; //Field scala/runtime/IntRef.elem:I
   124:	iconst_2
   125:	iadd
   126:	putfield	#91; //Field scala/runtime/IntRef.elem:I
   129:	goto	176
   132:	new	#55; //class scala/MatchError
   135:	dup
   136:	aload_1
   137:	invokevirtual	#59; //Method scala/xml/Node.toString:()Ljava/lang/String;
   140:	invokespecial	#62; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   143:	athrow
   144:	aload_1
   145:	ifnull	189
   148:	iconst_1
   149:	ifeq	177
   152:	aload_0
   153:	getfield	#28; //Field elemCount$1:Lscala/runtime/IntRef;
   156:	aload_0
   157:	getfield	#28; //Field elemCount$1:Lscala/runtime/IntRef;
   160:	getfield	#91; //Field scala/runtime/IntRef.elem:I
   163:	iconst_1
   164:	iadd
   165:	putfield	#91; //Field scala/runtime/IntRef.elem:I
   168:	aload_0
   169:	getfield	#30; //Field theNode$1:Lscala/runtime/ObjectRef;
   172:	aload_1
   173:	putfield	#95; //Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
   176:	return
   177:	new	#55; //class scala/MatchError
   180:	dup
   181:	aload_1
   182:	invokevirtual	#59; //Method scala/xml/Node.toString:()Ljava/lang/String;
   185:	invokespecial	#62; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   188:	athrow
   189:	new	#55; //class scala/MatchError
   192:	dup
   193:	aload_1
   194:	invokevirtual	#59; //Method scala/xml/Node.toString:()Ljava/lang/String;
   197:	invokespecial	#62; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   200:	athrow
  LineNumberTable: 
   line 217: 0
   line 21: 7
   line 217: 11
   line 21: 30
   line 217: 34
   line 21: 53
   line 221: 57
   line 217: 71
   line 21: 95
   line 223: 99
   line 224: 113
   line 217: 132
   line 21: 148
   line 226: 152
   line 227: 168
   line 217: 176

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      201      0    this       Lscala/xml/parsing/MarkupParser$$anonfun$document$1;
   0      201      1    c       Lscala/xml/Node;
   95      49      2    temp36       Lscala/xml/SpecialNode;


}

