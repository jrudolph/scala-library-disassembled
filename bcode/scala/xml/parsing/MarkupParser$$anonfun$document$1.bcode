Compiled from "MarkupParser.scala"
public final class scala.xml.parsing.MarkupParser$$anonfun$document$1 extends java.lang.Object implements scala.Function1,scala.ScalaObject,java.io.Serializable
  SourceFile: "MarkupParser.scala"
  Scala: length = 0x
   
  InnerClass: 
   public final #117= #19 of #62; //$anonfun$document$1=class scala/xml/parsing/MarkupParser$$anonfun$document$1 of class scala/xml/parsing/MarkupParser
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	MarkupParser.scala;
const #3 = Asciz	theNode$1;
const #4 = Asciz	Lscala/runtime/ObjectRef;;
const #5 = Asciz	elemCount$1;
const #6 = Asciz	Lscala/runtime/IntRef;;
const #7 = Asciz	$outer;
const #8 = Asciz	Lscala/xml/parsing/MarkupParser;;
const #9 = Asciz	<init>;
const #10 = Asciz	(Lscala/xml/parsing/MarkupParser;Lscala/runtime/IntRef;Lscala/runtime/ObjectRef;)V;
const #11 = Asciz	Code;
const #12 = Asciz	LineNumberTable;
const #13 = Asciz	java/lang/NullPointerException;
const #14 = class	#13;	//  java/lang/NullPointerException
const #15 = Asciz	()V;
const #16 = NameAndType	#9:#15;//  "<init>":()V
const #17 = Method	#14.#16;	//  java/lang/NullPointerException."<init>":()V
const #18 = Asciz	scala/xml/parsing/MarkupParser$$anonfun$document$1;
const #19 = class	#18;	//  scala/xml/parsing/MarkupParser$$anonfun$document$1
const #20 = NameAndType	#7:#8;//  $outer:Lscala/xml/parsing/MarkupParser;
const #21 = Field	#19.#20;	//  scala/xml/parsing/MarkupParser$$anonfun$document$1.$outer:Lscala/xml/parsing/MarkupParser;
const #22 = NameAndType	#5:#6;//  elemCount$1:Lscala/runtime/IntRef;
const #23 = Field	#19.#22;	//  scala/xml/parsing/MarkupParser$$anonfun$document$1.elemCount$1:Lscala/runtime/IntRef;
const #24 = NameAndType	#3:#4;//  theNode$1:Lscala/runtime/ObjectRef;
const #25 = Field	#19.#24;	//  scala/xml/parsing/MarkupParser$$anonfun$document$1.theNode$1:Lscala/runtime/ObjectRef;
const #26 = Asciz	java/lang/Object;
const #27 = class	#26;	//  java/lang/Object
const #28 = Method	#27.#16;	//  java/lang/Object."<init>":()V
const #29 = Asciz	scala/Function1$class;
const #30 = class	#29;	//  scala/Function1$class
const #31 = Asciz	$init$;
const #32 = Asciz	(Lscala/Function1;)V;
const #33 = NameAndType	#31:#32;//  $init$:(Lscala/Function1;)V
const #34 = Method	#30.#33;	//  scala/Function1$class.$init$:(Lscala/Function1;)V
const #35 = Asciz	this;
const #36 = Asciz	Lscala/xml/parsing/MarkupParser$$anonfun$document$1;;
const #37 = Asciz	LocalVariableTable;
const #38 = Asciz	apply;
const #39 = Asciz	(Ljava/lang/Object;)Ljava/lang/Object;;
const #40 = Asciz	scala/xml/Node;
const #41 = class	#40;	//  scala/xml/Node
const #42 = Asciz	(Lscala/xml/Node;)V;
const #43 = NameAndType	#38:#42;//  apply:(Lscala/xml/Node;)V
const #44 = Method	#19.#43;	//  scala/xml/parsing/MarkupParser$$anonfun$document$1.apply:(Lscala/xml/Node;)V
const #45 = Asciz	scala/runtime/BoxedUnit;
const #46 = class	#45;	//  scala/runtime/BoxedUnit
const #47 = Asciz	UNIT;
const #48 = Asciz	Lscala/runtime/BoxedUnit;;
const #49 = NameAndType	#47:#48;//  UNIT:Lscala/runtime/BoxedUnit;
const #50 = Field	#46.#49;	//  scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
const #51 = Asciz	v1;
const #52 = Asciz	Ljava/lang/Object;;
const #53 = Asciz	scala/xml/ProcInstr;
const #54 = class	#53;	//  scala/xml/ProcInstr
const #55 = Asciz	scala/xml/Comment;
const #56 = class	#55;	//  scala/xml/Comment
const #57 = Asciz	scala/xml/EntityRef;
const #58 = class	#57;	//  scala/xml/EntityRef
const #59 = Asciz	no entity references alllowed here;
const #60 = String	#59;	//  no entity references alllowed here
const #61 = Asciz	scala/xml/parsing/MarkupParser;
const #62 = class	#61;	//  scala/xml/parsing/MarkupParser
const #63 = Asciz	reportSyntaxError;
const #64 = Asciz	(Ljava/lang/String;)V;
const #65 = NameAndType	#63:#64;//  reportSyntaxError:(Ljava/lang/String;)V
const #66 = InterfaceMethod	#62.#65;	//  scala/xml/parsing/MarkupParser.reportSyntaxError:(Ljava/lang/String;)V
const #67 = Asciz	scala/xml/SpecialNode;
const #68 = class	#67;	//  scala/xml/SpecialNode
const #69 = Asciz	toString;
const #70 = Asciz	()Ljava/lang/String;;
const #71 = NameAndType	#69:#70;//  toString:()Ljava/lang/String;
const #72 = Method	#68.#71;	//  scala/xml/SpecialNode.toString:()Ljava/lang/String;
const #73 = Asciz	java/lang/String;
const #74 = class	#73;	//  java/lang/String
const #75 = Asciz	trim;
const #76 = NameAndType	#75:#70;//  trim:()Ljava/lang/String;
const #77 = Method	#74.#76;	//  java/lang/String.trim:()Ljava/lang/String;
const #78 = Asciz	length;
const #79 = Asciz	()I;
const #80 = NameAndType	#78:#79;//  length:()I
const #81 = Method	#74.#80;	//  java/lang/String.length:()I
const #82 = Asciz	scala/runtime/IntRef;
const #83 = class	#82;	//  scala/runtime/IntRef
const #84 = Asciz	elem;
const #85 = Asciz	I;
const #86 = NameAndType	#84:#85;//  elem:I
const #87 = Field	#83.#86;	//  scala/runtime/IntRef.elem:I
const #88 = Asciz	scala/runtime/ObjectRef;
const #89 = class	#88;	//  scala/runtime/ObjectRef
const #90 = NameAndType	#84:#52;//  elem:Ljava/lang/Object;
const #91 = Field	#89.#90;	//  scala/runtime/ObjectRef.elem:Ljava/lang/Object;
const #92 = Asciz	scala/MatchError;
const #93 = class	#92;	//  scala/MatchError
const #94 = Method	#41.#71;	//  scala/xml/Node.toString:()Ljava/lang/String;
const #95 = NameAndType	#9:#64;//  "<init>":(Ljava/lang/String;)V
const #96 = Method	#93.#95;	//  scala/MatchError."<init>":(Ljava/lang/String;)V
const #97 = Asciz	c;
const #98 = Asciz	Lscala/xml/Node;;
const #99 = Asciz	temp28;
const #100 = Asciz	temp36;
const #101 = Asciz	Lscala/xml/SpecialNode;;
const #102 = Asciz	andThen;
const #103 = Asciz	(Lscala/Function1;)Lscala/Function1;;
const #104 = Asciz	(Lscala/Function1;Lscala/Function1;)Lscala/Function1;;
const #105 = NameAndType	#102:#104;//  andThen:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
const #106 = Method	#30.#105;	//  scala/Function1$class.andThen:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
const #107 = Asciz	g;
const #108 = Asciz	Lscala/Function1;;
const #109 = Asciz	compose;
const #110 = NameAndType	#109:#104;//  compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
const #111 = Method	#30.#110;	//  scala/Function1$class.compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
const #112 = Asciz	(Lscala/Function1;)Ljava/lang/String;;
const #113 = NameAndType	#69:#112;//  toString:(Lscala/Function1;)Ljava/lang/String;
const #114 = Method	#30.#113;	//  scala/Function1$class.toString:(Lscala/Function1;)Ljava/lang/String;
const #115 = Asciz	Scala;
const #116 = Asciz	InnerClasses;
const #117 = Asciz	$anonfun$document$1;
const #118 = Asciz	scala/Function1;
const #119 = class	#118;	//  scala/Function1
const #120 = Asciz	scala/ScalaObject;
const #121 = class	#120;	//  scala/ScalaObject
const #122 = Asciz	java/io/Serializable;
const #123 = class	#122;	//  java/io/Serializable

{
public scala.xml.parsing.MarkupParser$$anonfun$document$1(scala.xml.parsing.MarkupParser, scala.runtime.IntRef, scala.runtime.ObjectRef);
  Code:
   Stack=2, Locals=4, Args_size=4
   0:	aload_1
   1:	ifnonnull	12
   4:	new	#14; //class java/lang/NullPointerException
   7:	dup
   8:	invokespecial	#17; //Method java/lang/NullPointerException."<init>":()V
   11:	athrow
   12:	aload_0
   13:	aload_1
   14:	putfield	#21; //Field $outer:Lscala/xml/parsing/MarkupParser;
   17:	aload_0
   18:	aload_2
   19:	putfield	#23; //Field elemCount$1:Lscala/runtime/IntRef;
   22:	aload_0
   23:	aload_3
   24:	putfield	#25; //Field theNode$1:Lscala/runtime/ObjectRef;
   27:	aload_0
   28:	invokespecial	#28; //Method java/lang/Object."<init>":()V
   31:	aload_0
   32:	invokestatic	#34; //Method scala/Function1$class.$init$:(Lscala/Function1;)V
   35:	return
  LineNumberTable: 
   line 214: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      36      0    this       Lscala/xml/parsing/MarkupParser$$anonfun$document$1;
   0      36      1    $outer       Lscala/xml/parsing/MarkupParser;


public final java.lang.Object apply(java.lang.Object);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	aload_0
   1:	getfield	#21; //Field $outer:Lscala/xml/parsing/MarkupParser;
   4:	astore_2
   5:	aload_0
   6:	aload_1
   7:	checkcast	#41; //class scala/xml/Node
   10:	invokevirtual	#44; //Method apply:(Lscala/xml/Node;)V
   13:	getstatic	#50; //Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
   16:	areturn
  LineNumberTable: 
   line 214: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      17      0    this       Lscala/xml/parsing/MarkupParser$$anonfun$document$1;
   5      12      1    v1       Ljava/lang/Object;


public final void apply(scala.xml.Node);
  Code:
   Stack=3, Locals=5, Args_size=2
   0:	aload_0
   1:	getfield	#21; //Field $outer:Lscala/xml/parsing/MarkupParser;
   4:	astore	4
   6:	aload_1
   7:	astore_2
   8:	aload_2
   9:	instanceof	#54; //class scala/xml/ProcInstr
   12:	ifne	116
   15:	aload_2
   16:	instanceof	#56; //class scala/xml/Comment
   19:	ifne	116
   22:	aload_2
   23:	instanceof	#58; //class scala/xml/EntityRef
   26:	ifeq	43
   29:	aload_0
   30:	getfield	#21; //Field $outer:Lscala/xml/parsing/MarkupParser;
   33:	ldc	#60; //String no entity references alllowed here
   35:	invokeinterface	#66,  2; //InterfaceMethod scala/xml/parsing/MarkupParser.reportSyntaxError:(Ljava/lang/String;)V
   40:	goto	116
   43:	aload_2
   44:	instanceof	#68; //class scala/xml/SpecialNode
   47:	ifeq	88
   50:	aload_2
   51:	checkcast	#68; //class scala/xml/SpecialNode
   54:	astore_3
   55:	aload_3
   56:	invokevirtual	#72; //Method scala/xml/SpecialNode.toString:()Ljava/lang/String;
   59:	invokevirtual	#77; //Method java/lang/String.trim:()Ljava/lang/String;
   62:	invokevirtual	#81; //Method java/lang/String.length:()I
   65:	iconst_0
   66:	if_icmple	116
   69:	aload_0
   70:	getfield	#23; //Field elemCount$1:Lscala/runtime/IntRef;
   73:	aload_0
   74:	getfield	#23; //Field elemCount$1:Lscala/runtime/IntRef;
   77:	getfield	#87; //Field scala/runtime/IntRef.elem:I
   80:	iconst_2
   81:	iadd
   82:	putfield	#87; //Field scala/runtime/IntRef.elem:I
   85:	goto	116
   88:	aload_2
   89:	ifnull	117
   92:	aload_0
   93:	getfield	#23; //Field elemCount$1:Lscala/runtime/IntRef;
   96:	aload_0
   97:	getfield	#23; //Field elemCount$1:Lscala/runtime/IntRef;
   100:	getfield	#87; //Field scala/runtime/IntRef.elem:I
   103:	iconst_1
   104:	iadd
   105:	putfield	#87; //Field scala/runtime/IntRef.elem:I
   108:	aload_0
   109:	getfield	#25; //Field theNode$1:Lscala/runtime/ObjectRef;
   112:	aload_2
   113:	putfield	#91; //Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
   116:	return
   117:	new	#93; //class scala/MatchError
   120:	dup
   121:	aload_2
   122:	invokevirtual	#94; //Method scala/xml/Node.toString:()Ljava/lang/String;
   125:	invokespecial	#96; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   128:	athrow
  LineNumberTable: 
   line 214: 0
   line 218: 29
   line 214: 43
   line 219: 55
   line 220: 56
   line 221: 69
   line 214: 88
   line 223: 92
   line 224: 108
   line 222: 112
   line 224: 113
   line 214: 116

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      129      0    this       Lscala/xml/parsing/MarkupParser$$anonfun$document$1;
   6      123      1    c       Lscala/xml/Node;
   8      121      2    temp28       Lscala/xml/Node;
   55      33      3    temp36       Lscala/xml/SpecialNode;


public scala.Function1 andThen(scala.Function1);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#106; //Method scala/Function1$class.andThen:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
   5:	areturn
  LineNumberTable: 
   line 214: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/parsing/MarkupParser$$anonfun$document$1;
   0      6      1    g       Lscala/Function1;


public scala.Function1 compose(scala.Function1);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#111; //Method scala/Function1$class.compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
   5:	areturn
  LineNumberTable: 
   line 214: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/parsing/MarkupParser$$anonfun$document$1;
   0      6      1    g       Lscala/Function1;


public java.lang.String toString();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#114; //Method scala/Function1$class.toString:(Lscala/Function1;)Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 214: 0


}

