Compiled from "MarkupParser.scala"
public final class scala.xml.parsing.MarkupParser$$anonfun$document$1 extends java.lang.Object implements scala.Function1,scala.ScalaObject,java.io.Serializable
  SourceFile: "MarkupParser.scala"
  Scala: length = 0x
   
  InnerClass: 
   public final #121= #9 of #76; //$anonfun$document$1=class scala/xml/parsing/MarkupParser$$anonfun$document$1 of class scala/xml/parsing/MarkupParser
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	MarkupParser.scala;
const #3 = Asciz	<clinit>;
const #4 = Asciz	()V;
const #5 = Asciz	Code;
const #6 = Asciz	serialVersionUID;
const #7 = Asciz	J;
const #8 = Asciz	scala/xml/parsing/MarkupParser$$anonfun$document$1;
const #9 = class	#8;	//  scala/xml/parsing/MarkupParser$$anonfun$document$1
const #10 = NameAndType	#6:#7;//  serialVersionUID:J
const #11 = Field	#9.#10;	//  scala/xml/parsing/MarkupParser$$anonfun$document$1.serialVersionUID:J
const #12 = Asciz	theNode$1;
const #13 = Asciz	Lscala/runtime/ObjectRef;;
const #14 = Asciz	elemCount$1;
const #15 = Asciz	Lscala/runtime/IntRef;;
const #16 = Asciz	$outer;
const #17 = Asciz	Lscala/xml/parsing/MarkupParser;;
const #18 = Asciz	<init>;
const #19 = Asciz	(Lscala/xml/parsing/MarkupParser;Lscala/runtime/IntRef;Lscala/runtime/ObjectRef;)V;
const #20 = Asciz	LineNumberTable;
const #21 = Asciz	java/lang/NullPointerException;
const #22 = class	#21;	//  java/lang/NullPointerException
const #23 = NameAndType	#18:#4;//  "<init>":()V
const #24 = Method	#22.#23;	//  java/lang/NullPointerException."<init>":()V
const #25 = NameAndType	#16:#17;//  $outer:Lscala/xml/parsing/MarkupParser;
const #26 = Field	#9.#25;	//  scala/xml/parsing/MarkupParser$$anonfun$document$1.$outer:Lscala/xml/parsing/MarkupParser;
const #27 = NameAndType	#14:#15;//  elemCount$1:Lscala/runtime/IntRef;
const #28 = Field	#9.#27;	//  scala/xml/parsing/MarkupParser$$anonfun$document$1.elemCount$1:Lscala/runtime/IntRef;
const #29 = NameAndType	#12:#13;//  theNode$1:Lscala/runtime/ObjectRef;
const #30 = Field	#9.#29;	//  scala/xml/parsing/MarkupParser$$anonfun$document$1.theNode$1:Lscala/runtime/ObjectRef;
const #31 = Asciz	java/lang/Object;
const #32 = class	#31;	//  java/lang/Object
const #33 = Method	#32.#23;	//  java/lang/Object."<init>":()V
const #34 = Asciz	scala/Function1$class;
const #35 = class	#34;	//  scala/Function1$class
const #36 = Asciz	$init$;
const #37 = Asciz	(Lscala/Function1;)V;
const #38 = NameAndType	#36:#37;//  $init$:(Lscala/Function1;)V
const #39 = Method	#35.#38;	//  scala/Function1$class.$init$:(Lscala/Function1;)V
const #40 = Asciz	this;
const #41 = Asciz	Lscala/xml/parsing/MarkupParser$$anonfun$document$1;;
const #42 = Asciz	LocalVariableTable;
const #43 = Asciz	apply;
const #44 = Asciz	(Ljava/lang/Object;)Ljava/lang/Object;;
const #45 = Asciz	scala/xml/Node;
const #46 = class	#45;	//  scala/xml/Node
const #47 = Asciz	(Lscala/xml/Node;)V;
const #48 = NameAndType	#43:#47;//  apply:(Lscala/xml/Node;)V
const #49 = Method	#9.#48;	//  scala/xml/parsing/MarkupParser$$anonfun$document$1.apply:(Lscala/xml/Node;)V
const #50 = Asciz	scala/runtime/BoxedUnit;
const #51 = class	#50;	//  scala/runtime/BoxedUnit
const #52 = Asciz	UNIT;
const #53 = Asciz	Lscala/runtime/BoxedUnit;;
const #54 = NameAndType	#52:#53;//  UNIT:Lscala/runtime/BoxedUnit;
const #55 = Field	#51.#54;	//  scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
const #56 = Asciz	v1;
const #57 = Asciz	Ljava/lang/Object;;
const #58 = Asciz	scala/xml/ProcInstr;
const #59 = class	#58;	//  scala/xml/ProcInstr
const #60 = Asciz	scala/MatchError;
const #61 = class	#60;	//  scala/MatchError
const #62 = Asciz	toString;
const #63 = Asciz	()Ljava/lang/String;;
const #64 = NameAndType	#62:#63;//  toString:()Ljava/lang/String;
const #65 = Method	#46.#64;	//  scala/xml/Node.toString:()Ljava/lang/String;
const #66 = Asciz	(Ljava/lang/String;)V;
const #67 = NameAndType	#18:#66;//  "<init>":(Ljava/lang/String;)V
const #68 = Method	#61.#67;	//  scala/MatchError."<init>":(Ljava/lang/String;)V
const #69 = Asciz	scala/xml/Comment;
const #70 = class	#69;	//  scala/xml/Comment
const #71 = Asciz	scala/xml/EntityRef;
const #72 = class	#71;	//  scala/xml/EntityRef
const #73 = Asciz	no entity references alllowed here;
const #74 = String	#73;	//  no entity references alllowed here
const #75 = Asciz	scala/xml/parsing/MarkupParser;
const #76 = class	#75;	//  scala/xml/parsing/MarkupParser
const #77 = Asciz	reportSyntaxError;
const #78 = NameAndType	#77:#66;//  reportSyntaxError:(Ljava/lang/String;)V
const #79 = InterfaceMethod	#76.#78;	//  scala/xml/parsing/MarkupParser.reportSyntaxError:(Ljava/lang/String;)V
const #80 = Asciz	scala/xml/SpecialNode;
const #81 = class	#80;	//  scala/xml/SpecialNode
const #82 = Method	#81.#64;	//  scala/xml/SpecialNode.toString:()Ljava/lang/String;
const #83 = Asciz	java/lang/String;
const #84 = class	#83;	//  java/lang/String
const #85 = Asciz	trim;
const #86 = NameAndType	#85:#63;//  trim:()Ljava/lang/String;
const #87 = Method	#84.#86;	//  java/lang/String.trim:()Ljava/lang/String;
const #88 = Asciz	length;
const #89 = Asciz	()I;
const #90 = NameAndType	#88:#89;//  length:()I
const #91 = Method	#84.#90;	//  java/lang/String.length:()I
const #92 = Asciz	scala/runtime/IntRef;
const #93 = class	#92;	//  scala/runtime/IntRef
const #94 = Asciz	elem;
const #95 = Asciz	I;
const #96 = NameAndType	#94:#95;//  elem:I
const #97 = Field	#93.#96;	//  scala/runtime/IntRef.elem:I
const #98 = Asciz	scala/runtime/ObjectRef;
const #99 = class	#98;	//  scala/runtime/ObjectRef
const #100 = NameAndType	#94:#57;//  elem:Ljava/lang/Object;
const #101 = Field	#99.#100;	//  scala/runtime/ObjectRef.elem:Ljava/lang/Object;
const #102 = Asciz	c;
const #103 = Asciz	Lscala/xml/Node;;
const #104 = Asciz	temp36;
const #105 = Asciz	Lscala/xml/SpecialNode;;
const #106 = Asciz	andThen;
const #107 = Asciz	(Lscala/Function1;)Lscala/Function1;;
const #108 = Asciz	(Lscala/Function1;Lscala/Function1;)Lscala/Function1;;
const #109 = NameAndType	#106:#108;//  andThen:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
const #110 = Method	#35.#109;	//  scala/Function1$class.andThen:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
const #111 = Asciz	g;
const #112 = Asciz	Lscala/Function1;;
const #113 = Asciz	compose;
const #114 = NameAndType	#113:#108;//  compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
const #115 = Method	#35.#114;	//  scala/Function1$class.compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
const #116 = Asciz	(Lscala/Function1;)Ljava/lang/String;;
const #117 = NameAndType	#62:#116;//  toString:(Lscala/Function1;)Ljava/lang/String;
const #118 = Method	#35.#117;	//  scala/Function1$class.toString:(Lscala/Function1;)Ljava/lang/String;
const #119 = Asciz	Scala;
const #120 = Asciz	InnerClasses;
const #121 = Asciz	$anonfun$document$1;
const #122 = Asciz	scala/Function1;
const #123 = class	#122;	//  scala/Function1
const #124 = Asciz	scala/ScalaObject;
const #125 = class	#124;	//  scala/ScalaObject
const #126 = Asciz	java/io/Serializable;
const #127 = class	#126;	//  java/io/Serializable

{
public static final long serialVersionUID;

public static {};
  Code:
   Stack=2, Locals=0, Args_size=0
   0:	lconst_0
   1:	putstatic	#11; //Field serialVersionUID:J
   4:	return

public scala.xml.parsing.MarkupParser$$anonfun$document$1(scala.xml.parsing.MarkupParser, scala.runtime.IntRef, scala.runtime.ObjectRef);
  Code:
   Stack=2, Locals=4, Args_size=4
   0:	aload_1
   1:	ifnonnull	12
   4:	new	#22; //class java/lang/NullPointerException
   7:	dup
   8:	invokespecial	#24; //Method java/lang/NullPointerException."<init>":()V
   11:	athrow
   12:	aload_0
   13:	aload_1
   14:	putfield	#26; //Field $outer:Lscala/xml/parsing/MarkupParser;
   17:	aload_0
   18:	aload_2
   19:	putfield	#28; //Field elemCount$1:Lscala/runtime/IntRef;
   22:	aload_0
   23:	aload_3
   24:	putfield	#30; //Field theNode$1:Lscala/runtime/ObjectRef;
   27:	aload_0
   28:	invokespecial	#33; //Method java/lang/Object."<init>":()V
   31:	aload_0
   32:	invokestatic	#39; //Method scala/Function1$class.$init$:(Lscala/Function1;)V
   35:	return
  LineNumberTable: 
   line 217: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      36      0    this       Lscala/xml/parsing/MarkupParser$$anonfun$document$1;
   0      36      1    $outer       Lscala/xml/parsing/MarkupParser;


public final java.lang.Object apply(java.lang.Object);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	aload_0
   1:	getfield	#26; //Field $outer:Lscala/xml/parsing/MarkupParser;
   4:	astore_2
   5:	aload_0
   6:	aload_1
   7:	checkcast	#46; //class scala/xml/Node
   10:	invokevirtual	#49; //Method apply:(Lscala/xml/Node;)V
   13:	getstatic	#55; //Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
   16:	areturn
  LineNumberTable: 
   line 217: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      17      0    this       Lscala/xml/parsing/MarkupParser$$anonfun$document$1;
   5      12      1    v1       Ljava/lang/Object;


public final void apply(scala.xml.Node);
  Code:
   Stack=3, Locals=4, Args_size=2
   0:	aload_0
   1:	getfield	#26; //Field $outer:Lscala/xml/parsing/MarkupParser;
   4:	astore_3
   5:	aload_1
   6:	instanceof	#59; //class scala/xml/ProcInstr
   9:	ifeq	28
   12:	iconst_1
   13:	ifne	181
   16:	new	#61; //class scala/MatchError
   19:	dup
   20:	aload_1
   21:	invokevirtual	#65; //Method scala/xml/Node.toString:()Ljava/lang/String;
   24:	invokespecial	#68; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   27:	athrow
   28:	aload_1
   29:	instanceof	#70; //class scala/xml/Comment
   32:	ifeq	51
   35:	iconst_1
   36:	ifne	181
   39:	new	#61; //class scala/MatchError
   42:	dup
   43:	aload_1
   44:	invokevirtual	#65; //Method scala/xml/Node.toString:()Ljava/lang/String;
   47:	invokespecial	#68; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   50:	athrow
   51:	aload_1
   52:	instanceof	#72; //class scala/xml/EntityRef
   55:	ifeq	88
   58:	iconst_1
   59:	ifeq	76
   62:	aload_0
   63:	getfield	#26; //Field $outer:Lscala/xml/parsing/MarkupParser;
   66:	ldc	#74; //String no entity references alllowed here
   68:	invokeinterface	#79,  2; //InterfaceMethod scala/xml/parsing/MarkupParser.reportSyntaxError:(Ljava/lang/String;)V
   73:	goto	181
   76:	new	#61; //class scala/MatchError
   79:	dup
   80:	aload_1
   81:	invokevirtual	#65; //Method scala/xml/Node.toString:()Ljava/lang/String;
   84:	invokespecial	#68; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   87:	athrow
   88:	aload_1
   89:	instanceof	#81; //class scala/xml/SpecialNode
   92:	ifeq	149
   95:	aload_1
   96:	checkcast	#81; //class scala/xml/SpecialNode
   99:	astore_2
   100:	iconst_1
   101:	ifeq	137
   104:	aload_2
   105:	invokevirtual	#82; //Method scala/xml/SpecialNode.toString:()Ljava/lang/String;
   108:	invokevirtual	#87; //Method java/lang/String.trim:()Ljava/lang/String;
   111:	invokevirtual	#91; //Method java/lang/String.length:()I
   114:	iconst_0
   115:	if_icmple	181
   118:	aload_0
   119:	getfield	#28; //Field elemCount$1:Lscala/runtime/IntRef;
   122:	aload_0
   123:	getfield	#28; //Field elemCount$1:Lscala/runtime/IntRef;
   126:	getfield	#97; //Field scala/runtime/IntRef.elem:I
   129:	iconst_2
   130:	iadd
   131:	putfield	#97; //Field scala/runtime/IntRef.elem:I
   134:	goto	181
   137:	new	#61; //class scala/MatchError
   140:	dup
   141:	aload_1
   142:	invokevirtual	#65; //Method scala/xml/Node.toString:()Ljava/lang/String;
   145:	invokespecial	#68; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   148:	athrow
   149:	aload_1
   150:	ifnull	194
   153:	iconst_1
   154:	ifeq	182
   157:	aload_0
   158:	getfield	#28; //Field elemCount$1:Lscala/runtime/IntRef;
   161:	aload_0
   162:	getfield	#28; //Field elemCount$1:Lscala/runtime/IntRef;
   165:	getfield	#97; //Field scala/runtime/IntRef.elem:I
   168:	iconst_1
   169:	iadd
   170:	putfield	#97; //Field scala/runtime/IntRef.elem:I
   173:	aload_0
   174:	getfield	#30; //Field theNode$1:Lscala/runtime/ObjectRef;
   177:	aload_1
   178:	putfield	#101; //Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
   181:	return
   182:	new	#61; //class scala/MatchError
   185:	dup
   186:	aload_1
   187:	invokevirtual	#65; //Method scala/xml/Node.toString:()Ljava/lang/String;
   190:	invokespecial	#68; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   193:	athrow
   194:	new	#61; //class scala/MatchError
   197:	dup
   198:	aload_1
   199:	invokevirtual	#65; //Method scala/xml/Node.toString:()Ljava/lang/String;
   202:	invokespecial	#68; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   205:	athrow
  LineNumberTable: 
   line 217: 0
   line 21: 12
   line 217: 16
   line 21: 35
   line 217: 39
   line 21: 58
   line 221: 62
   line 217: 76
   line 21: 100
   line 223: 104
   line 224: 118
   line 217: 137
   line 21: 153
   line 226: 157
   line 227: 173
   line 217: 181

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      206      0    this       Lscala/xml/parsing/MarkupParser$$anonfun$document$1;
   5      201      1    c       Lscala/xml/Node;
   100      49      2    temp36       Lscala/xml/SpecialNode;


public scala.Function1 andThen(scala.Function1);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#110; //Method scala/Function1$class.andThen:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
   5:	areturn
  LineNumberTable: 
   line 217: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/parsing/MarkupParser$$anonfun$document$1;
   0      6      1    g       Lscala/Function1;


public scala.Function1 compose(scala.Function1);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#115; //Method scala/Function1$class.compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
   5:	areturn
  LineNumberTable: 
   line 217: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/parsing/MarkupParser$$anonfun$document$1;
   0      6      1    g       Lscala/Function1;


public java.lang.String toString();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#118; //Method scala/Function1$class.toString:(Lscala/Function1;)Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 217: 0


}

