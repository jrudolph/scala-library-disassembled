Compiled from "XhtmlParser.scala"
public abstract class scala.xml.parsing.PCDataMarkupParser$class extends java.lang.Object
  SourceFile: "XhtmlParser.scala"
  Scala: length = 0x
   
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	XhtmlParser.scala;
const #3 = Asciz	$init$;
const #4 = Asciz	(Lscala/xml/parsing/PCDataMarkupParser;)V;
const #5 = Asciz	Code;
const #6 = Asciz	LineNumberTable;
const #7 = Asciz	$this;
const #8 = Asciz	Lscala/xml/parsing/PCDataMarkupParser;;
const #9 = Asciz	LocalVariableTable;
const #10 = Asciz	xCharData;
const #11 = Asciz	(Lscala/xml/parsing/PCDataMarkupParser;)Lscala/xml/NodeSeq;;
const #12 = Asciz	scala/Predef$;
const #13 = class	#12;	//  scala/Predef$
const #14 = Asciz	MODULE$;
const #15 = Asciz	Lscala/Predef$;;
const #16 = NameAndType	#14:#15;//  MODULE$:Lscala/Predef$;
const #17 = Field	#13.#16;	//  scala/Predef$.MODULE$:Lscala/Predef$;
const #18 = Asciz	[CDATA[;
const #19 = String	#18;	//  [CDATA[
const #20 = Asciz	stringWrapper;
const #21 = Asciz	(Ljava/lang/String;)Lscala/runtime/RichString;;
const #22 = NameAndType	#20:#21;//  stringWrapper:(Ljava/lang/String;)Lscala/runtime/RichString;
const #23 = Method	#13.#22;	//  scala/Predef$.stringWrapper:(Ljava/lang/String;)Lscala/runtime/RichString;
const #24 = Asciz	scala/xml/parsing/MarkupParser;
const #25 = class	#24;	//  scala/xml/parsing/MarkupParser
const #26 = Asciz	xToken;
const #27 = Asciz	(Lscala/collection/Sequence;)V;
const #28 = NameAndType	#26:#27;//  xToken:(Lscala/collection/Sequence;)V
const #29 = InterfaceMethod	#25.#28;	//  scala/xml/parsing/MarkupParser.xToken:(Lscala/collection/Sequence;)V
const #30 = Asciz	pos;
const #31 = Asciz	()I;
const #32 = NameAndType	#30:#31;//  pos:()I
const #33 = InterfaceMethod	#25.#32;	//  scala/xml/parsing/MarkupParser.pos:()I
const #34 = Asciz	scala/collection/mutable/StringBuilder;
const #35 = class	#34;	//  scala/collection/mutable/StringBuilder
const #36 = Asciz	<init>;
const #37 = Asciz	()V;
const #38 = NameAndType	#36:#37;//  "<init>":()V
const #39 = Method	#35.#38;	//  scala/collection/mutable/StringBuilder."<init>":()V
const #40 = Asciz	ch;
const #41 = Asciz	()C;
const #42 = NameAndType	#40:#41;//  ch:()C
const #43 = InterfaceMethod	#25.#42;	//  scala/xml/parsing/MarkupParser.ch:()C
const #44 = int	93;
const #45 = Asciz	append;
const #46 = Asciz	(C)Lscala/collection/mutable/StringBuilder;;
const #47 = NameAndType	#45:#46;//  append:(C)Lscala/collection/mutable/StringBuilder;
const #48 = Method	#35.#47;	//  scala/collection/mutable/StringBuilder.append:(C)Lscala/collection/mutable/StringBuilder;
const #49 = Asciz	nextch;
const #50 = NameAndType	#49:#37;//  nextch:()V
const #51 = InterfaceMethod	#25.#50;	//  scala/xml/parsing/MarkupParser.nextch:()V
const #52 = int	62;
const #53 = Asciz	length;
const #54 = NameAndType	#53:#31;//  length:()I
const #55 = Method	#35.#54;	//  scala/collection/mutable/StringBuilder.length:()I
const #56 = Asciz	setLength;
const #57 = Asciz	(I)V;
const #58 = NameAndType	#56:#57;//  setLength:(I)V
const #59 = Method	#35.#58;	//  scala/collection/mutable/StringBuilder.setLength:(I)V
const #60 = Asciz	scala/xml/PCData;
const #61 = class	#60;	//  scala/xml/PCData
const #62 = Asciz	toString;
const #63 = Asciz	()Ljava/lang/String;;
const #64 = NameAndType	#62:#63;//  toString:()Ljava/lang/String;
const #65 = Method	#35.#64;	//  scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
const #66 = Asciz	(Ljava/lang/String;)V;
const #67 = NameAndType	#36:#66;//  "<init>":(Ljava/lang/String;)V
const #68 = Method	#61.#67;	//  scala/xml/PCData."<init>":(Ljava/lang/String;)V
const #69 = Asciz	pos1;
const #70 = Asciz	I;
const #71 = Asciz	sb;
const #72 = Asciz	Lscala/collection/mutable/StringBuilder;;
const #73 = Asciz	Scala;
const #74 = Asciz	scala/xml/parsing/PCDataMarkupParser$class;
const #75 = class	#74;	//  scala/xml/parsing/PCDataMarkupParser$class
const #76 = Asciz	java/lang/Object;
const #77 = class	#76;	//  java/lang/Object

{
public static void $init$(scala.xml.parsing.PCDataMarkupParser);
  Code:
   Stack=0, Locals=1, Args_size=1
   0:	return
  LineNumberTable: 
   line 24: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      1      0    $this       Lscala/xml/parsing/PCDataMarkupParser;


public static scala.xml.NodeSeq xCharData(scala.xml.parsing.PCDataMarkupParser);
  Code:
   Stack=3, Locals=3, Args_size=1
   0:	aload_0
   1:	getstatic	#17; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   4:	ldc	#19; //String [CDATA[
   6:	invokevirtual	#23; //Method scala/Predef$.stringWrapper:(Ljava/lang/String;)Lscala/runtime/RichString;
   9:	invokeinterface	#29,  2; //InterfaceMethod scala/xml/parsing/MarkupParser.xToken:(Lscala/collection/Sequence;)V
   14:	aload_0
   15:	invokeinterface	#33,  1; //InterfaceMethod scala/xml/parsing/MarkupParser.pos:()I
   20:	istore_1
   21:	new	#35; //class scala/collection/mutable/StringBuilder
   24:	dup
   25:	invokespecial	#39; //Method scala/collection/mutable/StringBuilder."<init>":()V
   28:	astore_2
   29:	aload_0
   30:	invokeinterface	#43,  1; //InterfaceMethod scala/xml/parsing/MarkupParser.ch:()C
   35:	ldc	#44; //int 93
   37:	if_icmpne	140
   40:	aload_2
   41:	aload_0
   42:	invokeinterface	#43,  1; //InterfaceMethod scala/xml/parsing/MarkupParser.ch:()C
   47:	invokevirtual	#48; //Method scala/collection/mutable/StringBuilder.append:(C)Lscala/collection/mutable/StringBuilder;
   50:	pop
   51:	aload_0
   52:	invokeinterface	#51,  1; //InterfaceMethod scala/xml/parsing/MarkupParser.nextch:()V
   57:	aload_0
   58:	invokeinterface	#43,  1; //InterfaceMethod scala/xml/parsing/MarkupParser.ch:()C
   63:	ldc	#44; //int 93
   65:	if_icmpne	72
   68:	iconst_1
   69:	goto	73
   72:	iconst_0
   73:	ifeq	140
   76:	aload_2
   77:	aload_0
   78:	invokeinterface	#43,  1; //InterfaceMethod scala/xml/parsing/MarkupParser.ch:()C
   83:	invokevirtual	#48; //Method scala/collection/mutable/StringBuilder.append:(C)Lscala/collection/mutable/StringBuilder;
   86:	pop
   87:	aload_0
   88:	invokeinterface	#51,  1; //InterfaceMethod scala/xml/parsing/MarkupParser.nextch:()V
   93:	aload_0
   94:	invokeinterface	#43,  1; //InterfaceMethod scala/xml/parsing/MarkupParser.ch:()C
   99:	ldc	#52; //int 62
   101:	if_icmpne	108
   104:	iconst_1
   105:	goto	109
   108:	iconst_0
   109:	ifeq	140
   112:	aload_2
   113:	aload_2
   114:	invokevirtual	#55; //Method scala/collection/mutable/StringBuilder.length:()I
   117:	iconst_2
   118:	isub
   119:	invokevirtual	#59; //Method scala/collection/mutable/StringBuilder.setLength:(I)V
   122:	aload_0
   123:	invokeinterface	#51,  1; //InterfaceMethod scala/xml/parsing/MarkupParser.nextch:()V
   128:	new	#61; //class scala/xml/PCData
   131:	dup
   132:	aload_2
   133:	invokevirtual	#65; //Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
   136:	invokespecial	#68; //Method scala/xml/PCData."<init>":(Ljava/lang/String;)V
   139:	areturn
   140:	aload_2
   141:	aload_0
   142:	invokeinterface	#43,  1; //InterfaceMethod scala/xml/parsing/MarkupParser.ch:()C
   147:	invokevirtual	#48; //Method scala/collection/mutable/StringBuilder.append:(C)Lscala/collection/mutable/StringBuilder;
   150:	pop
   151:	aload_0
   152:	invokeinterface	#51,  1; //InterfaceMethod scala/xml/parsing/MarkupParser.nextch:()V
   157:	goto	29
  LineNumberTable: 
   line 31: 0
   line 32: 14
   line 33: 21
   line 35: 29
   line 36: 40
   line 37: 76
   line 38: 112
   line 39: 122
   line 40: 128
   line 41: 140
   line 35: 150
   line 42: 151
   line 34: 157

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      160      0    $this       Lscala/xml/parsing/PCDataMarkupParser;
   21      139      1    pos1       I
   29      131      2    sb       Lscala/collection/mutable/StringBuilder;


}

