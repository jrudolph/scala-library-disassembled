Compiled from "Expression.scala"
public class scala.xml.path.Expression$Attrib extends scala.xml.path.Expression$GenExp implements scala.ScalaObject,scala.Product,java.io.Serializable
  SourceFile: "Expression.scala"
  Scala: length = 0x
   
  InnerClass: 
   public abstract #118= #115 of #117; //Expr=class scala/xml/path/Expression$Expr of class scala/xml/path/Expression
   public #68= #12 of #117; //Attrib=class scala/xml/path/Expression$Attrib of class scala/xml/path/Expression
   public abstract #119= #18 of #117; //GenExp=class scala/xml/path/Expression$GenExp of class scala/xml/path/Expression
   public #122= #121 of #117; //NameTest=class scala/xml/path/Expression$NameTest of class scala/xml/path/Expression
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Expression.scala;
const #3 = Asciz	e;
const #4 = Asciz	Lscala/xml/path/Expression$Expr;;
const #5 = Asciz	test;
const #6 = Asciz	Lscala/xml/path/Expression$NameTest;;
const #7 = Asciz	<init>;
const #8 = Asciz	(Lscala/xml/path/Expression$NameTest;Lscala/xml/path/Expression$Expr;)V;
const #9 = Asciz	Code;
const #10 = Asciz	LineNumberTable;
const #11 = Asciz	scala/xml/path/Expression$Attrib;
const #12 = class	#11;	//  scala/xml/path/Expression$Attrib
const #13 = NameAndType	#5:#6;//  test:Lscala/xml/path/Expression$NameTest;
const #14 = Field	#12.#13;	//  scala/xml/path/Expression$Attrib.test:Lscala/xml/path/Expression$NameTest;
const #15 = NameAndType	#3:#4;//  e:Lscala/xml/path/Expression$Expr;
const #16 = Field	#12.#15;	//  scala/xml/path/Expression$Attrib.e:Lscala/xml/path/Expression$Expr;
const #17 = Asciz	scala/xml/path/Expression$GenExp;
const #18 = class	#17;	//  scala/xml/path/Expression$GenExp
const #19 = Asciz	()V;
const #20 = NameAndType	#7:#19;//  "<init>":()V
const #21 = Method	#18.#20;	//  scala/xml/path/Expression$GenExp."<init>":()V
const #22 = Asciz	scala/Product$class;
const #23 = class	#22;	//  scala/Product$class
const #24 = Asciz	$init$;
const #25 = Asciz	(Lscala/Product;)V;
const #26 = NameAndType	#24:#25;//  $init$:(Lscala/Product;)V
const #27 = Method	#23.#26;	//  scala/Product$class.$init$:(Lscala/Product;)V
const #28 = Asciz	this;
const #29 = Asciz	Lscala/xml/path/Expression$Attrib;;
const #30 = Asciz	LocalVariableTable;
const #31 = Asciz	gd3$1;
const #32 = Asciz	(Lscala/xml/path/Expression$Expr;Lscala/xml/path/Expression$NameTest;)Z;
const #33 = Asciz	()Lscala/xml/path/Expression$NameTest;;
const #34 = NameAndType	#5:#33;//  test:()Lscala/xml/path/Expression$NameTest;
const #35 = Method	#12.#34;	//  scala/xml/path/Expression$Attrib.test:()Lscala/xml/path/Expression$NameTest;
const #36 = Asciz	java/lang/Object;
const #37 = class	#36;	//  java/lang/Object
const #38 = Asciz	equals;
const #39 = Asciz	(Ljava/lang/Object;)Z;
const #40 = NameAndType	#38:#39;//  equals:(Ljava/lang/Object;)Z
const #41 = Method	#37.#40;	//  java/lang/Object.equals:(Ljava/lang/Object;)Z
const #42 = Asciz	()Lscala/xml/path/Expression$Expr;;
const #43 = NameAndType	#3:#42;//  e:()Lscala/xml/path/Expression$Expr;
const #44 = Method	#12.#43;	//  scala/xml/path/Expression$Attrib.e:()Lscala/xml/path/Expression$Expr;
const #45 = Asciz	canEqual;
const #46 = Asciz	productElement;
const #47 = Asciz	(I)Ljava/lang/Object;;
const #48 = Asciz	java/lang/IndexOutOfBoundsException;
const #49 = class	#48;	//  java/lang/IndexOutOfBoundsException
const #50 = Asciz	scala/runtime/BoxesRunTime;
const #51 = class	#50;	//  scala/runtime/BoxesRunTime
const #52 = Asciz	boxToInteger;
const #53 = Asciz	(I)Ljava/lang/Integer;;
const #54 = NameAndType	#52:#53;//  boxToInteger:(I)Ljava/lang/Integer;
const #55 = Method	#51.#54;	//  scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
const #56 = Asciz	toString;
const #57 = Asciz	()Ljava/lang/String;;
const #58 = NameAndType	#56:#57;//  toString:()Ljava/lang/String;
const #59 = Method	#37.#58;	//  java/lang/Object.toString:()Ljava/lang/String;
const #60 = Asciz	(Ljava/lang/String;)V;
const #61 = NameAndType	#7:#60;//  "<init>":(Ljava/lang/String;)V
const #62 = Method	#49.#61;	//  java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
const #63 = Asciz	temp11;
const #64 = Asciz	I;
const #65 = Asciz	productArity;
const #66 = Asciz	()I;
const #67 = Asciz	productPrefix;
const #68 = Asciz	Attrib;
const #69 = String	#68;	//  Attrib
const #70 = NameAndType	#31:#32;//  gd3$1:(Lscala/xml/path/Expression$Expr;Lscala/xml/path/Expression$NameTest;)Z
const #71 = Method	#12.#70;	//  scala/xml/path/Expression$Attrib.gd3$1:(Lscala/xml/path/Expression$Expr;Lscala/xml/path/Expression$NameTest;)Z
const #72 = Asciz	scala/Product;
const #73 = class	#72;	//  scala/Product
const #74 = NameAndType	#45:#39;//  canEqual:(Ljava/lang/Object;)Z
const #75 = InterfaceMethod	#73.#74;	//  scala/Product.canEqual:(Ljava/lang/Object;)Z
const #76 = Asciz	temp7;
const #77 = Asciz	Ljava/lang/Object;;
const #78 = Asciz	temp8;
const #79 = Asciz	temp9;
const #80 = Asciz	temp10;
const #81 = Asciz	e$2;
const #82 = Asciz	test$1;
const #83 = Asciz	scala/runtime/ScalaRunTime$;
const #84 = class	#83;	//  scala/runtime/ScalaRunTime$
const #85 = Asciz	MODULE$;
const #86 = Asciz	Lscala/runtime/ScalaRunTime$;;
const #87 = NameAndType	#85:#86;//  MODULE$:Lscala/runtime/ScalaRunTime$;
const #88 = Field	#84.#87;	//  scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
const #89 = Asciz	_toString;
const #90 = Asciz	(Lscala/Product;)Ljava/lang/String;;
const #91 = NameAndType	#89:#90;//  _toString:(Lscala/Product;)Ljava/lang/String;
const #92 = Method	#84.#91;	//  scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
const #93 = Asciz	hashCode;
const #94 = Asciz	_hashCode;
const #95 = Asciz	(Lscala/Product;)I;
const #96 = NameAndType	#94:#95;//  _hashCode:(Lscala/Product;)I
const #97 = Method	#84.#96;	//  scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
const #98 = Asciz	copy$default$1;
const #99 = Asciz	copy$default$2;
const #100 = Asciz	copy;
const #101 = Asciz	(Lscala/xml/path/Expression$NameTest;Lscala/xml/path/Expression$Expr;)Lscala/xml/path/Expression$Attrib;;
const #102 = NameAndType	#7:#8;//  "<init>":(Lscala/xml/path/Expression$NameTest;Lscala/xml/path/Expression$Expr;)V
const #103 = Method	#12.#102;	//  scala/xml/path/Expression$Attrib."<init>":(Lscala/xml/path/Expression$NameTest;Lscala/xml/path/Expression$Expr;)V
const #104 = Asciz	productElements;
const #105 = Asciz	()Lscala/collection/Iterator;;
const #106 = Asciz	(Lscala/Product;)Lscala/collection/Iterator;;
const #107 = NameAndType	#104:#106;//  productElements:(Lscala/Product;)Lscala/collection/Iterator;
const #108 = Method	#23.#107;	//  scala/Product$class.productElements:(Lscala/Product;)Lscala/collection/Iterator;
const #109 = Asciz	productIterator;
const #110 = NameAndType	#109:#106;//  productIterator:(Lscala/Product;)Lscala/collection/Iterator;
const #111 = Method	#23.#110;	//  scala/Product$class.productIterator:(Lscala/Product;)Lscala/collection/Iterator;
const #112 = Asciz	Scala;
const #113 = Asciz	InnerClasses;
const #114 = Asciz	scala/xml/path/Expression$Expr;
const #115 = class	#114;	//  scala/xml/path/Expression$Expr
const #116 = Asciz	scala/xml/path/Expression;
const #117 = class	#116;	//  scala/xml/path/Expression
const #118 = Asciz	Expr;
const #119 = Asciz	GenExp;
const #120 = Asciz	scala/xml/path/Expression$NameTest;
const #121 = class	#120;	//  scala/xml/path/Expression$NameTest
const #122 = Asciz	NameTest;
const #123 = Asciz	scala/ScalaObject;
const #124 = class	#123;	//  scala/ScalaObject
const #125 = Asciz	java/io/Serializable;
const #126 = class	#125;	//  java/io/Serializable

{
public scala.xml.path.Expression$Attrib(scala.xml.path.Expression$NameTest, scala.xml.path.Expression$Expr);
  Code:
   Stack=2, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	putfield	#14; //Field test:Lscala/xml/path/Expression$NameTest;
   5:	aload_0
   6:	aload_2
   7:	putfield	#16; //Field e:Lscala/xml/path/Expression$Expr;
   10:	aload_0
   11:	invokespecial	#21; //Method scala/xml/path/Expression$GenExp."<init>":()V
   14:	aload_0
   15:	invokestatic	#27; //Method scala/Product$class.$init$:(Lscala/Product;)V
   18:	return
  LineNumberTable: 
   line 29: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      19      0    this       Lscala/xml/path/Expression$Attrib;
   0      19      1    test       Lscala/xml/path/Expression$NameTest;
   0      19      2    e       Lscala/xml/path/Expression$Expr;


public boolean canEqual(java.lang.Object);
  Code:
   Stack=1, Locals=2, Args_size=2
   0:	aload_1
   1:	instanceof	#12; //class scala/xml/path/Expression$Attrib
   4:	ireturn
  LineNumberTable: 
   line 29: 0


public java.lang.Object productElement(int);
  Code:
   Stack=3, Locals=3, Args_size=2
   0:	iload_1
   1:	istore_2
   2:	iload_2
   3:	tableswitch{ //0 to 1
		0: 46;
		1: 39;
		default: 24 }
   24:	new	#49; //class java/lang/IndexOutOfBoundsException
   27:	dup
   28:	iload_1
   29:	invokestatic	#55; //Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   32:	invokevirtual	#59; //Method java/lang/Object.toString:()Ljava/lang/String;
   35:	invokespecial	#62; //Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
   38:	athrow
   39:	aload_0
   40:	invokevirtual	#44; //Method e:()Lscala/xml/path/Expression$Expr;
   43:	goto	50
   46:	aload_0
   47:	invokevirtual	#35; //Method test:()Lscala/xml/path/Expression$NameTest;
   50:	areturn
  LineNumberTable: 
   line 29: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      51      0    this       Lscala/xml/path/Expression$Attrib;
   2      49      2    temp11       I


public int productArity();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	iconst_2
   1:	ireturn
  LineNumberTable: 
   line 29: 0


public java.lang.String productPrefix();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	ldc	#69; //String Attrib
   2:	areturn
  LineNumberTable: 
   line 29: 0


public boolean equals(java.lang.Object);
  Code:
   Stack=3, Locals=8, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	if_acmpeq	75
   5:	aload_1
   6:	astore_2
   7:	aload_2
   8:	instanceof	#12; //class scala/xml/path/Expression$Attrib
   11:	ifeq	71
   14:	aload_2
   15:	checkcast	#12; //class scala/xml/path/Expression$Attrib
   18:	astore_3
   19:	aload_3
   20:	invokevirtual	#35; //Method test:()Lscala/xml/path/Expression$NameTest;
   23:	astore	4
   25:	aload_3
   26:	invokevirtual	#44; //Method e:()Lscala/xml/path/Expression$Expr;
   29:	astore	5
   31:	aload	5
   33:	astore	6
   35:	aload	4
   37:	astore	7
   39:	aload_0
   40:	aload	6
   42:	aload	7
   44:	invokespecial	#71; //Method gd3$1:(Lscala/xml/path/Expression$Expr;Lscala/xml/path/Expression$NameTest;)Z
   47:	ifeq	67
   50:	aload	5
   52:	astore	6
   54:	aload_1
   55:	checkcast	#12; //class scala/xml/path/Expression$Attrib
   58:	aload_0
   59:	invokeinterface	#75,  2; //InterfaceMethod scala/Product.canEqual:(Ljava/lang/Object;)Z
   64:	goto	72
   67:	iconst_0
   68:	goto	72
   71:	iconst_0
   72:	ifeq	79
   75:	iconst_1
   76:	goto	80
   79:	iconst_0
   80:	ireturn
  LineNumberTable: 
   line 29: 0
   line 21: 67
   line 29: 72

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      81      0    this       Lscala/xml/path/Expression$Attrib;
   7      68      2    temp7       Ljava/lang/Object;
   19      52      3    temp8       Lscala/xml/path/Expression$Attrib;
   25      46      4    temp9       Lscala/xml/path/Expression$NameTest;
   31      40      5    temp10       Lscala/xml/path/Expression$Expr;
   35      15      6    e$2       Lscala/xml/path/Expression$Expr;
   54      10      6    e$2       Lscala/xml/path/Expression$Expr;
   50      21      6    e$2       Lscala/xml/path/Expression$Expr;
   39      32      7    test$1       Lscala/xml/path/Expression$NameTest;


public java.lang.String toString();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	getstatic	#88; //Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   3:	aload_0
   4:	invokevirtual	#92; //Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
   7:	areturn
  LineNumberTable: 
   line 29: 0


public int hashCode();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	getstatic	#88; //Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   3:	aload_0
   4:	invokevirtual	#97; //Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
   7:	ireturn
  LineNumberTable: 
   line 29: 0


public scala.xml.path.Expression$NameTest copy$default$1();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#35; //Method test:()Lscala/xml/path/Expression$NameTest;
   4:	areturn
  LineNumberTable: 
   line 29: 0


public scala.xml.path.Expression$Expr copy$default$2();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#44; //Method e:()Lscala/xml/path/Expression$Expr;
   4:	areturn
  LineNumberTable: 
   line 29: 0


public scala.xml.path.Expression$Attrib copy(scala.xml.path.Expression$NameTest, scala.xml.path.Expression$Expr);
  Code:
   Stack=4, Locals=3, Args_size=3
   0:	new	#12; //class scala/xml/path/Expression$Attrib
   3:	dup
   4:	aload_1
   5:	aload_2
   6:	invokespecial	#103; //Method "<init>":(Lscala/xml/path/Expression$NameTest;Lscala/xml/path/Expression$Expr;)V
   9:	areturn
  LineNumberTable: 
   line 29: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    this       Lscala/xml/path/Expression$Attrib;
   0      10      1    test       Lscala/xml/path/Expression$NameTest;
   0      10      2    e       Lscala/xml/path/Expression$Expr;


public scala.xml.path.Expression$Expr e();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#16; //Field e:Lscala/xml/path/Expression$Expr;
   4:	areturn
  LineNumberTable: 
   line 29: 0


public scala.xml.path.Expression$NameTest test();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#14; //Field test:Lscala/xml/path/Expression$NameTest;
   4:	areturn
  LineNumberTable: 
   line 29: 0


public scala.collection.Iterator productElements();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#108; //Method scala/Product$class.productElements:(Lscala/Product;)Lscala/collection/Iterator;
   4:	areturn
  LineNumberTable: 
   line 29: 0


public scala.collection.Iterator productIterator();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#111; //Method scala/Product$class.productIterator:(Lscala/Product;)Lscala/collection/Iterator;
   4:	areturn
  LineNumberTable: 
   line 29: 0


}

