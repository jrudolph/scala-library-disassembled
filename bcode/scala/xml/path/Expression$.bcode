Compiled from "Expression.scala"
public final class scala.xml.path.Expression$ extends java.lang.Object implements scala.ScalaObject
  SourceFile: "Expression.scala"
  Scala: length = 0x
   
  InnerClass: 
   public #72= #69 of #71; //FExp=class scala/xml/path/Expression$FExp of class scala/xml/path/Expression
   public abstract #75= #74 of #71; //Expr=class scala/xml/path/Expression$Expr of class scala/xml/path/Expression
   public abstract #78= #77 of #71; //Test=class scala/xml/path/Expression$Test of class scala/xml/path/Expression
   public abstract #81= #80 of #71; //Cond=class scala/xml/path/Expression$Cond of class scala/xml/path/Expression
   public #84= #83 of #71; //Child=class scala/xml/path/Expression$Child of class scala/xml/path/Expression
   public #87= #86 of #71; //Attrib=class scala/xml/path/Expression$Attrib of class scala/xml/path/Expression
   public #90= #89 of #71; //Exists=class scala/xml/path/Expression$Exists of class scala/xml/path/Expression
   public abstract #93= #92 of #71; //GenExp=class scala/xml/path/Expression$GenExp of class scala/xml/path/Expression
   public #96= #95 of #71; //Equals=class scala/xml/path/Expression$Equals of class scala/xml/path/Expression
   public #97= #57 of #71; //NameTest=class scala/xml/path/Expression$NameTest of class scala/xml/path/Expression
   public #100= #99 of #71; //DescOrSelf=class scala/xml/path/Expression$DescOrSelf of class scala/xml/path/Expression
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Expression.scala;
const #3 = Asciz	Scala;
const #4 = Asciz	MODULE$;
const #5 = Asciz	Lscala/xml/path/Expression$;;
const #6 = Asciz	<clinit>;
const #7 = Asciz	()V;
const #8 = Asciz	Code;
const #9 = Asciz	scala/xml/path/Expression$;
const #10 = class	#9;	//  scala/xml/path/Expression$
const #11 = Asciz	<init>;
const #12 = NameAndType	#11:#7;//  "<init>":()V
const #13 = Method	#10.#12;	//  scala/xml/path/Expression$."<init>":()V
const #14 = Asciz	LineNumberTable;
const #15 = Asciz	java/lang/Object;
const #16 = class	#15;	//  java/lang/Object
const #17 = Method	#16.#12;	//  java/lang/Object."<init>":()V
const #18 = NameAndType	#4:#5;//  MODULE$:Lscala/xml/path/Expression$;
const #19 = Field	#10.#18;	//  scala/xml/path/Expression$.MODULE$:Lscala/xml/path/Expression$;
const #20 = Asciz	gd1$1;
const #21 = Asciz	(Ljava/lang/String;)Z;
const #22 = Asciz	java/lang/String;
const #23 = class	#22;	//  java/lang/String
const #24 = Asciz	length;
const #25 = Asciz	()I;
const #26 = NameAndType	#24:#25;//  length:()I
const #27 = Method	#23.#26;	//  java/lang/String.length:()I
const #28 = Asciz	testFromString;
const #29 = Asciz	(Ljava/lang/String;)Lscala/xml/path/Expression$Test;;
const #30 = Asciz	charAt;
const #31 = Asciz	(I)C;
const #32 = NameAndType	#30:#31;//  charAt:(I)C
const #33 = Method	#23.#32;	//  java/lang/String.charAt:(I)C
const #34 = Asciz	scala/runtime/BoxesRunTime;
const #35 = class	#34;	//  scala/runtime/BoxesRunTime
const #36 = Asciz	boxToCharacter;
const #37 = Asciz	(C)Ljava/lang/Character;;
const #38 = NameAndType	#36:#37;//  boxToCharacter:(C)Ljava/lang/Character;
const #39 = Method	#35.#38;	//  scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
const #40 = int	42;
const #41 = Asciz	boxToInteger;
const #42 = Asciz	(I)Ljava/lang/Integer;;
const #43 = NameAndType	#41:#42;//  boxToInteger:(I)Ljava/lang/Integer;
const #44 = Method	#35.#43;	//  scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
const #45 = Asciz	equals;
const #46 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)Z;
const #47 = NameAndType	#45:#46;//  equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
const #48 = Method	#35.#47;	//  scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
const #49 = NameAndType	#20:#21;//  gd1$1:(Ljava/lang/String;)Z
const #50 = Method	#10.#49;	//  scala/xml/path/Expression$.gd1$1:(Ljava/lang/String;)Z
const #51 = Asciz	scala/xml/path/Expression$WildcardTest$;
const #52 = class	#51;	//  scala/xml/path/Expression$WildcardTest$
const #53 = Asciz	Lscala/xml/path/Expression$WildcardTest$;;
const #54 = NameAndType	#4:#53;//  MODULE$:Lscala/xml/path/Expression$WildcardTest$;
const #55 = Field	#52.#54;	//  scala/xml/path/Expression$WildcardTest$.MODULE$:Lscala/xml/path/Expression$WildcardTest$;
const #56 = Asciz	scala/xml/path/Expression$NameTest;
const #57 = class	#56;	//  scala/xml/path/Expression$NameTest
const #58 = Asciz	(Ljava/lang/String;)V;
const #59 = NameAndType	#11:#58;//  "<init>":(Ljava/lang/String;)V
const #60 = Method	#57.#59;	//  scala/xml/path/Expression$NameTest."<init>":(Ljava/lang/String;)V
const #61 = Asciz	this;
const #62 = Asciz	x$1;
const #63 = Asciz	Ljava/lang/String;;
const #64 = Asciz	temp1;
const #65 = Asciz	C;
const #66 = Asciz	LocalVariableTable;
const #67 = Asciz	InnerClasses;
const #68 = Asciz	scala/xml/path/Expression$FExp;
const #69 = class	#68;	//  scala/xml/path/Expression$FExp
const #70 = Asciz	scala/xml/path/Expression;
const #71 = class	#70;	//  scala/xml/path/Expression
const #72 = Asciz	FExp;
const #73 = Asciz	scala/xml/path/Expression$Expr;
const #74 = class	#73;	//  scala/xml/path/Expression$Expr
const #75 = Asciz	Expr;
const #76 = Asciz	scala/xml/path/Expression$Test;
const #77 = class	#76;	//  scala/xml/path/Expression$Test
const #78 = Asciz	Test;
const #79 = Asciz	scala/xml/path/Expression$Cond;
const #80 = class	#79;	//  scala/xml/path/Expression$Cond
const #81 = Asciz	Cond;
const #82 = Asciz	scala/xml/path/Expression$Child;
const #83 = class	#82;	//  scala/xml/path/Expression$Child
const #84 = Asciz	Child;
const #85 = Asciz	scala/xml/path/Expression$Attrib;
const #86 = class	#85;	//  scala/xml/path/Expression$Attrib
const #87 = Asciz	Attrib;
const #88 = Asciz	scala/xml/path/Expression$Exists;
const #89 = class	#88;	//  scala/xml/path/Expression$Exists
const #90 = Asciz	Exists;
const #91 = Asciz	scala/xml/path/Expression$GenExp;
const #92 = class	#91;	//  scala/xml/path/Expression$GenExp
const #93 = Asciz	GenExp;
const #94 = Asciz	scala/xml/path/Expression$Equals;
const #95 = class	#94;	//  scala/xml/path/Expression$Equals
const #96 = Asciz	Equals;
const #97 = Asciz	NameTest;
const #98 = Asciz	scala/xml/path/Expression$DescOrSelf;
const #99 = class	#98;	//  scala/xml/path/Expression$DescOrSelf
const #100 = Asciz	DescOrSelf;
const #101 = Asciz	scala/ScalaObject;
const #102 = class	#101;	//  scala/ScalaObject

{
public static final scala.xml.path.Expression$ MODULE$;

public static {};
  Code:
   Stack=1, Locals=0, Args_size=0
   0:	new	#10; //class scala/xml/path/Expression$
   3:	invokespecial	#13; //Method "<init>":()V
   6:	return

public final scala.xml.path.Expression$Test testFromString(java.lang.String);
  Code:
   Stack=3, Locals=3, Args_size=2
   0:	aload_1
   1:	iconst_0
   2:	invokevirtual	#33; //Method java/lang/String.charAt:(I)C
   5:	istore_2
   6:	iload_2
   7:	invokestatic	#39; //Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
   10:	ldc	#40; //int 42
   12:	invokestatic	#44; //Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   15:	invokestatic	#48; //Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
   18:	ifeq	35
   21:	aload_0
   22:	aload_1
   23:	invokespecial	#50; //Method gd1$1:(Ljava/lang/String;)Z
   26:	ifeq	35
   29:	getstatic	#55; //Field scala/xml/path/Expression$WildcardTest$.MODULE$:Lscala/xml/path/Expression$WildcardTest$;
   32:	goto	43
   35:	new	#57; //class scala/xml/path/Expression$NameTest
   38:	dup
   39:	aload_1
   40:	invokespecial	#60; //Method scala/xml/path/Expression$NameTest."<init>":(Ljava/lang/String;)V
   43:	areturn
  LineNumberTable: 
   line 18: 0
   line 19: 29
   line 20: 35
   line 18: 43

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      44      0    this       Lscala/xml/path/Expression$;
   0      44      1    x$1       Ljava/lang/String;
   6      38      2    temp1       C


}

