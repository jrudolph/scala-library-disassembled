Compiled from "Expression.scala"
public abstract class scala.xml.path.Expression$Expr extends scala.xml.path.Expression$GenExp implements scala.ScalaObject
  SourceFile: "Expression.scala"
  Scala: length = 0x
   
  InnerClass: 
   public #69= #26 of #68; //FExp=class scala/xml/path/Expression$FExp of class scala/xml/path/Expression
   public abstract #72= #71 of #68; //Test=class scala/xml/path/Expression$Test of class scala/xml/path/Expression
   public abstract #75= #74 of #68; //Cond=class scala/xml/path/Expression$Cond of class scala/xml/path/Expression
   public abstract #78= #77 of #68; //Expr=class scala/xml/path/Expression$Expr of class scala/xml/path/Expression
   public #79= #63 of #68; //Child=class scala/xml/path/Expression$Child of class scala/xml/path/Expression
   public abstract #80= #8 of #68; //GenExp=class scala/xml/path/Expression$GenExp of class scala/xml/path/Expression
   public #81= #54 of #68; //NameTest=class scala/xml/path/Expression$NameTest of class scala/xml/path/Expression
   public #82= #43 of #68; //DescOrSelf=class scala/xml/path/Expression$DescOrSelf of class scala/xml/path/Expression
   public final #83= #14 of #77; //$anon$2=class scala/xml/path/Expression$Expr$$anon$2 of class scala/xml/path/Expression$Expr
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Expression.scala;
const #3 = Asciz	<init>;
const #4 = Asciz	()V;
const #5 = Asciz	Code;
const #6 = Asciz	LineNumberTable;
const #7 = Asciz	scala/xml/path/Expression$GenExp;
const #8 = class	#7;	//  scala/xml/path/Expression$GenExp
const #9 = NameAndType	#3:#4;//  "<init>":()V
const #10 = Method	#8.#9;	//  scala/xml/path/Expression$GenExp."<init>":()V
const #11 = Asciz	eval;
const #12 = Asciz	(Lscala/xml/Node;)Lscala/xml/NodeSeq;;
const #13 = Asciz	scala/xml/path/Expression$Expr$$anon$2;
const #14 = class	#13;	//  scala/xml/path/Expression$Expr$$anon$2
const #15 = Asciz	(Lscala/xml/path/Expression$Expr;)V;
const #16 = NameAndType	#3:#15;//  "<init>":(Lscala/xml/path/Expression$Expr;)V
const #17 = Method	#14.#16;	//  scala/xml/path/Expression$Expr$$anon$2."<init>":(Lscala/xml/path/Expression$Expr;)V
const #18 = Asciz	this;
const #19 = Asciz	Lscala/xml/path/Expression$Expr;;
const #20 = Asciz	n;
const #21 = Asciz	Lscala/xml/Node;;
const #22 = Asciz	LocalVariableTable;
const #23 = Asciz	apply;
const #24 = Asciz	(Lscala/xml/path/Expression$Cond;)Lscala/xml/path/Expression$FExp;;
const #25 = Asciz	scala/xml/path/Expression$FExp;
const #26 = class	#25;	//  scala/xml/path/Expression$FExp
const #27 = Asciz	(Lscala/xml/path/Expression$Expr;Lscala/xml/path/Expression$Cond;)V;
const #28 = NameAndType	#3:#27;//  "<init>":(Lscala/xml/path/Expression$Expr;Lscala/xml/path/Expression$Cond;)V
const #29 = Method	#26.#28;	//  scala/xml/path/Expression$FExp."<init>":(Lscala/xml/path/Expression$Expr;Lscala/xml/path/Expression$Cond;)V
const #30 = Asciz	c;
const #31 = Asciz	Lscala/xml/path/Expression$Cond;;
const #32 = Asciz	$bslash$bslash;
const #33 = Asciz	(Ljava/lang/String;)Lscala/xml/path/Expression$DescOrSelf;;
const #34 = Asciz	*;
const #35 = String	#34;	//  *
const #36 = Asciz	java/lang/Object;
const #37 = class	#36;	//  java/lang/Object
const #38 = Asciz	equals;
const #39 = Asciz	(Ljava/lang/Object;)Z;
const #40 = NameAndType	#38:#39;//  equals:(Ljava/lang/Object;)Z
const #41 = Method	#37.#40;	//  java/lang/Object.equals:(Ljava/lang/Object;)Z
const #42 = Asciz	scala/xml/path/Expression$DescOrSelf;
const #43 = class	#42;	//  scala/xml/path/Expression$DescOrSelf
const #44 = Asciz	scala/xml/path/Expression$WildcardTest$;
const #45 = class	#44;	//  scala/xml/path/Expression$WildcardTest$
const #46 = Asciz	MODULE$;
const #47 = Asciz	Lscala/xml/path/Expression$WildcardTest$;;
const #48 = NameAndType	#46:#47;//  MODULE$:Lscala/xml/path/Expression$WildcardTest$;
const #49 = Field	#45.#48;	//  scala/xml/path/Expression$WildcardTest$.MODULE$:Lscala/xml/path/Expression$WildcardTest$;
const #50 = Asciz	(Lscala/xml/path/Expression$Test;Lscala/xml/path/Expression$Expr;)V;
const #51 = NameAndType	#3:#50;//  "<init>":(Lscala/xml/path/Expression$Test;Lscala/xml/path/Expression$Expr;)V
const #52 = Method	#43.#51;	//  scala/xml/path/Expression$DescOrSelf."<init>":(Lscala/xml/path/Expression$Test;Lscala/xml/path/Expression$Expr;)V
const #53 = Asciz	scala/xml/path/Expression$NameTest;
const #54 = class	#53;	//  scala/xml/path/Expression$NameTest
const #55 = Asciz	(Ljava/lang/String;)V;
const #56 = NameAndType	#3:#55;//  "<init>":(Ljava/lang/String;)V
const #57 = Method	#54.#56;	//  scala/xml/path/Expression$NameTest."<init>":(Ljava/lang/String;)V
const #58 = Asciz	x;
const #59 = Asciz	Ljava/lang/String;;
const #60 = Asciz	$bslash;
const #61 = Asciz	(Ljava/lang/String;)Lscala/xml/path/Expression$Child;;
const #62 = Asciz	scala/xml/path/Expression$Child;
const #63 = class	#62;	//  scala/xml/path/Expression$Child
const #64 = Method	#63.#51;	//  scala/xml/path/Expression$Child."<init>":(Lscala/xml/path/Expression$Test;Lscala/xml/path/Expression$Expr;)V
const #65 = Asciz	Scala;
const #66 = Asciz	InnerClasses;
const #67 = Asciz	scala/xml/path/Expression;
const #68 = class	#67;	//  scala/xml/path/Expression
const #69 = Asciz	FExp;
const #70 = Asciz	scala/xml/path/Expression$Test;
const #71 = class	#70;	//  scala/xml/path/Expression$Test
const #72 = Asciz	Test;
const #73 = Asciz	scala/xml/path/Expression$Cond;
const #74 = class	#73;	//  scala/xml/path/Expression$Cond
const #75 = Asciz	Cond;
const #76 = Asciz	scala/xml/path/Expression$Expr;
const #77 = class	#76;	//  scala/xml/path/Expression$Expr
const #78 = Asciz	Expr;
const #79 = Asciz	Child;
const #80 = Asciz	GenExp;
const #81 = Asciz	NameTest;
const #82 = Asciz	DescOrSelf;
const #83 = Asciz	$anon$2;
const #84 = Asciz	scala/ScalaObject;
const #85 = class	#84;	//  scala/ScalaObject

{
public scala.xml.path.Expression$Expr();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokespecial	#10; //Method scala/xml/path/Expression$GenExp."<init>":()V
   4:	return
  LineNumberTable: 
   line 31: 0


public scala.xml.NodeSeq eval(scala.xml.Node);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	new	#14; //class scala/xml/path/Expression$Expr$$anon$2
   3:	dup
   4:	aload_0
   5:	invokespecial	#17; //Method scala/xml/path/Expression$Expr$$anon$2."<init>":(Lscala/xml/path/Expression$Expr;)V
   8:	areturn
  LineNumberTable: 
   line 46: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/xml/path/Expression$Expr;
   0      9      1    n       Lscala/xml/Node;


public scala.xml.path.Expression$FExp apply(scala.xml.path.Expression$Cond);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	new	#26; //class scala/xml/path/Expression$FExp
   3:	dup
   4:	aload_0
   5:	aload_1
   6:	invokespecial	#29; //Method scala/xml/path/Expression$FExp."<init>":(Lscala/xml/path/Expression$Expr;Lscala/xml/path/Expression$Cond;)V
   9:	areturn
  LineNumberTable: 
   line 44: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    this       Lscala/xml/path/Expression$Expr;
   0      10      1    c       Lscala/xml/path/Expression$Cond;


public scala.xml.path.Expression$DescOrSelf $bslash$bslash(java.lang.String);
  Code:
   Stack=5, Locals=3, Args_size=2
   0:	aload_1
   1:	ldc	#35; //String *
   3:	astore_2
   4:	dup
   5:	ifnonnull	16
   8:	pop
   9:	aload_2
   10:	ifnull	23
   13:	goto	37
   16:	aload_2
   17:	invokevirtual	#41; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   20:	ifeq	37
   23:	new	#43; //class scala/xml/path/Expression$DescOrSelf
   26:	dup
   27:	getstatic	#49; //Field scala/xml/path/Expression$WildcardTest$.MODULE$:Lscala/xml/path/Expression$WildcardTest$;
   30:	aload_0
   31:	invokespecial	#52; //Method scala/xml/path/Expression$DescOrSelf."<init>":(Lscala/xml/path/Expression$Test;Lscala/xml/path/Expression$Expr;)V
   34:	goto	53
   37:	new	#43; //class scala/xml/path/Expression$DescOrSelf
   40:	dup
   41:	new	#54; //class scala/xml/path/Expression$NameTest
   44:	dup
   45:	aload_1
   46:	invokespecial	#57; //Method scala/xml/path/Expression$NameTest."<init>":(Ljava/lang/String;)V
   49:	aload_0
   50:	invokespecial	#52; //Method scala/xml/path/Expression$DescOrSelf."<init>":(Lscala/xml/path/Expression$Test;Lscala/xml/path/Expression$Expr;)V
   53:	areturn
  LineNumberTable: 
   line 39: 0
   line 40: 23
   line 42: 37
   line 39: 53

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      54      0    this       Lscala/xml/path/Expression$Expr;
   0      54      1    x       Ljava/lang/String;


public scala.xml.path.Expression$Child $bslash(java.lang.String);
  Code:
   Stack=5, Locals=3, Args_size=2
   0:	aload_1
   1:	ldc	#35; //String *
   3:	astore_2
   4:	dup
   5:	ifnonnull	16
   8:	pop
   9:	aload_2
   10:	ifnull	23
   13:	goto	37
   16:	aload_2
   17:	invokevirtual	#41; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   20:	ifeq	37
   23:	new	#63; //class scala/xml/path/Expression$Child
   26:	dup
   27:	getstatic	#49; //Field scala/xml/path/Expression$WildcardTest$.MODULE$:Lscala/xml/path/Expression$WildcardTest$;
   30:	aload_0
   31:	invokespecial	#64; //Method scala/xml/path/Expression$Child."<init>":(Lscala/xml/path/Expression$Test;Lscala/xml/path/Expression$Expr;)V
   34:	goto	53
   37:	new	#63; //class scala/xml/path/Expression$Child
   40:	dup
   41:	new	#54; //class scala/xml/path/Expression$NameTest
   44:	dup
   45:	aload_1
   46:	invokespecial	#57; //Method scala/xml/path/Expression$NameTest."<init>":(Ljava/lang/String;)V
   49:	aload_0
   50:	invokespecial	#64; //Method scala/xml/path/Expression$Child."<init>":(Lscala/xml/path/Expression$Test;Lscala/xml/path/Expression$Expr;)V
   53:	areturn
  LineNumberTable: 
   line 33: 0
   line 34: 23
   line 36: 37
   line 33: 53

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      54      0    this       Lscala/xml/path/Expression$Expr;
   0      54      1    x       Ljava/lang/String;


}

