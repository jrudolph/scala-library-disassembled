Compiled from "ProcInstr.scala"
public class scala.xml.ProcInstr extends scala.xml.SpecialNode implements scala.ScalaObject,scala.Product,java.io.Serializable
  SourceFile: "ProcInstr.scala"
  ScalaSig: length = 0x3EC
   05 00 FFFFFF81 0F 06 08 01 02 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF80 40 07 02 09
   50 72 6F 63 49 6E 73 74 72 0A 02 03 04 01 03 78
   6D 6C 0A 01 05 01 05 73 63 61 6C 61 03 00 13 04
   00 08 0C 10 10 02 09 0A 0D 01 02 09 02 0B 02 02
   0B 53 70 65 63 69 61 6C 4E 6F 64 65 10 02 0D 0E
   0D 01 04 09 02 0F 04 02 0B 53 63 61 6C 61 4F 62
   6A 65 63 74 10 02 0D 11 09 02 12 04 02 07 50 72
   6F 64 75 63 74 08 08 14 00 FFFFFF82 FFFFFFCA FFFFFF80 FFFFFF84 00 15 01
   06 74 61 72 67 65 74 15 01 16 10 02 17 1A 0E 02
   0D 18 09 02 19 04 01 06 50 72 65 64 65 66 09 02
   1B 1C 02 06 53 74 72 69 6E 67 0A 02 19 04 08 08
   1E 00 FFFFFF82 FFFFFF88 FFFFFFA0 FFFFFF80 04 16 01 07 74 61 72 67 65 74
   20 08 08 20 00 FFFFFF82 FFFFFFCA FFFFFF80 FFFFFF84 00 15 01 08 70 72 6F
   63 74 65 78 74 08 08 22 00 FFFFFF82 FFFFFF88 FFFFFFA0 FFFFFF80 04 16 01
   09 70 72 6F 63 74 65 78 74 20 08 05 24 00 FFFFFF84 00
   25 01 06 3C 69 6E 69 74 3E 14 03 26 27 28 10 02
   09 00 08 05 14 23 FFFFFFC0 00 16 08 05 20 23 FFFFFFC0 00 16
   08 05 2A 00 FFFFFF84 22 2B 01 13 64 6F 43 6F 6C 6C 65
   63 74 4E 61 6D 65 73 70 61 63 65 73 15 01 2C 10
   02 0D 2D 09 02 2E 04 02 07 42 6F 6F 6C 65 61 6E
   08 05 30 00 FFFFFF84 22 2B 01 0B 64 6F 54 72 61 6E 73
   66 6F 72 6D 08 05 32 00 FFFFFF84 02 33 01 05 6C 61 62
   65 6C 15 01 34 10 02 35 3A 0D 01 36 0A 02 37 38
   01 04 6C 61 6E 67 0A 01 39 01 04 6A 61 76 61 09
   02 1B 36 08 05 3C 00 FFFFFF84 20 33 01 04 74 65 78 74
   08 05 3E 00 FFFFFF84 20 3F 01 0B 62 75 69 6C 64 53 74
   72 69 6E 67 14 02 40 48 10 02 41 46 0D 01 42 0A
   02 43 44 01 07 6D 75 74 61 62 6C 65 0A 02 45 04
   01 0A 63 6F 6C 6C 65 63 74 69 6F 6E 09 02 47 42
   02 0D 53 74 72 69 6E 67 42 75 69 6C 64 65 72 08
   05 49 3D FFFFFFC0 00 40 01 02 73 62 08 07 4B 00 FFFFFF81 FFFFFF80
   FFFFFF84 00 4C 01 04 63 6F 70 79 14 03 26 4D 5B 08 08
   4E 14 4A FFFFFF90 FFFFFF80 FFFFFFC0 00 16 08 07 4F 00 FFFFFF91 FFFFFF80 FFFFFF84 00
   50 01 0E 63 6F 70 79 24 64 65 66 61 75 6C 74 24
   31 15 01 51 2A 02 16 52 2B 01 53 10 02 54 59 0D
   01 55 0A 02 56 57 01 09 75 6E 63 68 65 63 6B 65
   64 0A 02 58 04 01 0A 61 6E 6E 6F 74 61 74 69 6F
   6E 09 02 5A 55 02 11 75 6E 63 68 65 63 6B 65 64
   56 61 72 69 61 6E 63 65 08 08 5C 20 4A FFFFFF90 FFFFFF80 FFFFFFC0
   00 16 08 07 5D 00 FFFFFF91 FFFFFF80 FFFFFF84 00 50 01 0E 63 6F 70
   79 24 64 65 66 61 75 6C 74 24 32 08 08 5F 00 FFFFFF84
   FFFFFF80 FFFFFF80 FFFFFF84 20 33 01 0D 70 72 6F 64 75 63 74 50 72
   65 66 69 78 08 08 61 00 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF84 20 62 01 0C
   70 72 6F 64 75 63 74 41 72 69 74 79 15 01 63 10
   02 0D 64 09 02 65 04 02 03 49 6E 74 08 08 67 00
   FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF84 20 68 01 0E 70 72 6F 64 75 63 74 45
   6C 65 6D 65 6E 74 14 02 69 6C 10 02 0D 6A 09 02
   6B 04 02 03 41 6E 79 08 07 6D 66 FFFFFF81 FFFFFF80 FFFFFFC0 00 63
   01 03 78 24 31 28 02 00 6F 10 02 0D 70 09 02 71
   04 02 0C 73 65 72 69 61 6C 69 7A 61 62 6C 65 07
   07 73 02 FFFFFF81 FFFFFF80 FFFFFF88 02 74 01 09 50 72 6F 63 49 6E
   73 74 72 10 02 09 75 06 08 01 02 FFFFFF84 FFFFFF81 FFFFFF80 FFFFFF88 02
   76 13 04 75 77 7A 0C 10 02 35 78 09 02 79 36 02
   06 4F 62 6A 65 63 74 10 05 0D 7B 16 16 26 09 02
   7C 04 02 09 46 75 6E 63 74 69 6F 6E 32 08 05 24
   75 FFFFFF84 00 7E 14 01 74 08 09 FFFFFF81 00 75 FFFFFF81 FFFFFF80 FFFFFF84 40
   FFFFFF81 01 01 05 61 70 70 6C 79 14 05 26 FFFFFF81 02 FFFFFF81 03
   08 05 14 7F FFFFFFC0 00 16 08 05 20 7F FFFFFFC0 00 16 08 09
   FFFFFF81 05 75 FFFFFF81 FFFFFF80 FFFFFF84 40 FFFFFF81 06 01 07 75 6E 61 70 70
   6C 79 14 04 FFFFFF81 07 FFFFFF81 0D 10 05 0D FFFFFF81 08 FFFFFF81 0A 09
   03 FFFFFF81 09 04 02 04 53 6F 6D 65 10 05 0D FFFFFF81 0B 16
   16 09 03 FFFFFF81 0C 04 02 06 54 75 70 6C 65 32 08 07
   FFFFFF81 0E FFFFFF81 04 FFFFFFC0 00 26 01 03 78 24 30 
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	ProcInstr.scala;
const #3 = Asciz	curry;
const #4 = Asciz	()Lscala/Function1;;
const #5 = Asciz	Code;
const #6 = Asciz	scala/xml/ProcInstr$;
const #7 = class	#6;	//  scala/xml/ProcInstr$
const #8 = Asciz	MODULE$;
const #9 = Asciz	Lscala/xml/ProcInstr$;;
const #10 = NameAndType	#8:#9;//  MODULE$:Lscala/xml/ProcInstr$;
const #11 = Field	#7.#10;	//  scala/xml/ProcInstr$.MODULE$:Lscala/xml/ProcInstr$;
const #12 = NameAndType	#3:#4;//  curry:()Lscala/Function1;
const #13 = Method	#7.#12;	//  scala/xml/ProcInstr$.curry:()Lscala/Function1;
const #14 = Asciz	proctext;
const #15 = Asciz	Ljava/lang/String;;
const #16 = Asciz	target;
const #17 = Asciz	<init>;
const #18 = Asciz	(Ljava/lang/String;Ljava/lang/String;)V;
const #19 = Asciz	LineNumberTable;
const #20 = Asciz	scala/xml/ProcInstr;
const #21 = class	#20;	//  scala/xml/ProcInstr
const #22 = NameAndType	#16:#15;//  target:Ljava/lang/String;
const #23 = Field	#21.#22;	//  scala/xml/ProcInstr.target:Ljava/lang/String;
const #24 = NameAndType	#14:#15;//  proctext:Ljava/lang/String;
const #25 = Field	#21.#24;	//  scala/xml/ProcInstr.proctext:Ljava/lang/String;
const #26 = Asciz	scala/xml/SpecialNode;
const #27 = class	#26;	//  scala/xml/SpecialNode
const #28 = Asciz	()V;
const #29 = NameAndType	#17:#28;//  "<init>":()V
const #30 = Method	#27.#29;	//  scala/xml/SpecialNode."<init>":()V
const #31 = Asciz	scala/Product$class;
const #32 = class	#31;	//  scala/Product$class
const #33 = Asciz	$init$;
const #34 = Asciz	(Lscala/Product;)V;
const #35 = NameAndType	#33:#34;//  $init$:(Lscala/Product;)V
const #36 = Method	#32.#35;	//  scala/Product$class.$init$:(Lscala/Product;)V
const #37 = Asciz	scala/xml/Utility$;
const #38 = class	#37;	//  scala/xml/Utility$
const #39 = Asciz	Lscala/xml/Utility$;;
const #40 = NameAndType	#8:#39;//  MODULE$:Lscala/xml/Utility$;
const #41 = Field	#38.#40;	//  scala/xml/Utility$.MODULE$:Lscala/xml/Utility$;
const #42 = Asciz	scala/xml/parsing/TokenTests;
const #43 = class	#42;	//  scala/xml/parsing/TokenTests
const #44 = Asciz	isName;
const #45 = Asciz	(Ljava/lang/String;)Z;
const #46 = NameAndType	#44:#45;//  isName:(Ljava/lang/String;)Z
const #47 = InterfaceMethod	#43.#46;	//  scala/xml/parsing/TokenTests.isName:(Ljava/lang/String;)Z
const #48 = Asciz	?>;
const #49 = String	#48;	//  ?>
const #50 = Asciz	java/lang/String;
const #51 = class	#50;	//  java/lang/String
const #52 = Asciz	contains;
const #53 = Asciz	(Ljava/lang/CharSequence;)Z;
const #54 = NameAndType	#52:#53;//  contains:(Ljava/lang/CharSequence;)Z
const #55 = Method	#51.#54;	//  java/lang/String.contains:(Ljava/lang/CharSequence;)Z
const #56 = Asciz	java/lang/IllegalArgumentException;
const #57 = class	#56;	//  java/lang/IllegalArgumentException
const #58 = Asciz	scala/collection/mutable/StringBuilder;
const #59 = class	#58;	//  scala/collection/mutable/StringBuilder
const #60 = Method	#59.#29;	//  scala/collection/mutable/StringBuilder."<init>":()V
const #61 = Asciz	append;
const #62 = Asciz	(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;;
const #63 = NameAndType	#61:#62;//  append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
const #64 = Method	#59.#63;	//  scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
const #65 = Asciz	 may not contain \"?>\";
const #66 = String	#65;	//   may not contain \"?>\"
const #67 = Asciz	toString;
const #68 = Asciz	()Ljava/lang/String;;
const #69 = NameAndType	#67:#68;//  toString:()Ljava/lang/String;
const #70 = Method	#59.#69;	//  scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
const #71 = Asciz	(Ljava/lang/String;)V;
const #72 = NameAndType	#17:#71;//  "<init>":(Ljava/lang/String;)V
const #73 = Method	#57.#72;	//  java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
const #74 = Asciz	toLowerCase;
const #75 = NameAndType	#74:#68;//  toLowerCase:()Ljava/lang/String;
const #76 = Method	#51.#75;	//  java/lang/String.toLowerCase:()Ljava/lang/String;
const #77 = Asciz	xml;
const #78 = String	#77;	//  xml
const #79 = Asciz	java/lang/Object;
const #80 = class	#79;	//  java/lang/Object
const #81 = Asciz	equals;
const #82 = Asciz	(Ljava/lang/Object;)Z;
const #83 = NameAndType	#81:#82;//  equals:(Ljava/lang/Object;)Z
const #84 = Method	#80.#83;	//  java/lang/Object.equals:(Ljava/lang/Object;)Z
const #85 = Asciz	 is reserved;
const #86 = String	#85;	//   is reserved
const #87 = Asciz	 must be an XML Name;
const #88 = String	#87;	//   must be an XML Name
const #89 = Asciz	this;
const #90 = Asciz	Lscala/xml/ProcInstr;;
const #91 = Asciz	LocalVariableTable;
const #92 = Asciz	productElement;
const #93 = Asciz	(I)Ljava/lang/Object;;
const #94 = Asciz	java/lang/IndexOutOfBoundsException;
const #95 = class	#94;	//  java/lang/IndexOutOfBoundsException
const #96 = Asciz	scala/runtime/BoxesRunTime;
const #97 = class	#96;	//  scala/runtime/BoxesRunTime
const #98 = Asciz	boxToInteger;
const #99 = Asciz	(I)Ljava/lang/Integer;;
const #100 = NameAndType	#98:#99;//  boxToInteger:(I)Ljava/lang/Integer;
const #101 = Method	#97.#100;	//  scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
const #102 = Method	#80.#69;	//  java/lang/Object.toString:()Ljava/lang/String;
const #103 = Method	#95.#72;	//  java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
const #104 = Asciz	scala/MatchError;
const #105 = class	#104;	//  scala/MatchError
const #106 = Method	#105.#72;	//  scala/MatchError."<init>":(Ljava/lang/String;)V
const #107 = NameAndType	#14:#68;//  proctext:()Ljava/lang/String;
const #108 = Method	#21.#107;	//  scala/xml/ProcInstr.proctext:()Ljava/lang/String;
const #109 = NameAndType	#16:#68;//  target:()Ljava/lang/String;
const #110 = Method	#21.#109;	//  scala/xml/ProcInstr.target:()Ljava/lang/String;
const #111 = Asciz	productArity;
const #112 = Asciz	()I;
const #113 = Asciz	productPrefix;
const #114 = Asciz	ProcInstr;
const #115 = String	#114;	//  ProcInstr
const #116 = Asciz	copy;
const #117 = Asciz	(Ljava/lang/String;Ljava/lang/String;)Lscala/xml/ProcInstr;;
const #118 = NameAndType	#17:#18;//  "<init>":(Ljava/lang/String;Ljava/lang/String;)V
const #119 = Method	#21.#118;	//  scala/xml/ProcInstr."<init>":(Ljava/lang/String;Ljava/lang/String;)V
const #120 = Asciz	buildString;
const #121 = Asciz	(Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;;
const #122 = Asciz	<?%s%s?>;
const #123 = String	#122;	//  <?%s%s?>
const #124 = Asciz	scala/collection/immutable/StringOps;
const #125 = class	#124;	//  scala/collection/immutable/StringOps
const #126 = Method	#125.#72;	//  scala/collection/immutable/StringOps."<init>":(Ljava/lang/String;)V
const #127 = Asciz	scala/Predef$;
const #128 = class	#127;	//  scala/Predef$
const #129 = Asciz	Lscala/Predef$;;
const #130 = NameAndType	#8:#129;//  MODULE$:Lscala/Predef$;
const #131 = Field	#128.#130;	//  scala/Predef$.MODULE$:Lscala/Predef$;
const #132 = Asciz	isEmpty;
const #133 = Asciz	()Z;
const #134 = NameAndType	#132:#133;//  isEmpty:()Z
const #135 = Method	#51.#134;	//  java/lang/String.isEmpty:()Z
const #136 = Asciz	;
const #137 = String	#136;	//  
const #138 = Asciz	 ;
const #139 = String	#138;	//   
const #140 = Asciz	genericWrapArray;
const #141 = Asciz	(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;;
const #142 = NameAndType	#140:#141;//  genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
const #143 = Method	#128.#142;	//  scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
const #144 = Asciz	scala/collection/immutable/StringLike;
const #145 = class	#144;	//  scala/collection/immutable/StringLike
const #146 = Asciz	format;
const #147 = Asciz	(Lscala/collection/Seq;)Ljava/lang/String;;
const #148 = NameAndType	#146:#147;//  format:(Lscala/collection/Seq;)Ljava/lang/String;
const #149 = InterfaceMethod	#145.#148;	//  scala/collection/immutable/StringLike.format:(Lscala/collection/Seq;)Ljava/lang/String;
const #150 = Asciz	(Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;;
const #151 = NameAndType	#61:#150;//  append:(Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
const #152 = Method	#59.#151;	//  scala/collection/mutable/StringBuilder.append:(Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
const #153 = Asciz	sb;
const #154 = Asciz	Lscala/collection/mutable/StringBuilder;;
const #155 = Asciz	text;
const #156 = Asciz	label;
const #157 = Asciz	#PI;
const #158 = String	#157;	//  #PI
const #159 = Asciz	doTransform;
const #160 = Asciz	doCollectNamespaces;
const #161 = Asciz	copy$default$1;
const #162 = Asciz	copy$default$2;
const #163 = Asciz	productElements;
const #164 = Asciz	()Lscala/collection/Iterator;;
const #165 = Asciz	(Lscala/Product;)Lscala/collection/Iterator;;
const #166 = NameAndType	#163:#165;//  productElements:(Lscala/Product;)Lscala/collection/Iterator;
const #167 = Method	#32.#166;	//  scala/Product$class.productElements:(Lscala/Product;)Lscala/collection/Iterator;
const #168 = Asciz	productIterator;
const #169 = NameAndType	#168:#165;//  productIterator:(Lscala/Product;)Lscala/collection/Iterator;
const #170 = Method	#32.#169;	//  scala/Product$class.productIterator:(Lscala/Product;)Lscala/collection/Iterator;
const #171 = Asciz	ScalaSig;
const #172 = Asciz	scala/ScalaObject;
const #173 = class	#172;	//  scala/ScalaObject
const #174 = Asciz	scala/Product;
const #175 = class	#174;	//  scala/Product
const #176 = Asciz	java/io/Serializable;
const #177 = class	#176;	//  java/io/Serializable

{
public static final scala.Function1 curry();
  Code:
   Stack=1, Locals=0, Args_size=0
   0:	getstatic	#11; //Field scala/xml/ProcInstr$.MODULE$:Lscala/xml/ProcInstr$;
   3:	invokevirtual	#13; //Method scala/xml/ProcInstr$.curry:()Lscala/Function1;
   6:	areturn

public scala.xml.ProcInstr(java.lang.String, java.lang.String);
  Code:
   Stack=4, Locals=4, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	putfield	#23; //Field target:Ljava/lang/String;
   5:	aload_0
   6:	aload_2
   7:	putfield	#25; //Field proctext:Ljava/lang/String;
   10:	aload_0
   11:	invokespecial	#30; //Method scala/xml/SpecialNode."<init>":()V
   14:	aload_0
   15:	invokestatic	#36; //Method scala/Product$class.$init$:(Lscala/Product;)V
   18:	getstatic	#41; //Field scala/xml/Utility$.MODULE$:Lscala/xml/Utility$;
   21:	aload_1
   22:	invokeinterface	#47,  2; //InterfaceMethod scala/xml/parsing/TokenTests.isName:(Ljava/lang/String;)Z
   27:	ifeq	120
   30:	aload_2
   31:	ldc	#49; //String ?>
   33:	invokevirtual	#55; //Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
   36:	ifeq	66
   39:	new	#57; //class java/lang/IllegalArgumentException
   42:	dup
   43:	new	#59; //class scala/collection/mutable/StringBuilder
   46:	dup
   47:	invokespecial	#60; //Method scala/collection/mutable/StringBuilder."<init>":()V
   50:	aload_2
   51:	invokevirtual	#64; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   54:	ldc	#66; //String  may not contain \"?>\"
   56:	invokevirtual	#64; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   59:	invokevirtual	#70; //Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
   62:	invokespecial	#73; //Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
   65:	athrow
   66:	aload_1
   67:	invokevirtual	#76; //Method java/lang/String.toLowerCase:()Ljava/lang/String;
   70:	ldc	#78; //String xml
   72:	astore_3
   73:	dup
   74:	ifnonnull	85
   77:	pop
   78:	aload_3
   79:	ifnull	92
   82:	goto	119
   85:	aload_3
   86:	invokevirtual	#84; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   89:	ifeq	119
   92:	new	#57; //class java/lang/IllegalArgumentException
   95:	dup
   96:	new	#59; //class scala/collection/mutable/StringBuilder
   99:	dup
   100:	invokespecial	#60; //Method scala/collection/mutable/StringBuilder."<init>":()V
   103:	aload_1
   104:	invokevirtual	#64; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   107:	ldc	#86; //String  is reserved
   109:	invokevirtual	#64; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   112:	invokevirtual	#70; //Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
   115:	invokespecial	#73; //Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
   118:	athrow
   119:	return
   120:	new	#57; //class java/lang/IllegalArgumentException
   123:	dup
   124:	new	#59; //class scala/collection/mutable/StringBuilder
   127:	dup
   128:	invokespecial	#60; //Method scala/collection/mutable/StringBuilder."<init>":()V
   131:	aload_1
   132:	invokevirtual	#64; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   135:	ldc	#88; //String  must be an XML Name
   137:	invokevirtual	#64; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   140:	invokevirtual	#70; //Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
   143:	invokespecial	#73; //Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
   146:	athrow
  LineNumberTable: 
   line 20: 0
   line 22: 18
   line 24: 30
   line 25: 39
   line 26: 66
   line 27: 92
   line 20: 119
   line 23: 120

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      147      0    this       Lscala/xml/ProcInstr;
   0      147      1    target       Ljava/lang/String;
   0      147      2    proctext       Ljava/lang/String;


public java.lang.Object productElement(int);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	iload_1
   1:	tableswitch{ //0 to 1
		0: 84;
		1: 58;
		default: 24 }
   24:	iconst_1
   25:	ifeq	43
   28:	new	#95; //class java/lang/IndexOutOfBoundsException
   31:	dup
   32:	iload_1
   33:	invokestatic	#101; //Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   36:	invokevirtual	#102; //Method java/lang/Object.toString:()Ljava/lang/String;
   39:	invokespecial	#103; //Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
   42:	athrow
   43:	new	#105; //class scala/MatchError
   46:	dup
   47:	iload_1
   48:	invokestatic	#101; //Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   51:	invokevirtual	#102; //Method java/lang/Object.toString:()Ljava/lang/String;
   54:	invokespecial	#106; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   57:	athrow
   58:	iconst_1
   59:	ifeq	69
   62:	aload_0
   63:	invokevirtual	#108; //Method proctext:()Ljava/lang/String;
   66:	goto	92
   69:	new	#105; //class scala/MatchError
   72:	dup
   73:	iload_1
   74:	invokestatic	#101; //Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   77:	invokevirtual	#102; //Method java/lang/Object.toString:()Ljava/lang/String;
   80:	invokespecial	#106; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   83:	athrow
   84:	iconst_1
   85:	ifeq	93
   88:	aload_0
   89:	invokevirtual	#110; //Method target:()Ljava/lang/String;
   92:	areturn
   93:	new	#105; //class scala/MatchError
   96:	dup
   97:	iload_1
   98:	invokestatic	#101; //Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   101:	invokevirtual	#102; //Method java/lang/Object.toString:()Ljava/lang/String;
   104:	invokespecial	#106; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   107:	athrow
  LineNumberTable: 
   line 20: 0
   line 21: 24
   line 20: 28
   line 21: 58
   line 20: 62
   line 21: 84
   line 20: 88


public int productArity();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	iconst_2
   1:	ireturn
  LineNumberTable: 
   line 20: 0


public java.lang.String productPrefix();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	ldc	#115; //String ProcInstr
   2:	areturn
  LineNumberTable: 
   line 20: 0


public scala.xml.ProcInstr copy(java.lang.String, java.lang.String);
  Code:
   Stack=4, Locals=3, Args_size=3
   0:	new	#21; //class scala/xml/ProcInstr
   3:	dup
   4:	aload_1
   5:	aload_2
   6:	invokespecial	#119; //Method "<init>":(Ljava/lang/String;Ljava/lang/String;)V
   9:	areturn
  LineNumberTable: 
   line 20: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    this       Lscala/xml/ProcInstr;
   0      10      1    target       Ljava/lang/String;
   0      10      2    proctext       Ljava/lang/String;


public scala.collection.mutable.StringBuilder buildString(scala.collection.mutable.StringBuilder);
  Code:
   Stack=8, Locals=3, Args_size=2
   0:	aload_1
   1:	ldc	#123; //String <?%s%s?>
   3:	astore_2
   4:	new	#125; //class scala/collection/immutable/StringOps
   7:	dup
   8:	aload_2
   9:	invokespecial	#126; //Method scala/collection/immutable/StringOps."<init>":(Ljava/lang/String;)V
   12:	getstatic	#131; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   15:	iconst_2
   16:	anewarray	#80; //class java/lang/Object
   19:	dup
   20:	iconst_0
   21:	aload_0
   22:	invokevirtual	#110; //Method target:()Ljava/lang/String;
   25:	aastore
   26:	dup
   27:	iconst_1
   28:	aload_0
   29:	invokevirtual	#108; //Method proctext:()Ljava/lang/String;
   32:	invokevirtual	#135; //Method java/lang/String.isEmpty:()Z
   35:	ifeq	43
   38:	ldc	#137; //String 
   40:	goto	65
   43:	new	#59; //class scala/collection/mutable/StringBuilder
   46:	dup
   47:	invokespecial	#60; //Method scala/collection/mutable/StringBuilder."<init>":()V
   50:	ldc	#139; //String  
   52:	invokevirtual	#64; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   55:	aload_0
   56:	invokevirtual	#108; //Method proctext:()Ljava/lang/String;
   59:	invokevirtual	#64; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   62:	invokevirtual	#70; //Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
   65:	aastore
   66:	invokevirtual	#143; //Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
   69:	invokeinterface	#149,  2; //InterfaceMethod scala/collection/immutable/StringLike.format:(Lscala/collection/Seq;)Ljava/lang/String;
   74:	invokevirtual	#152; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
   77:	areturn
  LineNumberTable: 
   line 39: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      78      0    this       Lscala/xml/ProcInstr;
   0      78      1    sb       Lscala/collection/mutable/StringBuilder;


public java.lang.String text();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	ldc	#137; //String 
   2:	areturn
  LineNumberTable: 
   line 33: 0


public final java.lang.String label();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	ldc	#158; //String #PI
   2:	areturn
  LineNumberTable: 
   line 32: 0


public final boolean doTransform();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	iconst_0
   1:	ireturn
  LineNumberTable: 
   line 30: 0


public final boolean doCollectNamespaces();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	iconst_0
   1:	ireturn
  LineNumberTable: 
   line 29: 0


public java.lang.String proctext();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#25; //Field proctext:Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 20: 0


public java.lang.String target();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#23; //Field target:Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 20: 0


public java.lang.String copy$default$1();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#110; //Method target:()Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 20: 0


public java.lang.String copy$default$2();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#108; //Method proctext:()Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 20: 0


public scala.collection.Iterator productElements();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#167; //Method scala/Product$class.productElements:(Lscala/Product;)Lscala/collection/Iterator;
   4:	areturn
  LineNumberTable: 
   line 20: 0


public scala.collection.Iterator productIterator();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#170; //Method scala/Product$class.productIterator:(Lscala/Product;)Lscala/collection/Iterator;
   4:	areturn
  LineNumberTable: 
   line 20: 0


}

