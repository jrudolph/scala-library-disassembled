Compiled from "XMLEventReader.scala"
public abstract class scala.xml.pull.ProducerConsumerIterator$class extends java.lang.Object
  SourceFile: "XMLEventReader.scala"
  Scala: length = 0x
   
  InnerClass: 
   public final #163= #82 of #8; //$anonfun$produce$1=class scala/xml/pull/ProducerConsumerIterator$$anonfun$produce$1 of class scala/xml/pull/ProducerConsumerIterator
   public final #164= #111 of #8; //$anonfun$fillBuffer$2=class scala/xml/pull/ProducerConsumerIterator$$anonfun$fillBuffer$2 of class scala/xml/pull/ProducerConsumerIterator
   public final #165= #107 of #8; //$anonfun$fillBuffer$1=class scala/xml/pull/ProducerConsumerIterator$$anonfun$fillBuffer$1 of class scala/xml/pull/ProducerConsumerIterator
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	XMLEventReader.scala;
const #3 = Asciz	$init$;
const #4 = Asciz	(Lscala/xml/pull/ProducerConsumerIterator;)V;
const #5 = Asciz	Code;
const #6 = Asciz	LineNumberTable;
const #7 = Asciz	scala/xml/pull/ProducerConsumerIterator;
const #8 = class	#7;	//  scala/xml/pull/ProducerConsumerIterator
const #9 = Asciz	scala$xml$pull$ProducerConsumerIterator$_setter_$MaxQueueSize_$eq;
const #10 = Asciz	(I)V;
const #11 = NameAndType	#9:#10;//  scala$xml$pull$ProducerConsumerIterator$_setter_$MaxQueueSize_$eq:(I)V
const #12 = InterfaceMethod	#8.#11;	//  scala/xml/pull/ProducerConsumerIterator.scala$xml$pull$ProducerConsumerIterator$_setter_$MaxQueueSize_$eq:(I)V
const #13 = Asciz	$this;
const #14 = Asciz	Lscala/xml/pull/ProducerConsumerIterator;;
const #15 = Asciz	LocalVariableTable;
const #16 = Asciz	drainBuffer;
const #17 = Asciz	(Lscala/xml/pull/ProducerConsumerIterator;)Ljava/lang/Object;;
const #18 = Asciz	scala/Predef$;
const #19 = class	#18;	//  scala/Predef$
const #20 = Asciz	MODULE$;
const #21 = Asciz	Lscala/Predef$;;
const #22 = NameAndType	#20:#21;//  MODULE$:Lscala/Predef$;
const #23 = Field	#19.#22;	//  scala/Predef$.MODULE$:Lscala/Predef$;
const #24 = Asciz	scala/xml/pull/ProducerConsumerIterator$class;
const #25 = class	#24;	//  scala/xml/pull/ProducerConsumerIterator$class
const #26 = Asciz	eos;
const #27 = Asciz	(Lscala/xml/pull/ProducerConsumerIterator;)Z;
const #28 = NameAndType	#26:#27;//  eos:(Lscala/xml/pull/ProducerConsumerIterator;)Z
const #29 = Method	#25.#28;	//  scala/xml/pull/ProducerConsumerIterator$class.eos:(Lscala/xml/pull/ProducerConsumerIterator;)Z
const #30 = Asciz	assert;
const #31 = Asciz	(Z)V;
const #32 = NameAndType	#30:#31;//  assert:(Z)V
const #33 = Method	#19.#32;	//  scala/Predef$.assert:(Z)V
const #34 = Asciz	buffer;
const #35 = Asciz	()Ljava/lang/Object;;
const #36 = NameAndType	#34:#35;//  buffer:()Ljava/lang/Object;
const #37 = InterfaceMethod	#8.#36;	//  scala/xml/pull/ProducerConsumerIterator.buffer:()Ljava/lang/Object;
const #38 = Asciz	buffer_$eq;
const #39 = Asciz	(Ljava/lang/Object;)V;
const #40 = NameAndType	#38:#39;//  buffer_$eq:(Ljava/lang/Object;)V
const #41 = InterfaceMethod	#8.#40;	//  scala/xml/pull/ProducerConsumerIterator.buffer_$eq:(Ljava/lang/Object;)V
const #42 = Asciz	res;
const #43 = Asciz	Ljava/lang/Object;;
const #44 = Asciz	available;
const #45 = Asciz	isElement;
const #46 = Asciz	(Lscala/xml/pull/ProducerConsumerIterator;Ljava/lang/Object;)Z;
const #47 = NameAndType	#45:#46;//  isElement:(Lscala/xml/pull/ProducerConsumerIterator;Ljava/lang/Object;)Z
const #48 = Method	#25.#47;	//  scala/xml/pull/ProducerConsumerIterator$class.isElement:(Lscala/xml/pull/ProducerConsumerIterator;Ljava/lang/Object;)Z
const #49 = Asciz	scala$xml$pull$ProducerConsumerIterator$$queue;
const #50 = Asciz	()Ljava/util/concurrent/LinkedBlockingQueue;;
const #51 = NameAndType	#49:#50;//  scala$xml$pull$ProducerConsumerIterator$$queue:()Ljava/util/concurrent/LinkedBlockingQueue;
const #52 = InterfaceMethod	#8.#51;	//  scala/xml/pull/ProducerConsumerIterator.scala$xml$pull$ProducerConsumerIterator$$queue:()Ljava/util/concurrent/LinkedBlockingQueue;
const #53 = Asciz	java/util/concurrent/LinkedBlockingQueue;
const #54 = class	#53;	//  java/util/concurrent/LinkedBlockingQueue
const #55 = Asciz	peek;
const #56 = NameAndType	#55:#35;//  peek:()Ljava/lang/Object;
const #57 = Method	#54.#56;	//  java/util/concurrent/LinkedBlockingQueue.peek:()Ljava/lang/Object;
const #58 = Asciz	next;
const #59 = Asciz	java/util/NoSuchElementException;
const #60 = class	#59;	//  java/util/NoSuchElementException
const #61 = Asciz	ProducerConsumerIterator;
const #62 = String	#61;	//  ProducerConsumerIterator
const #63 = Asciz	<init>;
const #64 = Asciz	(Ljava/lang/String;)V;
const #65 = NameAndType	#63:#64;//  "<init>":(Ljava/lang/String;)V
const #66 = Method	#60.#65;	//  java/util/NoSuchElementException."<init>":(Ljava/lang/String;)V
const #67 = Asciz	java/lang/Object;
const #68 = class	#67;	//  java/lang/Object
const #69 = Asciz	equals;
const #70 = Asciz	(Ljava/lang/Object;)Z;
const #71 = NameAndType	#69:#70;//  equals:(Ljava/lang/Object;)Z
const #72 = Method	#68.#71;	//  java/lang/Object.equals:(Ljava/lang/Object;)Z
const #73 = Asciz	fillBuffer;
const #74 = NameAndType	#73:#27;//  fillBuffer:(Lscala/xml/pull/ProducerConsumerIterator;)Z
const #75 = Method	#25.#74;	//  scala/xml/pull/ProducerConsumerIterator$class.fillBuffer:(Lscala/xml/pull/ProducerConsumerIterator;)Z
const #76 = NameAndType	#16:#17;//  drainBuffer:(Lscala/xml/pull/ProducerConsumerIterator;)Ljava/lang/Object;
const #77 = Method	#25.#76;	//  scala/xml/pull/ProducerConsumerIterator$class.drainBuffer:(Lscala/xml/pull/ProducerConsumerIterator;)Ljava/lang/Object;
const #78 = Asciz	hasNext;
const #79 = Asciz	produce;
const #80 = Asciz	(Lscala/xml/pull/ProducerConsumerIterator;Ljava/lang/Object;)V;
const #81 = Asciz	scala/xml/pull/ProducerConsumerIterator$$anonfun$produce$1;
const #82 = class	#81;	//  scala/xml/pull/ProducerConsumerIterator$$anonfun$produce$1
const #83 = NameAndType	#63:#80;//  "<init>":(Lscala/xml/pull/ProducerConsumerIterator;Ljava/lang/Object;)V
const #84 = Method	#82.#83;	//  scala/xml/pull/ProducerConsumerIterator$$anonfun$produce$1."<init>":(Lscala/xml/pull/ProducerConsumerIterator;Ljava/lang/Object;)V
const #85 = Asciz	interruptibly;
const #86 = Asciz	(Lscala/Function0;)Lscala/Option;;
const #87 = NameAndType	#85:#86;//  interruptibly:(Lscala/Function0;)Lscala/Option;
const #88 = InterfaceMethod	#8.#87;	//  scala/xml/pull/ProducerConsumerIterator.interruptibly:(Lscala/Function0;)Lscala/Option;
const #89 = Asciz	x$1;
const #90 = Asciz	EndOfStream;
const #91 = NameAndType	#90:#35;//  EndOfStream:()Ljava/lang/Object;
const #92 = InterfaceMethod	#8.#91;	//  scala/xml/pull/ProducerConsumerIterator.EndOfStream:()Ljava/lang/Object;
const #93 = Asciz	java/lang/Number;
const #94 = class	#93;	//  java/lang/Number
const #95 = Asciz	java/lang/Character;
const #96 = class	#95;	//  java/lang/Character
const #97 = Asciz	scala/runtime/BoxesRunTime;
const #98 = class	#97;	//  scala/runtime/BoxesRunTime
const #99 = Asciz	equals2;
const #100 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)Z;
const #101 = NameAndType	#99:#100;//  equals2:(Ljava/lang/Object;Ljava/lang/Object;)Z
const #102 = Method	#98.#101;	//  scala/runtime/BoxesRunTime.equals2:(Ljava/lang/Object;Ljava/lang/Object;)Z
const #103 = Asciz	x0;
const #104 = Asciz	y0;
const #105 = Asciz	x;
const #106 = Asciz	scala/xml/pull/ProducerConsumerIterator$$anonfun$fillBuffer$1;
const #107 = class	#106;	//  scala/xml/pull/ProducerConsumerIterator$$anonfun$fillBuffer$1
const #108 = NameAndType	#63:#4;//  "<init>":(Lscala/xml/pull/ProducerConsumerIterator;)V
const #109 = Method	#107.#108;	//  scala/xml/pull/ProducerConsumerIterator$$anonfun$fillBuffer$1."<init>":(Lscala/xml/pull/ProducerConsumerIterator;)V
const #110 = Asciz	scala/xml/pull/ProducerConsumerIterator$$anonfun$fillBuffer$2;
const #111 = class	#110;	//  scala/xml/pull/ProducerConsumerIterator$$anonfun$fillBuffer$2
const #112 = Method	#111.#108;	//  scala/xml/pull/ProducerConsumerIterator$$anonfun$fillBuffer$2."<init>":(Lscala/xml/pull/ProducerConsumerIterator;)V
const #113 = Asciz	scala/Option;
const #114 = class	#113;	//  scala/Option
const #115 = Asciz	getOrElse;
const #116 = Asciz	(Lscala/Function0;)Ljava/lang/Object;;
const #117 = NameAndType	#115:#116;//  getOrElse:(Lscala/Function0;)Ljava/lang/Object;
const #118 = Method	#114.#117;	//  scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
const #119 = Asciz	(Lscala/xml/pull/ProducerConsumerIterator;)Ljava/util/concurrent/LinkedBlockingQueue;;
const #120 = Asciz	MaxQueueSize;
const #121 = Asciz	()I;
const #122 = NameAndType	#120:#121;//  MaxQueueSize:()I
const #123 = InterfaceMethod	#8.#122;	//  scala/xml/pull/ProducerConsumerIterator.MaxQueueSize:()I
const #124 = Asciz	()V;
const #125 = NameAndType	#63:#124;//  "<init>":()V
const #126 = Method	#54.#125;	//  java/util/concurrent/LinkedBlockingQueue."<init>":()V
const #127 = NameAndType	#63:#10;//  "<init>":(I)V
const #128 = Method	#54.#127;	//  java/util/concurrent/LinkedBlockingQueue."<init>":(I)V
const #129 = Asciz	(Lscala/xml/pull/ProducerConsumerIterator;Lscala/Function0;)Lscala/Option;;
const #130 = Asciz	scala/Some;
const #131 = class	#130;	//  scala/Some
const #132 = Asciz	scala/Function0;
const #133 = class	#132;	//  scala/Function0
const #134 = Asciz	apply;
const #135 = NameAndType	#134:#35;//  apply:()Ljava/lang/Object;
const #136 = InterfaceMethod	#133.#135;	//  scala/Function0.apply:()Ljava/lang/Object;
const #137 = NameAndType	#63:#39;//  "<init>":(Ljava/lang/Object;)V
const #138 = Method	#131.#137;	//  scala/Some."<init>":(Ljava/lang/Object;)V
const #139 = Asciz	scala/None$;
const #140 = class	#139;	//  scala/None$
const #141 = Asciz	Lscala/None$;;
const #142 = NameAndType	#20:#141;//  MODULE$:Lscala/None$;
const #143 = Field	#140.#142;	//  scala/None$.MODULE$:Lscala/None$;
const #144 = Asciz	java/lang/Thread;
const #145 = class	#144;	//  java/lang/Thread
const #146 = Asciz	currentThread;
const #147 = Asciz	()Ljava/lang/Thread;;
const #148 = NameAndType	#146:#147;//  currentThread:()Ljava/lang/Thread;
const #149 = Method	#145.#148;	//  java/lang/Thread.currentThread:()Ljava/lang/Thread;
const #150 = Asciz	interrupt;
const #151 = NameAndType	#150:#124;//  interrupt:()V
const #152 = Method	#145.#151;	//  java/lang/Thread.interrupt:()V
const #153 = Asciz	java/lang/InterruptedException;
const #154 = class	#153;	//  java/lang/InterruptedException
const #155 = Asciz	java/nio/channels/ClosedChannelException;
const #156 = class	#155;	//  java/nio/channels/ClosedChannelException
const #157 = Asciz	body;
const #158 = Asciz	Lscala/Function0;;
const #159 = Asciz	exceptionResult1;
const #160 = Asciz	Lscala/Option;;
const #161 = Asciz	Scala;
const #162 = Asciz	InnerClasses;
const #163 = Asciz	$anonfun$produce$1;
const #164 = Asciz	$anonfun$fillBuffer$2;
const #165 = Asciz	$anonfun$fillBuffer$1;

{
public static void $init$(scala.xml.pull.ProducerConsumerIterator);
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	iconst_m1
   2:	invokeinterface	#12,  2; //InterfaceMethod scala/xml/pull/ProducerConsumerIterator.scala$xml$pull$ProducerConsumerIterator$_setter_$MaxQueueSize_$eq:(I)V
   7:	return
  LineNumberTable: 
   line 122: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      8      0    $this       Lscala/xml/pull/ProducerConsumerIterator;


public static boolean available(scala.xml.pull.ProducerConsumerIterator);
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	aload_0
   2:	invokeinterface	#37,  1; //InterfaceMethod scala/xml/pull/ProducerConsumerIterator.buffer:()Ljava/lang/Object;
   7:	invokestatic	#48; //Method isElement:(Lscala/xml/pull/ProducerConsumerIterator;Ljava/lang/Object;)Z
   10:	ifne	29
   13:	aload_0
   14:	aload_0
   15:	invokeinterface	#52,  1; //InterfaceMethod scala/xml/pull/ProducerConsumerIterator.scala$xml$pull$ProducerConsumerIterator$$queue:()Ljava/util/concurrent/LinkedBlockingQueue;
   20:	invokevirtual	#57; //Method java/util/concurrent/LinkedBlockingQueue.peek:()Ljava/lang/Object;
   23:	invokestatic	#48; //Method isElement:(Lscala/xml/pull/ProducerConsumerIterator;Ljava/lang/Object;)Z
   26:	ifeq	33
   29:	iconst_1
   30:	goto	34
   33:	iconst_0
   34:	ireturn
  LineNumberTable: 
   line 153: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      35      0    $this       Lscala/xml/pull/ProducerConsumerIterator;


public static java.lang.Object next(scala.xml.pull.ProducerConsumerIterator);
  Code:
   Stack=3, Locals=2, Args_size=1
   0:	aload_0
   1:	invokestatic	#29; //Method eos:(Lscala/xml/pull/ProducerConsumerIterator;)Z
   4:	ifeq	17
   7:	new	#60; //class java/util/NoSuchElementException
   10:	dup
   11:	ldc	#62; //String ProducerConsumerIterator
   13:	invokespecial	#66; //Method java/util/NoSuchElementException."<init>":(Ljava/lang/String;)V
   16:	athrow
   17:	aload_0
   18:	invokeinterface	#37,  1; //InterfaceMethod scala/xml/pull/ProducerConsumerIterator.buffer:()Ljava/lang/Object;
   23:	dup
   24:	astore_1
   25:	ifnull	36
   28:	aload_1
   29:	aconst_null
   30:	invokevirtual	#72; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   33:	ifeq	44
   36:	aload_0
   37:	invokestatic	#75; //Method fillBuffer:(Lscala/xml/pull/ProducerConsumerIterator;)Z
   40:	pop
   41:	goto	44
   44:	aload_0
   45:	invokestatic	#77; //Method drainBuffer:(Lscala/xml/pull/ProducerConsumerIterator;)Ljava/lang/Object;
   48:	areturn
  LineNumberTable: 
   line 148: 0
   line 149: 17
   line 151: 44

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      49      0    $this       Lscala/xml/pull/ProducerConsumerIterator;


public static boolean hasNext(scala.xml.pull.ProducerConsumerIterator);
  Code:
   Stack=2, Locals=2, Args_size=1
   0:	aload_0
   1:	invokestatic	#29; //Method eos:(Lscala/xml/pull/ProducerConsumerIterator;)Z
   4:	ifne	33
   7:	aload_0
   8:	invokeinterface	#37,  1; //InterfaceMethod scala/xml/pull/ProducerConsumerIterator.buffer:()Ljava/lang/Object;
   13:	dup
   14:	astore_1
   15:	ifnull	26
   18:	aload_1
   19:	aconst_null
   20:	invokevirtual	#72; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   23:	ifeq	37
   26:	aload_0
   27:	invokestatic	#75; //Method fillBuffer:(Lscala/xml/pull/ProducerConsumerIterator;)Z
   30:	ifne	37
   33:	iconst_0
   34:	goto	38
   37:	iconst_1
   38:	ireturn
  LineNumberTable: 
   line 146: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      39      0    $this       Lscala/xml/pull/ProducerConsumerIterator;


public static void produce(scala.xml.pull.ProducerConsumerIterator, java.lang.Object);
  Code:
   Stack=5, Locals=2, Args_size=2
   0:	aload_0
   1:	invokestatic	#29; //Method eos:(Lscala/xml/pull/ProducerConsumerIterator;)Z
   4:	ifne	23
   7:	aload_0
   8:	new	#82; //class scala/xml/pull/ProducerConsumerIterator$$anonfun$produce$1
   11:	dup
   12:	aload_0
   13:	aload_1
   14:	invokespecial	#84; //Method scala/xml/pull/ProducerConsumerIterator$$anonfun$produce$1."<init>":(Lscala/xml/pull/ProducerConsumerIterator;Ljava/lang/Object;)V
   17:	invokeinterface	#88,  2; //InterfaceMethod scala/xml/pull/ProducerConsumerIterator.interruptibly:(Lscala/Function0;)Lscala/Option;
   22:	pop
   23:	return
  LineNumberTable: 
   line 142: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      24      0    $this       Lscala/xml/pull/ProducerConsumerIterator;
   0      24      1    x$1       Ljava/lang/Object;


public static final java.util.concurrent.LinkedBlockingQueue scala$xml$pull$ProducerConsumerIterator$$queue(scala.xml.pull.ProducerConsumerIterator);
  Code:
   Stack=3, Locals=1, Args_size=1
   0:	aload_0
   1:	invokeinterface	#123,  1; //InterfaceMethod scala/xml/pull/ProducerConsumerIterator.MaxQueueSize:()I
   6:	iconst_0
   7:	if_icmpge	20
   10:	new	#54; //class java/util/concurrent/LinkedBlockingQueue
   13:	dup
   14:	invokespecial	#126; //Method java/util/concurrent/LinkedBlockingQueue."<init>":()V
   17:	goto	33
   20:	new	#54; //class java/util/concurrent/LinkedBlockingQueue
   23:	dup
   24:	aload_0
   25:	invokeinterface	#123,  1; //InterfaceMethod scala/xml/pull/ProducerConsumerIterator.MaxQueueSize:()I
   30:	invokespecial	#128; //Method java/util/concurrent/LinkedBlockingQueue."<init>":(I)V
   33:	areturn
  LineNumberTable: 
   line 130: 0
   line 131: 20
   line 130: 33

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      34      0    $this       Lscala/xml/pull/ProducerConsumerIterator;


public static scala.Option interruptibly(scala.xml.pull.ProducerConsumerIterator, scala.Function0);
  Code:
   Stack=3, Locals=3, Args_size=2
   0:	new	#131; //class scala/Some
   3:	dup
   4:	aload_1
   5:	invokeinterface	#136,  1; //InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
   10:	invokespecial	#138; //Method scala/Some."<init>":(Ljava/lang/Object;)V
   13:	astore_2
   14:	goto	36
   17:	pop
   18:	getstatic	#143; //Field scala/None$.MODULE$:Lscala/None$;
   21:	astore_2
   22:	goto	36
   25:	pop
   26:	invokestatic	#149; //Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
   29:	invokevirtual	#152; //Method java/lang/Thread.interrupt:()V
   32:	getstatic	#143; //Field scala/None$.MODULE$:Lscala/None$;
   35:	astore_2
   36:	aload_2
   37:	areturn
  Exception table:
   from   to  target type
     0    17    25   Class java/lang/InterruptedException

     0    17    17   Class java/nio/channels/ClosedChannelException

  LineNumberTable: 
   line 124: 0
   line 126: 18
   line 125: 26

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      38      0    $this       Lscala/xml/pull/ProducerConsumerIterator;
   0      38      1    body       Lscala/Function0;
   0      37      2    exceptionResult1       Lscala/Option;


}

