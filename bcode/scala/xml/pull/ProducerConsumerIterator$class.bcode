Compiled from "XMLEventReader.scala"
public abstract class scala.xml.pull.ProducerConsumerIterator$class extends java.lang.Object
  SourceFile: "XMLEventReader.scala"
  Scala: length = 0x
   
  InnerClass: 
   public final #164= #94 of #8; //$anonfun$produce$1=class scala/xml/pull/ProducerConsumerIterator$$anonfun$produce$1 of class scala/xml/pull/ProducerConsumerIterator
   public final #165= #108 of #8; //$anonfun$fillBuffer$1=class scala/xml/pull/ProducerConsumerIterator$$anonfun$fillBuffer$1 of class scala/xml/pull/ProducerConsumerIterator
   public final #166= #112 of #8; //$anonfun$fillBuffer$2=class scala/xml/pull/ProducerConsumerIterator$$anonfun$fillBuffer$2 of class scala/xml/pull/ProducerConsumerIterator
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	XMLEventReader.scala;
const #3 = Asciz	$init$;
const #4 = Asciz	(Lscala/xml/pull/ProducerConsumerIterator;)V;
const #5 = Asciz	Code;
const #6 = Asciz	LineNumberTable;
const #7 = Asciz	scala/xml/pull/ProducerConsumerIterator;
const #8 = class	#7;	//  scala/xml/pull/ProducerConsumerIterator
const #9 = Asciz	scala$xml$pull$ProducerConsumerIterator$_setter_$MaxQueueSize_$eq;
const #10 = Asciz	(I)V;
const #11 = NameAndType	#9:#10;//  scala$xml$pull$ProducerConsumerIterator$_setter_$MaxQueueSize_$eq:(I)V
const #12 = InterfaceMethod	#8.#11;	//  scala/xml/pull/ProducerConsumerIterator.scala$xml$pull$ProducerConsumerIterator$_setter_$MaxQueueSize_$eq:(I)V
const #13 = Asciz	$this;
const #14 = Asciz	Lscala/xml/pull/ProducerConsumerIterator;;
const #15 = Asciz	LocalVariableTable;
const #16 = Asciz	drainBuffer;
const #17 = Asciz	(Lscala/xml/pull/ProducerConsumerIterator;)Ljava/lang/Object;;
const #18 = Asciz	scala/Predef$;
const #19 = class	#18;	//  scala/Predef$
const #20 = Asciz	MODULE$;
const #21 = Asciz	Lscala/Predef$;;
const #22 = NameAndType	#20:#21;//  MODULE$:Lscala/Predef$;
const #23 = Field	#19.#22;	//  scala/Predef$.MODULE$:Lscala/Predef$;
const #24 = Asciz	scala/xml/pull/ProducerConsumerIterator$class;
const #25 = class	#24;	//  scala/xml/pull/ProducerConsumerIterator$class
const #26 = Asciz	eos;
const #27 = Asciz	(Lscala/xml/pull/ProducerConsumerIterator;)Z;
const #28 = NameAndType	#26:#27;//  eos:(Lscala/xml/pull/ProducerConsumerIterator;)Z
const #29 = Method	#25.#28;	//  scala/xml/pull/ProducerConsumerIterator$class.eos:(Lscala/xml/pull/ProducerConsumerIterator;)Z
const #30 = Asciz	assert;
const #31 = Asciz	(Z)V;
const #32 = NameAndType	#30:#31;//  assert:(Z)V
const #33 = Method	#19.#32;	//  scala/Predef$.assert:(Z)V
const #34 = Asciz	buffer;
const #35 = Asciz	()Ljava/lang/Object;;
const #36 = NameAndType	#34:#35;//  buffer:()Ljava/lang/Object;
const #37 = InterfaceMethod	#8.#36;	//  scala/xml/pull/ProducerConsumerIterator.buffer:()Ljava/lang/Object;
const #38 = Asciz	buffer_$eq;
const #39 = Asciz	(Ljava/lang/Object;)V;
const #40 = NameAndType	#38:#39;//  buffer_$eq:(Ljava/lang/Object;)V
const #41 = InterfaceMethod	#8.#40;	//  scala/xml/pull/ProducerConsumerIterator.buffer_$eq:(Ljava/lang/Object;)V
const #42 = Asciz	res;
const #43 = Asciz	Ljava/lang/Object;;
const #44 = Asciz	()TT;;
const #45 = Asciz	Signature;
const #46 = Asciz	available;
const #47 = Asciz	isElement;
const #48 = Asciz	(Lscala/xml/pull/ProducerConsumerIterator;Ljava/lang/Object;)Z;
const #49 = NameAndType	#47:#48;//  isElement:(Lscala/xml/pull/ProducerConsumerIterator;Ljava/lang/Object;)Z
const #50 = Method	#25.#49;	//  scala/xml/pull/ProducerConsumerIterator$class.isElement:(Lscala/xml/pull/ProducerConsumerIterator;Ljava/lang/Object;)Z
const #51 = Asciz	scala$xml$pull$ProducerConsumerIterator$$queue;
const #52 = Asciz	()Ljava/util/concurrent/LinkedBlockingQueue;;
const #53 = NameAndType	#51:#52;//  scala$xml$pull$ProducerConsumerIterator$$queue:()Ljava/util/concurrent/LinkedBlockingQueue;
const #54 = InterfaceMethod	#8.#53;	//  scala/xml/pull/ProducerConsumerIterator.scala$xml$pull$ProducerConsumerIterator$$queue:()Ljava/util/concurrent/LinkedBlockingQueue;
const #55 = Asciz	java/util/concurrent/LinkedBlockingQueue;
const #56 = class	#55;	//  java/util/concurrent/LinkedBlockingQueue
const #57 = Asciz	peek;
const #58 = NameAndType	#57:#35;//  peek:()Ljava/lang/Object;
const #59 = Method	#56.#58;	//  java/util/concurrent/LinkedBlockingQueue.peek:()Ljava/lang/Object;
const #60 = Asciz	next;
const #61 = Asciz	java/util/NoSuchElementException;
const #62 = class	#61;	//  java/util/NoSuchElementException
const #63 = Asciz	ProducerConsumerIterator;
const #64 = String	#63;	//  ProducerConsumerIterator
const #65 = Asciz	<init>;
const #66 = Asciz	(Ljava/lang/String;)V;
const #67 = NameAndType	#65:#66;//  "<init>":(Ljava/lang/String;)V
const #68 = Method	#62.#67;	//  java/util/NoSuchElementException."<init>":(Ljava/lang/String;)V
const #69 = Asciz	scala/runtime/BoxesRunTime;
const #70 = class	#69;	//  scala/runtime/BoxesRunTime
const #71 = Asciz	equals;
const #72 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)Z;
const #73 = NameAndType	#71:#72;//  equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
const #74 = Method	#70.#73;	//  scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
const #75 = Asciz	fillBuffer;
const #76 = NameAndType	#75:#27;//  fillBuffer:(Lscala/xml/pull/ProducerConsumerIterator;)Z
const #77 = Method	#25.#76;	//  scala/xml/pull/ProducerConsumerIterator$class.fillBuffer:(Lscala/xml/pull/ProducerConsumerIterator;)Z
const #78 = Asciz	boxToBoolean;
const #79 = Asciz	(Z)Ljava/lang/Boolean;;
const #80 = NameAndType	#78:#79;//  boxToBoolean:(Z)Ljava/lang/Boolean;
const #81 = Method	#70.#80;	//  scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
const #82 = Asciz	scala/runtime/BoxedUnit;
const #83 = class	#82;	//  scala/runtime/BoxedUnit
const #84 = Asciz	UNIT;
const #85 = Asciz	Lscala/runtime/BoxedUnit;;
const #86 = NameAndType	#84:#85;//  UNIT:Lscala/runtime/BoxedUnit;
const #87 = Field	#83.#86;	//  scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
const #88 = NameAndType	#16:#17;//  drainBuffer:(Lscala/xml/pull/ProducerConsumerIterator;)Ljava/lang/Object;
const #89 = Method	#25.#88;	//  scala/xml/pull/ProducerConsumerIterator$class.drainBuffer:(Lscala/xml/pull/ProducerConsumerIterator;)Ljava/lang/Object;
const #90 = Asciz	hasNext;
const #91 = Asciz	produce;
const #92 = Asciz	(Lscala/xml/pull/ProducerConsumerIterator;Ljava/lang/Object;)V;
const #93 = Asciz	scala/xml/pull/ProducerConsumerIterator$$anonfun$produce$1;
const #94 = class	#93;	//  scala/xml/pull/ProducerConsumerIterator$$anonfun$produce$1
const #95 = NameAndType	#65:#92;//  "<init>":(Lscala/xml/pull/ProducerConsumerIterator;Ljava/lang/Object;)V
const #96 = Method	#94.#95;	//  scala/xml/pull/ProducerConsumerIterator$$anonfun$produce$1."<init>":(Lscala/xml/pull/ProducerConsumerIterator;Ljava/lang/Object;)V
const #97 = Asciz	interruptibly;
const #98 = Asciz	(Lscala/Function0;)Lscala/Option;;
const #99 = NameAndType	#97:#98;//  interruptibly:(Lscala/Function0;)Lscala/Option;
const #100 = InterfaceMethod	#8.#99;	//  scala/xml/pull/ProducerConsumerIterator.interruptibly:(Lscala/Function0;)Lscala/Option;
const #101 = Asciz	x$1;
const #102 = Asciz	EndOfStream;
const #103 = NameAndType	#102:#35;//  EndOfStream:()Ljava/lang/Object;
const #104 = InterfaceMethod	#8.#103;	//  scala/xml/pull/ProducerConsumerIterator.EndOfStream:()Ljava/lang/Object;
const #105 = Asciz	x;
const #106 = Asciz	(TT;)Z;
const #107 = Asciz	scala/xml/pull/ProducerConsumerIterator$$anonfun$fillBuffer$1;
const #108 = class	#107;	//  scala/xml/pull/ProducerConsumerIterator$$anonfun$fillBuffer$1
const #109 = NameAndType	#65:#4;//  "<init>":(Lscala/xml/pull/ProducerConsumerIterator;)V
const #110 = Method	#108.#109;	//  scala/xml/pull/ProducerConsumerIterator$$anonfun$fillBuffer$1."<init>":(Lscala/xml/pull/ProducerConsumerIterator;)V
const #111 = Asciz	scala/xml/pull/ProducerConsumerIterator$$anonfun$fillBuffer$2;
const #112 = class	#111;	//  scala/xml/pull/ProducerConsumerIterator$$anonfun$fillBuffer$2
const #113 = Method	#112.#109;	//  scala/xml/pull/ProducerConsumerIterator$$anonfun$fillBuffer$2."<init>":(Lscala/xml/pull/ProducerConsumerIterator;)V
const #114 = Asciz	scala/Option;
const #115 = class	#114;	//  scala/Option
const #116 = Asciz	getOrElse;
const #117 = Asciz	(Lscala/Function0;)Ljava/lang/Object;;
const #118 = NameAndType	#116:#117;//  getOrElse:(Lscala/Function0;)Ljava/lang/Object;
const #119 = Method	#115.#118;	//  scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
const #120 = Asciz	(Lscala/xml/pull/ProducerConsumerIterator;)Ljava/util/concurrent/LinkedBlockingQueue;;
const #121 = Asciz	MaxQueueSize;
const #122 = Asciz	()I;
const #123 = NameAndType	#121:#122;//  MaxQueueSize:()I
const #124 = InterfaceMethod	#8.#123;	//  scala/xml/pull/ProducerConsumerIterator.MaxQueueSize:()I
const #125 = Asciz	()V;
const #126 = NameAndType	#65:#125;//  "<init>":()V
const #127 = Method	#56.#126;	//  java/util/concurrent/LinkedBlockingQueue."<init>":()V
const #128 = NameAndType	#65:#10;//  "<init>":(I)V
const #129 = Method	#56.#128;	//  java/util/concurrent/LinkedBlockingQueue."<init>":(I)V
const #130 = Asciz	(Lscala/xml/pull/ProducerConsumerIterator;Lscala/Function0;)Lscala/Option;;
const #131 = Asciz	scala/Some;
const #132 = class	#131;	//  scala/Some
const #133 = Asciz	scala/Function0;
const #134 = class	#133;	//  scala/Function0
const #135 = Asciz	apply;
const #136 = NameAndType	#135:#35;//  apply:()Ljava/lang/Object;
const #137 = InterfaceMethod	#134.#136;	//  scala/Function0.apply:()Ljava/lang/Object;
const #138 = NameAndType	#65:#39;//  "<init>":(Ljava/lang/Object;)V
const #139 = Method	#132.#138;	//  scala/Some."<init>":(Ljava/lang/Object;)V
const #140 = Asciz	scala/None$;
const #141 = class	#140;	//  scala/None$
const #142 = Asciz	Lscala/None$;;
const #143 = NameAndType	#20:#142;//  MODULE$:Lscala/None$;
const #144 = Field	#141.#143;	//  scala/None$.MODULE$:Lscala/None$;
const #145 = Asciz	java/lang/Thread;
const #146 = class	#145;	//  java/lang/Thread
const #147 = Asciz	currentThread;
const #148 = Asciz	()Ljava/lang/Thread;;
const #149 = NameAndType	#147:#148;//  currentThread:()Ljava/lang/Thread;
const #150 = Method	#146.#149;	//  java/lang/Thread.currentThread:()Ljava/lang/Thread;
const #151 = Asciz	interrupt;
const #152 = NameAndType	#151:#125;//  interrupt:()V
const #153 = Method	#146.#152;	//  java/lang/Thread.interrupt:()V
const #154 = Asciz	java/lang/InterruptedException;
const #155 = class	#154;	//  java/lang/InterruptedException
const #156 = Asciz	java/nio/channels/ClosedChannelException;
const #157 = class	#156;	//  java/nio/channels/ClosedChannelException
const #158 = Asciz	body;
const #159 = Asciz	Lscala/Function0;;
const #160 = Asciz	exceptionResult1;
const #161 = Asciz	Lscala/Option;;
const #162 = Asciz	Scala;
const #163 = Asciz	InnerClasses;
const #164 = Asciz	$anonfun$produce$1;
const #165 = Asciz	$anonfun$fillBuffer$1;
const #166 = Asciz	$anonfun$fillBuffer$2;
const #167 = Asciz	java/lang/Object;
const #168 = class	#167;	//  java/lang/Object

{
public static void $init$(scala.xml.pull.ProducerConsumerIterator);
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	iconst_m1
   2:	invokeinterface	#12,  2; //InterfaceMethod scala/xml/pull/ProducerConsumerIterator.scala$xml$pull$ProducerConsumerIterator$_setter_$MaxQueueSize_$eq:(I)V
   7:	return
  LineNumberTable: 
   line 122: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      8      0    $this       Lscala/xml/pull/ProducerConsumerIterator;


public static boolean available(scala.xml.pull.ProducerConsumerIterator);
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	aload_0
   2:	invokeinterface	#37,  1; //InterfaceMethod scala/xml/pull/ProducerConsumerIterator.buffer:()Ljava/lang/Object;
   7:	invokestatic	#50; //Method isElement:(Lscala/xml/pull/ProducerConsumerIterator;Ljava/lang/Object;)Z
   10:	ifne	29
   13:	aload_0
   14:	aload_0
   15:	invokeinterface	#54,  1; //InterfaceMethod scala/xml/pull/ProducerConsumerIterator.scala$xml$pull$ProducerConsumerIterator$$queue:()Ljava/util/concurrent/LinkedBlockingQueue;
   20:	invokevirtual	#59; //Method java/util/concurrent/LinkedBlockingQueue.peek:()Ljava/lang/Object;
   23:	invokestatic	#50; //Method isElement:(Lscala/xml/pull/ProducerConsumerIterator;Ljava/lang/Object;)Z
   26:	ifeq	33
   29:	iconst_1
   30:	goto	34
   33:	iconst_0
   34:	ireturn
  LineNumberTable: 
   line 153: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      35      0    $this       Lscala/xml/pull/ProducerConsumerIterator;


public static java.lang.Object next(scala.xml.pull.ProducerConsumerIterator);
  Code:
   Stack=3, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#29; //Method eos:(Lscala/xml/pull/ProducerConsumerIterator;)Z
   4:	ifeq	17
   7:	new	#62; //class java/util/NoSuchElementException
   10:	dup
   11:	ldc	#64; //String ProducerConsumerIterator
   13:	invokespecial	#68; //Method java/util/NoSuchElementException."<init>":(Ljava/lang/String;)V
   16:	athrow
   17:	aload_0
   18:	invokeinterface	#37,  1; //InterfaceMethod scala/xml/pull/ProducerConsumerIterator.buffer:()Ljava/lang/Object;
   23:	aconst_null
   24:	pop
   25:	aconst_null
   26:	invokestatic	#74; //Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
   29:	ifeq	42
   32:	aload_0
   33:	invokestatic	#77; //Method fillBuffer:(Lscala/xml/pull/ProducerConsumerIterator;)Z
   36:	invokestatic	#81; //Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
   39:	goto	45
   42:	getstatic	#87; //Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
   45:	pop
   46:	aload_0
   47:	invokestatic	#89; //Method drainBuffer:(Lscala/xml/pull/ProducerConsumerIterator;)Ljava/lang/Object;
   50:	areturn
  LineNumberTable: 
   line 148: 0
   line 149: 17
   line 151: 46

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      51      0    $this       Lscala/xml/pull/ProducerConsumerIterator;


public static boolean hasNext(scala.xml.pull.ProducerConsumerIterator);
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#29; //Method eos:(Lscala/xml/pull/ProducerConsumerIterator;)Z
   4:	ifne	29
   7:	aload_0
   8:	invokeinterface	#37,  1; //InterfaceMethod scala/xml/pull/ProducerConsumerIterator.buffer:()Ljava/lang/Object;
   13:	aconst_null
   14:	pop
   15:	aconst_null
   16:	invokestatic	#74; //Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
   19:	ifeq	33
   22:	aload_0
   23:	invokestatic	#77; //Method fillBuffer:(Lscala/xml/pull/ProducerConsumerIterator;)Z
   26:	ifne	33
   29:	iconst_0
   30:	goto	34
   33:	iconst_1
   34:	ireturn
  LineNumberTable: 
   line 146: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      35      0    $this       Lscala/xml/pull/ProducerConsumerIterator;


public static void produce(scala.xml.pull.ProducerConsumerIterator, java.lang.Object);
  Code:
   Stack=5, Locals=2, Args_size=2
   0:	aload_0
   1:	invokestatic	#29; //Method eos:(Lscala/xml/pull/ProducerConsumerIterator;)Z
   4:	ifne	23
   7:	aload_0
   8:	new	#94; //class scala/xml/pull/ProducerConsumerIterator$$anonfun$produce$1
   11:	dup
   12:	aload_0
   13:	aload_1
   14:	invokespecial	#96; //Method scala/xml/pull/ProducerConsumerIterator$$anonfun$produce$1."<init>":(Lscala/xml/pull/ProducerConsumerIterator;Ljava/lang/Object;)V
   17:	invokeinterface	#100,  2; //InterfaceMethod scala/xml/pull/ProducerConsumerIterator.interruptibly:(Lscala/Function0;)Lscala/Option;
   22:	pop
   23:	return
  LineNumberTable: 
   line 142: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      24      0    $this       Lscala/xml/pull/ProducerConsumerIterator;
   0      24      1    x$1       Ljava/lang/Object;


public static final java.util.concurrent.LinkedBlockingQueue scala$xml$pull$ProducerConsumerIterator$$queue(scala.xml.pull.ProducerConsumerIterator);
  Code:
   Stack=3, Locals=1, Args_size=1
   0:	aload_0
   1:	invokeinterface	#124,  1; //InterfaceMethod scala/xml/pull/ProducerConsumerIterator.MaxQueueSize:()I
   6:	iconst_0
   7:	if_icmpge	20
   10:	new	#56; //class java/util/concurrent/LinkedBlockingQueue
   13:	dup
   14:	invokespecial	#127; //Method java/util/concurrent/LinkedBlockingQueue."<init>":()V
   17:	goto	33
   20:	new	#56; //class java/util/concurrent/LinkedBlockingQueue
   23:	dup
   24:	aload_0
   25:	invokeinterface	#124,  1; //InterfaceMethod scala/xml/pull/ProducerConsumerIterator.MaxQueueSize:()I
   30:	invokespecial	#129; //Method java/util/concurrent/LinkedBlockingQueue."<init>":(I)V
   33:	areturn
  LineNumberTable: 
   line 130: 0
   line 131: 20
   line 130: 33

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      34      0    $this       Lscala/xml/pull/ProducerConsumerIterator;


public static scala.Option interruptibly(scala.xml.pull.ProducerConsumerIterator, scala.Function0);
  Code:
   Stack=3, Locals=3, Args_size=2
   0:	aconst_null
   1:	astore_2
   2:	new	#132; //class scala/Some
   5:	dup
   6:	aload_1
   7:	invokeinterface	#137,  1; //InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
   12:	invokespecial	#139; //Method scala/Some."<init>":(Ljava/lang/Object;)V
   15:	astore_2
   16:	goto	38
   19:	pop
   20:	getstatic	#144; //Field scala/None$.MODULE$:Lscala/None$;
   23:	astore_2
   24:	goto	38
   27:	pop
   28:	invokestatic	#150; //Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
   31:	invokevirtual	#153; //Method java/lang/Thread.interrupt:()V
   34:	getstatic	#144; //Field scala/None$.MODULE$:Lscala/None$;
   37:	astore_2
   38:	aload_2
   39:	areturn
  Exception table:
   from   to  target type
     2    19    27   Class java/lang/InterruptedException

     2    19    19   Class java/nio/channels/ClosedChannelException

  LineNumberTable: 
   line 124: 0
   line 126: 20
   line 125: 28

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      40      0    $this       Lscala/xml/pull/ProducerConsumerIterator;
   0      40      1    body       Lscala/Function0;
   2      37      2    exceptionResult1       Lscala/Option;


}

