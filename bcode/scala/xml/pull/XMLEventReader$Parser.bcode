Compiled from "XMLEventReader.scala"
public class scala.xml.pull.XMLEventReader$Parser extends scala.xml.parsing.MarkupHandler implements scala.xml.parsing.MarkupParser,scala.xml.parsing.ExternalSources,java.lang.Runnable,scala.ScalaObject
  SourceFile: "XMLEventReader.scala"
  Scala: length = 0x
   
  InnerClass: 
   public #493= #32 of #62; //Parser=class scala/xml/pull/XMLEventReader$Parser of class scala/xml/pull/XMLEventReader
   public final #494= #86 of #32; //$anonfun$run$1=class scala/xml/pull/XMLEventReader$Parser$$anonfun$run$1 of class scala/xml/pull/XMLEventReader$Parser
   public final #495= #191 of #32; //$anonfun$setEvent$1=class scala/xml/pull/XMLEventReader$Parser$$anonfun$setEvent$1 of class scala/xml/pull/XMLEventReader$Parser
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	XMLEventReader.scala;
const #3 = Asciz	eof;
const #4 = Asciz	Z;
const #5 = Asciz	doc;
const #6 = Asciz	Lscala/xml/Document;;
const #7 = Asciz	dtd;
const #8 = Asciz	Lscala/xml/dtd/DTD;;
const #9 = Asciz	cbuf;
const #10 = Asciz	Lscala/collection/mutable/StringBuilder;;
const #11 = Asciz	ch;
const #12 = Asciz	C;
const #13 = Asciz	tmppos;
const #14 = Asciz	I;
const #15 = Asciz	extIndex;
const #16 = Asciz	pos;
const #17 = Asciz	inpStack;
const #18 = Asciz	Lscala/collection/immutable/List;;
const #19 = Asciz	scala$xml$parsing$MarkupParser$$handle;
const #20 = Asciz	Lscala/xml/parsing/MarkupHandler;;
const #21 = Asciz	curInput;
const #22 = Asciz	Lscala/io/Source;;
const #23 = Asciz	$outer;
const #24 = Asciz	Lscala/xml/pull/XMLEventReader;;
const #25 = Asciz	preserveWS;
const #26 = Asciz	input;
const #27 = Asciz	<init>;
const #28 = Asciz	(Lscala/xml/pull/XMLEventReader;Lscala/io/Source;)V;
const #29 = Asciz	Code;
const #30 = Asciz	LineNumberTable;
const #31 = Asciz	scala/xml/pull/XMLEventReader$Parser;
const #32 = class	#31;	//  scala/xml/pull/XMLEventReader$Parser
const #33 = NameAndType	#26:#22;//  input:Lscala/io/Source;
const #34 = Field	#32.#33;	//  scala/xml/pull/XMLEventReader$Parser.input:Lscala/io/Source;
const #35 = Asciz	java/lang/NullPointerException;
const #36 = class	#35;	//  java/lang/NullPointerException
const #37 = Asciz	()V;
const #38 = NameAndType	#27:#37;//  "<init>":()V
const #39 = Method	#36.#38;	//  java/lang/NullPointerException."<init>":()V
const #40 = NameAndType	#23:#24;//  $outer:Lscala/xml/pull/XMLEventReader;
const #41 = Field	#32.#40;	//  scala/xml/pull/XMLEventReader$Parser.$outer:Lscala/xml/pull/XMLEventReader;
const #42 = Asciz	scala/xml/parsing/MarkupHandler;
const #43 = class	#42;	//  scala/xml/parsing/MarkupHandler
const #44 = Method	#43.#38;	//  scala/xml/parsing/MarkupHandler."<init>":()V
const #45 = Asciz	scala/xml/parsing/TokenTests$class;
const #46 = class	#45;	//  scala/xml/parsing/TokenTests$class
const #47 = Asciz	$init$;
const #48 = Asciz	(Lscala/xml/parsing/TokenTests;)V;
const #49 = NameAndType	#47:#48;//  $init$:(Lscala/xml/parsing/TokenTests;)V
const #50 = Method	#46.#49;	//  scala/xml/parsing/TokenTests$class.$init$:(Lscala/xml/parsing/TokenTests;)V
const #51 = Asciz	scala/xml/parsing/MarkupParser$class;
const #52 = class	#51;	//  scala/xml/parsing/MarkupParser$class
const #53 = Asciz	(Lscala/xml/parsing/MarkupParser;)V;
const #54 = NameAndType	#47:#53;//  $init$:(Lscala/xml/parsing/MarkupParser;)V
const #55 = Method	#52.#54;	//  scala/xml/parsing/MarkupParser$class.$init$:(Lscala/xml/parsing/MarkupParser;)V
const #56 = Asciz	scala/xml/parsing/ExternalSources$class;
const #57 = class	#56;	//  scala/xml/parsing/ExternalSources$class
const #58 = Asciz	(Lscala/xml/parsing/ExternalSources;)V;
const #59 = NameAndType	#47:#58;//  $init$:(Lscala/xml/parsing/ExternalSources;)V
const #60 = Method	#57.#59;	//  scala/xml/parsing/ExternalSources$class.$init$:(Lscala/xml/parsing/ExternalSources;)V
const #61 = Asciz	scala/xml/pull/XMLEventReader;
const #62 = class	#61;	//  scala/xml/pull/XMLEventReader
const #63 = Asciz	()Z;
const #64 = NameAndType	#25:#63;//  preserveWS:()Z
const #65 = Method	#62.#64;	//  scala/xml/pull/XMLEventReader.preserveWS:()Z
const #66 = NameAndType	#25:#4;//  preserveWS:Z
const #67 = Field	#32.#66;	//  scala/xml/pull/XMLEventReader$Parser.preserveWS:Z
const #68 = Asciz	this;
const #69 = Asciz	Lscala/xml/pull/XMLEventReader$Parser;;
const #70 = Asciz	LocalVariableTable;
const #71 = Asciz	scala$xml$pull$XMLEventReader$Parser$$$outer;
const #72 = Asciz	()Lscala/xml/pull/XMLEventReader;;
const #73 = Asciz	run;
const #74 = Asciz	()Lscala/io/Source;;
const #75 = NameAndType	#26:#74;//  input:()Lscala/io/Source;
const #76 = Method	#32.#75;	//  scala/xml/pull/XMLEventReader$Parser.input:()Lscala/io/Source;
const #77 = Asciz	scala/xml/parsing/MarkupParser;
const #78 = class	#77;	//  scala/xml/parsing/MarkupParser
const #79 = Asciz	curInput_$eq;
const #80 = Asciz	(Lscala/io/Source;)V;
const #81 = NameAndType	#79:#80;//  curInput_$eq:(Lscala/io/Source;)V
const #82 = InterfaceMethod	#78.#81;	//  scala/xml/parsing/MarkupParser.curInput_$eq:(Lscala/io/Source;)V
const #83 = NameAndType	#71:#72;//  scala$xml$pull$XMLEventReader$Parser$$$outer:()Lscala/xml/pull/XMLEventReader;
const #84 = Method	#32.#83;	//  scala/xml/pull/XMLEventReader$Parser.scala$xml$pull$XMLEventReader$Parser$$$outer:()Lscala/xml/pull/XMLEventReader;
const #85 = Asciz	scala/xml/pull/XMLEventReader$Parser$$anonfun$run$1;
const #86 = class	#85;	//  scala/xml/pull/XMLEventReader$Parser$$anonfun$run$1
const #87 = Asciz	(Lscala/xml/pull/XMLEventReader$Parser;)V;
const #88 = NameAndType	#27:#87;//  "<init>":(Lscala/xml/pull/XMLEventReader$Parser;)V
const #89 = Method	#86.#88;	//  scala/xml/pull/XMLEventReader$Parser$$anonfun$run$1."<init>":(Lscala/xml/pull/XMLEventReader$Parser;)V
const #90 = Asciz	scala/xml/pull/ProducerConsumerIterator;
const #91 = class	#90;	//  scala/xml/pull/ProducerConsumerIterator
const #92 = Asciz	interruptibly;
const #93 = Asciz	(Lscala/Function0;)Lscala/Option;;
const #94 = NameAndType	#92:#93;//  interruptibly:(Lscala/Function0;)Lscala/Option;
const #95 = InterfaceMethod	#91.#94;	//  scala/xml/pull/ProducerConsumerIterator.interruptibly:(Lscala/Function0;)Lscala/Option;
const #96 = Asciz	scala/Predef$;
const #97 = class	#96;	//  scala/Predef$
const #98 = Asciz	MODULE$;
const #99 = Asciz	Lscala/Predef$;;
const #100 = NameAndType	#98:#99;//  MODULE$:Lscala/Predef$;
const #101 = Field	#97.#100;	//  scala/Predef$.MODULE$:Lscala/Predef$;
const #102 = Asciz	scala/xml/pull/XMLEvent;
const #103 = class	#102;	//  scala/xml/pull/XMLEvent
const #104 = Asciz	POISON;
const #105 = Asciz	()Lscala/xml/pull/XMLEventReader$POISON$;;
const #106 = NameAndType	#104:#105;//  POISON:()Lscala/xml/pull/XMLEventReader$POISON$;
const #107 = Method	#62.#106;	//  scala/xml/pull/XMLEventReader.POISON:()Lscala/xml/pull/XMLEventReader$POISON$;
const #108 = Asciz	[Ljava/lang/Object;;
const #109 = class	#108;	//  "[Ljava/lang/Object;"
const #110 = Asciz	wrapRefArray;
const #111 = Asciz	([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;;
const #112 = NameAndType	#110:#111;//  wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
const #113 = Method	#97.#112;	//  scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
const #114 = Asciz	setEvent;
const #115 = Asciz	(Lscala/collection/Seq;)Lscala/xml/NodeSeq;;
const #116 = NameAndType	#114:#115;//  setEvent:(Lscala/collection/Seq;)Lscala/xml/NodeSeq;
const #117 = Method	#32.#116;	//  scala/xml/pull/XMLEventReader$Parser.setEvent:(Lscala/collection/Seq;)Lscala/xml/NodeSeq;
const #118 = Asciz	text;
const #119 = Asciz	(ILjava/lang/String;)Lscala/xml/NodeSeq;;
const #120 = Asciz	scala/xml/pull/EvText;
const #121 = class	#120;	//  scala/xml/pull/EvText
const #122 = Asciz	(Ljava/lang/String;)V;
const #123 = NameAndType	#27:#122;//  "<init>":(Ljava/lang/String;)V
const #124 = Method	#121.#123;	//  scala/xml/pull/EvText."<init>":(Ljava/lang/String;)V
const #125 = Asciz	txt;
const #126 = Asciz	Ljava/lang/String;;
const #127 = Asciz	entityRef;
const #128 = Asciz	scala/xml/pull/EvEntityRef;
const #129 = class	#128;	//  scala/xml/pull/EvEntityRef
const #130 = Method	#129.#123;	//  scala/xml/pull/EvEntityRef."<init>":(Ljava/lang/String;)V
const #131 = Asciz	n;
const #132 = Asciz	comment;
const #133 = Asciz	scala/xml/pull/EvComment;
const #134 = class	#133;	//  scala/xml/pull/EvComment
const #135 = Method	#134.#123;	//  scala/xml/pull/EvComment."<init>":(Ljava/lang/String;)V
const #136 = Asciz	procInstr;
const #137 = Asciz	(ILjava/lang/String;Ljava/lang/String;)Lscala/xml/NodeSeq;;
const #138 = Asciz	scala/xml/pull/EvProcInstr;
const #139 = class	#138;	//  scala/xml/pull/EvProcInstr
const #140 = Asciz	(Ljava/lang/String;Ljava/lang/String;)V;
const #141 = NameAndType	#27:#140;//  "<init>":(Ljava/lang/String;Ljava/lang/String;)V
const #142 = Method	#139.#141;	//  scala/xml/pull/EvProcInstr."<init>":(Ljava/lang/String;Ljava/lang/String;)V
const #143 = Asciz	target;
const #144 = Asciz	elem;
const #145 = Asciz	(ILjava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/xml/NodeSeq;)Lscala/xml/NodeSeq;;
const #146 = Asciz	scala/xml/Elem;
const #147 = class	#146;	//  scala/xml/Elem
const #148 = Asciz	ignore;
const #149 = String	#148;	//  ignore
const #150 = Asciz	scala/xml/Null$;
const #151 = class	#150;	//  scala/xml/Null$
const #152 = Asciz	Lscala/xml/Null$;;
const #153 = NameAndType	#98:#152;//  MODULE$:Lscala/xml/Null$;
const #154 = Field	#151.#153;	//  scala/xml/Null$.MODULE$:Lscala/xml/Null$;
const #155 = Asciz	scala/package$;
const #156 = class	#155;	//  scala/package$
const #157 = Asciz	Lscala/package$;;
const #158 = NameAndType	#98:#157;//  MODULE$:Lscala/package$;
const #159 = Field	#156.#158;	//  scala/package$.MODULE$:Lscala/package$;
const #160 = Asciz	$scope;
const #161 = Asciz	()Lscala/xml/TopScope$;;
const #162 = NameAndType	#160:#161;//  $scope:()Lscala/xml/TopScope$;
const #163 = Method	#156.#162;	//  scala/package$.$scope:()Lscala/xml/TopScope$;
const #164 = Asciz	scala/xml/Node;
const #165 = class	#164;	//  scala/xml/Node
const #166 = Asciz	(Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Seq;)V;
const #167 = NameAndType	#27:#166;//  "<init>":(Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Seq;)V
const #168 = Method	#147.#167;	//  scala/xml/Elem."<init>":(Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Seq;)V
const #169 = Asciz	pre;
const #170 = Asciz	label;
const #171 = Asciz	attrs;
const #172 = Asciz	Lscala/xml/MetaData;;
const #173 = Asciz	pscope;
const #174 = Asciz	Lscala/xml/NamespaceBinding;;
const #175 = Asciz	nodes;
const #176 = Asciz	Lscala/xml/NodeSeq;;
const #177 = Asciz	elemEnd;
const #178 = Asciz	(ILjava/lang/String;Ljava/lang/String;)V;
const #179 = Asciz	scala/xml/pull/EvElemEnd;
const #180 = class	#179;	//  scala/xml/pull/EvElemEnd
const #181 = Method	#180.#141;	//  scala/xml/pull/EvElemEnd."<init>":(Ljava/lang/String;Ljava/lang/String;)V
const #182 = Asciz	elemStart;
const #183 = Asciz	(ILjava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;)V;
const #184 = Asciz	scala/xml/pull/EvElemStart;
const #185 = class	#184;	//  scala/xml/pull/EvElemStart
const #186 = Asciz	(Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;)V;
const #187 = NameAndType	#27:#186;//  "<init>":(Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;)V
const #188 = Method	#185.#187;	//  scala/xml/pull/EvElemStart."<init>":(Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;)V
const #189 = Asciz	scope;
const #190 = Asciz	scala/xml/pull/XMLEventReader$Parser$$anonfun$setEvent$1;
const #191 = class	#190;	//  scala/xml/pull/XMLEventReader$Parser$$anonfun$setEvent$1
const #192 = Method	#191.#88;	//  scala/xml/pull/XMLEventReader$Parser$$anonfun$setEvent$1."<init>":(Lscala/xml/pull/XMLEventReader$Parser;)V
const #193 = Asciz	scala/collection/IterableLike;
const #194 = class	#193;	//  scala/collection/IterableLike
const #195 = Asciz	foreach;
const #196 = Asciz	(Lscala/Function1;)V;
const #197 = NameAndType	#195:#196;//  foreach:(Lscala/Function1;)V
const #198 = InterfaceMethod	#194.#197;	//  scala/collection/IterableLike.foreach:(Lscala/Function1;)V
const #199 = Asciz	scala/xml/NodeSeq$;
const #200 = class	#199;	//  scala/xml/NodeSeq$
const #201 = Asciz	Lscala/xml/NodeSeq$;;
const #202 = NameAndType	#98:#201;//  MODULE$:Lscala/xml/NodeSeq$;
const #203 = Field	#200.#202;	//  scala/xml/NodeSeq$.MODULE$:Lscala/xml/NodeSeq$;
const #204 = Asciz	Empty;
const #205 = Asciz	()Lscala/xml/NodeSeq;;
const #206 = NameAndType	#204:#205;//  Empty:()Lscala/xml/NodeSeq;
const #207 = Method	#200.#206;	//  scala/xml/NodeSeq$.Empty:()Lscala/xml/NodeSeq;
const #208 = Asciz	es;
const #209 = Asciz	Lscala/collection/Seq;;
const #210 = Asciz	(Lscala/collection/Seq<Lscala/xml/pull/XMLEvent;>;)Lscala/xml/NodeSeq;;
const #211 = Asciz	Signature;
const #212 = Asciz	checkPubID;
const #213 = Asciz	(Ljava/lang/String;)Z;
const #214 = Asciz	(Lscala/xml/parsing/TokenTests;Ljava/lang/String;)Z;
const #215 = NameAndType	#212:#214;//  checkPubID:(Lscala/xml/parsing/TokenTests;Ljava/lang/String;)Z
const #216 = Method	#46.#215;	//  scala/xml/parsing/TokenTests$class.checkPubID:(Lscala/xml/parsing/TokenTests;Ljava/lang/String;)Z
const #217 = Asciz	s;
const #218 = Asciz	checkSysID;
const #219 = NameAndType	#218:#214;//  checkSysID:(Lscala/xml/parsing/TokenTests;Ljava/lang/String;)Z
const #220 = Method	#46.#219;	//  scala/xml/parsing/TokenTests$class.checkSysID:(Lscala/xml/parsing/TokenTests;Ljava/lang/String;)Z
const #221 = Asciz	isValidIANAEncoding;
const #222 = Asciz	(Lscala/collection/Seq;)Z;
const #223 = Asciz	(Lscala/xml/parsing/TokenTests;Lscala/collection/Seq;)Z;
const #224 = NameAndType	#221:#223;//  isValidIANAEncoding:(Lscala/xml/parsing/TokenTests;Lscala/collection/Seq;)Z
const #225 = Method	#46.#224;	//  scala/xml/parsing/TokenTests$class.isValidIANAEncoding:(Lscala/xml/parsing/TokenTests;Lscala/collection/Seq;)Z
const #226 = Asciz	ianaEncoding;
const #227 = Asciz	isPubIDChar;
const #228 = Asciz	(C)Z;
const #229 = Asciz	(Lscala/xml/parsing/TokenTests;C)Z;
const #230 = NameAndType	#227:#229;//  isPubIDChar:(Lscala/xml/parsing/TokenTests;C)Z
const #231 = Method	#46.#230;	//  scala/xml/parsing/TokenTests$class.isPubIDChar:(Lscala/xml/parsing/TokenTests;C)Z
const #232 = Asciz	isName;
const #233 = NameAndType	#232:#214;//  isName:(Lscala/xml/parsing/TokenTests;Ljava/lang/String;)Z
const #234 = Method	#46.#233;	//  scala/xml/parsing/TokenTests$class.isName:(Lscala/xml/parsing/TokenTests;Ljava/lang/String;)Z
const #235 = Asciz	isNameStart;
const #236 = NameAndType	#235:#229;//  isNameStart:(Lscala/xml/parsing/TokenTests;C)Z
const #237 = Method	#46.#236;	//  scala/xml/parsing/TokenTests$class.isNameStart:(Lscala/xml/parsing/TokenTests;C)Z
const #238 = Asciz	isNameChar;
const #239 = NameAndType	#238:#229;//  isNameChar:(Lscala/xml/parsing/TokenTests;C)Z
const #240 = Method	#46.#239;	//  scala/xml/parsing/TokenTests$class.isNameChar:(Lscala/xml/parsing/TokenTests;C)Z
const #241 = Asciz	isAlphaDigit;
const #242 = NameAndType	#241:#229;//  isAlphaDigit:(Lscala/xml/parsing/TokenTests;C)Z
const #243 = Method	#46.#242;	//  scala/xml/parsing/TokenTests$class.isAlphaDigit:(Lscala/xml/parsing/TokenTests;C)Z
const #244 = Asciz	c;
const #245 = Asciz	isAlpha;
const #246 = NameAndType	#245:#229;//  isAlpha:(Lscala/xml/parsing/TokenTests;C)Z
const #247 = Method	#46.#246;	//  scala/xml/parsing/TokenTests$class.isAlpha:(Lscala/xml/parsing/TokenTests;C)Z
const #248 = Asciz	isSpace;
const #249 = NameAndType	#248:#223;//  isSpace:(Lscala/xml/parsing/TokenTests;Lscala/collection/Seq;)Z
const #250 = Method	#46.#249;	//  scala/xml/parsing/TokenTests$class.isSpace:(Lscala/xml/parsing/TokenTests;Lscala/collection/Seq;)Z
const #251 = Asciz	cs;
const #252 = NameAndType	#248:#229;//  isSpace:(Lscala/xml/parsing/TokenTests;C)Z
const #253 = Method	#46.#252;	//  scala/xml/parsing/TokenTests$class.isSpace:(Lscala/xml/parsing/TokenTests;C)Z
const #254 = Asciz	normalizeAttributeValue;
const #255 = Asciz	(Ljava/lang/String;)Ljava/lang/String;;
const #256 = Asciz	(Lscala/xml/parsing/MarkupParser;Ljava/lang/String;)Ljava/lang/String;;
const #257 = NameAndType	#254:#256;//  normalizeAttributeValue:(Lscala/xml/parsing/MarkupParser;Ljava/lang/String;)Ljava/lang/String;
const #258 = Method	#52.#257;	//  scala/xml/parsing/MarkupParser$class.normalizeAttributeValue:(Lscala/xml/parsing/MarkupParser;Ljava/lang/String;)Ljava/lang/String;
const #259 = Asciz	attval;
const #260 = Asciz	pop;
const #261 = NameAndType	#260:#53;//  pop:(Lscala/xml/parsing/MarkupParser;)V
const #262 = Method	#52.#261;	//  scala/xml/parsing/MarkupParser$class.pop:(Lscala/xml/parsing/MarkupParser;)V
const #263 = Asciz	pushExternal;
const #264 = Asciz	(Lscala/xml/parsing/MarkupParser;Ljava/lang/String;)V;
const #265 = NameAndType	#263:#264;//  pushExternal:(Lscala/xml/parsing/MarkupParser;Ljava/lang/String;)V
const #266 = Method	#52.#265;	//  scala/xml/parsing/MarkupParser$class.pushExternal:(Lscala/xml/parsing/MarkupParser;Ljava/lang/String;)V
const #267 = Asciz	systemId;
const #268 = Asciz	push;
const #269 = NameAndType	#268:#264;//  push:(Lscala/xml/parsing/MarkupParser;Ljava/lang/String;)V
const #270 = Method	#52.#269;	//  scala/xml/parsing/MarkupParser$class.push:(Lscala/xml/parsing/MarkupParser;Ljava/lang/String;)V
const #271 = Asciz	entityName;
const #272 = Asciz	reportValidationError;
const #273 = Asciz	(ILjava/lang/String;)V;
const #274 = Asciz	(Lscala/xml/parsing/MarkupParser;ILjava/lang/String;)V;
const #275 = NameAndType	#272:#274;//  reportValidationError:(Lscala/xml/parsing/MarkupParser;ILjava/lang/String;)V
const #276 = Method	#52.#275;	//  scala/xml/parsing/MarkupParser$class.reportValidationError:(Lscala/xml/parsing/MarkupParser;ILjava/lang/String;)V
const #277 = Asciz	str;
const #278 = Asciz	reportSyntaxError;
const #279 = NameAndType	#278:#264;//  reportSyntaxError:(Lscala/xml/parsing/MarkupParser;Ljava/lang/String;)V
const #280 = Method	#52.#279;	//  scala/xml/parsing/MarkupParser$class.reportSyntaxError:(Lscala/xml/parsing/MarkupParser;Ljava/lang/String;)V
const #281 = NameAndType	#278:#274;//  reportSyntaxError:(Lscala/xml/parsing/MarkupParser;ILjava/lang/String;)V
const #282 = Method	#52.#281;	//  scala/xml/parsing/MarkupParser$class.reportSyntaxError:(Lscala/xml/parsing/MarkupParser;ILjava/lang/String;)V
const #283 = Asciz	notationDecl;
const #284 = NameAndType	#283:#53;//  notationDecl:(Lscala/xml/parsing/MarkupParser;)V
const #285 = Method	#52.#284;	//  scala/xml/parsing/MarkupParser$class.notationDecl:(Lscala/xml/parsing/MarkupParser;)V
const #286 = Asciz	entityDecl;
const #287 = NameAndType	#286:#53;//  entityDecl:(Lscala/xml/parsing/MarkupParser;)V
const #288 = Method	#52.#287;	//  scala/xml/parsing/MarkupParser$class.entityDecl:(Lscala/xml/parsing/MarkupParser;)V
const #289 = Asciz	attrDecl;
const #290 = NameAndType	#289:#53;//  attrDecl:(Lscala/xml/parsing/MarkupParser;)V
const #291 = Method	#52.#290;	//  scala/xml/parsing/MarkupParser$class.attrDecl:(Lscala/xml/parsing/MarkupParser;)V
const #292 = Asciz	elementDecl;
const #293 = NameAndType	#292:#53;//  elementDecl:(Lscala/xml/parsing/MarkupParser;)V
const #294 = Method	#52.#293;	//  scala/xml/parsing/MarkupParser$class.elementDecl:(Lscala/xml/parsing/MarkupParser;)V
const #295 = Asciz	intSubset;
const #296 = NameAndType	#295:#53;//  intSubset:(Lscala/xml/parsing/MarkupParser;)V
const #297 = Method	#52.#296;	//  scala/xml/parsing/MarkupParser$class.intSubset:(Lscala/xml/parsing/MarkupParser;)V
const #298 = Asciz	markupDecl;
const #299 = NameAndType	#298:#53;//  markupDecl:(Lscala/xml/parsing/MarkupParser;)V
const #300 = Method	#52.#299;	//  scala/xml/parsing/MarkupParser$class.markupDecl:(Lscala/xml/parsing/MarkupParser;)V
const #301 = Asciz	markupDecl1;
const #302 = Asciz	()Ljava/lang/Object;;
const #303 = Asciz	(Lscala/xml/parsing/MarkupParser;)Ljava/lang/Object;;
const #304 = NameAndType	#301:#303;//  markupDecl1:(Lscala/xml/parsing/MarkupParser;)Ljava/lang/Object;
const #305 = Method	#52.#304;	//  scala/xml/parsing/MarkupParser$class.markupDecl1:(Lscala/xml/parsing/MarkupParser;)Ljava/lang/Object;
const #306 = Asciz	extSubset;
const #307 = NameAndType	#306:#53;//  extSubset:(Lscala/xml/parsing/MarkupParser;)V
const #308 = Method	#52.#307;	//  scala/xml/parsing/MarkupParser$class.extSubset:(Lscala/xml/parsing/MarkupParser;)V
const #309 = Asciz	pubidLiteral;
const #310 = Asciz	()Ljava/lang/String;;
const #311 = Asciz	(Lscala/xml/parsing/MarkupParser;)Ljava/lang/String;;
const #312 = NameAndType	#309:#311;//  pubidLiteral:(Lscala/xml/parsing/MarkupParser;)Ljava/lang/String;
const #313 = Method	#52.#312;	//  scala/xml/parsing/MarkupParser$class.pubidLiteral:(Lscala/xml/parsing/MarkupParser;)Ljava/lang/String;
const #314 = Asciz	systemLiteral;
const #315 = NameAndType	#314:#311;//  systemLiteral:(Lscala/xml/parsing/MarkupParser;)Ljava/lang/String;
const #316 = Method	#52.#315;	//  scala/xml/parsing/MarkupParser$class.systemLiteral:(Lscala/xml/parsing/MarkupParser;)Ljava/lang/String;
const #317 = Asciz	xText;
const #318 = NameAndType	#317:#311;//  xText:(Lscala/xml/parsing/MarkupParser;)Ljava/lang/String;
const #319 = Method	#52.#318;	//  scala/xml/parsing/MarkupParser$class.xText:(Lscala/xml/parsing/MarkupParser;)Ljava/lang/String;
const #320 = Asciz	xProcInstr;
const #321 = Asciz	(Lscala/xml/parsing/MarkupParser;)Lscala/xml/NodeSeq;;
const #322 = NameAndType	#320:#321;//  xProcInstr:(Lscala/xml/parsing/MarkupParser;)Lscala/xml/NodeSeq;
const #323 = Method	#52.#322;	//  scala/xml/parsing/MarkupParser$class.xProcInstr:(Lscala/xml/parsing/MarkupParser;)Lscala/xml/NodeSeq;
const #324 = Asciz	xSpace;
const #325 = NameAndType	#324:#53;//  xSpace:(Lscala/xml/parsing/MarkupParser;)V
const #326 = Method	#52.#325;	//  scala/xml/parsing/MarkupParser$class.xSpace:(Lscala/xml/parsing/MarkupParser;)V
const #327 = Asciz	xSpaceOpt;
const #328 = NameAndType	#327:#53;//  xSpaceOpt:(Lscala/xml/parsing/MarkupParser;)V
const #329 = Method	#52.#328;	//  scala/xml/parsing/MarkupParser$class.xSpaceOpt:(Lscala/xml/parsing/MarkupParser;)V
const #330 = Asciz	xEQ;
const #331 = NameAndType	#330:#53;//  xEQ:(Lscala/xml/parsing/MarkupParser;)V
const #332 = Method	#52.#331;	//  scala/xml/parsing/MarkupParser$class.xEQ:(Lscala/xml/parsing/MarkupParser;)V
const #333 = Asciz	xName;
const #334 = NameAndType	#333:#311;//  xName:(Lscala/xml/parsing/MarkupParser;)Ljava/lang/String;
const #335 = Method	#52.#334;	//  scala/xml/parsing/MarkupParser$class.xName:(Lscala/xml/parsing/MarkupParser;)Ljava/lang/String;
const #336 = Asciz	element1;
const #337 = Asciz	(Lscala/xml/NamespaceBinding;)Lscala/xml/NodeSeq;;
const #338 = Asciz	(Lscala/xml/parsing/MarkupParser;Lscala/xml/NamespaceBinding;)Lscala/xml/NodeSeq;;
const #339 = NameAndType	#336:#338;//  element1:(Lscala/xml/parsing/MarkupParser;Lscala/xml/NamespaceBinding;)Lscala/xml/NodeSeq;
const #340 = Method	#52.#339;	//  scala/xml/parsing/MarkupParser$class.element1:(Lscala/xml/parsing/MarkupParser;Lscala/xml/NamespaceBinding;)Lscala/xml/NodeSeq;
const #341 = Asciz	element;
const #342 = NameAndType	#341:#338;//  element:(Lscala/xml/parsing/MarkupParser;Lscala/xml/NamespaceBinding;)Lscala/xml/NodeSeq;
const #343 = Method	#52.#342;	//  scala/xml/parsing/MarkupParser$class.element:(Lscala/xml/parsing/MarkupParser;Lscala/xml/NamespaceBinding;)Lscala/xml/NodeSeq;
const #344 = Asciz	parseDTD;
const #345 = NameAndType	#344:#53;//  parseDTD:(Lscala/xml/parsing/MarkupParser;)V
const #346 = Method	#52.#345;	//  scala/xml/parsing/MarkupParser$class.parseDTD:(Lscala/xml/parsing/MarkupParser;)V
const #347 = Asciz	externalID;
const #348 = Asciz	()Lscala/xml/dtd/ExternalID;;
const #349 = Asciz	(Lscala/xml/parsing/MarkupParser;)Lscala/xml/dtd/ExternalID;;
const #350 = NameAndType	#347:#349;//  externalID:(Lscala/xml/parsing/MarkupParser;)Lscala/xml/dtd/ExternalID;
const #351 = Method	#52.#350;	//  scala/xml/parsing/MarkupParser$class.externalID:(Lscala/xml/parsing/MarkupParser;)Lscala/xml/dtd/ExternalID;
const #352 = Asciz	content;
const #353 = NameAndType	#352:#338;//  content:(Lscala/xml/parsing/MarkupParser;Lscala/xml/NamespaceBinding;)Lscala/xml/NodeSeq;
const #354 = Method	#52.#353;	//  scala/xml/parsing/MarkupParser$class.content:(Lscala/xml/parsing/MarkupParser;Lscala/xml/NamespaceBinding;)Lscala/xml/NodeSeq;
const #355 = Asciz	content1;
const #356 = Asciz	(Lscala/xml/NamespaceBinding;Lscala/xml/NodeBuffer;)V;
const #357 = Asciz	(Lscala/xml/parsing/MarkupParser;Lscala/xml/NamespaceBinding;Lscala/xml/NodeBuffer;)V;
const #358 = NameAndType	#355:#357;//  content1:(Lscala/xml/parsing/MarkupParser;Lscala/xml/NamespaceBinding;Lscala/xml/NodeBuffer;)V
const #359 = Method	#52.#358;	//  scala/xml/parsing/MarkupParser$class.content1:(Lscala/xml/parsing/MarkupParser;Lscala/xml/NamespaceBinding;Lscala/xml/NodeBuffer;)V
const #360 = Asciz	ts;
const #361 = Asciz	Lscala/xml/NodeBuffer;;
const #362 = Asciz	appendText;
const #363 = Asciz	(ILscala/xml/NodeBuffer;Ljava/lang/String;)V;
const #364 = Asciz	(Lscala/xml/parsing/MarkupParser;ILscala/xml/NodeBuffer;Ljava/lang/String;)V;
const #365 = NameAndType	#362:#364;//  appendText:(Lscala/xml/parsing/MarkupParser;ILscala/xml/NodeBuffer;Ljava/lang/String;)V
const #366 = Method	#52.#365;	//  scala/xml/parsing/MarkupParser$class.appendText:(Lscala/xml/parsing/MarkupParser;ILscala/xml/NodeBuffer;Ljava/lang/String;)V
const #367 = Asciz	xComment;
const #368 = NameAndType	#367:#321;//  xComment:(Lscala/xml/parsing/MarkupParser;)Lscala/xml/NodeSeq;
const #369 = Method	#52.#368;	//  scala/xml/parsing/MarkupParser$class.xComment:(Lscala/xml/parsing/MarkupParser;)Lscala/xml/NodeSeq;
const #370 = Asciz	xCharRef;
const #371 = Asciz	(Lscala/Function0;Lscala/Function0;)Ljava/lang/String;;
const #372 = Asciz	(Lscala/xml/parsing/MarkupParser;Lscala/Function0;Lscala/Function0;)Ljava/lang/String;;
const #373 = NameAndType	#370:#372;//  xCharRef:(Lscala/xml/parsing/MarkupParser;Lscala/Function0;Lscala/Function0;)Ljava/lang/String;
const #374 = Method	#52.#373;	//  scala/xml/parsing/MarkupParser$class.xCharRef:(Lscala/xml/parsing/MarkupParser;Lscala/Function0;Lscala/Function0;)Ljava/lang/String;
const #375 = Asciz	Lscala/Function0;;
const #376 = Asciz	nextch;
const #377 = Asciz	xCharData;
const #378 = NameAndType	#377:#321;//  xCharData:(Lscala/xml/parsing/MarkupParser;)Lscala/xml/NodeSeq;
const #379 = Method	#52.#378;	//  scala/xml/parsing/MarkupParser$class.xCharData:(Lscala/xml/parsing/MarkupParser;)Lscala/xml/NodeSeq;
const #380 = Asciz	xEndTag;
const #381 = NameAndType	#380:#264;//  xEndTag:(Lscala/xml/parsing/MarkupParser;Ljava/lang/String;)V
const #382 = Method	#52.#381;	//  scala/xml/parsing/MarkupParser$class.xEndTag:(Lscala/xml/parsing/MarkupParser;Ljava/lang/String;)V
const #383 = Asciz	xTag;
const #384 = Asciz	(Lscala/xml/NamespaceBinding;)Lscala/Tuple3;;
const #385 = Asciz	(Lscala/xml/parsing/MarkupParser;Lscala/xml/NamespaceBinding;)Lscala/Tuple3;;
const #386 = NameAndType	#383:#385;//  xTag:(Lscala/xml/parsing/MarkupParser;Lscala/xml/NamespaceBinding;)Lscala/Tuple3;
const #387 = Method	#52.#386;	//  scala/xml/parsing/MarkupParser$class.xTag:(Lscala/xml/parsing/MarkupParser;Lscala/xml/NamespaceBinding;)Lscala/Tuple3;
const #388 = Asciz	xEntityValue;
const #389 = NameAndType	#388:#311;//  xEntityValue:(Lscala/xml/parsing/MarkupParser;)Ljava/lang/String;
const #390 = Method	#52.#389;	//  scala/xml/parsing/MarkupParser$class.xEntityValue:(Lscala/xml/parsing/MarkupParser;)Ljava/lang/String;
const #391 = Asciz	xAttributeValue;
const #392 = NameAndType	#391:#311;//  xAttributeValue:(Lscala/xml/parsing/MarkupParser;)Ljava/lang/String;
const #393 = Method	#52.#392;	//  scala/xml/parsing/MarkupParser$class.xAttributeValue:(Lscala/xml/parsing/MarkupParser;)Ljava/lang/String;
const #394 = Asciz	xAttributes;
const #395 = Asciz	(Lscala/xml/NamespaceBinding;)Lscala/Tuple2;;
const #396 = Asciz	(Lscala/xml/parsing/MarkupParser;Lscala/xml/NamespaceBinding;)Lscala/Tuple2;;
const #397 = NameAndType	#394:#396;//  xAttributes:(Lscala/xml/parsing/MarkupParser;Lscala/xml/NamespaceBinding;)Lscala/Tuple2;
const #398 = Method	#52.#397;	//  scala/xml/parsing/MarkupParser$class.xAttributes:(Lscala/xml/parsing/MarkupParser;Lscala/xml/NamespaceBinding;)Lscala/Tuple2;
const #399 = Asciz	xToken;
const #400 = Asciz	(Lscala/collection/Seq;)V;
const #401 = Asciz	(Lscala/xml/parsing/MarkupParser;Lscala/collection/Seq;)V;
const #402 = NameAndType	#399:#401;//  xToken:(Lscala/xml/parsing/MarkupParser;Lscala/collection/Seq;)V
const #403 = Method	#52.#402;	//  scala/xml/parsing/MarkupParser$class.xToken:(Lscala/xml/parsing/MarkupParser;Lscala/collection/Seq;)V
const #404 = Asciz	that;
const #405 = Asciz	(C)V;
const #406 = Asciz	(Lscala/xml/parsing/MarkupParser;C)V;
const #407 = NameAndType	#399:#406;//  xToken:(Lscala/xml/parsing/MarkupParser;C)V
const #408 = Method	#52.#407;	//  scala/xml/parsing/MarkupParser$class.xToken:(Lscala/xml/parsing/MarkupParser;C)V
const #409 = NameAndType	#376:#53;//  nextch:(Lscala/xml/parsing/MarkupParser;)V
const #410 = Method	#52.#409;	//  scala/xml/parsing/MarkupParser$class.nextch:(Lscala/xml/parsing/MarkupParser;)V
const #411 = Asciz	initialize;
const #412 = Asciz	()Lscala/xml/parsing/MarkupParser;;
const #413 = Asciz	(Lscala/xml/parsing/MarkupParser;)Lscala/xml/parsing/MarkupParser;;
const #414 = NameAndType	#411:#413;//  initialize:(Lscala/xml/parsing/MarkupParser;)Lscala/xml/parsing/MarkupParser;
const #415 = Method	#52.#414;	//  scala/xml/parsing/MarkupParser$class.initialize:(Lscala/xml/parsing/MarkupParser;)Lscala/xml/parsing/MarkupParser;
const #416 = Asciz	putChar;
const #417 = Asciz	(C)Lscala/collection/mutable/StringBuilder;;
const #418 = Asciz	(Lscala/xml/parsing/MarkupParser;C)Lscala/collection/mutable/StringBuilder;;
const #419 = NameAndType	#416:#418;//  putChar:(Lscala/xml/parsing/MarkupParser;C)Lscala/collection/mutable/StringBuilder;
const #420 = Method	#52.#419;	//  scala/xml/parsing/MarkupParser$class.putChar:(Lscala/xml/parsing/MarkupParser;C)Lscala/collection/mutable/StringBuilder;
const #421 = Asciz	document;
const #422 = Asciz	()Lscala/xml/Document;;
const #423 = Asciz	(Lscala/xml/parsing/MarkupParser;)Lscala/xml/Document;;
const #424 = NameAndType	#421:#423;//  document:(Lscala/xml/parsing/MarkupParser;)Lscala/xml/Document;
const #425 = Method	#52.#424;	//  scala/xml/parsing/MarkupParser$class.document:(Lscala/xml/parsing/MarkupParser;)Lscala/xml/Document;
const #426 = Asciz	textDecl;
const #427 = Asciz	()Lscala/Tuple2;;
const #428 = Asciz	(Lscala/xml/parsing/MarkupParser;)Lscala/Tuple2;;
const #429 = NameAndType	#426:#428;//  textDecl:(Lscala/xml/parsing/MarkupParser;)Lscala/Tuple2;
const #430 = Method	#52.#429;	//  scala/xml/parsing/MarkupParser$class.textDecl:(Lscala/xml/parsing/MarkupParser;)Lscala/Tuple2;
const #431 = Asciz	prolog;
const #432 = Asciz	()Lscala/Tuple3;;
const #433 = Asciz	(Lscala/xml/parsing/MarkupParser;)Lscala/Tuple3;;
const #434 = NameAndType	#431:#433;//  prolog:(Lscala/xml/parsing/MarkupParser;)Lscala/Tuple3;
const #435 = Method	#52.#434;	//  scala/xml/parsing/MarkupParser$class.prolog:(Lscala/xml/parsing/MarkupParser;)Lscala/Tuple3;
const #436 = Asciz	xmlProcInstr;
const #437 = Asciz	()Lscala/xml/MetaData;;
const #438 = Asciz	(Lscala/xml/parsing/MarkupParser;)Lscala/xml/MetaData;;
const #439 = NameAndType	#436:#438;//  xmlProcInstr:(Lscala/xml/parsing/MarkupParser;)Lscala/xml/MetaData;
const #440 = Method	#52.#439;	//  scala/xml/parsing/MarkupParser$class.xmlProcInstr:(Lscala/xml/parsing/MarkupParser;)Lscala/xml/MetaData;
const #441 = Asciz	scala$xml$parsing$MarkupParser$_setter_$cbuf_$eq;
const #442 = Asciz	(Lscala/collection/mutable/StringBuilder;)V;
const #443 = NameAndType	#9:#10;//  cbuf:Lscala/collection/mutable/StringBuilder;
const #444 = Field	#32.#443;	//  scala/xml/pull/XMLEventReader$Parser.cbuf:Lscala/collection/mutable/StringBuilder;
const #445 = Asciz	scala$xml$parsing$MarkupParser$_setter_$scala$xml$parsing$MarkupParser$$handle_$eq;
const #446 = Asciz	(Lscala/xml/parsing/MarkupHandler;)V;
const #447 = NameAndType	#19:#20;//  scala$xml$parsing$MarkupParser$$handle:Lscala/xml/parsing/MarkupHandler;
const #448 = Field	#32.#447;	//  scala/xml/pull/XMLEventReader$Parser.scala$xml$parsing$MarkupParser$$handle:Lscala/xml/parsing/MarkupHandler;
const #449 = Asciz	eof_$eq;
const #450 = Asciz	(Z)V;
const #451 = NameAndType	#3:#4;//  eof:Z
const #452 = Field	#32.#451;	//  scala/xml/pull/XMLEventReader$Parser.eof:Z
const #453 = Asciz	doc_$eq;
const #454 = Asciz	(Lscala/xml/Document;)V;
const #455 = NameAndType	#5:#6;//  doc:Lscala/xml/Document;
const #456 = Field	#32.#455;	//  scala/xml/pull/XMLEventReader$Parser.doc:Lscala/xml/Document;
const #457 = Asciz	dtd_$eq;
const #458 = Asciz	(Lscala/xml/dtd/DTD;)V;
const #459 = NameAndType	#7:#8;//  dtd:Lscala/xml/dtd/DTD;
const #460 = Field	#32.#459;	//  scala/xml/pull/XMLEventReader$Parser.dtd:Lscala/xml/dtd/DTD;
const #461 = Asciz	()Lscala/xml/dtd/DTD;;
const #462 = Asciz	()Lscala/collection/mutable/StringBuilder;;
const #463 = Asciz	ch_$eq;
const #464 = NameAndType	#11:#12;//  ch:C
const #465 = Field	#32.#464;	//  scala/xml/pull/XMLEventReader$Parser.ch:C
const #466 = Asciz	()C;
const #467 = Asciz	tmppos_$eq;
const #468 = Asciz	(I)V;
const #469 = NameAndType	#13:#14;//  tmppos:I
const #470 = Field	#32.#469;	//  scala/xml/pull/XMLEventReader$Parser.tmppos:I
const #471 = Asciz	()I;
const #472 = Asciz	extIndex_$eq;
const #473 = NameAndType	#15:#14;//  extIndex:I
const #474 = Field	#32.#473;	//  scala/xml/pull/XMLEventReader$Parser.extIndex:I
const #475 = Asciz	pos_$eq;
const #476 = NameAndType	#16:#14;//  pos:I
const #477 = Field	#32.#476;	//  scala/xml/pull/XMLEventReader$Parser.pos:I
const #478 = Asciz	inpStack_$eq;
const #479 = Asciz	(Lscala/collection/immutable/List;)V;
const #480 = NameAndType	#17:#18;//  inpStack:Lscala/collection/immutable/List;
const #481 = Field	#32.#480;	//  scala/xml/pull/XMLEventReader$Parser.inpStack:Lscala/collection/immutable/List;
const #482 = Asciz	()Lscala/collection/immutable/List;;
const #483 = Asciz	()Lscala/xml/parsing/MarkupHandler;;
const #484 = NameAndType	#21:#22;//  curInput:Lscala/io/Source;
const #485 = Field	#32.#484;	//  scala/xml/pull/XMLEventReader$Parser.curInput:Lscala/io/Source;
const #486 = Asciz	externalSource;
const #487 = Asciz	(Ljava/lang/String;)Lscala/io/Source;;
const #488 = Asciz	(Lscala/xml/parsing/ExternalSources;Ljava/lang/String;)Lscala/io/Source;;
const #489 = NameAndType	#486:#488;//  externalSource:(Lscala/xml/parsing/ExternalSources;Ljava/lang/String;)Lscala/io/Source;
const #490 = Method	#57.#489;	//  scala/xml/parsing/ExternalSources$class.externalSource:(Lscala/xml/parsing/ExternalSources;Ljava/lang/String;)Lscala/io/Source;
const #491 = Asciz	Scala;
const #492 = Asciz	InnerClasses;
const #493 = Asciz	Parser;
const #494 = Asciz	$anonfun$run$1;
const #495 = Asciz	$anonfun$setEvent$1;
const #496 = Asciz	scala/xml/parsing/ExternalSources;
const #497 = class	#496;	//  scala/xml/parsing/ExternalSources
const #498 = Asciz	java/lang/Runnable;
const #499 = class	#498;	//  java/lang/Runnable
const #500 = Asciz	scala/ScalaObject;
const #501 = class	#500;	//  scala/ScalaObject

{
public final scala.xml.pull.XMLEventReader $outer;

public scala.xml.pull.XMLEventReader$Parser(scala.xml.pull.XMLEventReader, scala.io.Source);
  Code:
   Stack=2, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_2
   2:	putfield	#34; //Field input:Lscala/io/Source;
   5:	aload_1
   6:	ifnonnull	17
   9:	new	#36; //class java/lang/NullPointerException
   12:	dup
   13:	invokespecial	#39; //Method java/lang/NullPointerException."<init>":()V
   16:	athrow
   17:	aload_0
   18:	aload_1
   19:	putfield	#41; //Field $outer:Lscala/xml/pull/XMLEventReader;
   22:	aload_0
   23:	invokespecial	#44; //Method scala/xml/parsing/MarkupHandler."<init>":()V
   26:	aload_0
   27:	invokestatic	#50; //Method scala/xml/parsing/TokenTests$class.$init$:(Lscala/xml/parsing/TokenTests;)V
   30:	aload_0
   31:	invokestatic	#55; //Method scala/xml/parsing/MarkupParser$class.$init$:(Lscala/xml/parsing/MarkupParser;)V
   34:	aload_0
   35:	invokestatic	#60; //Method scala/xml/parsing/ExternalSources$class.$init$:(Lscala/xml/parsing/ExternalSources;)V
   38:	aload_0
   39:	aload_1
   40:	invokevirtual	#65; //Method scala/xml/pull/XMLEventReader.preserveWS:()Z
   43:	putfield	#67; //Field preserveWS:Z
   46:	return
  LineNumberTable: 
   line 73: 0
   line 74: 38

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      47      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      47      1    $outer       Lscala/xml/pull/XMLEventReader;
   0      47      2    input       Lscala/io/Source;


public scala.xml.pull.XMLEventReader scala$xml$pull$XMLEventReader$Parser$$$outer();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#41; //Field $outer:Lscala/xml/pull/XMLEventReader;
   4:	areturn
  LineNumberTable: 
   line 73: 0


public void run();
  Code:
   Stack=6, Locals=1, Args_size=1
   0:	aload_0
   1:	aload_0
   2:	invokevirtual	#76; //Method input:()Lscala/io/Source;
   5:	invokeinterface	#82,  2; //InterfaceMethod scala/xml/parsing/MarkupParser.curInput_$eq:(Lscala/io/Source;)V
   10:	aload_0
   11:	invokevirtual	#84; //Method scala$xml$pull$XMLEventReader$Parser$$$outer:()Lscala/xml/pull/XMLEventReader;
   14:	new	#86; //class scala/xml/pull/XMLEventReader$Parser$$anonfun$run$1
   17:	dup
   18:	aload_0
   19:	invokespecial	#89; //Method scala/xml/pull/XMLEventReader$Parser$$anonfun$run$1."<init>":(Lscala/xml/pull/XMLEventReader$Parser;)V
   22:	invokeinterface	#95,  2; //InterfaceMethod scala/xml/pull/ProducerConsumerIterator.interruptibly:(Lscala/Function0;)Lscala/Option;
   27:	pop
   28:	aload_0
   29:	getstatic	#101; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   32:	iconst_1
   33:	anewarray	#103; //class scala/xml/pull/XMLEvent
   36:	dup
   37:	iconst_0
   38:	aload_0
   39:	invokevirtual	#84; //Method scala$xml$pull$XMLEventReader$Parser$$$outer:()Lscala/xml/pull/XMLEventReader;
   42:	invokevirtual	#107; //Method scala/xml/pull/XMLEventReader.POISON:()Lscala/xml/pull/XMLEventReader$POISON$;
   45:	aastore
   46:	checkcast	#109; //class "[Ljava/lang/Object;"
   49:	invokevirtual	#113; //Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
   52:	invokevirtual	#117; //Method setEvent:(Lscala/collection/Seq;)Lscala/xml/NodeSeq;
   55:	pop
   56:	return
  LineNumberTable: 
   line 99: 0
   line 100: 10
   line 101: 28


public scala.xml.NodeSeq text(int, java.lang.String);
  Code:
   Stack=8, Locals=3, Args_size=3
   0:	aload_0
   1:	getstatic	#101; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   4:	iconst_1
   5:	anewarray	#103; //class scala/xml/pull/XMLEvent
   8:	dup
   9:	iconst_0
   10:	new	#121; //class scala/xml/pull/EvText
   13:	dup
   14:	aload_2
   15:	invokespecial	#124; //Method scala/xml/pull/EvText."<init>":(Ljava/lang/String;)V
   18:	aastore
   19:	checkcast	#109; //class "[Ljava/lang/Object;"
   22:	invokevirtual	#113; //Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
   25:	invokevirtual	#117; //Method setEvent:(Lscala/collection/Seq;)Lscala/xml/NodeSeq;
   28:	areturn
  LineNumberTable: 
   line 96: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      29      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      29      1    pos       I
   0      29      2    txt       Ljava/lang/String;


public scala.xml.NodeSeq entityRef(int, java.lang.String);
  Code:
   Stack=8, Locals=3, Args_size=3
   0:	aload_0
   1:	getstatic	#101; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   4:	iconst_1
   5:	anewarray	#103; //class scala/xml/pull/XMLEvent
   8:	dup
   9:	iconst_0
   10:	new	#129; //class scala/xml/pull/EvEntityRef
   13:	dup
   14:	aload_2
   15:	invokespecial	#130; //Method scala/xml/pull/EvEntityRef."<init>":(Ljava/lang/String;)V
   18:	aastore
   19:	checkcast	#109; //class "[Ljava/lang/Object;"
   22:	invokevirtual	#113; //Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
   25:	invokevirtual	#117; //Method setEvent:(Lscala/collection/Seq;)Lscala/xml/NodeSeq;
   28:	areturn
  LineNumberTable: 
   line 95: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      29      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      29      1    pos       I
   0      29      2    n       Ljava/lang/String;


public scala.xml.NodeSeq comment(int, java.lang.String);
  Code:
   Stack=8, Locals=3, Args_size=3
   0:	aload_0
   1:	getstatic	#101; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   4:	iconst_1
   5:	anewarray	#103; //class scala/xml/pull/XMLEvent
   8:	dup
   9:	iconst_0
   10:	new	#134; //class scala/xml/pull/EvComment
   13:	dup
   14:	aload_2
   15:	invokespecial	#135; //Method scala/xml/pull/EvComment."<init>":(Ljava/lang/String;)V
   18:	aastore
   19:	checkcast	#109; //class "[Ljava/lang/Object;"
   22:	invokevirtual	#113; //Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
   25:	invokevirtual	#117; //Method setEvent:(Lscala/collection/Seq;)Lscala/xml/NodeSeq;
   28:	areturn
  LineNumberTable: 
   line 94: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      29      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      29      1    pos       I
   0      29      2    txt       Ljava/lang/String;


public scala.xml.NodeSeq procInstr(int, java.lang.String, java.lang.String);
  Code:
   Stack=9, Locals=4, Args_size=4
   0:	aload_0
   1:	getstatic	#101; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   4:	iconst_1
   5:	anewarray	#103; //class scala/xml/pull/XMLEvent
   8:	dup
   9:	iconst_0
   10:	new	#139; //class scala/xml/pull/EvProcInstr
   13:	dup
   14:	aload_2
   15:	aload_3
   16:	invokespecial	#142; //Method scala/xml/pull/EvProcInstr."<init>":(Ljava/lang/String;Ljava/lang/String;)V
   19:	aastore
   20:	checkcast	#109; //class "[Ljava/lang/Object;"
   23:	invokevirtual	#113; //Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
   26:	invokevirtual	#117; //Method setEvent:(Lscala/collection/Seq;)Lscala/xml/NodeSeq;
   29:	areturn
  LineNumberTable: 
   line 93: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      30      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      30      1    pos       I
   0      30      2    target       Ljava/lang/String;
   0      30      3    txt       Ljava/lang/String;


public final scala.xml.NodeSeq elem(int, java.lang.String, java.lang.String, scala.xml.MetaData, scala.xml.NamespaceBinding, scala.xml.NodeSeq);
  Code:
   Stack=8, Locals=7, Args_size=7
   0:	new	#147; //class scala/xml/Elem
   3:	dup
   4:	aconst_null
   5:	ldc	#149; //String ignore
   7:	getstatic	#154; //Field scala/xml/Null$.MODULE$:Lscala/xml/Null$;
   10:	getstatic	#159; //Field scala/package$.MODULE$:Lscala/package$;
   13:	invokevirtual	#163; //Method scala/package$.$scope:()Lscala/xml/TopScope$;
   16:	getstatic	#101; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   19:	iconst_0
   20:	anewarray	#165; //class scala/xml/Node
   23:	checkcast	#109; //class "[Ljava/lang/Object;"
   26:	invokevirtual	#113; //Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
   29:	invokespecial	#168; //Method scala/xml/Elem."<init>":(Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Seq;)V
   32:	areturn
  LineNumberTable: 
   line 91: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      33      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      33      1    pos       I
   0      33      2    pre       Ljava/lang/String;
   0      33      3    label       Ljava/lang/String;
   0      33      4    attrs       Lscala/xml/MetaData;
   0      33      5    pscope       Lscala/xml/NamespaceBinding;
   0      33      6    nodes       Lscala/xml/NodeSeq;


public void elemEnd(int, java.lang.String, java.lang.String);
  Code:
   Stack=9, Locals=4, Args_size=4
   0:	aload_0
   1:	getstatic	#101; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   4:	iconst_1
   5:	anewarray	#103; //class scala/xml/pull/XMLEvent
   8:	dup
   9:	iconst_0
   10:	new	#180; //class scala/xml/pull/EvElemEnd
   13:	dup
   14:	aload_2
   15:	aload_3
   16:	invokespecial	#181; //Method scala/xml/pull/EvElemEnd."<init>":(Ljava/lang/String;Ljava/lang/String;)V
   19:	aastore
   20:	checkcast	#109; //class "[Ljava/lang/Object;"
   23:	invokevirtual	#113; //Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
   26:	invokevirtual	#117; //Method setEvent:(Lscala/collection/Seq;)Lscala/xml/NodeSeq;
   29:	pop
   30:	return
  LineNumberTable: 
   line 87: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      31      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      31      1    pos       I
   0      31      2    pre       Ljava/lang/String;
   0      31      3    label       Ljava/lang/String;


public void elemStart(int, java.lang.String, java.lang.String, scala.xml.MetaData, scala.xml.NamespaceBinding);
  Code:
   Stack=11, Locals=6, Args_size=6
   0:	aload_0
   1:	getstatic	#101; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   4:	iconst_1
   5:	anewarray	#103; //class scala/xml/pull/XMLEvent
   8:	dup
   9:	iconst_0
   10:	new	#185; //class scala/xml/pull/EvElemStart
   13:	dup
   14:	aload_2
   15:	aload_3
   16:	aload	4
   18:	aload	5
   20:	invokespecial	#188; //Method scala/xml/pull/EvElemStart."<init>":(Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;)V
   23:	aastore
   24:	checkcast	#109; //class "[Ljava/lang/Object;"
   27:	invokevirtual	#113; //Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
   30:	invokevirtual	#117; //Method setEvent:(Lscala/collection/Seq;)Lscala/xml/NodeSeq;
   33:	pop
   34:	return
  LineNumberTable: 
   line 84: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      35      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      35      1    pos       I
   0      35      2    pre       Ljava/lang/String;
   0      35      3    label       Ljava/lang/String;
   0      35      4    attrs       Lscala/xml/MetaData;
   0      35      5    scope       Lscala/xml/NamespaceBinding;


public scala.xml.NodeSeq setEvent(scala.collection.Seq);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	aload_1
   1:	new	#191; //class scala/xml/pull/XMLEventReader$Parser$$anonfun$setEvent$1
   4:	dup
   5:	aload_0
   6:	invokespecial	#192; //Method scala/xml/pull/XMLEventReader$Parser$$anonfun$setEvent$1."<init>":(Lscala/xml/pull/XMLEventReader$Parser;)V
   9:	invokeinterface	#198,  2; //InterfaceMethod scala/collection/IterableLike.foreach:(Lscala/Function1;)V
   14:	getstatic	#203; //Field scala/xml/NodeSeq$.MODULE$:Lscala/xml/NodeSeq$;
   17:	invokevirtual	#207; //Method scala/xml/NodeSeq$.Empty:()Lscala/xml/NodeSeq;
   20:	areturn
  LineNumberTable: 
   line 79: 0
   line 80: 14

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      21      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      21      1    es       Lscala/collection/Seq;

  Signature: length = 0x2
   00 FFFFFFD2 

public boolean preserveWS();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#67; //Field preserveWS:Z
   4:	ireturn
  LineNumberTable: 
   line 74: 0


public scala.io.Source input();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#34; //Field input:Lscala/io/Source;
   4:	areturn
  LineNumberTable: 
   line 73: 0


public boolean checkPubID(java.lang.String);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#216; //Method scala/xml/parsing/TokenTests$class.checkPubID:(Lscala/xml/parsing/TokenTests;Ljava/lang/String;)Z
   5:	ireturn
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      6      1    s       Ljava/lang/String;


public boolean checkSysID(java.lang.String);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#220; //Method scala/xml/parsing/TokenTests$class.checkSysID:(Lscala/xml/parsing/TokenTests;Ljava/lang/String;)Z
   5:	ireturn
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      6      1    s       Ljava/lang/String;


public boolean isValidIANAEncoding(scala.collection.Seq);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#225; //Method scala/xml/parsing/TokenTests$class.isValidIANAEncoding:(Lscala/xml/parsing/TokenTests;Lscala/collection/Seq;)Z
   5:	ireturn
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      6      1    ianaEncoding       Lscala/collection/Seq;


public boolean isPubIDChar(char);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	invokestatic	#231; //Method scala/xml/parsing/TokenTests$class.isPubIDChar:(Lscala/xml/parsing/TokenTests;C)Z
   5:	ireturn
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      6      1    ch       C


public boolean isName(java.lang.String);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#234; //Method scala/xml/parsing/TokenTests$class.isName:(Lscala/xml/parsing/TokenTests;Ljava/lang/String;)Z
   5:	ireturn
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      6      1    s       Ljava/lang/String;


public boolean isNameStart(char);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	invokestatic	#237; //Method scala/xml/parsing/TokenTests$class.isNameStart:(Lscala/xml/parsing/TokenTests;C)Z
   5:	ireturn
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      6      1    ch       C


public boolean isNameChar(char);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	invokestatic	#240; //Method scala/xml/parsing/TokenTests$class.isNameChar:(Lscala/xml/parsing/TokenTests;C)Z
   5:	ireturn
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      6      1    ch       C


public boolean isAlphaDigit(char);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	invokestatic	#243; //Method scala/xml/parsing/TokenTests$class.isAlphaDigit:(Lscala/xml/parsing/TokenTests;C)Z
   5:	ireturn
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      6      1    c       C


public boolean isAlpha(char);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	invokestatic	#247; //Method scala/xml/parsing/TokenTests$class.isAlpha:(Lscala/xml/parsing/TokenTests;C)Z
   5:	ireturn
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      6      1    c       C


public final boolean isSpace(scala.collection.Seq);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#250; //Method scala/xml/parsing/TokenTests$class.isSpace:(Lscala/xml/parsing/TokenTests;Lscala/collection/Seq;)Z
   5:	ireturn
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      6      1    cs       Lscala/collection/Seq;


public final boolean isSpace(char);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	invokestatic	#253; //Method scala/xml/parsing/TokenTests$class.isSpace:(Lscala/xml/parsing/TokenTests;C)Z
   5:	ireturn
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      6      1    ch       C


public java.lang.String normalizeAttributeValue(java.lang.String);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#258; //Method scala/xml/parsing/MarkupParser$class.normalizeAttributeValue:(Lscala/xml/parsing/MarkupParser;Ljava/lang/String;)Ljava/lang/String;
   5:	areturn
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      6      1    attval       Ljava/lang/String;


public void pop();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#262; //Method scala/xml/parsing/MarkupParser$class.pop:(Lscala/xml/parsing/MarkupParser;)V
   4:	return
  LineNumberTable: 
   line 73: 0


public void pushExternal(java.lang.String);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#266; //Method scala/xml/parsing/MarkupParser$class.pushExternal:(Lscala/xml/parsing/MarkupParser;Ljava/lang/String;)V
   5:	return
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      6      1    systemId       Ljava/lang/String;


public void push(java.lang.String);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#270; //Method scala/xml/parsing/MarkupParser$class.push:(Lscala/xml/parsing/MarkupParser;Ljava/lang/String;)V
   5:	return
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      6      1    entityName       Ljava/lang/String;


public void reportValidationError(int, java.lang.String);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	iload_1
   2:	aload_2
   3:	invokestatic	#276; //Method scala/xml/parsing/MarkupParser$class.reportValidationError:(Lscala/xml/parsing/MarkupParser;ILjava/lang/String;)V
   6:	return
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      7      1    pos       I
   0      7      2    str       Ljava/lang/String;


public void reportSyntaxError(java.lang.String);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#280; //Method scala/xml/parsing/MarkupParser$class.reportSyntaxError:(Lscala/xml/parsing/MarkupParser;Ljava/lang/String;)V
   5:	return
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      6      1    str       Ljava/lang/String;


public void reportSyntaxError(int, java.lang.String);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	iload_1
   2:	aload_2
   3:	invokestatic	#282; //Method scala/xml/parsing/MarkupParser$class.reportSyntaxError:(Lscala/xml/parsing/MarkupParser;ILjava/lang/String;)V
   6:	return
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      7      1    pos       I
   0      7      2    str       Ljava/lang/String;


public void notationDecl();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#285; //Method scala/xml/parsing/MarkupParser$class.notationDecl:(Lscala/xml/parsing/MarkupParser;)V
   4:	return
  LineNumberTable: 
   line 73: 0


public void entityDecl();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#288; //Method scala/xml/parsing/MarkupParser$class.entityDecl:(Lscala/xml/parsing/MarkupParser;)V
   4:	return
  LineNumberTable: 
   line 73: 0


public void attrDecl();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#291; //Method scala/xml/parsing/MarkupParser$class.attrDecl:(Lscala/xml/parsing/MarkupParser;)V
   4:	return
  LineNumberTable: 
   line 73: 0


public void elementDecl();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#294; //Method scala/xml/parsing/MarkupParser$class.elementDecl:(Lscala/xml/parsing/MarkupParser;)V
   4:	return
  LineNumberTable: 
   line 73: 0


public void intSubset();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#297; //Method scala/xml/parsing/MarkupParser$class.intSubset:(Lscala/xml/parsing/MarkupParser;)V
   4:	return
  LineNumberTable: 
   line 73: 0


public void markupDecl();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#300; //Method scala/xml/parsing/MarkupParser$class.markupDecl:(Lscala/xml/parsing/MarkupParser;)V
   4:	return
  LineNumberTable: 
   line 73: 0


public java.lang.Object markupDecl1();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#305; //Method scala/xml/parsing/MarkupParser$class.markupDecl1:(Lscala/xml/parsing/MarkupParser;)Ljava/lang/Object;
   4:	areturn
  LineNumberTable: 
   line 73: 0


public void extSubset();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#308; //Method scala/xml/parsing/MarkupParser$class.extSubset:(Lscala/xml/parsing/MarkupParser;)V
   4:	return
  LineNumberTable: 
   line 73: 0


public java.lang.String pubidLiteral();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#313; //Method scala/xml/parsing/MarkupParser$class.pubidLiteral:(Lscala/xml/parsing/MarkupParser;)Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 73: 0


public java.lang.String systemLiteral();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#316; //Method scala/xml/parsing/MarkupParser$class.systemLiteral:(Lscala/xml/parsing/MarkupParser;)Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 73: 0


public java.lang.String xText();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#319; //Method scala/xml/parsing/MarkupParser$class.xText:(Lscala/xml/parsing/MarkupParser;)Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 73: 0


public scala.xml.NodeSeq xProcInstr();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#323; //Method scala/xml/parsing/MarkupParser$class.xProcInstr:(Lscala/xml/parsing/MarkupParser;)Lscala/xml/NodeSeq;
   4:	areturn
  LineNumberTable: 
   line 73: 0


public void xSpace();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#326; //Method scala/xml/parsing/MarkupParser$class.xSpace:(Lscala/xml/parsing/MarkupParser;)V
   4:	return
  LineNumberTable: 
   line 73: 0


public void xSpaceOpt();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#329; //Method scala/xml/parsing/MarkupParser$class.xSpaceOpt:(Lscala/xml/parsing/MarkupParser;)V
   4:	return
  LineNumberTable: 
   line 73: 0


public void xEQ();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#332; //Method scala/xml/parsing/MarkupParser$class.xEQ:(Lscala/xml/parsing/MarkupParser;)V
   4:	return
  LineNumberTable: 
   line 73: 0


public java.lang.String xName();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#335; //Method scala/xml/parsing/MarkupParser$class.xName:(Lscala/xml/parsing/MarkupParser;)Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 73: 0


public scala.xml.NodeSeq element1(scala.xml.NamespaceBinding);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#340; //Method scala/xml/parsing/MarkupParser$class.element1:(Lscala/xml/parsing/MarkupParser;Lscala/xml/NamespaceBinding;)Lscala/xml/NodeSeq;
   5:	areturn
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      6      1    pscope       Lscala/xml/NamespaceBinding;


public scala.xml.NodeSeq element(scala.xml.NamespaceBinding);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#343; //Method scala/xml/parsing/MarkupParser$class.element:(Lscala/xml/parsing/MarkupParser;Lscala/xml/NamespaceBinding;)Lscala/xml/NodeSeq;
   5:	areturn
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      6      1    pscope       Lscala/xml/NamespaceBinding;


public void parseDTD();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#346; //Method scala/xml/parsing/MarkupParser$class.parseDTD:(Lscala/xml/parsing/MarkupParser;)V
   4:	return
  LineNumberTable: 
   line 73: 0


public scala.xml.dtd.ExternalID externalID();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#351; //Method scala/xml/parsing/MarkupParser$class.externalID:(Lscala/xml/parsing/MarkupParser;)Lscala/xml/dtd/ExternalID;
   4:	areturn
  LineNumberTable: 
   line 73: 0


public scala.xml.NodeSeq content(scala.xml.NamespaceBinding);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#354; //Method scala/xml/parsing/MarkupParser$class.content:(Lscala/xml/parsing/MarkupParser;Lscala/xml/NamespaceBinding;)Lscala/xml/NodeSeq;
   5:	areturn
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      6      1    pscope       Lscala/xml/NamespaceBinding;


public void content1(scala.xml.NamespaceBinding, scala.xml.NodeBuffer);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#359; //Method scala/xml/parsing/MarkupParser$class.content1:(Lscala/xml/parsing/MarkupParser;Lscala/xml/NamespaceBinding;Lscala/xml/NodeBuffer;)V
   6:	return
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      7      1    pscope       Lscala/xml/NamespaceBinding;
   0      7      2    ts       Lscala/xml/NodeBuffer;


public void appendText(int, scala.xml.NodeBuffer, java.lang.String);
  Code:
   Stack=4, Locals=4, Args_size=4
   0:	aload_0
   1:	iload_1
   2:	aload_2
   3:	aload_3
   4:	invokestatic	#366; //Method scala/xml/parsing/MarkupParser$class.appendText:(Lscala/xml/parsing/MarkupParser;ILscala/xml/NodeBuffer;Ljava/lang/String;)V
   7:	return
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      8      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      8      1    pos       I
   0      8      2    ts       Lscala/xml/NodeBuffer;
   0      8      3    txt       Ljava/lang/String;


public scala.xml.NodeSeq xComment();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#369; //Method scala/xml/parsing/MarkupParser$class.xComment:(Lscala/xml/parsing/MarkupParser;)Lscala/xml/NodeSeq;
   4:	areturn
  LineNumberTable: 
   line 73: 0


public java.lang.String xCharRef(scala.Function0, scala.Function0);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#374; //Method scala/xml/parsing/MarkupParser$class.xCharRef:(Lscala/xml/parsing/MarkupParser;Lscala/Function0;Lscala/Function0;)Ljava/lang/String;
   6:	areturn
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      7      1    ch       Lscala/Function0;
   0      7      2    nextch       Lscala/Function0;


public scala.xml.NodeSeq xCharData();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#379; //Method scala/xml/parsing/MarkupParser$class.xCharData:(Lscala/xml/parsing/MarkupParser;)Lscala/xml/NodeSeq;
   4:	areturn
  LineNumberTable: 
   line 73: 0


public void xEndTag(java.lang.String);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#382; //Method scala/xml/parsing/MarkupParser$class.xEndTag:(Lscala/xml/parsing/MarkupParser;Ljava/lang/String;)V
   5:	return
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      6      1    n       Ljava/lang/String;


public scala.Tuple3 xTag(scala.xml.NamespaceBinding);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#387; //Method scala/xml/parsing/MarkupParser$class.xTag:(Lscala/xml/parsing/MarkupParser;Lscala/xml/NamespaceBinding;)Lscala/Tuple3;
   5:	areturn
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      6      1    pscope       Lscala/xml/NamespaceBinding;


public java.lang.String xEntityValue();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#390; //Method scala/xml/parsing/MarkupParser$class.xEntityValue:(Lscala/xml/parsing/MarkupParser;)Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 73: 0


public java.lang.String xAttributeValue();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#393; //Method scala/xml/parsing/MarkupParser$class.xAttributeValue:(Lscala/xml/parsing/MarkupParser;)Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 73: 0


public scala.Tuple2 xAttributes(scala.xml.NamespaceBinding);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#398; //Method scala/xml/parsing/MarkupParser$class.xAttributes:(Lscala/xml/parsing/MarkupParser;Lscala/xml/NamespaceBinding;)Lscala/Tuple2;
   5:	areturn
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      6      1    pscope       Lscala/xml/NamespaceBinding;


public void xToken(scala.collection.Seq);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#403; //Method scala/xml/parsing/MarkupParser$class.xToken:(Lscala/xml/parsing/MarkupParser;Lscala/collection/Seq;)V
   5:	return
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      6      1    that       Lscala/collection/Seq;


public void xToken(char);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	invokestatic	#408; //Method scala/xml/parsing/MarkupParser$class.xToken:(Lscala/xml/parsing/MarkupParser;C)V
   5:	return
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      6      1    that       C


public void nextch();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#410; //Method scala/xml/parsing/MarkupParser$class.nextch:(Lscala/xml/parsing/MarkupParser;)V
   4:	return
  LineNumberTable: 
   line 73: 0


public scala.xml.parsing.MarkupParser initialize();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#415; //Method scala/xml/parsing/MarkupParser$class.initialize:(Lscala/xml/parsing/MarkupParser;)Lscala/xml/parsing/MarkupParser;
   4:	areturn
  LineNumberTable: 
   line 73: 0


public scala.collection.mutable.StringBuilder putChar(char);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	invokestatic	#420; //Method scala/xml/parsing/MarkupParser$class.putChar:(Lscala/xml/parsing/MarkupParser;C)Lscala/collection/mutable/StringBuilder;
   5:	areturn
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      6      1    c       C


public scala.xml.Document document();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#425; //Method scala/xml/parsing/MarkupParser$class.document:(Lscala/xml/parsing/MarkupParser;)Lscala/xml/Document;
   4:	areturn
  LineNumberTable: 
   line 73: 0


public scala.Tuple2 textDecl();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#430; //Method scala/xml/parsing/MarkupParser$class.textDecl:(Lscala/xml/parsing/MarkupParser;)Lscala/Tuple2;
   4:	areturn
  LineNumberTable: 
   line 73: 0


public scala.Tuple3 prolog();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#435; //Method scala/xml/parsing/MarkupParser$class.prolog:(Lscala/xml/parsing/MarkupParser;)Lscala/Tuple3;
   4:	areturn
  LineNumberTable: 
   line 73: 0


public scala.xml.MetaData xmlProcInstr();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#440; //Method scala/xml/parsing/MarkupParser$class.xmlProcInstr:(Lscala/xml/parsing/MarkupParser;)Lscala/xml/MetaData;
   4:	areturn
  LineNumberTable: 
   line 73: 0


public void scala$xml$parsing$MarkupParser$_setter_$cbuf_$eq(scala.collection.mutable.StringBuilder);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	putfield	#444; //Field cbuf:Lscala/collection/mutable/StringBuilder;
   5:	return
  LineNumberTable: 
   line 73: 0


public void scala$xml$parsing$MarkupParser$_setter_$scala$xml$parsing$MarkupParser$$handle_$eq(scala.xml.parsing.MarkupHandler);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	putfield	#448; //Field scala$xml$parsing$MarkupParser$$handle:Lscala/xml/parsing/MarkupHandler;
   5:	return
  LineNumberTable: 
   line 73: 0


public void eof_$eq(boolean);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	putfield	#452; //Field eof:Z
   5:	return
  LineNumberTable: 
   line 73: 0


public boolean eof();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#452; //Field eof:Z
   4:	ireturn
  LineNumberTable: 
   line 73: 0


public void doc_$eq(scala.xml.Document);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	putfield	#456; //Field doc:Lscala/xml/Document;
   5:	return
  LineNumberTable: 
   line 73: 0


public scala.xml.Document doc();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#456; //Field doc:Lscala/xml/Document;
   4:	areturn
  LineNumberTable: 
   line 73: 0


public void dtd_$eq(scala.xml.dtd.DTD);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	putfield	#460; //Field dtd:Lscala/xml/dtd/DTD;
   5:	return
  LineNumberTable: 
   line 73: 0


public scala.xml.dtd.DTD dtd();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#460; //Field dtd:Lscala/xml/dtd/DTD;
   4:	areturn
  LineNumberTable: 
   line 73: 0


public scala.collection.mutable.StringBuilder cbuf();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#444; //Field cbuf:Lscala/collection/mutable/StringBuilder;
   4:	areturn
  LineNumberTable: 
   line 73: 0


public void ch_$eq(char);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	putfield	#465; //Field ch:C
   5:	return
  LineNumberTable: 
   line 73: 0


public char ch();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#465; //Field ch:C
   4:	ireturn
  LineNumberTable: 
   line 73: 0


public void tmppos_$eq(int);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	putfield	#470; //Field tmppos:I
   5:	return
  LineNumberTable: 
   line 73: 0


public int tmppos();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#470; //Field tmppos:I
   4:	ireturn
  LineNumberTable: 
   line 73: 0


public void extIndex_$eq(int);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	putfield	#474; //Field extIndex:I
   5:	return
  LineNumberTable: 
   line 73: 0


public int extIndex();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#474; //Field extIndex:I
   4:	ireturn
  LineNumberTable: 
   line 73: 0


public void pos_$eq(int);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	putfield	#477; //Field pos:I
   5:	return
  LineNumberTable: 
   line 73: 0


public int pos();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#477; //Field pos:I
   4:	ireturn
  LineNumberTable: 
   line 73: 0


public void inpStack_$eq(scala.collection.immutable.List);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	putfield	#481; //Field inpStack:Lscala/collection/immutable/List;
   5:	return
  LineNumberTable: 
   line 73: 0


public scala.collection.immutable.List inpStack();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#481; //Field inpStack:Lscala/collection/immutable/List;
   4:	areturn
  LineNumberTable: 
   line 73: 0


public final scala.xml.parsing.MarkupHandler scala$xml$parsing$MarkupParser$$handle();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#448; //Field scala$xml$parsing$MarkupParser$$handle:Lscala/xml/parsing/MarkupHandler;
   4:	areturn
  LineNumberTable: 
   line 73: 0


public void curInput_$eq(scala.io.Source);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	putfield	#485; //Field curInput:Lscala/io/Source;
   5:	return
  LineNumberTable: 
   line 73: 0


public scala.io.Source curInput();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#485; //Field curInput:Lscala/io/Source;
   4:	areturn
  LineNumberTable: 
   line 73: 0


public scala.io.Source externalSource(java.lang.String);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#490; //Method scala/xml/parsing/ExternalSources$class.externalSource:(Lscala/xml/parsing/ExternalSources;Ljava/lang/String;)Lscala/io/Source;
   5:	areturn
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      6      1    systemId       Ljava/lang/String;


}

