Compiled from "XMLEventReader.scala"
public class scala.xml.pull.XMLEventReader$Parser extends scala.xml.parsing.MarkupHandler implements scala.xml.parsing.MarkupParser,scala.xml.parsing.ExternalSources,java.lang.Runnable,scala.ScalaObject
  SourceFile: "XMLEventReader.scala"
  Scala: length = 0x
   
  InnerClass: 
   public #480= #32 of #62; //Parser=class scala/xml/pull/XMLEventReader$Parser of class scala/xml/pull/XMLEventReader
   public final #481= #86 of #32; //$anonfun$run$1=class scala/xml/pull/XMLEventReader$Parser$$anonfun$run$1 of class scala/xml/pull/XMLEventReader$Parser
   public final #482= #189 of #32; //$anonfun$setEvent$1=class scala/xml/pull/XMLEventReader$Parser$$anonfun$setEvent$1 of class scala/xml/pull/XMLEventReader$Parser
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	XMLEventReader.scala;
const #3 = Asciz	eof;
const #4 = Asciz	Z;
const #5 = Asciz	doc;
const #6 = Asciz	Lscala/xml/Document;;
const #7 = Asciz	dtd;
const #8 = Asciz	Lscala/xml/dtd/DTD;;
const #9 = Asciz	cbuf;
const #10 = Asciz	Lscala/collection/mutable/StringBuilder;;
const #11 = Asciz	ch;
const #12 = Asciz	C;
const #13 = Asciz	tmppos;
const #14 = Asciz	I;
const #15 = Asciz	extIndex;
const #16 = Asciz	pos;
const #17 = Asciz	inpStack;
const #18 = Asciz	Lscala/collection/immutable/List;;
const #19 = Asciz	scala$xml$parsing$MarkupParser$$handle;
const #20 = Asciz	Lscala/xml/parsing/MarkupHandler;;
const #21 = Asciz	curInput;
const #22 = Asciz	Lscala/io/Source;;
const #23 = Asciz	$outer;
const #24 = Asciz	Lscala/xml/pull/XMLEventReader;;
const #25 = Asciz	preserveWS;
const #26 = Asciz	input;
const #27 = Asciz	<init>;
const #28 = Asciz	(Lscala/xml/pull/XMLEventReader;Lscala/io/Source;)V;
const #29 = Asciz	Code;
const #30 = Asciz	LineNumberTable;
const #31 = Asciz	scala/xml/pull/XMLEventReader$Parser;
const #32 = class	#31;	//  scala/xml/pull/XMLEventReader$Parser
const #33 = NameAndType	#26:#22;//  input:Lscala/io/Source;
const #34 = Field	#32.#33;	//  scala/xml/pull/XMLEventReader$Parser.input:Lscala/io/Source;
const #35 = Asciz	java/lang/NullPointerException;
const #36 = class	#35;	//  java/lang/NullPointerException
const #37 = Asciz	()V;
const #38 = NameAndType	#27:#37;//  "<init>":()V
const #39 = Method	#36.#38;	//  java/lang/NullPointerException."<init>":()V
const #40 = NameAndType	#23:#24;//  $outer:Lscala/xml/pull/XMLEventReader;
const #41 = Field	#32.#40;	//  scala/xml/pull/XMLEventReader$Parser.$outer:Lscala/xml/pull/XMLEventReader;
const #42 = Asciz	scala/xml/parsing/MarkupHandler;
const #43 = class	#42;	//  scala/xml/parsing/MarkupHandler
const #44 = Method	#43.#38;	//  scala/xml/parsing/MarkupHandler."<init>":()V
const #45 = Asciz	scala/xml/parsing/TokenTests$class;
const #46 = class	#45;	//  scala/xml/parsing/TokenTests$class
const #47 = Asciz	$init$;
const #48 = Asciz	(Lscala/xml/parsing/TokenTests;)V;
const #49 = NameAndType	#47:#48;//  $init$:(Lscala/xml/parsing/TokenTests;)V
const #50 = Method	#46.#49;	//  scala/xml/parsing/TokenTests$class.$init$:(Lscala/xml/parsing/TokenTests;)V
const #51 = Asciz	scala/xml/parsing/MarkupParser$class;
const #52 = class	#51;	//  scala/xml/parsing/MarkupParser$class
const #53 = Asciz	(Lscala/xml/parsing/MarkupParser;)V;
const #54 = NameAndType	#47:#53;//  $init$:(Lscala/xml/parsing/MarkupParser;)V
const #55 = Method	#52.#54;	//  scala/xml/parsing/MarkupParser$class.$init$:(Lscala/xml/parsing/MarkupParser;)V
const #56 = Asciz	scala/xml/parsing/ExternalSources$class;
const #57 = class	#56;	//  scala/xml/parsing/ExternalSources$class
const #58 = Asciz	(Lscala/xml/parsing/ExternalSources;)V;
const #59 = NameAndType	#47:#58;//  $init$:(Lscala/xml/parsing/ExternalSources;)V
const #60 = Method	#57.#59;	//  scala/xml/parsing/ExternalSources$class.$init$:(Lscala/xml/parsing/ExternalSources;)V
const #61 = Asciz	scala/xml/pull/XMLEventReader;
const #62 = class	#61;	//  scala/xml/pull/XMLEventReader
const #63 = Asciz	()Z;
const #64 = NameAndType	#25:#63;//  preserveWS:()Z
const #65 = Method	#62.#64;	//  scala/xml/pull/XMLEventReader.preserveWS:()Z
const #66 = NameAndType	#25:#4;//  preserveWS:Z
const #67 = Field	#32.#66;	//  scala/xml/pull/XMLEventReader$Parser.preserveWS:Z
const #68 = Asciz	this;
const #69 = Asciz	Lscala/xml/pull/XMLEventReader$Parser;;
const #70 = Asciz	LocalVariableTable;
const #71 = Asciz	scala$xml$pull$XMLEventReader$Parser$$$outer;
const #72 = Asciz	()Lscala/xml/pull/XMLEventReader;;
const #73 = Asciz	run;
const #74 = Asciz	()Lscala/io/Source;;
const #75 = NameAndType	#26:#74;//  input:()Lscala/io/Source;
const #76 = Method	#32.#75;	//  scala/xml/pull/XMLEventReader$Parser.input:()Lscala/io/Source;
const #77 = Asciz	scala/xml/parsing/MarkupParser;
const #78 = class	#77;	//  scala/xml/parsing/MarkupParser
const #79 = Asciz	curInput_$eq;
const #80 = Asciz	(Lscala/io/Source;)V;
const #81 = NameAndType	#79:#80;//  curInput_$eq:(Lscala/io/Source;)V
const #82 = InterfaceMethod	#78.#81;	//  scala/xml/parsing/MarkupParser.curInput_$eq:(Lscala/io/Source;)V
const #83 = NameAndType	#71:#72;//  scala$xml$pull$XMLEventReader$Parser$$$outer:()Lscala/xml/pull/XMLEventReader;
const #84 = Method	#32.#83;	//  scala/xml/pull/XMLEventReader$Parser.scala$xml$pull$XMLEventReader$Parser$$$outer:()Lscala/xml/pull/XMLEventReader;
const #85 = Asciz	scala/xml/pull/XMLEventReader$Parser$$anonfun$run$1;
const #86 = class	#85;	//  scala/xml/pull/XMLEventReader$Parser$$anonfun$run$1
const #87 = Asciz	(Lscala/xml/pull/XMLEventReader$Parser;)V;
const #88 = NameAndType	#27:#87;//  "<init>":(Lscala/xml/pull/XMLEventReader$Parser;)V
const #89 = Method	#86.#88;	//  scala/xml/pull/XMLEventReader$Parser$$anonfun$run$1."<init>":(Lscala/xml/pull/XMLEventReader$Parser;)V
const #90 = Asciz	scala/xml/pull/ProducerConsumerIterator;
const #91 = class	#90;	//  scala/xml/pull/ProducerConsumerIterator
const #92 = Asciz	interruptibly;
const #93 = Asciz	(Lscala/Function0;)Lscala/Option;;
const #94 = NameAndType	#92:#93;//  interruptibly:(Lscala/Function0;)Lscala/Option;
const #95 = InterfaceMethod	#91.#94;	//  scala/xml/pull/ProducerConsumerIterator.interruptibly:(Lscala/Function0;)Lscala/Option;
const #96 = Asciz	scala/runtime/ScalaRunTime$;
const #97 = class	#96;	//  scala/runtime/ScalaRunTime$
const #98 = Asciz	MODULE$;
const #99 = Asciz	Lscala/runtime/ScalaRunTime$;;
const #100 = NameAndType	#98:#99;//  MODULE$:Lscala/runtime/ScalaRunTime$;
const #101 = Field	#97.#100;	//  scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
const #102 = Asciz	scala/xml/pull/XMLEvent;
const #103 = class	#102;	//  scala/xml/pull/XMLEvent
const #104 = Asciz	POISON;
const #105 = Asciz	()Lscala/xml/pull/XMLEventReader$POISON$;;
const #106 = NameAndType	#104:#105;//  POISON:()Lscala/xml/pull/XMLEventReader$POISON$;
const #107 = Method	#62.#106;	//  scala/xml/pull/XMLEventReader.POISON:()Lscala/xml/pull/XMLEventReader$POISON$;
const #108 = Asciz	boxArray;
const #109 = Asciz	(Ljava/lang/Object;)Lscala/runtime/BoxedArray;;
const #110 = NameAndType	#108:#109;//  boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
const #111 = Method	#97.#110;	//  scala/runtime/ScalaRunTime$.boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
const #112 = Asciz	setEvent;
const #113 = Asciz	(Lscala/collection/Sequence;)Lscala/xml/NodeSeq;;
const #114 = NameAndType	#112:#113;//  setEvent:(Lscala/collection/Sequence;)Lscala/xml/NodeSeq;
const #115 = Method	#32.#114;	//  scala/xml/pull/XMLEventReader$Parser.setEvent:(Lscala/collection/Sequence;)Lscala/xml/NodeSeq;
const #116 = Asciz	text;
const #117 = Asciz	(ILjava/lang/String;)Lscala/xml/NodeSeq;;
const #118 = Asciz	scala/xml/pull/EvText;
const #119 = class	#118;	//  scala/xml/pull/EvText
const #120 = Asciz	(Ljava/lang/String;)V;
const #121 = NameAndType	#27:#120;//  "<init>":(Ljava/lang/String;)V
const #122 = Method	#119.#121;	//  scala/xml/pull/EvText."<init>":(Ljava/lang/String;)V
const #123 = Asciz	txt;
const #124 = Asciz	Ljava/lang/String;;
const #125 = Asciz	entityRef;
const #126 = Asciz	scala/xml/pull/EvEntityRef;
const #127 = class	#126;	//  scala/xml/pull/EvEntityRef
const #128 = Method	#127.#121;	//  scala/xml/pull/EvEntityRef."<init>":(Ljava/lang/String;)V
const #129 = Asciz	n;
const #130 = Asciz	comment;
const #131 = Asciz	scala/xml/pull/EvComment;
const #132 = class	#131;	//  scala/xml/pull/EvComment
const #133 = Method	#132.#121;	//  scala/xml/pull/EvComment."<init>":(Ljava/lang/String;)V
const #134 = Asciz	procInstr;
const #135 = Asciz	(ILjava/lang/String;Ljava/lang/String;)Lscala/xml/NodeSeq;;
const #136 = Asciz	scala/xml/pull/EvProcInstr;
const #137 = class	#136;	//  scala/xml/pull/EvProcInstr
const #138 = Asciz	(Ljava/lang/String;Ljava/lang/String;)V;
const #139 = NameAndType	#27:#138;//  "<init>":(Ljava/lang/String;Ljava/lang/String;)V
const #140 = Method	#137.#139;	//  scala/xml/pull/EvProcInstr."<init>":(Ljava/lang/String;Ljava/lang/String;)V
const #141 = Asciz	target;
const #142 = Asciz	elem;
const #143 = Asciz	(ILjava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/xml/NodeSeq;)Lscala/xml/NodeSeq;;
const #144 = Asciz	scala/xml/Elem;
const #145 = class	#144;	//  scala/xml/Elem
const #146 = Asciz	ignore;
const #147 = String	#146;	//  ignore
const #148 = Asciz	scala/xml/Null$;
const #149 = class	#148;	//  scala/xml/Null$
const #150 = Asciz	Lscala/xml/Null$;;
const #151 = NameAndType	#98:#150;//  MODULE$:Lscala/xml/Null$;
const #152 = Field	#149.#151;	//  scala/xml/Null$.MODULE$:Lscala/xml/Null$;
const #153 = Asciz	scala/Predef$;
const #154 = class	#153;	//  scala/Predef$
const #155 = Asciz	Lscala/Predef$;;
const #156 = NameAndType	#98:#155;//  MODULE$:Lscala/Predef$;
const #157 = Field	#154.#156;	//  scala/Predef$.MODULE$:Lscala/Predef$;
const #158 = Asciz	$scope;
const #159 = Asciz	()Lscala/xml/TopScope$;;
const #160 = NameAndType	#158:#159;//  $scope:()Lscala/xml/TopScope$;
const #161 = Method	#154.#160;	//  scala/Predef$.$scope:()Lscala/xml/TopScope$;
const #162 = Asciz	scala/xml/Node;
const #163 = class	#162;	//  scala/xml/Node
const #164 = Asciz	(Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Sequence;)V;
const #165 = NameAndType	#27:#164;//  "<init>":(Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Sequence;)V
const #166 = Method	#145.#165;	//  scala/xml/Elem."<init>":(Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Sequence;)V
const #167 = Asciz	pre;
const #168 = Asciz	label;
const #169 = Asciz	attrs;
const #170 = Asciz	Lscala/xml/MetaData;;
const #171 = Asciz	pscope;
const #172 = Asciz	Lscala/xml/NamespaceBinding;;
const #173 = Asciz	nodes;
const #174 = Asciz	Lscala/xml/NodeSeq;;
const #175 = Asciz	elemEnd;
const #176 = Asciz	(ILjava/lang/String;Ljava/lang/String;)V;
const #177 = Asciz	scala/xml/pull/EvElemEnd;
const #178 = class	#177;	//  scala/xml/pull/EvElemEnd
const #179 = Method	#178.#139;	//  scala/xml/pull/EvElemEnd."<init>":(Ljava/lang/String;Ljava/lang/String;)V
const #180 = Asciz	elemStart;
const #181 = Asciz	(ILjava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;)V;
const #182 = Asciz	scala/xml/pull/EvElemStart;
const #183 = class	#182;	//  scala/xml/pull/EvElemStart
const #184 = Asciz	(Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;)V;
const #185 = NameAndType	#27:#184;//  "<init>":(Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;)V
const #186 = Method	#183.#185;	//  scala/xml/pull/EvElemStart."<init>":(Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;)V
const #187 = Asciz	scope;
const #188 = Asciz	scala/xml/pull/XMLEventReader$Parser$$anonfun$setEvent$1;
const #189 = class	#188;	//  scala/xml/pull/XMLEventReader$Parser$$anonfun$setEvent$1
const #190 = Method	#189.#88;	//  scala/xml/pull/XMLEventReader$Parser$$anonfun$setEvent$1."<init>":(Lscala/xml/pull/XMLEventReader$Parser;)V
const #191 = Asciz	scala/collection/generic/IterableTemplate;
const #192 = class	#191;	//  scala/collection/generic/IterableTemplate
const #193 = Asciz	foreach;
const #194 = Asciz	(Lscala/Function1;)V;
const #195 = NameAndType	#193:#194;//  foreach:(Lscala/Function1;)V
const #196 = InterfaceMethod	#192.#195;	//  scala/collection/generic/IterableTemplate.foreach:(Lscala/Function1;)V
const #197 = Asciz	scala/xml/NodeSeq$;
const #198 = class	#197;	//  scala/xml/NodeSeq$
const #199 = Asciz	Lscala/xml/NodeSeq$;;
const #200 = NameAndType	#98:#199;//  MODULE$:Lscala/xml/NodeSeq$;
const #201 = Field	#198.#200;	//  scala/xml/NodeSeq$.MODULE$:Lscala/xml/NodeSeq$;
const #202 = Asciz	Empty;
const #203 = Asciz	()Lscala/xml/NodeSeq;;
const #204 = NameAndType	#202:#203;//  Empty:()Lscala/xml/NodeSeq;
const #205 = Method	#198.#204;	//  scala/xml/NodeSeq$.Empty:()Lscala/xml/NodeSeq;
const #206 = Asciz	es;
const #207 = Asciz	Lscala/collection/Sequence;;
const #208 = Asciz	(Lscala/collection/Sequence<Lscala/xml/pull/XMLEvent;>;)Lscala/xml/NodeSeq;;
const #209 = Asciz	Signature;
const #210 = Asciz	checkPubID;
const #211 = Asciz	(Ljava/lang/String;)Z;
const #212 = Asciz	(Lscala/xml/parsing/TokenTests;Ljava/lang/String;)Z;
const #213 = NameAndType	#210:#212;//  checkPubID:(Lscala/xml/parsing/TokenTests;Ljava/lang/String;)Z
const #214 = Method	#46.#213;	//  scala/xml/parsing/TokenTests$class.checkPubID:(Lscala/xml/parsing/TokenTests;Ljava/lang/String;)Z
const #215 = Asciz	s;
const #216 = Asciz	checkSysID;
const #217 = NameAndType	#216:#212;//  checkSysID:(Lscala/xml/parsing/TokenTests;Ljava/lang/String;)Z
const #218 = Method	#46.#217;	//  scala/xml/parsing/TokenTests$class.checkSysID:(Lscala/xml/parsing/TokenTests;Ljava/lang/String;)Z
const #219 = Asciz	isValidIANAEncoding;
const #220 = Asciz	(Lscala/collection/Sequence;)Z;
const #221 = Asciz	(Lscala/xml/parsing/TokenTests;Lscala/collection/Sequence;)Z;
const #222 = NameAndType	#219:#221;//  isValidIANAEncoding:(Lscala/xml/parsing/TokenTests;Lscala/collection/Sequence;)Z
const #223 = Method	#46.#222;	//  scala/xml/parsing/TokenTests$class.isValidIANAEncoding:(Lscala/xml/parsing/TokenTests;Lscala/collection/Sequence;)Z
const #224 = Asciz	ianaEncoding;
const #225 = Asciz	isPubIDChar;
const #226 = Asciz	(C)Z;
const #227 = Asciz	(Lscala/xml/parsing/TokenTests;C)Z;
const #228 = NameAndType	#225:#227;//  isPubIDChar:(Lscala/xml/parsing/TokenTests;C)Z
const #229 = Method	#46.#228;	//  scala/xml/parsing/TokenTests$class.isPubIDChar:(Lscala/xml/parsing/TokenTests;C)Z
const #230 = Asciz	isName;
const #231 = NameAndType	#230:#212;//  isName:(Lscala/xml/parsing/TokenTests;Ljava/lang/String;)Z
const #232 = Method	#46.#231;	//  scala/xml/parsing/TokenTests$class.isName:(Lscala/xml/parsing/TokenTests;Ljava/lang/String;)Z
const #233 = Asciz	isNameStart;
const #234 = NameAndType	#233:#227;//  isNameStart:(Lscala/xml/parsing/TokenTests;C)Z
const #235 = Method	#46.#234;	//  scala/xml/parsing/TokenTests$class.isNameStart:(Lscala/xml/parsing/TokenTests;C)Z
const #236 = Asciz	isNameChar;
const #237 = NameAndType	#236:#227;//  isNameChar:(Lscala/xml/parsing/TokenTests;C)Z
const #238 = Method	#46.#237;	//  scala/xml/parsing/TokenTests$class.isNameChar:(Lscala/xml/parsing/TokenTests;C)Z
const #239 = Asciz	isSpace;
const #240 = NameAndType	#239:#221;//  isSpace:(Lscala/xml/parsing/TokenTests;Lscala/collection/Sequence;)Z
const #241 = Method	#46.#240;	//  scala/xml/parsing/TokenTests$class.isSpace:(Lscala/xml/parsing/TokenTests;Lscala/collection/Sequence;)Z
const #242 = Asciz	cs;
const #243 = NameAndType	#239:#227;//  isSpace:(Lscala/xml/parsing/TokenTests;C)Z
const #244 = Method	#46.#243;	//  scala/xml/parsing/TokenTests$class.isSpace:(Lscala/xml/parsing/TokenTests;C)Z
const #245 = Asciz	normalizeAttributeValue;
const #246 = Asciz	(Ljava/lang/String;)Ljava/lang/String;;
const #247 = Asciz	(Lscala/xml/parsing/MarkupParser;Ljava/lang/String;)Ljava/lang/String;;
const #248 = NameAndType	#245:#247;//  normalizeAttributeValue:(Lscala/xml/parsing/MarkupParser;Ljava/lang/String;)Ljava/lang/String;
const #249 = Method	#52.#248;	//  scala/xml/parsing/MarkupParser$class.normalizeAttributeValue:(Lscala/xml/parsing/MarkupParser;Ljava/lang/String;)Ljava/lang/String;
const #250 = Asciz	attval;
const #251 = Asciz	pop;
const #252 = NameAndType	#251:#53;//  pop:(Lscala/xml/parsing/MarkupParser;)V
const #253 = Method	#52.#252;	//  scala/xml/parsing/MarkupParser$class.pop:(Lscala/xml/parsing/MarkupParser;)V
const #254 = Asciz	pushExternal;
const #255 = Asciz	(Lscala/xml/parsing/MarkupParser;Ljava/lang/String;)V;
const #256 = NameAndType	#254:#255;//  pushExternal:(Lscala/xml/parsing/MarkupParser;Ljava/lang/String;)V
const #257 = Method	#52.#256;	//  scala/xml/parsing/MarkupParser$class.pushExternal:(Lscala/xml/parsing/MarkupParser;Ljava/lang/String;)V
const #258 = Asciz	systemId;
const #259 = Asciz	push;
const #260 = NameAndType	#259:#255;//  push:(Lscala/xml/parsing/MarkupParser;Ljava/lang/String;)V
const #261 = Method	#52.#260;	//  scala/xml/parsing/MarkupParser$class.push:(Lscala/xml/parsing/MarkupParser;Ljava/lang/String;)V
const #262 = Asciz	entityName;
const #263 = Asciz	reportValidationError;
const #264 = Asciz	(ILjava/lang/String;)V;
const #265 = Asciz	(Lscala/xml/parsing/MarkupParser;ILjava/lang/String;)V;
const #266 = NameAndType	#263:#265;//  reportValidationError:(Lscala/xml/parsing/MarkupParser;ILjava/lang/String;)V
const #267 = Method	#52.#266;	//  scala/xml/parsing/MarkupParser$class.reportValidationError:(Lscala/xml/parsing/MarkupParser;ILjava/lang/String;)V
const #268 = Asciz	str;
const #269 = Asciz	reportSyntaxError;
const #270 = NameAndType	#269:#255;//  reportSyntaxError:(Lscala/xml/parsing/MarkupParser;Ljava/lang/String;)V
const #271 = Method	#52.#270;	//  scala/xml/parsing/MarkupParser$class.reportSyntaxError:(Lscala/xml/parsing/MarkupParser;Ljava/lang/String;)V
const #272 = NameAndType	#269:#265;//  reportSyntaxError:(Lscala/xml/parsing/MarkupParser;ILjava/lang/String;)V
const #273 = Method	#52.#272;	//  scala/xml/parsing/MarkupParser$class.reportSyntaxError:(Lscala/xml/parsing/MarkupParser;ILjava/lang/String;)V
const #274 = Asciz	notationDecl;
const #275 = NameAndType	#274:#53;//  notationDecl:(Lscala/xml/parsing/MarkupParser;)V
const #276 = Method	#52.#275;	//  scala/xml/parsing/MarkupParser$class.notationDecl:(Lscala/xml/parsing/MarkupParser;)V
const #277 = Asciz	entityDecl;
const #278 = NameAndType	#277:#53;//  entityDecl:(Lscala/xml/parsing/MarkupParser;)V
const #279 = Method	#52.#278;	//  scala/xml/parsing/MarkupParser$class.entityDecl:(Lscala/xml/parsing/MarkupParser;)V
const #280 = Asciz	attrDecl;
const #281 = NameAndType	#280:#53;//  attrDecl:(Lscala/xml/parsing/MarkupParser;)V
const #282 = Method	#52.#281;	//  scala/xml/parsing/MarkupParser$class.attrDecl:(Lscala/xml/parsing/MarkupParser;)V
const #283 = Asciz	elementDecl;
const #284 = NameAndType	#283:#53;//  elementDecl:(Lscala/xml/parsing/MarkupParser;)V
const #285 = Method	#52.#284;	//  scala/xml/parsing/MarkupParser$class.elementDecl:(Lscala/xml/parsing/MarkupParser;)V
const #286 = Asciz	intSubset;
const #287 = NameAndType	#286:#53;//  intSubset:(Lscala/xml/parsing/MarkupParser;)V
const #288 = Method	#52.#287;	//  scala/xml/parsing/MarkupParser$class.intSubset:(Lscala/xml/parsing/MarkupParser;)V
const #289 = Asciz	markupDecl;
const #290 = NameAndType	#289:#53;//  markupDecl:(Lscala/xml/parsing/MarkupParser;)V
const #291 = Method	#52.#290;	//  scala/xml/parsing/MarkupParser$class.markupDecl:(Lscala/xml/parsing/MarkupParser;)V
const #292 = Asciz	markupDecl1;
const #293 = Asciz	()Ljava/lang/Object;;
const #294 = Asciz	(Lscala/xml/parsing/MarkupParser;)Ljava/lang/Object;;
const #295 = NameAndType	#292:#294;//  markupDecl1:(Lscala/xml/parsing/MarkupParser;)Ljava/lang/Object;
const #296 = Method	#52.#295;	//  scala/xml/parsing/MarkupParser$class.markupDecl1:(Lscala/xml/parsing/MarkupParser;)Ljava/lang/Object;
const #297 = Asciz	extSubset;
const #298 = NameAndType	#297:#53;//  extSubset:(Lscala/xml/parsing/MarkupParser;)V
const #299 = Method	#52.#298;	//  scala/xml/parsing/MarkupParser$class.extSubset:(Lscala/xml/parsing/MarkupParser;)V
const #300 = Asciz	pubidLiteral;
const #301 = Asciz	()Ljava/lang/String;;
const #302 = Asciz	(Lscala/xml/parsing/MarkupParser;)Ljava/lang/String;;
const #303 = NameAndType	#300:#302;//  pubidLiteral:(Lscala/xml/parsing/MarkupParser;)Ljava/lang/String;
const #304 = Method	#52.#303;	//  scala/xml/parsing/MarkupParser$class.pubidLiteral:(Lscala/xml/parsing/MarkupParser;)Ljava/lang/String;
const #305 = Asciz	systemLiteral;
const #306 = NameAndType	#305:#302;//  systemLiteral:(Lscala/xml/parsing/MarkupParser;)Ljava/lang/String;
const #307 = Method	#52.#306;	//  scala/xml/parsing/MarkupParser$class.systemLiteral:(Lscala/xml/parsing/MarkupParser;)Ljava/lang/String;
const #308 = Asciz	xText;
const #309 = NameAndType	#308:#302;//  xText:(Lscala/xml/parsing/MarkupParser;)Ljava/lang/String;
const #310 = Method	#52.#309;	//  scala/xml/parsing/MarkupParser$class.xText:(Lscala/xml/parsing/MarkupParser;)Ljava/lang/String;
const #311 = Asciz	xProcInstr;
const #312 = Asciz	(Lscala/xml/parsing/MarkupParser;)Lscala/xml/NodeSeq;;
const #313 = NameAndType	#311:#312;//  xProcInstr:(Lscala/xml/parsing/MarkupParser;)Lscala/xml/NodeSeq;
const #314 = Method	#52.#313;	//  scala/xml/parsing/MarkupParser$class.xProcInstr:(Lscala/xml/parsing/MarkupParser;)Lscala/xml/NodeSeq;
const #315 = Asciz	xSpace;
const #316 = NameAndType	#315:#53;//  xSpace:(Lscala/xml/parsing/MarkupParser;)V
const #317 = Method	#52.#316;	//  scala/xml/parsing/MarkupParser$class.xSpace:(Lscala/xml/parsing/MarkupParser;)V
const #318 = Asciz	xSpaceOpt;
const #319 = NameAndType	#318:#53;//  xSpaceOpt:(Lscala/xml/parsing/MarkupParser;)V
const #320 = Method	#52.#319;	//  scala/xml/parsing/MarkupParser$class.xSpaceOpt:(Lscala/xml/parsing/MarkupParser;)V
const #321 = Asciz	xEQ;
const #322 = NameAndType	#321:#53;//  xEQ:(Lscala/xml/parsing/MarkupParser;)V
const #323 = Method	#52.#322;	//  scala/xml/parsing/MarkupParser$class.xEQ:(Lscala/xml/parsing/MarkupParser;)V
const #324 = Asciz	xName;
const #325 = NameAndType	#324:#302;//  xName:(Lscala/xml/parsing/MarkupParser;)Ljava/lang/String;
const #326 = Method	#52.#325;	//  scala/xml/parsing/MarkupParser$class.xName:(Lscala/xml/parsing/MarkupParser;)Ljava/lang/String;
const #327 = Asciz	element1;
const #328 = Asciz	(Lscala/xml/NamespaceBinding;)Lscala/xml/NodeSeq;;
const #329 = Asciz	(Lscala/xml/parsing/MarkupParser;Lscala/xml/NamespaceBinding;)Lscala/xml/NodeSeq;;
const #330 = NameAndType	#327:#329;//  element1:(Lscala/xml/parsing/MarkupParser;Lscala/xml/NamespaceBinding;)Lscala/xml/NodeSeq;
const #331 = Method	#52.#330;	//  scala/xml/parsing/MarkupParser$class.element1:(Lscala/xml/parsing/MarkupParser;Lscala/xml/NamespaceBinding;)Lscala/xml/NodeSeq;
const #332 = Asciz	element;
const #333 = NameAndType	#332:#329;//  element:(Lscala/xml/parsing/MarkupParser;Lscala/xml/NamespaceBinding;)Lscala/xml/NodeSeq;
const #334 = Method	#52.#333;	//  scala/xml/parsing/MarkupParser$class.element:(Lscala/xml/parsing/MarkupParser;Lscala/xml/NamespaceBinding;)Lscala/xml/NodeSeq;
const #335 = Asciz	parseDTD;
const #336 = NameAndType	#335:#53;//  parseDTD:(Lscala/xml/parsing/MarkupParser;)V
const #337 = Method	#52.#336;	//  scala/xml/parsing/MarkupParser$class.parseDTD:(Lscala/xml/parsing/MarkupParser;)V
const #338 = Asciz	externalID;
const #339 = Asciz	()Lscala/xml/dtd/ExternalID;;
const #340 = Asciz	(Lscala/xml/parsing/MarkupParser;)Lscala/xml/dtd/ExternalID;;
const #341 = NameAndType	#338:#340;//  externalID:(Lscala/xml/parsing/MarkupParser;)Lscala/xml/dtd/ExternalID;
const #342 = Method	#52.#341;	//  scala/xml/parsing/MarkupParser$class.externalID:(Lscala/xml/parsing/MarkupParser;)Lscala/xml/dtd/ExternalID;
const #343 = Asciz	content;
const #344 = NameAndType	#343:#329;//  content:(Lscala/xml/parsing/MarkupParser;Lscala/xml/NamespaceBinding;)Lscala/xml/NodeSeq;
const #345 = Method	#52.#344;	//  scala/xml/parsing/MarkupParser$class.content:(Lscala/xml/parsing/MarkupParser;Lscala/xml/NamespaceBinding;)Lscala/xml/NodeSeq;
const #346 = Asciz	content1;
const #347 = Asciz	(Lscala/xml/NamespaceBinding;Lscala/xml/NodeBuffer;)V;
const #348 = Asciz	(Lscala/xml/parsing/MarkupParser;Lscala/xml/NamespaceBinding;Lscala/xml/NodeBuffer;)V;
const #349 = NameAndType	#346:#348;//  content1:(Lscala/xml/parsing/MarkupParser;Lscala/xml/NamespaceBinding;Lscala/xml/NodeBuffer;)V
const #350 = Method	#52.#349;	//  scala/xml/parsing/MarkupParser$class.content1:(Lscala/xml/parsing/MarkupParser;Lscala/xml/NamespaceBinding;Lscala/xml/NodeBuffer;)V
const #351 = Asciz	ts;
const #352 = Asciz	Lscala/xml/NodeBuffer;;
const #353 = Asciz	appendText;
const #354 = Asciz	(ILscala/xml/NodeBuffer;Ljava/lang/String;)V;
const #355 = Asciz	(Lscala/xml/parsing/MarkupParser;ILscala/xml/NodeBuffer;Ljava/lang/String;)V;
const #356 = NameAndType	#353:#355;//  appendText:(Lscala/xml/parsing/MarkupParser;ILscala/xml/NodeBuffer;Ljava/lang/String;)V
const #357 = Method	#52.#356;	//  scala/xml/parsing/MarkupParser$class.appendText:(Lscala/xml/parsing/MarkupParser;ILscala/xml/NodeBuffer;Ljava/lang/String;)V
const #358 = Asciz	xComment;
const #359 = NameAndType	#358:#312;//  xComment:(Lscala/xml/parsing/MarkupParser;)Lscala/xml/NodeSeq;
const #360 = Method	#52.#359;	//  scala/xml/parsing/MarkupParser$class.xComment:(Lscala/xml/parsing/MarkupParser;)Lscala/xml/NodeSeq;
const #361 = Asciz	xCharRef;
const #362 = Asciz	(Lscala/Function0;Lscala/Function0;)Ljava/lang/String;;
const #363 = Asciz	(Lscala/xml/parsing/MarkupParser;Lscala/Function0;Lscala/Function0;)Ljava/lang/String;;
const #364 = NameAndType	#361:#363;//  xCharRef:(Lscala/xml/parsing/MarkupParser;Lscala/Function0;Lscala/Function0;)Ljava/lang/String;
const #365 = Method	#52.#364;	//  scala/xml/parsing/MarkupParser$class.xCharRef:(Lscala/xml/parsing/MarkupParser;Lscala/Function0;Lscala/Function0;)Ljava/lang/String;
const #366 = Asciz	Lscala/Function0;;
const #367 = Asciz	nextch;
const #368 = Asciz	xCharData;
const #369 = NameAndType	#368:#312;//  xCharData:(Lscala/xml/parsing/MarkupParser;)Lscala/xml/NodeSeq;
const #370 = Method	#52.#369;	//  scala/xml/parsing/MarkupParser$class.xCharData:(Lscala/xml/parsing/MarkupParser;)Lscala/xml/NodeSeq;
const #371 = Asciz	xEndTag;
const #372 = NameAndType	#371:#255;//  xEndTag:(Lscala/xml/parsing/MarkupParser;Ljava/lang/String;)V
const #373 = Method	#52.#372;	//  scala/xml/parsing/MarkupParser$class.xEndTag:(Lscala/xml/parsing/MarkupParser;Ljava/lang/String;)V
const #374 = Asciz	xTag;
const #375 = Asciz	(Lscala/xml/NamespaceBinding;)Lscala/Tuple3;;
const #376 = Asciz	(Lscala/xml/parsing/MarkupParser;Lscala/xml/NamespaceBinding;)Lscala/Tuple3;;
const #377 = NameAndType	#374:#376;//  xTag:(Lscala/xml/parsing/MarkupParser;Lscala/xml/NamespaceBinding;)Lscala/Tuple3;
const #378 = Method	#52.#377;	//  scala/xml/parsing/MarkupParser$class.xTag:(Lscala/xml/parsing/MarkupParser;Lscala/xml/NamespaceBinding;)Lscala/Tuple3;
const #379 = Asciz	xEntityValue;
const #380 = NameAndType	#379:#302;//  xEntityValue:(Lscala/xml/parsing/MarkupParser;)Ljava/lang/String;
const #381 = Method	#52.#380;	//  scala/xml/parsing/MarkupParser$class.xEntityValue:(Lscala/xml/parsing/MarkupParser;)Ljava/lang/String;
const #382 = Asciz	xAttributeValue;
const #383 = NameAndType	#382:#302;//  xAttributeValue:(Lscala/xml/parsing/MarkupParser;)Ljava/lang/String;
const #384 = Method	#52.#383;	//  scala/xml/parsing/MarkupParser$class.xAttributeValue:(Lscala/xml/parsing/MarkupParser;)Ljava/lang/String;
const #385 = Asciz	xAttributes;
const #386 = Asciz	(Lscala/xml/NamespaceBinding;)Lscala/Tuple2;;
const #387 = Asciz	(Lscala/xml/parsing/MarkupParser;Lscala/xml/NamespaceBinding;)Lscala/Tuple2;;
const #388 = NameAndType	#385:#387;//  xAttributes:(Lscala/xml/parsing/MarkupParser;Lscala/xml/NamespaceBinding;)Lscala/Tuple2;
const #389 = Method	#52.#388;	//  scala/xml/parsing/MarkupParser$class.xAttributes:(Lscala/xml/parsing/MarkupParser;Lscala/xml/NamespaceBinding;)Lscala/Tuple2;
const #390 = Asciz	xToken;
const #391 = Asciz	(Lscala/collection/Sequence;)V;
const #392 = Asciz	(Lscala/xml/parsing/MarkupParser;Lscala/collection/Sequence;)V;
const #393 = NameAndType	#390:#392;//  xToken:(Lscala/xml/parsing/MarkupParser;Lscala/collection/Sequence;)V
const #394 = Method	#52.#393;	//  scala/xml/parsing/MarkupParser$class.xToken:(Lscala/xml/parsing/MarkupParser;Lscala/collection/Sequence;)V
const #395 = Asciz	that;
const #396 = Asciz	(C)V;
const #397 = Asciz	(Lscala/xml/parsing/MarkupParser;C)V;
const #398 = NameAndType	#390:#397;//  xToken:(Lscala/xml/parsing/MarkupParser;C)V
const #399 = Method	#52.#398;	//  scala/xml/parsing/MarkupParser$class.xToken:(Lscala/xml/parsing/MarkupParser;C)V
const #400 = NameAndType	#367:#53;//  nextch:(Lscala/xml/parsing/MarkupParser;)V
const #401 = Method	#52.#400;	//  scala/xml/parsing/MarkupParser$class.nextch:(Lscala/xml/parsing/MarkupParser;)V
const #402 = Asciz	putChar;
const #403 = Asciz	(C)Lscala/collection/mutable/StringBuilder;;
const #404 = Asciz	(Lscala/xml/parsing/MarkupParser;C)Lscala/collection/mutable/StringBuilder;;
const #405 = NameAndType	#402:#404;//  putChar:(Lscala/xml/parsing/MarkupParser;C)Lscala/collection/mutable/StringBuilder;
const #406 = Method	#52.#405;	//  scala/xml/parsing/MarkupParser$class.putChar:(Lscala/xml/parsing/MarkupParser;C)Lscala/collection/mutable/StringBuilder;
const #407 = Asciz	c;
const #408 = Asciz	document;
const #409 = Asciz	()Lscala/xml/Document;;
const #410 = Asciz	(Lscala/xml/parsing/MarkupParser;)Lscala/xml/Document;;
const #411 = NameAndType	#408:#410;//  document:(Lscala/xml/parsing/MarkupParser;)Lscala/xml/Document;
const #412 = Method	#52.#411;	//  scala/xml/parsing/MarkupParser$class.document:(Lscala/xml/parsing/MarkupParser;)Lscala/xml/Document;
const #413 = Asciz	textDecl;
const #414 = Asciz	()Lscala/Tuple2;;
const #415 = Asciz	(Lscala/xml/parsing/MarkupParser;)Lscala/Tuple2;;
const #416 = NameAndType	#413:#415;//  textDecl:(Lscala/xml/parsing/MarkupParser;)Lscala/Tuple2;
const #417 = Method	#52.#416;	//  scala/xml/parsing/MarkupParser$class.textDecl:(Lscala/xml/parsing/MarkupParser;)Lscala/Tuple2;
const #418 = Asciz	prolog;
const #419 = Asciz	()Lscala/Tuple3;;
const #420 = Asciz	(Lscala/xml/parsing/MarkupParser;)Lscala/Tuple3;;
const #421 = NameAndType	#418:#420;//  prolog:(Lscala/xml/parsing/MarkupParser;)Lscala/Tuple3;
const #422 = Method	#52.#421;	//  scala/xml/parsing/MarkupParser$class.prolog:(Lscala/xml/parsing/MarkupParser;)Lscala/Tuple3;
const #423 = Asciz	xmlProcInstr;
const #424 = Asciz	()Lscala/xml/MetaData;;
const #425 = Asciz	(Lscala/xml/parsing/MarkupParser;)Lscala/xml/MetaData;;
const #426 = NameAndType	#423:#425;//  xmlProcInstr:(Lscala/xml/parsing/MarkupParser;)Lscala/xml/MetaData;
const #427 = Method	#52.#426;	//  scala/xml/parsing/MarkupParser$class.xmlProcInstr:(Lscala/xml/parsing/MarkupParser;)Lscala/xml/MetaData;
const #428 = Asciz	scala$xml$parsing$MarkupParser$_setter_$cbuf_$eq;
const #429 = Asciz	(Lscala/collection/mutable/StringBuilder;)V;
const #430 = NameAndType	#9:#10;//  cbuf:Lscala/collection/mutable/StringBuilder;
const #431 = Field	#32.#430;	//  scala/xml/pull/XMLEventReader$Parser.cbuf:Lscala/collection/mutable/StringBuilder;
const #432 = Asciz	scala$xml$parsing$MarkupParser$_setter_$scala$xml$parsing$MarkupParser$$handle_$eq;
const #433 = Asciz	(Lscala/xml/parsing/MarkupHandler;)V;
const #434 = NameAndType	#19:#20;//  scala$xml$parsing$MarkupParser$$handle:Lscala/xml/parsing/MarkupHandler;
const #435 = Field	#32.#434;	//  scala/xml/pull/XMLEventReader$Parser.scala$xml$parsing$MarkupParser$$handle:Lscala/xml/parsing/MarkupHandler;
const #436 = Asciz	eof_$eq;
const #437 = Asciz	(Z)V;
const #438 = NameAndType	#3:#4;//  eof:Z
const #439 = Field	#32.#438;	//  scala/xml/pull/XMLEventReader$Parser.eof:Z
const #440 = Asciz	doc_$eq;
const #441 = Asciz	(Lscala/xml/Document;)V;
const #442 = NameAndType	#5:#6;//  doc:Lscala/xml/Document;
const #443 = Field	#32.#442;	//  scala/xml/pull/XMLEventReader$Parser.doc:Lscala/xml/Document;
const #444 = Asciz	dtd_$eq;
const #445 = Asciz	(Lscala/xml/dtd/DTD;)V;
const #446 = NameAndType	#7:#8;//  dtd:Lscala/xml/dtd/DTD;
const #447 = Field	#32.#446;	//  scala/xml/pull/XMLEventReader$Parser.dtd:Lscala/xml/dtd/DTD;
const #448 = Asciz	()Lscala/xml/dtd/DTD;;
const #449 = Asciz	()Lscala/collection/mutable/StringBuilder;;
const #450 = Asciz	ch_$eq;
const #451 = NameAndType	#11:#12;//  ch:C
const #452 = Field	#32.#451;	//  scala/xml/pull/XMLEventReader$Parser.ch:C
const #453 = Asciz	()C;
const #454 = Asciz	tmppos_$eq;
const #455 = Asciz	(I)V;
const #456 = NameAndType	#13:#14;//  tmppos:I
const #457 = Field	#32.#456;	//  scala/xml/pull/XMLEventReader$Parser.tmppos:I
const #458 = Asciz	()I;
const #459 = Asciz	extIndex_$eq;
const #460 = NameAndType	#15:#14;//  extIndex:I
const #461 = Field	#32.#460;	//  scala/xml/pull/XMLEventReader$Parser.extIndex:I
const #462 = Asciz	pos_$eq;
const #463 = NameAndType	#16:#14;//  pos:I
const #464 = Field	#32.#463;	//  scala/xml/pull/XMLEventReader$Parser.pos:I
const #465 = Asciz	inpStack_$eq;
const #466 = Asciz	(Lscala/collection/immutable/List;)V;
const #467 = NameAndType	#17:#18;//  inpStack:Lscala/collection/immutable/List;
const #468 = Field	#32.#467;	//  scala/xml/pull/XMLEventReader$Parser.inpStack:Lscala/collection/immutable/List;
const #469 = Asciz	()Lscala/collection/immutable/List;;
const #470 = Asciz	()Lscala/xml/parsing/MarkupHandler;;
const #471 = NameAndType	#21:#22;//  curInput:Lscala/io/Source;
const #472 = Field	#32.#471;	//  scala/xml/pull/XMLEventReader$Parser.curInput:Lscala/io/Source;
const #473 = Asciz	externalSource;
const #474 = Asciz	(Ljava/lang/String;)Lscala/io/Source;;
const #475 = Asciz	(Lscala/xml/parsing/ExternalSources;Ljava/lang/String;)Lscala/io/Source;;
const #476 = NameAndType	#473:#475;//  externalSource:(Lscala/xml/parsing/ExternalSources;Ljava/lang/String;)Lscala/io/Source;
const #477 = Method	#57.#476;	//  scala/xml/parsing/ExternalSources$class.externalSource:(Lscala/xml/parsing/ExternalSources;Ljava/lang/String;)Lscala/io/Source;
const #478 = Asciz	Scala;
const #479 = Asciz	InnerClasses;
const #480 = Asciz	Parser;
const #481 = Asciz	$anonfun$run$1;
const #482 = Asciz	$anonfun$setEvent$1;
const #483 = Asciz	scala/xml/parsing/ExternalSources;
const #484 = class	#483;	//  scala/xml/parsing/ExternalSources
const #485 = Asciz	java/lang/Runnable;
const #486 = class	#485;	//  java/lang/Runnable
const #487 = Asciz	scala/ScalaObject;
const #488 = class	#487;	//  scala/ScalaObject

{
public final scala.xml.pull.XMLEventReader $outer;

public scala.xml.pull.XMLEventReader$Parser(scala.xml.pull.XMLEventReader, scala.io.Source);
  Code:
   Stack=2, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_2
   2:	putfield	#34; //Field input:Lscala/io/Source;
   5:	aload_1
   6:	ifnonnull	17
   9:	new	#36; //class java/lang/NullPointerException
   12:	dup
   13:	invokespecial	#39; //Method java/lang/NullPointerException."<init>":()V
   16:	athrow
   17:	aload_0
   18:	aload_1
   19:	putfield	#41; //Field $outer:Lscala/xml/pull/XMLEventReader;
   22:	aload_0
   23:	invokespecial	#44; //Method scala/xml/parsing/MarkupHandler."<init>":()V
   26:	aload_0
   27:	invokestatic	#50; //Method scala/xml/parsing/TokenTests$class.$init$:(Lscala/xml/parsing/TokenTests;)V
   30:	aload_0
   31:	invokestatic	#55; //Method scala/xml/parsing/MarkupParser$class.$init$:(Lscala/xml/parsing/MarkupParser;)V
   34:	aload_0
   35:	invokestatic	#60; //Method scala/xml/parsing/ExternalSources$class.$init$:(Lscala/xml/parsing/ExternalSources;)V
   38:	aload_0
   39:	aload_1
   40:	invokevirtual	#65; //Method scala/xml/pull/XMLEventReader.preserveWS:()Z
   43:	putfield	#67; //Field preserveWS:Z
   46:	return
  LineNumberTable: 
   line 73: 0
   line 74: 38

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      47      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      47      1    $outer       Lscala/xml/pull/XMLEventReader;
   0      47      2    input       Lscala/io/Source;


public scala.xml.pull.XMLEventReader scala$xml$pull$XMLEventReader$Parser$$$outer();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#41; //Field $outer:Lscala/xml/pull/XMLEventReader;
   4:	areturn
  LineNumberTable: 
   line 73: 0


public void run();
  Code:
   Stack=6, Locals=1, Args_size=1
   0:	aload_0
   1:	aload_0
   2:	invokevirtual	#76; //Method input:()Lscala/io/Source;
   5:	invokeinterface	#82,  2; //InterfaceMethod scala/xml/parsing/MarkupParser.curInput_$eq:(Lscala/io/Source;)V
   10:	aload_0
   11:	invokevirtual	#84; //Method scala$xml$pull$XMLEventReader$Parser$$$outer:()Lscala/xml/pull/XMLEventReader;
   14:	new	#86; //class scala/xml/pull/XMLEventReader$Parser$$anonfun$run$1
   17:	dup
   18:	aload_0
   19:	invokespecial	#89; //Method scala/xml/pull/XMLEventReader$Parser$$anonfun$run$1."<init>":(Lscala/xml/pull/XMLEventReader$Parser;)V
   22:	invokeinterface	#95,  2; //InterfaceMethod scala/xml/pull/ProducerConsumerIterator.interruptibly:(Lscala/Function0;)Lscala/Option;
   27:	pop
   28:	aload_0
   29:	getstatic	#101; //Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   32:	iconst_1
   33:	anewarray	#103; //class scala/xml/pull/XMLEvent
   36:	dup
   37:	iconst_0
   38:	aload_0
   39:	invokevirtual	#84; //Method scala$xml$pull$XMLEventReader$Parser$$$outer:()Lscala/xml/pull/XMLEventReader;
   42:	invokevirtual	#107; //Method scala/xml/pull/XMLEventReader.POISON:()Lscala/xml/pull/XMLEventReader$POISON$;
   45:	aastore
   46:	invokevirtual	#111; //Method scala/runtime/ScalaRunTime$.boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
   49:	invokevirtual	#115; //Method setEvent:(Lscala/collection/Sequence;)Lscala/xml/NodeSeq;
   52:	pop
   53:	return
  LineNumberTable: 
   line 99: 0
   line 100: 10
   line 101: 28


public scala.xml.NodeSeq text(int, java.lang.String);
  Code:
   Stack=8, Locals=3, Args_size=3
   0:	aload_0
   1:	getstatic	#101; //Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   4:	iconst_1
   5:	anewarray	#103; //class scala/xml/pull/XMLEvent
   8:	dup
   9:	iconst_0
   10:	new	#119; //class scala/xml/pull/EvText
   13:	dup
   14:	aload_2
   15:	invokespecial	#122; //Method scala/xml/pull/EvText."<init>":(Ljava/lang/String;)V
   18:	aastore
   19:	invokevirtual	#111; //Method scala/runtime/ScalaRunTime$.boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
   22:	invokevirtual	#115; //Method setEvent:(Lscala/collection/Sequence;)Lscala/xml/NodeSeq;
   25:	areturn
  LineNumberTable: 
   line 96: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      26      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      26      1    pos       I
   0      26      2    txt       Ljava/lang/String;


public scala.xml.NodeSeq entityRef(int, java.lang.String);
  Code:
   Stack=8, Locals=3, Args_size=3
   0:	aload_0
   1:	getstatic	#101; //Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   4:	iconst_1
   5:	anewarray	#103; //class scala/xml/pull/XMLEvent
   8:	dup
   9:	iconst_0
   10:	new	#127; //class scala/xml/pull/EvEntityRef
   13:	dup
   14:	aload_2
   15:	invokespecial	#128; //Method scala/xml/pull/EvEntityRef."<init>":(Ljava/lang/String;)V
   18:	aastore
   19:	invokevirtual	#111; //Method scala/runtime/ScalaRunTime$.boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
   22:	invokevirtual	#115; //Method setEvent:(Lscala/collection/Sequence;)Lscala/xml/NodeSeq;
   25:	areturn
  LineNumberTable: 
   line 95: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      26      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      26      1    pos       I
   0      26      2    n       Ljava/lang/String;


public scala.xml.NodeSeq comment(int, java.lang.String);
  Code:
   Stack=8, Locals=3, Args_size=3
   0:	aload_0
   1:	getstatic	#101; //Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   4:	iconst_1
   5:	anewarray	#103; //class scala/xml/pull/XMLEvent
   8:	dup
   9:	iconst_0
   10:	new	#132; //class scala/xml/pull/EvComment
   13:	dup
   14:	aload_2
   15:	invokespecial	#133; //Method scala/xml/pull/EvComment."<init>":(Ljava/lang/String;)V
   18:	aastore
   19:	invokevirtual	#111; //Method scala/runtime/ScalaRunTime$.boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
   22:	invokevirtual	#115; //Method setEvent:(Lscala/collection/Sequence;)Lscala/xml/NodeSeq;
   25:	areturn
  LineNumberTable: 
   line 94: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      26      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      26      1    pos       I
   0      26      2    txt       Ljava/lang/String;


public scala.xml.NodeSeq procInstr(int, java.lang.String, java.lang.String);
  Code:
   Stack=9, Locals=4, Args_size=4
   0:	aload_0
   1:	getstatic	#101; //Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   4:	iconst_1
   5:	anewarray	#103; //class scala/xml/pull/XMLEvent
   8:	dup
   9:	iconst_0
   10:	new	#137; //class scala/xml/pull/EvProcInstr
   13:	dup
   14:	aload_2
   15:	aload_3
   16:	invokespecial	#140; //Method scala/xml/pull/EvProcInstr."<init>":(Ljava/lang/String;Ljava/lang/String;)V
   19:	aastore
   20:	invokevirtual	#111; //Method scala/runtime/ScalaRunTime$.boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
   23:	invokevirtual	#115; //Method setEvent:(Lscala/collection/Sequence;)Lscala/xml/NodeSeq;
   26:	areturn
  LineNumberTable: 
   line 93: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      27      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      27      1    pos       I
   0      27      2    target       Ljava/lang/String;
   0      27      3    txt       Ljava/lang/String;


public final scala.xml.NodeSeq elem(int, java.lang.String, java.lang.String, scala.xml.MetaData, scala.xml.NamespaceBinding, scala.xml.NodeSeq);
  Code:
   Stack=8, Locals=7, Args_size=7
   0:	new	#145; //class scala/xml/Elem
   3:	dup
   4:	aconst_null
   5:	pop
   6:	aconst_null
   7:	ldc	#147; //String ignore
   9:	getstatic	#152; //Field scala/xml/Null$.MODULE$:Lscala/xml/Null$;
   12:	getstatic	#157; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   15:	invokevirtual	#161; //Method scala/Predef$.$scope:()Lscala/xml/TopScope$;
   18:	getstatic	#101; //Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   21:	iconst_0
   22:	anewarray	#163; //class scala/xml/Node
   25:	invokevirtual	#111; //Method scala/runtime/ScalaRunTime$.boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
   28:	invokespecial	#166; //Method scala/xml/Elem."<init>":(Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Sequence;)V
   31:	areturn
  LineNumberTable: 
   line 91: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      32      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      32      1    pos       I
   0      32      2    pre       Ljava/lang/String;
   0      32      3    label       Ljava/lang/String;
   0      32      4    attrs       Lscala/xml/MetaData;
   0      32      5    pscope       Lscala/xml/NamespaceBinding;
   0      32      6    nodes       Lscala/xml/NodeSeq;


public void elemEnd(int, java.lang.String, java.lang.String);
  Code:
   Stack=9, Locals=4, Args_size=4
   0:	aload_0
   1:	getstatic	#101; //Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   4:	iconst_1
   5:	anewarray	#103; //class scala/xml/pull/XMLEvent
   8:	dup
   9:	iconst_0
   10:	new	#178; //class scala/xml/pull/EvElemEnd
   13:	dup
   14:	aload_2
   15:	aload_3
   16:	invokespecial	#179; //Method scala/xml/pull/EvElemEnd."<init>":(Ljava/lang/String;Ljava/lang/String;)V
   19:	aastore
   20:	invokevirtual	#111; //Method scala/runtime/ScalaRunTime$.boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
   23:	invokevirtual	#115; //Method setEvent:(Lscala/collection/Sequence;)Lscala/xml/NodeSeq;
   26:	pop
   27:	return
  LineNumberTable: 
   line 87: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      28      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      28      1    pos       I
   0      28      2    pre       Ljava/lang/String;
   0      28      3    label       Ljava/lang/String;


public void elemStart(int, java.lang.String, java.lang.String, scala.xml.MetaData, scala.xml.NamespaceBinding);
  Code:
   Stack=11, Locals=6, Args_size=6
   0:	aload_0
   1:	getstatic	#101; //Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   4:	iconst_1
   5:	anewarray	#103; //class scala/xml/pull/XMLEvent
   8:	dup
   9:	iconst_0
   10:	new	#183; //class scala/xml/pull/EvElemStart
   13:	dup
   14:	aload_2
   15:	aload_3
   16:	aload	4
   18:	aload	5
   20:	invokespecial	#186; //Method scala/xml/pull/EvElemStart."<init>":(Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;)V
   23:	aastore
   24:	invokevirtual	#111; //Method scala/runtime/ScalaRunTime$.boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
   27:	invokevirtual	#115; //Method setEvent:(Lscala/collection/Sequence;)Lscala/xml/NodeSeq;
   30:	pop
   31:	return
  LineNumberTable: 
   line 84: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      32      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      32      1    pos       I
   0      32      2    pre       Ljava/lang/String;
   0      32      3    label       Ljava/lang/String;
   0      32      4    attrs       Lscala/xml/MetaData;
   0      32      5    scope       Lscala/xml/NamespaceBinding;


public scala.xml.NodeSeq setEvent(scala.collection.Sequence);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	aload_1
   1:	new	#189; //class scala/xml/pull/XMLEventReader$Parser$$anonfun$setEvent$1
   4:	dup
   5:	aload_0
   6:	invokespecial	#190; //Method scala/xml/pull/XMLEventReader$Parser$$anonfun$setEvent$1."<init>":(Lscala/xml/pull/XMLEventReader$Parser;)V
   9:	invokeinterface	#196,  2; //InterfaceMethod scala/collection/generic/IterableTemplate.foreach:(Lscala/Function1;)V
   14:	getstatic	#201; //Field scala/xml/NodeSeq$.MODULE$:Lscala/xml/NodeSeq$;
   17:	invokevirtual	#205; //Method scala/xml/NodeSeq$.Empty:()Lscala/xml/NodeSeq;
   20:	areturn
  LineNumberTable: 
   line 79: 0
   line 80: 14

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      21      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      21      1    es       Lscala/collection/Sequence;

  Signature: length = 0x2
   00 FFFFFFD0 

public boolean preserveWS();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#67; //Field preserveWS:Z
   4:	ireturn
  LineNumberTable: 
   line 74: 0


public scala.io.Source input();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#34; //Field input:Lscala/io/Source;
   4:	areturn
  LineNumberTable: 
   line 73: 0


public boolean checkPubID(java.lang.String);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#214; //Method scala/xml/parsing/TokenTests$class.checkPubID:(Lscala/xml/parsing/TokenTests;Ljava/lang/String;)Z
   5:	ireturn
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      6      1    s       Ljava/lang/String;


public boolean checkSysID(java.lang.String);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#218; //Method scala/xml/parsing/TokenTests$class.checkSysID:(Lscala/xml/parsing/TokenTests;Ljava/lang/String;)Z
   5:	ireturn
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      6      1    s       Ljava/lang/String;


public boolean isValidIANAEncoding(scala.collection.Sequence);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#223; //Method scala/xml/parsing/TokenTests$class.isValidIANAEncoding:(Lscala/xml/parsing/TokenTests;Lscala/collection/Sequence;)Z
   5:	ireturn
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      6      1    ianaEncoding       Lscala/collection/Sequence;


public boolean isPubIDChar(char);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	invokestatic	#229; //Method scala/xml/parsing/TokenTests$class.isPubIDChar:(Lscala/xml/parsing/TokenTests;C)Z
   5:	ireturn
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      6      1    ch       C


public boolean isName(java.lang.String);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#232; //Method scala/xml/parsing/TokenTests$class.isName:(Lscala/xml/parsing/TokenTests;Ljava/lang/String;)Z
   5:	ireturn
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      6      1    s       Ljava/lang/String;


public boolean isNameStart(char);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	invokestatic	#235; //Method scala/xml/parsing/TokenTests$class.isNameStart:(Lscala/xml/parsing/TokenTests;C)Z
   5:	ireturn
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      6      1    ch       C


public boolean isNameChar(char);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	invokestatic	#238; //Method scala/xml/parsing/TokenTests$class.isNameChar:(Lscala/xml/parsing/TokenTests;C)Z
   5:	ireturn
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      6      1    ch       C


public final boolean isSpace(scala.collection.Sequence);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#241; //Method scala/xml/parsing/TokenTests$class.isSpace:(Lscala/xml/parsing/TokenTests;Lscala/collection/Sequence;)Z
   5:	ireturn
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      6      1    cs       Lscala/collection/Sequence;


public final boolean isSpace(char);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	invokestatic	#244; //Method scala/xml/parsing/TokenTests$class.isSpace:(Lscala/xml/parsing/TokenTests;C)Z
   5:	ireturn
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      6      1    ch       C


public java.lang.String normalizeAttributeValue(java.lang.String);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#249; //Method scala/xml/parsing/MarkupParser$class.normalizeAttributeValue:(Lscala/xml/parsing/MarkupParser;Ljava/lang/String;)Ljava/lang/String;
   5:	areturn
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      6      1    attval       Ljava/lang/String;


public void pop();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#253; //Method scala/xml/parsing/MarkupParser$class.pop:(Lscala/xml/parsing/MarkupParser;)V
   4:	return
  LineNumberTable: 
   line 73: 0


public void pushExternal(java.lang.String);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#257; //Method scala/xml/parsing/MarkupParser$class.pushExternal:(Lscala/xml/parsing/MarkupParser;Ljava/lang/String;)V
   5:	return
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      6      1    systemId       Ljava/lang/String;


public void push(java.lang.String);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#261; //Method scala/xml/parsing/MarkupParser$class.push:(Lscala/xml/parsing/MarkupParser;Ljava/lang/String;)V
   5:	return
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      6      1    entityName       Ljava/lang/String;


public void reportValidationError(int, java.lang.String);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	iload_1
   2:	aload_2
   3:	invokestatic	#267; //Method scala/xml/parsing/MarkupParser$class.reportValidationError:(Lscala/xml/parsing/MarkupParser;ILjava/lang/String;)V
   6:	return
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      7      1    pos       I
   0      7      2    str       Ljava/lang/String;


public void reportSyntaxError(java.lang.String);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#271; //Method scala/xml/parsing/MarkupParser$class.reportSyntaxError:(Lscala/xml/parsing/MarkupParser;Ljava/lang/String;)V
   5:	return
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      6      1    str       Ljava/lang/String;


public void reportSyntaxError(int, java.lang.String);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	iload_1
   2:	aload_2
   3:	invokestatic	#273; //Method scala/xml/parsing/MarkupParser$class.reportSyntaxError:(Lscala/xml/parsing/MarkupParser;ILjava/lang/String;)V
   6:	return
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      7      1    pos       I
   0      7      2    str       Ljava/lang/String;


public void notationDecl();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#276; //Method scala/xml/parsing/MarkupParser$class.notationDecl:(Lscala/xml/parsing/MarkupParser;)V
   4:	return
  LineNumberTable: 
   line 73: 0


public void entityDecl();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#279; //Method scala/xml/parsing/MarkupParser$class.entityDecl:(Lscala/xml/parsing/MarkupParser;)V
   4:	return
  LineNumberTable: 
   line 73: 0


public void attrDecl();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#282; //Method scala/xml/parsing/MarkupParser$class.attrDecl:(Lscala/xml/parsing/MarkupParser;)V
   4:	return
  LineNumberTable: 
   line 73: 0


public void elementDecl();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#285; //Method scala/xml/parsing/MarkupParser$class.elementDecl:(Lscala/xml/parsing/MarkupParser;)V
   4:	return
  LineNumberTable: 
   line 73: 0


public void intSubset();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#288; //Method scala/xml/parsing/MarkupParser$class.intSubset:(Lscala/xml/parsing/MarkupParser;)V
   4:	return
  LineNumberTable: 
   line 73: 0


public void markupDecl();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#291; //Method scala/xml/parsing/MarkupParser$class.markupDecl:(Lscala/xml/parsing/MarkupParser;)V
   4:	return
  LineNumberTable: 
   line 73: 0


public java.lang.Object markupDecl1();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#296; //Method scala/xml/parsing/MarkupParser$class.markupDecl1:(Lscala/xml/parsing/MarkupParser;)Ljava/lang/Object;
   4:	areturn
  LineNumberTable: 
   line 73: 0


public void extSubset();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#299; //Method scala/xml/parsing/MarkupParser$class.extSubset:(Lscala/xml/parsing/MarkupParser;)V
   4:	return
  LineNumberTable: 
   line 73: 0


public java.lang.String pubidLiteral();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#304; //Method scala/xml/parsing/MarkupParser$class.pubidLiteral:(Lscala/xml/parsing/MarkupParser;)Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 73: 0


public java.lang.String systemLiteral();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#307; //Method scala/xml/parsing/MarkupParser$class.systemLiteral:(Lscala/xml/parsing/MarkupParser;)Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 73: 0


public java.lang.String xText();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#310; //Method scala/xml/parsing/MarkupParser$class.xText:(Lscala/xml/parsing/MarkupParser;)Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 73: 0


public scala.xml.NodeSeq xProcInstr();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#314; //Method scala/xml/parsing/MarkupParser$class.xProcInstr:(Lscala/xml/parsing/MarkupParser;)Lscala/xml/NodeSeq;
   4:	areturn
  LineNumberTable: 
   line 73: 0


public void xSpace();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#317; //Method scala/xml/parsing/MarkupParser$class.xSpace:(Lscala/xml/parsing/MarkupParser;)V
   4:	return
  LineNumberTable: 
   line 73: 0


public void xSpaceOpt();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#320; //Method scala/xml/parsing/MarkupParser$class.xSpaceOpt:(Lscala/xml/parsing/MarkupParser;)V
   4:	return
  LineNumberTable: 
   line 73: 0


public void xEQ();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#323; //Method scala/xml/parsing/MarkupParser$class.xEQ:(Lscala/xml/parsing/MarkupParser;)V
   4:	return
  LineNumberTable: 
   line 73: 0


public java.lang.String xName();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#326; //Method scala/xml/parsing/MarkupParser$class.xName:(Lscala/xml/parsing/MarkupParser;)Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 73: 0


public scala.xml.NodeSeq element1(scala.xml.NamespaceBinding);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#331; //Method scala/xml/parsing/MarkupParser$class.element1:(Lscala/xml/parsing/MarkupParser;Lscala/xml/NamespaceBinding;)Lscala/xml/NodeSeq;
   5:	areturn
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      6      1    pscope       Lscala/xml/NamespaceBinding;


public scala.xml.NodeSeq element(scala.xml.NamespaceBinding);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#334; //Method scala/xml/parsing/MarkupParser$class.element:(Lscala/xml/parsing/MarkupParser;Lscala/xml/NamespaceBinding;)Lscala/xml/NodeSeq;
   5:	areturn
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      6      1    pscope       Lscala/xml/NamespaceBinding;


public void parseDTD();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#337; //Method scala/xml/parsing/MarkupParser$class.parseDTD:(Lscala/xml/parsing/MarkupParser;)V
   4:	return
  LineNumberTable: 
   line 73: 0


public scala.xml.dtd.ExternalID externalID();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#342; //Method scala/xml/parsing/MarkupParser$class.externalID:(Lscala/xml/parsing/MarkupParser;)Lscala/xml/dtd/ExternalID;
   4:	areturn
  LineNumberTable: 
   line 73: 0


public scala.xml.NodeSeq content(scala.xml.NamespaceBinding);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#345; //Method scala/xml/parsing/MarkupParser$class.content:(Lscala/xml/parsing/MarkupParser;Lscala/xml/NamespaceBinding;)Lscala/xml/NodeSeq;
   5:	areturn
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      6      1    pscope       Lscala/xml/NamespaceBinding;


public void content1(scala.xml.NamespaceBinding, scala.xml.NodeBuffer);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#350; //Method scala/xml/parsing/MarkupParser$class.content1:(Lscala/xml/parsing/MarkupParser;Lscala/xml/NamespaceBinding;Lscala/xml/NodeBuffer;)V
   6:	return
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      7      1    pscope       Lscala/xml/NamespaceBinding;
   0      7      2    ts       Lscala/xml/NodeBuffer;


public void appendText(int, scala.xml.NodeBuffer, java.lang.String);
  Code:
   Stack=4, Locals=4, Args_size=4
   0:	aload_0
   1:	iload_1
   2:	aload_2
   3:	aload_3
   4:	invokestatic	#357; //Method scala/xml/parsing/MarkupParser$class.appendText:(Lscala/xml/parsing/MarkupParser;ILscala/xml/NodeBuffer;Ljava/lang/String;)V
   7:	return
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      8      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      8      1    pos       I
   0      8      2    ts       Lscala/xml/NodeBuffer;
   0      8      3    txt       Ljava/lang/String;


public scala.xml.NodeSeq xComment();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#360; //Method scala/xml/parsing/MarkupParser$class.xComment:(Lscala/xml/parsing/MarkupParser;)Lscala/xml/NodeSeq;
   4:	areturn
  LineNumberTable: 
   line 73: 0


public java.lang.String xCharRef(scala.Function0, scala.Function0);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	aload_2
   3:	invokestatic	#365; //Method scala/xml/parsing/MarkupParser$class.xCharRef:(Lscala/xml/parsing/MarkupParser;Lscala/Function0;Lscala/Function0;)Ljava/lang/String;
   6:	areturn
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      7      1    ch       Lscala/Function0;
   0      7      2    nextch       Lscala/Function0;


public scala.xml.NodeSeq xCharData();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#370; //Method scala/xml/parsing/MarkupParser$class.xCharData:(Lscala/xml/parsing/MarkupParser;)Lscala/xml/NodeSeq;
   4:	areturn
  LineNumberTable: 
   line 73: 0


public void xEndTag(java.lang.String);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#373; //Method scala/xml/parsing/MarkupParser$class.xEndTag:(Lscala/xml/parsing/MarkupParser;Ljava/lang/String;)V
   5:	return
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      6      1    n       Ljava/lang/String;


public scala.Tuple3 xTag(scala.xml.NamespaceBinding);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#378; //Method scala/xml/parsing/MarkupParser$class.xTag:(Lscala/xml/parsing/MarkupParser;Lscala/xml/NamespaceBinding;)Lscala/Tuple3;
   5:	areturn
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      6      1    pscope       Lscala/xml/NamespaceBinding;


public java.lang.String xEntityValue();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#381; //Method scala/xml/parsing/MarkupParser$class.xEntityValue:(Lscala/xml/parsing/MarkupParser;)Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 73: 0


public java.lang.String xAttributeValue();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#384; //Method scala/xml/parsing/MarkupParser$class.xAttributeValue:(Lscala/xml/parsing/MarkupParser;)Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 73: 0


public scala.Tuple2 xAttributes(scala.xml.NamespaceBinding);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#389; //Method scala/xml/parsing/MarkupParser$class.xAttributes:(Lscala/xml/parsing/MarkupParser;Lscala/xml/NamespaceBinding;)Lscala/Tuple2;
   5:	areturn
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      6      1    pscope       Lscala/xml/NamespaceBinding;


public void xToken(scala.collection.Sequence);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#394; //Method scala/xml/parsing/MarkupParser$class.xToken:(Lscala/xml/parsing/MarkupParser;Lscala/collection/Sequence;)V
   5:	return
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      6      1    that       Lscala/collection/Sequence;


public void xToken(char);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	invokestatic	#399; //Method scala/xml/parsing/MarkupParser$class.xToken:(Lscala/xml/parsing/MarkupParser;C)V
   5:	return
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      6      1    that       C


public void nextch();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#401; //Method scala/xml/parsing/MarkupParser$class.nextch:(Lscala/xml/parsing/MarkupParser;)V
   4:	return
  LineNumberTable: 
   line 73: 0


public scala.collection.mutable.StringBuilder putChar(char);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	invokestatic	#406; //Method scala/xml/parsing/MarkupParser$class.putChar:(Lscala/xml/parsing/MarkupParser;C)Lscala/collection/mutable/StringBuilder;
   5:	areturn
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      6      1    c       C


public scala.xml.Document document();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#412; //Method scala/xml/parsing/MarkupParser$class.document:(Lscala/xml/parsing/MarkupParser;)Lscala/xml/Document;
   4:	areturn
  LineNumberTable: 
   line 73: 0


public scala.Tuple2 textDecl();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#417; //Method scala/xml/parsing/MarkupParser$class.textDecl:(Lscala/xml/parsing/MarkupParser;)Lscala/Tuple2;
   4:	areturn
  LineNumberTable: 
   line 73: 0


public scala.Tuple3 prolog();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#422; //Method scala/xml/parsing/MarkupParser$class.prolog:(Lscala/xml/parsing/MarkupParser;)Lscala/Tuple3;
   4:	areturn
  LineNumberTable: 
   line 73: 0


public scala.xml.MetaData xmlProcInstr();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#427; //Method scala/xml/parsing/MarkupParser$class.xmlProcInstr:(Lscala/xml/parsing/MarkupParser;)Lscala/xml/MetaData;
   4:	areturn
  LineNumberTable: 
   line 73: 0


public void scala$xml$parsing$MarkupParser$_setter_$cbuf_$eq(scala.collection.mutable.StringBuilder);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	putfield	#431; //Field cbuf:Lscala/collection/mutable/StringBuilder;
   5:	return
  LineNumberTable: 
   line 73: 0


public void scala$xml$parsing$MarkupParser$_setter_$scala$xml$parsing$MarkupParser$$handle_$eq(scala.xml.parsing.MarkupHandler);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	putfield	#435; //Field scala$xml$parsing$MarkupParser$$handle:Lscala/xml/parsing/MarkupHandler;
   5:	return
  LineNumberTable: 
   line 73: 0


public void eof_$eq(boolean);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	putfield	#439; //Field eof:Z
   5:	return
  LineNumberTable: 
   line 73: 0


public boolean eof();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#439; //Field eof:Z
   4:	ireturn
  LineNumberTable: 
   line 73: 0


public void doc_$eq(scala.xml.Document);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	putfield	#443; //Field doc:Lscala/xml/Document;
   5:	return
  LineNumberTable: 
   line 73: 0


public scala.xml.Document doc();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#443; //Field doc:Lscala/xml/Document;
   4:	areturn
  LineNumberTable: 
   line 73: 0


public void dtd_$eq(scala.xml.dtd.DTD);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	putfield	#447; //Field dtd:Lscala/xml/dtd/DTD;
   5:	return
  LineNumberTable: 
   line 73: 0


public scala.xml.dtd.DTD dtd();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#447; //Field dtd:Lscala/xml/dtd/DTD;
   4:	areturn
  LineNumberTable: 
   line 73: 0


public scala.collection.mutable.StringBuilder cbuf();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#431; //Field cbuf:Lscala/collection/mutable/StringBuilder;
   4:	areturn
  LineNumberTable: 
   line 73: 0


public void ch_$eq(char);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	putfield	#452; //Field ch:C
   5:	return
  LineNumberTable: 
   line 73: 0


public char ch();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#452; //Field ch:C
   4:	ireturn
  LineNumberTable: 
   line 73: 0


public void tmppos_$eq(int);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	putfield	#457; //Field tmppos:I
   5:	return
  LineNumberTable: 
   line 73: 0


public int tmppos();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#457; //Field tmppos:I
   4:	ireturn
  LineNumberTable: 
   line 73: 0


public void extIndex_$eq(int);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	putfield	#461; //Field extIndex:I
   5:	return
  LineNumberTable: 
   line 73: 0


public int extIndex();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#461; //Field extIndex:I
   4:	ireturn
  LineNumberTable: 
   line 73: 0


public void pos_$eq(int);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	putfield	#464; //Field pos:I
   5:	return
  LineNumberTable: 
   line 73: 0


public int pos();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#464; //Field pos:I
   4:	ireturn
  LineNumberTable: 
   line 73: 0


public void inpStack_$eq(scala.collection.immutable.List);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	putfield	#468; //Field inpStack:Lscala/collection/immutable/List;
   5:	return
  LineNumberTable: 
   line 73: 0


public scala.collection.immutable.List inpStack();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#468; //Field inpStack:Lscala/collection/immutable/List;
   4:	areturn
  LineNumberTable: 
   line 73: 0


public final scala.xml.parsing.MarkupHandler scala$xml$parsing$MarkupParser$$handle();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#435; //Field scala$xml$parsing$MarkupParser$$handle:Lscala/xml/parsing/MarkupHandler;
   4:	areturn
  LineNumberTable: 
   line 73: 0


public void curInput_$eq(scala.io.Source);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	putfield	#472; //Field curInput:Lscala/io/Source;
   5:	return
  LineNumberTable: 
   line 73: 0


public scala.io.Source curInput();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#472; //Field curInput:Lscala/io/Source;
   4:	areturn
  LineNumberTable: 
   line 73: 0


public scala.io.Source externalSource(java.lang.String);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#477; //Method scala/xml/parsing/ExternalSources$class.externalSource:(Lscala/xml/parsing/ExternalSources;Ljava/lang/String;)Lscala/io/Source;
   5:	areturn
  LineNumberTable: 
   line 73: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/pull/XMLEventReader$Parser;
   0      6      1    systemId       Ljava/lang/String;


}

