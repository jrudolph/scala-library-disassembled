Compiled from "NodeSeq.scala"
public final class scala.xml.NodeSeq$$anonfun$newBuilder$1 extends java.lang.Object implements scala.Function1,scala.ScalaObject,java.io.Serializable
  SourceFile: "NodeSeq.scala"
  Scala: length = 0x
   
  InnerClass: 
   public final #70= #32 of #69; //$anonfun$newBuilder$1=class scala/xml/NodeSeq$$anonfun$newBuilder$1 of class scala/xml/NodeSeq
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	NodeSeq.scala;
const #3 = Asciz	<init>;
const #4 = Asciz	()V;
const #5 = Asciz	Code;
const #6 = Asciz	LineNumberTable;
const #7 = Asciz	java/lang/Object;
const #8 = class	#7;	//  java/lang/Object
const #9 = NameAndType	#3:#4;//  "<init>":()V
const #10 = Method	#8.#9;	//  java/lang/Object."<init>":()V
const #11 = Asciz	scala/Function1$class;
const #12 = class	#11;	//  scala/Function1$class
const #13 = Asciz	$init$;
const #14 = Asciz	(Lscala/Function1;)V;
const #15 = NameAndType	#13:#14;//  $init$:(Lscala/Function1;)V
const #16 = Method	#12.#15;	//  scala/Function1$class.$init$:(Lscala/Function1;)V
const #17 = Asciz	apply;
const #18 = Asciz	(Ljava/lang/Object;)Ljava/lang/Object;;
const #19 = Asciz	scala/collection/Sequence;
const #20 = class	#19;	//  scala/collection/Sequence
const #21 = Asciz	scala/runtime/ScalaRunTime$;
const #22 = class	#21;	//  scala/runtime/ScalaRunTime$
const #23 = Asciz	MODULE$;
const #24 = Asciz	Lscala/runtime/ScalaRunTime$;;
const #25 = NameAndType	#23:#24;//  MODULE$:Lscala/runtime/ScalaRunTime$;
const #26 = Field	#22.#25;	//  scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
const #27 = Asciz	boxArray;
const #28 = Asciz	(Ljava/lang/Object;)Lscala/runtime/BoxedArray;;
const #29 = NameAndType	#27:#28;//  boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
const #30 = Method	#22.#29;	//  scala/runtime/ScalaRunTime$.boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
const #31 = Asciz	scala/xml/NodeSeq$$anonfun$newBuilder$1;
const #32 = class	#31;	//  scala/xml/NodeSeq$$anonfun$newBuilder$1
const #33 = Asciz	(Lscala/collection/Sequence;)Lscala/xml/NodeSeq;;
const #34 = NameAndType	#17:#33;//  apply:(Lscala/collection/Sequence;)Lscala/xml/NodeSeq;
const #35 = Method	#32.#34;	//  scala/xml/NodeSeq$$anonfun$newBuilder$1.apply:(Lscala/collection/Sequence;)Lscala/xml/NodeSeq;
const #36 = Asciz	this;
const #37 = Asciz	Lscala/xml/NodeSeq$$anonfun$newBuilder$1;;
const #38 = Asciz	v1;
const #39 = Asciz	Ljava/lang/Object;;
const #40 = Asciz	LocalVariableTable;
const #41 = Asciz	scala/xml/NodeSeq$;
const #42 = class	#41;	//  scala/xml/NodeSeq$
const #43 = Asciz	Lscala/xml/NodeSeq$;;
const #44 = NameAndType	#23:#43;//  MODULE$:Lscala/xml/NodeSeq$;
const #45 = Field	#42.#44;	//  scala/xml/NodeSeq$.MODULE$:Lscala/xml/NodeSeq$;
const #46 = Asciz	fromSeq;
const #47 = NameAndType	#46:#33;//  fromSeq:(Lscala/collection/Sequence;)Lscala/xml/NodeSeq;
const #48 = Method	#42.#47;	//  scala/xml/NodeSeq$.fromSeq:(Lscala/collection/Sequence;)Lscala/xml/NodeSeq;
const #49 = Asciz	(Lscala/collection/Sequence<Lscala/xml/Node;>;)Lscala/xml/NodeSeq;;
const #50 = Asciz	Signature;
const #51 = Asciz	andThen;
const #52 = Asciz	(Lscala/Function1;)Lscala/Function1;;
const #53 = Asciz	(Lscala/Function1;Lscala/Function1;)Lscala/Function1;;
const #54 = NameAndType	#51:#53;//  andThen:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
const #55 = Method	#12.#54;	//  scala/Function1$class.andThen:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
const #56 = Asciz	g;
const #57 = Asciz	Lscala/Function1;;
const #58 = Asciz	compose;
const #59 = NameAndType	#58:#53;//  compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
const #60 = Method	#12.#59;	//  scala/Function1$class.compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
const #61 = Asciz	toString;
const #62 = Asciz	()Ljava/lang/String;;
const #63 = Asciz	(Lscala/Function1;)Ljava/lang/String;;
const #64 = NameAndType	#61:#63;//  toString:(Lscala/Function1;)Ljava/lang/String;
const #65 = Method	#12.#64;	//  scala/Function1$class.toString:(Lscala/Function1;)Ljava/lang/String;
const #66 = Asciz	Scala;
const #67 = Asciz	InnerClasses;
const #68 = Asciz	scala/xml/NodeSeq;
const #69 = class	#68;	//  scala/xml/NodeSeq
const #70 = Asciz	$anonfun$newBuilder$1;
const #71 = Asciz	scala/Function1;
const #72 = class	#71;	//  scala/Function1
const #73 = Asciz	scala/ScalaObject;
const #74 = class	#73;	//  scala/ScalaObject
const #75 = Asciz	java/io/Serializable;
const #76 = class	#75;	//  java/io/Serializable

{
public scala.xml.NodeSeq$$anonfun$newBuilder$1();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokespecial	#10; //Method java/lang/Object."<init>":()V
   4:	aload_0
   5:	invokestatic	#16; //Method scala/Function1$class.$init$:(Lscala/Function1;)V
   8:	return
  LineNumberTable: 
   line 30: 0


public final java.lang.Object apply(java.lang.Object);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	instanceof	#20; //class scala/collection/Sequence
   5:	ifeq	12
   8:	aload_1
   9:	goto	19
   12:	getstatic	#26; //Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   15:	aload_1
   16:	invokevirtual	#30; //Method scala/runtime/ScalaRunTime$.boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
   19:	checkcast	#20; //class scala/collection/Sequence
   22:	invokevirtual	#35; //Method apply:(Lscala/collection/Sequence;)Lscala/xml/NodeSeq;
   25:	areturn
  LineNumberTable: 
   line 30: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      26      0    this       Lscala/xml/NodeSeq$$anonfun$newBuilder$1;
   0      26      1    v1       Ljava/lang/Object;


public final scala.xml.NodeSeq apply(scala.collection.Sequence);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	getstatic	#45; //Field scala/xml/NodeSeq$.MODULE$:Lscala/xml/NodeSeq$;
   3:	aload_1
   4:	invokevirtual	#48; //Method scala/xml/NodeSeq$.fromSeq:(Lscala/collection/Sequence;)Lscala/xml/NodeSeq;
   7:	areturn
  LineNumberTable: 
   line 30: 0

  Signature: length = 0x2
   00 31 

public scala.Function1 andThen(scala.Function1);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#55; //Method scala/Function1$class.andThen:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
   5:	areturn
  LineNumberTable: 
   line 30: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/NodeSeq$$anonfun$newBuilder$1;
   0      6      1    g       Lscala/Function1;


public scala.Function1 compose(scala.Function1);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#60; //Method scala/Function1$class.compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
   5:	areturn
  LineNumberTable: 
   line 30: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/NodeSeq$$anonfun$newBuilder$1;
   0      6      1    g       Lscala/Function1;


public java.lang.String toString();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#65; //Method scala/Function1$class.toString:(Lscala/Function1;)Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 30: 0


}

