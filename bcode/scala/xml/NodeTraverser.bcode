Compiled from "NodeTraverser.scala"
public abstract class scala.xml.NodeTraverser extends scala.xml.parsing.MarkupHandler implements scala.ScalaObject
  SourceFile: "NodeTraverser.scala"
  ScalaSig: length = 0xC9
   05 00 22 06 08 01 02 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF81 00 07 02 0D 4E
   6F 64 65 54 72 61 76 65 72 73 65 72 0A 02 03 04
   01 03 78 6D 6C 0A 01 05 01 05 73 63 61 6C 61 03
   00 13 03 00 08 0E 10 02 09 0C 0D 01 0A 0A 02 0B
   02 01 07 70 61 72 73 69 6E 67 09 02 0D 0A 02 0D
   4D 61 72 6B 75 70 48 61 6E 64 6C 65 72 10 02 0F
   10 0D 01 04 09 02 11 04 02 0B 53 63 61 6C 61 4F
   62 6A 65 63 74 08 05 13 00 FFFFFF84 00 14 01 06 3C 69
   6E 69 74 3E 14 01 15 10 02 16 00 0D 01 02 08 05
   18 00 FFFFFF84 00 19 01 08 74 72 61 76 65 72 73 65 14
   02 1A 1D 10 02 0F 1B 09 02 1C 04 02 04 55 6E 69
   74 08 05 1E 17 FFFFFFC0 00 1F 01 01 6E 10 02 16 20 09
   02 21 02 02 04 4E 6F 64 65 
  InnerClass: 
   public final #123= #78 of #23; //$anonfun$traverse$1=class scala/xml/NodeTraverser$$anonfun$traverse$1 of class scala/xml/NodeTraverser
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	NodeTraverser.scala;
const #3 = Asciz	<init>;
const #4 = Asciz	()V;
const #5 = Asciz	Code;
const #6 = Asciz	LineNumberTable;
const #7 = Asciz	scala/xml/parsing/MarkupHandler;
const #8 = class	#7;	//  scala/xml/parsing/MarkupHandler
const #9 = NameAndType	#3:#4;//  "<init>":()V
const #10 = Method	#8.#9;	//  scala/xml/parsing/MarkupHandler."<init>":()V
const #11 = Asciz	traverse;
const #12 = Asciz	(Lscala/xml/Node;)V;
const #13 = Asciz	scala/xml/ProcInstr;
const #14 = class	#13;	//  scala/xml/ProcInstr
const #15 = Asciz	target;
const #16 = Asciz	()Ljava/lang/String;;
const #17 = NameAndType	#15:#16;//  target:()Ljava/lang/String;
const #18 = Method	#14.#17;	//  scala/xml/ProcInstr.target:()Ljava/lang/String;
const #19 = Asciz	text;
const #20 = NameAndType	#19:#16;//  text:()Ljava/lang/String;
const #21 = Method	#14.#20;	//  scala/xml/ProcInstr.text:()Ljava/lang/String;
const #22 = Asciz	scala/xml/NodeTraverser;
const #23 = class	#22;	//  scala/xml/NodeTraverser
const #24 = Asciz	procInstr;
const #25 = Asciz	(ILjava/lang/String;Ljava/lang/String;)Lscala/xml/NodeSeq;;
const #26 = NameAndType	#24:#25;//  procInstr:(ILjava/lang/String;Ljava/lang/String;)Lscala/xml/NodeSeq;
const #27 = Method	#23.#26;	//  scala/xml/NodeTraverser.procInstr:(ILjava/lang/String;Ljava/lang/String;)Lscala/xml/NodeSeq;
const #28 = Asciz	scala/xml/Comment;
const #29 = class	#28;	//  scala/xml/Comment
const #30 = Method	#29.#20;	//  scala/xml/Comment.text:()Ljava/lang/String;
const #31 = Asciz	comment;
const #32 = Asciz	(ILjava/lang/String;)Lscala/xml/NodeSeq;;
const #33 = NameAndType	#31:#32;//  comment:(ILjava/lang/String;)Lscala/xml/NodeSeq;
const #34 = Method	#23.#33;	//  scala/xml/NodeTraverser.comment:(ILjava/lang/String;)Lscala/xml/NodeSeq;
const #35 = Asciz	scala/xml/Text;
const #36 = class	#35;	//  scala/xml/Text
const #37 = Asciz	data;
const #38 = Asciz	()Ljava/lang/Object;;
const #39 = NameAndType	#37:#38;//  data:()Ljava/lang/Object;
const #40 = Method	#36.#39;	//  scala/xml/Text.data:()Ljava/lang/Object;
const #41 = Asciz	java/lang/String;
const #42 = class	#41;	//  java/lang/String
const #43 = NameAndType	#19:#32;//  text:(ILjava/lang/String;)Lscala/xml/NodeSeq;
const #44 = Method	#23.#43;	//  scala/xml/NodeTraverser.text:(ILjava/lang/String;)Lscala/xml/NodeSeq;
const #45 = Asciz	scala/xml/EntityRef;
const #46 = class	#45;	//  scala/xml/EntityRef
const #47 = Asciz	entityName;
const #48 = NameAndType	#47:#16;//  entityName:()Ljava/lang/String;
const #49 = Method	#46.#48;	//  scala/xml/EntityRef.entityName:()Ljava/lang/String;
const #50 = Asciz	entityRef;
const #51 = NameAndType	#50:#32;//  entityRef:(ILjava/lang/String;)Lscala/xml/NodeSeq;
const #52 = Method	#23.#51;	//  scala/xml/NodeTraverser.entityRef:(ILjava/lang/String;)Lscala/xml/NodeSeq;
const #53 = Asciz	scala/xml/Node;
const #54 = class	#53;	//  scala/xml/Node
const #55 = Asciz	prefix;
const #56 = NameAndType	#55:#16;//  prefix:()Ljava/lang/String;
const #57 = Method	#54.#56;	//  scala/xml/Node.prefix:()Ljava/lang/String;
const #58 = Asciz	label;
const #59 = NameAndType	#58:#16;//  label:()Ljava/lang/String;
const #60 = Method	#54.#59;	//  scala/xml/Node.label:()Ljava/lang/String;
const #61 = Asciz	attributes;
const #62 = Asciz	()Lscala/xml/MetaData;;
const #63 = NameAndType	#61:#62;//  attributes:()Lscala/xml/MetaData;
const #64 = Method	#54.#63;	//  scala/xml/Node.attributes:()Lscala/xml/MetaData;
const #65 = Asciz	scope;
const #66 = Asciz	()Lscala/xml/NamespaceBinding;;
const #67 = NameAndType	#65:#66;//  scope:()Lscala/xml/NamespaceBinding;
const #68 = Method	#54.#67;	//  scala/xml/Node.scope:()Lscala/xml/NamespaceBinding;
const #69 = Asciz	elemStart;
const #70 = Asciz	(ILjava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;)V;
const #71 = NameAndType	#69:#70;//  elemStart:(ILjava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;)V
const #72 = Method	#23.#71;	//  scala/xml/NodeTraverser.elemStart:(ILjava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;)V
const #73 = Asciz	child;
const #74 = Asciz	()Lscala/collection/Sequence;;
const #75 = NameAndType	#73:#74;//  child:()Lscala/collection/Sequence;
const #76 = Method	#54.#75;	//  scala/xml/Node.child:()Lscala/collection/Sequence;
const #77 = Asciz	scala/xml/NodeTraverser$$anonfun$traverse$1;
const #78 = class	#77;	//  scala/xml/NodeTraverser$$anonfun$traverse$1
const #79 = Asciz	(Lscala/xml/NodeTraverser;)V;
const #80 = NameAndType	#3:#79;//  "<init>":(Lscala/xml/NodeTraverser;)V
const #81 = Method	#78.#80;	//  scala/xml/NodeTraverser$$anonfun$traverse$1."<init>":(Lscala/xml/NodeTraverser;)V
const #82 = Asciz	scala/collection/generic/IterableTemplate;
const #83 = class	#82;	//  scala/collection/generic/IterableTemplate
const #84 = Asciz	foreach;
const #85 = Asciz	(Lscala/Function1;)V;
const #86 = NameAndType	#84:#85;//  foreach:(Lscala/Function1;)V
const #87 = InterfaceMethod	#83.#86;	//  scala/collection/generic/IterableTemplate.foreach:(Lscala/Function1;)V
const #88 = Asciz	scala/xml/NodeSeq$;
const #89 = class	#88;	//  scala/xml/NodeSeq$
const #90 = Asciz	MODULE$;
const #91 = Asciz	Lscala/xml/NodeSeq$;;
const #92 = NameAndType	#90:#91;//  MODULE$:Lscala/xml/NodeSeq$;
const #93 = Field	#89.#92;	//  scala/xml/NodeSeq$.MODULE$:Lscala/xml/NodeSeq$;
const #94 = Asciz	fromSeq;
const #95 = Asciz	(Lscala/collection/Sequence;)Lscala/xml/NodeSeq;;
const #96 = NameAndType	#94:#95;//  fromSeq:(Lscala/collection/Sequence;)Lscala/xml/NodeSeq;
const #97 = Method	#89.#96;	//  scala/xml/NodeSeq$.fromSeq:(Lscala/collection/Sequence;)Lscala/xml/NodeSeq;
const #98 = Asciz	elem;
const #99 = Asciz	(ILjava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/xml/NodeSeq;)Lscala/xml/NodeSeq;;
const #100 = NameAndType	#98:#99;//  elem:(ILjava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/xml/NodeSeq;)Lscala/xml/NodeSeq;
const #101 = Method	#23.#100;	//  scala/xml/NodeTraverser.elem:(ILjava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/xml/NodeSeq;)Lscala/xml/NodeSeq;
const #102 = Asciz	elemEnd;
const #103 = Asciz	(ILjava/lang/String;Ljava/lang/String;)V;
const #104 = NameAndType	#102:#103;//  elemEnd:(ILjava/lang/String;Ljava/lang/String;)V
const #105 = Method	#23.#104;	//  scala/xml/NodeTraverser.elemEnd:(ILjava/lang/String;Ljava/lang/String;)V
const #106 = Asciz	this;
const #107 = Asciz	Lscala/xml/NodeTraverser;;
const #108 = Asciz	n;
const #109 = Asciz	Lscala/xml/Node;;
const #110 = Asciz	temp1;
const #111 = Asciz	temp2;
const #112 = Asciz	Lscala/xml/ProcInstr;;
const #113 = Asciz	x;
const #114 = Asciz	temp5;
const #115 = Asciz	Lscala/xml/Comment;;
const #116 = Asciz	temp7;
const #117 = Asciz	Lscala/xml/Text;;
const #118 = Asciz	temp9;
const #119 = Asciz	Lscala/xml/EntityRef;;
const #120 = Asciz	LocalVariableTable;
const #121 = Asciz	ScalaSig;
const #122 = Asciz	InnerClasses;
const #123 = Asciz	$anonfun$traverse$1;
const #124 = Asciz	scala/ScalaObject;
const #125 = class	#124;	//  scala/ScalaObject

{
public scala.xml.NodeTraverser();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokespecial	#10; //Method scala/xml/parsing/MarkupHandler."<init>":()V
   4:	return
  LineNumberTable: 
   line 19: 0


public void traverse(scala.xml.Node);
  Code:
   Stack=8, Locals=8, Args_size=2
   0:	aload_1
   1:	astore_2
   2:	aload_2
   3:	instanceof	#14; //class scala/xml/ProcInstr
   6:	ifeq	36
   9:	aload_2
   10:	checkcast	#14; //class scala/xml/ProcInstr
   13:	astore_3
   14:	aload_3
   15:	astore	4
   17:	aload_0
   18:	iconst_0
   19:	aload	4
   21:	invokevirtual	#18; //Method scala/xml/ProcInstr.target:()Ljava/lang/String;
   24:	aload	4
   26:	invokevirtual	#21; //Method scala/xml/ProcInstr.text:()Ljava/lang/String;
   29:	invokevirtual	#27; //Method procInstr:(ILjava/lang/String;Ljava/lang/String;)Lscala/xml/NodeSeq;
   32:	pop
   33:	goto	203
   36:	aload_2
   37:	instanceof	#29; //class scala/xml/Comment
   40:	ifeq	63
   43:	aload_2
   44:	checkcast	#29; //class scala/xml/Comment
   47:	astore	5
   49:	aload_0
   50:	iconst_0
   51:	aload	5
   53:	invokevirtual	#30; //Method scala/xml/Comment.text:()Ljava/lang/String;
   56:	invokevirtual	#34; //Method comment:(ILjava/lang/String;)Lscala/xml/NodeSeq;
   59:	pop
   60:	goto	203
   63:	aload_2
   64:	instanceof	#36; //class scala/xml/Text
   67:	ifeq	93
   70:	aload_2
   71:	checkcast	#36; //class scala/xml/Text
   74:	astore	6
   76:	aload_0
   77:	iconst_0
   78:	aload	6
   80:	invokevirtual	#40; //Method scala/xml/Text.data:()Ljava/lang/Object;
   83:	checkcast	#42; //class java/lang/String
   86:	invokevirtual	#44; //Method text:(ILjava/lang/String;)Lscala/xml/NodeSeq;
   89:	pop
   90:	goto	203
   93:	aload_2
   94:	instanceof	#46; //class scala/xml/EntityRef
   97:	ifeq	120
   100:	aload_2
   101:	checkcast	#46; //class scala/xml/EntityRef
   104:	astore	7
   106:	aload_0
   107:	iconst_0
   108:	aload	7
   110:	invokevirtual	#49; //Method scala/xml/EntityRef.entityName:()Ljava/lang/String;
   113:	invokevirtual	#52; //Method entityRef:(ILjava/lang/String;)Lscala/xml/NodeSeq;
   116:	pop
   117:	goto	203
   120:	aload_0
   121:	iconst_0
   122:	aload_1
   123:	invokevirtual	#57; //Method scala/xml/Node.prefix:()Ljava/lang/String;
   126:	aload_1
   127:	invokevirtual	#60; //Method scala/xml/Node.label:()Ljava/lang/String;
   130:	aload_1
   131:	invokevirtual	#64; //Method scala/xml/Node.attributes:()Lscala/xml/MetaData;
   134:	aload_1
   135:	invokevirtual	#68; //Method scala/xml/Node.scope:()Lscala/xml/NamespaceBinding;
   138:	invokevirtual	#72; //Method elemStart:(ILjava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;)V
   141:	aload_1
   142:	invokevirtual	#76; //Method scala/xml/Node.child:()Lscala/collection/Sequence;
   145:	new	#78; //class scala/xml/NodeTraverser$$anonfun$traverse$1
   148:	dup
   149:	aload_0
   150:	invokespecial	#81; //Method scala/xml/NodeTraverser$$anonfun$traverse$1."<init>":(Lscala/xml/NodeTraverser;)V
   153:	invokeinterface	#87,  2; //InterfaceMethod scala/collection/generic/IterableTemplate.foreach:(Lscala/Function1;)V
   158:	aload_0
   159:	iconst_0
   160:	aload_1
   161:	invokevirtual	#57; //Method scala/xml/Node.prefix:()Ljava/lang/String;
   164:	aload_1
   165:	invokevirtual	#60; //Method scala/xml/Node.label:()Ljava/lang/String;
   168:	aload_1
   169:	invokevirtual	#64; //Method scala/xml/Node.attributes:()Lscala/xml/MetaData;
   172:	aload_1
   173:	invokevirtual	#68; //Method scala/xml/Node.scope:()Lscala/xml/NamespaceBinding;
   176:	getstatic	#93; //Field scala/xml/NodeSeq$.MODULE$:Lscala/xml/NodeSeq$;
   179:	aload_1
   180:	invokevirtual	#76; //Method scala/xml/Node.child:()Lscala/collection/Sequence;
   183:	invokevirtual	#97; //Method scala/xml/NodeSeq$.fromSeq:(Lscala/collection/Sequence;)Lscala/xml/NodeSeq;
   186:	invokevirtual	#101; //Method elem:(ILjava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/xml/NodeSeq;)Lscala/xml/NodeSeq;
   189:	pop
   190:	aload_0
   191:	iconst_0
   192:	aload_1
   193:	invokevirtual	#57; //Method scala/xml/Node.prefix:()Ljava/lang/String;
   196:	aload_1
   197:	invokevirtual	#60; //Method scala/xml/Node.label:()Ljava/lang/String;
   200:	invokevirtual	#105; //Method elemEnd:(ILjava/lang/String;Ljava/lang/String;)V
   203:	return
  LineNumberTable: 
   line 21: 0
   line 22: 14
   line 23: 17
   line 21: 36
   line 25: 49
   line 24: 51
   line 25: 53
   line 21: 63
   line 27: 76
   line 26: 78
   line 27: 80
   line 21: 93
   line 29: 106
   line 28: 108
   line 29: 110
   line 31: 120
   line 32: 141
   line 33: 158
   line 34: 190
   line 21: 203

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      204      0    this       Lscala/xml/NodeTraverser;
   0      204      1    n       Lscala/xml/Node;
   2      202      2    temp1       Lscala/xml/Node;
   14      19      3    temp2       Lscala/xml/ProcInstr;
   17      16      4    x       Lscala/xml/ProcInstr;
   49      11      5    temp5       Lscala/xml/Comment;
   76      14      6    temp7       Lscala/xml/Text;
   106      11      7    temp9       Lscala/xml/EntityRef;


}

