Compiled from "RuleTransformer.scala"
public class scala.xml.transform.RuleTransformer extends scala.xml.transform.BasicTransformer implements scala.ScalaObject
  SourceFile: "RuleTransformer.scala"
  ScalaSig: length = 0x134
   05 00 33 06 08 01 02 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF80 00 09 02 0F 52
   75 6C 65 54 72 61 6E 73 66 6F 72 6D 65 72 0A 02
   03 04 01 09 74 72 61 6E 73 66 6F 72 6D 0A 02 05
   06 01 03 78 6D 6C 0A 01 07 01 05 73 63 61 6C 61
   03 00 13 03 00 0A 0E 10 02 0B 0C 0D 01 02 09 02
   0D 02 02 10 42 61 73 69 63 54 72 61 6E 73 66 6F
   72 6D 65 72 10 02 0F 10 0D 01 06 09 02 11 06 02
   0B 53 63 61 6C 61 4F 62 6A 65 63 74 08 08 13 00
   FFFFFF82 FFFFFF80 FFFFFFA0 FFFFFF80 04 14 01 05 72 75 6C 65 73 10 03 0F
   15 17 09 02 16 06 02 0A 3C 72 65 70 65 61 74 65
   64 3E 10 02 0B 18 09 02 19 02 02 0B 52 65 77 72
   69 74 65 52 75 6C 65 08 05 1B 00 FFFFFF84 00 1C 01 06
   3C 69 6E 69 74 3E 14 02 1D 1E 10 02 0B 00 08 05
   13 1A FFFFFFC0 00 14 08 05 03 00 FFFFFF84 20 20 14 02 21 31
   10 03 22 2A 2D 0E 02 23 28 0E 02 24 27 0D 01 25
   0A 02 26 08 01 06 3C 72 6F 6F 74 3E 09 01 07 09
   02 29 06 01 07 70 61 63 6B 61 67 65 09 02 2B 2C
   02 03 53 65 71 0A 02 29 06 10 02 2E 2F 0D 01 04
   09 02 30 04 02 04 4E 6F 64 65 08 05 32 1F FFFFFFC0 00
   2D 01 01 6E 
  InnerClass: 
   public final #56= #29 of #12; //$anonfun$transform$1=class scala/xml/transform/RuleTransformer$$anonfun$transform$1 of class scala/xml/transform/RuleTransformer
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	RuleTransformer.scala;
const #3 = Asciz	rules;
const #4 = Asciz	Lscala/collection/Sequence;;
const #5 = Asciz	Lscala/collection/Sequence<Lscala/xml/transform/RewriteRule;>;;
const #6 = Asciz	Signature;
const #7 = Asciz	<init>;
const #8 = Asciz	(Lscala/collection/Sequence;)V;
const #9 = Asciz	Code;
const #10 = Asciz	LineNumberTable;
const #11 = Asciz	scala/xml/transform/RuleTransformer;
const #12 = class	#11;	//  scala/xml/transform/RuleTransformer
const #13 = NameAndType	#3:#4;//  rules:Lscala/collection/Sequence;
const #14 = Field	#12.#13;	//  scala/xml/transform/RuleTransformer.rules:Lscala/collection/Sequence;
const #15 = Asciz	scala/xml/transform/BasicTransformer;
const #16 = class	#15;	//  scala/xml/transform/BasicTransformer
const #17 = Asciz	()V;
const #18 = NameAndType	#7:#17;//  "<init>":()V
const #19 = Method	#16.#18;	//  scala/xml/transform/BasicTransformer."<init>":()V
const #20 = Asciz	this;
const #21 = Asciz	Lscala/xml/transform/RuleTransformer;;
const #22 = Asciz	LocalVariableTable;
const #23 = Asciz	(Lscala/collection/Sequence<Lscala/xml/transform/RewriteRule;>;)V;
const #24 = Asciz	transform;
const #25 = Asciz	(Lscala/xml/Node;)Lscala/collection/Sequence;;
const #26 = NameAndType	#24:#25;//  transform:(Lscala/xml/Node;)Lscala/collection/Sequence;
const #27 = Method	#16.#26;	//  scala/xml/transform/BasicTransformer.transform:(Lscala/xml/Node;)Lscala/collection/Sequence;
const #28 = Asciz	scala/xml/transform/RuleTransformer$$anonfun$transform$1;
const #29 = class	#28;	//  scala/xml/transform/RuleTransformer$$anonfun$transform$1
const #30 = Asciz	(Lscala/xml/transform/RuleTransformer;)V;
const #31 = NameAndType	#7:#30;//  "<init>":(Lscala/xml/transform/RuleTransformer;)V
const #32 = Method	#29.#31;	//  scala/xml/transform/RuleTransformer$$anonfun$transform$1."<init>":(Lscala/xml/transform/RuleTransformer;)V
const #33 = Asciz	scala/collection/generic/TraversableTemplate;
const #34 = class	#33;	//  scala/collection/generic/TraversableTemplate
const #35 = Asciz	foldLeft;
const #36 = Asciz	(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;;
const #37 = NameAndType	#35:#36;//  foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
const #38 = InterfaceMethod	#34.#37;	//  scala/collection/generic/TraversableTemplate.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
const #39 = Asciz	scala/collection/Sequence;
const #40 = class	#39;	//  scala/collection/Sequence
const #41 = Asciz	scala/runtime/ScalaRunTime$;
const #42 = class	#41;	//  scala/runtime/ScalaRunTime$
const #43 = Asciz	MODULE$;
const #44 = Asciz	Lscala/runtime/ScalaRunTime$;;
const #45 = NameAndType	#43:#44;//  MODULE$:Lscala/runtime/ScalaRunTime$;
const #46 = Field	#42.#45;	//  scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
const #47 = Asciz	boxArray;
const #48 = Asciz	(Ljava/lang/Object;)Lscala/runtime/BoxedArray;;
const #49 = NameAndType	#47:#48;//  boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
const #50 = Method	#42.#49;	//  scala/runtime/ScalaRunTime$.boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
const #51 = Asciz	n;
const #52 = Asciz	Lscala/xml/Node;;
const #53 = Asciz	(Lscala/xml/Node;)Lscala/collection/Sequence<Lscala/xml/Node;>;;
const #54 = Asciz	ScalaSig;
const #55 = Asciz	InnerClasses;
const #56 = Asciz	$anonfun$transform$1;
const #57 = Asciz	scala/ScalaObject;
const #58 = class	#57;	//  scala/ScalaObject

{
public scala.xml.transform.RuleTransformer(scala.collection.Sequence);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	putfield	#14; //Field rules:Lscala/collection/Sequence;
   5:	aload_0
   6:	invokespecial	#19; //Method scala/xml/transform/BasicTransformer."<init>":()V
   9:	return
  LineNumberTable: 
   line 15: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    this       Lscala/xml/transform/RuleTransformer;
   0      10      1    rules       Lscala/collection/Sequence;

  Signature: length = 0x2
   00 17 

public scala.collection.Sequence transform(scala.xml.Node);
  Code:
   Stack=5, Locals=3, Args_size=2
   0:	aload_0
   1:	getfield	#14; //Field rules:Lscala/collection/Sequence;
   4:	aload_0
   5:	aload_1
   6:	invokespecial	#27; //Method scala/xml/transform/BasicTransformer.transform:(Lscala/xml/Node;)Lscala/collection/Sequence;
   9:	new	#29; //class scala/xml/transform/RuleTransformer$$anonfun$transform$1
   12:	dup
   13:	aload_0
   14:	invokespecial	#32; //Method scala/xml/transform/RuleTransformer$$anonfun$transform$1."<init>":(Lscala/xml/transform/RuleTransformer;)V
   17:	invokeinterface	#38,  3; //InterfaceMethod scala/collection/generic/TraversableTemplate.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
   22:	astore_2
   23:	aload_2
   24:	instanceof	#40; //class scala/collection/Sequence
   27:	ifeq	34
   30:	aload_2
   31:	goto	41
   34:	getstatic	#46; //Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   37:	aload_2
   38:	invokevirtual	#50; //Method scala/runtime/ScalaRunTime$.boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
   41:	checkcast	#40; //class scala/collection/Sequence
   44:	areturn
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      45      0    this       Lscala/xml/transform/RuleTransformer;
   0      45      1    n       Lscala/xml/Node;

  Signature: length = 0x2
   00 35 

}

