Compiled from "BasicTransformer.scala"
public abstract class scala.xml.transform.BasicTransformer extends java.lang.Object implements scala.Function1,scala.ScalaObject
  SourceFile: "BasicTransformer.scala"
  Signature: length = 0x2
   00 FFFFFFD0 
  ScalaSig: length = 0x1C2
   05 00 4E 06 08 01 02 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF81 00 09 02 10 42
   61 73 69 63 54 72 61 6E 73 66 6F 72 6D 65 72 0A
   02 03 04 01 09 74 72 61 6E 73 66 6F 72 6D 0A 02
   05 06 01 03 78 6D 6C 0A 01 07 01 05 73 63 61 6C
   61 03 00 13 04 00 0A 12 1A 10 02 0B 10 0D 01 0C
   0A 02 0D 0E 01 04 6C 61 6E 67 0A 01 0F 01 04 6A
   61 76 61 09 02 11 0C 02 06 4F 62 6A 65 63 74 10
   04 13 14 16 16 0D 01 06 09 02 15 06 02 09 46 75
   6E 63 74 69 6F 6E 31 10 02 17 18 0D 01 04 09 02
   19 04 02 04 4E 6F 64 65 10 02 13 1B 09 02 1C 06
   02 0B 53 63 61 6C 61 4F 62 6A 65 63 74 08 05 1E
   00 FFFFFF84 00 1F 01 06 3C 69 6E 69 74 3E 14 01 20 10
   02 21 00 0D 01 02 08 05 23 00 FFFFFF84 08 24 01 09 75
   6E 63 68 61 6E 67 65 64 14 03 25 28 2A 10 02 13
   26 09 02 27 06 02 07 42 6F 6F 6C 65 61 6E 08 05
   29 22 FFFFFFC0 00 16 01 01 6E 08 05 2B 22 FFFFFFC0 00 2C 01
   02 6E 73 10 03 2D 35 16 0E 02 2E 33 0E 02 2F 32
   0D 01 30 0A 02 31 08 01 06 3C 72 6F 6F 74 3E 09
   01 07 09 02 34 06 01 07 70 61 63 6B 61 67 65 09
   02 36 37 02 03 53 65 71 0A 02 34 06 08 05 03 00
   FFFFFF84 00 39 14 03 2C 3A 3F 08 05 3B 38 FFFFFFC0 00 3C 01
   02 69 74 10 03 2D 3D 16 09 02 3E 37 02 08 49 74
   65 72 61 74 6F 72 08 05 40 38 FFFFFFC0 00 41 01 02 6E
   62 10 02 17 42 09 02 43 04 02 0A 4E 6F 64 65 42
   75 66 66 65 72 08 05 03 00 FFFFFF84 00 45 14 02 2C 46
   08 05 2B 44 FFFFFFC0 00 2C 08 05 03 00 FFFFFF84 00 48 14 02
   2C 49 08 05 29 47 FFFFFFC0 00 16 08 05 4B 00 FFFFFF84 00 4C
   01 05 61 70 70 6C 79 14 02 16 4D 08 05 29 4A FFFFFFC0
   00 16 
  InnerClass: 
   public final #211= #149 of #20; //$anonfun$transform$2=class scala/xml/transform/BasicTransformer$$anonfun$transform$2 of class scala/xml/transform/BasicTransformer
   public final #212= #171 of #20; //$anonfun$transform$1=class scala/xml/transform/BasicTransformer$$anonfun$transform$1 of class scala/xml/transform/BasicTransformer
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	BasicTransformer.scala;
const #3 = Asciz	<init>;
const #4 = Asciz	()V;
const #5 = Asciz	Code;
const #6 = Asciz	LineNumberTable;
const #7 = Asciz	java/lang/Object;
const #8 = class	#7;	//  java/lang/Object
const #9 = NameAndType	#3:#4;//  "<init>":()V
const #10 = Method	#8.#9;	//  java/lang/Object."<init>":()V
const #11 = Asciz	scala/Function1$class;
const #12 = class	#11;	//  scala/Function1$class
const #13 = Asciz	$init$;
const #14 = Asciz	(Lscala/Function1;)V;
const #15 = NameAndType	#13:#14;//  $init$:(Lscala/Function1;)V
const #16 = Method	#12.#15;	//  scala/Function1$class.$init$:(Lscala/Function1;)V
const #17 = Asciz	testForChange$1;
const #18 = Asciz	(Lscala/xml/Node;)Lscala/Option;;
const #19 = Asciz	scala/xml/transform/BasicTransformer;
const #20 = class	#19;	//  scala/xml/transform/BasicTransformer
const #21 = Asciz	transform;
const #22 = Asciz	(Lscala/xml/Node;)Lscala/collection/Sequence;;
const #23 = NameAndType	#21:#22;//  transform:(Lscala/xml/Node;)Lscala/collection/Sequence;
const #24 = Method	#20.#23;	//  scala/xml/transform/BasicTransformer.transform:(Lscala/xml/Node;)Lscala/collection/Sequence;
const #25 = Asciz	unchanged;
const #26 = Asciz	(Lscala/xml/Node;Lscala/collection/Sequence;)Z;
const #27 = NameAndType	#25:#26;//  unchanged:(Lscala/xml/Node;Lscala/collection/Sequence;)Z
const #28 = Method	#20.#27;	//  scala/xml/transform/BasicTransformer.unchanged:(Lscala/xml/Node;Lscala/collection/Sequence;)Z
const #29 = Asciz	scala/None$;
const #30 = class	#29;	//  scala/None$
const #31 = Asciz	MODULE$;
const #32 = Asciz	Lscala/None$;;
const #33 = NameAndType	#31:#32;//  MODULE$:Lscala/None$;
const #34 = Field	#30.#33;	//  scala/None$.MODULE$:Lscala/None$;
const #35 = Asciz	scala/Some;
const #36 = class	#35;	//  scala/Some
const #37 = Asciz	(Ljava/lang/Object;)V;
const #38 = NameAndType	#3:#37;//  "<init>":(Ljava/lang/Object;)V
const #39 = Method	#36.#38;	//  scala/Some."<init>":(Ljava/lang/Object;)V
const #40 = Asciz	this;
const #41 = Asciz	Lscala/xml/transform/BasicTransformer;;
const #42 = Asciz	n;
const #43 = Asciz	Lscala/xml/Node;;
const #44 = Asciz	n2;
const #45 = Asciz	Lscala/collection/Sequence;;
const #46 = Asciz	LocalVariableTable;
const #47 = Asciz	apply;
const #48 = Asciz	(Ljava/lang/Object;)Ljava/lang/Object;;
const #49 = Asciz	scala/xml/Node;
const #50 = class	#49;	//  scala/xml/Node
const #51 = Asciz	(Lscala/xml/Node;)Lscala/xml/Node;;
const #52 = NameAndType	#47:#51;//  apply:(Lscala/xml/Node;)Lscala/xml/Node;
const #53 = Method	#20.#52;	//  scala/xml/transform/BasicTransformer.apply:(Lscala/xml/Node;)Lscala/xml/Node;
const #54 = Asciz	v1;
const #55 = Asciz	Ljava/lang/Object;;
const #56 = Asciz	scala/collection/generic/SequenceTemplate;
const #57 = class	#56;	//  scala/collection/generic/SequenceTemplate
const #58 = Asciz	length;
const #59 = Asciz	()I;
const #60 = NameAndType	#58:#59;//  length:()I
const #61 = InterfaceMethod	#57.#60;	//  scala/collection/generic/SequenceTemplate.length:()I
const #62 = Asciz	java/lang/UnsupportedOperationException;
const #63 = class	#62;	//  java/lang/UnsupportedOperationException
const #64 = Asciz	transform must return single node for root;
const #65 = String	#64;	//  transform must return single node for root
const #66 = Asciz	(Ljava/lang/String;)V;
const #67 = NameAndType	#3:#66;//  "<init>":(Ljava/lang/String;)V
const #68 = Method	#63.#67;	//  java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
const #69 = Asciz	scala/collection/generic/IterableTemplate;
const #70 = class	#69;	//  scala/collection/generic/IterableTemplate
const #71 = Asciz	head;
const #72 = Asciz	()Ljava/lang/Object;;
const #73 = NameAndType	#71:#72;//  head:()Ljava/lang/Object;
const #74 = InterfaceMethod	#70.#73;	//  scala/collection/generic/IterableTemplate.head:()Ljava/lang/Object;
const #75 = Asciz	seq;
const #76 = Asciz	doTransform;
const #77 = Asciz	()Z;
const #78 = NameAndType	#76:#77;//  doTransform:()Z
const #79 = Method	#50.#78;	//  scala/xml/Node.doTransform:()Z
const #80 = Asciz	scala/xml/Group;
const #81 = class	#80;	//  scala/xml/Group
const #82 = Asciz	nodes;
const #83 = Asciz	()Lscala/collection/Sequence;;
const #84 = NameAndType	#82:#83;//  nodes:()Lscala/collection/Sequence;
const #85 = Method	#81.#84;	//  scala/xml/Group.nodes:()Lscala/collection/Sequence;
const #86 = Asciz	(Lscala/collection/Sequence;)Lscala/collection/Sequence;;
const #87 = NameAndType	#21:#86;//  transform:(Lscala/collection/Sequence;)Lscala/collection/Sequence;
const #88 = Method	#20.#87;	//  scala/xml/transform/BasicTransformer.transform:(Lscala/collection/Sequence;)Lscala/collection/Sequence;
const #89 = Asciz	(Lscala/collection/Sequence;)V;
const #90 = NameAndType	#3:#89;//  "<init>":(Lscala/collection/Sequence;)V
const #91 = Method	#81.#90;	//  scala/xml/Group."<init>":(Lscala/collection/Sequence;)V
const #92 = Asciz	child;
const #93 = NameAndType	#92:#83;//  child:()Lscala/collection/Sequence;
const #94 = Method	#50.#93;	//  scala/xml/Node.child:()Lscala/collection/Sequence;
const #95 = Asciz	scala/xml/Elem$;
const #96 = class	#95;	//  scala/xml/Elem$
const #97 = Asciz	Lscala/xml/Elem$;;
const #98 = NameAndType	#31:#97;//  MODULE$:Lscala/xml/Elem$;
const #99 = Field	#96.#98;	//  scala/xml/Elem$.MODULE$:Lscala/xml/Elem$;
const #100 = Asciz	prefix;
const #101 = Asciz	()Ljava/lang/String;;
const #102 = NameAndType	#100:#101;//  prefix:()Ljava/lang/String;
const #103 = Method	#50.#102;	//  scala/xml/Node.prefix:()Ljava/lang/String;
const #104 = Asciz	label;
const #105 = NameAndType	#104:#101;//  label:()Ljava/lang/String;
const #106 = Method	#50.#105;	//  scala/xml/Node.label:()Ljava/lang/String;
const #107 = Asciz	attributes;
const #108 = Asciz	()Lscala/xml/MetaData;;
const #109 = NameAndType	#107:#108;//  attributes:()Lscala/xml/MetaData;
const #110 = Method	#50.#109;	//  scala/xml/Node.attributes:()Lscala/xml/MetaData;
const #111 = Asciz	scope;
const #112 = Asciz	()Lscala/xml/NamespaceBinding;;
const #113 = NameAndType	#111:#112;//  scope:()Lscala/xml/NamespaceBinding;
const #114 = Method	#50.#113;	//  scala/xml/Node.scope:()Lscala/xml/NamespaceBinding;
const #115 = Asciz	(Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Sequence;)Lscala/xml/Elem;;
const #116 = NameAndType	#47:#115;//  apply:(Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Sequence;)Lscala/xml/Elem;
const #117 = Method	#96.#116;	//  scala/xml/Elem$.apply:(Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Sequence;)Lscala/xml/Elem;
const #118 = Asciz	temp4;
const #119 = Asciz	temp5;
const #120 = Asciz	Lscala/xml/Group;;
const #121 = Asciz	temp6;
const #122 = Asciz	ch;
const #123 = Asciz	nch;
const #124 = Asciz	(Lscala/xml/Node;)Lscala/collection/Sequence<Lscala/xml/Node;>;;
const #125 = Asciz	Signature;
const #126 = Asciz	scala/collection/Sequence$;
const #127 = class	#126;	//  scala/collection/Sequence$
const #128 = Asciz	Lscala/collection/Sequence$;;
const #129 = NameAndType	#31:#128;//  MODULE$:Lscala/collection/Sequence$;
const #130 = Field	#127.#129;	//  scala/collection/Sequence$.MODULE$:Lscala/collection/Sequence$;
const #131 = Asciz	builderFactory;
const #132 = Asciz	()Lscala/collection/generic/BuilderFactory;;
const #133 = NameAndType	#131:#132;//  builderFactory:()Lscala/collection/generic/BuilderFactory;
const #134 = Method	#127.#133;	//  scala/collection/Sequence$.builderFactory:()Lscala/collection/generic/BuilderFactory;
const #135 = Asciz	zipWithIndex;
const #136 = Asciz	(Lscala/collection/generic/BuilderFactory;)Ljava/lang/Object;;
const #137 = NameAndType	#135:#136;//  zipWithIndex:(Lscala/collection/generic/BuilderFactory;)Ljava/lang/Object;
const #138 = InterfaceMethod	#57.#137;	//  scala/collection/generic/SequenceTemplate.zipWithIndex:(Lscala/collection/generic/BuilderFactory;)Ljava/lang/Object;
const #139 = Asciz	scala/runtime/ScalaRunTime$;
const #140 = class	#139;	//  scala/runtime/ScalaRunTime$
const #141 = Asciz	Lscala/runtime/ScalaRunTime$;;
const #142 = NameAndType	#31:#141;//  MODULE$:Lscala/runtime/ScalaRunTime$;
const #143 = Field	#140.#142;	//  scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
const #144 = Asciz	boxArray;
const #145 = Asciz	(Ljava/lang/Object;)Lscala/runtime/BoxedArray;;
const #146 = NameAndType	#144:#145;//  boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
const #147 = Method	#140.#146;	//  scala/runtime/ScalaRunTime$.boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
const #148 = Asciz	scala/xml/transform/BasicTransformer$$anonfun$transform$2;
const #149 = class	#148;	//  scala/xml/transform/BasicTransformer$$anonfun$transform$2
const #150 = Asciz	(Lscala/xml/transform/BasicTransformer;Lscala/collection/Sequence;Ljava/lang/Object;)V;
const #151 = NameAndType	#3:#150;//  "<init>":(Lscala/xml/transform/BasicTransformer;Lscala/collection/Sequence;Ljava/lang/Object;)V
const #152 = Method	#149.#151;	//  scala/xml/transform/BasicTransformer$$anonfun$transform$2."<init>":(Lscala/xml/transform/BasicTransformer;Lscala/collection/Sequence;Ljava/lang/Object;)V
const #153 = Asciz	foreach;
const #154 = NameAndType	#153:#14;//  foreach:(Lscala/Function1;)V
const #155 = InterfaceMethod	#70.#154;	//  scala/collection/generic/IterableTemplate.foreach:(Lscala/Function1;)V
const #156 = Asciz	scala/runtime/NonLocalReturnException;
const #157 = class	#156;	//  scala/runtime/NonLocalReturnException
const #158 = Asciz	key;
const #159 = NameAndType	#158:#72;//  key:()Ljava/lang/Object;
const #160 = Method	#157.#159;	//  scala/runtime/NonLocalReturnException.key:()Ljava/lang/Object;
const #161 = Asciz	value;
const #162 = NameAndType	#161:#72;//  value:()Ljava/lang/Object;
const #163 = Method	#157.#162;	//  scala/runtime/NonLocalReturnException.value:()Ljava/lang/Object;
const #164 = Asciz	scala/collection/Sequence;
const #165 = class	#164;	//  scala/collection/Sequence
const #166 = Asciz	ns$1;
const #167 = Asciz	exceptionResult1;
const #168 = Asciz	(Lscala/collection/Sequence<Lscala/xml/Node;>;)Lscala/collection/Sequence<Lscala/xml/Node;>;;
const #169 = Asciz	(Lscala/collection/Iterator;Lscala/xml/NodeBuffer;)Lscala/collection/Sequence;;
const #170 = Asciz	scala/xml/transform/BasicTransformer$$anonfun$transform$1;
const #171 = class	#170;	//  scala/xml/transform/BasicTransformer$$anonfun$transform$1
const #172 = Asciz	(Lscala/xml/transform/BasicTransformer;)V;
const #173 = NameAndType	#3:#172;//  "<init>":(Lscala/xml/transform/BasicTransformer;)V
const #174 = Method	#171.#173;	//  scala/xml/transform/BasicTransformer$$anonfun$transform$1."<init>":(Lscala/xml/transform/BasicTransformer;)V
const #175 = Asciz	scala/collection/Iterator;
const #176 = class	#175;	//  scala/collection/Iterator
const #177 = Asciz	foldLeft;
const #178 = Asciz	(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;;
const #179 = NameAndType	#177:#178;//  foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
const #180 = InterfaceMethod	#176.#179;	//  scala/collection/Iterator.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
const #181 = Asciz	scala/collection/generic/TraversableTemplate;
const #182 = class	#181;	//  scala/collection/generic/TraversableTemplate
const #183 = Asciz	toArray;
const #184 = Asciz	()Lscala/runtime/BoxedArray;;
const #185 = NameAndType	#183:#184;//  toArray:()Lscala/runtime/BoxedArray;
const #186 = InterfaceMethod	#182.#185;	//  scala/collection/generic/TraversableTemplate.toArray:()Lscala/runtime/BoxedArray;
const #187 = Asciz	it;
const #188 = Asciz	Lscala/collection/Iterator;;
const #189 = Asciz	nb;
const #190 = Asciz	Lscala/xml/NodeBuffer;;
const #191 = Asciz	(Lscala/collection/Iterator<Lscala/xml/Node;>;Lscala/xml/NodeBuffer;)Lscala/collection/Sequence<Lscala/xml/Node;>;;
const #192 = Asciz	ns;
const #193 = Asciz	(Lscala/xml/Node;Lscala/collection/Sequence<Lscala/xml/Node;>;)Z;
const #194 = Asciz	andThen;
const #195 = Asciz	(Lscala/Function1;)Lscala/Function1;;
const #196 = Asciz	(Lscala/Function1;Lscala/Function1;)Lscala/Function1;;
const #197 = NameAndType	#194:#196;//  andThen:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
const #198 = Method	#12.#197;	//  scala/Function1$class.andThen:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
const #199 = Asciz	g;
const #200 = Asciz	Lscala/Function1;;
const #201 = Asciz	compose;
const #202 = NameAndType	#201:#196;//  compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
const #203 = Method	#12.#202;	//  scala/Function1$class.compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
const #204 = Asciz	toString;
const #205 = Asciz	(Lscala/Function1;)Ljava/lang/String;;
const #206 = NameAndType	#204:#205;//  toString:(Lscala/Function1;)Ljava/lang/String;
const #207 = Method	#12.#206;	//  scala/Function1$class.toString:(Lscala/Function1;)Ljava/lang/String;
const #208 = Asciz	Ljava/lang/Object;Lscala/Function1<Lscala/xml/Node;Lscala/xml/Node;>;Lscala/ScalaObject;;
const #209 = Asciz	ScalaSig;
const #210 = Asciz	InnerClasses;
const #211 = Asciz	$anonfun$transform$2;
const #212 = Asciz	$anonfun$transform$1;
const #213 = Asciz	scala/Function1;
const #214 = class	#213;	//  scala/Function1
const #215 = Asciz	scala/ScalaObject;
const #216 = class	#215;	//  scala/ScalaObject

{
public scala.xml.transform.BasicTransformer();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokespecial	#10; //Method java/lang/Object."<init>":()V
   4:	aload_0
   5:	invokestatic	#16; //Method scala/Function1$class.$init$:(Lscala/Function1;)V
   8:	return
  LineNumberTable: 
   line 20: 0


public final scala.Option testForChange$1(scala.xml.Node);
  Code:
   Stack=3, Locals=3, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokevirtual	#24; //Method transform:(Lscala/xml/Node;)Lscala/collection/Sequence;
   5:	astore_2
   6:	aload_0
   7:	aload_1
   8:	aload_2
   9:	invokevirtual	#28; //Method unchanged:(Lscala/xml/Node;Lscala/collection/Sequence;)Z
   12:	ifeq	21
   15:	getstatic	#34; //Field scala/None$.MODULE$:Lscala/None$;
   18:	goto	29
   21:	new	#36; //class scala/Some
   24:	dup
   25:	aload_2
   26:	invokespecial	#39; //Method scala/Some."<init>":(Ljava/lang/Object;)V
   29:	areturn
  LineNumberTable: 
   line 41: 0
   line 42: 6
   line 43: 21
   line 40: 29

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      30      0    this       Lscala/xml/transform/BasicTransformer;
   0      30      1    n       Lscala/xml/Node;
   6      24      2    n2       Lscala/collection/Sequence;


public java.lang.Object apply(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	checkcast	#50; //class scala/xml/Node
   5:	invokevirtual	#53; //Method apply:(Lscala/xml/Node;)Lscala/xml/Node;
   8:	areturn
  LineNumberTable: 
   line 20: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/xml/transform/BasicTransformer;
   0      9      1    v1       Ljava/lang/Object;


public scala.xml.Node apply(scala.xml.Node);
  Code:
   Stack=3, Locals=3, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokevirtual	#24; //Method transform:(Lscala/xml/Node;)Lscala/collection/Sequence;
   5:	astore_2
   6:	aload_2
   7:	invokeinterface	#61,  1; //InterfaceMethod scala/collection/generic/SequenceTemplate.length:()I
   12:	iconst_1
   13:	if_icmple	26
   16:	new	#63; //class java/lang/UnsupportedOperationException
   19:	dup
   20:	ldc	#65; //String transform must return single node for root
   22:	invokespecial	#68; //Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
   25:	athrow
   26:	aload_2
   27:	invokeinterface	#74,  1; //InterfaceMethod scala/collection/generic/IterableTemplate.head:()Ljava/lang/Object;
   32:	checkcast	#50; //class scala/xml/Node
   35:	areturn
  LineNumberTable: 
   line 68: 0
   line 69: 6
   line 70: 16
   line 71: 26
   line 67: 35

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      36      0    this       Lscala/xml/transform/BasicTransformer;
   0      36      1    n       Lscala/xml/Node;
   6      30      2    seq       Lscala/collection/Sequence;


public scala.collection.Sequence transform(scala.xml.Node);
  Code:
   Stack=6, Locals=7, Args_size=2
   0:	aload_1
   1:	invokevirtual	#79; //Method scala/xml/Node.doTransform:()Z
   4:	ifeq	95
   7:	aload_1
   8:	astore_2
   9:	aload_2
   10:	instanceof	#81; //class scala/xml/Group
   13:	ifeq	43
   16:	aload_2
   17:	checkcast	#81; //class scala/xml/Group
   20:	astore_3
   21:	aload_3
   22:	invokevirtual	#85; //Method scala/xml/Group.nodes:()Lscala/collection/Sequence;
   25:	astore	4
   27:	new	#81; //class scala/xml/Group
   30:	dup
   31:	aload_0
   32:	aload	4
   34:	invokevirtual	#88; //Method transform:(Lscala/collection/Sequence;)Lscala/collection/Sequence;
   37:	invokespecial	#91; //Method scala/xml/Group."<init>":(Lscala/collection/Sequence;)V
   40:	goto	96
   43:	aload_1
   44:	invokevirtual	#94; //Method scala/xml/Node.child:()Lscala/collection/Sequence;
   47:	astore	5
   49:	aload_0
   50:	aload	5
   52:	invokevirtual	#88; //Method transform:(Lscala/collection/Sequence;)Lscala/collection/Sequence;
   55:	astore	6
   57:	aload	5
   59:	aload	6
   61:	if_acmpne	68
   64:	aload_1
   65:	goto	96
   68:	getstatic	#99; //Field scala/xml/Elem$.MODULE$:Lscala/xml/Elem$;
   71:	aload_1
   72:	invokevirtual	#103; //Method scala/xml/Node.prefix:()Ljava/lang/String;
   75:	aload_1
   76:	invokevirtual	#106; //Method scala/xml/Node.label:()Ljava/lang/String;
   79:	aload_1
   80:	invokevirtual	#110; //Method scala/xml/Node.attributes:()Lscala/xml/MetaData;
   83:	aload_1
   84:	invokevirtual	#114; //Method scala/xml/Node.scope:()Lscala/xml/NamespaceBinding;
   87:	aload	6
   89:	invokevirtual	#117; //Method scala/xml/Elem$.apply:(Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Sequence;)Lscala/xml/Elem;
   92:	goto	96
   95:	aload_1
   96:	areturn
  LineNumberTable: 
   line 55: 0
   line 56: 27
   line 58: 43
   line 59: 49
   line 61: 57
   line 62: 68
   line 64: 95
   line 55: 96

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      97      0    this       Lscala/xml/transform/BasicTransformer;
   0      97      1    n       Lscala/xml/Node;
   9      86      2    temp4       Lscala/xml/Node;
   21      19      3    temp5       Lscala/xml/Group;
   27      13      4    temp6       Lscala/collection/Sequence;
   49      46      5    ch       Lscala/collection/Sequence;
   57      38      6    nch       Lscala/collection/Sequence;

  Signature: length = 0x2
   00 7C 

public scala.collection.Sequence transform(scala.collection.Sequence);
  Code:
   Stack=6, Locals=6, Args_size=2
   0:	new	#8; //class java/lang/Object
   3:	dup
   4:	invokespecial	#10; //Method java/lang/Object."<init>":()V
   7:	astore_2
   8:	aconst_null
   9:	astore_3
   10:	aload_1
   11:	getstatic	#130; //Field scala/collection/Sequence$.MODULE$:Lscala/collection/Sequence$;
   14:	invokevirtual	#134; //Method scala/collection/Sequence$.builderFactory:()Lscala/collection/generic/BuilderFactory;
   17:	invokeinterface	#138,  2; //InterfaceMethod scala/collection/generic/SequenceTemplate.zipWithIndex:(Lscala/collection/generic/BuilderFactory;)Ljava/lang/Object;
   22:	astore	5
   24:	aload	5
   26:	instanceof	#70; //class scala/collection/generic/IterableTemplate
   29:	ifeq	37
   32:	aload	5
   34:	goto	45
   37:	getstatic	#143; //Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   40:	aload	5
   42:	invokevirtual	#147; //Method scala/runtime/ScalaRunTime$.boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
   45:	checkcast	#70; //class scala/collection/generic/IterableTemplate
   48:	new	#149; //class scala/xml/transform/BasicTransformer$$anonfun$transform$2
   51:	dup
   52:	aload_0
   53:	aload_1
   54:	aload_2
   55:	invokespecial	#152; //Method scala/xml/transform/BasicTransformer$$anonfun$transform$2."<init>":(Lscala/xml/transform/BasicTransformer;Lscala/collection/Sequence;Ljava/lang/Object;)V
   58:	invokeinterface	#155,  2; //InterfaceMethod scala/collection/generic/IterableTemplate.foreach:(Lscala/Function1;)V
   63:	aload_1
   64:	astore_3
   65:	goto	113
   68:	astore	4
   70:	aload	4
   72:	invokevirtual	#160; //Method scala/runtime/NonLocalReturnException.key:()Ljava/lang/Object;
   75:	aload_2
   76:	if_acmpne	115
   79:	aload	4
   81:	invokevirtual	#163; //Method scala/runtime/NonLocalReturnException.value:()Ljava/lang/Object;
   84:	instanceof	#165; //class scala/collection/Sequence
   87:	ifeq	98
   90:	aload	4
   92:	invokevirtual	#163; //Method scala/runtime/NonLocalReturnException.value:()Ljava/lang/Object;
   95:	goto	109
   98:	getstatic	#143; //Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   101:	aload	4
   103:	invokevirtual	#163; //Method scala/runtime/NonLocalReturnException.value:()Ljava/lang/Object;
   106:	invokevirtual	#147; //Method scala/runtime/ScalaRunTime$.boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
   109:	checkcast	#165; //class scala/collection/Sequence
   112:	astore_3
   113:	aload_3
   114:	areturn
   115:	aload	4
   117:	athrow
  Exception table:
   from   to  target type
    10    68    68   Class scala/runtime/NonLocalReturnException

  LineNumberTable: 
   line 39: 0
   line 47: 10
   line 39: 45
   line 47: 48
   line 51: 63
   line 39: 68

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      118      0    this       Lscala/xml/transform/BasicTransformer;
   0      118      1    ns$1       Lscala/collection/Sequence;
   10      104      3    exceptionResult1       Lscala/collection/Sequence;
   115      3      3    exceptionResult1       Lscala/collection/Sequence;

  Signature: length = 0x2
   00 FFFFFFA8 

public scala.collection.Sequence transform(scala.collection.Iterator, scala.xml.NodeBuffer);
  Code:
   Stack=5, Locals=4, Args_size=3
   0:	aload_1
   1:	aload_2
   2:	new	#171; //class scala/xml/transform/BasicTransformer$$anonfun$transform$1
   5:	dup
   6:	aload_0
   7:	invokespecial	#174; //Method scala/xml/transform/BasicTransformer$$anonfun$transform$1."<init>":(Lscala/xml/transform/BasicTransformer;)V
   10:	invokeinterface	#180,  3; //InterfaceMethod scala/collection/Iterator.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
   15:	astore_3
   16:	aload_3
   17:	instanceof	#182; //class scala/collection/generic/TraversableTemplate
   20:	ifeq	27
   23:	aload_3
   24:	goto	34
   27:	getstatic	#143; //Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   30:	aload_3
   31:	invokevirtual	#147; //Method scala/runtime/ScalaRunTime$.boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
   34:	checkcast	#182; //class scala/collection/generic/TraversableTemplate
   37:	invokeinterface	#186,  1; //InterfaceMethod scala/collection/generic/TraversableTemplate.toArray:()Lscala/runtime/BoxedArray;
   42:	areturn
  LineNumberTable: 
   line 34: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      43      0    this       Lscala/xml/transform/BasicTransformer;
   0      43      1    it       Lscala/collection/Iterator;
   0      43      2    nb       Lscala/xml/NodeBuffer;

  Signature: length = 0x2
   00 FFFFFFBF 

public boolean unchanged(scala.xml.Node, scala.collection.Sequence);
  Code:
   Stack=2, Locals=3, Args_size=3
   0:	aload_2
   1:	invokeinterface	#61,  1; //InterfaceMethod scala/collection/generic/SequenceTemplate.length:()I
   6:	iconst_1
   7:	if_icmpne	24
   10:	aload_2
   11:	invokeinterface	#74,  1; //InterfaceMethod scala/collection/generic/IterableTemplate.head:()Ljava/lang/Object;
   16:	aload_1
   17:	if_acmpne	24
   20:	iconst_1
   21:	goto	25
   24:	iconst_0
   25:	ireturn
  LineNumberTable: 
   line 28: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      26      0    this       Lscala/xml/transform/BasicTransformer;
   0      26      1    n       Lscala/xml/Node;
   0      26      2    ns       Lscala/collection/Sequence;

  Signature: length = 0x2
   00 FFFFFFC1 

public scala.Function1 andThen(scala.Function1);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#198; //Method scala/Function1$class.andThen:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
   5:	areturn
  LineNumberTable: 
   line 20: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/transform/BasicTransformer;
   0      6      1    g       Lscala/Function1;


public scala.Function1 compose(scala.Function1);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#203; //Method scala/Function1$class.compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
   5:	areturn
  LineNumberTable: 
   line 20: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/transform/BasicTransformer;
   0      6      1    g       Lscala/Function1;


public java.lang.String toString();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#207; //Method scala/Function1$class.toString:(Lscala/Function1;)Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 20: 0


}

