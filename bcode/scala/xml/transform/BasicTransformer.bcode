Compiled from "BasicTransformer.scala"
public abstract class scala.xml.transform.BasicTransformer extends java.lang.Object implements scala.Function1,scala.ScalaObject
  SourceFile: "BasicTransformer.scala"
  ScalaSig: length = 0x3
   05 00 00 
  Signature: length = 0x2
   00 FFFFFFC5 
  RuntimeVisibleAnnotations: length = 0xB
   00 01 00 FFFFFFC6 00 01 00 FFFFFFC7 73 00 FFFFFFC8 
  InnerClass: 
   public final $anonfun$1=class scala/xml/transform/BasicTransformer$$anonfun$1 of class scala/xml/transform/BasicTransformer
   public final $anonfun$transform$1=class scala/xml/transform/BasicTransformer$$anonfun$transform$1 of class scala/xml/transform/BasicTransformer
   public GenericCanBuildFrom=class scala/collection/generic/TraversableFactory$GenericCanBuildFrom of class scala/collection/generic/TraversableFactory
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	BasicTransformer.scala;
Asciz	toString;
Asciz	()Ljava/lang/String;;
Asciz	Code;
Asciz	LineNumberTable;
Asciz	scala/Function1$class;
class	scala/Function1$class
Asciz	(Lscala/Function1;)Ljava/lang/String;;
NameAndType	toString:(Lscala/Function1;)Ljava/lang/String;
Method	scala/Function1$class.toString:(Lscala/Function1;)Ljava/lang/String;
Asciz	compose;
Asciz	(Lscala/Function1;)Lscala/Function1;;
Asciz	(Lscala/Function1;Lscala/Function1;)Lscala/Function1;;
NameAndType	compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
Method	scala/Function1$class.compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
Asciz	this;
Asciz	Lscala/xml/transform/BasicTransformer;;
Asciz	g;
Asciz	Lscala/Function1;;
Asciz	LocalVariableTable;
Asciz	andThen;
NameAndType	andThen:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
Method	scala/Function1$class.andThen:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
Asciz	unchanged;
Asciz	(Lscala/xml/Node;Lscala/collection/Seq;)Z;
Asciz	scala/collection/SeqLike;
class	scala/collection/SeqLike
Asciz	length;
Asciz	()I;
NameAndType	length:()I
InterfaceMethod	scala/collection/SeqLike.length:()I
Asciz	scala/collection/IterableLike;
class	scala/collection/IterableLike
Asciz	head;
Asciz	()Ljava/lang/Object;;
NameAndType	head:()Ljava/lang/Object;
InterfaceMethod	scala/collection/IterableLike.head:()Ljava/lang/Object;
Asciz	java/lang/Object;
class	java/lang/Object
Asciz	equals;
Asciz	(Ljava/lang/Object;)Z;
NameAndType	equals:(Ljava/lang/Object;)Z
Method	java/lang/Object.equals:(Ljava/lang/Object;)Z
Asciz	n;
Asciz	Lscala/xml/Node;;
Asciz	ns;
Asciz	Lscala/collection/Seq;;
Asciz	(Lscala/xml/Node;Lscala/collection/Seq<Lscala/xml/Node;>;)Z;
Asciz	Signature;
Asciz	transform;
Asciz	(Lscala/collection/Iterator;Lscala/xml/NodeBuffer;)Lscala/collection/Seq;;
Asciz	scala/xml/transform/BasicTransformer$$anonfun$transform$1;
class	scala/xml/transform/BasicTransformer$$anonfun$transform$1
Asciz	<init>;
Asciz	(Lscala/xml/transform/BasicTransformer;)V;
NameAndType	"<init>":(Lscala/xml/transform/BasicTransformer;)V
Method	scala/xml/transform/BasicTransformer$$anonfun$transform$1."<init>":(Lscala/xml/transform/BasicTransformer;)V
Asciz	scala/collection/TraversableOnce;
class	scala/collection/TraversableOnce
Asciz	foldLeft;
Asciz	(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;;
NameAndType	foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
InterfaceMethod	scala/collection/TraversableOnce.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
Asciz	toSeq;
Asciz	()Lscala/collection/Seq;;
NameAndType	toSeq:()Lscala/collection/Seq;
InterfaceMethod	scala/collection/SeqLike.toSeq:()Lscala/collection/Seq;
Asciz	it;
Asciz	Lscala/collection/Iterator;;
Asciz	nb;
Asciz	Lscala/xml/NodeBuffer;;
Asciz	(Lscala/collection/Iterator<Lscala/xml/Node;>;Lscala/xml/NodeBuffer;)Lscala/collection/Seq<Lscala/xml/Node;>;;
Asciz	(Lscala/collection/Seq;)Lscala/collection/Seq;;
Asciz	scala/xml/transform/BasicTransformer$$anonfun$1;
class	scala/xml/transform/BasicTransformer$$anonfun$1
Method	scala/xml/transform/BasicTransformer$$anonfun$1."<init>":(Lscala/xml/transform/BasicTransformer;)V
Asciz	scala/collection/TraversableLike;
class	scala/collection/TraversableLike
Asciz	span;
Asciz	(Lscala/Function1;)Lscala/Tuple2;;
NameAndType	span:(Lscala/Function1;)Lscala/Tuple2;
InterfaceMethod	scala/collection/TraversableLike.span:(Lscala/Function1;)Lscala/Tuple2;
Asciz	scala/Tuple2;
class	scala/Tuple2
Asciz	_1;
NameAndType	_1:()Ljava/lang/Object;
Method	scala/Tuple2._1:()Ljava/lang/Object;
Asciz	_2;
NameAndType	_2:()Ljava/lang/Object;
Method	scala/Tuple2._2:()Ljava/lang/Object;
Asciz	(Ljava/lang/Object;Ljava/lang/Object;)V;
NameAndType	"<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
Method	scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
Asciz	scala/collection/Seq;
class	scala/collection/Seq
Asciz	isEmpty;
Asciz	()Z;
NameAndType	isEmpty:()Z
InterfaceMethod	scala/collection/IterableLike.isEmpty:()Z
Asciz	scala/xml/Node;
class	scala/xml/Node
Asciz	scala/xml/transform/BasicTransformer;
class	scala/xml/transform/BasicTransformer
Asciz	(Lscala/xml/Node;)Lscala/collection/Seq;;
NameAndType	transform:(Lscala/xml/Node;)Lscala/collection/Seq;
Method	scala/xml/transform/BasicTransformer.transform:(Lscala/xml/Node;)Lscala/collection/Seq;
Asciz	scala/collection/Seq$;
class	scala/collection/Seq$
Asciz	MODULE$;
Asciz	Lscala/collection/Seq$;;
NameAndType	MODULE$:Lscala/collection/Seq$;
Field	scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
Asciz	scala/collection/generic/TraversableFactory$GenericCanBuildFrom;
class	scala/collection/generic/TraversableFactory$GenericCanBuildFrom
Asciz	(Lscala/collection/generic/TraversableFactory;)V;
NameAndType	"<init>":(Lscala/collection/generic/TraversableFactory;)V
Method	scala/collection/generic/TraversableFactory$GenericCanBuildFrom."<init>":(Lscala/collection/generic/TraversableFactory;)V
Asciz	$plus$plus;
Asciz	(Lscala/collection/TraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;;
NameAndType	$plus$plus:(Lscala/collection/TraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
InterfaceMethod	scala/collection/TraversableLike.$plus$plus:(Lscala/collection/TraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
Asciz	tail;
NameAndType	tail:()Ljava/lang/Object;
InterfaceMethod	scala/collection/TraversableLike.tail:()Ljava/lang/Object;
NameAndType	transform:(Lscala/collection/Seq;)Lscala/collection/Seq;
Method	scala/xml/transform/BasicTransformer.transform:(Lscala/collection/Seq;)Lscala/collection/Seq;
Asciz	scala/MatchError;
class	scala/MatchError
Asciz	(Ljava/lang/Object;)V;
NameAndType	"<init>":(Ljava/lang/Object;)V
Method	scala/MatchError."<init>":(Ljava/lang/Object;)V
Asciz	xs1;
Asciz	xs2;
Asciz	temp1;
Asciz	Lscala/Tuple2;;
Asciz	(Lscala/collection/Seq<Lscala/xml/Node;>;)Lscala/collection/Seq<Lscala/xml/Node;>;;
Asciz	doTransform;
NameAndType	doTransform:()Z
Method	scala/xml/Node.doTransform:()Z
Asciz	scala/xml/Group;
class	scala/xml/Group
Asciz	nodes;
NameAndType	nodes:Lscala/collection/Seq;
Field	scala/xml/Group.nodes:Lscala/collection/Seq;
Asciz	(Lscala/collection/Seq;)V;
NameAndType	"<init>":(Lscala/collection/Seq;)V
Method	scala/xml/Group."<init>":(Lscala/collection/Seq;)V
Asciz	child;
NameAndType	child:()Lscala/collection/Seq;
Method	scala/xml/Node.child:()Lscala/collection/Seq;
Asciz	prefix;
NameAndType	prefix:()Ljava/lang/String;
Method	scala/xml/Node.prefix:()Ljava/lang/String;
Asciz	label;
NameAndType	label:()Ljava/lang/String;
Method	scala/xml/Node.label:()Ljava/lang/String;
Asciz	attributes;
Asciz	()Lscala/xml/MetaData;;
NameAndType	attributes:()Lscala/xml/MetaData;
Method	scala/xml/Node.attributes:()Lscala/xml/MetaData;
Asciz	scope;
Asciz	()Lscala/xml/NamespaceBinding;;
NameAndType	scope:()Lscala/xml/NamespaceBinding;
Method	scala/xml/Node.scope:()Lscala/xml/NamespaceBinding;
Asciz	scala/xml/Elem;
class	scala/xml/Elem
Asciz	(Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Seq;)V;
NameAndType	"<init>":(Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Seq;)V
Method	scala/xml/Elem."<init>":(Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Seq;)V
Asciz	ch;
Asciz	nch;
Asciz	(Lscala/xml/Node;)Lscala/collection/Seq<Lscala/xml/Node;>;;
Asciz	apply;
Asciz	(Lscala/xml/Node;)Lscala/xml/Node;;
Asciz	java/lang/UnsupportedOperationException;
class	java/lang/UnsupportedOperationException
Asciz	transform must return single node for root;
String	transform must return single node for root
Asciz	(Ljava/lang/String;)V;
NameAndType	"<init>":(Ljava/lang/String;)V
Method	java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
Asciz	seq;
Asciz	(Ljava/lang/Object;)Ljava/lang/Object;;
NameAndType	apply:(Lscala/xml/Node;)Lscala/xml/Node;
Method	scala/xml/transform/BasicTransformer.apply:(Lscala/xml/Node;)Lscala/xml/Node;
Asciz	v1;
Asciz	Ljava/lang/Object;;
Asciz	()V;
NameAndType	"<init>":()V
Method	java/lang/Object."<init>":()V
Asciz	$init$;
Asciz	(Lscala/Function1;)V;
NameAndType	$init$:(Lscala/Function1;)V
Method	scala/Function1$class.$init$:(Lscala/Function1;)V
Asciz	ScalaSig;
Asciz	Ljava/lang/Object;Lscala/Function1<Lscala/xml/Node;Lscala/xml/Node;>;Lscala/ScalaObject;;
Asciz	Lscala/reflect/ScalaSignature;;
Asciz	bytes;
Asciz	93\"\r\t!n+sC:hm:nKJT!aQM\:g_Jl'BA\rAX)1oY1mC1%i\"a\t1Q!!\t1gn!!.<b\t\tBBPE*,7\r\t'Q1b#D\t)bAAGk:G/[8ocAqG\t%>$W\r7%AD'G.Y(cUGCq$=S:LGOAAA!)1C\tIIQO\2iC:<W\rK!RCA\n'\t9cAAC_>dW-8\t%9DQaA1\n!A\:5*dC/g9qFMa)CyI|w \nI!A7m[1hK&ag'(B\":)\ra#hwa\rPSR2!L\tqtGJi\r^8s1B\tq'\r&1\t>$WMQ;gM\"B\t)ECGYC\t1-\"I)\ta\nC*aCLA*AbaBd\")Fa-;
Asciz	RuntimeVisibleAnnotations;
Asciz	InnerClasses;
Asciz	$anonfun$1;
Asciz	$anonfun$transform$1;
Asciz	scala/collection/generic/TraversableFactory;
class	scala/collection/generic/TraversableFactory
Asciz	GenericCanBuildFrom;
Asciz	scala/Function1;
class	scala/Function1
Asciz	scala/ScalaObject;
class	scala/ScalaObject

{
public java.lang.String toString();
  Signature: ()Ljava/lang/String;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokestatic	Method scala/Function1$class.toString:(Lscala/Function1;)Ljava/lang/String;
	areturn
  Labels:

public scala.Function1 compose(scala.Function1);
  Signature: (Lscala/Function1;)Lscala/Function1;
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokestatic	Method scala/Function1$class.compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/transform/BasicTransformer;
   0      6      1    g       Lscala/Function1;


public scala.Function1 andThen(scala.Function1);
  Signature: (Lscala/Function1;)Lscala/Function1;
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokestatic	Method scala/Function1$class.andThen:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/transform/BasicTransformer;
   0      6      1    g       Lscala/Function1;


public boolean unchanged(scala.xml.Node, scala.collection.Seq);
  Signature: (Lscala/xml/Node;Lscala/collection/Seq;)Z
  Code:
   Stack=2, Locals=3, Args_size=3
	aload_2
	invokeinterface	InterfaceMethod scala/collection/SeqLike.length:()I
	iconst_1
	if_icmpne	l1 // iconst_0
	aload_2
	invokeinterface	InterfaceMethod scala/collection/IterableLike.head:()Ljava/lang/Object;
	dup
	ifnonnull	l2 // aload_1
	pop
	aload_1
	ifnull	l3 // iconst_1
	goto	l1 // iconst_0
l2	aload_1
	invokevirtual	Method java/lang/Object.equals:(Ljava/lang/Object;)Z
	ifeq	l1 // iconst_0
l3	iconst_1
	goto	l4 // ireturn
l1	iconst_0
l4	ireturn
  Labels:
   	l2 = 28 // aload_1
   	l3 = 35 // iconst_1
   	l1 = 39 // iconst_0
   	l4 = 40 // ireturn
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      41      0    this       Lscala/xml/transform/BasicTransformer;
   0      41      1    n       Lscala/xml/Node;
   0      41      2    ns       Lscala/collection/Seq;

  Signature: length = 0x2
   00 31 

public scala.collection.Seq transform(scala.collection.Iterator, scala.xml.NodeBuffer);
  Signature: (Lscala/collection/Iterator;Lscala/xml/NodeBuffer;)Lscala/collection/Seq;
  Code:
   Stack=5, Locals=3, Args_size=3
	aload_1
	aload_2
	new	class scala/xml/transform/BasicTransformer$$anonfun$transform$1
	dup
	aload_0
	invokespecial	Method scala/xml/transform/BasicTransformer$$anonfun$transform$1."<init>":(Lscala/xml/transform/BasicTransformer;)V
	invokeinterface	InterfaceMethod scala/collection/TraversableOnce.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
	checkcast	class scala/collection/SeqLike
	invokeinterface	InterfaceMethod scala/collection/SeqLike.toSeq:()Lscala/collection/Seq;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      24      0    this       Lscala/xml/transform/BasicTransformer;
   0      24      1    it       Lscala/collection/Iterator;
   0      24      2    nb       Lscala/xml/NodeBuffer;

  Signature: length = 0x2
   00 49 

public scala.collection.Seq transform(scala.collection.Seq);
  Signature: (Lscala/collection/Seq;)Lscala/collection/Seq;
  Code:
   Stack=5, Locals=8, Args_size=2
	aload_1
	new	class scala/xml/transform/BasicTransformer$$anonfun$1
	dup
	aload_0
	invokespecial	Method scala/xml/transform/BasicTransformer$$anonfun$1."<init>":(Lscala/xml/transform/BasicTransformer;)V
	invokeinterface	InterfaceMethod scala/collection/TraversableLike.span:(Lscala/Function1;)Lscala/Tuple2;
	astore	7
	aload	7
	ifnull	l1 // new
	new	class scala/Tuple2
	dup
	aload	7
	invokevirtual	Method scala/Tuple2._1:()Ljava/lang/Object;
	aload	7
	invokevirtual	Method scala/Tuple2._2:()Ljava/lang/Object;
	invokespecial	Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
	astore_2
	aload_2
	invokevirtual	Method scala/Tuple2._1:()Ljava/lang/Object;
	checkcast	class scala/collection/Seq
	astore_3
	aload_2
	invokevirtual	Method scala/Tuple2._2:()Ljava/lang/Object;
	checkcast	class scala/collection/Seq
	astore	5
	aload	5
	invokeinterface	InterfaceMethod scala/collection/IterableLike.isEmpty:()Z
	ifeq	l2 // aload_3
	aload_1
	goto	l3 // areturn
l2	aload_3
	aload_0
	aload	5
	invokeinterface	InterfaceMethod scala/collection/IterableLike.head:()Ljava/lang/Object;
	checkcast	class scala/xml/Node
	invokevirtual	Method transform:(Lscala/xml/Node;)Lscala/collection/Seq;
	getstatic	Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
	astore	4
	new	class scala/collection/generic/TraversableFactory$GenericCanBuildFrom
	dup
	aload	4
	invokespecial	Method scala/collection/generic/TraversableFactory$GenericCanBuildFrom."<init>":(Lscala/collection/generic/TraversableFactory;)V
	invokeinterface	InterfaceMethod scala/collection/TraversableLike.$plus$plus:(Lscala/collection/TraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
	checkcast	class scala/collection/TraversableLike
	aload_0
	aload	5
	invokeinterface	InterfaceMethod scala/collection/TraversableLike.tail:()Ljava/lang/Object;
	checkcast	class scala/collection/Seq
	invokevirtual	Method transform:(Lscala/collection/Seq;)Lscala/collection/Seq;
	getstatic	Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
	astore	6
	new	class scala/collection/generic/TraversableFactory$GenericCanBuildFrom
	dup
	aload	6
	invokespecial	Method scala/collection/generic/TraversableFactory$GenericCanBuildFrom."<init>":(Lscala/collection/generic/TraversableFactory;)V
	invokeinterface	InterfaceMethod scala/collection/TraversableLike.$plus$plus:(Lscala/collection/TraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
	checkcast	class scala/collection/Seq
l3	areturn
l1	new	class scala/MatchError
	dup
	aload	7
	invokespecial	Method scala/MatchError."<init>":(Ljava/lang/Object;)V
	athrow
  Labels:
   	l2 = 70 // aload_3
   	l3 = 143 // areturn
   	l1 = 144 // new
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      154      0    this       Lscala/xml/transform/BasicTransformer;
   0      154      1    ns       Lscala/collection/Seq;
   47      97      3    xs1       Lscala/collection/Seq;
   56      88      5    xs2       Lscala/collection/Seq;
   16      50      7    temp1       Lscala/Tuple2;
   144      10      7    temp1       Lscala/Tuple2;

  Signature: length = 0x2
   00 FFFFFF89 

public scala.collection.Seq transform(scala.xml.Node);
  Signature: (Lscala/xml/Node;)Lscala/collection/Seq;
  Code:
   Stack=7, Locals=9, Args_size=2
	aload_1
	invokevirtual	Method scala/xml/Node.doTransform:()Z
	ifeq	l1 // aload_1
	aload_1
	instanceof	class scala/xml/Group
	ifeq	l2 // aload_1
	new	class scala/xml/Group
	dup
	aload_0
	aload_1
	checkcast	class scala/xml/Group
	astore_2
	aload_2
	getfield	Field scala/xml/Group.nodes:Lscala/collection/Seq;
	invokevirtual	Method transform:(Lscala/collection/Seq;)Lscala/collection/Seq;
	invokespecial	Method scala/xml/Group."<init>":(Lscala/collection/Seq;)V
	goto	l3 // areturn
l2	aload_1
	invokevirtual	Method scala/xml/Node.child:()Lscala/collection/Seq;
	astore_3
	aload_0
	aload_3
	invokevirtual	Method transform:(Lscala/collection/Seq;)Lscala/collection/Seq;
	astore	8
	aload_3
	aload	8
	if_acmpne	l4 // aload_1
	aload_1
	goto	l3 // areturn
l4	aload_1
	invokevirtual	Method scala/xml/Node.prefix:()Ljava/lang/String;
	aload_1
	invokevirtual	Method scala/xml/Node.label:()Ljava/lang/String;
	aload_1
	invokevirtual	Method scala/xml/Node.attributes:()Lscala/xml/MetaData;
	aload_1
	invokevirtual	Method scala/xml/Node.scope:()Lscala/xml/NamespaceBinding;
	astore	7
	astore	6
	astore	5
	astore	4
	new	class scala/xml/Elem
	dup
	aload	4
	aload	5
	aload	6
	aload	7
	aload	8
	invokespecial	Method scala/xml/Elem."<init>":(Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Seq;)V
	goto	l3 // areturn
l1	aload_1
l3	areturn
  Labels:
   	l2 = 37 // aload_1
   	l4 = 59 // aload_1
   	l1 = 103 // aload_1
   	l3 = 104 // areturn
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      105      0    this       Lscala/xml/transform/BasicTransformer;
   0      105      1    n       Lscala/xml/Node;
   42      61      3    ch       Lscala/collection/Seq;
   49      54      8    nch       Lscala/collection/Seq;

  Signature: length = 0x2
   00 FFFFFFAD 

public scala.xml.Node apply(scala.xml.Node);
  Signature: (Lscala/xml/Node;)Lscala/xml/Node;
  Code:
   Stack=3, Locals=3, Args_size=2
	aload_0
	aload_1
	invokevirtual	Method transform:(Lscala/xml/Node;)Lscala/collection/Seq;
	astore_2
	aload_2
	invokeinterface	InterfaceMethod scala/collection/SeqLike.length:()I
	iconst_1
	if_icmple	l1 // aload_2
	new	class java/lang/UnsupportedOperationException
	dup
	ldc	String transform must return single node for root
	invokespecial	Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
	athrow
l1	aload_2
	invokeinterface	InterfaceMethod scala/collection/IterableLike.head:()Ljava/lang/Object;
	checkcast	class scala/xml/Node
	areturn
  Labels:
   	l1 = 26 // aload_2
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      36      0    this       Lscala/xml/transform/BasicTransformer;
   0      36      1    n       Lscala/xml/Node;
   6      30      2    seq       Lscala/collection/Seq;


public java.lang.Object apply(java.lang.Object);
  Signature: (Ljava/lang/Object;)Ljava/lang/Object;
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	checkcast	class scala/xml/Node
	invokevirtual	Method apply:(Lscala/xml/Node;)Lscala/xml/Node;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/xml/transform/BasicTransformer;
   0      9      1    v1       Ljava/lang/Object;


public scala.xml.transform.BasicTransformer();
  Signature: ()V
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokespecial	Method java/lang/Object."<init>":()V
	aload_0
	invokestatic	Method scala/Function1$class.$init$:(Lscala/Function1;)V
	return
  Labels:

}

