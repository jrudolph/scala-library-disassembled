Compiled from "BasicTransformer.scala"
public abstract class scala.xml.transform.BasicTransformer extends java.lang.Object implements scala.Function1,scala.ScalaObject
  SourceFile: "BasicTransformer.scala"
  Signature: length = 0x2
   00 FFFFFFCA 
  ScalaSig: length = 0x1C2
   05 00 4E 06 08 01 02 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF81 00 09 02 10 42
   61 73 69 63 54 72 61 6E 73 66 6F 72 6D 65 72 0A
   02 03 04 01 09 74 72 61 6E 73 66 6F 72 6D 0A 02
   05 06 01 03 78 6D 6C 0A 01 07 01 05 73 63 61 6C
   61 03 00 13 04 00 0A 12 1A 10 02 0B 10 0D 01 0C
   0A 02 0D 0E 01 04 6C 61 6E 67 0A 01 0F 01 04 6A
   61 76 61 09 02 11 0C 02 06 4F 62 6A 65 63 74 10
   04 13 14 16 16 0D 01 06 09 02 15 06 02 09 46 75
   6E 63 74 69 6F 6E 31 10 02 17 18 0D 01 04 09 02
   19 04 02 04 4E 6F 64 65 10 02 13 1B 09 02 1C 06
   02 0B 53 63 61 6C 61 4F 62 6A 65 63 74 08 05 1E
   00 FFFFFF84 00 1F 01 06 3C 69 6E 69 74 3E 14 01 20 10
   02 21 00 0D 01 02 08 05 23 00 FFFFFF84 08 24 01 09 75
   6E 63 68 61 6E 67 65 64 14 03 25 28 2A 10 02 13
   26 09 02 27 06 02 07 42 6F 6F 6C 65 61 6E 08 05
   29 22 FFFFFFC0 00 16 01 01 6E 08 05 2B 22 FFFFFFC0 00 2C 01
   02 6E 73 10 03 2D 35 16 0E 02 2E 33 0E 02 2F 32
   0D 01 30 0A 02 31 08 01 06 3C 72 6F 6F 74 3E 09
   01 07 09 02 34 06 01 07 70 61 63 6B 61 67 65 09
   02 36 37 02 03 53 65 71 0A 02 34 06 08 05 03 00
   FFFFFF84 00 39 14 03 2C 3A 3F 08 05 3B 38 FFFFFFC0 00 3C 01
   02 69 74 10 03 2D 3D 16 09 02 3E 37 02 08 49 74
   65 72 61 74 6F 72 08 05 40 38 FFFFFFC0 00 41 01 02 6E
   62 10 02 17 42 09 02 43 04 02 0A 4E 6F 64 65 42
   75 66 66 65 72 08 05 03 00 FFFFFF84 00 45 14 02 2C 46
   08 05 2B 44 FFFFFFC0 00 2C 08 05 03 00 FFFFFF84 00 48 14 02
   2C 49 08 05 29 47 FFFFFFC0 00 16 08 05 4B 00 FFFFFF84 00 4C
   01 05 61 70 70 6C 79 14 02 16 4D 08 05 29 4A FFFFFFC0
   00 16 
  InnerClass: 
   public final $anonfun$1=class scala/xml/transform/BasicTransformer$$anonfun$1 of class scala/xml/transform/BasicTransformer
   public final $anonfun$transform$1=class scala/xml/transform/BasicTransformer$$anonfun$transform$1 of class scala/xml/transform/BasicTransformer
   public GenericCanBuildFrom=class scala/collection/generic/TraversableFactory$GenericCanBuildFrom of class scala/collection/generic/TraversableFactory
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	BasicTransformer.scala;
Asciz	<init>;
Asciz	()V;
Asciz	Code;
Asciz	LineNumberTable;
Asciz	java/lang/Object;
class	java/lang/Object
NameAndType	"<init>":()V
Method	java/lang/Object."<init>":()V
Asciz	scala/Function1$class;
class	scala/Function1$class
Asciz	$init$;
Asciz	(Lscala/Function1;)V;
NameAndType	$init$:(Lscala/Function1;)V
Method	scala/Function1$class.$init$:(Lscala/Function1;)V
Asciz	apply;
Asciz	(Ljava/lang/Object;)Ljava/lang/Object;;
Asciz	scala/xml/Node;
class	scala/xml/Node
Asciz	scala/xml/transform/BasicTransformer;
class	scala/xml/transform/BasicTransformer
Asciz	(Lscala/xml/Node;)Lscala/xml/Node;;
NameAndType	apply:(Lscala/xml/Node;)Lscala/xml/Node;
Method	scala/xml/transform/BasicTransformer.apply:(Lscala/xml/Node;)Lscala/xml/Node;
Asciz	this;
Asciz	Lscala/xml/transform/BasicTransformer;;
Asciz	v1;
Asciz	Ljava/lang/Object;;
Asciz	LocalVariableTable;
Asciz	transform;
Asciz	(Lscala/xml/Node;)Lscala/collection/Seq;;
NameAndType	transform:(Lscala/xml/Node;)Lscala/collection/Seq;
Method	scala/xml/transform/BasicTransformer.transform:(Lscala/xml/Node;)Lscala/collection/Seq;
Asciz	scala/collection/SeqLike;
class	scala/collection/SeqLike
Asciz	length;
Asciz	()I;
NameAndType	length:()I
InterfaceMethod	scala/collection/SeqLike.length:()I
Asciz	java/lang/UnsupportedOperationException;
class	java/lang/UnsupportedOperationException
Asciz	transform must return single node for root;
String	transform must return single node for root
Asciz	(Ljava/lang/String;)V;
NameAndType	"<init>":(Ljava/lang/String;)V
Method	java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
Asciz	scala/collection/IterableLike;
class	scala/collection/IterableLike
Asciz	head;
Asciz	()Ljava/lang/Object;;
NameAndType	head:()Ljava/lang/Object;
InterfaceMethod	scala/collection/IterableLike.head:()Ljava/lang/Object;
Asciz	n;
Asciz	Lscala/xml/Node;;
Asciz	seq;
Asciz	Lscala/collection/Seq;;
Asciz	doTransform;
Asciz	()Z;
NameAndType	doTransform:()Z
Method	scala/xml/Node.doTransform:()Z
Asciz	scala/xml/Group;
class	scala/xml/Group
Asciz	nodes;
Asciz	()Lscala/collection/Seq;;
NameAndType	nodes:()Lscala/collection/Seq;
Method	scala/xml/Group.nodes:()Lscala/collection/Seq;
Asciz	(Lscala/collection/Seq;)Lscala/collection/Seq;;
NameAndType	transform:(Lscala/collection/Seq;)Lscala/collection/Seq;
Method	scala/xml/transform/BasicTransformer.transform:(Lscala/collection/Seq;)Lscala/collection/Seq;
Asciz	(Lscala/collection/Seq;)V;
NameAndType	"<init>":(Lscala/collection/Seq;)V
Method	scala/xml/Group."<init>":(Lscala/collection/Seq;)V
Asciz	scala/MatchError;
class	scala/MatchError
Asciz	toString;
Asciz	()Ljava/lang/String;;
NameAndType	toString:()Ljava/lang/String;
Method	scala/xml/Node.toString:()Ljava/lang/String;
Method	scala/MatchError."<init>":(Ljava/lang/String;)V
Asciz	child;
NameAndType	child:()Lscala/collection/Seq;
Method	scala/xml/Node.child:()Lscala/collection/Seq;
Asciz	prefix;
NameAndType	prefix:()Ljava/lang/String;
Method	scala/xml/Node.prefix:()Ljava/lang/String;
Asciz	label;
NameAndType	label:()Ljava/lang/String;
Method	scala/xml/Node.label:()Ljava/lang/String;
Asciz	attributes;
Asciz	()Lscala/xml/MetaData;;
NameAndType	attributes:()Lscala/xml/MetaData;
Method	scala/xml/Node.attributes:()Lscala/xml/MetaData;
Asciz	scope;
Asciz	()Lscala/xml/NamespaceBinding;;
NameAndType	scope:()Lscala/xml/NamespaceBinding;
Method	scala/xml/Node.scope:()Lscala/xml/NamespaceBinding;
Asciz	scala/xml/Elem;
class	scala/xml/Elem
Asciz	(Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Seq;)V;
NameAndType	"<init>":(Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Seq;)V
Method	scala/xml/Elem."<init>":(Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Seq;)V
Asciz	temp5;
Asciz	Lscala/xml/Group;;
Asciz	temp6;
Asciz	ch;
Asciz	nch;
Asciz	(Lscala/xml/Node;)Lscala/collection/Seq<Lscala/xml/Node;>;;
Asciz	Signature;
Asciz	scala/xml/transform/BasicTransformer$$anonfun$1;
class	scala/xml/transform/BasicTransformer$$anonfun$1
Asciz	(Lscala/xml/transform/BasicTransformer;)V;
NameAndType	"<init>":(Lscala/xml/transform/BasicTransformer;)V
Method	scala/xml/transform/BasicTransformer$$anonfun$1."<init>":(Lscala/xml/transform/BasicTransformer;)V
Asciz	scala/collection/TraversableLike;
class	scala/collection/TraversableLike
Asciz	span;
Asciz	(Lscala/Function1;)Lscala/Tuple2;;
NameAndType	span:(Lscala/Function1;)Lscala/Tuple2;
InterfaceMethod	scala/collection/TraversableLike.span:(Lscala/Function1;)Lscala/Tuple2;
Asciz	scala/Tuple2;
class	scala/Tuple2
Asciz	_1;
NameAndType	_1:()Ljava/lang/Object;
Method	scala/Tuple2._1:()Ljava/lang/Object;
Asciz	scala/collection/Seq;
class	scala/collection/Seq
Asciz	_2;
NameAndType	_2:()Ljava/lang/Object;
Method	scala/Tuple2._2:()Ljava/lang/Object;
Asciz	(Ljava/lang/Object;Ljava/lang/Object;)V;
NameAndType	"<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
Method	scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
Asciz	isEmpty;
NameAndType	isEmpty:()Z
InterfaceMethod	scala/collection/IterableLike.isEmpty:()Z
Asciz	scala/collection/Seq$;
class	scala/collection/Seq$
Asciz	MODULE$;
Asciz	Lscala/collection/Seq$;;
NameAndType	MODULE$:Lscala/collection/Seq$;
Field	scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
Asciz	scala/collection/generic/TraversableFactory$GenericCanBuildFrom;
class	scala/collection/generic/TraversableFactory$GenericCanBuildFrom
Asciz	(Lscala/collection/generic/TraversableFactory;)V;
NameAndType	"<init>":(Lscala/collection/generic/TraversableFactory;)V
Method	scala/collection/generic/TraversableFactory$GenericCanBuildFrom."<init>":(Lscala/collection/generic/TraversableFactory;)V
Asciz	$plus$plus;
Asciz	(Lscala/collection/Traversable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;;
NameAndType	$plus$plus:(Lscala/collection/Traversable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
InterfaceMethod	scala/collection/TraversableLike.$plus$plus:(Lscala/collection/Traversable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
Asciz	tail;
NameAndType	tail:()Ljava/lang/Object;
InterfaceMethod	scala/collection/TraversableLike.tail:()Ljava/lang/Object;
Method	scala/Tuple2.toString:()Ljava/lang/String;
Asciz	ns;
Asciz	temp2;
Asciz	temp3;
Asciz	xs1;
Asciz	xs2;
Asciz	temp1;
Asciz	Lscala/Tuple2;;
Asciz	(Lscala/collection/Seq<Lscala/xml/Node;>;)Lscala/collection/Seq<Lscala/xml/Node;>;;
Asciz	(Lscala/collection/Iterator;Lscala/xml/NodeBuffer;)Lscala/collection/Seq;;
Asciz	scala/xml/transform/BasicTransformer$$anonfun$transform$1;
class	scala/xml/transform/BasicTransformer$$anonfun$transform$1
Method	scala/xml/transform/BasicTransformer$$anonfun$transform$1."<init>":(Lscala/xml/transform/BasicTransformer;)V
Asciz	scala/collection/Iterator;
class	scala/collection/Iterator
Asciz	foldLeft;
Asciz	(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;;
NameAndType	foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
InterfaceMethod	scala/collection/Iterator.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
Asciz	toSeq;
NameAndType	toSeq:()Lscala/collection/Seq;
InterfaceMethod	scala/collection/SeqLike.toSeq:()Lscala/collection/Seq;
Asciz	it;
Asciz	Lscala/collection/Iterator;;
Asciz	nb;
Asciz	Lscala/xml/NodeBuffer;;
Asciz	(Lscala/collection/Iterator<Lscala/xml/Node;>;Lscala/xml/NodeBuffer;)Lscala/collection/Seq<Lscala/xml/Node;>;;
Asciz	unchanged;
Asciz	(Lscala/xml/Node;Lscala/collection/Seq;)Z;
Asciz	equals;
Asciz	(Ljava/lang/Object;)Z;
NameAndType	equals:(Ljava/lang/Object;)Z
Method	java/lang/Object.equals:(Ljava/lang/Object;)Z
Asciz	(Lscala/xml/Node;Lscala/collection/Seq<Lscala/xml/Node;>;)Z;
Asciz	andThen;
Asciz	(Lscala/Function1;)Lscala/Function1;;
Asciz	(Lscala/Function1;Lscala/Function1;)Lscala/Function1;;
NameAndType	andThen:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
Method	scala/Function1$class.andThen:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
Asciz	g;
Asciz	Lscala/Function1;;
Asciz	compose;
NameAndType	compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
Method	scala/Function1$class.compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
Asciz	(Lscala/Function1;)Ljava/lang/String;;
NameAndType	toString:(Lscala/Function1;)Ljava/lang/String;
Method	scala/Function1$class.toString:(Lscala/Function1;)Ljava/lang/String;
Asciz	Ljava/lang/Object;Lscala/Function1<Lscala/xml/Node;Lscala/xml/Node;>;Lscala/ScalaObject;;
Asciz	ScalaSig;
Asciz	InnerClasses;
Asciz	$anonfun$1;
Asciz	$anonfun$transform$1;
Asciz	scala/collection/generic/TraversableFactory;
class	scala/collection/generic/TraversableFactory
Asciz	GenericCanBuildFrom;
Asciz	scala/Function1;
class	scala/Function1
Asciz	scala/ScalaObject;
class	scala/ScalaObject

{
public scala.xml.transform.BasicTransformer();
  Signature: ()V
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokespecial	Method java/lang/Object."<init>":()V
	aload_0
	invokestatic	Method scala/Function1$class.$init$:(Lscala/Function1;)V
	return
  Labels:

public java.lang.Object apply(java.lang.Object);
  Signature: (Ljava/lang/Object;)Ljava/lang/Object;
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	checkcast	class scala/xml/Node
	invokevirtual	Method apply:(Lscala/xml/Node;)Lscala/xml/Node;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/xml/transform/BasicTransformer;
   0      9      1    v1       Ljava/lang/Object;


public scala.xml.Node apply(scala.xml.Node);
  Signature: (Lscala/xml/Node;)Lscala/xml/Node;
  Code:
   Stack=3, Locals=3, Args_size=2
	aload_0
	aload_1
	invokevirtual	Method transform:(Lscala/xml/Node;)Lscala/collection/Seq;
	astore_2
	aload_2
	invokeinterface	InterfaceMethod scala/collection/SeqLike.length:()I
	iconst_1
	if_icmple	l1 // aload_2
	new	class java/lang/UnsupportedOperationException
	dup
	ldc	String transform must return single node for root
	invokespecial	Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
	athrow
l1	aload_2
	invokeinterface	InterfaceMethod scala/collection/IterableLike.head:()Ljava/lang/Object;
	checkcast	class scala/xml/Node
	areturn
  Labels:
   	l1 = 26 // aload_2
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      36      0    this       Lscala/xml/transform/BasicTransformer;
   0      36      1    n       Lscala/xml/Node;
   6      30      2    seq       Lscala/collection/Seq;


public scala.collection.Seq transform(scala.xml.Node);
  Signature: (Lscala/xml/Node;)Lscala/collection/Seq;
  Code:
   Stack=7, Locals=10, Args_size=2
	aload_1
	invokevirtual	Method scala/xml/Node.doTransform:()Z
	ifeq	l1 // aload_1
	aload_1
	instanceof	class scala/xml/Group
	ifeq	l2 // iconst_1
	aload_1
	checkcast	class scala/xml/Group
	astore_2
	aload_2
	invokevirtual	Method scala/xml/Group.nodes:()Lscala/collection/Seq;
	astore_3
	iconst_1
	ifeq	l3 // new
	new	class scala/xml/Group
	dup
	aload_0
	aload_3
	invokevirtual	Method transform:(Lscala/collection/Seq;)Lscala/collection/Seq;
	invokespecial	Method scala/xml/Group."<init>":(Lscala/collection/Seq;)V
	goto	l4 // areturn
l3	new	class scala/MatchError
	dup
	aload_1
	invokevirtual	Method scala/xml/Node.toString:()Ljava/lang/String;
	invokespecial	Method scala/MatchError."<init>":(Ljava/lang/String;)V
	athrow
l2	iconst_1
	ifeq	l5 // new
	aload_1
	invokevirtual	Method scala/xml/Node.child:()Lscala/collection/Seq;
	astore	4
	aload_0
	aload	4
	invokevirtual	Method transform:(Lscala/collection/Seq;)Lscala/collection/Seq;
	astore	9
	aload	4
	aload	9
	if_acmpne	l6 // aload_1
	aload_1
	goto	l4 // areturn
l6	aload_1
	invokevirtual	Method scala/xml/Node.prefix:()Ljava/lang/String;
	aload_1
	invokevirtual	Method scala/xml/Node.label:()Ljava/lang/String;
	aload_1
	invokevirtual	Method scala/xml/Node.attributes:()Lscala/xml/MetaData;
	aload_1
	invokevirtual	Method scala/xml/Node.scope:()Lscala/xml/NamespaceBinding;
	astore	8
	astore	7
	astore	6
	astore	5
	new	class scala/xml/Elem
	dup
	aload	5
	aload	6
	aload	7
	aload	8
	aload	9
	invokespecial	Method scala/xml/Elem."<init>":(Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Seq;)V
	goto	l4 // areturn
l5	new	class scala/MatchError
	dup
	aload_1
	invokevirtual	Method scala/xml/Node.toString:()Ljava/lang/String;
	invokespecial	Method scala/MatchError."<init>":(Ljava/lang/String;)V
	athrow
l1	aload_1
l4	areturn
  Labels:
   	l3 = 43 // new
   	l2 = 55 // iconst_1
   	l6 = 84 // aload_1
   	l5 = 128 // new
   	l1 = 140 // aload_1
   	l4 = 141 // areturn
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      142      0    this       Lscala/xml/transform/BasicTransformer;
   0      142      1    n       Lscala/xml/Node;
   19      36      2    temp5       Lscala/xml/Group;
   24      31      3    temp6       Lscala/collection/Seq;
   65      63      4    ch       Lscala/collection/Seq;
   73      55      9    nch       Lscala/collection/Seq;

  Signature: length = 0x2
   00 6C 

public scala.collection.Seq transform(scala.collection.Seq);
  Signature: (Lscala/collection/Seq;)Lscala/collection/Seq;
  Code:
   Stack=5, Locals=10, Args_size=2
	aload_1
	new	class scala/xml/transform/BasicTransformer$$anonfun$1
	dup
	aload_0
	invokespecial	Method scala/xml/transform/BasicTransformer$$anonfun$1."<init>":(Lscala/xml/transform/BasicTransformer;)V
	invokeinterface	InterfaceMethod scala/collection/TraversableLike.span:(Lscala/Function1;)Lscala/Tuple2;
	astore	9
	aload	9
	ifnull	l1 // new
	aload	9
	invokevirtual	Method scala/Tuple2._1:()Ljava/lang/Object;
	checkcast	class scala/collection/Seq
	astore_2
	aload	9
	invokevirtual	Method scala/Tuple2._2:()Ljava/lang/Object;
	checkcast	class scala/collection/Seq
	astore_3
	iconst_1
	ifeq	l2 // new
	new	class scala/Tuple2
	dup
	aload_2
	aload_3
	invokespecial	Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
	astore	4
	aload	4
	invokevirtual	Method scala/Tuple2._1:()Ljava/lang/Object;
	checkcast	class scala/collection/Seq
	astore	5
	aload	4
	invokevirtual	Method scala/Tuple2._2:()Ljava/lang/Object;
	checkcast	class scala/collection/Seq
	astore	7
	aload	7
	invokeinterface	InterfaceMethod scala/collection/IterableLike.isEmpty:()Z
	ifeq	l3 // aload
	aload_1
	goto	l4 // areturn
l3	aload	5
	aload_0
	aload	7
	invokeinterface	InterfaceMethod scala/collection/IterableLike.head:()Ljava/lang/Object;
	checkcast	class scala/xml/Node
	invokevirtual	Method transform:(Lscala/xml/Node;)Lscala/collection/Seq;
	getstatic	Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
	astore	6
	new	class scala/collection/generic/TraversableFactory$GenericCanBuildFrom
	dup
	aload	6
	invokespecial	Method scala/collection/generic/TraversableFactory$GenericCanBuildFrom."<init>":(Lscala/collection/generic/TraversableFactory;)V
	invokeinterface	InterfaceMethod scala/collection/TraversableLike.$plus$plus:(Lscala/collection/Traversable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
	checkcast	class scala/collection/TraversableLike
	aload_0
	aload	7
	invokeinterface	InterfaceMethod scala/collection/TraversableLike.tail:()Ljava/lang/Object;
	checkcast	class scala/collection/Seq
	invokevirtual	Method transform:(Lscala/collection/Seq;)Lscala/collection/Seq;
	getstatic	Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
	astore	8
	new	class scala/collection/generic/TraversableFactory$GenericCanBuildFrom
	dup
	aload	8
	invokespecial	Method scala/collection/generic/TraversableFactory$GenericCanBuildFrom."<init>":(Lscala/collection/generic/TraversableFactory;)V
	invokeinterface	InterfaceMethod scala/collection/TraversableLike.$plus$plus:(Lscala/collection/Traversable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
	checkcast	class scala/collection/Seq
l4	areturn
l2	new	class scala/MatchError
	dup
	aload	9
	invokevirtual	Method scala/Tuple2.toString:()Ljava/lang/String;
	invokespecial	Method scala/MatchError."<init>":(Ljava/lang/String;)V
	athrow
l1	new	class scala/MatchError
	dup
	aload	9
	invokevirtual	Method scala/Tuple2.toString:()Ljava/lang/String;
	invokespecial	Method scala/MatchError."<init>":(Ljava/lang/String;)V
	athrow
  Labels:
   	l3 = 88 // aload
   	l4 = 162 // areturn
   	l2 = 163 // new
   	l1 = 176 // new
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      189      0    this       Lscala/xml/transform/BasicTransformer;
   0      189      1    ns       Lscala/collection/Seq;
   30      54      2    temp2       Lscala/collection/Seq;
   163      13      2    temp2       Lscala/collection/Seq;
   39      45      3    temp3       Lscala/collection/Seq;
   163      13      3    temp3       Lscala/collection/Seq;
   64      99      5    xs1       Lscala/collection/Seq;
   74      89      7    xs2       Lscala/collection/Seq;
   16      68      9    temp1       Lscala/Tuple2;
   163      26      9    temp1       Lscala/Tuple2;

  Signature: length = 0x2
   00 FFFFFFA3 

public scala.collection.Seq transform(scala.collection.Iterator, scala.xml.NodeBuffer);
  Signature: (Lscala/collection/Iterator;Lscala/xml/NodeBuffer;)Lscala/collection/Seq;
  Code:
   Stack=5, Locals=3, Args_size=3
	aload_1
	aload_2
	new	class scala/xml/transform/BasicTransformer$$anonfun$transform$1
	dup
	aload_0
	invokespecial	Method scala/xml/transform/BasicTransformer$$anonfun$transform$1."<init>":(Lscala/xml/transform/BasicTransformer;)V
	invokeinterface	InterfaceMethod scala/collection/Iterator.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
	checkcast	class scala/collection/SeqLike
	invokeinterface	InterfaceMethod scala/collection/SeqLike.toSeq:()Lscala/collection/Seq;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      24      0    this       Lscala/xml/transform/BasicTransformer;
   0      24      1    it       Lscala/collection/Iterator;
   0      24      2    nb       Lscala/xml/NodeBuffer;

  Signature: length = 0x2
   00 FFFFFFB5 

public boolean unchanged(scala.xml.Node, scala.collection.Seq);
  Signature: (Lscala/xml/Node;Lscala/collection/Seq;)Z
  Code:
   Stack=2, Locals=3, Args_size=3
	aload_2
	invokeinterface	InterfaceMethod scala/collection/SeqLike.length:()I
	iconst_1
	if_icmpne	l1 // iconst_0
	aload_2
	invokeinterface	InterfaceMethod scala/collection/IterableLike.head:()Ljava/lang/Object;
	dup
	ifnonnull	l2 // aload_1
	pop
	aload_1
	ifnull	l3 // iconst_1
	goto	l1 // iconst_0
l2	aload_1
	invokevirtual	Method java/lang/Object.equals:(Ljava/lang/Object;)Z
	ifeq	l1 // iconst_0
l3	iconst_1
	goto	l4 // ireturn
l1	iconst_0
l4	ireturn
  Labels:
   	l2 = 28 // aload_1
   	l3 = 35 // iconst_1
   	l1 = 39 // iconst_0
   	l4 = 40 // ireturn
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      41      0    this       Lscala/xml/transform/BasicTransformer;
   0      41      1    n       Lscala/xml/Node;
   0      41      2    ns       Lscala/collection/Seq;

  Signature: length = 0x2
   00 FFFFFFBC 

public scala.Function1 andThen(scala.Function1);
  Signature: (Lscala/Function1;)Lscala/Function1;
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokestatic	Method scala/Function1$class.andThen:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/transform/BasicTransformer;
   0      6      1    g       Lscala/Function1;


public scala.Function1 compose(scala.Function1);
  Signature: (Lscala/Function1;)Lscala/Function1;
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	invokestatic	Method scala/Function1$class.compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/transform/BasicTransformer;
   0      6      1    g       Lscala/Function1;


public java.lang.String toString();
  Signature: ()Ljava/lang/String;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokestatic	Method scala/Function1$class.toString:(Lscala/Function1;)Ljava/lang/String;
	areturn
  Labels:

}

