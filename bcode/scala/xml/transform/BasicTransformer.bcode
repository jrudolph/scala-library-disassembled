Compiled from "BasicTransformer.scala"
public abstract class scala.xml.transform.BasicTransformer extends java.lang.Object implements scala.Function1,scala.ScalaObject
  SourceFile: "BasicTransformer.scala"
  Signature: length = 0x2
   00 FFFFFFCA 
  ScalaSig: length = 0x1C2
   05 00 4E 06 08 01 02 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF81 00 09 02 10 42
   61 73 69 63 54 72 61 6E 73 66 6F 72 6D 65 72 0A
   02 03 04 01 09 74 72 61 6E 73 66 6F 72 6D 0A 02
   05 06 01 03 78 6D 6C 0A 01 07 01 05 73 63 61 6C
   61 03 00 13 04 00 0A 12 1A 10 02 0B 10 0D 01 0C
   0A 02 0D 0E 01 04 6C 61 6E 67 0A 01 0F 01 04 6A
   61 76 61 09 02 11 0C 02 06 4F 62 6A 65 63 74 10
   04 13 14 16 16 0D 01 06 09 02 15 06 02 09 46 75
   6E 63 74 69 6F 6E 31 10 02 17 18 0D 01 04 09 02
   19 04 02 04 4E 6F 64 65 10 02 13 1B 09 02 1C 06
   02 0B 53 63 61 6C 61 4F 62 6A 65 63 74 08 05 1E
   00 FFFFFF84 00 1F 01 06 3C 69 6E 69 74 3E 14 01 20 10
   02 21 00 0D 01 02 08 05 23 00 FFFFFF84 08 24 01 09 75
   6E 63 68 61 6E 67 65 64 14 03 25 28 2A 10 02 13
   26 09 02 27 06 02 07 42 6F 6F 6C 65 61 6E 08 05
   29 22 FFFFFFC0 00 16 01 01 6E 08 05 2B 22 FFFFFFC0 00 2C 01
   02 6E 73 10 03 2D 35 16 0E 02 2E 33 0E 02 2F 32
   0D 01 30 0A 02 31 08 01 06 3C 72 6F 6F 74 3E 09
   01 07 09 02 34 06 01 07 70 61 63 6B 61 67 65 09
   02 36 37 02 03 53 65 71 0A 02 34 06 08 05 03 00
   FFFFFF84 00 39 14 03 2C 3A 3F 08 05 3B 38 FFFFFFC0 00 3C 01
   02 69 74 10 03 2D 3D 16 09 02 3E 37 02 08 49 74
   65 72 61 74 6F 72 08 05 40 38 FFFFFFC0 00 41 01 02 6E
   62 10 02 17 42 09 02 43 04 02 0A 4E 6F 64 65 42
   75 66 66 65 72 08 05 03 00 FFFFFF84 00 45 14 02 2C 46
   08 05 2B 44 FFFFFFC0 00 2C 08 05 03 00 FFFFFF84 00 48 14 02
   2C 49 08 05 29 47 FFFFFFC0 00 16 08 05 4B 00 FFFFFF84 00 4C
   01 05 61 70 70 6C 79 14 02 16 4D 08 05 29 4A FFFFFFC0
   00 16 
  InnerClass: 
   public final #205= #111 of #22; //$anonfun$1=class scala/xml/transform/BasicTransformer$$anonfun$1 of class scala/xml/transform/BasicTransformer
   public final #206= #166 of #22; //$anonfun$transform$1=class scala/xml/transform/BasicTransformer$$anonfun$transform$1 of class scala/xml/transform/BasicTransformer
   public #209= #144 of #208; //GenericCanBuildFrom=class scala/collection/generic/TraversableFactory$GenericCanBuildFrom of class scala/collection/generic/TraversableFactory
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	BasicTransformer.scala;
const #3 = Asciz	<init>;
const #4 = Asciz	()V;
const #5 = Asciz	Code;
const #6 = Asciz	LineNumberTable;
const #7 = Asciz	java/lang/Object;
const #8 = class	#7;	//  java/lang/Object
const #9 = NameAndType	#3:#4;//  "<init>":()V
const #10 = Method	#8.#9;	//  java/lang/Object."<init>":()V
const #11 = Asciz	scala/Function1$class;
const #12 = class	#11;	//  scala/Function1$class
const #13 = Asciz	$init$;
const #14 = Asciz	(Lscala/Function1;)V;
const #15 = NameAndType	#13:#14;//  $init$:(Lscala/Function1;)V
const #16 = Method	#12.#15;	//  scala/Function1$class.$init$:(Lscala/Function1;)V
const #17 = Asciz	apply;
const #18 = Asciz	(Ljava/lang/Object;)Ljava/lang/Object;;
const #19 = Asciz	scala/xml/Node;
const #20 = class	#19;	//  scala/xml/Node
const #21 = Asciz	scala/xml/transform/BasicTransformer;
const #22 = class	#21;	//  scala/xml/transform/BasicTransformer
const #23 = Asciz	(Lscala/xml/Node;)Lscala/xml/Node;;
const #24 = NameAndType	#17:#23;//  apply:(Lscala/xml/Node;)Lscala/xml/Node;
const #25 = Method	#22.#24;	//  scala/xml/transform/BasicTransformer.apply:(Lscala/xml/Node;)Lscala/xml/Node;
const #26 = Asciz	this;
const #27 = Asciz	Lscala/xml/transform/BasicTransformer;;
const #28 = Asciz	v1;
const #29 = Asciz	Ljava/lang/Object;;
const #30 = Asciz	LocalVariableTable;
const #31 = Asciz	transform;
const #32 = Asciz	(Lscala/xml/Node;)Lscala/collection/Seq;;
const #33 = NameAndType	#31:#32;//  transform:(Lscala/xml/Node;)Lscala/collection/Seq;
const #34 = Method	#22.#33;	//  scala/xml/transform/BasicTransformer.transform:(Lscala/xml/Node;)Lscala/collection/Seq;
const #35 = Asciz	scala/collection/SeqLike;
const #36 = class	#35;	//  scala/collection/SeqLike
const #37 = Asciz	length;
const #38 = Asciz	()I;
const #39 = NameAndType	#37:#38;//  length:()I
const #40 = InterfaceMethod	#36.#39;	//  scala/collection/SeqLike.length:()I
const #41 = Asciz	java/lang/UnsupportedOperationException;
const #42 = class	#41;	//  java/lang/UnsupportedOperationException
const #43 = Asciz	transform must return single node for root;
const #44 = String	#43;	//  transform must return single node for root
const #45 = Asciz	(Ljava/lang/String;)V;
const #46 = NameAndType	#3:#45;//  "<init>":(Ljava/lang/String;)V
const #47 = Method	#42.#46;	//  java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
const #48 = Asciz	scala/collection/IterableLike;
const #49 = class	#48;	//  scala/collection/IterableLike
const #50 = Asciz	head;
const #51 = Asciz	()Ljava/lang/Object;;
const #52 = NameAndType	#50:#51;//  head:()Ljava/lang/Object;
const #53 = InterfaceMethod	#49.#52;	//  scala/collection/IterableLike.head:()Ljava/lang/Object;
const #54 = Asciz	n;
const #55 = Asciz	Lscala/xml/Node;;
const #56 = Asciz	seq;
const #57 = Asciz	Lscala/collection/Seq;;
const #58 = Asciz	doTransform;
const #59 = Asciz	()Z;
const #60 = NameAndType	#58:#59;//  doTransform:()Z
const #61 = Method	#20.#60;	//  scala/xml/Node.doTransform:()Z
const #62 = Asciz	scala/xml/Group;
const #63 = class	#62;	//  scala/xml/Group
const #64 = Asciz	nodes;
const #65 = Asciz	()Lscala/collection/Seq;;
const #66 = NameAndType	#64:#65;//  nodes:()Lscala/collection/Seq;
const #67 = Method	#63.#66;	//  scala/xml/Group.nodes:()Lscala/collection/Seq;
const #68 = Asciz	(Lscala/collection/Seq;)Lscala/collection/Seq;;
const #69 = NameAndType	#31:#68;//  transform:(Lscala/collection/Seq;)Lscala/collection/Seq;
const #70 = Method	#22.#69;	//  scala/xml/transform/BasicTransformer.transform:(Lscala/collection/Seq;)Lscala/collection/Seq;
const #71 = Asciz	(Lscala/collection/Seq;)V;
const #72 = NameAndType	#3:#71;//  "<init>":(Lscala/collection/Seq;)V
const #73 = Method	#63.#72;	//  scala/xml/Group."<init>":(Lscala/collection/Seq;)V
const #74 = Asciz	scala/MatchError;
const #75 = class	#74;	//  scala/MatchError
const #76 = Asciz	toString;
const #77 = Asciz	()Ljava/lang/String;;
const #78 = NameAndType	#76:#77;//  toString:()Ljava/lang/String;
const #79 = Method	#20.#78;	//  scala/xml/Node.toString:()Ljava/lang/String;
const #80 = Method	#75.#46;	//  scala/MatchError."<init>":(Ljava/lang/String;)V
const #81 = Asciz	child;
const #82 = NameAndType	#81:#65;//  child:()Lscala/collection/Seq;
const #83 = Method	#20.#82;	//  scala/xml/Node.child:()Lscala/collection/Seq;
const #84 = Asciz	prefix;
const #85 = NameAndType	#84:#77;//  prefix:()Ljava/lang/String;
const #86 = Method	#20.#85;	//  scala/xml/Node.prefix:()Ljava/lang/String;
const #87 = Asciz	label;
const #88 = NameAndType	#87:#77;//  label:()Ljava/lang/String;
const #89 = Method	#20.#88;	//  scala/xml/Node.label:()Ljava/lang/String;
const #90 = Asciz	attributes;
const #91 = Asciz	()Lscala/xml/MetaData;;
const #92 = NameAndType	#90:#91;//  attributes:()Lscala/xml/MetaData;
const #93 = Method	#20.#92;	//  scala/xml/Node.attributes:()Lscala/xml/MetaData;
const #94 = Asciz	scope;
const #95 = Asciz	()Lscala/xml/NamespaceBinding;;
const #96 = NameAndType	#94:#95;//  scope:()Lscala/xml/NamespaceBinding;
const #97 = Method	#20.#96;	//  scala/xml/Node.scope:()Lscala/xml/NamespaceBinding;
const #98 = Asciz	scala/xml/Elem;
const #99 = class	#98;	//  scala/xml/Elem
const #100 = Asciz	(Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Seq;)V;
const #101 = NameAndType	#3:#100;//  "<init>":(Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Seq;)V
const #102 = Method	#99.#101;	//  scala/xml/Elem."<init>":(Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Seq;)V
const #103 = Asciz	temp5;
const #104 = Asciz	Lscala/xml/Group;;
const #105 = Asciz	temp6;
const #106 = Asciz	ch;
const #107 = Asciz	nch;
const #108 = Asciz	(Lscala/xml/Node;)Lscala/collection/Seq<Lscala/xml/Node;>;;
const #109 = Asciz	Signature;
const #110 = Asciz	scala/xml/transform/BasicTransformer$$anonfun$1;
const #111 = class	#110;	//  scala/xml/transform/BasicTransformer$$anonfun$1
const #112 = Asciz	(Lscala/xml/transform/BasicTransformer;)V;
const #113 = NameAndType	#3:#112;//  "<init>":(Lscala/xml/transform/BasicTransformer;)V
const #114 = Method	#111.#113;	//  scala/xml/transform/BasicTransformer$$anonfun$1."<init>":(Lscala/xml/transform/BasicTransformer;)V
const #115 = Asciz	scala/collection/TraversableLike;
const #116 = class	#115;	//  scala/collection/TraversableLike
const #117 = Asciz	span;
const #118 = Asciz	(Lscala/Function1;)Lscala/Tuple2;;
const #119 = NameAndType	#117:#118;//  span:(Lscala/Function1;)Lscala/Tuple2;
const #120 = InterfaceMethod	#116.#119;	//  scala/collection/TraversableLike.span:(Lscala/Function1;)Lscala/Tuple2;
const #121 = Asciz	scala/Tuple2;
const #122 = class	#121;	//  scala/Tuple2
const #123 = Asciz	_1;
const #124 = NameAndType	#123:#51;//  _1:()Ljava/lang/Object;
const #125 = Method	#122.#124;	//  scala/Tuple2._1:()Ljava/lang/Object;
const #126 = Asciz	scala/collection/Seq;
const #127 = class	#126;	//  scala/collection/Seq
const #128 = Asciz	_2;
const #129 = NameAndType	#128:#51;//  _2:()Ljava/lang/Object;
const #130 = Method	#122.#129;	//  scala/Tuple2._2:()Ljava/lang/Object;
const #131 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)V;
const #132 = NameAndType	#3:#131;//  "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
const #133 = Method	#122.#132;	//  scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
const #134 = Asciz	isEmpty;
const #135 = NameAndType	#134:#59;//  isEmpty:()Z
const #136 = InterfaceMethod	#49.#135;	//  scala/collection/IterableLike.isEmpty:()Z
const #137 = Asciz	scala/collection/Seq$;
const #138 = class	#137;	//  scala/collection/Seq$
const #139 = Asciz	MODULE$;
const #140 = Asciz	Lscala/collection/Seq$;;
const #141 = NameAndType	#139:#140;//  MODULE$:Lscala/collection/Seq$;
const #142 = Field	#138.#141;	//  scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
const #143 = Asciz	scala/collection/generic/TraversableFactory$GenericCanBuildFrom;
const #144 = class	#143;	//  scala/collection/generic/TraversableFactory$GenericCanBuildFrom
const #145 = Asciz	(Lscala/collection/generic/TraversableFactory;)V;
const #146 = NameAndType	#3:#145;//  "<init>":(Lscala/collection/generic/TraversableFactory;)V
const #147 = Method	#144.#146;	//  scala/collection/generic/TraversableFactory$GenericCanBuildFrom."<init>":(Lscala/collection/generic/TraversableFactory;)V
const #148 = Asciz	$plus$plus;
const #149 = Asciz	(Lscala/collection/Traversable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;;
const #150 = NameAndType	#148:#149;//  $plus$plus:(Lscala/collection/Traversable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
const #151 = InterfaceMethod	#116.#150;	//  scala/collection/TraversableLike.$plus$plus:(Lscala/collection/Traversable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
const #152 = Asciz	tail;
const #153 = NameAndType	#152:#51;//  tail:()Ljava/lang/Object;
const #154 = InterfaceMethod	#116.#153;	//  scala/collection/TraversableLike.tail:()Ljava/lang/Object;
const #155 = Method	#122.#78;	//  scala/Tuple2.toString:()Ljava/lang/String;
const #156 = Asciz	ns;
const #157 = Asciz	temp2;
const #158 = Asciz	temp3;
const #159 = Asciz	xs1;
const #160 = Asciz	xs2;
const #161 = Asciz	temp1;
const #162 = Asciz	Lscala/Tuple2;;
const #163 = Asciz	(Lscala/collection/Seq<Lscala/xml/Node;>;)Lscala/collection/Seq<Lscala/xml/Node;>;;
const #164 = Asciz	(Lscala/collection/Iterator;Lscala/xml/NodeBuffer;)Lscala/collection/Seq;;
const #165 = Asciz	scala/xml/transform/BasicTransformer$$anonfun$transform$1;
const #166 = class	#165;	//  scala/xml/transform/BasicTransformer$$anonfun$transform$1
const #167 = Method	#166.#113;	//  scala/xml/transform/BasicTransformer$$anonfun$transform$1."<init>":(Lscala/xml/transform/BasicTransformer;)V
const #168 = Asciz	scala/collection/Iterator;
const #169 = class	#168;	//  scala/collection/Iterator
const #170 = Asciz	foldLeft;
const #171 = Asciz	(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;;
const #172 = NameAndType	#170:#171;//  foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
const #173 = InterfaceMethod	#169.#172;	//  scala/collection/Iterator.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
const #174 = Asciz	toSeq;
const #175 = NameAndType	#174:#65;//  toSeq:()Lscala/collection/Seq;
const #176 = InterfaceMethod	#36.#175;	//  scala/collection/SeqLike.toSeq:()Lscala/collection/Seq;
const #177 = Asciz	it;
const #178 = Asciz	Lscala/collection/Iterator;;
const #179 = Asciz	nb;
const #180 = Asciz	Lscala/xml/NodeBuffer;;
const #181 = Asciz	(Lscala/collection/Iterator<Lscala/xml/Node;>;Lscala/xml/NodeBuffer;)Lscala/collection/Seq<Lscala/xml/Node;>;;
const #182 = Asciz	unchanged;
const #183 = Asciz	(Lscala/xml/Node;Lscala/collection/Seq;)Z;
const #184 = Asciz	equals;
const #185 = Asciz	(Ljava/lang/Object;)Z;
const #186 = NameAndType	#184:#185;//  equals:(Ljava/lang/Object;)Z
const #187 = Method	#8.#186;	//  java/lang/Object.equals:(Ljava/lang/Object;)Z
const #188 = Asciz	(Lscala/xml/Node;Lscala/collection/Seq<Lscala/xml/Node;>;)Z;
const #189 = Asciz	andThen;
const #190 = Asciz	(Lscala/Function1;)Lscala/Function1;;
const #191 = Asciz	(Lscala/Function1;Lscala/Function1;)Lscala/Function1;;
const #192 = NameAndType	#189:#191;//  andThen:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
const #193 = Method	#12.#192;	//  scala/Function1$class.andThen:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
const #194 = Asciz	g;
const #195 = Asciz	Lscala/Function1;;
const #196 = Asciz	compose;
const #197 = NameAndType	#196:#191;//  compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
const #198 = Method	#12.#197;	//  scala/Function1$class.compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
const #199 = Asciz	(Lscala/Function1;)Ljava/lang/String;;
const #200 = NameAndType	#76:#199;//  toString:(Lscala/Function1;)Ljava/lang/String;
const #201 = Method	#12.#200;	//  scala/Function1$class.toString:(Lscala/Function1;)Ljava/lang/String;
const #202 = Asciz	Ljava/lang/Object;Lscala/Function1<Lscala/xml/Node;Lscala/xml/Node;>;Lscala/ScalaObject;;
const #203 = Asciz	ScalaSig;
const #204 = Asciz	InnerClasses;
const #205 = Asciz	$anonfun$1;
const #206 = Asciz	$anonfun$transform$1;
const #207 = Asciz	scala/collection/generic/TraversableFactory;
const #208 = class	#207;	//  scala/collection/generic/TraversableFactory
const #209 = Asciz	GenericCanBuildFrom;
const #210 = Asciz	scala/Function1;
const #211 = class	#210;	//  scala/Function1
const #212 = Asciz	scala/ScalaObject;
const #213 = class	#212;	//  scala/ScalaObject

{
public scala.xml.transform.BasicTransformer();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokespecial	#10; //Method java/lang/Object."<init>":()V
   4:	aload_0
   5:	invokestatic	#16; //Method scala/Function1$class.$init$:(Lscala/Function1;)V
   8:	return
  LineNumberTable: 
   line 20: 0


public java.lang.Object apply(java.lang.Object);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	checkcast	#20; //class scala/xml/Node
   5:	invokevirtual	#25; //Method apply:(Lscala/xml/Node;)Lscala/xml/Node;
   8:	areturn
  LineNumberTable: 
   line 20: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/xml/transform/BasicTransformer;
   0      9      1    v1       Ljava/lang/Object;


public scala.xml.Node apply(scala.xml.Node);
  Code:
   Stack=3, Locals=3, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokevirtual	#34; //Method transform:(Lscala/xml/Node;)Lscala/collection/Seq;
   5:	astore_2
   6:	aload_2
   7:	invokeinterface	#40,  1; //InterfaceMethod scala/collection/SeqLike.length:()I
   12:	iconst_1
   13:	if_icmple	26
   16:	new	#42; //class java/lang/UnsupportedOperationException
   19:	dup
   20:	ldc	#44; //String transform must return single node for root
   22:	invokespecial	#47; //Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
   25:	athrow
   26:	aload_2
   27:	invokeinterface	#53,  1; //InterfaceMethod scala/collection/IterableLike.head:()Ljava/lang/Object;
   32:	checkcast	#20; //class scala/xml/Node
   35:	areturn
  LineNumberTable: 
   line 60: 0
   line 61: 6
   line 62: 16
   line 63: 26
   line 59: 35

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      36      0    this       Lscala/xml/transform/BasicTransformer;
   0      36      1    n       Lscala/xml/Node;
   6      30      2    seq       Lscala/collection/Seq;


public scala.collection.Seq transform(scala.xml.Node);
  Code:
   Stack=7, Locals=10, Args_size=2
   0:	aload_1
   1:	invokevirtual	#61; //Method scala/xml/Node.doTransform:()Z
   4:	ifeq	140
   7:	aload_1
   8:	instanceof	#63; //class scala/xml/Group
   11:	ifeq	55
   14:	aload_1
   15:	checkcast	#63; //class scala/xml/Group
   18:	astore_2
   19:	aload_2
   20:	invokevirtual	#67; //Method scala/xml/Group.nodes:()Lscala/collection/Seq;
   23:	astore_3
   24:	iconst_1
   25:	ifeq	43
   28:	new	#63; //class scala/xml/Group
   31:	dup
   32:	aload_0
   33:	aload_3
   34:	invokevirtual	#70; //Method transform:(Lscala/collection/Seq;)Lscala/collection/Seq;
   37:	invokespecial	#73; //Method scala/xml/Group."<init>":(Lscala/collection/Seq;)V
   40:	goto	141
   43:	new	#75; //class scala/MatchError
   46:	dup
   47:	aload_1
   48:	invokevirtual	#79; //Method scala/xml/Node.toString:()Ljava/lang/String;
   51:	invokespecial	#80; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   54:	athrow
   55:	iconst_1
   56:	ifeq	128
   59:	aload_1
   60:	invokevirtual	#83; //Method scala/xml/Node.child:()Lscala/collection/Seq;
   63:	astore	4
   65:	aload_0
   66:	aload	4
   68:	invokevirtual	#70; //Method transform:(Lscala/collection/Seq;)Lscala/collection/Seq;
   71:	astore	9
   73:	aload	4
   75:	aload	9
   77:	if_acmpne	84
   80:	aload_1
   81:	goto	141
   84:	aload_1
   85:	invokevirtual	#86; //Method scala/xml/Node.prefix:()Ljava/lang/String;
   88:	aload_1
   89:	invokevirtual	#89; //Method scala/xml/Node.label:()Ljava/lang/String;
   92:	aload_1
   93:	invokevirtual	#93; //Method scala/xml/Node.attributes:()Lscala/xml/MetaData;
   96:	aload_1
   97:	invokevirtual	#97; //Method scala/xml/Node.scope:()Lscala/xml/NamespaceBinding;
   100:	astore	8
   102:	astore	7
   104:	astore	6
   106:	astore	5
   108:	new	#99; //class scala/xml/Elem
   111:	dup
   112:	aload	5
   114:	aload	6
   116:	aload	7
   118:	aload	8
   120:	aload	9
   122:	invokespecial	#102; //Method scala/xml/Elem."<init>":(Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Seq;)V
   125:	goto	141
   128:	new	#75; //class scala/MatchError
   131:	dup
   132:	aload_1
   133:	invokevirtual	#79; //Method scala/xml/Node.toString:()Ljava/lang/String;
   136:	invokespecial	#80; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   139:	athrow
   140:	aload_1
   141:	areturn
  LineNumberTable: 
   line 47: 0
   line 46: 14
   line 21: 24
   line 48: 28
   line 47: 43
   line 21: 55
   line 50: 59
   line 51: 65
   line 53: 73
   line 54: 84
   line 53: 125
   line 47: 128
   line 56: 140
   line 47: 141

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      142      0    this       Lscala/xml/transform/BasicTransformer;
   0      142      1    n       Lscala/xml/Node;
   19      36      2    temp5       Lscala/xml/Group;
   24      31      3    temp6       Lscala/collection/Seq;
   65      63      4    ch       Lscala/collection/Seq;
   73      55      9    nch       Lscala/collection/Seq;

  Signature: length = 0x2
   00 6C 

public scala.collection.Seq transform(scala.collection.Seq);
  Code:
   Stack=5, Locals=10, Args_size=2
   0:	aload_1
   1:	new	#111; //class scala/xml/transform/BasicTransformer$$anonfun$1
   4:	dup
   5:	aload_0
   6:	invokespecial	#114; //Method scala/xml/transform/BasicTransformer$$anonfun$1."<init>":(Lscala/xml/transform/BasicTransformer;)V
   9:	invokeinterface	#120,  2; //InterfaceMethod scala/collection/TraversableLike.span:(Lscala/Function1;)Lscala/Tuple2;
   14:	astore	9
   16:	aload	9
   18:	ifnull	176
   21:	aload	9
   23:	invokevirtual	#125; //Method scala/Tuple2._1:()Ljava/lang/Object;
   26:	checkcast	#127; //class scala/collection/Seq
   29:	astore_2
   30:	aload	9
   32:	invokevirtual	#130; //Method scala/Tuple2._2:()Ljava/lang/Object;
   35:	checkcast	#127; //class scala/collection/Seq
   38:	astore_3
   39:	iconst_1
   40:	ifeq	163
   43:	new	#122; //class scala/Tuple2
   46:	dup
   47:	aload_2
   48:	aload_3
   49:	invokespecial	#133; //Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
   52:	astore	4
   54:	aload	4
   56:	invokevirtual	#125; //Method scala/Tuple2._1:()Ljava/lang/Object;
   59:	checkcast	#127; //class scala/collection/Seq
   62:	astore	5
   64:	aload	4
   66:	invokevirtual	#130; //Method scala/Tuple2._2:()Ljava/lang/Object;
   69:	checkcast	#127; //class scala/collection/Seq
   72:	astore	7
   74:	aload	7
   76:	invokeinterface	#136,  1; //InterfaceMethod scala/collection/IterableLike.isEmpty:()Z
   81:	ifeq	88
   84:	aload_1
   85:	goto	162
   88:	aload	5
   90:	aload_0
   91:	aload	7
   93:	invokeinterface	#53,  1; //InterfaceMethod scala/collection/IterableLike.head:()Ljava/lang/Object;
   98:	checkcast	#20; //class scala/xml/Node
   101:	invokevirtual	#34; //Method transform:(Lscala/xml/Node;)Lscala/collection/Seq;
   104:	getstatic	#142; //Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
   107:	astore	6
   109:	new	#144; //class scala/collection/generic/TraversableFactory$GenericCanBuildFrom
   112:	dup
   113:	aload	6
   115:	invokespecial	#147; //Method scala/collection/generic/TraversableFactory$GenericCanBuildFrom."<init>":(Lscala/collection/generic/TraversableFactory;)V
   118:	invokeinterface	#151,  3; //InterfaceMethod scala/collection/TraversableLike.$plus$plus:(Lscala/collection/Traversable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
   123:	checkcast	#116; //class scala/collection/TraversableLike
   126:	aload_0
   127:	aload	7
   129:	invokeinterface	#154,  1; //InterfaceMethod scala/collection/TraversableLike.tail:()Ljava/lang/Object;
   134:	checkcast	#127; //class scala/collection/Seq
   137:	invokevirtual	#70; //Method transform:(Lscala/collection/Seq;)Lscala/collection/Seq;
   140:	getstatic	#142; //Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
   143:	astore	8
   145:	new	#144; //class scala/collection/generic/TraversableFactory$GenericCanBuildFrom
   148:	dup
   149:	aload	8
   151:	invokespecial	#147; //Method scala/collection/generic/TraversableFactory$GenericCanBuildFrom."<init>":(Lscala/collection/generic/TraversableFactory;)V
   154:	invokeinterface	#151,  3; //InterfaceMethod scala/collection/TraversableLike.$plus$plus:(Lscala/collection/Traversable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
   159:	checkcast	#127; //class scala/collection/Seq
   162:	areturn
   163:	new	#75; //class scala/MatchError
   166:	dup
   167:	aload	9
   169:	invokevirtual	#155; //Method scala/Tuple2.toString:()Ljava/lang/String;
   172:	invokespecial	#80; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   175:	athrow
   176:	new	#75; //class scala/MatchError
   179:	dup
   180:	aload	9
   182:	invokevirtual	#155; //Method scala/Tuple2.toString:()Ljava/lang/String;
   185:	invokespecial	#80; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   188:	athrow
  LineNumberTable: 
   line 40: 0
   line 21: 39
   line 40: 43
   line 42: 74
   line 43: 88
   line 39: 162
   line 40: 163

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      189      0    this       Lscala/xml/transform/BasicTransformer;
   0      189      1    ns       Lscala/collection/Seq;
   30      54      2    temp2       Lscala/collection/Seq;
   163      13      2    temp2       Lscala/collection/Seq;
   39      45      3    temp3       Lscala/collection/Seq;
   163      13      3    temp3       Lscala/collection/Seq;
   64      99      5    xs1       Lscala/collection/Seq;
   74      89      7    xs2       Lscala/collection/Seq;
   16      68      9    temp1       Lscala/Tuple2;
   163      26      9    temp1       Lscala/Tuple2;

  Signature: length = 0x2
   00 FFFFFFA3 

public scala.collection.Seq transform(scala.collection.Iterator, scala.xml.NodeBuffer);
  Code:
   Stack=5, Locals=3, Args_size=3
   0:	aload_1
   1:	aload_2
   2:	new	#166; //class scala/xml/transform/BasicTransformer$$anonfun$transform$1
   5:	dup
   6:	aload_0
   7:	invokespecial	#167; //Method scala/xml/transform/BasicTransformer$$anonfun$transform$1."<init>":(Lscala/xml/transform/BasicTransformer;)V
   10:	invokeinterface	#173,  3; //InterfaceMethod scala/collection/Iterator.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
   15:	checkcast	#36; //class scala/collection/SeqLike
   18:	invokeinterface	#176,  1; //InterfaceMethod scala/collection/SeqLike.toSeq:()Lscala/collection/Seq;
   23:	areturn
  LineNumberTable: 
   line 34: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      24      0    this       Lscala/xml/transform/BasicTransformer;
   0      24      1    it       Lscala/collection/Iterator;
   0      24      2    nb       Lscala/xml/NodeBuffer;

  Signature: length = 0x2
   00 FFFFFFB5 

public boolean unchanged(scala.xml.Node, scala.collection.Seq);
  Code:
   Stack=2, Locals=3, Args_size=3
   0:	aload_2
   1:	invokeinterface	#40,  1; //InterfaceMethod scala/collection/SeqLike.length:()I
   6:	iconst_1
   7:	if_icmpne	39
   10:	aload_2
   11:	invokeinterface	#53,  1; //InterfaceMethod scala/collection/IterableLike.head:()Ljava/lang/Object;
   16:	dup
   17:	ifnonnull	28
   20:	pop
   21:	aload_1
   22:	ifnull	35
   25:	goto	39
   28:	aload_1
   29:	invokevirtual	#187; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   32:	ifeq	39
   35:	iconst_1
   36:	goto	40
   39:	iconst_0
   40:	ireturn
  LineNumberTable: 
   line 28: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      41      0    this       Lscala/xml/transform/BasicTransformer;
   0      41      1    n       Lscala/xml/Node;
   0      41      2    ns       Lscala/collection/Seq;

  Signature: length = 0x2
   00 FFFFFFBC 

public scala.Function1 andThen(scala.Function1);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#193; //Method scala/Function1$class.andThen:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
   5:	areturn
  LineNumberTable: 
   line 20: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/transform/BasicTransformer;
   0      6      1    g       Lscala/Function1;


public scala.Function1 compose(scala.Function1);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#198; //Method scala/Function1$class.compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
   5:	areturn
  LineNumberTable: 
   line 20: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/transform/BasicTransformer;
   0      6      1    g       Lscala/Function1;


public java.lang.String toString();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#201; //Method scala/Function1$class.toString:(Lscala/Function1;)Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 20: 0


}

