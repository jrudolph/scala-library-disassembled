Compiled from "RuleTransformer.scala"
public final class scala.xml.transform.RuleTransformer$$anonfun$transform$1 extends java.lang.Object implements scala.Function2,scala.ScalaObject,java.io.Serializable
  SourceFile: "RuleTransformer.scala"
  Scala: length = 0x
   
  InnerClass: 
   public final #66= #9 of #65; //$anonfun$transform$1=class scala/xml/transform/RuleTransformer$$anonfun$transform$1 of class scala/xml/transform/RuleTransformer
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	RuleTransformer.scala;
const #3 = Asciz	<clinit>;
const #4 = Asciz	()V;
const #5 = Asciz	Code;
const #6 = Asciz	serialVersionUID;
const #7 = Asciz	J;
const #8 = Asciz	scala/xml/transform/RuleTransformer$$anonfun$transform$1;
const #9 = class	#8;	//  scala/xml/transform/RuleTransformer$$anonfun$transform$1
const #10 = NameAndType	#6:#7;//  serialVersionUID:J
const #11 = Field	#9.#10;	//  scala/xml/transform/RuleTransformer$$anonfun$transform$1.serialVersionUID:J
const #12 = Asciz	<init>;
const #13 = Asciz	(Lscala/xml/transform/RuleTransformer;)V;
const #14 = Asciz	LineNumberTable;
const #15 = Asciz	java/lang/Object;
const #16 = class	#15;	//  java/lang/Object
const #17 = NameAndType	#12:#4;//  "<init>":()V
const #18 = Method	#16.#17;	//  java/lang/Object."<init>":()V
const #19 = Asciz	scala/Function2$class;
const #20 = class	#19;	//  scala/Function2$class
const #21 = Asciz	$init$;
const #22 = Asciz	(Lscala/Function2;)V;
const #23 = NameAndType	#21:#22;//  $init$:(Lscala/Function2;)V
const #24 = Method	#20.#23;	//  scala/Function2$class.$init$:(Lscala/Function2;)V
const #25 = Asciz	this;
const #26 = Asciz	Lscala/xml/transform/RuleTransformer$$anonfun$transform$1;;
const #27 = Asciz	$outer;
const #28 = Asciz	Lscala/xml/transform/RuleTransformer;;
const #29 = Asciz	LocalVariableTable;
const #30 = Asciz	apply;
const #31 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;;
const #32 = Asciz	scala/collection/Seq;
const #33 = class	#32;	//  scala/collection/Seq
const #34 = Asciz	scala/xml/transform/RewriteRule;
const #35 = class	#34;	//  scala/xml/transform/RewriteRule
const #36 = Asciz	(Lscala/collection/Seq;Lscala/xml/transform/RewriteRule;)Lscala/collection/Seq;;
const #37 = NameAndType	#30:#36;//  apply:(Lscala/collection/Seq;Lscala/xml/transform/RewriteRule;)Lscala/collection/Seq;
const #38 = Method	#9.#37;	//  scala/xml/transform/RuleTransformer$$anonfun$transform$1.apply:(Lscala/collection/Seq;Lscala/xml/transform/RewriteRule;)Lscala/collection/Seq;
const #39 = Asciz	v1;
const #40 = Asciz	Ljava/lang/Object;;
const #41 = Asciz	v2;
const #42 = Asciz	transform;
const #43 = Asciz	(Lscala/collection/Seq;)Lscala/collection/Seq;;
const #44 = NameAndType	#42:#43;//  transform:(Lscala/collection/Seq;)Lscala/collection/Seq;
const #45 = Method	#35.#44;	//  scala/xml/transform/RewriteRule.transform:(Lscala/collection/Seq;)Lscala/collection/Seq;
const #46 = Asciz	res;
const #47 = Asciz	Lscala/collection/Seq;;
const #48 = Asciz	rule;
const #49 = Asciz	Lscala/xml/transform/RewriteRule;;
const #50 = Asciz	(Lscala/collection/Seq<Lscala/xml/Node;>;Lscala/xml/transform/RewriteRule;)Lscala/collection/Seq<Lscala/xml/Node;>;;
const #51 = Asciz	Signature;
const #52 = Asciz	curry;
const #53 = Asciz	()Lscala/Function1;;
const #54 = Asciz	(Lscala/Function2;)Lscala/Function1;;
const #55 = NameAndType	#52:#54;//  curry:(Lscala/Function2;)Lscala/Function1;
const #56 = Method	#20.#55;	//  scala/Function2$class.curry:(Lscala/Function2;)Lscala/Function1;
const #57 = Asciz	toString;
const #58 = Asciz	()Ljava/lang/String;;
const #59 = Asciz	(Lscala/Function2;)Ljava/lang/String;;
const #60 = NameAndType	#57:#59;//  toString:(Lscala/Function2;)Ljava/lang/String;
const #61 = Method	#20.#60;	//  scala/Function2$class.toString:(Lscala/Function2;)Ljava/lang/String;
const #62 = Asciz	Scala;
const #63 = Asciz	InnerClasses;
const #64 = Asciz	scala/xml/transform/RuleTransformer;
const #65 = class	#64;	//  scala/xml/transform/RuleTransformer
const #66 = Asciz	$anonfun$transform$1;
const #67 = Asciz	scala/Function2;
const #68 = class	#67;	//  scala/Function2
const #69 = Asciz	scala/ScalaObject;
const #70 = class	#69;	//  scala/ScalaObject
const #71 = Asciz	java/io/Serializable;
const #72 = class	#71;	//  java/io/Serializable

{
public static final long serialVersionUID;

public static {};
  Code:
   Stack=2, Locals=0, Args_size=0
   0:	lconst_0
   1:	putstatic	#11; //Field serialVersionUID:J
   4:	return

public scala.xml.transform.RuleTransformer$$anonfun$transform$1(scala.xml.transform.RuleTransformer);
  Code:
   Stack=1, Locals=2, Args_size=2
   0:	aload_0
   1:	invokespecial	#18; //Method java/lang/Object."<init>":()V
   4:	aload_0
   5:	invokestatic	#24; //Method scala/Function2$class.$init$:(Lscala/Function2;)V
   8:	return
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/xml/transform/RuleTransformer$$anonfun$transform$1;
   0      9      1    $outer       Lscala/xml/transform/RuleTransformer;


public final java.lang.Object apply(java.lang.Object, java.lang.Object);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	checkcast	#33; //class scala/collection/Seq
   5:	aload_2
   6:	checkcast	#35; //class scala/xml/transform/RewriteRule
   9:	invokevirtual	#38; //Method apply:(Lscala/collection/Seq;Lscala/xml/transform/RewriteRule;)Lscala/collection/Seq;
   12:	areturn
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      13      0    this       Lscala/xml/transform/RuleTransformer$$anonfun$transform$1;
   0      13      1    v1       Ljava/lang/Object;
   0      13      2    v2       Ljava/lang/Object;


public final scala.collection.Seq apply(scala.collection.Seq, scala.xml.transform.RewriteRule);
  Code:
   Stack=2, Locals=3, Args_size=3
   0:	aload_2
   1:	aload_1
   2:	invokevirtual	#45; //Method scala/xml/transform/RewriteRule.transform:(Lscala/collection/Seq;)Lscala/collection/Seq;
   5:	areturn
  LineNumberTable: 
   line 17: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/transform/RuleTransformer$$anonfun$transform$1;
   0      6      1    res       Lscala/collection/Seq;
   0      6      2    rule       Lscala/xml/transform/RewriteRule;

  Signature: length = 0x2
   00 32 

public scala.Function1 curry();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#56; //Method scala/Function2$class.curry:(Lscala/Function2;)Lscala/Function1;
   4:	areturn
  LineNumberTable: 
   line 17: 0


public java.lang.String toString();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#61; //Method scala/Function2$class.toString:(Lscala/Function2;)Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 17: 0


}

