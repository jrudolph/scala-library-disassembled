Compiled from "RewriteRule.scala"
public abstract class scala.xml.transform.RewriteRule extends scala.xml.transform.BasicTransformer implements scala.ScalaObject
  SourceFile: "RewriteRule.scala"
  ScalaSig: length = 0x14A
   05 00 3B 06 08 01 02 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF81 00 09 02 0B 52
   65 77 72 69 74 65 52 75 6C 65 0A 02 03 04 01 09
   74 72 61 6E 73 66 6F 72 6D 0A 02 05 06 01 03 78
   6D 6C 0A 01 07 01 05 73 63 61 6C 61 03 00 13 03
   00 0A 0E 10 02 0B 0C 0D 01 02 09 02 0D 02 02 10
   42 61 73 69 63 54 72 61 6E 73 66 6F 72 6D 65 72
   10 02 0F 10 0D 01 06 09 02 11 06 02 0B 53 63 61
   6C 61 4F 62 6A 65 63 74 08 05 13 00 FFFFFF84 00 14 01
   06 3C 69 6E 69 74 3E 14 01 15 10 02 0B 00 08 07
   17 00 FFFFFFC2 FFFFFF80 FFFFFF84 00 18 01 04 6E 61 6D 65 15 01 19
   10 02 1A 1F 0D 01 1B 0A 02 1C 1D 01 04 6C 61 6E
   67 0A 01 1E 01 04 6A 61 76 61 09 02 20 1B 02 06
   53 74 72 69 6E 67 08 06 22 00 FFFFFFA0 FFFFFF80 04 19 01 05
   6E 61 6D 65 20 08 05 03 00 FFFFFF84 20 24 14 02 25 35
   10 03 26 2E 31 0E 02 27 2C 0E 02 28 2B 0D 01 29
   0A 02 2A 08 01 06 3C 72 6F 6F 74 3E 09 01 07 09
   02 2D 06 01 07 70 61 63 6B 61 67 65 09 02 2F 30
   02 03 53 65 71 0A 02 2D 06 10 02 32 33 0D 01 04
   09 02 34 04 02 04 4E 6F 64 65 08 05 36 23 FFFFFFC0 00
   25 01 02 6E 73 08 05 03 00 FFFFFF84 20 38 14 02 25 39
   08 05 3A 37 FFFFFFC0 00 31 01 01 6E 
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	RewriteRule.scala;
const #3 = Asciz	name;
const #4 = Asciz	Ljava/lang/String;;
const #5 = Asciz	<init>;
const #6 = Asciz	()V;
const #7 = Asciz	Code;
const #8 = Asciz	LineNumberTable;
const #9 = Asciz	scala/xml/transform/BasicTransformer;
const #10 = class	#9;	//  scala/xml/transform/BasicTransformer
const #11 = NameAndType	#5:#6;//  "<init>":()V
const #12 = Method	#10.#11;	//  scala/xml/transform/BasicTransformer."<init>":()V
const #13 = Asciz	scala/Function1;
const #14 = class	#13;	//  scala/Function1
const #15 = Asciz	toString;
const #16 = Asciz	()Ljava/lang/String;;
const #17 = NameAndType	#15:#16;//  toString:()Ljava/lang/String;
const #18 = InterfaceMethod	#14.#17;	//  scala/Function1.toString:()Ljava/lang/String;
const #19 = Asciz	scala/xml/transform/RewriteRule;
const #20 = class	#19;	//  scala/xml/transform/RewriteRule
const #21 = NameAndType	#3:#4;//  name:Ljava/lang/String;
const #22 = Field	#20.#21;	//  scala/xml/transform/RewriteRule.name:Ljava/lang/String;
const #23 = Asciz	transform;
const #24 = Asciz	(Lscala/xml/Node;)Lscala/collection/Sequence;;
const #25 = Asciz	this;
const #26 = Asciz	Lscala/xml/transform/RewriteRule;;
const #27 = Asciz	n;
const #28 = Asciz	Lscala/xml/Node;;
const #29 = Asciz	LocalVariableTable;
const #30 = Asciz	(Lscala/xml/Node;)Lscala/collection/Sequence<Lscala/xml/Node;>;;
const #31 = Asciz	Signature;
const #32 = Asciz	(Lscala/collection/Sequence;)Lscala/collection/Sequence;;
const #33 = NameAndType	#23:#32;//  transform:(Lscala/collection/Sequence;)Lscala/collection/Sequence;
const #34 = Method	#10.#33;	//  scala/xml/transform/BasicTransformer.transform:(Lscala/collection/Sequence;)Lscala/collection/Sequence;
const #35 = Asciz	ns;
const #36 = Asciz	Lscala/collection/Sequence;;
const #37 = Asciz	(Lscala/collection/Sequence<Lscala/xml/Node;>;)Lscala/collection/Sequence<Lscala/xml/Node;>;;
const #38 = Asciz	ScalaSig;
const #39 = Asciz	scala/ScalaObject;
const #40 = class	#39;	//  scala/ScalaObject

{
public scala.xml.transform.RewriteRule();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	invokespecial	#12; //Method scala/xml/transform/BasicTransformer."<init>":()V
   4:	aload_0
   5:	aload_0
   6:	invokeinterface	#18,  1; //InterfaceMethod scala/Function1.toString:()Ljava/lang/String;
   11:	putfield	#22; //Field name:Ljava/lang/String;
   14:	return
  LineNumberTable: 
   line 22: 0
   line 24: 4


public scala.collection.Sequence transform(scala.xml.Node);
  Code:
   Stack=1, Locals=2, Args_size=2
   0:	aload_1
   1:	areturn
  LineNumberTable: 
   line 26: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      2      0    this       Lscala/xml/transform/RewriteRule;
   0      2      1    n       Lscala/xml/Node;

  Signature: length = 0x2
   00 1E 

public scala.collection.Sequence transform(scala.collection.Sequence);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokespecial	#34; //Method scala/xml/transform/BasicTransformer.transform:(Lscala/collection/Sequence;)Lscala/collection/Sequence;
   5:	areturn
  LineNumberTable: 
   line 25: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/transform/RewriteRule;
   0      6      1    ns       Lscala/collection/Sequence;

  Signature: length = 0x2
   00 25 

public java.lang.String name();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#22; //Field name:Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 24: 0


}

