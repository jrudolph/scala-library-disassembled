Compiled from "NodeSeq.scala"
public final class scala.xml.NodeSeq$$anon$2 extends java.lang.Object implements scala.collection.generic.CanBuildFrom
  SourceFile: "NodeSeq.scala"
  Signature: length = 0x2
   00 27 
  Scala: length = 0x
   
  InnerClass: 
   public final $anon$2=class scala/xml/NodeSeq$$anon$2 of class scala/xml/NodeSeq
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	NodeSeq.scala;
Asciz	apply;
Asciz	(Lscala/xml/NodeSeq;)Lscala/collection/mutable/Builder;;
Asciz	Code;
Asciz	scala/xml/NodeSeq$;
class	scala/xml/NodeSeq$
Asciz	MODULE$;
Asciz	Lscala/xml/NodeSeq$;;
NameAndType	MODULE$:Lscala/xml/NodeSeq$;
Field	scala/xml/NodeSeq$.MODULE$:Lscala/xml/NodeSeq$;
Asciz	LineNumberTable;
Asciz	newBuilder;
Asciz	()Lscala/collection/mutable/Builder;;
NameAndType	newBuilder:()Lscala/collection/mutable/Builder;
Method	scala/xml/NodeSeq$.newBuilder:()Lscala/collection/mutable/Builder;
Asciz	this;
Asciz	Lscala/xml/NodeSeq$$anon$2;;
Asciz	from;
Asciz	Lscala/xml/NodeSeq;;
Asciz	LocalVariableTable;
Asciz	(Lscala/xml/NodeSeq;)Lscala/collection/mutable/Builder<Lscala/xml/Node;Lscala/xml/NodeSeq;>;;
Asciz	Signature;
Asciz	()Lscala/collection/mutable/Builder<Lscala/xml/Node;Lscala/xml/NodeSeq;>;;
Asciz	(Ljava/lang/Object;)Lscala/collection/mutable/Builder;;
Asciz	scala/xml/NodeSeq;
class	scala/xml/NodeSeq
Asciz	scala/xml/NodeSeq$$anon$2;
class	scala/xml/NodeSeq$$anon$2
NameAndType	apply:(Lscala/xml/NodeSeq;)Lscala/collection/mutable/Builder;
Method	scala/xml/NodeSeq$$anon$2.apply:(Lscala/xml/NodeSeq;)Lscala/collection/mutable/Builder;
Asciz	Ljava/lang/Object;;
Asciz	<init>;
Asciz	()V;
Asciz	java/lang/Object;
class	java/lang/Object
NameAndType	"<init>":()V
Method	java/lang/Object."<init>":()V
Asciz	Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom<Lscala/xml/NodeSeq;Lscala/xml/Node;Lscala/xml/NodeSeq;>;;
Asciz	Scala;
Asciz	InnerClasses;
Asciz	$anon$2;
Asciz	scala/collection/generic/CanBuildFrom;
class	scala/collection/generic/CanBuildFrom

{
public scala.collection.mutable.Builder apply(scala.xml.NodeSeq);
  Signature: (Lscala/xml/NodeSeq;)Lscala/collection/mutable/Builder;
  Code:
   Stack=1, Locals=2, Args_size=2
	getstatic	Field scala/xml/NodeSeq$.MODULE$:Lscala/xml/NodeSeq$;
	invokevirtual	Method scala/xml/NodeSeq$.newBuilder:()Lscala/collection/mutable/Builder;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/xml/NodeSeq$$anon$2;
   0      7      1    from       Lscala/xml/NodeSeq;

  Signature: length = 0x2
   00 16 

public scala.collection.mutable.Builder apply();
  Signature: ()Lscala/collection/mutable/Builder;
  Code:
   Stack=1, Locals=1, Args_size=1
	getstatic	Field scala/xml/NodeSeq$.MODULE$:Lscala/xml/NodeSeq$;
	invokevirtual	Method scala/xml/NodeSeq$.newBuilder:()Lscala/collection/mutable/Builder;
	areturn
  Labels:
  Signature: length = 0x2
   00 18 

public scala.collection.mutable.Builder apply(java.lang.Object);
  Signature: (Ljava/lang/Object;)Lscala/collection/mutable/Builder;
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	checkcast	class scala/xml/NodeSeq
	invokevirtual	Method apply:(Lscala/xml/NodeSeq;)Lscala/collection/mutable/Builder;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/xml/NodeSeq$$anon$2;
   0      9      1    from       Ljava/lang/Object;


public scala.xml.NodeSeq$$anon$2();
  Signature: ()V
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokespecial	Method java/lang/Object."<init>":()V
	return
  Labels:

}

