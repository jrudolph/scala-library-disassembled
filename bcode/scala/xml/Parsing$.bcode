Compiled from "Parsing.scala"
public final class scala.xml.Parsing$ extends java.lang.Object implements scala.ScalaObject
  SourceFile: "Parsing.scala"
  Scala: length = 0x
   
  InnerClass: 
   public final #180= #169 of #179; //$anonfun$isSpace$1=class scala/xml/Parsing$$anonfun$isSpace$1 of class scala/xml/Parsing
   public final #181= #64 of #179; //$anonfun$checkPubID$1=class scala/xml/Parsing$$anonfun$checkPubID$1 of class scala/xml/Parsing
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Parsing.scala;
const #3 = Asciz	Scala;
const #4 = Asciz	MODULE$;
const #5 = Asciz	Lscala/xml/Parsing$;;
const #6 = Asciz	<clinit>;
const #7 = Asciz	()V;
const #8 = Asciz	Code;
const #9 = Asciz	scala/xml/Parsing$;
const #10 = class	#9;	//  scala/xml/Parsing$
const #11 = Asciz	<init>;
const #12 = NameAndType	#11:#7;//  "<init>":()V
const #13 = Method	#10.#12;	//  scala/xml/Parsing$."<init>":()V
const #14 = Asciz	nameCharTypeList;
const #15 = Asciz	Lscala/collection/immutable/List;;
const #16 = Asciz	Lscala/collection/immutable/List<Ljava/lang/Byte;>;;
const #17 = Asciz	Signature;
const #18 = Asciz	LineNumberTable;
const #19 = Asciz	java/lang/Object;
const #20 = class	#19;	//  java/lang/Object
const #21 = Method	#20.#12;	//  java/lang/Object."<init>":()V
const #22 = NameAndType	#4:#5;//  MODULE$:Lscala/xml/Parsing$;
const #23 = Field	#10.#22;	//  scala/xml/Parsing$.MODULE$:Lscala/xml/Parsing$;
const #24 = Asciz	scala/collection/immutable/List$;
const #25 = class	#24;	//  scala/collection/immutable/List$
const #26 = Asciz	Lscala/collection/immutable/List$;;
const #27 = NameAndType	#4:#26;//  MODULE$:Lscala/collection/immutable/List$;
const #28 = Field	#25.#27;	//  scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
const #29 = Asciz	scala/runtime/ScalaRunTime$;
const #30 = class	#29;	//  scala/runtime/ScalaRunTime$
const #31 = Asciz	Lscala/runtime/ScalaRunTime$;;
const #32 = NameAndType	#4:#31;//  MODULE$:Lscala/runtime/ScalaRunTime$;
const #33 = Field	#30.#32;	//  scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
const #34 = Asciz	boxArray;
const #35 = Asciz	(Ljava/lang/Object;)Lscala/runtime/BoxedArray;;
const #36 = NameAndType	#34:#35;//  boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
const #37 = Method	#30.#36;	//  scala/runtime/ScalaRunTime$.boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
const #38 = Asciz	apply;
const #39 = Asciz	(Lscala/collection/Sequence;)Lscala/collection/immutable/List;;
const #40 = NameAndType	#38:#39;//  apply:(Lscala/collection/Sequence;)Lscala/collection/immutable/List;
const #41 = Method	#25.#40;	//  scala/collection/immutable/List$.apply:(Lscala/collection/Sequence;)Lscala/collection/immutable/List;
const #42 = NameAndType	#14:#15;//  nameCharTypeList:Lscala/collection/immutable/List;
const #43 = Field	#10.#42;	//  scala/xml/Parsing$.nameCharTypeList:Lscala/collection/immutable/List;
const #44 = Asciz	gd1$1;
const #45 = Asciz	(C)Z;
const #46 = int	48;
const #47 = int	57;
const #48 = int	97;
const #49 = int	122;
const #50 = int	65;
const #51 = int	90;
const #52 = Asciz	checkPubID;
const #53 = Asciz	(Ljava/lang/String;)Z;
const #54 = Asciz	scala/Predef$;
const #55 = class	#54;	//  scala/Predef$
const #56 = Asciz	Lscala/Predef$;;
const #57 = NameAndType	#4:#56;//  MODULE$:Lscala/Predef$;
const #58 = Field	#55.#57;	//  scala/Predef$.MODULE$:Lscala/Predef$;
const #59 = Asciz	stringWrapper;
const #60 = Asciz	(Ljava/lang/String;)Lscala/runtime/RichString;;
const #61 = NameAndType	#59:#60;//  stringWrapper:(Ljava/lang/String;)Lscala/runtime/RichString;
const #62 = Method	#55.#61;	//  scala/Predef$.stringWrapper:(Ljava/lang/String;)Lscala/runtime/RichString;
const #63 = Asciz	scala/xml/Parsing$$anonfun$checkPubID$1;
const #64 = class	#63;	//  scala/xml/Parsing$$anonfun$checkPubID$1
const #65 = Method	#64.#12;	//  scala/xml/Parsing$$anonfun$checkPubID$1."<init>":()V
const #66 = Asciz	scala/collection/generic/VectorTemplate;
const #67 = class	#66;	//  scala/collection/generic/VectorTemplate
const #68 = Asciz	forall;
const #69 = Asciz	(Lscala/Function1;)Z;
const #70 = NameAndType	#68:#69;//  forall:(Lscala/Function1;)Z
const #71 = InterfaceMethod	#67.#70;	//  scala/collection/generic/VectorTemplate.forall:(Lscala/Function1;)Z
const #72 = Asciz	this;
const #73 = Asciz	s;
const #74 = Asciz	Ljava/lang/String;;
const #75 = Asciz	LocalVariableTable;
const #76 = Asciz	checkSysID;
const #77 = int	34;
const #78 = Asciz	java/lang/String;
const #79 = class	#78;	//  java/lang/String
const #80 = Asciz	indexOf;
const #81 = Asciz	(I)I;
const #82 = NameAndType	#80:#81;//  indexOf:(I)I
const #83 = Method	#79.#82;	//  java/lang/String.indexOf:(I)I
const #84 = int	39;
const #85 = Asciz	isPubIDChar;
const #86 = Asciz	scala/runtime/BoxesRunTime;
const #87 = class	#86;	//  scala/runtime/BoxesRunTime
const #88 = Asciz	boxToCharacter;
const #89 = Asciz	(C)Ljava/lang/Character;;
const #90 = NameAndType	#88:#89;//  boxToCharacter:(C)Ljava/lang/Character;
const #91 = Method	#87.#90;	//  scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
const #92 = int	32;
const #93 = Asciz	equals;
const #94 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)Z;
const #95 = NameAndType	#93:#94;//  equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
const #96 = Method	#87.#95;	//  scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
const #97 = int	13;
const #98 = int	10;
const #99 = NameAndType	#44:#45;//  gd1$1:(C)Z
const #100 = Method	#10.#99;	//  scala/xml/Parsing$.gd1$1:(C)Z
const #101 = Asciz	c$1;
const #102 = Asciz	C;
const #103 = Asciz	temp8;
const #104 = Asciz	isName;
const #105 = Asciz	length;
const #106 = Asciz	()I;
const #107 = NameAndType	#105:#106;//  length:()I
const #108 = Method	#79.#107;	//  java/lang/String.length:()I
const #109 = Asciz	scala/collection/generic/IterableTemplate;
const #110 = class	#109;	//  scala/collection/generic/IterableTemplate
const #111 = Asciz	iterator;
const #112 = Asciz	()Lscala/collection/Iterator;;
const #113 = NameAndType	#111:#112;//  iterator:()Lscala/collection/Iterator;
const #114 = InterfaceMethod	#110.#113;	//  scala/collection/generic/IterableTemplate.iterator:()Lscala/collection/Iterator;
const #115 = Asciz	scala/collection/Iterator;
const #116 = class	#115;	//  scala/collection/Iterator
const #117 = Asciz	next;
const #118 = Asciz	()Ljava/lang/Object;;
const #119 = NameAndType	#117:#118;//  next:()Ljava/lang/Object;
const #120 = InterfaceMethod	#116.#119;	//  scala/collection/Iterator.next:()Ljava/lang/Object;
const #121 = Asciz	unboxToChar;
const #122 = Asciz	(Ljava/lang/Object;)C;
const #123 = NameAndType	#121:#122;//  unboxToChar:(Ljava/lang/Object;)C
const #124 = Method	#87.#123;	//  scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
const #125 = Asciz	isNameStart;
const #126 = NameAndType	#125:#45;//  isNameStart:(C)Z
const #127 = Method	#10.#126;	//  scala/xml/Parsing$.isNameStart:(C)Z
const #128 = Asciz	hasNext;
const #129 = Asciz	()Z;
const #130 = NameAndType	#128:#129;//  hasNext:()Z
const #131 = InterfaceMethod	#116.#130;	//  scala/collection/Iterator.hasNext:()Z
const #132 = Asciz	isNameChar;
const #133 = NameAndType	#132:#45;//  isNameChar:(C)Z
const #134 = Method	#10.#133;	//  scala/xml/Parsing$.isNameChar:(C)Z
const #135 = Asciz	z;
const #136 = Asciz	Lscala/collection/Sequence;;
const #137 = Asciz	y;
const #138 = Asciz	Lscala/collection/Iterator;;
const #139 = Asciz	java/lang/Character;
const #140 = class	#139;	//  java/lang/Character
const #141 = Asciz	getType;
const #142 = Asciz	(C)I;
const #143 = NameAndType	#141:#142;//  getType:(C)I
const #144 = Method	#140.#143;	//  java/lang/Character.getType:(C)I
const #145 = Asciz	boxToByte;
const #146 = Asciz	(B)Ljava/lang/Byte;;
const #147 = NameAndType	#145:#146;//  boxToByte:(B)Ljava/lang/Byte;
const #148 = Method	#87.#147;	//  scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
const #149 = int	95;
const #150 = Asciz	ch;
const #151 = Asciz	temp2;
const #152 = Asciz	B;
const #153 = int	46;
const #154 = int	45;
const #155 = int	58;
const #156 = Asciz	scala/collection/generic/SequenceTemplate;
const #157 = class	#156;	//  scala/collection/generic/SequenceTemplate
const #158 = Asciz	contains;
const #159 = Asciz	(Ljava/lang/Object;)Z;
const #160 = NameAndType	#158:#159;//  contains:(Ljava/lang/Object;)Z
const #161 = InterfaceMethod	#157.#160;	//  scala/collection/generic/SequenceTemplate.contains:(Ljava/lang/Object;)Z
const #162 = Asciz	()Lscala/collection/immutable/List;;
const #163 = NameAndType	#14:#162;//  nameCharTypeList:()Lscala/collection/immutable/List;
const #164 = Method	#10.#163;	//  scala/xml/Parsing$.nameCharTypeList:()Lscala/collection/immutable/List;
const #165 = Asciz	()Lscala/collection/immutable/List<Ljava/lang/Byte;>;;
const #166 = Asciz	isSpace;
const #167 = Asciz	(Lscala/collection/Sequence;)Z;
const #168 = Asciz	scala/xml/Parsing$$anonfun$isSpace$1;
const #169 = class	#168;	//  scala/xml/Parsing$$anonfun$isSpace$1
const #170 = Method	#169.#12;	//  scala/xml/Parsing$$anonfun$isSpace$1."<init>":()V
const #171 = Asciz	scala/collection/generic/TraversableTemplate;
const #172 = class	#171;	//  scala/collection/generic/TraversableTemplate
const #173 = InterfaceMethod	#172.#70;	//  scala/collection/generic/TraversableTemplate.forall:(Lscala/Function1;)Z
const #174 = Asciz	cs;
const #175 = Asciz	(Lscala/collection/Sequence<Ljava/lang/Character;>;)Z;
const #176 = Asciz	temp1;
const #177 = Asciz	InnerClasses;
const #178 = Asciz	scala/xml/Parsing;
const #179 = class	#178;	//  scala/xml/Parsing
const #180 = Asciz	$anonfun$isSpace$1;
const #181 = Asciz	$anonfun$checkPubID$1;
const #182 = Asciz	scala/ScalaObject;
const #183 = class	#182;	//  scala/ScalaObject

{
public static final scala.xml.Parsing$ MODULE$;

public static {};
  Code:
   Stack=1, Locals=0, Args_size=0
   0:	new	#10; //class scala/xml/Parsing$
   3:	invokespecial	#13; //Method "<init>":()V
   6:	return

public boolean checkPubID(java.lang.String);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	getstatic	#58; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   3:	aload_1
   4:	invokevirtual	#62; //Method scala/Predef$.stringWrapper:(Ljava/lang/String;)Lscala/runtime/RichString;
   7:	new	#64; //class scala/xml/Parsing$$anonfun$checkPubID$1
   10:	dup
   11:	invokespecial	#65; //Method scala/xml/Parsing$$anonfun$checkPubID$1."<init>":()V
   14:	invokeinterface	#71,  2; //InterfaceMethod scala/collection/generic/VectorTemplate.forall:(Lscala/Function1;)Z
   19:	ireturn
  LineNumberTable: 
   line 96: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      20      0    this       Lscala/xml/Parsing$;
   0      20      1    s       Ljava/lang/String;


public boolean checkSysID(java.lang.String);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_1
   1:	ldc	#77; //int 34
   3:	invokevirtual	#83; //Method java/lang/String.indexOf:(I)I
   6:	iconst_m1
   7:	if_icmpeq	20
   10:	aload_1
   11:	ldc	#84; //int 39
   13:	invokevirtual	#83; //Method java/lang/String.indexOf:(I)I
   16:	iconst_m1
   17:	if_icmpne	24
   20:	iconst_1
   21:	goto	25
   24:	iconst_0
   25:	ireturn
  LineNumberTable: 
   line 94: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      26      0    this       Lscala/xml/Parsing$;
   0      26      1    s       Ljava/lang/String;


public boolean isPubIDChar(char);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	iload_1
   1:	istore_2
   2:	iload_2
   3:	invokestatic	#91; //Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
   6:	ldc	#92; //int 32
   8:	invokestatic	#91; //Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
   11:	invokestatic	#96; //Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
   14:	ifeq	21
   17:	iconst_1
   18:	goto	313
   21:	iload_2
   22:	invokestatic	#91; //Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
   25:	ldc	#97; //int 13
   27:	invokestatic	#91; //Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
   30:	invokestatic	#96; //Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
   33:	ifeq	40
   36:	iconst_1
   37:	goto	313
   40:	iload_2
   41:	invokestatic	#91; //Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
   44:	ldc	#98; //int 10
   46:	invokestatic	#91; //Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
   49:	invokestatic	#96; //Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
   52:	ifeq	59
   55:	iconst_1
   56:	goto	313
   59:	aload_0
   60:	iload_1
   61:	invokespecial	#100; //Method gd1$1:(C)Z
   64:	ifeq	71
   67:	iconst_1
   68:	goto	313
   71:	iload_2
   72:	lookupswitch{ //19
		33: 312;
		35: 308;
		36: 304;
		37: 300;
		39: 296;
		40: 292;
		41: 288;
		42: 284;
		43: 280;
		44: 276;
		45: 272;
		46: 268;
		47: 264;
		58: 260;
		59: 256;
		61: 252;
		63: 248;
		64: 244;
		95: 240;
		default: 236 }
   236:	iconst_0
   237:	goto	313
   240:	iconst_1
   241:	goto	313
   244:	iconst_1
   245:	goto	313
   248:	iconst_1
   249:	goto	313
   252:	iconst_1
   253:	goto	313
   256:	iconst_1
   257:	goto	313
   260:	iconst_1
   261:	goto	313
   264:	iconst_1
   265:	goto	313
   268:	iconst_1
   269:	goto	313
   272:	iconst_1
   273:	goto	313
   276:	iconst_1
   277:	goto	313
   280:	iconst_1
   281:	goto	313
   284:	iconst_1
   285:	goto	313
   288:	iconst_1
   289:	goto	313
   292:	iconst_1
   293:	goto	313
   296:	iconst_1
   297:	goto	313
   300:	iconst_1
   301:	goto	313
   304:	iconst_1
   305:	goto	313
   308:	iconst_1
   309:	goto	313
   312:	iconst_1
   313:	ireturn
  LineNumberTable: 
   line 84: 0
   line 85: 17
   line 84: 21
   line 85: 36
   line 84: 40
   line 85: 55
   line 84: 59
   line 87: 67
   line 84: 71
   line 90: 236
   line 84: 237
   line 89: 240
   line 84: 241
   line 89: 244
   line 84: 245
   line 89: 248
   line 84: 249
   line 89: 252
   line 84: 253
   line 89: 256
   line 84: 257
   line 89: 260
   line 84: 261
   line 89: 264
   line 84: 265
   line 89: 268
   line 84: 269
   line 89: 272
   line 84: 273
   line 89: 276
   line 84: 277
   line 89: 280
   line 84: 281
   line 89: 284
   line 84: 285
   line 89: 288
   line 84: 289
   line 89: 292
   line 84: 293
   line 89: 296
   line 84: 297
   line 89: 300
   line 84: 301
   line 89: 304
   line 84: 305
   line 89: 308
   line 84: 309
   line 89: 312
   line 84: 313

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      314      0    this       Lscala/xml/Parsing$;
   0      314      1    c$1       C
   2      312      2    temp8       C


public boolean isName(java.lang.String);
  Code:
   Stack=2, Locals=4, Args_size=2
   0:	aload_1
   1:	invokevirtual	#108; //Method java/lang/String.length:()I
   4:	iconst_0
   5:	if_icmple	85
   8:	getstatic	#58; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   11:	aload_1
   12:	invokevirtual	#62; //Method scala/Predef$.stringWrapper:(Ljava/lang/String;)Lscala/runtime/RichString;
   15:	astore_2
   16:	aload_2
   17:	invokeinterface	#114,  1; //InterfaceMethod scala/collection/generic/IterableTemplate.iterator:()Lscala/collection/Iterator;
   22:	astore_3
   23:	aload_0
   24:	aload_3
   25:	invokeinterface	#120,  1; //InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
   30:	invokestatic	#124; //Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
   33:	invokevirtual	#127; //Method isNameStart:(C)Z
   36:	ifeq	81
   39:	aload_3
   40:	invokeinterface	#131,  1; //InterfaceMethod scala/collection/Iterator.hasNext:()Z
   45:	ifeq	64
   48:	aload_0
   49:	aload_3
   50:	invokeinterface	#120,  1; //InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
   55:	invokestatic	#124; //Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
   58:	invokevirtual	#134; //Method isNameChar:(C)Z
   61:	ifne	39
   64:	aload_3
   65:	invokeinterface	#131,  1; //InterfaceMethod scala/collection/Iterator.hasNext:()Z
   70:	ifeq	77
   73:	iconst_0
   74:	goto	86
   77:	iconst_1
   78:	goto	86
   81:	iconst_0
   82:	goto	86
   85:	iconst_0
   86:	ireturn
  LineNumberTable: 
   line 75: 0
   line 76: 8
   line 77: 16
   line 78: 23
   line 79: 39
   line 80: 64
   line 81: 81
   line 82: 85
   line 75: 86

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      87      0    this       Lscala/xml/Parsing$;
   0      87      1    s       Ljava/lang/String;
   16      69      2    z       Lscala/collection/Sequence;
   23      62      3    y       Lscala/collection/Iterator;


public boolean isNameStart(char);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	iload_1
   1:	invokestatic	#144; //Method java/lang/Character.getType:(C)I
   4:	i2b
   5:	istore_2
   6:	iload_2
   7:	invokestatic	#148; //Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
   10:	bipush	2
   12:	invokestatic	#148; //Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
   15:	invokestatic	#96; //Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
   18:	ifeq	25
   21:	iconst_1
   22:	goto	112
   25:	iload_2
   26:	invokestatic	#148; //Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
   29:	bipush	1
   31:	invokestatic	#148; //Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
   34:	invokestatic	#96; //Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
   37:	ifeq	44
   40:	iconst_1
   41:	goto	112
   44:	iload_2
   45:	invokestatic	#148; //Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
   48:	bipush	5
   50:	invokestatic	#148; //Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
   53:	invokestatic	#96; //Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
   56:	ifeq	63
   59:	iconst_1
   60:	goto	112
   63:	iload_2
   64:	invokestatic	#148; //Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
   67:	bipush	3
   69:	invokestatic	#148; //Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
   72:	invokestatic	#96; //Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
   75:	ifeq	82
   78:	iconst_1
   79:	goto	112
   82:	iload_2
   83:	invokestatic	#148; //Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
   86:	bipush	10
   88:	invokestatic	#148; //Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
   91:	invokestatic	#96; //Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
   94:	ifeq	101
   97:	iconst_1
   98:	goto	112
   101:	iload_1
   102:	ldc	#149; //int 95
   104:	if_icmpne	111
   107:	iconst_1
   108:	goto	112
   111:	iconst_0
   112:	ireturn
  LineNumberTable: 
   line 61: 0
   line 62: 21
   line 61: 25
   line 63: 40
   line 61: 44
   line 64: 59
   line 61: 63
   line 65: 78
   line 61: 82
   line 66: 97
   line 67: 101
   line 61: 112

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      113      0    this       Lscala/xml/Parsing$;
   0      113      1    ch       C
   6      107      2    temp2       B


public boolean isNameChar(char);
  Code:
   Stack=6, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	invokevirtual	#127; //Method isNameStart:(C)Z
   5:	ifne	70
   8:	getstatic	#28; //Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
   11:	getstatic	#33; //Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   14:	iconst_3
   15:	newarray char
   17:	dup
   18:	iconst_0
   19:	ldc	#153; //int 46
   21:	castore
   22:	dup
   23:	iconst_1
   24:	ldc	#154; //int 45
   26:	castore
   27:	dup
   28:	iconst_2
   29:	ldc	#155; //int 58
   31:	castore
   32:	invokevirtual	#37; //Method scala/runtime/ScalaRunTime$.boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
   35:	invokevirtual	#41; //Method scala/collection/immutable/List$.apply:(Lscala/collection/Sequence;)Lscala/collection/immutable/List;
   38:	iload_1
   39:	invokestatic	#91; //Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
   42:	invokeinterface	#161,  2; //InterfaceMethod scala/collection/generic/SequenceTemplate.contains:(Ljava/lang/Object;)Z
   47:	ifne	70
   50:	aload_0
   51:	invokespecial	#164; //Method nameCharTypeList:()Lscala/collection/immutable/List;
   54:	iload_1
   55:	invokestatic	#144; //Method java/lang/Character.getType:(C)I
   58:	i2b
   59:	invokestatic	#148; //Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
   62:	invokeinterface	#161,  2; //InterfaceMethod scala/collection/generic/SequenceTemplate.contains:(Ljava/lang/Object;)Z
   67:	ifeq	74
   70:	iconst_1
   71:	goto	75
   74:	iconst_0
   75:	ireturn
  LineNumberTable: 
   line 50: 0
   line 51: 50
   line 50: 70

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      76      0    this       Lscala/xml/Parsing$;
   0      76      1    ch       C


public final boolean isSpace(scala.collection.Sequence);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	aload_1
   1:	new	#169; //class scala/xml/Parsing$$anonfun$isSpace$1
   4:	dup
   5:	invokespecial	#170; //Method scala/xml/Parsing$$anonfun$isSpace$1."<init>":()V
   8:	invokeinterface	#173,  2; //InterfaceMethod scala/collection/generic/TraversableTemplate.forall:(Lscala/Function1;)Z
   13:	ireturn
  LineNumberTable: 
   line 32: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      14      0    this       Lscala/xml/Parsing$;
   0      14      1    cs       Lscala/collection/Sequence;

  Signature: length = 0x2
   00 FFFFFFAF 

public final boolean isSpace(char);
  Code:
   Stack=1, Locals=3, Args_size=2
   0:	iload_1
   1:	istore_2
   2:	iload_2
   3:	lookupswitch{ //4
		9: 60;
		10: 56;
		13: 52;
		32: 48;
		default: 44 }
   44:	iconst_0
   45:	goto	61
   48:	iconst_1
   49:	goto	61
   52:	iconst_1
   53:	goto	61
   56:	iconst_1
   57:	goto	61
   60:	iconst_1
   61:	ireturn
  LineNumberTable: 
   line 26: 0
   line 28: 44
   line 26: 45
   line 27: 48
   line 26: 49
   line 27: 52
   line 26: 53
   line 27: 56
   line 26: 57
   line 27: 60
   line 26: 61

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      62      0    this       Lscala/xml/Parsing$;
   0      62      1    ch       C
   2      60      2    temp1       C


}

