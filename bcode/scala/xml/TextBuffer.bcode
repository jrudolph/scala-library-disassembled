Compiled from "TextBuffer.scala"
public class scala.xml.TextBuffer extends java.lang.Object implements scala.ScalaObject
  SourceFile: "TextBuffer.scala"
  ScalaSig: length = 0x283
   05 00 6F 07 05 01 02 FFFFFF88 02 07 01 0A 54 65 78 74
   42 75 66 66 65 72 0A 02 03 04 01 03 78 6D 6C 0A
   01 05 01 05 73 63 61 6C 61 03 00 10 02 08 09 0D
   01 02 06 08 0A 02 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF88 02 0B 02 0A 54 65
   78 74 42 75 66 66 65 72 13 03 09 0C 14 10 02 0D
   12 0D 01 0E 0A 02 0F 10 01 04 6C 61 6E 67 0A 01
   11 01 04 6A 61 76 61 09 02 13 0E 02 06 4F 62 6A
   65 63 74 10 02 15 16 0D 01 04 09 02 17 04 02 0B
   53 63 61 6C 61 4F 62 6A 65 63 74 08 05 19 09 FFFFFF84
   00 1A 01 06 3C 69 6E 69 74 3E 14 01 07 08 05 1C
   09 FFFFFF84 00 1D 01 0A 66 72 6F 6D 53 74 72 69 6E 67
   14 02 1E 66 10 02 08 1F 06 08 0A 02 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF80
   00 20 13 03 1F 0C 14 08 05 19 1F FFFFFF84 00 22 14 01
   1E 08 07 24 1F FFFFFFC2 FFFFFF80 FFFFFF84 00 25 01 02 73 62 15 01
   26 10 02 27 2C 0D 01 28 0A 02 29 2A 01 07 6D 75
   74 61 62 6C 65 0A 02 2B 04 01 0A 63 6F 6C 6C 65
   63 74 69 6F 6E 09 02 2D 28 02 0D 53 74 72 69 6E
   67 42 75 69 6C 64 65 72 08 06 2F 1F FFFFFFA0 FFFFFF80 04 26
   01 03 73 62 20 08 07 31 1F FFFFFFC0 FFFFFF80 FFFFFF84 00 32 01 02
   77 73 15 01 33 10 02 15 34 09 02 35 04 02 07 42
   6F 6F 6C 65 61 6E 08 07 37 1F FFFFFFC0 FFFFFF80 FFFFFF84 00 38 01
   06 77 73 5F 24 65 71 14 02 39 3C 10 02 15 3A 09
   02 3B 04 02 04 55 6E 69 74 08 07 3D 36 FFFFFF81 FFFFFF80 FFFFFFC0
   00 33 01 03 78 24 31 08 06 3F 1F FFFFFFA0 FFFFFFA0 04 33 01
   03 77 73 20 08 05 41 1F FFFFFF84 00 42 01 0B 61 70 70
   65 6E 64 53 70 61 63 65 15 01 43 10 02 15 44 09
   02 45 04 02 03 41 6E 79 08 05 47 1F FFFFFF84 00 48 01
   0A 61 70 70 65 6E 64 43 68 61 72 14 02 26 49 08
   05 4A 46 FFFFFFC0 00 4B 01 01 63 10 02 15 4C 09 02 4D
   04 02 04 43 68 61 72 08 05 4F 1F FFFFFF84 00 50 01 06
   61 70 70 65 6E 64 14 02 1E 51 08 05 52 4E FFFFFFC0 00
   53 01 02 63 73 10 03 54 5C 4B 0E 02 55 5A 0E 02
   56 59 0D 01 57 0A 02 58 06 01 06 3C 72 6F 6F 74
   3E 09 01 05 09 02 5B 04 01 07 70 61 63 6B 61 67
   65 09 02 5D 5E 02 03 53 65 71 0A 02 5B 04 08 05
   60 1F FFFFFF84 00 61 01 06 74 6F 54 65 78 74 15 01 62
   10 03 54 5C 63 10 02 08 64 09 02 65 02 02 04 54
   65 78 74 08 05 67 1B FFFFFFC0 00 68 01 03 73 74 72 10
   02 69 6C 0E 02 15 6A 09 02 6B 04 01 06 50 72 65
   64 65 66 09 02 6D 6E 02 06 53 74 72 69 6E 67 0A
   02 6B 04 
  InnerClass: 
   public final #132= #95 of #19; //$anonfun$append$1=class scala/xml/TextBuffer$$anonfun$append$1 of class scala/xml/TextBuffer
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	TextBuffer.scala;
const #3 = Asciz	ws;
const #4 = Asciz	Z;
const #5 = Asciz	sb;
const #6 = Asciz	Lscala/collection/mutable/StringBuilder;;
const #7 = Asciz	<init>;
const #8 = Asciz	()V;
const #9 = Asciz	Code;
const #10 = Asciz	LineNumberTable;
const #11 = Asciz	java/lang/Object;
const #12 = class	#11;	//  java/lang/Object
const #13 = NameAndType	#7:#8;//  "<init>":()V
const #14 = Method	#12.#13;	//  java/lang/Object."<init>":()V
const #15 = Asciz	scala/collection/mutable/StringBuilder;
const #16 = class	#15;	//  scala/collection/mutable/StringBuilder
const #17 = Method	#16.#13;	//  scala/collection/mutable/StringBuilder."<init>":()V
const #18 = Asciz	scala/xml/TextBuffer;
const #19 = class	#18;	//  scala/xml/TextBuffer
const #20 = NameAndType	#5:#6;//  sb:Lscala/collection/mutable/StringBuilder;
const #21 = Field	#19.#20;	//  scala/xml/TextBuffer.sb:Lscala/collection/mutable/StringBuilder;
const #22 = NameAndType	#3:#4;//  ws:Z
const #23 = Field	#19.#22;	//  scala/xml/TextBuffer.ws:Z
const #24 = Asciz	toText;
const #25 = Asciz	()Lscala/collection/Sequence;;
const #26 = Asciz	()Lscala/collection/mutable/StringBuilder;;
const #27 = NameAndType	#5:#26;//  sb:()Lscala/collection/mutable/StringBuilder;
const #28 = Method	#19.#27;	//  scala/xml/TextBuffer.sb:()Lscala/collection/mutable/StringBuilder;
const #29 = Asciz	length;
const #30 = Asciz	()I;
const #31 = NameAndType	#29:#30;//  length:()I
const #32 = Method	#16.#31;	//  scala/collection/mutable/StringBuilder.length:()I
const #33 = Asciz	scala/collection/immutable/Nil$;
const #34 = class	#33;	//  scala/collection/immutable/Nil$
const #35 = Asciz	MODULE$;
const #36 = Asciz	Lscala/collection/immutable/Nil$;;
const #37 = NameAndType	#35:#36;//  MODULE$:Lscala/collection/immutable/Nil$;
const #38 = Field	#34.#37;	//  scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
const #39 = Asciz	scala/xml/Utility$;
const #40 = class	#39;	//  scala/xml/Utility$
const #41 = Asciz	Lscala/xml/Utility$;;
const #42 = NameAndType	#35:#41;//  MODULE$:Lscala/xml/Utility$;
const #43 = Field	#40.#42;	//  scala/xml/Utility$.MODULE$:Lscala/xml/Utility$;
const #44 = Asciz	charAt;
const #45 = Asciz	(I)C;
const #46 = NameAndType	#44:#45;//  charAt:(I)C
const #47 = Method	#16.#46;	//  scala/collection/mutable/StringBuilder.charAt:(I)C
const #48 = Asciz	scala/xml/parsing/TokenTests;
const #49 = class	#48;	//  scala/xml/parsing/TokenTests
const #50 = Asciz	isSpace;
const #51 = Asciz	(C)Z;
const #52 = NameAndType	#50:#51;//  isSpace:(C)Z
const #53 = InterfaceMethod	#49.#52;	//  scala/xml/parsing/TokenTests.isSpace:(C)Z
const #54 = Asciz	length_$eq;
const #55 = Asciz	(I)V;
const #56 = NameAndType	#54:#55;//  length_$eq:(I)V
const #57 = Method	#16.#56;	//  scala/collection/mutable/StringBuilder.length_$eq:(I)V
const #58 = Asciz	scala/collection/immutable/List$;
const #59 = class	#58;	//  scala/collection/immutable/List$
const #60 = Asciz	Lscala/collection/immutable/List$;;
const #61 = NameAndType	#35:#60;//  MODULE$:Lscala/collection/immutable/List$;
const #62 = Field	#59.#61;	//  scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
const #63 = Asciz	scala/runtime/ScalaRunTime$;
const #64 = class	#63;	//  scala/runtime/ScalaRunTime$
const #65 = Asciz	Lscala/runtime/ScalaRunTime$;;
const #66 = NameAndType	#35:#65;//  MODULE$:Lscala/runtime/ScalaRunTime$;
const #67 = Field	#64.#66;	//  scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
const #68 = Asciz	scala/xml/Text;
const #69 = class	#68;	//  scala/xml/Text
const #70 = Asciz	toString;
const #71 = Asciz	()Ljava/lang/String;;
const #72 = NameAndType	#70:#71;//  toString:()Ljava/lang/String;
const #73 = Method	#16.#72;	//  scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
const #74 = Asciz	(Ljava/lang/String;)V;
const #75 = NameAndType	#7:#74;//  "<init>":(Ljava/lang/String;)V
const #76 = Method	#69.#75;	//  scala/xml/Text."<init>":(Ljava/lang/String;)V
const #77 = Asciz	boxArray;
const #78 = Asciz	(Ljava/lang/Object;)Lscala/runtime/BoxedArray;;
const #79 = NameAndType	#77:#78;//  boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
const #80 = Method	#64.#79;	//  scala/runtime/ScalaRunTime$.boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
const #81 = Asciz	apply;
const #82 = Asciz	(Lscala/collection/Sequence;)Lscala/collection/immutable/List;;
const #83 = NameAndType	#81:#82;//  apply:(Lscala/collection/Sequence;)Lscala/collection/immutable/List;
const #84 = Method	#59.#83;	//  scala/collection/immutable/List$.apply:(Lscala/collection/Sequence;)Lscala/collection/immutable/List;
const #85 = Asciz	this;
const #86 = Asciz	Lscala/xml/TextBuffer;;
const #87 = Asciz	len;
const #88 = Asciz	I;
const #89 = Asciz	LocalVariableTable;
const #90 = Asciz	()Lscala/collection/Sequence<Lscala/xml/Text;>;;
const #91 = Asciz	Signature;
const #92 = Asciz	append;
const #93 = Asciz	(Lscala/collection/Sequence;)Lscala/xml/TextBuffer;;
const #94 = Asciz	scala/xml/TextBuffer$$anonfun$append$1;
const #95 = class	#94;	//  scala/xml/TextBuffer$$anonfun$append$1
const #96 = Asciz	(Lscala/xml/TextBuffer;)V;
const #97 = NameAndType	#7:#96;//  "<init>":(Lscala/xml/TextBuffer;)V
const #98 = Method	#95.#97;	//  scala/xml/TextBuffer$$anonfun$append$1."<init>":(Lscala/xml/TextBuffer;)V
const #99 = Asciz	scala/collection/generic/IterableTemplate;
const #100 = class	#99;	//  scala/collection/generic/IterableTemplate
const #101 = Asciz	foreach;
const #102 = Asciz	(Lscala/Function1;)V;
const #103 = NameAndType	#101:#102;//  foreach:(Lscala/Function1;)V
const #104 = InterfaceMethod	#100.#103;	//  scala/collection/generic/IterableTemplate.foreach:(Lscala/Function1;)V
const #105 = Asciz	cs;
const #106 = Asciz	Lscala/collection/Sequence;;
const #107 = Asciz	(Lscala/collection/Sequence<Ljava/lang/Character;>;)Lscala/xml/TextBuffer;;
const #108 = Asciz	appendChar;
const #109 = Asciz	(C)Lscala/collection/mutable/StringBuilder;;
const #110 = Asciz	ws_$eq;
const #111 = Asciz	(Z)V;
const #112 = NameAndType	#110:#111;//  ws_$eq:(Z)V
const #113 = Method	#19.#112;	//  scala/xml/TextBuffer.ws_$eq:(Z)V
const #114 = NameAndType	#92:#109;//  append:(C)Lscala/collection/mutable/StringBuilder;
const #115 = Method	#16.#114;	//  scala/collection/mutable/StringBuilder.append:(C)Lscala/collection/mutable/StringBuilder;
const #116 = Asciz	c;
const #117 = Asciz	C;
const #118 = Asciz	appendSpace;
const #119 = Asciz	()Ljava/lang/Object;;
const #120 = Asciz	()Z;
const #121 = NameAndType	#3:#120;//  ws:()Z
const #122 = Method	#19.#121;	//  scala/xml/TextBuffer.ws:()Z
const #123 = Asciz	scala/runtime/BoxedUnit;
const #124 = class	#123;	//  scala/runtime/BoxedUnit
const #125 = Asciz	UNIT;
const #126 = Asciz	Lscala/runtime/BoxedUnit;;
const #127 = NameAndType	#125:#126;//  UNIT:Lscala/runtime/BoxedUnit;
const #128 = Field	#124.#127;	//  scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
const #129 = int	32;
const #130 = Asciz	ScalaSig;
const #131 = Asciz	InnerClasses;
const #132 = Asciz	$anonfun$append$1;
const #133 = Asciz	scala/ScalaObject;
const #134 = class	#133;	//  scala/ScalaObject

{
public scala.xml.TextBuffer();
  Code:
   Stack=3, Locals=1, Args_size=1
   0:	aload_0
   1:	invokespecial	#14; //Method java/lang/Object."<init>":()V
   4:	aload_0
   5:	new	#16; //class scala/collection/mutable/StringBuilder
   8:	dup
   9:	invokespecial	#17; //Method scala/collection/mutable/StringBuilder."<init>":()V
   12:	putfield	#21; //Field sb:Lscala/collection/mutable/StringBuilder;
   15:	aload_0
   16:	iconst_1
   17:	putfield	#23; //Field ws:Z
   20:	return
  LineNumberTable: 
   line 24: 0
   line 26: 4
   line 27: 15


public scala.collection.Sequence toText();
  Code:
   Stack=8, Locals=2, Args_size=1
   0:	aload_0
   1:	invokevirtual	#28; //Method sb:()Lscala/collection/mutable/StringBuilder;
   4:	invokevirtual	#32; //Method scala/collection/mutable/StringBuilder.length:()I
   7:	istore_1
   8:	iload_1
   9:	iconst_0
   10:	if_icmpne	17
   13:	getstatic	#38; //Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
   16:	areturn
   17:	getstatic	#43; //Field scala/xml/Utility$.MODULE$:Lscala/xml/Utility$;
   20:	aload_0
   21:	invokevirtual	#28; //Method sb:()Lscala/collection/mutable/StringBuilder;
   24:	iload_1
   25:	iconst_1
   26:	isub
   27:	invokevirtual	#47; //Method scala/collection/mutable/StringBuilder.charAt:(I)C
   30:	invokeinterface	#53,  2; //InterfaceMethod scala/xml/parsing/TokenTests.isSpace:(C)Z
   35:	ifeq	50
   38:	iload_1
   39:	iconst_1
   40:	isub
   41:	istore_1
   42:	aload_0
   43:	invokevirtual	#28; //Method sb:()Lscala/collection/mutable/StringBuilder;
   46:	iload_1
   47:	invokevirtual	#57; //Method scala/collection/mutable/StringBuilder.length_$eq:(I)V
   50:	iload_1
   51:	iconst_0
   52:	if_icmpne	59
   55:	getstatic	#38; //Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
   58:	areturn
   59:	getstatic	#62; //Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
   62:	getstatic	#67; //Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   65:	iconst_1
   66:	anewarray	#69; //class scala/xml/Text
   69:	dup
   70:	iconst_0
   71:	new	#69; //class scala/xml/Text
   74:	dup
   75:	aload_0
   76:	invokevirtual	#28; //Method sb:()Lscala/collection/mutable/StringBuilder;
   79:	invokevirtual	#73; //Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
   82:	invokespecial	#76; //Method scala/xml/Text."<init>":(Ljava/lang/String;)V
   85:	aastore
   86:	invokevirtual	#80; //Method scala/runtime/ScalaRunTime$.boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
   89:	invokevirtual	#84; //Method scala/collection/immutable/List$.apply:(Lscala/collection/Sequence;)Lscala/collection/immutable/List;
   92:	areturn
  LineNumberTable: 
   line 48: 0
   line 49: 8
   line 51: 17
   line 52: 38
   line 53: 42
   line 55: 50
   line 57: 59

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      93      0    this       Lscala/xml/TextBuffer;
   8      84      1    len       I

  Signature: length = 0x2
   00 5A 

public scala.xml.TextBuffer append(scala.collection.Sequence);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	aload_1
   1:	new	#95; //class scala/xml/TextBuffer$$anonfun$append$1
   4:	dup
   5:	aload_0
   6:	invokespecial	#98; //Method scala/xml/TextBuffer$$anonfun$append$1."<init>":(Lscala/xml/TextBuffer;)V
   9:	invokeinterface	#104,  2; //InterfaceMethod scala/collection/generic/IterableTemplate.foreach:(Lscala/Function1;)V
   14:	aload_0
   15:	areturn
  LineNumberTable: 
   line 38: 0
   line 40: 14

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      16      0    this       Lscala/xml/TextBuffer;
   0      16      1    cs       Lscala/collection/Sequence;

  Signature: length = 0x2
   00 6B 

public scala.collection.mutable.StringBuilder appendChar(char);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iconst_0
   2:	invokevirtual	#113; //Method ws_$eq:(Z)V
   5:	aload_0
   6:	invokevirtual	#28; //Method sb:()Lscala/collection/mutable/StringBuilder;
   9:	iload_1
   10:	invokevirtual	#115; //Method scala/collection/mutable/StringBuilder.append:(C)Lscala/collection/mutable/StringBuilder;
   13:	areturn
  LineNumberTable: 
   line 30: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      14      0    this       Lscala/xml/TextBuffer;
   0      14      1    c       C


public java.lang.Object appendSpace();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#122; //Method ws:()Z
   4:	ifeq	13
   7:	getstatic	#128; //Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
   10:	goto	27
   13:	aload_0
   14:	iconst_1
   15:	invokevirtual	#113; //Method ws_$eq:(Z)V
   18:	aload_0
   19:	invokevirtual	#28; //Method sb:()Lscala/collection/mutable/StringBuilder;
   22:	ldc	#129; //int 32
   24:	invokevirtual	#115; //Method scala/collection/mutable/StringBuilder.append:(C)Lscala/collection/mutable/StringBuilder;
   27:	areturn
  LineNumberTable: 
   line 29: 0


public void ws_$eq(boolean);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	putfield	#23; //Field ws:Z
   5:	return
  LineNumberTable: 
   line 27: 0


public boolean ws();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#23; //Field ws:Z
   4:	ireturn
  LineNumberTable: 
   line 27: 0


public scala.collection.mutable.StringBuilder sb();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#21; //Field sb:Lscala/collection/mutable/StringBuilder;
   4:	areturn
  LineNumberTable: 
   line 26: 0


}

