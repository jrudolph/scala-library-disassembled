Compiled from "TextBuffer.scala"
public class scala.xml.TextBuffer extends java.lang.Object implements scala.ScalaObject
  SourceFile: "TextBuffer.scala"
  ScalaSig: length = 0x1BA
   05 00 4D 07 05 01 02 FFFFFF88 02 07 01 0A 54 65 78 74
   42 75 66 66 65 72 0A 02 03 04 01 03 78 6D 6C 0A
   01 05 01 05 73 63 61 6C 61 03 00 10 02 08 09 0D
   01 02 06 08 0A 02 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF88 02 0B 02 0A 54 65
   78 74 42 75 66 66 65 72 13 03 09 0C 14 10 02 0D
   12 0D 01 0E 0A 02 0F 10 01 04 6C 61 6E 67 0A 01
   11 01 04 6A 61 76 61 09 02 13 0E 02 06 4F 62 6A
   65 63 74 10 02 15 16 0D 01 04 09 02 17 04 02 0B
   53 63 61 6C 61 4F 62 6A 65 63 74 08 05 19 09 FFFFFF84
   00 1A 01 06 3C 69 6E 69 74 3E 14 01 07 08 05 1C
   09 FFFFFF84 00 1D 01 0A 66 72 6F 6D 53 74 72 69 6E 67
   14 02 1E 44 10 02 08 1F 06 08 0A 02 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF80
   00 20 13 03 1F 0C 14 08 05 19 1F FFFFFF84 00 22 14 01
   1E 08 07 24 1F FFFFFFC2 FFFFFF80 FFFFFF84 00 25 01 02 73 62 15 01
   26 10 02 27 2C 0D 01 28 0A 02 29 2A 01 07 6D 75
   74 61 62 6C 65 0A 02 2B 04 01 0A 63 6F 6C 6C 65
   63 74 69 6F 6E 09 02 2D 28 02 0D 53 74 72 69 6E
   67 42 75 69 6C 64 65 72 08 06 2F 1F FFFFFFA0 FFFFFF80 04 26
   01 03 73 62 20 08 05 31 1F FFFFFF84 00 32 01 06 61 70
   70 65 6E 64 14 02 33 34 0D 01 1F 08 05 35 30 FFFFFFC0
   00 36 01 02 63 73 10 03 37 38 3A 0D 01 2A 09 02
   39 2A 02 03 53 65 71 10 02 15 3B 09 02 3C 04 02
   04 43 68 61 72 08 05 3E 1F FFFFFF84 00 3F 01 06 74 6F
   54 65 78 74 15 01 40 10 03 37 38 41 10 02 08 42
   09 02 43 02 02 04 54 65 78 74 08 05 45 1B FFFFFFC0 00
   46 01 03 73 74 72 10 02 47 4A 0E 02 15 48 09 02
   49 04 01 06 50 72 65 64 65 66 09 02 4B 4C 02 06
   53 74 72 69 6E 67 0A 02 49 04 
  InnerClass: 
   public final #118= #103 of #27; //$anonfun$append$1=class scala/xml/TextBuffer$$anonfun$append$1 of class scala/xml/TextBuffer
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	TextBuffer.scala;
const #3 = Asciz	fromString;
const #4 = Asciz	(Ljava/lang/String;)Lscala/xml/TextBuffer;;
const #5 = Asciz	Code;
const #6 = Asciz	scala/xml/TextBuffer$;
const #7 = class	#6;	//  scala/xml/TextBuffer$
const #8 = Asciz	MODULE$;
const #9 = Asciz	Lscala/xml/TextBuffer$;;
const #10 = NameAndType	#8:#9;//  MODULE$:Lscala/xml/TextBuffer$;
const #11 = Field	#7.#10;	//  scala/xml/TextBuffer$.MODULE$:Lscala/xml/TextBuffer$;
const #12 = NameAndType	#3:#4;//  fromString:(Ljava/lang/String;)Lscala/xml/TextBuffer;
const #13 = Method	#7.#12;	//  scala/xml/TextBuffer$.fromString:(Ljava/lang/String;)Lscala/xml/TextBuffer;
const #14 = Asciz	sb;
const #15 = Asciz	Lscala/collection/mutable/StringBuilder;;
const #16 = Asciz	<init>;
const #17 = Asciz	()V;
const #18 = Asciz	LineNumberTable;
const #19 = Asciz	java/lang/Object;
const #20 = class	#19;	//  java/lang/Object
const #21 = NameAndType	#16:#17;//  "<init>":()V
const #22 = Method	#20.#21;	//  java/lang/Object."<init>":()V
const #23 = Asciz	scala/collection/mutable/StringBuilder;
const #24 = class	#23;	//  scala/collection/mutable/StringBuilder
const #25 = Method	#24.#21;	//  scala/collection/mutable/StringBuilder."<init>":()V
const #26 = Asciz	scala/xml/TextBuffer;
const #27 = class	#26;	//  scala/xml/TextBuffer
const #28 = NameAndType	#14:#15;//  sb:Lscala/collection/mutable/StringBuilder;
const #29 = Field	#27.#28;	//  scala/xml/TextBuffer.sb:Lscala/collection/mutable/StringBuilder;
const #30 = Asciz	toText;
const #31 = Asciz	()Lscala/collection/Seq;;
const #32 = Asciz	()Lscala/collection/mutable/StringBuilder;;
const #33 = NameAndType	#14:#32;//  sb:()Lscala/collection/mutable/StringBuilder;
const #34 = Method	#27.#33;	//  scala/xml/TextBuffer.sb:()Lscala/collection/mutable/StringBuilder;
const #35 = Asciz	toString;
const #36 = Asciz	()Ljava/lang/String;;
const #37 = NameAndType	#35:#36;//  toString:()Ljava/lang/String;
const #38 = Method	#24.#37;	//  scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
const #39 = Asciz	java/lang/String;
const #40 = class	#39;	//  java/lang/String
const #41 = Asciz	trim;
const #42 = NameAndType	#41:#36;//  trim:()Ljava/lang/String;
const #43 = Method	#40.#42;	//  java/lang/String.trim:()Ljava/lang/String;
const #44 = Asciz	;
const #45 = String	#44;	//  
const #46 = Asciz	equals;
const #47 = Asciz	(Ljava/lang/Object;)Z;
const #48 = NameAndType	#46:#47;//  equals:(Ljava/lang/Object;)Z
const #49 = Method	#20.#48;	//  java/lang/Object.equals:(Ljava/lang/Object;)Z
const #50 = Asciz	scala/collection/immutable/Nil$;
const #51 = class	#50;	//  scala/collection/immutable/Nil$
const #52 = Asciz	Lscala/collection/immutable/Nil$;;
const #53 = NameAndType	#8:#52;//  MODULE$:Lscala/collection/immutable/Nil$;
const #54 = Field	#51.#53;	//  scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
const #55 = Asciz	scala/MatchError;
const #56 = class	#55;	//  scala/MatchError
const #57 = Method	#40.#37;	//  java/lang/String.toString:()Ljava/lang/String;
const #58 = Asciz	(Ljava/lang/String;)V;
const #59 = NameAndType	#16:#58;//  "<init>":(Ljava/lang/String;)V
const #60 = Method	#56.#59;	//  scala/MatchError."<init>":(Ljava/lang/String;)V
const #61 = Asciz	scala/collection/Seq$;
const #62 = class	#61;	//  scala/collection/Seq$
const #63 = Asciz	Lscala/collection/Seq$;;
const #64 = NameAndType	#8:#63;//  MODULE$:Lscala/collection/Seq$;
const #65 = Field	#62.#64;	//  scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
const #66 = Asciz	scala/Predef$;
const #67 = class	#66;	//  scala/Predef$
const #68 = Asciz	Lscala/Predef$;;
const #69 = NameAndType	#8:#68;//  MODULE$:Lscala/Predef$;
const #70 = Field	#67.#69;	//  scala/Predef$.MODULE$:Lscala/Predef$;
const #71 = Asciz	scala/xml/Text;
const #72 = class	#71;	//  scala/xml/Text
const #73 = Asciz	scala/xml/Text$;
const #74 = class	#73;	//  scala/xml/Text$
const #75 = Asciz	Lscala/xml/Text$;;
const #76 = NameAndType	#8:#75;//  MODULE$:Lscala/xml/Text$;
const #77 = Field	#74.#76;	//  scala/xml/Text$.MODULE$:Lscala/xml/Text$;
const #78 = Asciz	apply;
const #79 = Asciz	(Ljava/lang/String;)Lscala/xml/Text;;
const #80 = NameAndType	#78:#79;//  apply:(Ljava/lang/String;)Lscala/xml/Text;
const #81 = Method	#74.#80;	//  scala/xml/Text$.apply:(Ljava/lang/String;)Lscala/xml/Text;
const #82 = Asciz	[Ljava/lang/Object;;
const #83 = class	#82;	//  "[Ljava/lang/Object;"
const #84 = Asciz	wrapRefArray;
const #85 = Asciz	([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;;
const #86 = NameAndType	#84:#85;//  wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
const #87 = Method	#67.#86;	//  scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
const #88 = Asciz	(Lscala/collection/Seq;)Lscala/collection/Traversable;;
const #89 = NameAndType	#78:#88;//  apply:(Lscala/collection/Seq;)Lscala/collection/Traversable;
const #90 = Method	#62.#89;	//  scala/collection/Seq$.apply:(Lscala/collection/Seq;)Lscala/collection/Traversable;
const #91 = Asciz	scala/collection/Seq;
const #92 = class	#91;	//  scala/collection/Seq
const #93 = Asciz	this;
const #94 = Asciz	Lscala/xml/TextBuffer;;
const #95 = Asciz	temp1;
const #96 = Asciz	Ljava/lang/String;;
const #97 = Asciz	LocalVariableTable;
const #98 = Asciz	()Lscala/collection/Seq<Lscala/xml/Text;>;;
const #99 = Asciz	Signature;
const #100 = Asciz	append;
const #101 = Asciz	(Lscala/collection/Seq;)Lscala/xml/TextBuffer;;
const #102 = Asciz	scala/xml/TextBuffer$$anonfun$append$1;
const #103 = class	#102;	//  scala/xml/TextBuffer$$anonfun$append$1
const #104 = Asciz	(Lscala/xml/TextBuffer;)V;
const #105 = NameAndType	#16:#104;//  "<init>":(Lscala/xml/TextBuffer;)V
const #106 = Method	#103.#105;	//  scala/xml/TextBuffer$$anonfun$append$1."<init>":(Lscala/xml/TextBuffer;)V
const #107 = Asciz	scala/collection/IterableLike;
const #108 = class	#107;	//  scala/collection/IterableLike
const #109 = Asciz	foreach;
const #110 = Asciz	(Lscala/Function1;)V;
const #111 = NameAndType	#109:#110;//  foreach:(Lscala/Function1;)V
const #112 = InterfaceMethod	#108.#111;	//  scala/collection/IterableLike.foreach:(Lscala/Function1;)V
const #113 = Asciz	cs;
const #114 = Asciz	Lscala/collection/Seq;;
const #115 = Asciz	(Lscala/collection/Seq<Ljava/lang/Character;>;)Lscala/xml/TextBuffer;;
const #116 = Asciz	ScalaSig;
const #117 = Asciz	InnerClasses;
const #118 = Asciz	$anonfun$append$1;
const #119 = Asciz	scala/ScalaObject;
const #120 = class	#119;	//  scala/ScalaObject

{
public static final scala.xml.TextBuffer fromString(java.lang.String);
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	getstatic	#11; //Field scala/xml/TextBuffer$.MODULE$:Lscala/xml/TextBuffer$;
   3:	aload_0
   4:	invokevirtual	#13; //Method scala/xml/TextBuffer$.fromString:(Ljava/lang/String;)Lscala/xml/TextBuffer;
   7:	areturn

public scala.xml.TextBuffer();
  Code:
   Stack=3, Locals=1, Args_size=1
   0:	aload_0
   1:	invokespecial	#22; //Method java/lang/Object."<init>":()V
   4:	aload_0
   5:	new	#24; //class scala/collection/mutable/StringBuilder
   8:	dup
   9:	invokespecial	#25; //Method scala/collection/mutable/StringBuilder."<init>":()V
   12:	putfield	#29; //Field sb:Lscala/collection/mutable/StringBuilder;
   15:	return
  LineNumberTable: 
   line 29: 0
   line 30: 4


public scala.collection.Seq toText();
  Code:
   Stack=7, Locals=3, Args_size=1
   0:	aload_0
   1:	invokevirtual	#34; //Method sb:()Lscala/collection/mutable/StringBuilder;
   4:	invokevirtual	#38; //Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
   7:	invokevirtual	#43; //Method java/lang/String.trim:()Ljava/lang/String;
   10:	astore_2
   11:	aload_2
   12:	ldc	#45; //String 
   14:	astore_1
   15:	dup
   16:	ifnonnull	27
   19:	pop
   20:	aload_1
   21:	ifnull	34
   24:	goto	56
   27:	aload_1
   28:	invokevirtual	#49; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   31:	ifeq	56
   34:	iconst_1
   35:	ifeq	44
   38:	getstatic	#54; //Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
   41:	goto	92
   44:	new	#56; //class scala/MatchError
   47:	dup
   48:	aload_2
   49:	invokevirtual	#57; //Method java/lang/String.toString:()Ljava/lang/String;
   52:	invokespecial	#60; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   55:	athrow
   56:	iconst_1
   57:	ifeq	93
   60:	getstatic	#65; //Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
   63:	getstatic	#70; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   66:	iconst_1
   67:	anewarray	#72; //class scala/xml/Text
   70:	dup
   71:	iconst_0
   72:	getstatic	#77; //Field scala/xml/Text$.MODULE$:Lscala/xml/Text$;
   75:	aload_2
   76:	invokevirtual	#81; //Method scala/xml/Text$.apply:(Ljava/lang/String;)Lscala/xml/Text;
   79:	aastore
   80:	checkcast	#83; //class "[Ljava/lang/Object;"
   83:	invokevirtual	#87; //Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
   86:	invokevirtual	#90; //Method scala/collection/Seq$.apply:(Lscala/collection/Seq;)Lscala/collection/Traversable;
   89:	checkcast	#92; //class scala/collection/Seq
   92:	areturn
   93:	new	#56; //class scala/MatchError
   96:	dup
   97:	aload_2
   98:	invokevirtual	#57; //Method java/lang/String.toString:()Ljava/lang/String;
   101:	invokespecial	#60; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   104:	athrow
  LineNumberTable: 
   line 49: 0
   line 21: 34
   line 50: 38
   line 49: 44
   line 21: 56
   line 51: 60
   line 49: 92

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      105      0    this       Lscala/xml/TextBuffer;
   11      94      2    temp1       Ljava/lang/String;

  Signature: length = 0x2
   00 62 

public scala.xml.TextBuffer append(scala.collection.Seq);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	aload_1
   1:	new	#103; //class scala/xml/TextBuffer$$anonfun$append$1
   4:	dup
   5:	aload_0
   6:	invokespecial	#106; //Method scala/xml/TextBuffer$$anonfun$append$1."<init>":(Lscala/xml/TextBuffer;)V
   9:	invokeinterface	#112,  2; //InterfaceMethod scala/collection/IterableLike.foreach:(Lscala/Function1;)V
   14:	aload_0
   15:	areturn
  LineNumberTable: 
   line 38: 0
   line 42: 14

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      16      0    this       Lscala/xml/TextBuffer;
   0      16      1    cs       Lscala/collection/Seq;

  Signature: length = 0x2
   00 73 

public scala.collection.mutable.StringBuilder sb();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#29; //Field sb:Lscala/collection/mutable/StringBuilder;
   4:	areturn
  LineNumberTable: 
   line 30: 0


}

