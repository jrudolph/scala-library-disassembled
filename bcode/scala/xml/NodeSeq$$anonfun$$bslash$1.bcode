Compiled from "NodeSeq.scala"
public final class scala.xml.NodeSeq$$anonfun$$bslash$1 extends scala.runtime.AbstractFunction1 implements java.io.Serializable
  SourceFile: "NodeSeq.scala"
  Scala: length = 0x
   
  InnerClass: 
   public final #47= #9 of #46; //$anonfun$$bslash$1=class scala/xml/NodeSeq$$anonfun$$bslash$1 of class scala/xml/NodeSeq
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	NodeSeq.scala;
const #3 = Asciz	<clinit>;
const #4 = Asciz	()V;
const #5 = Asciz	Code;
const #6 = Asciz	serialVersionUID;
const #7 = Asciz	J;
const #8 = Asciz	scala/xml/NodeSeq$$anonfun$$bslash$1;
const #9 = class	#8;	//  scala/xml/NodeSeq$$anonfun$$bslash$1
const #10 = NameAndType	#6:#7;//  serialVersionUID:J
const #11 = Field	#9.#10;	//  scala/xml/NodeSeq$$anonfun$$bslash$1.serialVersionUID:J
const #12 = Asciz	<init>;
const #13 = Asciz	(Lscala/xml/NodeSeq;)V;
const #14 = Asciz	LineNumberTable;
const #15 = Asciz	scala/runtime/AbstractFunction1;
const #16 = class	#15;	//  scala/runtime/AbstractFunction1
const #17 = NameAndType	#12:#4;//  "<init>":()V
const #18 = Method	#16.#17;	//  scala/runtime/AbstractFunction1."<init>":()V
const #19 = Asciz	this;
const #20 = Asciz	Lscala/xml/NodeSeq$$anonfun$$bslash$1;;
const #21 = Asciz	$outer;
const #22 = Asciz	Lscala/xml/NodeSeq;;
const #23 = Asciz	LocalVariableTable;
const #24 = Asciz	apply;
const #25 = Asciz	(Ljava/lang/Object;)Ljava/lang/Object;;
const #26 = Asciz	scala/xml/Node;
const #27 = class	#26;	//  scala/xml/Node
const #28 = Asciz	(Lscala/xml/Node;)Z;
const #29 = NameAndType	#24:#28;//  apply:(Lscala/xml/Node;)Z
const #30 = Method	#9.#29;	//  scala/xml/NodeSeq$$anonfun$$bslash$1.apply:(Lscala/xml/Node;)Z
const #31 = Asciz	scala/runtime/BoxesRunTime;
const #32 = class	#31;	//  scala/runtime/BoxesRunTime
const #33 = Asciz	boxToBoolean;
const #34 = Asciz	(Z)Ljava/lang/Boolean;;
const #35 = NameAndType	#33:#34;//  boxToBoolean:(Z)Ljava/lang/Boolean;
const #36 = Method	#32.#35;	//  scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
const #37 = Asciz	v1;
const #38 = Asciz	Ljava/lang/Object;;
const #39 = Asciz	isAtom;
const #40 = Asciz	()Z;
const #41 = NameAndType	#39:#40;//  isAtom:()Z
const #42 = Method	#27.#41;	//  scala/xml/Node.isAtom:()Z
const #43 = Asciz	Scala;
const #44 = Asciz	InnerClasses;
const #45 = Asciz	scala/xml/NodeSeq;
const #46 = class	#45;	//  scala/xml/NodeSeq
const #47 = Asciz	$anonfun$$bslash$1;
const #48 = Asciz	java/io/Serializable;
const #49 = class	#48;	//  java/io/Serializable

{
public static final long serialVersionUID;

public static {};
  Code:
   Stack=2, Locals=0, Args_size=0
   0:	lconst_0
   1:	putstatic	#11; //Field serialVersionUID:J
   4:	return

public scala.xml.NodeSeq$$anonfun$$bslash$1(scala.xml.NodeSeq);
  Code:
   Stack=1, Locals=2, Args_size=2
   0:	aload_0
   1:	invokespecial	#18; //Method scala/runtime/AbstractFunction1."<init>":()V
   4:	return
  LineNumberTable: 
   line 107: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    this       Lscala/xml/NodeSeq$$anonfun$$bslash$1;
   0      5      1    $outer       Lscala/xml/NodeSeq;


public final java.lang.Object apply(java.lang.Object);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	checkcast	#27; //class scala/xml/Node
   5:	invokevirtual	#30; //Method apply:(Lscala/xml/Node;)Z
   8:	istore_2
   9:	iload_2
   10:	invokestatic	#36; //Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
   13:	areturn
  LineNumberTable: 
   line 107: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      14      0    this       Lscala/xml/NodeSeq$$anonfun$$bslash$1;
   0      14      1    v1       Ljava/lang/Object;


public final boolean apply(scala.xml.Node);
  Code:
   Stack=1, Locals=2, Args_size=2
   0:	aload_1
   1:	invokevirtual	#42; //Method scala/xml/Node.isAtom:()Z
   4:	ifeq	11
   7:	iconst_0
   8:	goto	12
   11:	iconst_1
   12:	ireturn
  LineNumberTable: 
   line 107: 0


}

