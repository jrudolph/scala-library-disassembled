Compiled from "Equality.scala"
public final class scala.xml.Equality$ extends java.lang.Object implements scala.ScalaObject
  SourceFile: "Equality.scala"
  Scala: length = 0x
   
  InnerClass: 
   public final $anonfun$hashCode$2=class scala/xml/Equality$$anonfun$hashCode$2 of class scala/xml/Equality
   public final $anonfun$hashCode$1=class scala/xml/Equality$$anonfun$hashCode$1 of class scala/xml/Equality
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	Equality.scala;
Asciz	Scala;
Asciz	MODULE$;
Asciz	Lscala/xml/Equality$;;
Asciz	<clinit>;
Asciz	()V;
Asciz	Code;
Asciz	scala/xml/Equality$;
class	scala/xml/Equality$
Asciz	<init>;
NameAndType	"<init>":()V
Method	scala/xml/Equality$."<init>":()V
Asciz	asRef;
Asciz	(Ljava/lang/Object;)Ljava/lang/Object;;
Asciz	LineNumberTable;
Asciz	this;
Asciz	x;
Asciz	Ljava/lang/Object;;
Asciz	LocalVariableTable;
Asciz	compareBlithely;
Asciz	(Ljava/lang/Object;Ljava/lang/String;)Z;
Asciz	scala/xml/Atom;
class	scala/xml/Atom
Asciz	data;
Asciz	()Ljava/lang/Object;;
NameAndType	data:()Ljava/lang/Object;
Method	scala/xml/Atom.data:()Ljava/lang/Object;
Asciz	java/lang/Object;
class	java/lang/Object
Asciz	equals;
Asciz	(Ljava/lang/Object;)Z;
NameAndType	equals:(Ljava/lang/Object;)Z
Method	java/lang/Object.equals:(Ljava/lang/Object;)Z
Asciz	scala/xml/NodeSeq;
class	scala/xml/NodeSeq
Asciz	text;
Asciz	()Ljava/lang/String;;
NameAndType	text:()Ljava/lang/String;
Method	scala/xml/NodeSeq.text:()Ljava/lang/String;
Asciz	x1;
Asciz	x2;
Asciz	Ljava/lang/String;;
Asciz	temp1;
Asciz	(Ljava/lang/Object;Lscala/xml/Node;)Z;
Asciz	gd1$1;
Asciz	(Lscala/xml/NodeSeq;)Z;
NameAndType	gd1$1:(Lscala/xml/NodeSeq;)Z
Method	scala/xml/Equality$.gd1$1:(Lscala/xml/NodeSeq;)Z
Asciz	apply;
Asciz	(I)Lscala/xml/Node;;
NameAndType	apply:(I)Lscala/xml/Node;
Method	scala/xml/NodeSeq.apply:(I)Lscala/xml/Node;
Asciz	Lscala/xml/Node;;
Asciz	temp4;
Asciz	temp5;
Asciz	Lscala/xml/NodeSeq;;
Asciz	(Ljava/lang/Object;Ljava/lang/Object;)Z;
Asciz	java/lang/String;
class	java/lang/String
NameAndType	compareBlithely:(Ljava/lang/Object;Ljava/lang/String;)Z
Method	scala/xml/Equality$.compareBlithely:(Ljava/lang/Object;Ljava/lang/String;)Z
Asciz	scala/xml/Node;
class	scala/xml/Node
NameAndType	compareBlithely:(Ljava/lang/Object;Lscala/xml/Node;)Z
Method	scala/xml/Equality$.compareBlithely:(Ljava/lang/Object;Lscala/xml/Node;)Z
Asciz	temp6;
Asciz	length;
Asciz	()I;
NameAndType	length:()I
Method	scala/xml/NodeSeq.length:()I
Method	java/lang/Object."<init>":()V
NameAndType	MODULE$:Lscala/xml/Equality$;
Field	scala/xml/Equality$.MODULE$:Lscala/xml/Equality$;
Asciz	InnerClasses;
Asciz	scala/xml/Equality$$anonfun$hashCode$2;
class	scala/xml/Equality$$anonfun$hashCode$2
Asciz	scala/xml/Equality;
class	scala/xml/Equality
Asciz	$anonfun$hashCode$2;
Asciz	scala/xml/Equality$$anonfun$hashCode$1;
class	scala/xml/Equality$$anonfun$hashCode$1
Asciz	$anonfun$hashCode$1;
Asciz	scala/ScalaObject;
class	scala/ScalaObject

{
public static final scala.xml.Equality$ MODULE$;
  Signature: Lscala/xml/Equality$;

public static {};
  Signature: ()V
  Code:
   Stack=1, Locals=0, Args_size=0
	new	class scala/xml/Equality$
	invokespecial	Method "<init>":()V
	return
  Labels:

public java.lang.Object asRef(java.lang.Object);
  Signature: (Ljava/lang/Object;)Ljava/lang/Object;
  Code:
   Stack=1, Locals=2, Args_size=2
	aload_1
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      2      0    this       Lscala/xml/Equality$;
   0      2      1    x       Ljava/lang/Object;


public boolean compareBlithely(java.lang.Object, java.lang.String);
  Signature: (Ljava/lang/Object;Ljava/lang/String;)Z
  Code:
   Stack=2, Locals=6, Args_size=3
	aload_1
	astore_3
	aload_3
	instanceof	class scala/xml/Atom
	ifeq	l1 // aload_3
	aload_3
	checkcast	class scala/xml/Atom
	invokevirtual	Method scala/xml/Atom.data:()Ljava/lang/Object;
	aload_2
	astore	4
	dup
	ifnonnull	l2 // aload
	pop
	aload	4
	ifnull	l3 // iconst_1
	goto	l4 // iconst_0
l2	aload	4
	invokevirtual	Method java/lang/Object.equals:(Ljava/lang/Object;)Z
	ifeq	l4 // iconst_0
l3	iconst_1
	goto	l5 // ireturn
l4	iconst_0
	goto	l5 // ireturn
l1	aload_3
	instanceof	class scala/xml/NodeSeq
	ifeq	l6 // iconst_0
	aload_3
	checkcast	class scala/xml/NodeSeq
	invokevirtual	Method scala/xml/NodeSeq.text:()Ljava/lang/String;
	aload_2
	astore	5
	dup
	ifnonnull	l7 // aload
	pop
	aload	5
	ifnull	l8 // iconst_1
	goto	l9 // iconst_0
l7	aload	5
	invokevirtual	Method java/lang/Object.equals:(Ljava/lang/Object;)Z
	ifeq	l9 // iconst_0
l8	iconst_1
	goto	l5 // ireturn
l9	iconst_0
	goto	l5 // ireturn
l6	iconst_0
l5	ireturn
  Labels:
   	l2 = 32 // aload
   	l3 = 40 // iconst_1
   	l4 = 44 // iconst_0
   	l1 = 48 // aload_3
   	l7 = 78 // aload
   	l8 = 86 // iconst_1
   	l9 = 90 // iconst_0
   	l6 = 94 // iconst_0
   	l5 = 95 // ireturn
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      96      0    this       Lscala/xml/Equality$;
   0      96      1    x1       Ljava/lang/Object;
   0      96      2    x2       Ljava/lang/String;
   2      94      3    temp1       Ljava/lang/Object;


public boolean compareBlithely(java.lang.Object, scala.xml.Node);
  Signature: (Ljava/lang/Object;Lscala/xml/Node;)Z
  Code:
   Stack=3, Locals=7, Args_size=3
	aload_1
	astore_3
	aload_3
	instanceof	class scala/xml/NodeSeq
	ifeq	l1 // iconst_0
	aload_3
	checkcast	class scala/xml/NodeSeq
	astore	4
	aload	4
	astore	5
	aload_0
	aload	5
	invokespecial	Method gd1$1:(Lscala/xml/NodeSeq;)Z
	ifeq	l2 // iconst_0
	aload_2
	aload	4
	iconst_0
	invokevirtual	Method scala/xml/NodeSeq.apply:(I)Lscala/xml/Node;
	astore	6
	dup
	ifnonnull	l3 // aload
	pop
	aload	6
	ifnull	l4 // iconst_1
	goto	l5 // iconst_0
l3	aload	6
	invokevirtual	Method java/lang/Object.equals:(Ljava/lang/Object;)Z
	ifeq	l5 // iconst_0
l4	iconst_1
	goto	l6 // ireturn
l5	iconst_0
	goto	l6 // ireturn
l2	iconst_0
	goto	l6 // ireturn
l1	iconst_0
l6	ireturn
  Labels:
   	l3 = 50 // aload
   	l4 = 58 // iconst_1
   	l5 = 62 // iconst_0
   	l2 = 66 // iconst_0
   	l1 = 70 // iconst_0
   	l6 = 71 // ireturn
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      72      0    this       Lscala/xml/Equality$;
   0      72      1    x1       Ljava/lang/Object;
   0      72      2    x2       Lscala/xml/Node;
   2      70      3    temp4       Ljava/lang/Object;
   15      55      4    temp5       Lscala/xml/NodeSeq;
   19      51      5    x       Lscala/xml/NodeSeq;


public boolean compareBlithely(java.lang.Object, java.lang.Object);
  Signature: (Ljava/lang/Object;Ljava/lang/Object;)Z
  Code:
   Stack=3, Locals=6, Args_size=3
	aload_1
	dup
	astore_3
	ifnull	l1 // aload_1
	aload_3
	aconst_null
	invokevirtual	Method java/lang/Object.equals:(Ljava/lang/Object;)Z
	ifne	l1 // aload_1
	aload_2
	dup
	astore	4
	ifnull	l1 // aload_1
	aload	4
	aconst_null
	invokevirtual	Method java/lang/Object.equals:(Ljava/lang/Object;)Z
	ifeq	l2 // aload_2
l1	aload_1
	aload_2
	if_acmpne	l3 // iconst_0
	iconst_1
	goto	l4 // ireturn
l3	iconst_0
l4	ireturn
l2	aload_2
	astore	5
	aload	5
	instanceof	class java/lang/String
	ifeq	l5 // aload
	aload_0
	aload_1
	aload	5
	checkcast	class java/lang/String
	invokevirtual	Method compareBlithely:(Ljava/lang/Object;Ljava/lang/String;)Z
	goto	l6 // ireturn
l5	aload	5
	instanceof	class scala/xml/Node
	ifeq	l7 // iconst_0
	aload_0
	aload_1
	aload	5
	checkcast	class scala/xml/Node
	invokevirtual	Method compareBlithely:(Ljava/lang/Object;Lscala/xml/Node;)Z
	goto	l6 // ireturn
l7	iconst_0
l6	ireturn
  Labels:
   	l1 = 30 // aload_1
   	l3 = 39 // iconst_0
   	l4 = 40 // ireturn
   	l2 = 41 // aload_2
   	l5 = 65 // aload
   	l7 = 86 // iconst_0
   	l6 = 87 // ireturn
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      88      0    this       Lscala/xml/Equality$;
   0      88      1    x1       Ljava/lang/Object;
   0      88      2    x2       Ljava/lang/Object;
   44      44      5    temp6       Ljava/lang/Object;


private final boolean gd1$1(scala.xml.NodeSeq);
  Signature: (Lscala/xml/NodeSeq;)Z
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_1
	invokevirtual	Method scala/xml/NodeSeq.length:()I
	iconst_1
	if_icmpne	l1 // iconst_0
	iconst_1
	goto	l2 // ireturn
l1	iconst_0
l2	ireturn
  Labels:
   	l1 = 12 // iconst_0
   	l2 = 13 // ireturn

private scala.xml.Equality$();
  Signature: ()V
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokespecial	Method java/lang/Object."<init>":()V
	aload_0
	putstatic	Field MODULE$:Lscala/xml/Equality$;
	return
  Labels:

}

