Compiled from "ExternalID.scala"
public final class scala.xml.dtd.SystemID$ extends scala.runtime.AbstractFunction1 implements scala.ScalaObject
  SourceFile: "ExternalID.scala"
  Scala: length = 0x
   
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	ExternalID.scala;
Asciz	MODULE$;
Asciz	Lscala/xml/dtd/SystemID$;;
Asciz	<clinit>;
Asciz	()V;
Asciz	Code;
Asciz	scala/xml/dtd/SystemID$;
class	scala/xml/dtd/SystemID$
Asciz	<init>;
NameAndType	"<init>":()V
Method	scala/xml/dtd/SystemID$."<init>":()V
Asciz	unapply;
Asciz	(Lscala/xml/dtd/SystemID;)Lscala/Option;;
Asciz	LineNumberTable;
Asciz	scala/None$;
class	scala/None$
Asciz	Lscala/None$;;
NameAndType	MODULE$:Lscala/None$;
Field	scala/None$.MODULE$:Lscala/None$;
Asciz	scala/Some;
class	scala/Some
Asciz	scala/xml/dtd/SystemID;
class	scala/xml/dtd/SystemID
Asciz	systemId;
Asciz	()Ljava/lang/String;;
NameAndType	systemId:()Ljava/lang/String;
Method	scala/xml/dtd/SystemID.systemId:()Ljava/lang/String;
Asciz	(Ljava/lang/Object;)V;
NameAndType	"<init>":(Ljava/lang/Object;)V
Method	scala/Some."<init>":(Ljava/lang/Object;)V
Asciz	this;
Asciz	x$0;
Asciz	Lscala/xml/dtd/SystemID;;
Asciz	LocalVariableTable;
Asciz	apply;
Asciz	(Ljava/lang/String;)Lscala/xml/dtd/SystemID;;
Asciz	(Ljava/lang/String;)V;
NameAndType	"<init>":(Ljava/lang/String;)V
Method	scala/xml/dtd/SystemID."<init>":(Ljava/lang/String;)V
Asciz	Ljava/lang/String;;
Asciz	(Ljava/lang/Object;)Ljava/lang/Object;;
Asciz	java/lang/String;
class	java/lang/String
NameAndType	apply:(Ljava/lang/String;)Lscala/xml/dtd/SystemID;
Method	scala/xml/dtd/SystemID$.apply:(Ljava/lang/String;)Lscala/xml/dtd/SystemID;
Asciz	v1;
Asciz	Ljava/lang/Object;;
Asciz	scala/runtime/AbstractFunction1;
class	scala/runtime/AbstractFunction1
Method	scala/runtime/AbstractFunction1."<init>":()V
NameAndType	MODULE$:Lscala/xml/dtd/SystemID$;
Field	scala/xml/dtd/SystemID$.MODULE$:Lscala/xml/dtd/SystemID$;
Asciz	Scala;
Asciz	scala/ScalaObject;
class	scala/ScalaObject

{
public static final scala.xml.dtd.SystemID$ MODULE$;
  Signature: Lscala/xml/dtd/SystemID$;

public static {};
  Signature: ()V
  Code:
   Stack=1, Locals=0, Args_size=0
	new	class scala/xml/dtd/SystemID$
	invokespecial	Method "<init>":()V
	return
  Labels:

public scala.Option unapply(scala.xml.dtd.SystemID);
  Signature: (Lscala/xml/dtd/SystemID;)Lscala/Option;
  Code:
   Stack=3, Locals=2, Args_size=2
	aload_1
	ifnonnull	l1 // new
	getstatic	Field scala/None$.MODULE$:Lscala/None$;
	goto	l2 // areturn
l1	new	class scala/Some
	dup
	aload_1
	invokevirtual	Method scala/xml/dtd/SystemID.systemId:()Ljava/lang/String;
	invokespecial	Method scala/Some."<init>":(Ljava/lang/Object;)V
l2	areturn
  Labels:
   	l1 = 10 // new
   	l2 = 21 // areturn
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      22      0    this       Lscala/xml/dtd/SystemID$;
   0      22      1    x$0       Lscala/xml/dtd/SystemID;


public scala.xml.dtd.SystemID apply(java.lang.String);
  Signature: (Ljava/lang/String;)Lscala/xml/dtd/SystemID;
  Code:
   Stack=3, Locals=2, Args_size=2
	new	class scala/xml/dtd/SystemID
	dup
	aload_1
	invokespecial	Method scala/xml/dtd/SystemID."<init>":(Ljava/lang/String;)V
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/xml/dtd/SystemID$;
   0      9      1    systemId       Ljava/lang/String;


public java.lang.Object apply(java.lang.Object);
  Signature: (Ljava/lang/Object;)Ljava/lang/Object;
  Code:
   Stack=2, Locals=2, Args_size=2
	aload_0
	aload_1
	checkcast	class java/lang/String
	invokevirtual	Method apply:(Ljava/lang/String;)Lscala/xml/dtd/SystemID;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/xml/dtd/SystemID$;
   0      9      1    v1       Ljava/lang/Object;


private scala.xml.dtd.SystemID$();
  Signature: ()V
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokespecial	Method scala/runtime/AbstractFunction1."<init>":()V
	aload_0
	putstatic	Field MODULE$:Lscala/xml/dtd/SystemID$;
	return
  Labels:

}

