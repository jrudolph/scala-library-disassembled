Compiled from "Scanner.scala"
public class scala.xml.dtd.Scanner extends scala.xml.dtd.Tokens implements scala.xml.parsing.TokenTests,scala.ScalaObject
  SourceFile: "Scanner.scala"
  ScalaSig: length = 0x326
   05 00 FFFFFF81 05 06 08 01 02 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF80 00 09 02 07
   53 63 61 6E 6E 65 72 0A 02 03 04 01 03 64 74 64
   0A 02 05 06 01 03 78 6D 6C 0A 01 07 01 05 73 63
   61 6C 61 03 00 13 04 00 0A 0E 14 10 02 0B 0C 0D
   01 02 09 02 0D 02 02 06 54 6F 6B 65 6E 73 10 02
   0F 12 0D 01 10 0A 02 11 04 01 07 70 61 72 73 69
   6E 67 09 02 13 10 02 0A 54 6F 6B 65 6E 54 65 73
   74 73 10 02 15 16 0D 01 06 09 02 17 06 02 0B 53
   63 61 6C 61 4F 62 6A 65 63 74 08 05 19 00 FFFFFF84 00
   1A 01 06 3C 69 6E 69 74 3E 14 01 1B 10 02 0B 00
   08 07 1D 00 FFFFFFC2 FFFFFF80 FFFFFF84 02 1E 01 05 45 4E 44 43 48
   15 01 1F 0F 01 20 1C 01 00 08 06 22 00 FFFFFFA0 FFFFFF80 06
   1F 01 06 45 4E 44 43 48 20 08 07 24 00 FFFFFFC0 FFFFFF80 FFFFFF84
   00 25 01 05 74 6F 6B 65 6E 15 01 26 10 02 15 27
   09 02 28 06 02 03 49 6E 74 08 07 2A 00 FFFFFFC0 FFFFFF80 FFFFFF84
   00 2B 01 09 74 6F 6B 65 6E 5F 24 65 71 14 02 2C
   2F 10 02 15 2D 09 02 2E 06 02 04 55 6E 69 74 08
   07 30 29 FFFFFF81 FFFFFF80 FFFFFFC0 00 26 01 03 78 24 31 08 06 32
   00 FFFFFFA0 FFFFFFA0 04 26 01 06 74 6F 6B 65 6E 20 08 07 34
   00 FFFFFFC0 FFFFFF80 FFFFFF84 00 35 01 05 76 61 6C 75 65 15 01 36
   10 02 37 3A 0E 02 15 38 09 02 39 06 01 06 50 72
   65 64 65 66 09 02 3B 3C 02 06 53 74 72 69 6E 67
   0A 02 39 06 08 07 3E 00 FFFFFFC0 FFFFFF80 FFFFFF84 00 3F 01 09 76
   61 6C 75 65 5F 24 65 71 14 02 2C 40 08 07 30 3D
   FFFFFF81 FFFFFF80 FFFFFFC0 00 36 08 06 42 00 FFFFFFA0 FFFFFFA0 04 36 01 06 76
   61 6C 75 65 20 08 07 44 00 FFFFFFC0 FFFFFF80 FFFFFF84 04 45 01 02
   69 74 15 01 46 10 03 47 4F 52 0E 02 48 4D 0E 02
   49 4C 0D 01 4A 0A 02 4B 08 01 06 3C 72 6F 6F 74
   3E 09 01 07 09 02 4E 06 01 07 70 61 63 6B 61 67
   65 09 02 50 51 02 08 49 74 65 72 61 74 6F 72 0A
   02 4E 06 10 02 15 53 09 02 54 06 02 04 43 68 61
   72 08 07 56 00 FFFFFFC0 FFFFFF80 FFFFFF84 04 57 01 06 69 74 5F 24
   65 71 14 02 2C 58 08 07 30 55 FFFFFF81 FFFFFF80 FFFFFFC0 00 46 08
   06 5A 00 FFFFFFA0 FFFFFFA0 04 46 01 03 69 74 20 08 07 5C 00
   FFFFFFC0 FFFFFF80 FFFFFF84 04 5D 01 01 63 15 01 52 08 07 5F 00 FFFFFFC0
   FFFFFF80 FFFFFF84 04 60 01 05 63 5F 24 65 71 14 02 2C 61 08
   07 30 5E FFFFFF81 FFFFFF80 FFFFFFC0 00 52 08 06 63 00 FFFFFFA0 FFFFFFA0 04 52
   01 02 63 20 08 05 65 00 FFFFFF84 02 66 01 0B 69 6E 69
   74 53 63 61 6E 6E 65 72 14 02 2C 67 08 05 68 64
   FFFFFFC0 00 36 01 01 73 08 05 6A 00 FFFFFF84 02 6B 01 09 6E
   65 78 74 54 6F 6B 65 6E 15 01 2C 08 05 6D 00 FFFFFF84
   02 6E 01 0B 69 73 49 64 65 6E 74 43 68 61 72 15
   01 6F 10 02 15 70 09 02 71 06 02 07 42 6F 6F 6C
   65 61 6E 08 05 73 00 FFFFFF84 02 6B 01 04 6E 65 78 74
   08 05 75 00 FFFFFF84 02 76 01 03 61 63 63 14 02 2C 77
   08 05 78 74 FFFFFFC0 00 52 01 01 64 08 05 7A 00 FFFFFF84 02
   7B 01 04 61 63 63 53 14 02 2C 7C 08 05 7D 79 FFFFFFC0
   00 7E 01 02 64 73 10 03 47 7F 52 09 03 FFFFFF81 00 51
   02 03 53 65 71 08 06 FFFFFF81 02 00 FFFFFF84 02 25 01 09 72
   65 61 64 54 6F 6B 65 6E 08 06 FFFFFF81 04 00 FFFFFF84 02 25
   01 04 6E 61 6D 65 
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Scanner.scala;
const #3 = Asciz	c;
const #4 = Asciz	C;
const #5 = Asciz	it;
const #6 = Asciz	Lscala/collection/Iterator;;
const #7 = Asciz	Lscala/collection/Iterator<Ljava/lang/Character;>;;
const #8 = Asciz	Signature;
const #9 = Asciz	value;
const #10 = Asciz	Ljava/lang/String;;
const #11 = Asciz	token;
const #12 = Asciz	I;
const #13 = Asciz	ENDCH;
const #14 = Asciz	<init>;
const #15 = Asciz	()V;
const #16 = Asciz	Code;
const #17 = Asciz	LineNumberTable;
const #18 = Asciz	scala/xml/dtd/Tokens;
const #19 = class	#18;	//  scala/xml/dtd/Tokens
const #20 = NameAndType	#14:#15;//  "<init>":()V
const #21 = Method	#19.#20;	//  scala/xml/dtd/Tokens."<init>":()V
const #22 = Asciz	scala/xml/parsing/TokenTests$class;
const #23 = class	#22;	//  scala/xml/parsing/TokenTests$class
const #24 = Asciz	$init$;
const #25 = Asciz	(Lscala/xml/parsing/TokenTests;)V;
const #26 = NameAndType	#24:#25;//  $init$:(Lscala/xml/parsing/TokenTests;)V
const #27 = Method	#23.#26;	//  scala/xml/parsing/TokenTests$class.$init$:(Lscala/xml/parsing/TokenTests;)V
const #28 = int	10;
const #29 = Asciz	scala/xml/dtd/Scanner;
const #30 = class	#29;	//  scala/xml/dtd/Scanner
const #31 = NameAndType	#11:#12;//  token:I
const #32 = Field	#30.#31;	//  scala/xml/dtd/Scanner.token:I
const #33 = NameAndType	#5:#6;//  it:Lscala/collection/Iterator;
const #34 = Field	#30.#33;	//  scala/xml/dtd/Scanner.it:Lscala/collection/Iterator;
const #35 = int	122;
const #36 = NameAndType	#3:#4;//  c:C
const #37 = Field	#30.#36;	//  scala/xml/dtd/Scanner.c:C
const #38 = Asciz	name;
const #39 = Asciz	()I;
const #40 = Asciz	scala/collection/mutable/StringBuilder;
const #41 = class	#40;	//  scala/collection/mutable/StringBuilder
const #42 = Method	#41.#20;	//  scala/collection/mutable/StringBuilder."<init>":()V
const #43 = Asciz	()C;
const #44 = NameAndType	#3:#43;//  c:()C
const #45 = Method	#30.#44;	//  scala/xml/dtd/Scanner.c:()C
const #46 = Asciz	append;
const #47 = Asciz	(C)Lscala/collection/mutable/StringBuilder;;
const #48 = NameAndType	#46:#47;//  append:(C)Lscala/collection/mutable/StringBuilder;
const #49 = Method	#41.#48;	//  scala/collection/mutable/StringBuilder.append:(C)Lscala/collection/mutable/StringBuilder;
const #50 = Asciz	next;
const #51 = NameAndType	#50:#15;//  next:()V
const #52 = Method	#30.#51;	//  scala/xml/dtd/Scanner.next:()V
const #53 = Asciz	scala/xml/parsing/TokenTests;
const #54 = class	#53;	//  scala/xml/parsing/TokenTests
const #55 = Asciz	isNameChar;
const #56 = Asciz	(C)Z;
const #57 = NameAndType	#55:#56;//  isNameChar:(C)Z
const #58 = InterfaceMethod	#54.#57;	//  scala/xml/parsing/TokenTests.isNameChar:(C)Z
const #59 = Asciz	toString;
const #60 = Asciz	()Ljava/lang/String;;
const #61 = NameAndType	#59:#60;//  toString:()Ljava/lang/String;
const #62 = Method	#41.#61;	//  scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
const #63 = Asciz	value_$eq;
const #64 = Asciz	(Ljava/lang/String;)V;
const #65 = NameAndType	#63:#64;//  value_$eq:(Ljava/lang/String;)V
const #66 = Method	#30.#65;	//  scala/xml/dtd/Scanner.value_$eq:(Ljava/lang/String;)V
const #67 = Asciz	this;
const #68 = Asciz	Lscala/xml/dtd/Scanner;;
const #69 = Asciz	sb;
const #70 = Asciz	Lscala/collection/mutable/StringBuilder;;
const #71 = Asciz	LocalVariableTable;
const #72 = Asciz	readToken;
const #73 = Asciz	isSpace;
const #74 = NameAndType	#73:#56;//  isSpace:(C)Z
const #75 = InterfaceMethod	#54.#74;	//  scala/xml/parsing/TokenTests.isSpace:(C)Z
const #76 = Asciz	()Lscala/collection/Iterator;;
const #77 = NameAndType	#5:#76;//  it:()Lscala/collection/Iterator;
const #78 = Method	#30.#77;	//  scala/xml/dtd/Scanner.it:()Lscala/collection/Iterator;
const #79 = Asciz	scala/collection/Iterator;
const #80 = class	#79;	//  scala/collection/Iterator
const #81 = Asciz	()Ljava/lang/Object;;
const #82 = NameAndType	#50:#81;//  next:()Ljava/lang/Object;
const #83 = InterfaceMethod	#80.#82;	//  scala/collection/Iterator.next:()Ljava/lang/Object;
const #84 = Asciz	scala/runtime/BoxesRunTime;
const #85 = class	#84;	//  scala/runtime/BoxesRunTime
const #86 = Asciz	unboxToChar;
const #87 = Asciz	(Ljava/lang/Object;)C;
const #88 = NameAndType	#86:#87;//  unboxToChar:(Ljava/lang/Object;)C
const #89 = Method	#85.#88;	//  scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
const #90 = Asciz	c_$eq;
const #91 = Asciz	(C)V;
const #92 = NameAndType	#90:#91;//  c_$eq:(C)V
const #93 = Method	#30.#92;	//  scala/xml/dtd/Scanner.c_$eq:(C)V
const #94 = int	13;
const #95 = Asciz	isNameStart;
const #96 = NameAndType	#95:#56;//  isNameStart:(C)Z
const #97 = InterfaceMethod	#54.#96;	//  scala/xml/parsing/TokenTests.isNameStart:(C)Z
const #98 = NameAndType	#38:#39;//  name:()I
const #99 = Method	#30.#98;	//  scala/xml/dtd/Scanner.name:()I
const #100 = Asciz	scala/Predef$;
const #101 = class	#100;	//  scala/Predef$
const #102 = Asciz	MODULE$;
const #103 = Asciz	Lscala/Predef$;;
const #104 = NameAndType	#102:#103;//  MODULE$:Lscala/Predef$;
const #105 = Field	#101.#104;	//  scala/Predef$.MODULE$:Lscala/Predef$;
const #106 = Method	#41.#20;	//  scala/collection/mutable/StringBuilder."<init>":()V
const #107 = Asciz	unexpected character:;
const #108 = String	#107;	//  unexpected character:
const #109 = Asciz	(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;;
const #110 = NameAndType	#46:#109;//  append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
const #111 = Method	#41.#110;	//  scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
const #112 = Asciz	boxToCharacter;
const #113 = Asciz	(C)Ljava/lang/Character;;
const #114 = NameAndType	#112:#113;//  boxToCharacter:(C)Ljava/lang/Character;
const #115 = Method	#85.#114;	//  scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
const #116 = Method	#41.#61;	//  scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
const #117 = Asciz	error;
const #118 = Asciz	(Ljava/lang/String;)Lscala/runtime/Nothing$;;
const #119 = NameAndType	#117:#118;//  error:(Ljava/lang/String;)Lscala/runtime/Nothing$;
const #120 = Method	#101.#119;	//  scala/Predef$.error:(Ljava/lang/String;)Lscala/runtime/Nothing$;
const #121 = int	9;
const #122 = int	8;
const #123 = int	7;
const #124 = int	6;
const #125 = Asciz	PCDATA;
const #126 = String	#125;	//  PCDATA
const #127 = Asciz	stringWrapper;
const #128 = Asciz	(Ljava/lang/String;)Lscala/runtime/RichString;;
const #129 = NameAndType	#127:#128;//  stringWrapper:(Ljava/lang/String;)Lscala/runtime/RichString;
const #130 = Method	#101.#129;	//  scala/Predef$.stringWrapper:(Ljava/lang/String;)Lscala/runtime/RichString;
const #131 = Asciz	accS;
const #132 = Asciz	(Lscala/collection/Sequence;)V;
const #133 = NameAndType	#131:#132;//  accS:(Lscala/collection/Sequence;)V
const #134 = Method	#30.#133;	//  scala/xml/dtd/Scanner.accS:(Lscala/collection/Sequence;)V
const #135 = Asciz	temp1;
const #136 = Asciz	scala/collection/generic/IterableTemplate;
const #137 = class	#136;	//  scala/collection/generic/IterableTemplate
const #138 = Asciz	iterator;
const #139 = NameAndType	#138:#76;//  iterator:()Lscala/collection/Iterator;
const #140 = InterfaceMethod	#137.#139;	//  scala/collection/generic/IterableTemplate.iterator:()Lscala/collection/Iterator;
const #141 = Asciz	hasNext;
const #142 = Asciz	()Z;
const #143 = NameAndType	#141:#142;//  hasNext:()Z
const #144 = InterfaceMethod	#80.#143;	//  scala/collection/Iterator.hasNext:()Z
const #145 = Asciz	acc;
const #146 = NameAndType	#145:#91;//  acc:(C)V
const #147 = Method	#30.#146;	//  scala/xml/dtd/Scanner.acc:(C)V
const #148 = Asciz	ds;
const #149 = Asciz	Lscala/collection/Sequence;;
const #150 = Asciz	jt;
const #151 = Asciz	(Lscala/collection/Sequence<Ljava/lang/Character;>;)V;
const #152 = Asciz	expected ';
const #153 = String	#152;	//  expected '
const #154 = Asciz	' found ';
const #155 = String	#154;	//  ' found '
const #156 = Asciz	' !;
const #157 = String	#156;	//  ' !
const #158 = Asciz	d;
const #159 = Asciz	isIdentChar;
const #160 = int	97;
const #161 = int	65;
const #162 = int	90;
const #163 = Asciz	nextToken;
const #164 = NameAndType	#11:#39;//  token:()I
const #165 = Method	#30.#164;	//  scala/xml/dtd/Scanner.token:()I
const #166 = NameAndType	#72:#39;//  readToken:()I
const #167 = Method	#30.#166;	//  scala/xml/dtd/Scanner.readToken:()I
const #168 = Asciz	token_$eq;
const #169 = Asciz	(I)V;
const #170 = NameAndType	#168:#169;//  token_$eq:(I)V
const #171 = Method	#30.#170;	//  scala/xml/dtd/Scanner.token_$eq:(I)V
const #172 = Asciz	initScanner;
const #173 = Asciz	;
const #174 = String	#173;	//  
const #175 = Asciz	scala/collection/generic/VectorTemplate;
const #176 = class	#175;	//  scala/collection/generic/VectorTemplate
const #177 = InterfaceMethod	#176.#139;	//  scala/collection/generic/VectorTemplate.iterator:()Lscala/collection/Iterator;
const #178 = Asciz	it_$eq;
const #179 = Asciz	(Lscala/collection/Iterator;)V;
const #180 = NameAndType	#178:#179;//  it_$eq:(Lscala/collection/Iterator;)V
const #181 = Method	#30.#180;	//  scala/xml/dtd/Scanner.it_$eq:(Lscala/collection/Iterator;)V
const #182 = int	11;
const #183 = NameAndType	#163:#15;//  nextToken:()V
const #184 = Method	#30.#183;	//  scala/xml/dtd/Scanner.nextToken:()V
const #185 = Asciz	s;
const #186 = Asciz	(Lscala/collection/Iterator<Ljava/lang/Character;>;)V;
const #187 = Asciz	()Lscala/collection/Iterator<Ljava/lang/Character;>;;
const #188 = NameAndType	#9:#10;//  value:Ljava/lang/String;
const #189 = Field	#30.#188;	//  scala/xml/dtd/Scanner.value:Ljava/lang/String;
const #190 = Asciz	checkPubID;
const #191 = Asciz	(Ljava/lang/String;)Z;
const #192 = Asciz	(Lscala/xml/parsing/TokenTests;Ljava/lang/String;)Z;
const #193 = NameAndType	#190:#192;//  checkPubID:(Lscala/xml/parsing/TokenTests;Ljava/lang/String;)Z
const #194 = Method	#23.#193;	//  scala/xml/parsing/TokenTests$class.checkPubID:(Lscala/xml/parsing/TokenTests;Ljava/lang/String;)Z
const #195 = Asciz	checkSysID;
const #196 = NameAndType	#195:#192;//  checkSysID:(Lscala/xml/parsing/TokenTests;Ljava/lang/String;)Z
const #197 = Method	#23.#196;	//  scala/xml/parsing/TokenTests$class.checkSysID:(Lscala/xml/parsing/TokenTests;Ljava/lang/String;)Z
const #198 = Asciz	isValidIANAEncoding;
const #199 = Asciz	(Lscala/collection/Sequence;)Z;
const #200 = Asciz	(Lscala/xml/parsing/TokenTests;Lscala/collection/Sequence;)Z;
const #201 = NameAndType	#198:#200;//  isValidIANAEncoding:(Lscala/xml/parsing/TokenTests;Lscala/collection/Sequence;)Z
const #202 = Method	#23.#201;	//  scala/xml/parsing/TokenTests$class.isValidIANAEncoding:(Lscala/xml/parsing/TokenTests;Lscala/collection/Sequence;)Z
const #203 = Asciz	ianaEncoding;
const #204 = Asciz	isPubIDChar;
const #205 = Asciz	(Lscala/xml/parsing/TokenTests;C)Z;
const #206 = NameAndType	#204:#205;//  isPubIDChar:(Lscala/xml/parsing/TokenTests;C)Z
const #207 = Method	#23.#206;	//  scala/xml/parsing/TokenTests$class.isPubIDChar:(Lscala/xml/parsing/TokenTests;C)Z
const #208 = Asciz	ch;
const #209 = Asciz	isName;
const #210 = NameAndType	#209:#192;//  isName:(Lscala/xml/parsing/TokenTests;Ljava/lang/String;)Z
const #211 = Method	#23.#210;	//  scala/xml/parsing/TokenTests$class.isName:(Lscala/xml/parsing/TokenTests;Ljava/lang/String;)Z
const #212 = NameAndType	#95:#205;//  isNameStart:(Lscala/xml/parsing/TokenTests;C)Z
const #213 = Method	#23.#212;	//  scala/xml/parsing/TokenTests$class.isNameStart:(Lscala/xml/parsing/TokenTests;C)Z
const #214 = NameAndType	#55:#205;//  isNameChar:(Lscala/xml/parsing/TokenTests;C)Z
const #215 = Method	#23.#214;	//  scala/xml/parsing/TokenTests$class.isNameChar:(Lscala/xml/parsing/TokenTests;C)Z
const #216 = NameAndType	#73:#200;//  isSpace:(Lscala/xml/parsing/TokenTests;Lscala/collection/Sequence;)Z
const #217 = Method	#23.#216;	//  scala/xml/parsing/TokenTests$class.isSpace:(Lscala/xml/parsing/TokenTests;Lscala/collection/Sequence;)Z
const #218 = Asciz	cs;
const #219 = NameAndType	#73:#205;//  isSpace:(Lscala/xml/parsing/TokenTests;C)Z
const #220 = Method	#23.#219;	//  scala/xml/parsing/TokenTests$class.isSpace:(Lscala/xml/parsing/TokenTests;C)Z
const #221 = Asciz	ScalaSig;
const #222 = Asciz	scala/ScalaObject;
const #223 = class	#222;	//  scala/ScalaObject

{
public scala.xml.dtd.Scanner();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	invokespecial	#21; //Method scala/xml/dtd/Tokens."<init>":()V
   4:	aload_0
   5:	invokestatic	#27; //Method scala/xml/parsing/TokenTests$class.$init$:(Lscala/xml/parsing/TokenTests;)V
   8:	aload_0
   9:	ldc	#28; //int 10
   11:	putfield	#32; //Field token:I
   14:	aload_0
   15:	aconst_null
   16:	pop
   17:	aconst_null
   18:	putfield	#34; //Field it:Lscala/collection/Iterator;
   21:	aload_0
   22:	ldc	#35; //int 122
   24:	putfield	#37; //Field c:C
   27:	return
  LineNumberTable: 
   line 19: 0
   line 23: 8
   line 26: 14
   line 27: 21


public final int name();
  Code:
   Stack=2, Locals=2, Args_size=1
   0:	new	#41; //class scala/collection/mutable/StringBuilder
   3:	dup
   4:	invokespecial	#42; //Method scala/collection/mutable/StringBuilder."<init>":()V
   7:	astore_1
   8:	aload_1
   9:	aload_0
   10:	invokespecial	#45; //Method c:()C
   13:	invokevirtual	#49; //Method scala/collection/mutable/StringBuilder.append:(C)Lscala/collection/mutable/StringBuilder;
   16:	pop
   17:	aload_0
   18:	invokevirtual	#52; //Method next:()V
   21:	aload_0
   22:	aload_0
   23:	invokespecial	#45; //Method c:()C
   26:	invokeinterface	#58,  2; //InterfaceMethod scala/xml/parsing/TokenTests.isNameChar:(C)Z
   31:	ifne	8
   34:	aload_0
   35:	aload_1
   36:	invokevirtual	#62; //Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
   39:	invokevirtual	#66; //Method value_$eq:(Ljava/lang/String;)V
   42:	iconst_1
   43:	ireturn
  LineNumberTable: 
   line 78: 0
   line 79: 8
   line 80: 34
   line 81: 42

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      44      0    this       Lscala/xml/dtd/Scanner;
   8      35      1    sb       Lscala/collection/mutable/StringBuilder;


public final int readToken();
  Code:
   Stack=3, Locals=2, Args_size=1
   0:	aload_0
   1:	aload_0
   2:	invokespecial	#45; //Method c:()C
   5:	invokeinterface	#75,  2; //InterfaceMethod scala/xml/parsing/TokenTests.isSpace:(C)Z
   10:	ifeq	50
   13:	aload_0
   14:	aload_0
   15:	invokespecial	#45; //Method c:()C
   18:	invokeinterface	#75,  2; //InterfaceMethod scala/xml/parsing/TokenTests.isSpace:(C)Z
   23:	ifeq	45
   26:	aload_0
   27:	aload_0
   28:	invokespecial	#78; //Method it:()Lscala/collection/Iterator;
   31:	invokeinterface	#83,  1; //InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
   36:	invokestatic	#89; //Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
   39:	invokespecial	#93; //Method c_$eq:(C)V
   42:	goto	13
   45:	ldc	#94; //int 13
   47:	goto	274
   50:	aload_0
   51:	invokespecial	#45; //Method c:()C
   54:	istore_1
   55:	iload_1
   56:	lookupswitch{ //9
		0: 272;
		35: 252;
		40: 244;
		41: 236;
		42: 227;
		43: 218;
		44: 210;
		63: 201;
		124: 192;
		default: 140 }
   140:	aload_0
   141:	aload_0
   142:	invokespecial	#45; //Method c:()C
   145:	invokeinterface	#97,  2; //InterfaceMethod scala/xml/parsing/TokenTests.isNameStart:(C)Z
   150:	ifeq	160
   153:	aload_0
   154:	invokevirtual	#99; //Method name:()I
   157:	goto	274
   160:	getstatic	#105; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   163:	new	#41; //class scala/collection/mutable/StringBuilder
   166:	dup
   167:	invokespecial	#106; //Method scala/collection/mutable/StringBuilder."<init>":()V
   170:	ldc	#108; //String unexpected character:
   172:	invokevirtual	#111; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   175:	aload_0
   176:	invokespecial	#45; //Method c:()C
   179:	invokestatic	#115; //Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
   182:	invokevirtual	#111; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   185:	invokevirtual	#116; //Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
   188:	invokevirtual	#120; //Method scala/Predef$.error:(Ljava/lang/String;)Lscala/runtime/Nothing$;
   191:	athrow
   192:	aload_0
   193:	invokevirtual	#52; //Method next:()V
   196:	ldc	#121; //int 9
   198:	goto	274
   201:	aload_0
   202:	invokevirtual	#52; //Method next:()V
   205:	ldc	#122; //int 8
   207:	goto	274
   210:	aload_0
   211:	invokevirtual	#52; //Method next:()V
   214:	iconst_5
   215:	goto	274
   218:	aload_0
   219:	invokevirtual	#52; //Method next:()V
   222:	ldc	#123; //int 7
   224:	goto	274
   227:	aload_0
   228:	invokevirtual	#52; //Method next:()V
   231:	ldc	#124; //int 6
   233:	goto	274
   236:	aload_0
   237:	invokevirtual	#52; //Method next:()V
   240:	iconst_4
   241:	goto	274
   244:	aload_0
   245:	invokevirtual	#52; //Method next:()V
   248:	iconst_3
   249:	goto	274
   252:	aload_0
   253:	invokevirtual	#52; //Method next:()V
   256:	aload_0
   257:	getstatic	#105; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   260:	ldc	#126; //String PCDATA
   262:	invokevirtual	#130; //Method scala/Predef$.stringWrapper:(Ljava/lang/String;)Lscala/runtime/RichString;
   265:	invokevirtual	#134; //Method accS:(Lscala/collection/Sequence;)V
   268:	iconst_0
   269:	goto	274
   272:	ldc	#28; //int 10
   274:	ireturn
  LineNumberTable: 
   line 59: 0
   line 60: 13
   line 61: 45
   line 62: 50
   line 73: 140
   line 74: 160
   line 69: 192
   line 62: 198
   line 68: 201
   line 62: 207
   line 65: 210
   line 62: 215
   line 67: 218
   line 62: 224
   line 66: 227
   line 62: 233
   line 64: 236
   line 62: 241
   line 63: 244
   line 62: 249
   line 70: 252
   line 62: 269
   line 71: 272
   line 59: 274

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      275      0    this       Lscala/xml/dtd/Scanner;
   55      219      1    temp1       C


public final void accS(scala.collection.Sequence);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	aload_1
   1:	invokeinterface	#140,  1; //InterfaceMethod scala/collection/generic/IterableTemplate.iterator:()Lscala/collection/Iterator;
   6:	astore_2
   7:	aload_2
   8:	invokeinterface	#144,  1; //InterfaceMethod scala/collection/Iterator.hasNext:()Z
   13:	ifeq	32
   16:	aload_0
   17:	aload_2
   18:	invokeinterface	#83,  1; //InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
   23:	invokestatic	#89; //Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
   26:	invokevirtual	#147; //Method acc:(C)V
   29:	goto	7
   32:	return
  LineNumberTable: 
   line 54: 0
   line 55: 7
   line 53: 32

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      33      0    this       Lscala/xml/dtd/Scanner;
   0      33      1    ds       Lscala/collection/Sequence;
   7      26      2    jt       Lscala/collection/Iterator;

  Signature: length = 0x2
   00 FFFFFF97 

public final void acc(char);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	aload_0
   1:	invokespecial	#45; //Method c:()C
   4:	iload_1
   5:	if_icmpne	13
   8:	aload_0
   9:	invokevirtual	#52; //Method next:()V
   12:	return
   13:	getstatic	#105; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   16:	new	#41; //class scala/collection/mutable/StringBuilder
   19:	dup
   20:	invokespecial	#106; //Method scala/collection/mutable/StringBuilder."<init>":()V
   23:	ldc	#153; //String expected '
   25:	invokevirtual	#111; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   28:	iload_1
   29:	invokestatic	#115; //Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
   32:	invokevirtual	#111; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   35:	ldc	#155; //String ' found '
   37:	invokevirtual	#111; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   40:	aload_0
   41:	invokespecial	#45; //Method c:()C
   44:	invokestatic	#115; //Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
   47:	invokevirtual	#111; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   50:	ldc	#157; //String ' !
   52:	invokevirtual	#111; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   55:	invokevirtual	#116; //Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
   58:	invokevirtual	#120; //Method scala/Predef$.error:(Ljava/lang/String;)Lscala/runtime/Nothing$;
   61:	athrow
  LineNumberTable: 
   line 50: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      62      0    this       Lscala/xml/dtd/Scanner;
   0      62      1    d       C


public final void next();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	invokespecial	#78; //Method it:()Lscala/collection/Iterator;
   4:	invokeinterface	#144,  1; //InterfaceMethod scala/collection/Iterator.hasNext:()Z
   9:	ifeq	31
   12:	aload_0
   13:	aload_0
   14:	invokespecial	#78; //Method it:()Lscala/collection/Iterator;
   17:	invokeinterface	#83,  1; //InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
   22:	invokestatic	#89; //Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
   25:	invokespecial	#93; //Method c_$eq:(C)V
   28:	goto	36
   31:	aload_0
   32:	iconst_0
   33:	invokespecial	#93; //Method c_$eq:(C)V
   36:	return
  LineNumberTable: 
   line 47: 0


public final boolean isIdentChar();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	ldc	#160; //int 97
   2:	aload_0
   3:	invokespecial	#45; //Method c:()C
   6:	if_icmpgt	18
   9:	aload_0
   10:	invokespecial	#45; //Method c:()C
   13:	ldc	#35; //int 122
   15:	if_icmple	36
   18:	ldc	#161; //int 65
   20:	aload_0
   21:	invokespecial	#45; //Method c:()C
   24:	if_icmpgt	40
   27:	aload_0
   28:	invokespecial	#45; //Method c:()C
   31:	ldc	#162; //int 90
   33:	if_icmpgt	40
   36:	iconst_1
   37:	goto	41
   40:	iconst_0
   41:	ireturn
  LineNumberTable: 
   line 44: 0
   line 45: 18


public final void nextToken();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#165; //Method token:()I
   4:	ldc	#28; //int 10
   6:	if_icmpeq	17
   9:	aload_0
   10:	aload_0
   11:	invokevirtual	#167; //Method readToken:()I
   14:	invokevirtual	#171; //Method token_$eq:(I)V
   17:	return
  LineNumberTable: 
   line 40: 0


public final void initScanner(java.lang.String);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	aload_0
   1:	ldc	#174; //String 
   3:	invokevirtual	#66; //Method value_$eq:(Ljava/lang/String;)V
   6:	aload_0
   7:	getstatic	#105; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   10:	aload_1
   11:	invokevirtual	#130; //Method scala/Predef$.stringWrapper:(Ljava/lang/String;)Lscala/runtime/RichString;
   14:	invokeinterface	#177,  1; //InterfaceMethod scala/collection/generic/VectorTemplate.iterator:()Lscala/collection/Iterator;
   19:	invokespecial	#181; //Method it_$eq:(Lscala/collection/Iterator;)V
   22:	aload_0
   23:	ldc	#182; //int 11
   25:	invokevirtual	#171; //Method token_$eq:(I)V
   28:	aload_0
   29:	invokevirtual	#52; //Method next:()V
   32:	aload_0
   33:	invokevirtual	#184; //Method nextToken:()V
   36:	return
  LineNumberTable: 
   line 31: 0
   line 32: 6
   line 33: 22
   line 34: 28
   line 35: 32

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      37      0    this       Lscala/xml/dtd/Scanner;
   0      37      1    s       Ljava/lang/String;


public void value_$eq(java.lang.String);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	putfield	#189; //Field value:Ljava/lang/String;
   5:	return
  LineNumberTable: 
   line 24: 0


public java.lang.String value();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#189; //Field value:Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 24: 0


public void token_$eq(int);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	putfield	#32; //Field token:I
   5:	return
  LineNumberTable: 
   line 23: 0


public int token();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#32; //Field token:I
   4:	ireturn
  LineNumberTable: 
   line 23: 0


public final char ENDCH();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	iconst_0
   1:	ireturn
  LineNumberTable: 
   line 21: 0


public boolean checkPubID(java.lang.String);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#194; //Method scala/xml/parsing/TokenTests$class.checkPubID:(Lscala/xml/parsing/TokenTests;Ljava/lang/String;)Z
   5:	ireturn
  LineNumberTable: 
   line 19: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/dtd/Scanner;
   0      6      1    s       Ljava/lang/String;


public boolean checkSysID(java.lang.String);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#197; //Method scala/xml/parsing/TokenTests$class.checkSysID:(Lscala/xml/parsing/TokenTests;Ljava/lang/String;)Z
   5:	ireturn
  LineNumberTable: 
   line 19: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/dtd/Scanner;
   0      6      1    s       Ljava/lang/String;


public boolean isValidIANAEncoding(scala.collection.Sequence);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#202; //Method scala/xml/parsing/TokenTests$class.isValidIANAEncoding:(Lscala/xml/parsing/TokenTests;Lscala/collection/Sequence;)Z
   5:	ireturn
  LineNumberTable: 
   line 19: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/dtd/Scanner;
   0      6      1    ianaEncoding       Lscala/collection/Sequence;


public boolean isPubIDChar(char);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	invokestatic	#207; //Method scala/xml/parsing/TokenTests$class.isPubIDChar:(Lscala/xml/parsing/TokenTests;C)Z
   5:	ireturn
  LineNumberTable: 
   line 19: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/dtd/Scanner;
   0      6      1    ch       C


public boolean isName(java.lang.String);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#211; //Method scala/xml/parsing/TokenTests$class.isName:(Lscala/xml/parsing/TokenTests;Ljava/lang/String;)Z
   5:	ireturn
  LineNumberTable: 
   line 19: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/dtd/Scanner;
   0      6      1    s       Ljava/lang/String;


public boolean isNameStart(char);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	invokestatic	#213; //Method scala/xml/parsing/TokenTests$class.isNameStart:(Lscala/xml/parsing/TokenTests;C)Z
   5:	ireturn
  LineNumberTable: 
   line 19: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/dtd/Scanner;
   0      6      1    ch       C


public boolean isNameChar(char);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	invokestatic	#215; //Method scala/xml/parsing/TokenTests$class.isNameChar:(Lscala/xml/parsing/TokenTests;C)Z
   5:	ireturn
  LineNumberTable: 
   line 19: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/dtd/Scanner;
   0      6      1    ch       C


public final boolean isSpace(scala.collection.Sequence);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#217; //Method scala/xml/parsing/TokenTests$class.isSpace:(Lscala/xml/parsing/TokenTests;Lscala/collection/Sequence;)Z
   5:	ireturn
  LineNumberTable: 
   line 19: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/dtd/Scanner;
   0      6      1    cs       Lscala/collection/Sequence;


public final boolean isSpace(char);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	invokestatic	#220; //Method scala/xml/parsing/TokenTests$class.isSpace:(Lscala/xml/parsing/TokenTests;C)Z
   5:	ireturn
  LineNumberTable: 
   line 19: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/dtd/Scanner;
   0      6      1    ch       C


}

