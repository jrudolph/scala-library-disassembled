Compiled from "ContentModel.scala"
public abstract class scala.xml.dtd.DFAContentModel extends scala.xml.dtd.ContentModel implements scala.ScalaObject
  SourceFile: "ContentModel.scala"
  ScalaSig: length = 0x159
   05 00 39 06 08 01 02 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF81 10 09 02 0F 44
   46 41 43 6F 6E 74 65 6E 74 4D 6F 64 65 6C 0A 02
   03 04 01 03 64 74 64 0A 02 05 06 01 03 78 6D 6C
   0A 01 07 01 05 73 63 61 6C 61 03 00 13 03 00 0A
   0E 10 02 0B 0C 0D 01 02 09 02 0D 02 02 0C 43 6F
   6E 74 65 6E 74 4D 6F 64 65 6C 10 02 0F 10 0D 01
   06 09 02 11 06 02 0B 53 63 61 6C 61 4F 62 6A 65
   63 74 08 05 13 00 FFFFFF84 00 14 01 06 3C 69 6E 69 74
   3E 14 01 15 10 02 0B 00 08 05 17 00 FFFFFF86 00 18 01
   01 72 15 01 19 10 02 1A 1D 0E 02 0B 1B 09 02 1C
   02 01 0C 43 6F 6E 74 65 6E 74 4D 6F 64 65 6C 09
   02 1E 1F 02 06 52 65 67 45 78 70 09 02 20 21 02
   04 42 61 73 65 0A 02 22 23 01 06 72 65 67 65 78
   70 0A 02 24 06 01 04 75 74 69 6C 08 08 26 00 FFFFFF88
   FFFFFFC2 FFFFFF80 FFFFFF84 00 27 01 03 64 66 61 15 01 28 10 03 29
   2C 2E 0D 01 2A 0A 02 2B 23 01 08 61 75 74 6F 6D
   61 74 61 09 02 2D 2A 02 0C 44 65 74 57 6F 72 64
   41 75 74 6F 6D 10 02 1A 2F 09 02 30 31 02 08 45
   6C 65 6D 4E 61 6D 65 0A 02 1C 02 08 08 33 00 FFFFFF88
   FFFFFF80 FFFFFFA0 FFFFFFA0 04 28 01 04 64 66 61 20 29 03 00 35 37
   09 02 36 02 02 08 45 4C 45 4D 45 4E 54 53 09 02
   38 02 02 05 4D 49 58 45 44 
  InnerClass: 
   public abstract RegExp=class scala/util/regexp/Base$RegExp of class scala/util/regexp/Base
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	ContentModel.scala;
Asciz	bitmap$0;
Asciz	I;
Asciz	dfa;
Asciz	Lscala/util/automata/DetWordAutom;;
Asciz	Lscala/util/automata/DetWordAutom<Lscala/xml/dtd/ContentModel$ElemName;>;;
Asciz	Signature;
Asciz	r;
Asciz	()Lscala/util/regexp/Base$RegExp;;
Asciz	()Lscala/util/automata/DetWordAutom;;
Asciz	Code;
Asciz	LineNumberTable;
Asciz	scala/xml/dtd/DFAContentModel;
class	scala/xml/dtd/DFAContentModel
NameAndType	bitmap$0:I
Field	scala/xml/dtd/DFAContentModel.bitmap$0:I
Asciz	scala/xml/dtd/ContentModel$Translator$;
class	scala/xml/dtd/ContentModel$Translator$
Asciz	MODULE$;
Asciz	Lscala/xml/dtd/ContentModel$Translator$;;
NameAndType	MODULE$:Lscala/xml/dtd/ContentModel$Translator$;
Field	scala/xml/dtd/ContentModel$Translator$.MODULE$:Lscala/xml/dtd/ContentModel$Translator$;
NameAndType	r:()Lscala/util/regexp/Base$RegExp;
Method	scala/xml/dtd/DFAContentModel.r:()Lscala/util/regexp/Base$RegExp;
Asciz	automatonFrom;
Asciz	(Lscala/util/regexp/Base$RegExp;I)Lscala/util/automata/NondetWordAutom;;
NameAndType	automatonFrom:(Lscala/util/regexp/Base$RegExp;I)Lscala/util/automata/NondetWordAutom;
Method	scala/xml/dtd/ContentModel$Translator$.automatonFrom:(Lscala/util/regexp/Base$RegExp;I)Lscala/util/automata/NondetWordAutom;
Asciz	scala/util/automata/SubsetConstruction;
class	scala/util/automata/SubsetConstruction
Asciz	<init>;
Asciz	(Lscala/util/automata/NondetWordAutom;)V;
NameAndType	"<init>":(Lscala/util/automata/NondetWordAutom;)V
Method	scala/util/automata/SubsetConstruction."<init>":(Lscala/util/automata/NondetWordAutom;)V
Asciz	determinize;
NameAndType	determinize:()Lscala/util/automata/DetWordAutom;
Method	scala/util/automata/SubsetConstruction.determinize:()Lscala/util/automata/DetWordAutom;
NameAndType	dfa:Lscala/util/automata/DetWordAutom;
Field	scala/xml/dtd/DFAContentModel.dfa:Lscala/util/automata/DetWordAutom;
Asciz	this;
Asciz	Lscala/xml/dtd/DFAContentModel;;
Asciz	nfa;
Asciz	Lscala/util/automata/NondetWordAutom;;
Asciz	LocalVariableTable;
Asciz	()Lscala/util/automata/DetWordAutom<Lscala/xml/dtd/ContentModel$ElemName;>;;
Asciz	()V;
Asciz	scala/xml/dtd/ContentModel;
class	scala/xml/dtd/ContentModel
NameAndType	"<init>":()V
Method	scala/xml/dtd/ContentModel."<init>":()V
Asciz	ScalaSig;
Asciz	InnerClasses;
Asciz	scala/util/regexp/Base$RegExp;
class	scala/util/regexp/Base$RegExp
Asciz	scala/util/regexp/Base;
class	scala/util/regexp/Base
Asciz	RegExp;
Asciz	scala/ScalaObject;
class	scala/ScalaObject

{
public volatile int bitmap$0;
  Signature: I

private scala.util.automata.DetWordAutom dfa;
  Signature: Lscala/util/automata/DetWordAutom;
  Signature: length = 0x2
   00 07 

public abstract scala.util.regexp.Base$RegExp r();
  Signature: ()Lscala/util/regexp/Base$RegExp;

public scala.util.automata.DetWordAutom dfa();
  Signature: ()Lscala/util/automata/DetWordAutom;
  Code:
   Stack=4, Locals=2, Args_size=1
	aload_0
	getfield	Field bitmap$0:I
	iconst_1
	iand
	iconst_0
	if_icmpne	l1 // aload_0
	aload_0
	dup
	pop
	monitorenter
	aload_0
	getfield	Field bitmap$0:I
	iconst_1
	iand
	iconst_0
	if_icmpne	l2 // aload_0
	aload_0
	getstatic	Field scala/xml/dtd/ContentModel$Translator$.MODULE$:Lscala/xml/dtd/ContentModel$Translator$;
	aload_0
	invokevirtual	Method r:()Lscala/util/regexp/Base$RegExp;
	iconst_1
	invokevirtual	Method scala/xml/dtd/ContentModel$Translator$.automatonFrom:(Lscala/util/regexp/Base$RegExp;I)Lscala/util/automata/NondetWordAutom;
	astore_1
	new	class scala/util/automata/SubsetConstruction
	dup
	aload_1
	invokespecial	Method scala/util/automata/SubsetConstruction."<init>":(Lscala/util/automata/NondetWordAutom;)V
	invokevirtual	Method scala/util/automata/SubsetConstruction.determinize:()Lscala/util/automata/DetWordAutom;
	putfield	Field dfa:Lscala/util/automata/DetWordAutom;
	aload_0
	aload_0
	getfield	Field bitmap$0:I
	iconst_1
	ior
	putfield	Field bitmap$0:I
l2	aload_0
	monitorexit
l1	aload_0
	getfield	Field dfa:Lscala/util/automata/DetWordAutom;
	areturn
	aload_0
	monitorexit
	athrow
  Labels:
   	l2 = 61 // aload_0
   	l1 = 63 // aload_0
  Exception table:
   from   to  target type
    14    63    68   any
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      71      0    this       Lscala/xml/dtd/DFAContentModel;
   37      11      1    nfa       Lscala/util/automata/NondetWordAutom;

  Signature: length = 0x2
   00 2E 

public scala.xml.dtd.DFAContentModel();
  Signature: ()V
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokespecial	Method scala/xml/dtd/ContentModel."<init>":()V
	return
  Labels:

}

