Compiled from "ContentModel.scala"
public abstract class scala.xml.dtd.DFAContentModel extends scala.xml.dtd.ContentModel implements scala.ScalaObject
  SourceFile: "ContentModel.scala"
  ScalaSig: length = 0x159
   05 00 39 06 08 01 02 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF81 10 09 02 0F 44
   46 41 43 6F 6E 74 65 6E 74 4D 6F 64 65 6C 0A 02
   03 04 01 03 64 74 64 0A 02 05 06 01 03 78 6D 6C
   0A 01 07 01 05 73 63 61 6C 61 03 00 13 03 00 0A
   0E 10 02 0B 0C 0D 01 02 09 02 0D 02 02 0C 43 6F
   6E 74 65 6E 74 4D 6F 64 65 6C 10 02 0F 10 0D 01
   06 09 02 11 06 02 0B 53 63 61 6C 61 4F 62 6A 65
   63 74 08 05 13 00 FFFFFF84 00 14 01 06 3C 69 6E 69 74
   3E 14 01 15 10 02 0B 00 08 05 17 00 FFFFFF86 00 18 01
   01 72 15 01 19 10 02 1A 1D 0E 02 0B 1B 09 02 1C
   02 01 0C 43 6F 6E 74 65 6E 74 4D 6F 64 65 6C 09
   02 1E 1F 02 06 52 65 67 45 78 70 09 02 20 21 02
   04 42 61 73 65 0A 02 22 23 01 06 72 65 67 65 78
   70 0A 02 24 06 01 04 75 74 69 6C 08 08 26 00 FFFFFF88
   FFFFFFC2 FFFFFF80 FFFFFF84 00 27 01 03 64 66 61 15 01 28 10 03 29
   2C 2E 0D 01 2A 0A 02 2B 23 01 08 61 75 74 6F 6D
   61 74 61 09 02 2D 2A 02 0C 44 65 74 57 6F 72 64
   41 75 74 6F 6D 10 02 1A 2F 09 02 30 31 02 08 45
   6C 65 6D 4E 61 6D 65 0A 02 1C 02 08 08 33 00 FFFFFF88
   FFFFFF80 FFFFFFA0 FFFFFFA0 04 28 01 04 64 66 61 20 29 03 00 35 37
   09 02 36 02 02 05 4D 49 58 45 44 09 02 38 02 02
   08 45 4C 45 4D 45 4E 54 53 
  InnerClass: 
   public abstract #58= #55 of #57; //RegExp=class scala/util/regexp/Base$RegExp of class scala/util/regexp/Base
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	ContentModel.scala;
const #3 = Asciz	bitmap$0;
const #4 = Asciz	I;
const #5 = Asciz	dfa;
const #6 = Asciz	Lscala/util/automata/DetWordAutom;;
const #7 = Asciz	Lscala/util/automata/DetWordAutom<Lscala/xml/dtd/ContentModel$ElemName;>;;
const #8 = Asciz	Signature;
const #9 = Asciz	<init>;
const #10 = Asciz	()V;
const #11 = Asciz	Code;
const #12 = Asciz	LineNumberTable;
const #13 = Asciz	scala/xml/dtd/ContentModel;
const #14 = class	#13;	//  scala/xml/dtd/ContentModel
const #15 = NameAndType	#9:#10;//  "<init>":()V
const #16 = Method	#14.#15;	//  scala/xml/dtd/ContentModel."<init>":()V
const #17 = Asciz	()Lscala/util/automata/DetWordAutom;;
const #18 = Asciz	scala/xml/dtd/DFAContentModel;
const #19 = class	#18;	//  scala/xml/dtd/DFAContentModel
const #20 = NameAndType	#3:#4;//  bitmap$0:I
const #21 = Field	#19.#20;	//  scala/xml/dtd/DFAContentModel.bitmap$0:I
const #22 = Asciz	scala/xml/dtd/ContentModel$Translator$;
const #23 = class	#22;	//  scala/xml/dtd/ContentModel$Translator$
const #24 = Asciz	MODULE$;
const #25 = Asciz	Lscala/xml/dtd/ContentModel$Translator$;;
const #26 = NameAndType	#24:#25;//  MODULE$:Lscala/xml/dtd/ContentModel$Translator$;
const #27 = Field	#23.#26;	//  scala/xml/dtd/ContentModel$Translator$.MODULE$:Lscala/xml/dtd/ContentModel$Translator$;
const #28 = Asciz	r;
const #29 = Asciz	()Lscala/util/regexp/Base$RegExp;;
const #30 = NameAndType	#28:#29;//  r:()Lscala/util/regexp/Base$RegExp;
const #31 = Method	#19.#30;	//  scala/xml/dtd/DFAContentModel.r:()Lscala/util/regexp/Base$RegExp;
const #32 = Asciz	automatonFrom;
const #33 = Asciz	(Lscala/util/regexp/Base$RegExp;I)Lscala/util/automata/NondetWordAutom;;
const #34 = NameAndType	#32:#33;//  automatonFrom:(Lscala/util/regexp/Base$RegExp;I)Lscala/util/automata/NondetWordAutom;
const #35 = Method	#23.#34;	//  scala/xml/dtd/ContentModel$Translator$.automatonFrom:(Lscala/util/regexp/Base$RegExp;I)Lscala/util/automata/NondetWordAutom;
const #36 = Asciz	scala/util/automata/SubsetConstruction;
const #37 = class	#36;	//  scala/util/automata/SubsetConstruction
const #38 = Asciz	(Lscala/util/automata/NondetWordAutom;)V;
const #39 = NameAndType	#9:#38;//  "<init>":(Lscala/util/automata/NondetWordAutom;)V
const #40 = Method	#37.#39;	//  scala/util/automata/SubsetConstruction."<init>":(Lscala/util/automata/NondetWordAutom;)V
const #41 = Asciz	determinize;
const #42 = NameAndType	#41:#17;//  determinize:()Lscala/util/automata/DetWordAutom;
const #43 = Method	#37.#42;	//  scala/util/automata/SubsetConstruction.determinize:()Lscala/util/automata/DetWordAutom;
const #44 = NameAndType	#5:#6;//  dfa:Lscala/util/automata/DetWordAutom;
const #45 = Field	#19.#44;	//  scala/xml/dtd/DFAContentModel.dfa:Lscala/util/automata/DetWordAutom;
const #46 = Asciz	this;
const #47 = Asciz	Lscala/xml/dtd/DFAContentModel;;
const #48 = Asciz	nfa;
const #49 = Asciz	Lscala/util/automata/NondetWordAutom;;
const #50 = Asciz	LocalVariableTable;
const #51 = Asciz	()Lscala/util/automata/DetWordAutom<Lscala/xml/dtd/ContentModel$ElemName;>;;
const #52 = Asciz	ScalaSig;
const #53 = Asciz	InnerClasses;
const #54 = Asciz	scala/util/regexp/Base$RegExp;
const #55 = class	#54;	//  scala/util/regexp/Base$RegExp
const #56 = Asciz	scala/util/regexp/Base;
const #57 = class	#56;	//  scala/util/regexp/Base
const #58 = Asciz	RegExp;
const #59 = Asciz	scala/ScalaObject;
const #60 = class	#59;	//  scala/ScalaObject

{
public volatile int bitmap$0;

public scala.xml.dtd.DFAContentModel();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokespecial	#16; //Method scala/xml/dtd/ContentModel."<init>":()V
   4:	return
  LineNumberTable: 
   line 100: 0


public scala.util.automata.DetWordAutom dfa();
  Code:
   Stack=4, Locals=2, Args_size=1
   0:	aload_0
   1:	getfield	#21; //Field bitmap$0:I
   4:	iconst_1
   5:	iand
   6:	iconst_0
   7:	if_icmpne	63
   10:	aload_0
   11:	dup
   12:	pop
   13:	monitorenter
   14:	aload_0
   15:	getfield	#21; //Field bitmap$0:I
   18:	iconst_1
   19:	iand
   20:	iconst_0
   21:	if_icmpne	61
   24:	aload_0
   25:	getstatic	#27; //Field scala/xml/dtd/ContentModel$Translator$.MODULE$:Lscala/xml/dtd/ContentModel$Translator$;
   28:	aload_0
   29:	invokevirtual	#31; //Method r:()Lscala/util/regexp/Base$RegExp;
   32:	iconst_1
   33:	invokevirtual	#35; //Method scala/xml/dtd/ContentModel$Translator$.automatonFrom:(Lscala/util/regexp/Base$RegExp;I)Lscala/util/automata/NondetWordAutom;
   36:	astore_1
   37:	new	#37; //class scala/util/automata/SubsetConstruction
   40:	dup
   41:	aload_1
   42:	invokespecial	#40; //Method scala/util/automata/SubsetConstruction."<init>":(Lscala/util/automata/NondetWordAutom;)V
   45:	invokevirtual	#43; //Method scala/util/automata/SubsetConstruction.determinize:()Lscala/util/automata/DetWordAutom;
   48:	putfield	#45; //Field dfa:Lscala/util/automata/DetWordAutom;
   51:	aload_0
   52:	aload_0
   53:	getfield	#21; //Field bitmap$0:I
   56:	iconst_1
   57:	ior
   58:	putfield	#21; //Field bitmap$0:I
   61:	aload_0
   62:	monitorexit
   63:	aload_0
   64:	getfield	#45; //Field dfa:Lscala/util/automata/DetWordAutom;
   67:	areturn
   68:	aload_0
   69:	monitorexit
   70:	athrow
  Exception table:
   from   to  target type
    14    63    68   any
  LineNumberTable: 
   line 104: 0
   line 275: 6
   line 104: 10
   line 275: 20
   line 104: 24
   line 105: 25
   line 106: 37
   line 104: 48

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      71      0    this       Lscala/xml/dtd/DFAContentModel;
   37      11      1    nfa       Lscala/util/automata/NondetWordAutom;

  Signature: length = 0x2
   00 33 

public abstract scala.util.regexp.Base$RegExp r();

}

