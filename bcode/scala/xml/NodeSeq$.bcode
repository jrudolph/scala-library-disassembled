Compiled from "NodeSeq.scala"
public final class scala.xml.NodeSeq$ extends java.lang.Object implements scala.ScalaObject
  SourceFile: "NodeSeq.scala"
  Scala: length = 0x
   
  InnerClass: 
   public final #71= #62 of #70; //$anon$1=class scala/xml/NodeSeq$$anon$1 of class scala/xml/NodeSeq
   public final #72= #58 of #70; //$anon$2=class scala/xml/NodeSeq$$anon$2 of class scala/xml/NodeSeq
   public final #75= #74 of #70; //$anonfun$text$1=class scala/xml/NodeSeq$$anonfun$text$1 of class scala/xml/NodeSeq
   public final #78= #77 of #70; //$anonfun$filt$1$1=class scala/xml/NodeSeq$$anonfun$filt$1$1 of class scala/xml/NodeSeq
   public final #81= #80 of #70; //$anonfun$$bslash$1=class scala/xml/NodeSeq$$anonfun$$bslash$1 of class scala/xml/NodeSeq
   public final #84= #83 of #70; //$anonfun$$bslash$2=class scala/xml/NodeSeq$$anonfun$$bslash$2 of class scala/xml/NodeSeq
   public final #87= #86 of #70; //$anonfun$makeSeq$1$1=class scala/xml/NodeSeq$$anonfun$makeSeq$1$1 of class scala/xml/NodeSeq
   public final #88= #46 of #70; //$anonfun$newBuilder$1=class scala/xml/NodeSeq$$anonfun$newBuilder$1 of class scala/xml/NodeSeq
   public final #91= #90 of #70; //$anonfun$$bslash$bslash$2=class scala/xml/NodeSeq$$anonfun$$bslash$bslash$2 of class scala/xml/NodeSeq
   public final #94= #93 of #70; //$anonfun$$bslash$bslash$4=class scala/xml/NodeSeq$$anonfun$$bslash$bslash$4 of class scala/xml/NodeSeq
   public final #97= #96 of #70; //$anonfun$$bslash$bslash$3=class scala/xml/NodeSeq$$anonfun$$bslash$bslash$3 of class scala/xml/NodeSeq
   public final #100= #99 of #70; //$anonfun$$bslash$bslash$1=class scala/xml/NodeSeq$$anonfun$$bslash$bslash$1 of class scala/xml/NodeSeq
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	NodeSeq.scala;
const #3 = Asciz	Scala;
const #4 = Asciz	MODULE$;
const #5 = Asciz	Lscala/xml/NodeSeq$;;
const #6 = Asciz	<clinit>;
const #7 = Asciz	()V;
const #8 = Asciz	Code;
const #9 = Asciz	scala/xml/NodeSeq$;
const #10 = class	#9;	//  scala/xml/NodeSeq$
const #11 = Asciz	<init>;
const #12 = NameAndType	#11:#7;//  "<init>":()V
const #13 = Method	#10.#12;	//  scala/xml/NodeSeq$."<init>":()V
const #14 = Asciz	Empty;
const #15 = Asciz	Lscala/xml/NodeSeq;;
const #16 = Asciz	LineNumberTable;
const #17 = Asciz	java/lang/Object;
const #18 = class	#17;	//  java/lang/Object
const #19 = Method	#18.#12;	//  java/lang/Object."<init>":()V
const #20 = NameAndType	#4:#5;//  MODULE$:Lscala/xml/NodeSeq$;
const #21 = Field	#10.#20;	//  scala/xml/NodeSeq$.MODULE$:Lscala/xml/NodeSeq$;
const #22 = Asciz	scala/collection/immutable/Nil$;
const #23 = class	#22;	//  scala/collection/immutable/Nil$
const #24 = Asciz	Lscala/collection/immutable/Nil$;;
const #25 = NameAndType	#4:#24;//  MODULE$:Lscala/collection/immutable/Nil$;
const #26 = Field	#23.#25;	//  scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
const #27 = Asciz	fromSeq;
const #28 = Asciz	(Lscala/collection/Sequence;)Lscala/xml/NodeSeq;;
const #29 = NameAndType	#27:#28;//  fromSeq:(Lscala/collection/Sequence;)Lscala/xml/NodeSeq;
const #30 = Method	#10.#29;	//  scala/xml/NodeSeq$.fromSeq:(Lscala/collection/Sequence;)Lscala/xml/NodeSeq;
const #31 = NameAndType	#14:#15;//  Empty:Lscala/xml/NodeSeq;
const #32 = Field	#10.#31;	//  scala/xml/NodeSeq$.Empty:Lscala/xml/NodeSeq;
const #33 = Asciz	seqToNodeSeq;
const #34 = Asciz	this;
const #35 = Asciz	s;
const #36 = Asciz	Lscala/collection/Sequence;;
const #37 = Asciz	LocalVariableTable;
const #38 = Asciz	(Lscala/collection/Sequence<Lscala/xml/Node;>;)Lscala/xml/NodeSeq;;
const #39 = Asciz	Signature;
const #40 = Asciz	newBuilder;
const #41 = Asciz	()Lscala/collection/generic/Builder;;
const #42 = Asciz	scala/collection/mutable/ListBuffer;
const #43 = class	#42;	//  scala/collection/mutable/ListBuffer
const #44 = Method	#43.#12;	//  scala/collection/mutable/ListBuffer."<init>":()V
const #45 = Asciz	scala/xml/NodeSeq$$anonfun$newBuilder$1;
const #46 = class	#45;	//  scala/xml/NodeSeq$$anonfun$newBuilder$1
const #47 = Method	#46.#12;	//  scala/xml/NodeSeq$$anonfun$newBuilder$1."<init>":()V
const #48 = Asciz	scala/collection/generic/Builder;
const #49 = class	#48;	//  scala/collection/generic/Builder
const #50 = Asciz	mapResult;
const #51 = Asciz	(Lscala/Function1;)Lscala/collection/generic/Builder;;
const #52 = NameAndType	#50:#51;//  mapResult:(Lscala/Function1;)Lscala/collection/generic/Builder;
const #53 = InterfaceMethod	#49.#52;	//  scala/collection/generic/Builder.mapResult:(Lscala/Function1;)Lscala/collection/generic/Builder;
const #54 = Asciz	()Lscala/collection/generic/Builder<Lscala/xml/Node;Lscala/xml/NodeSeq;>;;
const #55 = Asciz	builderFactory;
const #56 = Asciz	()Lscala/collection/generic/BuilderFactory;;
const #57 = Asciz	scala/xml/NodeSeq$$anon$2;
const #58 = class	#57;	//  scala/xml/NodeSeq$$anon$2
const #59 = Method	#58.#12;	//  scala/xml/NodeSeq$$anon$2."<init>":()V
const #60 = Asciz	()Lscala/collection/generic/BuilderFactory<Lscala/xml/Node;Lscala/xml/NodeSeq;Lscala/xml/NodeSeq;>;;
const #61 = Asciz	scala/xml/NodeSeq$$anon$1;
const #62 = class	#61;	//  scala/xml/NodeSeq$$anon$1
const #63 = Asciz	(Lscala/collection/Sequence;)V;
const #64 = NameAndType	#11:#63;//  "<init>":(Lscala/collection/Sequence;)V
const #65 = Method	#62.#64;	//  scala/xml/NodeSeq$$anon$1."<init>":(Lscala/collection/Sequence;)V
const #66 = Asciz	s$1;
const #67 = Asciz	()Lscala/xml/NodeSeq;;
const #68 = Asciz	InnerClasses;
const #69 = Asciz	scala/xml/NodeSeq;
const #70 = class	#69;	//  scala/xml/NodeSeq
const #71 = Asciz	$anon$1;
const #72 = Asciz	$anon$2;
const #73 = Asciz	scala/xml/NodeSeq$$anonfun$text$1;
const #74 = class	#73;	//  scala/xml/NodeSeq$$anonfun$text$1
const #75 = Asciz	$anonfun$text$1;
const #76 = Asciz	scala/xml/NodeSeq$$anonfun$filt$1$1;
const #77 = class	#76;	//  scala/xml/NodeSeq$$anonfun$filt$1$1
const #78 = Asciz	$anonfun$filt$1$1;
const #79 = Asciz	scala/xml/NodeSeq$$anonfun$$bslash$1;
const #80 = class	#79;	//  scala/xml/NodeSeq$$anonfun$$bslash$1
const #81 = Asciz	$anonfun$$bslash$1;
const #82 = Asciz	scala/xml/NodeSeq$$anonfun$$bslash$2;
const #83 = class	#82;	//  scala/xml/NodeSeq$$anonfun$$bslash$2
const #84 = Asciz	$anonfun$$bslash$2;
const #85 = Asciz	scala/xml/NodeSeq$$anonfun$makeSeq$1$1;
const #86 = class	#85;	//  scala/xml/NodeSeq$$anonfun$makeSeq$1$1
const #87 = Asciz	$anonfun$makeSeq$1$1;
const #88 = Asciz	$anonfun$newBuilder$1;
const #89 = Asciz	scala/xml/NodeSeq$$anonfun$$bslash$bslash$2;
const #90 = class	#89;	//  scala/xml/NodeSeq$$anonfun$$bslash$bslash$2
const #91 = Asciz	$anonfun$$bslash$bslash$2;
const #92 = Asciz	scala/xml/NodeSeq$$anonfun$$bslash$bslash$4;
const #93 = class	#92;	//  scala/xml/NodeSeq$$anonfun$$bslash$bslash$4
const #94 = Asciz	$anonfun$$bslash$bslash$4;
const #95 = Asciz	scala/xml/NodeSeq$$anonfun$$bslash$bslash$3;
const #96 = class	#95;	//  scala/xml/NodeSeq$$anonfun$$bslash$bslash$3
const #97 = Asciz	$anonfun$$bslash$bslash$3;
const #98 = Asciz	scala/xml/NodeSeq$$anonfun$$bslash$bslash$1;
const #99 = class	#98;	//  scala/xml/NodeSeq$$anonfun$$bslash$bslash$1
const #100 = Asciz	$anonfun$$bslash$bslash$1;
const #101 = Asciz	scala/ScalaObject;
const #102 = class	#101;	//  scala/ScalaObject

{
public static final scala.xml.NodeSeq$ MODULE$;

public static {};
  Code:
   Stack=1, Locals=0, Args_size=0
   0:	new	#10; //class scala/xml/NodeSeq$
   3:	invokespecial	#13; //Method "<init>":()V
   6:	return

public scala.xml.NodeSeq seqToNodeSeq(scala.collection.Sequence);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokevirtual	#30; //Method fromSeq:(Lscala/collection/Sequence;)Lscala/xml/NodeSeq;
   5:	areturn
  LineNumberTable: 
   line 31: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/NodeSeq$;
   0      6      1    s       Lscala/collection/Sequence;

  Signature: length = 0x2
   00 26 

public scala.collection.generic.Builder newBuilder();
  Code:
   Stack=3, Locals=1, Args_size=1
   0:	new	#43; //class scala/collection/mutable/ListBuffer
   3:	dup
   4:	invokespecial	#44; //Method scala/collection/mutable/ListBuffer."<init>":()V
   7:	new	#46; //class scala/xml/NodeSeq$$anonfun$newBuilder$1
   10:	dup
   11:	invokespecial	#47; //Method scala/xml/NodeSeq$$anonfun$newBuilder$1."<init>":()V
   14:	invokeinterface	#53,  2; //InterfaceMethod scala/collection/generic/Builder.mapResult:(Lscala/Function1;)Lscala/collection/generic/Builder;
   19:	areturn
  LineNumberTable: 
   line 30: 0

  Signature: length = 0x2
   00 36 

public scala.collection.generic.BuilderFactory builderFactory();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	new	#58; //class scala/xml/NodeSeq$$anon$2
   3:	dup
   4:	invokespecial	#59; //Method scala/xml/NodeSeq$$anon$2."<init>":()V
   7:	areturn
  LineNumberTable: 
   line 29: 0

  Signature: length = 0x2
   00 3C 

public scala.xml.NodeSeq fromSeq(scala.collection.Sequence);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	new	#62; //class scala/xml/NodeSeq$$anon$1
   3:	dup
   4:	aload_1
   5:	invokespecial	#65; //Method scala/xml/NodeSeq$$anon$1."<init>":(Lscala/collection/Sequence;)V
   8:	areturn
  LineNumberTable: 
   line 25: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/xml/NodeSeq$;
   0      9      1    s$1       Lscala/collection/Sequence;

  Signature: length = 0x2
   00 26 

public final scala.xml.NodeSeq Empty();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#32; //Field Empty:Lscala/xml/NodeSeq;
   4:	areturn
  LineNumberTable: 
   line 24: 0


}

