Compiled from "Node.scala"
public abstract class scala.xml.Node extends scala.xml.NodeSeq implements scala.ScalaObject
  SourceFile: "Node.scala"
  ScalaSig: length = 0x4BC
   05 00 FFFFFF81 31 07 05 01 02 FFFFFF88 02 07 01 04 4E 6F 64
   65 0A 02 03 04 01 03 78 6D 6C 0A 01 05 01 05 73
   63 61 6C 61 03 00 10 02 08 09 0D 01 02 06 08 0A
   02 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF88 02 0B 02 04 4E 6F 64 65 13 03 09
   0C 14 10 02 0D 12 0D 01 0E 0A 02 0F 10 01 04 6C
   61 6E 67 0A 01 11 01 04 6A 61 76 61 09 02 13 0E
   02 06 4F 62 6A 65 63 74 10 02 15 16 0D 01 04 09
   02 17 04 02 0B 53 63 61 6C 61 4F 62 6A 65 63 74
   08 05 19 09 FFFFFF84 00 1A 01 06 3C 69 6E 69 74 3E 14
   01 07 08 05 1C 09 FFFFFF84 02 1D 01 0C 4E 6F 41 74 74
   72 69 62 75 74 65 73 15 01 1E 10 02 08 1F 09 02
   20 02 02 08 4D 65 74 61 44 61 74 61 08 07 22 09
   FFFFFFC2 FFFFFF80 FFFFFF84 00 23 01 0E 45 6D 70 74 79 4E 61 6D 65
   73 70 61 63 65 15 01 24 10 02 0D 25 09 02 26 0E
   02 06 53 74 72 69 6E 67 08 06 28 09 FFFFFFA0 FFFFFF80 04 24
   01 0F 45 6D 70 74 79 4E 61 6D 65 73 70 61 63 65
   20 08 05 2A 09 FFFFFF84 00 2B 01 0A 75 6E 61 70 70 6C
   79 53 65 71 14 03 2C FFFFFF81 2F 10 03 15 2D 2F 09 02
   2E 04 02 04 53 6F 6D 65 10 05 15 30 32 1E 38 09
   02 31 04 02 06 54 75 70 6C 65 33 10 02 33 36 0E
   02 15 34 09 02 35 04 01 06 50 72 65 64 65 66 09
   02 26 37 0A 02 35 04 10 03 39 3C 3E 0D 01 3A 0A
   02 3B 04 01 0A 63 6F 6C 6C 65 63 74 69 6F 6E 09
   02 3D 3A 02 03 53 65 71 10 02 08 3F 06 08 0A 02
   FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF81 00 40 13 03 3F 41 14 10 02 08 42 09
   02 43 02 02 07 4E 6F 64 65 53 65 71 08 05 19 3F
   FFFFFF84 00 45 14 01 3E 08 05 47 3F FFFFFF84 00 48 01 06 70
   72 65 66 69 78 15 01 32 08 05 4A 3F FFFFFF86 00 48 01
   05 6C 61 62 65 6C 08 05 4C 3F FFFFFF84 00 4D 01 06 69
   73 41 74 6F 6D 15 01 4E 10 02 15 4F 09 02 50 04
   02 07 42 6F 6F 6C 65 61 6E 08 05 52 3F FFFFFF84 00 4D
   01 13 64 6F 43 6F 6C 6C 65 63 74 4E 61 6D 65 73
   70 61 63 65 73 08 05 54 3F FFFFFF84 00 4D 01 0B 64 6F
   54 72 61 6E 73 66 6F 72 6D 08 05 56 3F FFFFFF84 00 57
   01 05 73 63 6F 70 65 15 01 58 10 02 08 59 09 02
   5A 02 02 10 4E 61 6D 65 73 70 61 63 65 42 69 6E
   64 69 6E 67 08 05 5C 3F FFFFFF84 00 48 01 09 6E 61 6D
   65 73 70 61 63 65 08 05 5E 3F FFFFFF84 00 5F 01 0C 67
   65 74 4E 61 6D 65 73 70 61 63 65 14 02 32 60 08
   05 61 5D FFFFFFC0 00 32 01 03 70 72 65 08 05 63 3F FFFFFF84
   02 64 01 09 61 74 74 72 69 62 75 74 65 14 02 65
   68 10 03 15 66 38 09 02 67 04 02 06 4F 70 74 69
   6F 6E 08 05 69 62 FFFFFFC0 00 32 01 03 6B 65 79 08 05
   63 3F FFFFFF84 02 6B 14 03 65 6C 6E 08 05 6D 6A FFFFFFC0 00
   32 01 03 75 72 69 08 05 69 6A FFFFFFC0 00 32 08 05 70
   3F FFFFFF84 00 1D 01 0A 61 74 74 72 69 62 75 74 65 73
   08 05 72 3F FFFFFF86 00 73 01 05 63 68 69 6C 64 15 01
   38 08 05 75 3F FFFFFF84 00 76 01 0A 64 65 73 63 65 6E
   64 61 6E 74 15 01 77 10 03 78 7B 3E 0D 01 79 0A
   02 7A 3A 01 09 69 6D 6D 75 74 61 62 6C 65 09 02
   7C 79 02 04 4C 69 73 74 08 05 7E 3F FFFFFF84 00 76 01
   12 64 65 73 63 65 6E 64 61 6E 74 5F 6F 72 5F 73
   65 6C 66 08 07 FFFFFF81 00 3F FFFFFF84 20 FFFFFF81 01 01 06 65 71
   75 61 6C 73 14 03 4E FFFFFF81 02 08 07 FFFFFF81 03 7F FFFFFFC0 00
   FFFFFF81 04 01 01 78 10 03 15 FFFFFF81 05 09 03 FFFFFF81 06 04 02
   03 41 6E 79 08 07 FFFFFF81 08 3F FFFFFF84 04 FFFFFF81 09 01 0D 65
   71 75 61 6C 43 68 69 6C 64 72 65 6E 14 03 4E FFFFFF81
   0A 08 07 FFFFFF81 0B FFFFFF81 07 FFFFFFC0 00 3E 01 04 74 68 61 74
   08 07 FFFFFF81 0D 3F FFFFFF84 20 FFFFFF81 0E 01 08 68 61 73 68 43
   6F 64 65 14 02 FFFFFF81 0F 10 03 15 FFFFFF81 10 09 03 FFFFFF81 11
   04 02 03 49 6E 74 08 06 FFFFFF81 13 3F FFFFFF84 00 73 01 06
   74 68 65 53 65 71 08 07 FFFFFF81 15 3F FFFFFF84 00 FFFFFF81 16 01
   0B 62 75 69 6C 64 53 74 72 69 6E 67 14 03 32 FFFFFF81
   17 08 07 FFFFFF81 18 FFFFFF81 14 FFFFFFC0 00 4E 01 0D 73 74 72 69
   70 43 6F 6D 6D 65 6E 74 73 08 07 FFFFFF81 1A 3F FFFFFF84 20
   FFFFFF81 1B 01 08 74 6F 53 74 72 69 6E 67 14 01 32 08
   07 FFFFFF81 1D 3F FFFFFF84 00 FFFFFF81 1E 01 0C 6E 61 6D 65 54 6F
   53 74 72 69 6E 67 14 04 FFFFFF81 1F FFFFFF81 25 10 04 FFFFFF81 20
   FFFFFF81 23 0D 02 FFFFFF81 21 0A 03 FFFFFF81 22 3A 01 07 6D 75 74
   61 62 6C 65 09 04 FFFFFF81 24 FFFFFF81 21 02 0D 53 74 72 69
   6E 67 42 75 69 6C 64 65 72 08 08 FFFFFF81 26 FFFFFF81 1C FFFFFFC0
   00 FFFFFF81 1F 01 02 73 62 08 07 FFFFFF81 28 3F FFFFFF84 00 FFFFFF81 29
   01 07 78 6D 6C 54 79 70 65 14 02 FFFFFF81 2A 10 03 08
   FFFFFF81 2B 09 03 FFFFFF81 2C 02 02 0A 54 79 70 65 53 79 6D
   62 6F 6C 08 06 FFFFFF81 2E 3F FFFFFF84 20 48 01 04 74 65 78
   74 08 06 FFFFFF81 30 29 FFFFFFC0 00 3E 01 01 6E 
  InnerClass: 
   public final #257= #202 of #59; //$anonfun$descendant$1=class scala/xml/Node$$anonfun$descendant$1 of class scala/xml/Node
   public final #258= #34 of #59; //$anonfun$noEmpties$1$1=class scala/xml/Node$$anonfun$noEmpties$1$1 of class scala/xml/Node
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Node.scala;
const #3 = Asciz	unapplySeq;
const #4 = Asciz	(Lscala/xml/Node;)Lscala/Some;;
const #5 = Asciz	Code;
const #6 = Asciz	scala/xml/Node$;
const #7 = class	#6;	//  scala/xml/Node$
const #8 = Asciz	MODULE$;
const #9 = Asciz	Lscala/xml/Node$;;
const #10 = NameAndType	#8:#9;//  MODULE$:Lscala/xml/Node$;
const #11 = Field	#7.#10;	//  scala/xml/Node$.MODULE$:Lscala/xml/Node$;
const #12 = NameAndType	#3:#4;//  unapplySeq:(Lscala/xml/Node;)Lscala/Some;
const #13 = Method	#7.#12;	//  scala/xml/Node$.unapplySeq:(Lscala/xml/Node;)Lscala/Some;
const #14 = Asciz	(Lscala/xml/Node;)Lscala/Some<Lscala/Tuple3<Ljava/lang/String;Lscala/xml/MetaData;Lscala/collection/Seq<Lscala/xml/Node;>;>;>;;
const #15 = Asciz	Signature;
const #16 = Asciz	EmptyNamespace;
const #17 = Asciz	()Ljava/lang/String;;
const #18 = NameAndType	#16:#17;//  EmptyNamespace:()Ljava/lang/String;
const #19 = Method	#7.#18;	//  scala/xml/Node$.EmptyNamespace:()Ljava/lang/String;
const #20 = Asciz	NoAttributes;
const #21 = Asciz	()Lscala/xml/MetaData;;
const #22 = NameAndType	#20:#21;//  NoAttributes:()Lscala/xml/MetaData;
const #23 = Method	#7.#22;	//  scala/xml/Node$.NoAttributes:()Lscala/xml/MetaData;
const #24 = Asciz	<init>;
const #25 = Asciz	()V;
const #26 = Asciz	LineNumberTable;
const #27 = Asciz	scala/xml/NodeSeq;
const #28 = class	#27;	//  scala/xml/NodeSeq
const #29 = NameAndType	#24:#25;//  "<init>":()V
const #30 = Method	#28.#29;	//  scala/xml/NodeSeq."<init>":()V
const #31 = Asciz	noEmpties$1;
const #32 = Asciz	(Lscala/collection/Seq;)Lscala/collection/Seq;;
const #33 = Asciz	scala/xml/Node$$anonfun$noEmpties$1$1;
const #34 = class	#33;	//  scala/xml/Node$$anonfun$noEmpties$1$1
const #35 = Asciz	(Lscala/xml/Node;)V;
const #36 = NameAndType	#24:#35;//  "<init>":(Lscala/xml/Node;)V
const #37 = Method	#34.#36;	//  scala/xml/Node$$anonfun$noEmpties$1$1."<init>":(Lscala/xml/Node;)V
const #38 = Asciz	scala/collection/TraversableLike;
const #39 = class	#38;	//  scala/collection/TraversableLike
const #40 = Asciz	filter;
const #41 = Asciz	(Lscala/Function1;)Ljava/lang/Object;;
const #42 = NameAndType	#40:#41;//  filter:(Lscala/Function1;)Ljava/lang/Object;
const #43 = InterfaceMethod	#39.#42;	//  scala/collection/TraversableLike.filter:(Lscala/Function1;)Ljava/lang/Object;
const #44 = Asciz	scala/collection/Seq;
const #45 = class	#44;	//  scala/collection/Seq
const #46 = Asciz	this;
const #47 = Asciz	Lscala/xml/Node;;
const #48 = Asciz	xs;
const #49 = Asciz	Lscala/collection/Seq;;
const #50 = Asciz	LocalVariableTable;
const #51 = Asciz	text;
const #52 = NameAndType	#51:#17;//  text:()Ljava/lang/String;
const #53 = Method	#28.#52;	//  scala/xml/NodeSeq.text:()Ljava/lang/String;
const #54 = Asciz	xmlType;
const #55 = Asciz	()Lscala/xml/TypeSymbol;;
const #56 = Asciz	nameToString;
const #57 = Asciz	(Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;;
const #58 = Asciz	scala/xml/Node;
const #59 = class	#58;	//  scala/xml/Node
const #60 = Asciz	prefix;
const #61 = NameAndType	#60:#17;//  prefix:()Ljava/lang/String;
const #62 = Method	#59.#61;	//  scala/xml/Node.prefix:()Ljava/lang/String;
const #63 = Asciz	scala/runtime/BoxedUnit;
const #64 = class	#63;	//  scala/runtime/BoxedUnit
const #65 = Asciz	UNIT;
const #66 = Asciz	Lscala/runtime/BoxedUnit;;
const #67 = NameAndType	#65:#66;//  UNIT:Lscala/runtime/BoxedUnit;
const #68 = Field	#64.#67;	//  scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
const #69 = Asciz	scala/collection/mutable/StringBuilder;
const #70 = class	#69;	//  scala/collection/mutable/StringBuilder
const #71 = Asciz	append;
const #72 = Asciz	(Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;;
const #73 = NameAndType	#71:#72;//  append:(Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
const #74 = Method	#70.#73;	//  scala/collection/mutable/StringBuilder.append:(Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
const #75 = int	58;
const #76 = Asciz	(C)Lscala/collection/mutable/StringBuilder;;
const #77 = NameAndType	#71:#76;//  append:(C)Lscala/collection/mutable/StringBuilder;
const #78 = Method	#70.#77;	//  scala/collection/mutable/StringBuilder.append:(C)Lscala/collection/mutable/StringBuilder;
const #79 = Asciz	label;
const #80 = NameAndType	#79:#17;//  label:()Ljava/lang/String;
const #81 = Method	#59.#80;	//  scala/xml/Node.label:()Ljava/lang/String;
const #82 = Asciz	sb;
const #83 = Asciz	Lscala/collection/mutable/StringBuilder;;
const #84 = Asciz	toString;
const #85 = Asciz	buildString;
const #86 = Asciz	(Z)Ljava/lang/String;;
const #87 = NameAndType	#85:#86;//  buildString:(Z)Ljava/lang/String;
const #88 = Method	#59.#87;	//  scala/xml/Node.buildString:(Z)Ljava/lang/String;
const #89 = Asciz	scala/xml/Utility$;
const #90 = class	#89;	//  scala/xml/Utility$
const #91 = Asciz	Lscala/xml/Utility$;;
const #92 = NameAndType	#8:#91;//  MODULE$:Lscala/xml/Utility$;
const #93 = Field	#90.#92;	//  scala/xml/Utility$.MODULE$:Lscala/xml/Utility$;
const #94 = Asciz	toXML$default$2;
const #95 = Asciz	()Lscala/xml/NamespaceBinding;;
const #96 = NameAndType	#94:#95;//  toXML$default$2:()Lscala/xml/NamespaceBinding;
const #97 = Method	#90.#96;	//  scala/xml/Utility$.toXML$default$2:()Lscala/xml/NamespaceBinding;
const #98 = Asciz	toXML$default$3;
const #99 = Asciz	()Lscala/collection/mutable/StringBuilder;;
const #100 = NameAndType	#98:#99;//  toXML$default$3:()Lscala/collection/mutable/StringBuilder;
const #101 = Method	#90.#100;	//  scala/xml/Utility$.toXML$default$3:()Lscala/collection/mutable/StringBuilder;
const #102 = Asciz	toXML$default$5;
const #103 = Asciz	()Z;
const #104 = NameAndType	#102:#103;//  toXML$default$5:()Z
const #105 = Method	#90.#104;	//  scala/xml/Utility$.toXML$default$5:()Z
const #106 = Asciz	toXML$default$6;
const #107 = NameAndType	#106:#103;//  toXML$default$6:()Z
const #108 = Method	#90.#107;	//  scala/xml/Utility$.toXML$default$6:()Z
const #109 = Asciz	toXML$default$7;
const #110 = NameAndType	#109:#103;//  toXML$default$7:()Z
const #111 = Method	#90.#110;	//  scala/xml/Utility$.toXML$default$7:()Z
const #112 = Asciz	toXML;
const #113 = Asciz	(Lscala/xml/Node;Lscala/xml/NamespaceBinding;Lscala/collection/mutable/StringBuilder;ZZZZ)Lscala/collection/mutable/StringBuilder;;
const #114 = NameAndType	#112:#113;//  toXML:(Lscala/xml/Node;Lscala/xml/NamespaceBinding;Lscala/collection/mutable/StringBuilder;ZZZZ)Lscala/collection/mutable/StringBuilder;
const #115 = Method	#90.#114;	//  scala/xml/Utility$.toXML:(Lscala/xml/Node;Lscala/xml/NamespaceBinding;Lscala/collection/mutable/StringBuilder;ZZZZ)Lscala/collection/mutable/StringBuilder;
const #116 = NameAndType	#84:#17;//  toString:()Ljava/lang/String;
const #117 = Method	#70.#116;	//  scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
const #118 = Asciz	stripComments;
const #119 = Asciz	Z;
const #120 = Asciz	x$7;
const #121 = Asciz	Lscala/xml/NamespaceBinding;;
const #122 = Asciz	x$8;
const #123 = Asciz	x$9;
const #124 = Asciz	x$10;
const #125 = Asciz	x$11;
const #126 = Asciz	theSeq;
const #127 = Asciz	()Lscala/collection/Seq;;
const #128 = Asciz	scala/collection/immutable/Nil$;
const #129 = class	#128;	//  scala/collection/immutable/Nil$
const #130 = Asciz	Lscala/collection/immutable/Nil$;;
const #131 = NameAndType	#8:#130;//  MODULE$:Lscala/collection/immutable/Nil$;
const #132 = Field	#129.#131;	//  scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
const #133 = Asciz	$colon$colon;
const #134 = Asciz	(Ljava/lang/Object;)Lscala/collection/immutable/List;;
const #135 = NameAndType	#133:#134;//  $colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
const #136 = Method	#129.#135;	//  scala/collection/immutable/Nil$.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
const #137 = Asciz	()Lscala/collection/Seq<Lscala/xml/Node;>;;
const #138 = Asciz	hashCode;
const #139 = Asciz	()I;
const #140 = Asciz	attributes;
const #141 = NameAndType	#140:#21;//  attributes:()Lscala/xml/MetaData;
const #142 = Method	#59.#141;	//  scala/xml/Node.attributes:()Lscala/xml/MetaData;
const #143 = Asciz	scala/xml/MetaData;
const #144 = class	#143;	//  scala/xml/MetaData
const #145 = NameAndType	#138:#139;//  hashCode:()I
const #146 = Method	#144.#145;	//  scala/xml/MetaData.hashCode:()I
const #147 = Asciz	scope;
const #148 = NameAndType	#147:#95;//  scope:()Lscala/xml/NamespaceBinding;
const #149 = Method	#59.#148;	//  scala/xml/Node.scope:()Lscala/xml/NamespaceBinding;
const #150 = Asciz	scala/xml/NamespaceBinding;
const #151 = class	#150;	//  scala/xml/NamespaceBinding
const #152 = Method	#151.#145;	//  scala/xml/NamespaceBinding.hashCode:()I
const #153 = Asciz	child;
const #154 = NameAndType	#153:#127;//  child:()Lscala/collection/Seq;
const #155 = Method	#59.#154;	//  scala/xml/Node.child:()Lscala/collection/Seq;
const #156 = Asciz	(Ljava/lang/String;Ljava/lang/String;IILscala/collection/Seq;)I;
const #157 = NameAndType	#138:#156;//  hashCode:(Ljava/lang/String;Ljava/lang/String;IILscala/collection/Seq;)I
const #158 = Method	#90.#157;	//  scala/xml/Utility$.hashCode:(Ljava/lang/String;Ljava/lang/String;IILscala/collection/Seq;)I
const #159 = Asciz	equalChildren;
const #160 = Asciz	(Lscala/xml/Node;)Z;
const #161 = NameAndType	#31:#32;//  noEmpties$1:(Lscala/collection/Seq;)Lscala/collection/Seq;
const #162 = Method	#59.#161;	//  scala/xml/Node.noEmpties$1:(Lscala/collection/Seq;)Lscala/collection/Seq;
const #163 = Asciz	scala/collection/IterableLike;
const #164 = class	#163;	//  scala/collection/IterableLike
const #165 = Asciz	sameElements;
const #166 = Asciz	(Lscala/collection/Iterable;)Z;
const #167 = NameAndType	#165:#166;//  sameElements:(Lscala/collection/Iterable;)Z
const #168 = InterfaceMethod	#164.#167;	//  scala/collection/IterableLike.sameElements:(Lscala/collection/Iterable;)Z
const #169 = Asciz	that;
const #170 = Asciz	equals;
const #171 = Asciz	(Ljava/lang/Object;)Z;
const #172 = Asciz	scala/xml/Group;
const #173 = class	#172;	//  scala/xml/Group
const #174 = Asciz	scala/MatchError;
const #175 = class	#174;	//  scala/MatchError
const #176 = Asciz	java/lang/Object;
const #177 = class	#176;	//  java/lang/Object
const #178 = Method	#177.#116;	//  java/lang/Object.toString:()Ljava/lang/String;
const #179 = Asciz	(Ljava/lang/String;)V;
const #180 = NameAndType	#24:#179;//  "<init>":(Ljava/lang/String;)V
const #181 = Method	#175.#180;	//  scala/MatchError."<init>":(Ljava/lang/String;)V
const #182 = NameAndType	#170:#171;//  equals:(Ljava/lang/Object;)Z
const #183 = Method	#177.#182;	//  java/lang/Object.equals:(Ljava/lang/Object;)Z
const #184 = NameAndType	#159:#160;//  equalChildren:(Lscala/xml/Node;)Z
const #185 = Method	#59.#184;	//  scala/xml/Node.equalChildren:(Lscala/xml/Node;)Z
const #186 = Asciz	x;
const #187 = Asciz	Ljava/lang/Object;;
const #188 = Asciz	temp4;
const #189 = Asciz	descendant_or_self;
const #190 = Asciz	()Lscala/collection/immutable/List;;
const #191 = Asciz	descendant;
const #192 = NameAndType	#191:#190;//  descendant:()Lscala/collection/immutable/List;
const #193 = Method	#59.#192;	//  scala/xml/Node.descendant:()Lscala/collection/immutable/List;
const #194 = Asciz	scala/collection/immutable/List;
const #195 = class	#194;	//  scala/collection/immutable/List
const #196 = Method	#195.#135;	//  scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
const #197 = Asciz	()Lscala/collection/immutable/List<Lscala/xml/Node;>;;
const #198 = Asciz	toList;
const #199 = NameAndType	#198:#190;//  toList:()Lscala/collection/immutable/List;
const #200 = InterfaceMethod	#39.#199;	//  scala/collection/TraversableLike.toList:()Lscala/collection/immutable/List;
const #201 = Asciz	scala/xml/Node$$anonfun$descendant$1;
const #202 = class	#201;	//  scala/xml/Node$$anonfun$descendant$1
const #203 = Method	#202.#36;	//  scala/xml/Node$$anonfun$descendant$1."<init>":(Lscala/xml/Node;)V
const #204 = Asciz	scala/collection/immutable/List$;
const #205 = class	#204;	//  scala/collection/immutable/List$
const #206 = Asciz	Lscala/collection/immutable/List$;;
const #207 = NameAndType	#8:#206;//  MODULE$:Lscala/collection/immutable/List$;
const #208 = Field	#205.#207;	//  scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
const #209 = Asciz	canBuildFrom;
const #210 = Asciz	()Lscala/collection/generic/CanBuildFrom;;
const #211 = NameAndType	#209:#210;//  canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
const #212 = Method	#205.#211;	//  scala/collection/immutable/List$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
const #213 = Asciz	flatMap;
const #214 = Asciz	(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;;
const #215 = NameAndType	#213:#214;//  flatMap:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
const #216 = InterfaceMethod	#39.#215;	//  scala/collection/TraversableLike.flatMap:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
const #217 = Asciz	scala/xml/Null$;
const #218 = class	#217;	//  scala/xml/Null$
const #219 = Asciz	Lscala/xml/Null$;;
const #220 = NameAndType	#8:#219;//  MODULE$:Lscala/xml/Null$;
const #221 = Field	#218.#220;	//  scala/xml/Null$.MODULE$:Lscala/xml/Null$;
const #222 = Asciz	attribute;
const #223 = Asciz	(Ljava/lang/String;Ljava/lang/String;)Lscala/Option;;
const #224 = Asciz	get;
const #225 = Asciz	(Ljava/lang/String;Lscala/xml/Node;Ljava/lang/String;)Lscala/Option;;
const #226 = NameAndType	#224:#225;//  get:(Ljava/lang/String;Lscala/xml/Node;Ljava/lang/String;)Lscala/Option;
const #227 = Method	#144.#226;	//  scala/xml/MetaData.get:(Ljava/lang/String;Lscala/xml/Node;Ljava/lang/String;)Lscala/Option;
const #228 = Asciz	uri;
const #229 = Asciz	Ljava/lang/String;;
const #230 = Asciz	key;
const #231 = Asciz	(Ljava/lang/String;Ljava/lang/String;)Lscala/Option<Lscala/collection/Seq<Lscala/xml/Node;>;>;;
const #232 = Asciz	(Ljava/lang/String;)Lscala/Option;;
const #233 = NameAndType	#224:#232;//  get:(Ljava/lang/String;)Lscala/Option;
const #234 = Method	#144.#233;	//  scala/xml/MetaData.get:(Ljava/lang/String;)Lscala/Option;
const #235 = Asciz	(Ljava/lang/String;)Lscala/Option<Lscala/collection/Seq<Lscala/xml/Node;>;>;;
const #236 = Asciz	getNamespace;
const #237 = Asciz	(Ljava/lang/String;)Ljava/lang/String;;
const #238 = Asciz	getURI;
const #239 = NameAndType	#238:#237;//  getURI:(Ljava/lang/String;)Ljava/lang/String;
const #240 = Method	#151.#239;	//  scala/xml/NamespaceBinding.getURI:(Ljava/lang/String;)Ljava/lang/String;
const #241 = Asciz	pre;
const #242 = Asciz	namespace;
const #243 = NameAndType	#236:#237;//  getNamespace:(Ljava/lang/String;)Ljava/lang/String;
const #244 = Method	#59.#243;	//  scala/xml/Node.getNamespace:(Ljava/lang/String;)Ljava/lang/String;
const #245 = Asciz	scala/xml/TopScope$;
const #246 = class	#245;	//  scala/xml/TopScope$
const #247 = Asciz	Lscala/xml/TopScope$;;
const #248 = NameAndType	#8:#247;//  MODULE$:Lscala/xml/TopScope$;
const #249 = Field	#246.#248;	//  scala/xml/TopScope$.MODULE$:Lscala/xml/TopScope$;
const #250 = Asciz	doTransform;
const #251 = Asciz	doCollectNamespaces;
const #252 = Asciz	isAtom;
const #253 = Asciz	scala/xml/Atom;
const #254 = class	#253;	//  scala/xml/Atom
const #255 = Asciz	ScalaSig;
const #256 = Asciz	InnerClasses;
const #257 = Asciz	$anonfun$descendant$1;
const #258 = Asciz	$anonfun$noEmpties$1$1;
const #259 = Asciz	scala/ScalaObject;
const #260 = class	#259;	//  scala/ScalaObject

{
public static final scala.Some unapplySeq(scala.xml.Node);
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	getstatic	#11; //Field scala/xml/Node$.MODULE$:Lscala/xml/Node$;
   3:	aload_0
   4:	invokevirtual	#13; //Method scala/xml/Node$.unapplySeq:(Lscala/xml/Node;)Lscala/Some;
   7:	areturn
  Signature: length = 0x2
   00 0E 

public static final java.lang.String EmptyNamespace();
  Code:
   Stack=1, Locals=0, Args_size=0
   0:	getstatic	#11; //Field scala/xml/Node$.MODULE$:Lscala/xml/Node$;
   3:	invokevirtual	#19; //Method scala/xml/Node$.EmptyNamespace:()Ljava/lang/String;
   6:	areturn

public static final scala.xml.MetaData NoAttributes();
  Code:
   Stack=1, Locals=0, Args_size=0
   0:	getstatic	#11; //Field scala/xml/Node$.MODULE$:Lscala/xml/Node$;
   3:	invokevirtual	#23; //Method scala/xml/Node$.NoAttributes:()Lscala/xml/MetaData;
   6:	areturn

public scala.xml.Node();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokespecial	#30; //Method scala/xml/NodeSeq."<init>":()V
   4:	return
  LineNumberTable: 
   line 43: 0


public java.lang.String text();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokespecial	#53; //Method scala/xml/NodeSeq.text:()Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 220: 0


public scala.xml.TypeSymbol xmlType();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aconst_null
   1:	areturn
  LineNumberTable: 
   line 207: 0


public scala.collection.mutable.StringBuilder nameToString(scala.collection.mutable.StringBuilder);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	invokevirtual	#62; //Method prefix:()Ljava/lang/String;
   4:	ifnonnull	13
   7:	getstatic	#68; //Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
   10:	goto	28
   13:	aload_1
   14:	aload_0
   15:	invokevirtual	#62; //Method prefix:()Ljava/lang/String;
   18:	invokevirtual	#74; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
   21:	pop
   22:	aload_1
   23:	ldc	#75; //int 58
   25:	invokevirtual	#78; //Method scala/collection/mutable/StringBuilder.append:(C)Lscala/collection/mutable/StringBuilder;
   28:	pop
   29:	aload_1
   30:	aload_0
   31:	invokevirtual	#81; //Method label:()Ljava/lang/String;
   34:	invokevirtual	#74; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
   37:	areturn
  LineNumberTable: 
   line 197: 0
   line 198: 13
   line 199: 22
   line 197: 28
   line 201: 29

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      38      0    this       Lscala/xml/Node;
   0      38      1    sb       Lscala/collection/mutable/StringBuilder;


public java.lang.String toString();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	iconst_0
   2:	invokevirtual	#88; //Method buildString:(Z)Ljava/lang/String;
   5:	areturn
  LineNumberTable: 
   line 188: 0


public java.lang.String buildString(boolean);
  Code:
   Stack=8, Locals=7, Args_size=2
   0:	getstatic	#93; //Field scala/xml/Utility$.MODULE$:Lscala/xml/Utility$;
   3:	invokevirtual	#97; //Method scala/xml/Utility$.toXML$default$2:()Lscala/xml/NamespaceBinding;
   6:	astore_2
   7:	getstatic	#93; //Field scala/xml/Utility$.MODULE$:Lscala/xml/Utility$;
   10:	invokevirtual	#101; //Method scala/xml/Utility$.toXML$default$3:()Lscala/collection/mutable/StringBuilder;
   13:	astore_3
   14:	getstatic	#93; //Field scala/xml/Utility$.MODULE$:Lscala/xml/Utility$;
   17:	invokevirtual	#105; //Method scala/xml/Utility$.toXML$default$5:()Z
   20:	istore	4
   22:	getstatic	#93; //Field scala/xml/Utility$.MODULE$:Lscala/xml/Utility$;
   25:	invokevirtual	#108; //Method scala/xml/Utility$.toXML$default$6:()Z
   28:	istore	5
   30:	getstatic	#93; //Field scala/xml/Utility$.MODULE$:Lscala/xml/Utility$;
   33:	invokevirtual	#111; //Method scala/xml/Utility$.toXML$default$7:()Z
   36:	istore	6
   38:	getstatic	#93; //Field scala/xml/Utility$.MODULE$:Lscala/xml/Utility$;
   41:	aload_0
   42:	aload_2
   43:	aload_3
   44:	iload_1
   45:	iload	4
   47:	iload	5
   49:	iload	6
   51:	invokevirtual	#115; //Method scala/xml/Utility$.toXML:(Lscala/xml/Node;Lscala/xml/NamespaceBinding;Lscala/collection/mutable/StringBuilder;ZZZZ)Lscala/collection/mutable/StringBuilder;
   54:	invokevirtual	#117; //Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
   57:	areturn
  LineNumberTable: 
   line 181: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      58      0    this       Lscala/xml/Node;
   0      58      1    stripComments       Z
   7      47      2    x$7       Lscala/xml/NamespaceBinding;
   14      40      3    x$8       Lscala/collection/mutable/StringBuilder;
   22      32      4    x$9       Z
   30      24      5    x$10       Z
   38      16      6    x$11       Z


public scala.collection.Seq theSeq();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	getstatic	#132; //Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
   3:	aload_0
   4:	invokevirtual	#136; //Method scala/collection/immutable/Nil$.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
   7:	areturn
  LineNumberTable: 
   line 172: 0

  Signature: length = 0x2
   00 FFFFFF89 

public int hashCode();
  Code:
   Stack=6, Locals=1, Args_size=1
   0:	getstatic	#93; //Field scala/xml/Utility$.MODULE$:Lscala/xml/Utility$;
   3:	aload_0
   4:	invokevirtual	#62; //Method prefix:()Ljava/lang/String;
   7:	aload_0
   8:	invokevirtual	#81; //Method label:()Ljava/lang/String;
   11:	aload_0
   12:	invokevirtual	#142; //Method attributes:()Lscala/xml/MetaData;
   15:	invokevirtual	#146; //Method scala/xml/MetaData.hashCode:()I
   18:	aload_0
   19:	invokevirtual	#149; //Method scope:()Lscala/xml/NamespaceBinding;
   22:	invokevirtual	#152; //Method scala/xml/NamespaceBinding.hashCode:()I
   25:	aload_0
   26:	invokevirtual	#155; //Method child:()Lscala/collection/Seq;
   29:	invokevirtual	#158; //Method scala/xml/Utility$.hashCode:(Ljava/lang/String;Ljava/lang/String;IILscala/collection/Seq;)I
   32:	ireturn
  LineNumberTable: 
   line 165: 0


public boolean equals(java.lang.Object);
  Code:
   Stack=3, Locals=7, Args_size=2
   0:	aload_1
   1:	instanceof	#173; //class scala/xml/Group
   4:	ifeq	27
   7:	iconst_1
   8:	ifeq	15
   11:	iconst_0
   12:	goto	200
   15:	new	#175; //class scala/MatchError
   18:	dup
   19:	aload_1
   20:	invokevirtual	#178; //Method java/lang/Object.toString:()Ljava/lang/String;
   23:	invokespecial	#181; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   26:	athrow
   27:	aload_1
   28:	instanceof	#59; //class scala/xml/Node
   31:	ifeq	195
   34:	aload_1
   35:	checkcast	#59; //class scala/xml/Node
   38:	astore	6
   40:	iconst_1
   41:	ifeq	183
   44:	aload_0
   45:	invokevirtual	#62; //Method prefix:()Ljava/lang/String;
   48:	aload	6
   50:	invokevirtual	#62; //Method prefix:()Ljava/lang/String;
   53:	astore_2
   54:	dup
   55:	ifnonnull	66
   58:	pop
   59:	aload_2
   60:	ifnull	73
   63:	goto	179
   66:	aload_2
   67:	invokevirtual	#183; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   70:	ifeq	179
   73:	aload_0
   74:	invokevirtual	#81; //Method label:()Ljava/lang/String;
   77:	aload	6
   79:	invokevirtual	#81; //Method label:()Ljava/lang/String;
   82:	astore_3
   83:	dup
   84:	ifnonnull	95
   87:	pop
   88:	aload_3
   89:	ifnull	102
   92:	goto	179
   95:	aload_3
   96:	invokevirtual	#183; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   99:	ifeq	179
   102:	aload_0
   103:	invokevirtual	#142; //Method attributes:()Lscala/xml/MetaData;
   106:	aload	6
   108:	invokevirtual	#142; //Method attributes:()Lscala/xml/MetaData;
   111:	astore	4
   113:	dup
   114:	ifnonnull	126
   117:	pop
   118:	aload	4
   120:	ifnull	134
   123:	goto	179
   126:	aload	4
   128:	invokevirtual	#183; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   131:	ifeq	179
   134:	aload_0
   135:	invokevirtual	#149; //Method scope:()Lscala/xml/NamespaceBinding;
   138:	aload	6
   140:	invokevirtual	#149; //Method scope:()Lscala/xml/NamespaceBinding;
   143:	astore	5
   145:	dup
   146:	ifnonnull	158
   149:	pop
   150:	aload	5
   152:	ifnull	166
   155:	goto	179
   158:	aload	5
   160:	invokevirtual	#183; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   163:	ifeq	179
   166:	aload_0
   167:	aload	6
   169:	invokespecial	#185; //Method equalChildren:(Lscala/xml/Node;)Z
   172:	ifeq	179
   175:	iconst_1
   176:	goto	200
   179:	iconst_0
   180:	goto	200
   183:	new	#175; //class scala/MatchError
   186:	dup
   187:	aload_1
   188:	invokevirtual	#178; //Method java/lang/Object.toString:()Ljava/lang/String;
   191:	invokespecial	#181; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   194:	athrow
   195:	iconst_1
   196:	ifeq	201
   199:	iconst_0
   200:	ireturn
   201:	new	#175; //class scala/MatchError
   204:	dup
   205:	aload_1
   206:	invokevirtual	#178; //Method java/lang/Object.toString:()Ljava/lang/String;
   209:	invokespecial	#181; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   212:	athrow
  LineNumberTable: 
   line 139: 0
   line 21: 7
   line 140: 11
   line 139: 15
   line 21: 40
   line 142: 44
   line 143: 73
   line 144: 102
   line 145: 134
   line 146: 166
   line 145: 175
   line 139: 183
   line 21: 195
   line 147: 199
   line 139: 200

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      213      0    this       Lscala/xml/Node;
   0      213      1    x       Ljava/lang/Object;
   40      155      6    temp4       Lscala/xml/Node;


public scala.collection.immutable.List descendant_or_self();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#193; //Method descendant:()Lscala/collection/immutable/List;
   4:	aload_0
   5:	invokevirtual	#196; //Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
   8:	areturn
  LineNumberTable: 
   line 130: 0

  Signature: length = 0x2
   00 FFFFFFC5 

public scala.collection.immutable.List descendant();
  Code:
   Stack=4, Locals=1, Args_size=1
   0:	aload_0
   1:	invokevirtual	#155; //Method child:()Lscala/collection/Seq;
   4:	invokeinterface	#200,  1; //InterfaceMethod scala/collection/TraversableLike.toList:()Lscala/collection/immutable/List;
   9:	new	#202; //class scala/xml/Node$$anonfun$descendant$1
   12:	dup
   13:	aload_0
   14:	invokespecial	#203; //Method scala/xml/Node$$anonfun$descendant$1."<init>":(Lscala/xml/Node;)V
   17:	getstatic	#208; //Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
   20:	invokevirtual	#212; //Method scala/collection/immutable/List$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
   23:	invokeinterface	#216,  3; //InterfaceMethod scala/collection/TraversableLike.flatMap:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
   28:	checkcast	#195; //class scala/collection/immutable/List
   31:	areturn
  LineNumberTable: 
   line 124: 0

  Signature: length = 0x2
   00 FFFFFFC5 

public abstract scala.collection.Seq child();
  Signature: length = 0x2
   00 FFFFFF89 

public scala.xml.MetaData attributes();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	getstatic	#221; //Field scala/xml/Null$.MODULE$:Lscala/xml/Null$;
   3:	areturn
  LineNumberTable: 
   line 110: 0


public final scala.Option attribute(java.lang.String, java.lang.String);
  Code:
   Stack=4, Locals=3, Args_size=3
   0:	aload_0
   1:	invokevirtual	#142; //Method attributes:()Lscala/xml/MetaData;
   4:	aload_1
   5:	aload_0
   6:	aload_2
   7:	invokevirtual	#227; //Method scala/xml/MetaData.get:(Ljava/lang/String;Lscala/xml/Node;Ljava/lang/String;)Lscala/Option;
   10:	areturn
  LineNumberTable: 
   line 101: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      11      0    this       Lscala/xml/Node;
   0      11      1    uri       Ljava/lang/String;
   0      11      2    key       Ljava/lang/String;

  Signature: length = 0x2
   00 FFFFFFE7 

public final scala.Option attribute(java.lang.String);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	invokevirtual	#142; //Method attributes:()Lscala/xml/MetaData;
   4:	aload_1
   5:	invokevirtual	#234; //Method scala/xml/MetaData.get:(Ljava/lang/String;)Lscala/Option;
   8:	areturn
  LineNumberTable: 
   line 89: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/xml/Node;
   0      9      1    key       Ljava/lang/String;

  Signature: length = 0x2
   00 FFFFFFEB 

public java.lang.String getNamespace(java.lang.String);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	invokevirtual	#149; //Method scope:()Lscala/xml/NamespaceBinding;
   4:	ifnonnull	11
   7:	aconst_null
   8:	goto	19
   11:	aload_0
   12:	invokevirtual	#149; //Method scope:()Lscala/xml/NamespaceBinding;
   15:	aload_1
   16:	invokevirtual	#240; //Method scala/xml/NamespaceBinding.getURI:(Ljava/lang/String;)Ljava/lang/String;
   19:	areturn
  LineNumberTable: 
   line 79: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      20      0    this       Lscala/xml/Node;
   0      20      1    pre       Ljava/lang/String;


public java.lang.String namespace();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	aload_0
   1:	aload_0
   2:	invokevirtual	#62; //Method prefix:()Ljava/lang/String;
   5:	invokevirtual	#244; //Method getNamespace:(Ljava/lang/String;)Ljava/lang/String;
   8:	areturn
  LineNumberTable: 
   line 69: 0


public scala.xml.NamespaceBinding scope();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	getstatic	#249; //Field scala/xml/TopScope$.MODULE$:Lscala/xml/TopScope$;
   3:	areturn
  LineNumberTable: 
   line 64: 0


public boolean doTransform();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	iconst_1
   1:	ireturn
  LineNumberTable: 
   line 57: 0


public boolean doCollectNamespaces();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	iconst_1
   1:	ireturn
  LineNumberTable: 
   line 56: 0


public boolean isAtom();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	instanceof	#254; //class scala/xml/Atom
   4:	ireturn
  LineNumberTable: 
   line 53: 0


public abstract java.lang.String label();

public java.lang.String prefix();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aconst_null
   1:	areturn
  LineNumberTable: 
   line 46: 0


}

