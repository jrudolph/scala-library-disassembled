Compiled from "Atom.scala"
public class scala.xml.Atom extends scala.xml.SpecialNode implements scala.ScalaObject,java.io.Serializable
  SourceFile: "Atom.scala"
  Signature: length = 0x2
   00 6E 
  ScalaSig: length = 0x27B
   05 00 69 06 04 01 02 00 07 02 04 41 74 6F 6D 0A
   02 03 04 01 03 78 6D 6C 0A 01 05 01 05 73 63 61
   6C 61 03 00 15 02 08 16 13 03 00 09 0D 10 02 0A
   0B 0D 01 02 09 02 0C 02 02 0B 53 70 65 63 69 61
   6C 4E 6F 64 65 10 02 0E 0F 0D 01 04 09 02 10 04
   02 0B 53 63 61 6C 61 4F 62 6A 65 63 74 08 08 12
   00 FFFFFF82 FFFFFFC2 FFFFFF80 FFFFFF84 00 13 01 04 64 61 74 61 15 01 14
   10 02 15 16 0C 00 04 08 17 00 FFFFFF84 FFFFFF80 FFFFFF84 FFFFFFC2 00 18
   02 01 41 11 02 19 1C 10 02 0E 1A 09 02 1B 04 02
   07 4E 6F 74 68 69 6E 67 10 02 0E 1D 09 02 1E 04
   02 03 41 6E 79 08 08 20 00 FFFFFF82 FFFFFF80 FFFFFFA0 FFFFFF80 04 14 01
   05 64 61 74 61 20 08 05 22 00 FFFFFF84 00 23 01 06 3C
   69 6E 69 74 3E 14 02 24 25 10 03 0A 00 14 08 05
   12 21 FFFFFFC0 00 14 08 05 27 00 FFFFFF84 20 28 01 10 62 61
   73 69 73 46 6F 72 48 61 73 68 43 6F 64 65 15 01
   29 10 03 2A 32 1C 0E 02 2B 30 0E 02 2C 2F 0D 01
   2D 0A 02 2E 06 01 06 3C 72 6F 6F 74 3E 09 01 05
   09 02 31 04 01 07 70 61 63 6B 61 67 65 09 02 33
   34 02 03 53 65 71 0A 02 31 04 08 05 36 00 FFFFFF84 20
   37 01 0D 73 74 72 69 63 74 5F 24 65 71 24 65 71
   14 02 38 3B 10 02 0E 39 09 02 3A 04 02 07 42 6F
   6F 6C 65 61 6E 08 05 3C 35 FFFFFFC0 00 3D 01 05 6F 74
   68 65 72 10 02 0A 3E 09 02 3F 02 02 08 45 71 75
   61 6C 69 74 79 08 05 41 00 FFFFFF84 20 42 01 08 63 61
   6E 45 71 75 61 6C 14 02 38 43 08 05 3C 40 FFFFFFC0 00
   1C 08 05 45 00 FFFFFF84 22 46 01 13 64 6F 43 6F 6C 6C
   65 63 74 4E 61 6D 65 73 70 61 63 65 73 15 01 38
   08 05 48 00 FFFFFF84 22 46 01 0B 64 6F 54 72 61 6E 73
   66 6F 72 6D 08 05 4A 00 FFFFFF84 00 4B 01 05 6C 61 62
   65 6C 15 01 4C 10 02 4D 52 0D 01 4E 0A 02 4F 50
   01 04 6C 61 6E 67 0A 01 51 01 04 6A 61 76 61 09
   02 53 4E 02 06 53 74 72 69 6E 67 08 05 55 00 FFFFFF84
   00 56 01 0B 62 75 69 6C 64 53 74 72 69 6E 67 14
   02 57 5A 10 02 2A 58 09 02 59 34 02 0D 53 74 72
   69 6E 67 42 75 69 6C 64 65 72 08 05 5B 54 FFFFFFC0 00
   57 01 02 73 62 08 05 5D 00 FFFFFF84 20 5E 01 04 74 65
   78 74 15 01 5F 10 02 60 63 0E 02 0E 61 09 02 62
   04 01 06 50 72 65 64 65 66 09 02 53 64 0A 02 62
   04 28 02 00 66 10 02 0E 67 09 02 68 04 02 0C 73
   65 72 69 61 6C 69 7A 61 62 6C 65 
  minor version: 0
  major version: 49
  Constant pool:
Asciz	SourceFile;
Asciz	Atom.scala;
Asciz	data;
Asciz	Ljava/lang/Object;;
Asciz	TA;;
Asciz	Signature;
Asciz	()Ljava/lang/Object;;
Asciz	Code;
Asciz	LineNumberTable;
Asciz	scala/xml/Atom;
class	scala/xml/Atom
NameAndType	data:Ljava/lang/Object;
Field	scala/xml/Atom.data:Ljava/lang/Object;
Asciz	()TA;;
Asciz	basisForHashCode;
Asciz	()Lscala/collection/Seq;;
Asciz	scala/collection/Seq$;
class	scala/collection/Seq$
Asciz	MODULE$;
Asciz	Lscala/collection/Seq$;;
NameAndType	MODULE$:Lscala/collection/Seq$;
Field	scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
Asciz	scala/Predef$;
class	scala/Predef$
Asciz	Lscala/Predef$;;
NameAndType	MODULE$:Lscala/Predef$;
Field	scala/Predef$.MODULE$:Lscala/Predef$;
Asciz	java/lang/Object;
class	java/lang/Object
NameAndType	data:()Ljava/lang/Object;
Method	scala/xml/Atom.data:()Ljava/lang/Object;
Asciz	genericWrapArray;
Asciz	(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;;
NameAndType	genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
Method	scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
Asciz	apply;
Asciz	(Lscala/collection/Seq;)Lscala/collection/Traversable;;
NameAndType	apply:(Lscala/collection/Seq;)Lscala/collection/Traversable;
Method	scala/collection/Seq$.apply:(Lscala/collection/Seq;)Lscala/collection/Traversable;
Asciz	scala/collection/Seq;
class	scala/collection/Seq
Asciz	()Lscala/collection/Seq<Ljava/lang/Object;>;;
Asciz	strict_$eq$eq;
Asciz	(Lscala/xml/Equality;)Z;
Asciz	java/lang/Number;
class	java/lang/Number
Asciz	scala/runtime/BoxesRunTime;
class	scala/runtime/BoxesRunTime
Asciz	equalsNumObject;
Asciz	(Ljava/lang/Number;Ljava/lang/Object;)Z;
NameAndType	equalsNumObject:(Ljava/lang/Number;Ljava/lang/Object;)Z
Method	scala/runtime/BoxesRunTime.equalsNumObject:(Ljava/lang/Number;Ljava/lang/Object;)Z
Asciz	java/lang/Character;
class	java/lang/Character
Asciz	equalsCharObject;
Asciz	(Ljava/lang/Character;Ljava/lang/Object;)Z;
NameAndType	equalsCharObject:(Ljava/lang/Character;Ljava/lang/Object;)Z
Method	scala/runtime/BoxesRunTime.equalsCharObject:(Ljava/lang/Character;Ljava/lang/Object;)Z
Asciz	equals;
Asciz	(Ljava/lang/Object;)Z;
NameAndType	equals:(Ljava/lang/Object;)Z
Method	java/lang/Object.equals:(Ljava/lang/Object;)Z
Asciz	this;
Asciz	Lscala/xml/Atom;;
Asciz	other;
Asciz	Lscala/xml/Equality;;
Asciz	x0;
Asciz	y0;
Asciz	LocalVariableTable;
Asciz	canEqual;
Asciz	doCollectNamespaces;
Asciz	()Z;
Asciz	doTransform;
Asciz	label;
Asciz	()Ljava/lang/String;;
Asciz	#PCDATA;
String	#PCDATA
Asciz	buildString;
Asciz	(Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;;
Asciz	scala/xml/Utility$;
class	scala/xml/Utility$
Asciz	Lscala/xml/Utility$;;
NameAndType	MODULE$:Lscala/xml/Utility$;
Field	scala/xml/Utility$.MODULE$:Lscala/xml/Utility$;
Asciz	toString;
NameAndType	toString:()Ljava/lang/String;
Method	java/lang/Object.toString:()Ljava/lang/String;
Asciz	escape;
Asciz	(Ljava/lang/String;Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;;
NameAndType	escape:(Ljava/lang/String;Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;
Method	scala/xml/Utility$.escape:(Ljava/lang/String;Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;
Asciz	sb;
Asciz	Lscala/collection/mutable/StringBuilder;;
Asciz	text;
Asciz	<init>;
Asciz	(Ljava/lang/Object;)V;
Asciz	scala/xml/SpecialNode;
class	scala/xml/SpecialNode
Asciz	()V;
NameAndType	"<init>":()V
Method	scala/xml/SpecialNode."<init>":()V
Asciz	java/lang/IllegalArgumentException;
class	java/lang/IllegalArgumentException
Asciz	cannot construct Atom(null);
String	cannot construct Atom(null)
Asciz	(Ljava/lang/String;)V;
NameAndType	"<init>":(Ljava/lang/String;)V
Method	java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
Asciz	(TA;)V;
Asciz	<A:Ljava/lang/Object;>Lscala/xml/SpecialNode;Lscala/ScalaObject;;
Asciz	ScalaSig;
Asciz	scala/ScalaObject;
class	scala/ScalaObject
Asciz	java/io/Serializable;
class	java/io/Serializable

{
private final java.lang.Object data;
  Signature: Ljava/lang/Object;
  Signature: length = 0x2
   00 05 

public java.lang.Object data();
  Signature: ()Ljava/lang/Object;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	getfield	Field data:Ljava/lang/Object;
	areturn
  Labels:
  Signature: length = 0x2
   00 0E 

public scala.collection.Seq basisForHashCode();
  Signature: ()Lscala/collection/Seq;
  Code:
   Stack=6, Locals=1, Args_size=1
	getstatic	Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
	getstatic	Field scala/Predef$.MODULE$:Lscala/Predef$;
	iconst_1
	anewarray	class java/lang/Object
	dup
	iconst_0
	aload_0
	invokevirtual	Method data:()Ljava/lang/Object;
	aastore
	invokevirtual	Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
	invokevirtual	Method scala/collection/Seq$.apply:(Lscala/collection/Seq;)Lscala/collection/Traversable;
	checkcast	class scala/collection/Seq
	areturn
  Labels:
  Signature: length = 0x2
   00 2A 

public boolean strict_$eq$eq(scala.xml.Equality);
  Signature: (Lscala/xml/Equality;)Z
  Code:
   Stack=2, Locals=4, Args_size=2
	aload_1
	instanceof	class scala/xml/Atom
	ifeq	l1 // iconst_0
	aload_0
	invokevirtual	Method data:()Ljava/lang/Object;
	aload_1
	checkcast	class scala/xml/Atom
	invokevirtual	Method data:()Ljava/lang/Object;
	astore_3
	astore_2
	aload_2
	aload_3
	if_acmpne	l2 // aload_2
	iconst_1
	goto	l3 // ifeq
l2	aload_2
	ifnonnull	l4 // aload_2
	iconst_0
	goto	l3 // ifeq
l4	aload_2
	instanceof	class java/lang/Number
	ifeq	l5 // aload_2
	aload_2
	checkcast	class java/lang/Number
	aload_3
	invokestatic	Method scala/runtime/BoxesRunTime.equalsNumObject:(Ljava/lang/Number;Ljava/lang/Object;)Z
	goto	l3 // ifeq
l5	aload_2
	instanceof	class java/lang/Character
	ifeq	l6 // aload_2
	aload_2
	checkcast	class java/lang/Character
	aload_3
	invokestatic	Method scala/runtime/BoxesRunTime.equalsCharObject:(Ljava/lang/Character;Ljava/lang/Object;)Z
	goto	l3 // ifeq
l6	aload_2
	aload_3
	invokevirtual	Method java/lang/Object.equals:(Ljava/lang/Object;)Z
l3	ifeq	l7 // iconst_0
	iconst_1
	goto	l8 // ireturn
l7	iconst_0
	goto	l8 // ireturn
l1	iconst_0
l8	ireturn
  Labels:
   	l2 = 29 // aload_2
   	l4 = 37 // aload_2
   	l5 = 55 // aload_2
   	l6 = 73 // aload_2
   	l3 = 78 // ifeq
   	l7 = 85 // iconst_0
   	l1 = 89 // iconst_0
   	l8 = 90 // ireturn
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      91      0    this       Lscala/xml/Atom;
   0      91      1    other       Lscala/xml/Equality;
   25      56      2    x0       Ljava/lang/Object;
   25      56      3    y0       Ljava/lang/Object;


public boolean canEqual(java.lang.Object);
  Signature: (Ljava/lang/Object;)Z
  Code:
   Stack=1, Locals=2, Args_size=2
	aload_1
	instanceof	class scala/xml/Atom
	ireturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    this       Lscala/xml/Atom;
   0      5      1    other       Ljava/lang/Object;


public final boolean doCollectNamespaces();
  Signature: ()Z
  Code:
   Stack=1, Locals=1, Args_size=1
	iconst_0
	ireturn
  Labels:

public final boolean doTransform();
  Signature: ()Z
  Code:
   Stack=1, Locals=1, Args_size=1
	iconst_0
	ireturn
  Labels:

public java.lang.String label();
  Signature: ()Ljava/lang/String;
  Code:
   Stack=1, Locals=1, Args_size=1
	ldc	String #PCDATA
	areturn
  Labels:

public scala.collection.mutable.StringBuilder buildString(scala.collection.mutable.StringBuilder);
  Signature: (Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;
  Code:
   Stack=3, Locals=2, Args_size=2
	getstatic	Field scala/xml/Utility$.MODULE$:Lscala/xml/Utility$;
	aload_0
	invokevirtual	Method data:()Ljava/lang/Object;
	invokevirtual	Method java/lang/Object.toString:()Ljava/lang/String;
	aload_1
	invokevirtual	Method scala/xml/Utility$.escape:(Ljava/lang/String;Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;
	areturn
  Labels:
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      15      0    this       Lscala/xml/Atom;
   0      15      1    sb       Lscala/collection/mutable/StringBuilder;


public java.lang.String text();
  Signature: ()Ljava/lang/String;
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokevirtual	Method data:()Ljava/lang/Object;
	invokevirtual	Method java/lang/Object.toString:()Ljava/lang/String;
	areturn
  Labels:

public scala.xml.Atom(java.lang.Object);
  Signature: (Ljava/lang/Object;)V
  Code:
   Stack=3, Locals=2, Args_size=2
	aload_0
	aload_1
	putfield	Field data:Ljava/lang/Object;
	aload_0
	invokespecial	Method scala/xml/SpecialNode."<init>":()V
	aload_1
	dup
	pop
	ifnull	l1 // new
	aload_1
	aconst_null
	invokevirtual	Method java/lang/Object.equals:(Ljava/lang/Object;)Z
	ifeq	l2 // return
l1	new	class java/lang/IllegalArgumentException
	dup
	ldc	String cannot construct Atom(null)
	invokespecial	Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
	athrow
l2	return
  Labels:
   	l1 = 23 // new
   	l2 = 33 // return
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      34      0    this       Lscala/xml/Atom;
   0      34      1    data       Ljava/lang/Object;

  Signature: length = 0x2
   00 6D 

}

