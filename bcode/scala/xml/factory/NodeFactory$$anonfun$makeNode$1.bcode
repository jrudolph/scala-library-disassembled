Compiled from "NodeFactory.scala"
public final class scala.xml.factory.NodeFactory$$anonfun$makeNode$1 extends java.lang.Object implements scala.Function1,scala.ScalaObject,java.io.Serializable
  SourceFile: "NodeFactory.scala"
  Scala: length = 0x
   
  InnerClass: 
   public final #90= #24 of #67; //$anonfun$makeNode$1=class scala/xml/factory/NodeFactory$$anonfun$makeNode$1 of class scala/xml/factory/NodeFactory
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	NodeFactory.scala;
const #3 = Asciz	children$1;
const #4 = Asciz	Lscala/collection/Sequence;;
const #5 = Asciz	scope$1;
const #6 = Asciz	Lscala/xml/NamespaceBinding;;
const #7 = Asciz	attrSeq$1;
const #8 = Asciz	Lscala/xml/MetaData;;
const #9 = Asciz	name$1;
const #10 = Asciz	Ljava/lang/String;;
const #11 = Asciz	pre$1;
const #12 = Asciz	$outer;
const #13 = Asciz	Lscala/xml/factory/NodeFactory;;
const #14 = Asciz	<init>;
const #15 = Asciz	(Lscala/xml/factory/NodeFactory;Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Sequence;)V;
const #16 = Asciz	Code;
const #17 = Asciz	LineNumberTable;
const #18 = Asciz	java/lang/NullPointerException;
const #19 = class	#18;	//  java/lang/NullPointerException
const #20 = Asciz	()V;
const #21 = NameAndType	#14:#20;//  "<init>":()V
const #22 = Method	#19.#21;	//  java/lang/NullPointerException."<init>":()V
const #23 = Asciz	scala/xml/factory/NodeFactory$$anonfun$makeNode$1;
const #24 = class	#23;	//  scala/xml/factory/NodeFactory$$anonfun$makeNode$1
const #25 = NameAndType	#12:#13;//  $outer:Lscala/xml/factory/NodeFactory;
const #26 = Field	#24.#25;	//  scala/xml/factory/NodeFactory$$anonfun$makeNode$1.$outer:Lscala/xml/factory/NodeFactory;
const #27 = NameAndType	#11:#10;//  pre$1:Ljava/lang/String;
const #28 = Field	#24.#27;	//  scala/xml/factory/NodeFactory$$anonfun$makeNode$1.pre$1:Ljava/lang/String;
const #29 = NameAndType	#9:#10;//  name$1:Ljava/lang/String;
const #30 = Field	#24.#29;	//  scala/xml/factory/NodeFactory$$anonfun$makeNode$1.name$1:Ljava/lang/String;
const #31 = NameAndType	#7:#8;//  attrSeq$1:Lscala/xml/MetaData;
const #32 = Field	#24.#31;	//  scala/xml/factory/NodeFactory$$anonfun$makeNode$1.attrSeq$1:Lscala/xml/MetaData;
const #33 = NameAndType	#5:#6;//  scope$1:Lscala/xml/NamespaceBinding;
const #34 = Field	#24.#33;	//  scala/xml/factory/NodeFactory$$anonfun$makeNode$1.scope$1:Lscala/xml/NamespaceBinding;
const #35 = NameAndType	#3:#4;//  children$1:Lscala/collection/Sequence;
const #36 = Field	#24.#35;	//  scala/xml/factory/NodeFactory$$anonfun$makeNode$1.children$1:Lscala/collection/Sequence;
const #37 = Asciz	java/lang/Object;
const #38 = class	#37;	//  java/lang/Object
const #39 = Method	#38.#21;	//  java/lang/Object."<init>":()V
const #40 = Asciz	scala/Function1$class;
const #41 = class	#40;	//  scala/Function1$class
const #42 = Asciz	$init$;
const #43 = Asciz	(Lscala/Function1;)V;
const #44 = NameAndType	#42:#43;//  $init$:(Lscala/Function1;)V
const #45 = Method	#41.#44;	//  scala/Function1$class.$init$:(Lscala/Function1;)V
const #46 = Asciz	this;
const #47 = Asciz	Lscala/xml/factory/NodeFactory$$anonfun$makeNode$1;;
const #48 = Asciz	LocalVariableTable;
const #49 = Asciz	(Lscala/xml/factory/NodeFactory<TA;>;)V;
const #50 = Asciz	Signature;
const #51 = Asciz	apply;
const #52 = Asciz	(Ljava/lang/Object;)Ljava/lang/Object;;
const #53 = Asciz	scala/xml/Node;
const #54 = class	#53;	//  scala/xml/Node
const #55 = Asciz	(Lscala/xml/Node;)Z;
const #56 = NameAndType	#51:#55;//  apply:(Lscala/xml/Node;)Z
const #57 = Method	#24.#56;	//  scala/xml/factory/NodeFactory$$anonfun$makeNode$1.apply:(Lscala/xml/Node;)Z
const #58 = Asciz	scala/runtime/BoxesRunTime;
const #59 = class	#58;	//  scala/runtime/BoxesRunTime
const #60 = Asciz	boxToBoolean;
const #61 = Asciz	(Z)Ljava/lang/Boolean;;
const #62 = NameAndType	#60:#61;//  boxToBoolean:(Z)Ljava/lang/Boolean;
const #63 = Method	#59.#62;	//  scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
const #64 = Asciz	v1;
const #65 = Asciz	Ljava/lang/Object;;
const #66 = Asciz	scala/xml/factory/NodeFactory;
const #67 = class	#66;	//  scala/xml/factory/NodeFactory
const #68 = Asciz	nodeEquals;
const #69 = Asciz	(Lscala/xml/Node;Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Sequence;)Z;
const #70 = NameAndType	#68:#69;//  nodeEquals:(Lscala/xml/Node;Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Sequence;)Z
const #71 = InterfaceMethod	#67.#70;	//  scala/xml/factory/NodeFactory.nodeEquals:(Lscala/xml/Node;Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Sequence;)Z
const #72 = Asciz	(TA;)Z;
const #73 = Asciz	andThen;
const #74 = Asciz	(Lscala/Function1;)Lscala/Function1;;
const #75 = Asciz	(Lscala/Function1;Lscala/Function1;)Lscala/Function1;;
const #76 = NameAndType	#73:#75;//  andThen:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
const #77 = Method	#41.#76;	//  scala/Function1$class.andThen:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
const #78 = Asciz	g;
const #79 = Asciz	Lscala/Function1;;
const #80 = Asciz	compose;
const #81 = NameAndType	#80:#75;//  compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
const #82 = Method	#41.#81;	//  scala/Function1$class.compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
const #83 = Asciz	toString;
const #84 = Asciz	()Ljava/lang/String;;
const #85 = Asciz	(Lscala/Function1;)Ljava/lang/String;;
const #86 = NameAndType	#83:#85;//  toString:(Lscala/Function1;)Ljava/lang/String;
const #87 = Method	#41.#86;	//  scala/Function1$class.toString:(Lscala/Function1;)Ljava/lang/String;
const #88 = Asciz	Scala;
const #89 = Asciz	InnerClasses;
const #90 = Asciz	$anonfun$makeNode$1;
const #91 = Asciz	scala/Function1;
const #92 = class	#91;	//  scala/Function1
const #93 = Asciz	scala/ScalaObject;
const #94 = class	#93;	//  scala/ScalaObject
const #95 = Asciz	java/io/Serializable;
const #96 = class	#95;	//  java/io/Serializable

{
public scala.xml.factory.NodeFactory$$anonfun$makeNode$1(scala.xml.factory.NodeFactory, java.lang.String, java.lang.String, scala.xml.MetaData, scala.xml.NamespaceBinding, scala.collection.Sequence);
  Code:
   Stack=2, Locals=7, Args_size=7
   0:	aload_1
   1:	ifnonnull	12
   4:	new	#19; //class java/lang/NullPointerException
   7:	dup
   8:	invokespecial	#22; //Method java/lang/NullPointerException."<init>":()V
   11:	athrow
   12:	aload_0
   13:	aload_1
   14:	putfield	#26; //Field $outer:Lscala/xml/factory/NodeFactory;
   17:	aload_0
   18:	aload_2
   19:	putfield	#28; //Field pre$1:Ljava/lang/String;
   22:	aload_0
   23:	aload_3
   24:	putfield	#30; //Field name$1:Ljava/lang/String;
   27:	aload_0
   28:	aload	4
   30:	putfield	#32; //Field attrSeq$1:Lscala/xml/MetaData;
   33:	aload_0
   34:	aload	5
   36:	putfield	#34; //Field scope$1:Lscala/xml/NamespaceBinding;
   39:	aload_0
   40:	aload	6
   42:	putfield	#36; //Field children$1:Lscala/collection/Sequence;
   45:	aload_0
   46:	invokespecial	#39; //Method java/lang/Object."<init>":()V
   49:	aload_0
   50:	invokestatic	#45; //Method scala/Function1$class.$init$:(Lscala/Function1;)V
   53:	return
  LineNumberTable: 
   line 51: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      54      0    this       Lscala/xml/factory/NodeFactory$$anonfun$makeNode$1;
   0      54      1    $outer       Lscala/xml/factory/NodeFactory;

  Signature: length = 0x2
   00 31 

public final java.lang.Object apply(java.lang.Object);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	aload_0
   1:	getfield	#26; //Field $outer:Lscala/xml/factory/NodeFactory;
   4:	astore_2
   5:	aload_0
   6:	aload_1
   7:	checkcast	#54; //class scala/xml/Node
   10:	invokevirtual	#57; //Method apply:(Lscala/xml/Node;)Z
   13:	invokestatic	#63; //Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
   16:	areturn
  LineNumberTable: 
   line 51: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      17      0    this       Lscala/xml/factory/NodeFactory$$anonfun$makeNode$1;
   5      12      1    v1       Ljava/lang/Object;


public final boolean apply(scala.xml.Node);
  Code:
   Stack=7, Locals=3, Args_size=2
   0:	aload_0
   1:	getfield	#26; //Field $outer:Lscala/xml/factory/NodeFactory;
   4:	astore_2
   5:	aload_0
   6:	getfield	#26; //Field $outer:Lscala/xml/factory/NodeFactory;
   9:	aload_1
   10:	aload_0
   11:	getfield	#28; //Field pre$1:Ljava/lang/String;
   14:	aload_0
   15:	getfield	#30; //Field name$1:Ljava/lang/String;
   18:	aload_0
   19:	getfield	#32; //Field attrSeq$1:Lscala/xml/MetaData;
   22:	aload_0
   23:	getfield	#34; //Field scope$1:Lscala/xml/NamespaceBinding;
   26:	aload_0
   27:	getfield	#36; //Field children$1:Lscala/collection/Sequence;
   30:	invokeinterface	#71,  7; //InterfaceMethod scala/xml/factory/NodeFactory.nodeEquals:(Lscala/xml/Node;Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Sequence;)Z
   35:	ireturn
  LineNumberTable: 
   line 51: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      36      0    this       Lscala/xml/factory/NodeFactory$$anonfun$makeNode$1;

  Signature: length = 0x2
   00 48 

public scala.Function1 andThen(scala.Function1);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#77; //Method scala/Function1$class.andThen:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
   5:	areturn
  LineNumberTable: 
   line 51: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/factory/NodeFactory$$anonfun$makeNode$1;
   0      6      1    g       Lscala/Function1;


public scala.Function1 compose(scala.Function1);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#82; //Method scala/Function1$class.compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
   5:	areturn
  LineNumberTable: 
   line 51: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/factory/NodeFactory$$anonfun$makeNode$1;
   0      6      1    g       Lscala/Function1;


public java.lang.String toString();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokestatic	#87; //Method scala/Function1$class.toString:(Lscala/Function1;)Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 51: 0


}

