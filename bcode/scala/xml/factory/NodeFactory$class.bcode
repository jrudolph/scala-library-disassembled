Compiled from "NodeFactory.scala"
public abstract class scala.xml.factory.NodeFactory$class extends java.lang.Object
  SourceFile: "NodeFactory.scala"
  Scala: length = 0x
   
  InnerClass: 
   public final #266= #132 of #8; //$anonfun$makeNode$1=class scala/xml/factory/NodeFactory$$anonfun$makeNode$1 of class scala/xml/factory/NodeFactory
   public final #267= #240 of #8; //$anonfun$eqElements$1=class scala/xml/factory/NodeFactory$$anonfun$eqElements$1 of class scala/xml/factory/NodeFactory
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	NodeFactory.scala;
const #3 = Asciz	$init$;
const #4 = Asciz	(Lscala/xml/factory/NodeFactory;)V;
const #5 = Asciz	Code;
const #6 = Asciz	LineNumberTable;
const #7 = Asciz	scala/xml/factory/NodeFactory;
const #8 = class	#7;	//  scala/xml/factory/NodeFactory
const #9 = Asciz	scala$xml$factory$NodeFactory$_setter_$ignoreComments_$eq;
const #10 = Asciz	(Z)V;
const #11 = NameAndType	#9:#10;//  scala$xml$factory$NodeFactory$_setter_$ignoreComments_$eq:(Z)V
const #12 = InterfaceMethod	#8.#11;	//  scala/xml/factory/NodeFactory.scala$xml$factory$NodeFactory$_setter_$ignoreComments_$eq:(Z)V
const #13 = Asciz	scala$xml$factory$NodeFactory$_setter_$ignoreProcInstr_$eq;
const #14 = NameAndType	#13:#10;//  scala$xml$factory$NodeFactory$_setter_$ignoreProcInstr_$eq:(Z)V
const #15 = InterfaceMethod	#8.#14;	//  scala/xml/factory/NodeFactory.scala$xml$factory$NodeFactory$_setter_$ignoreProcInstr_$eq:(Z)V
const #16 = Asciz	scala/collection/mutable/HashMap;
const #17 = class	#16;	//  scala/collection/mutable/HashMap
const #18 = Asciz	<init>;
const #19 = Asciz	()V;
const #20 = NameAndType	#18:#19;//  "<init>":()V
const #21 = Method	#17.#20;	//  scala/collection/mutable/HashMap."<init>":()V
const #22 = Asciz	scala$xml$factory$NodeFactory$_setter_$cache_$eq;
const #23 = Asciz	(Lscala/collection/mutable/HashMap;)V;
const #24 = NameAndType	#22:#23;//  scala$xml$factory$NodeFactory$_setter_$cache_$eq:(Lscala/collection/mutable/HashMap;)V
const #25 = InterfaceMethod	#8.#24;	//  scala/xml/factory/NodeFactory.scala$xml$factory$NodeFactory$_setter_$cache_$eq:(Lscala/collection/mutable/HashMap;)V
const #26 = Asciz	$this;
const #27 = Asciz	Lscala/xml/factory/NodeFactory;;
const #28 = Asciz	LocalVariableTable;
const #29 = Asciz	cons$1;
const #30 = Asciz	(Lscala/xml/factory/NodeFactory;Lscala/collection/immutable/List;Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Sequence;I)Lscala/xml/Node;;
const #31 = Asciz	construct;
const #32 = Asciz	(ILscala/collection/immutable/List;Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Sequence;)Lscala/xml/Node;;
const #33 = NameAndType	#31:#32;//  construct:(ILscala/collection/immutable/List;Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Sequence;)Lscala/xml/Node;
const #34 = InterfaceMethod	#8.#33;	//  scala/xml/factory/NodeFactory.construct:(ILscala/collection/immutable/List;Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Sequence;)Lscala/xml/Node;
const #35 = Asciz	old;
const #36 = Asciz	Lscala/collection/immutable/List;;
const #37 = Asciz	makeProcInstr;
const #38 = Asciz	(Lscala/xml/factory/NodeFactory;Ljava/lang/String;Ljava/lang/String;)Lscala/collection/Sequence;;
const #39 = Asciz	ignoreProcInstr;
const #40 = Asciz	()Z;
const #41 = NameAndType	#39:#40;//  ignoreProcInstr:()Z
const #42 = InterfaceMethod	#8.#41;	//  scala/xml/factory/NodeFactory.ignoreProcInstr:()Z
const #43 = Asciz	scala/collection/immutable/Nil$;
const #44 = class	#43;	//  scala/collection/immutable/Nil$
const #45 = Asciz	MODULE$;
const #46 = Asciz	Lscala/collection/immutable/Nil$;;
const #47 = NameAndType	#45:#46;//  MODULE$:Lscala/collection/immutable/Nil$;
const #48 = Field	#44.#47;	//  scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
const #49 = Asciz	scala/collection/immutable/List$;
const #50 = class	#49;	//  scala/collection/immutable/List$
const #51 = Asciz	Lscala/collection/immutable/List$;;
const #52 = NameAndType	#45:#51;//  MODULE$:Lscala/collection/immutable/List$;
const #53 = Field	#50.#52;	//  scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
const #54 = Asciz	scala/runtime/ScalaRunTime$;
const #55 = class	#54;	//  scala/runtime/ScalaRunTime$
const #56 = Asciz	Lscala/runtime/ScalaRunTime$;;
const #57 = NameAndType	#45:#56;//  MODULE$:Lscala/runtime/ScalaRunTime$;
const #58 = Field	#55.#57;	//  scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
const #59 = Asciz	scala/xml/ProcInstr;
const #60 = class	#59;	//  scala/xml/ProcInstr
const #61 = Asciz	(Ljava/lang/String;Ljava/lang/String;)V;
const #62 = NameAndType	#18:#61;//  "<init>":(Ljava/lang/String;Ljava/lang/String;)V
const #63 = Method	#60.#62;	//  scala/xml/ProcInstr."<init>":(Ljava/lang/String;Ljava/lang/String;)V
const #64 = Asciz	boxArray;
const #65 = Asciz	(Ljava/lang/Object;)Lscala/runtime/BoxedArray;;
const #66 = NameAndType	#64:#65;//  boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
const #67 = Method	#55.#66;	//  scala/runtime/ScalaRunTime$.boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
const #68 = Asciz	apply;
const #69 = Asciz	(Lscala/collection/Sequence;)Lscala/collection/immutable/List;;
const #70 = NameAndType	#68:#69;//  apply:(Lscala/collection/Sequence;)Lscala/collection/immutable/List;
const #71 = Method	#50.#70;	//  scala/collection/immutable/List$.apply:(Lscala/collection/Sequence;)Lscala/collection/immutable/List;
const #72 = Asciz	t;
const #73 = Asciz	Ljava/lang/String;;
const #74 = Asciz	s;
const #75 = Asciz	makeComment;
const #76 = Asciz	(Lscala/xml/factory/NodeFactory;Ljava/lang/String;)Lscala/collection/Sequence;;
const #77 = Asciz	ignoreComments;
const #78 = NameAndType	#77:#40;//  ignoreComments:()Z
const #79 = InterfaceMethod	#8.#78;	//  scala/xml/factory/NodeFactory.ignoreComments:()Z
const #80 = Asciz	scala/xml/Comment;
const #81 = class	#80;	//  scala/xml/Comment
const #82 = Asciz	(Ljava/lang/String;)V;
const #83 = NameAndType	#18:#82;//  "<init>":(Ljava/lang/String;)V
const #84 = Method	#81.#83;	//  scala/xml/Comment."<init>":(Ljava/lang/String;)V
const #85 = Asciz	makeText;
const #86 = Asciz	(Lscala/xml/factory/NodeFactory;Ljava/lang/String;)Lscala/xml/Text;;
const #87 = Asciz	scala/xml/Text;
const #88 = class	#87;	//  scala/xml/Text
const #89 = Method	#88.#83;	//  scala/xml/Text."<init>":(Ljava/lang/String;)V
const #90 = Asciz	makeNode;
const #91 = Asciz	(Lscala/xml/factory/NodeFactory;Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Sequence;)Lscala/xml/Node;;
const #92 = Asciz	scala/xml/Utility$;
const #93 = class	#92;	//  scala/xml/Utility$
const #94 = Asciz	Lscala/xml/Utility$;;
const #95 = NameAndType	#45:#94;//  MODULE$:Lscala/xml/Utility$;
const #96 = Field	#93.#95;	//  scala/xml/Utility$.MODULE$:Lscala/xml/Utility$;
const #97 = Asciz	scala/xml/MetaData;
const #98 = class	#97;	//  scala/xml/MetaData
const #99 = Asciz	hashCode;
const #100 = Asciz	()I;
const #101 = NameAndType	#99:#100;//  hashCode:()I
const #102 = Method	#98.#101;	//  scala/xml/MetaData.hashCode:()I
const #103 = Asciz	scala/xml/NamespaceBinding;
const #104 = class	#103;	//  scala/xml/NamespaceBinding
const #105 = Method	#104.#101;	//  scala/xml/NamespaceBinding.hashCode:()I
const #106 = Asciz	(Ljava/lang/String;Ljava/lang/String;IILscala/collection/Sequence;)I;
const #107 = NameAndType	#99:#106;//  hashCode:(Ljava/lang/String;Ljava/lang/String;IILscala/collection/Sequence;)I
const #108 = Method	#93.#107;	//  scala/xml/Utility$.hashCode:(Ljava/lang/String;Ljava/lang/String;IILscala/collection/Sequence;)I
const #109 = Asciz	cache;
const #110 = Asciz	()Lscala/collection/mutable/HashMap;;
const #111 = NameAndType	#109:#110;//  cache:()Lscala/collection/mutable/HashMap;
const #112 = InterfaceMethod	#8.#111;	//  scala/xml/factory/NodeFactory.cache:()Lscala/collection/mutable/HashMap;
const #113 = Asciz	scala/runtime/BoxesRunTime;
const #114 = class	#113;	//  scala/runtime/BoxesRunTime
const #115 = Asciz	boxToInteger;
const #116 = Asciz	(I)Ljava/lang/Integer;;
const #117 = NameAndType	#115:#116;//  boxToInteger:(I)Ljava/lang/Integer;
const #118 = Method	#114.#117;	//  scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
const #119 = Asciz	get;
const #120 = Asciz	(Ljava/lang/Object;)Lscala/Option;;
const #121 = NameAndType	#119:#120;//  get:(Ljava/lang/Object;)Lscala/Option;
const #122 = Method	#17.#121;	//  scala/collection/mutable/HashMap.get:(Ljava/lang/Object;)Lscala/Option;
const #123 = Asciz	scala/Some;
const #124 = class	#123;	//  scala/Some
const #125 = Asciz	x;
const #126 = Asciz	()Ljava/lang/Object;;
const #127 = NameAndType	#125:#126;//  x:()Ljava/lang/Object;
const #128 = Method	#124.#127;	//  scala/Some.x:()Ljava/lang/Object;
const #129 = Asciz	scala/collection/immutable/List;
const #130 = class	#129;	//  scala/collection/immutable/List
const #131 = Asciz	scala/xml/factory/NodeFactory$$anonfun$makeNode$1;
const #132 = class	#131;	//  scala/xml/factory/NodeFactory$$anonfun$makeNode$1
const #133 = Asciz	(Lscala/xml/factory/NodeFactory;Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Sequence;)V;
const #134 = NameAndType	#18:#133;//  "<init>":(Lscala/xml/factory/NodeFactory;Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Sequence;)V
const #135 = Method	#132.#134;	//  scala/xml/factory/NodeFactory$$anonfun$makeNode$1."<init>":(Lscala/xml/factory/NodeFactory;Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Sequence;)V
const #136 = Asciz	scala/collection/generic/LinearSequenceTemplate;
const #137 = class	#136;	//  scala/collection/generic/LinearSequenceTemplate
const #138 = Asciz	find;
const #139 = Asciz	(Lscala/Function1;)Lscala/Option;;
const #140 = NameAndType	#138:#139;//  find:(Lscala/Function1;)Lscala/Option;
const #141 = InterfaceMethod	#137.#140;	//  scala/collection/generic/LinearSequenceTemplate.find:(Lscala/Function1;)Lscala/Option;
const #142 = Asciz	scala/xml/Node;
const #143 = class	#142;	//  scala/xml/Node
const #144 = Asciz	scala/xml/factory/NodeFactory$class;
const #145 = class	#144;	//  scala/xml/factory/NodeFactory$class
const #146 = NameAndType	#29:#30;//  cons$1:(Lscala/xml/factory/NodeFactory;Lscala/collection/immutable/List;Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Sequence;I)Lscala/xml/Node;
const #147 = Method	#145.#146;	//  scala/xml/factory/NodeFactory$class.cons$1:(Lscala/xml/factory/NodeFactory;Lscala/collection/immutable/List;Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Sequence;I)Lscala/xml/Node;
const #148 = Asciz	scala/None$;
const #149 = class	#148;	//  scala/None$
const #150 = Asciz	Lscala/None$;;
const #151 = NameAndType	#45:#150;//  MODULE$:Lscala/None$;
const #152 = Field	#149.#151;	//  scala/None$.MODULE$:Lscala/None$;
const #153 = Asciz	java/lang/Object;
const #154 = class	#153;	//  java/lang/Object
const #155 = Asciz	equals;
const #156 = Asciz	(Ljava/lang/Object;)Z;
const #157 = NameAndType	#155:#156;//  equals:(Ljava/lang/Object;)Z
const #158 = Method	#154.#157;	//  java/lang/Object.equals:(Ljava/lang/Object;)Z
const #159 = Asciz	scala/MatchError;
const #160 = class	#159;	//  scala/MatchError
const #161 = Asciz	scala/Option;
const #162 = class	#161;	//  scala/Option
const #163 = Asciz	toString;
const #164 = Asciz	()Ljava/lang/String;;
const #165 = NameAndType	#163:#164;//  toString:()Ljava/lang/String;
const #166 = Method	#162.#165;	//  scala/Option.toString:()Ljava/lang/String;
const #167 = Method	#160.#83;	//  scala/MatchError."<init>":(Ljava/lang/String;)V
const #168 = Asciz	pre$1;
const #169 = Asciz	name$1;
const #170 = Asciz	attrSeq$1;
const #171 = Asciz	Lscala/xml/MetaData;;
const #172 = Asciz	scope$1;
const #173 = Asciz	Lscala/xml/NamespaceBinding;;
const #174 = Asciz	children$1;
const #175 = Asciz	Lscala/collection/Sequence;;
const #176 = Asciz	hash$1;
const #177 = Asciz	I;
const #178 = Asciz	temp7;
const #179 = Asciz	Lscala/Option;;
const #180 = Asciz	temp8;
const #181 = Asciz	Lscala/Some;;
const #182 = Asciz	temp9;
const #183 = Asciz	list;
const #184 = Asciz	temp4;
const #185 = Asciz	temp5;
const #186 = Asciz	temp6;
const #187 = Asciz	Lscala/xml/Node;;
const #188 = Asciz	nodeEquals;
const #189 = Asciz	(Lscala/xml/factory/NodeFactory;Lscala/xml/Node;Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Sequence;)Z;
const #190 = Asciz	prefix;
const #191 = NameAndType	#190:#164;//  prefix:()Ljava/lang/String;
const #192 = Method	#143.#191;	//  scala/xml/Node.prefix:()Ljava/lang/String;
const #193 = Asciz	label;
const #194 = NameAndType	#193:#164;//  label:()Ljava/lang/String;
const #195 = Method	#143.#194;	//  scala/xml/Node.label:()Ljava/lang/String;
const #196 = Asciz	attributes;
const #197 = Asciz	()Lscala/xml/MetaData;;
const #198 = NameAndType	#196:#197;//  attributes:()Lscala/xml/MetaData;
const #199 = Method	#143.#198;	//  scala/xml/Node.attributes:()Lscala/xml/MetaData;
const #200 = Asciz	child;
const #201 = Asciz	()Lscala/collection/Sequence;;
const #202 = NameAndType	#200:#201;//  child:()Lscala/collection/Sequence;
const #203 = Method	#143.#202;	//  scala/xml/Node.child:()Lscala/collection/Sequence;
const #204 = Asciz	eqElements;
const #205 = Asciz	(Lscala/collection/Sequence;Lscala/collection/Sequence;)Z;
const #206 = NameAndType	#204:#205;//  eqElements:(Lscala/collection/Sequence;Lscala/collection/Sequence;)Z
const #207 = InterfaceMethod	#8.#206;	//  scala/xml/factory/NodeFactory.eqElements:(Lscala/collection/Sequence;Lscala/collection/Sequence;)Z
const #208 = Asciz	n;
const #209 = Asciz	pre;
const #210 = Asciz	name;
const #211 = Asciz	attrSeq;
const #212 = Asciz	scope;
const #213 = Asciz	children;
const #214 = Asciz	(Lscala/xml/factory/NodeFactory;Lscala/collection/Sequence;Lscala/collection/Sequence;)Z;
const #215 = Asciz	scala/collection/generic/SequenceTemplate;
const #216 = class	#215;	//  scala/collection/generic/SequenceTemplate
const #217 = Asciz	view;
const #218 = NameAndType	#217:#126;//  view:()Ljava/lang/Object;
const #219 = InterfaceMethod	#216.#218;	//  scala/collection/generic/SequenceTemplate.view:()Ljava/lang/Object;
const #220 = Asciz	scala/collection/generic/SequenceViewTemplate;
const #221 = class	#220;	//  scala/collection/generic/SequenceViewTemplate
const #222 = Asciz	scala/collection/Sequence;
const #223 = class	#222;	//  scala/collection/Sequence
const #224 = Asciz	scala/collection/generic/SequenceView$;
const #225 = class	#224;	//  scala/collection/generic/SequenceView$
const #226 = Asciz	Lscala/collection/generic/SequenceView$;;
const #227 = NameAndType	#45:#226;//  MODULE$:Lscala/collection/generic/SequenceView$;
const #228 = Field	#225.#227;	//  scala/collection/generic/SequenceView$.MODULE$:Lscala/collection/generic/SequenceView$;
const #229 = Asciz	builderFactory;
const #230 = Asciz	()Lscala/collection/generic/BuilderFactory;;
const #231 = NameAndType	#229:#230;//  builderFactory:()Lscala/collection/generic/BuilderFactory;
const #232 = Method	#225.#231;	//  scala/collection/generic/SequenceView$.builderFactory:()Lscala/collection/generic/BuilderFactory;
const #233 = Asciz	zipAll;
const #234 = Asciz	(Lscala/collection/Sequence;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/generic/BuilderFactory;)Ljava/lang/Object;;
const #235 = NameAndType	#233:#234;//  zipAll:(Lscala/collection/Sequence;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/generic/BuilderFactory;)Ljava/lang/Object;
const #236 = InterfaceMethod	#221.#235;	//  scala/collection/generic/SequenceViewTemplate.zipAll:(Lscala/collection/Sequence;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/generic/BuilderFactory;)Ljava/lang/Object;
const #237 = Asciz	scala/collection/generic/TraversableTemplate;
const #238 = class	#237;	//  scala/collection/generic/TraversableTemplate
const #239 = Asciz	scala/xml/factory/NodeFactory$$anonfun$eqElements$1;
const #240 = class	#239;	//  scala/xml/factory/NodeFactory$$anonfun$eqElements$1
const #241 = NameAndType	#18:#4;//  "<init>":(Lscala/xml/factory/NodeFactory;)V
const #242 = Method	#240.#241;	//  scala/xml/factory/NodeFactory$$anonfun$eqElements$1."<init>":(Lscala/xml/factory/NodeFactory;)V
const #243 = Asciz	forall;
const #244 = Asciz	(Lscala/Function1;)Z;
const #245 = NameAndType	#243:#244;//  forall:(Lscala/Function1;)Z
const #246 = InterfaceMethod	#238.#245;	//  scala/collection/generic/TraversableTemplate.forall:(Lscala/Function1;)Z
const #247 = Asciz	ch1;
const #248 = Asciz	ch2;
const #249 = Asciz	(Lscala/xml/factory/NodeFactory;ILscala/collection/immutable/List;Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Sequence;)Lscala/xml/Node;;
const #250 = Asciz	create;
const #251 = Asciz	(Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Sequence;)Lscala/xml/Node;;
const #252 = NameAndType	#250:#251;//  create:(Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Sequence;)Lscala/xml/Node;
const #253 = InterfaceMethod	#8.#252;	//  scala/xml/factory/NodeFactory.create:(Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Sequence;)Lscala/xml/Node;
const #254 = Asciz	$colon$colon;
const #255 = Asciz	(Ljava/lang/Object;)Lscala/collection/immutable/List;;
const #256 = NameAndType	#254:#255;//  $colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
const #257 = Method	#130.#256;	//  scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
const #258 = Asciz	update;
const #259 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)V;
const #260 = NameAndType	#258:#259;//  update:(Ljava/lang/Object;Ljava/lang/Object;)V
const #261 = Method	#17.#260;	//  scala/collection/mutable/HashMap.update:(Ljava/lang/Object;Ljava/lang/Object;)V
const #262 = Asciz	hash;
const #263 = Asciz	el;
const #264 = Asciz	Scala;
const #265 = Asciz	InnerClasses;
const #266 = Asciz	$anonfun$makeNode$1;
const #267 = Asciz	$anonfun$eqElements$1;

{
public static void $init$(scala.xml.factory.NodeFactory);
  Code:
   Stack=3, Locals=1, Args_size=1
   0:	aload_0
   1:	iconst_0
   2:	invokeinterface	#12,  2; //InterfaceMethod scala/xml/factory/NodeFactory.scala$xml$factory$NodeFactory$_setter_$ignoreComments_$eq:(Z)V
   7:	aload_0
   8:	iconst_0
   9:	invokeinterface	#15,  2; //InterfaceMethod scala/xml/factory/NodeFactory.scala$xml$factory$NodeFactory$_setter_$ignoreProcInstr_$eq:(Z)V
   14:	aload_0
   15:	new	#17; //class scala/collection/mutable/HashMap
   18:	dup
   19:	invokespecial	#21; //Method scala/collection/mutable/HashMap."<init>":()V
   22:	invokeinterface	#25,  2; //InterfaceMethod scala/xml/factory/NodeFactory.scala$xml$factory$NodeFactory$_setter_$cache_$eq:(Lscala/collection/mutable/HashMap;)V
   27:	return
  LineNumberTable: 
   line 21: 0
   line 22: 7
   line 25: 14

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      28      0    $this       Lscala/xml/factory/NodeFactory;


public static scala.collection.Sequence makeProcInstr(scala.xml.factory.NodeFactory, java.lang.String, java.lang.String);
  Code:
   Stack=9, Locals=3, Args_size=3
   0:	aload_0
   1:	invokeinterface	#42,  1; //InterfaceMethod scala/xml/factory/NodeFactory.ignoreProcInstr:()Z
   6:	ifeq	15
   9:	getstatic	#48; //Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
   12:	goto	43
   15:	getstatic	#53; //Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
   18:	getstatic	#58; //Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   21:	iconst_1
   22:	anewarray	#60; //class scala/xml/ProcInstr
   25:	dup
   26:	iconst_0
   27:	new	#60; //class scala/xml/ProcInstr
   30:	dup
   31:	aload_1
   32:	aload_2
   33:	invokespecial	#63; //Method scala/xml/ProcInstr."<init>":(Ljava/lang/String;Ljava/lang/String;)V
   36:	aastore
   37:	invokevirtual	#67; //Method scala/runtime/ScalaRunTime$.boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
   40:	invokevirtual	#71; //Method scala/collection/immutable/List$.apply:(Lscala/collection/Sequence;)Lscala/collection/immutable/List;
   43:	areturn
  LineNumberTable: 
   line 63: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      44      0    $this       Lscala/xml/factory/NodeFactory;
   0      44      1    t       Ljava/lang/String;
   0      44      2    s       Ljava/lang/String;


public static scala.collection.Sequence makeComment(scala.xml.factory.NodeFactory, java.lang.String);
  Code:
   Stack=8, Locals=2, Args_size=2
   0:	aload_0
   1:	invokeinterface	#79,  1; //InterfaceMethod scala/xml/factory/NodeFactory.ignoreComments:()Z
   6:	ifeq	15
   9:	getstatic	#48; //Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
   12:	goto	42
   15:	getstatic	#53; //Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
   18:	getstatic	#58; //Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   21:	iconst_1
   22:	anewarray	#81; //class scala/xml/Comment
   25:	dup
   26:	iconst_0
   27:	new	#81; //class scala/xml/Comment
   30:	dup
   31:	aload_1
   32:	invokespecial	#84; //Method scala/xml/Comment."<init>":(Ljava/lang/String;)V
   35:	aastore
   36:	invokevirtual	#67; //Method scala/runtime/ScalaRunTime$.boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
   39:	invokevirtual	#71; //Method scala/collection/immutable/List$.apply:(Lscala/collection/Sequence;)Lscala/collection/immutable/List;
   42:	areturn
  LineNumberTable: 
   line 61: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      43      0    $this       Lscala/xml/factory/NodeFactory;
   0      43      1    s       Ljava/lang/String;


public static scala.xml.Text makeText(scala.xml.factory.NodeFactory, java.lang.String);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	new	#88; //class scala/xml/Text
   3:	dup
   4:	aload_1
   5:	invokespecial	#89; //Method scala/xml/Text."<init>":(Ljava/lang/String;)V
   8:	areturn
  LineNumberTable: 
   line 59: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    $this       Lscala/xml/factory/NodeFactory;
   0      9      1    s       Ljava/lang/String;


public static scala.xml.Node makeNode(scala.xml.factory.NodeFactory, java.lang.String, java.lang.String, scala.xml.MetaData, scala.xml.NamespaceBinding, scala.collection.Sequence);
  Code:
   Stack=9, Locals=15, Args_size=6
   0:	getstatic	#96; //Field scala/xml/Utility$.MODULE$:Lscala/xml/Utility$;
   3:	aload_1
   4:	aload_2
   5:	aload_3
   6:	invokevirtual	#102; //Method scala/xml/MetaData.hashCode:()I
   9:	aload	4
   11:	invokevirtual	#105; //Method scala/xml/NamespaceBinding.hashCode:()I
   14:	aload	5
   16:	invokevirtual	#108; //Method scala/xml/Utility$.hashCode:(Ljava/lang/String;Ljava/lang/String;IILscala/collection/Sequence;)I
   19:	istore	6
   21:	aload_0
   22:	invokeinterface	#112,  1; //InterfaceMethod scala/xml/factory/NodeFactory.cache:()Lscala/collection/mutable/HashMap;
   27:	iload	6
   29:	invokestatic	#118; //Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   32:	invokevirtual	#122; //Method scala/collection/mutable/HashMap.get:(Ljava/lang/Object;)Lscala/Option;
   35:	astore	7
   37:	aload	7
   39:	instanceof	#124; //class scala/Some
   42:	ifeq	138
   45:	aload	7
   47:	checkcast	#124; //class scala/Some
   50:	astore	8
   52:	aload	8
   54:	invokevirtual	#128; //Method scala/Some.x:()Ljava/lang/Object;
   57:	checkcast	#130; //class scala/collection/immutable/List
   60:	astore	9
   62:	aload	9
   64:	astore	10
   66:	aload	10
   68:	new	#132; //class scala/xml/factory/NodeFactory$$anonfun$makeNode$1
   71:	dup
   72:	aload_0
   73:	aload_1
   74:	aload_2
   75:	aload_3
   76:	aload	4
   78:	aload	5
   80:	invokespecial	#135; //Method scala/xml/factory/NodeFactory$$anonfun$makeNode$1."<init>":(Lscala/xml/factory/NodeFactory;Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Sequence;)V
   83:	invokeinterface	#141,  2; //InterfaceMethod scala/collection/generic/LinearSequenceTemplate.find:(Lscala/Function1;)Lscala/Option;
   88:	astore	11
   90:	aload	11
   92:	instanceof	#124; //class scala/Some
   95:	ifeq	120
   98:	aload	11
   100:	checkcast	#124; //class scala/Some
   103:	astore	12
   105:	aload	12
   107:	invokevirtual	#128; //Method scala/Some.x:()Ljava/lang/Object;
   110:	checkcast	#143; //class scala/xml/Node
   113:	astore	13
   115:	aload	13
   117:	goto	190
   120:	aload_0
   121:	aload	10
   123:	aload_1
   124:	aload_2
   125:	aload_3
   126:	aload	4
   128:	aload	5
   130:	iload	6
   132:	invokestatic	#147; //Method cons$1:(Lscala/xml/factory/NodeFactory;Lscala/collection/immutable/List;Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Sequence;I)Lscala/xml/Node;
   135:	goto	190
   138:	getstatic	#152; //Field scala/None$.MODULE$:Lscala/None$;
   141:	aload	7
   143:	astore	14
   145:	dup
   146:	ifnonnull	158
   149:	pop
   150:	aload	14
   152:	ifnull	166
   155:	goto	191
   158:	aload	14
   160:	invokevirtual	#158; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   163:	ifeq	191
   166:	aload	7
   168:	instanceof	#149; //class scala/None$
   171:	ifeq	191
   174:	aload_0
   175:	getstatic	#48; //Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
   178:	aload_1
   179:	aload_2
   180:	aload_3
   181:	aload	4
   183:	aload	5
   185:	iload	6
   187:	invokestatic	#147; //Method cons$1:(Lscala/xml/factory/NodeFactory;Lscala/collection/immutable/List;Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Sequence;I)Lscala/xml/Node;
   190:	areturn
   191:	new	#160; //class scala/MatchError
   194:	dup
   195:	aload	7
   197:	invokevirtual	#166; //Method scala/Option.toString:()Ljava/lang/String;
   200:	invokespecial	#167; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   203:	athrow
  LineNumberTable: 
   line 46: 0
   line 49: 21
   line 50: 62
   line 51: 66
   line 52: 115
   line 53: 120
   line 49: 138
   line 55: 174
   line 45: 190
   line 49: 191

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      204      0    $this       Lscala/xml/factory/NodeFactory;
   0      204      1    pre$1       Ljava/lang/String;
   0      204      2    name$1       Ljava/lang/String;
   0      204      3    attrSeq$1       Lscala/xml/MetaData;
   0      204      4    scope$1       Lscala/xml/NamespaceBinding;
   0      204      5    children$1       Lscala/collection/Sequence;
   21      183      6    hash$1       I
   37      167      7    temp7       Lscala/Option;
   52      86      8    temp8       Lscala/Some;
   62      76      9    temp9       Lscala/collection/immutable/List;
   66      72      10    list       Lscala/collection/immutable/List;
   90      48      11    temp4       Lscala/Option;
   105      12      12    temp5       Lscala/Some;
   115      2      13    temp6       Lscala/xml/Node;


public static boolean nodeEquals(scala.xml.factory.NodeFactory, scala.xml.Node, java.lang.String, java.lang.String, scala.xml.MetaData, scala.xml.NamespaceBinding, scala.collection.Sequence);
  Code:
   Stack=3, Locals=10, Args_size=7
   0:	aload_1
   1:	invokevirtual	#192; //Method scala/xml/Node.prefix:()Ljava/lang/String;
   4:	aload_2
   5:	astore	7
   7:	dup
   8:	ifnonnull	20
   11:	pop
   12:	aload	7
   14:	ifnull	28
   17:	goto	104
   20:	aload	7
   22:	invokevirtual	#158; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   25:	ifeq	104
   28:	aload_1
   29:	invokevirtual	#195; //Method scala/xml/Node.label:()Ljava/lang/String;
   32:	aload_3
   33:	astore	8
   35:	dup
   36:	ifnonnull	48
   39:	pop
   40:	aload	8
   42:	ifnull	56
   45:	goto	104
   48:	aload	8
   50:	invokevirtual	#158; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   53:	ifeq	104
   56:	aload_1
   57:	invokevirtual	#199; //Method scala/xml/Node.attributes:()Lscala/xml/MetaData;
   60:	aload	4
   62:	astore	9
   64:	dup
   65:	ifnonnull	77
   68:	pop
   69:	aload	9
   71:	ifnull	85
   74:	goto	104
   77:	aload	9
   79:	invokevirtual	#158; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   82:	ifeq	104
   85:	aload_0
   86:	aload_1
   87:	invokevirtual	#203; //Method scala/xml/Node.child:()Lscala/collection/Sequence;
   90:	aload	6
   92:	invokeinterface	#207,  3; //InterfaceMethod scala/xml/factory/NodeFactory.eqElements:(Lscala/collection/Sequence;Lscala/collection/Sequence;)Z
   97:	ifeq	104
   100:	iconst_1
   101:	goto	105
   104:	iconst_0
   105:	ireturn
  LineNumberTable: 
   line 39: 0
   line 40: 28
   line 41: 56
   line 43: 85
   line 41: 100

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      106      0    $this       Lscala/xml/factory/NodeFactory;
   0      106      1    n       Lscala/xml/Node;
   0      106      2    pre       Ljava/lang/String;
   0      106      3    name       Ljava/lang/String;
   0      106      4    attrSeq       Lscala/xml/MetaData;
   0      106      5    scope       Lscala/xml/NamespaceBinding;
   0      106      6    children       Lscala/collection/Sequence;


public static boolean eqElements(scala.xml.factory.NodeFactory, scala.collection.Sequence, scala.collection.Sequence);
  Code:
   Stack=5, Locals=5, Args_size=3
   0:	aload_1
   1:	invokeinterface	#219,  1; //InterfaceMethod scala/collection/generic/SequenceTemplate.view:()Ljava/lang/Object;
   6:	checkcast	#221; //class scala/collection/generic/SequenceViewTemplate
   9:	aload_2
   10:	invokeinterface	#219,  1; //InterfaceMethod scala/collection/generic/SequenceTemplate.view:()Ljava/lang/Object;
   15:	astore	4
   17:	aload	4
   19:	instanceof	#223; //class scala/collection/Sequence
   22:	ifeq	30
   25:	aload	4
   27:	goto	38
   30:	getstatic	#58; //Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   33:	aload	4
   35:	invokevirtual	#67; //Method scala/runtime/ScalaRunTime$.boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
   38:	checkcast	#223; //class scala/collection/Sequence
   41:	aconst_null
   42:	pop
   43:	aconst_null
   44:	aconst_null
   45:	pop
   46:	aconst_null
   47:	getstatic	#228; //Field scala/collection/generic/SequenceView$.MODULE$:Lscala/collection/generic/SequenceView$;
   50:	invokevirtual	#232; //Method scala/collection/generic/SequenceView$.builderFactory:()Lscala/collection/generic/BuilderFactory;
   53:	invokeinterface	#236,  5; //InterfaceMethod scala/collection/generic/SequenceViewTemplate.zipAll:(Lscala/collection/Sequence;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/generic/BuilderFactory;)Ljava/lang/Object;
   58:	astore_3
   59:	aload_3
   60:	instanceof	#238; //class scala/collection/generic/TraversableTemplate
   63:	ifeq	70
   66:	aload_3
   67:	goto	77
   70:	getstatic	#58; //Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   73:	aload_3
   74:	invokevirtual	#67; //Method scala/runtime/ScalaRunTime$.boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
   77:	checkcast	#238; //class scala/collection/generic/TraversableTemplate
   80:	new	#240; //class scala/xml/factory/NodeFactory$$anonfun$eqElements$1
   83:	dup
   84:	aload_0
   85:	invokespecial	#242; //Method scala/xml/factory/NodeFactory$$anonfun$eqElements$1."<init>":(Lscala/xml/factory/NodeFactory;)V
   88:	invokeinterface	#246,  2; //InterfaceMethod scala/collection/generic/TraversableTemplate.forall:(Lscala/Function1;)Z
   93:	ireturn
  LineNumberTable: 
   line 36: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      94      0    $this       Lscala/xml/factory/NodeFactory;
   0      94      1    ch1       Lscala/collection/Sequence;
   0      94      2    ch2       Lscala/collection/Sequence;


public static scala.xml.Node construct(scala.xml.factory.NodeFactory, int, scala.collection.immutable.List, java.lang.String, java.lang.String, scala.xml.MetaData, scala.xml.NamespaceBinding, scala.collection.Sequence);
  Code:
   Stack=6, Locals=10, Args_size=8
   0:	aload_0
   1:	aload_3
   2:	aload	4
   4:	aload	5
   6:	aload	6
   8:	aload	7
   10:	invokeinterface	#253,  6; //InterfaceMethod scala/xml/factory/NodeFactory.create:(Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Sequence;)Lscala/xml/Node;
   15:	astore	8
   17:	aload_0
   18:	invokeinterface	#112,  1; //InterfaceMethod scala/xml/factory/NodeFactory.cache:()Lscala/collection/mutable/HashMap;
   23:	iload_1
   24:	invokestatic	#118; //Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   27:	aload	8
   29:	astore	9
   31:	aload_2
   32:	aload	9
   34:	invokevirtual	#257; //Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
   37:	invokevirtual	#261; //Method scala/collection/mutable/HashMap.update:(Ljava/lang/Object;Ljava/lang/Object;)V
   40:	aload	8
   42:	areturn
  LineNumberTable: 
   line 30: 0
   line 31: 17
   line 32: 40

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      43      0    $this       Lscala/xml/factory/NodeFactory;
   0      43      1    hash       I
   0      43      2    old       Lscala/collection/immutable/List;
   0      43      3    pre       Ljava/lang/String;
   0      43      4    name       Ljava/lang/String;
   0      43      5    attrSeq       Lscala/xml/MetaData;
   0      43      6    scope       Lscala/xml/NamespaceBinding;
   0      43      7    children       Lscala/collection/Sequence;
   17      25      8    el       Lscala/xml/Node;


}

