Compiled from "NodeFactory.scala"
public abstract class scala.xml.factory.NodeFactory$class extends java.lang.Object
  SourceFile: "NodeFactory.scala"
  Scala: length = 0x
   
  InnerClass: 
   public final #271= #137 of #8; //$anonfun$makeNode$1=class scala/xml/factory/NodeFactory$$anonfun$makeNode$1 of class scala/xml/factory/NodeFactory
   public final #272= #245 of #8; //$anonfun$eqElements$1=class scala/xml/factory/NodeFactory$$anonfun$eqElements$1 of class scala/xml/factory/NodeFactory
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	NodeFactory.scala;
const #3 = Asciz	$init$;
const #4 = Asciz	(Lscala/xml/factory/NodeFactory;)V;
const #5 = Asciz	Code;
const #6 = Asciz	LineNumberTable;
const #7 = Asciz	scala/xml/factory/NodeFactory;
const #8 = class	#7;	//  scala/xml/factory/NodeFactory
const #9 = Asciz	scala$xml$factory$NodeFactory$_setter_$ignoreComments_$eq;
const #10 = Asciz	(Z)V;
const #11 = NameAndType	#9:#10;//  scala$xml$factory$NodeFactory$_setter_$ignoreComments_$eq:(Z)V
const #12 = InterfaceMethod	#8.#11;	//  scala/xml/factory/NodeFactory.scala$xml$factory$NodeFactory$_setter_$ignoreComments_$eq:(Z)V
const #13 = Asciz	scala$xml$factory$NodeFactory$_setter_$ignoreProcInstr_$eq;
const #14 = NameAndType	#13:#10;//  scala$xml$factory$NodeFactory$_setter_$ignoreProcInstr_$eq:(Z)V
const #15 = InterfaceMethod	#8.#14;	//  scala/xml/factory/NodeFactory.scala$xml$factory$NodeFactory$_setter_$ignoreProcInstr_$eq:(Z)V
const #16 = Asciz	scala/collection/mutable/HashMap;
const #17 = class	#16;	//  scala/collection/mutable/HashMap
const #18 = Asciz	<init>;
const #19 = Asciz	()V;
const #20 = NameAndType	#18:#19;//  "<init>":()V
const #21 = Method	#17.#20;	//  scala/collection/mutable/HashMap."<init>":()V
const #22 = Asciz	scala$xml$factory$NodeFactory$_setter_$cache_$eq;
const #23 = Asciz	(Lscala/collection/mutable/HashMap;)V;
const #24 = NameAndType	#22:#23;//  scala$xml$factory$NodeFactory$_setter_$cache_$eq:(Lscala/collection/mutable/HashMap;)V
const #25 = InterfaceMethod	#8.#24;	//  scala/xml/factory/NodeFactory.scala$xml$factory$NodeFactory$_setter_$cache_$eq:(Lscala/collection/mutable/HashMap;)V
const #26 = Asciz	$this;
const #27 = Asciz	Lscala/xml/factory/NodeFactory;;
const #28 = Asciz	LocalVariableTable;
const #29 = Asciz	cons$1;
const #30 = Asciz	(Lscala/xml/factory/NodeFactory;Lscala/collection/immutable/List;Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Seq;I)Lscala/xml/Node;;
const #31 = Asciz	construct;
const #32 = Asciz	(ILscala/collection/immutable/List;Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Seq;)Lscala/xml/Node;;
const #33 = NameAndType	#31:#32;//  construct:(ILscala/collection/immutable/List;Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Seq;)Lscala/xml/Node;
const #34 = InterfaceMethod	#8.#33;	//  scala/xml/factory/NodeFactory.construct:(ILscala/collection/immutable/List;Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Seq;)Lscala/xml/Node;
const #35 = Asciz	old;
const #36 = Asciz	Lscala/collection/immutable/List;;
const #37 = Asciz	makeProcInstr;
const #38 = Asciz	(Lscala/xml/factory/NodeFactory;Ljava/lang/String;Ljava/lang/String;)Lscala/collection/Seq;;
const #39 = Asciz	ignoreProcInstr;
const #40 = Asciz	()Z;
const #41 = NameAndType	#39:#40;//  ignoreProcInstr:()Z
const #42 = InterfaceMethod	#8.#41;	//  scala/xml/factory/NodeFactory.ignoreProcInstr:()Z
const #43 = Asciz	scala/collection/immutable/Nil$;
const #44 = class	#43;	//  scala/collection/immutable/Nil$
const #45 = Asciz	MODULE$;
const #46 = Asciz	Lscala/collection/immutable/Nil$;;
const #47 = NameAndType	#45:#46;//  MODULE$:Lscala/collection/immutable/Nil$;
const #48 = Field	#44.#47;	//  scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
const #49 = Asciz	scala/Predef$;
const #50 = class	#49;	//  scala/Predef$
const #51 = Asciz	Lscala/Predef$;;
const #52 = NameAndType	#45:#51;//  MODULE$:Lscala/Predef$;
const #53 = Field	#50.#52;	//  scala/Predef$.MODULE$:Lscala/Predef$;
const #54 = Asciz	scala/xml/ProcInstr;
const #55 = class	#54;	//  scala/xml/ProcInstr
const #56 = Asciz	(Ljava/lang/String;Ljava/lang/String;)V;
const #57 = NameAndType	#18:#56;//  "<init>":(Ljava/lang/String;Ljava/lang/String;)V
const #58 = Method	#55.#57;	//  scala/xml/ProcInstr."<init>":(Ljava/lang/String;Ljava/lang/String;)V
const #59 = Asciz	[Ljava/lang/Object;;
const #60 = class	#59;	//  "[Ljava/lang/Object;"
const #61 = Asciz	wrapRefArray;
const #62 = Asciz	([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;;
const #63 = NameAndType	#61:#62;//  wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
const #64 = Method	#50.#63;	//  scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
const #65 = Asciz	scala/collection/TraversableLike;
const #66 = class	#65;	//  scala/collection/TraversableLike
const #67 = Asciz	toList;
const #68 = Asciz	()Lscala/collection/immutable/List;;
const #69 = NameAndType	#67:#68;//  toList:()Lscala/collection/immutable/List;
const #70 = InterfaceMethod	#66.#69;	//  scala/collection/TraversableLike.toList:()Lscala/collection/immutable/List;
const #71 = Asciz	t;
const #72 = Asciz	Ljava/lang/String;;
const #73 = Asciz	s;
const #74 = Asciz	makeComment;
const #75 = Asciz	(Lscala/xml/factory/NodeFactory;Ljava/lang/String;)Lscala/collection/Seq;;
const #76 = Asciz	ignoreComments;
const #77 = NameAndType	#76:#40;//  ignoreComments:()Z
const #78 = InterfaceMethod	#8.#77;	//  scala/xml/factory/NodeFactory.ignoreComments:()Z
const #79 = Asciz	scala/xml/Comment;
const #80 = class	#79;	//  scala/xml/Comment
const #81 = Asciz	(Ljava/lang/String;)V;
const #82 = NameAndType	#18:#81;//  "<init>":(Ljava/lang/String;)V
const #83 = Method	#80.#82;	//  scala/xml/Comment."<init>":(Ljava/lang/String;)V
const #84 = Asciz	makeText;
const #85 = Asciz	(Lscala/xml/factory/NodeFactory;Ljava/lang/String;)Lscala/xml/Text;;
const #86 = Asciz	scala/xml/Text$;
const #87 = class	#86;	//  scala/xml/Text$
const #88 = Asciz	Lscala/xml/Text$;;
const #89 = NameAndType	#45:#88;//  MODULE$:Lscala/xml/Text$;
const #90 = Field	#87.#89;	//  scala/xml/Text$.MODULE$:Lscala/xml/Text$;
const #91 = Asciz	apply;
const #92 = Asciz	(Ljava/lang/String;)Lscala/xml/Text;;
const #93 = NameAndType	#91:#92;//  apply:(Ljava/lang/String;)Lscala/xml/Text;
const #94 = Method	#87.#93;	//  scala/xml/Text$.apply:(Ljava/lang/String;)Lscala/xml/Text;
const #95 = Asciz	makeNode;
const #96 = Asciz	(Lscala/xml/factory/NodeFactory;Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Seq;)Lscala/xml/Node;;
const #97 = Asciz	scala/xml/Utility$;
const #98 = class	#97;	//  scala/xml/Utility$
const #99 = Asciz	Lscala/xml/Utility$;;
const #100 = NameAndType	#45:#99;//  MODULE$:Lscala/xml/Utility$;
const #101 = Field	#98.#100;	//  scala/xml/Utility$.MODULE$:Lscala/xml/Utility$;
const #102 = Asciz	scala/xml/MetaData;
const #103 = class	#102;	//  scala/xml/MetaData
const #104 = Asciz	hashCode;
const #105 = Asciz	()I;
const #106 = NameAndType	#104:#105;//  hashCode:()I
const #107 = Method	#103.#106;	//  scala/xml/MetaData.hashCode:()I
const #108 = Asciz	scala/xml/NamespaceBinding;
const #109 = class	#108;	//  scala/xml/NamespaceBinding
const #110 = Method	#109.#106;	//  scala/xml/NamespaceBinding.hashCode:()I
const #111 = Asciz	(Ljava/lang/String;Ljava/lang/String;IILscala/collection/Seq;)I;
const #112 = NameAndType	#104:#111;//  hashCode:(Ljava/lang/String;Ljava/lang/String;IILscala/collection/Seq;)I
const #113 = Method	#98.#112;	//  scala/xml/Utility$.hashCode:(Ljava/lang/String;Ljava/lang/String;IILscala/collection/Seq;)I
const #114 = Asciz	cache;
const #115 = Asciz	()Lscala/collection/mutable/HashMap;;
const #116 = NameAndType	#114:#115;//  cache:()Lscala/collection/mutable/HashMap;
const #117 = InterfaceMethod	#8.#116;	//  scala/xml/factory/NodeFactory.cache:()Lscala/collection/mutable/HashMap;
const #118 = Asciz	scala/runtime/BoxesRunTime;
const #119 = class	#118;	//  scala/runtime/BoxesRunTime
const #120 = Asciz	boxToInteger;
const #121 = Asciz	(I)Ljava/lang/Integer;;
const #122 = NameAndType	#120:#121;//  boxToInteger:(I)Ljava/lang/Integer;
const #123 = Method	#119.#122;	//  scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
const #124 = Asciz	get;
const #125 = Asciz	(Ljava/lang/Object;)Lscala/Option;;
const #126 = NameAndType	#124:#125;//  get:(Ljava/lang/Object;)Lscala/Option;
const #127 = Method	#17.#126;	//  scala/collection/mutable/HashMap.get:(Ljava/lang/Object;)Lscala/Option;
const #128 = Asciz	scala/Some;
const #129 = class	#128;	//  scala/Some
const #130 = Asciz	x;
const #131 = Asciz	Ljava/lang/Object;;
const #132 = NameAndType	#130:#131;//  x:Ljava/lang/Object;
const #133 = Field	#129.#132;	//  scala/Some.x:Ljava/lang/Object;
const #134 = Asciz	scala/collection/immutable/List;
const #135 = class	#134;	//  scala/collection/immutable/List
const #136 = Asciz	scala/xml/factory/NodeFactory$$anonfun$makeNode$1;
const #137 = class	#136;	//  scala/xml/factory/NodeFactory$$anonfun$makeNode$1
const #138 = Asciz	(Lscala/xml/factory/NodeFactory;Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Seq;)V;
const #139 = NameAndType	#18:#138;//  "<init>":(Lscala/xml/factory/NodeFactory;Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Seq;)V
const #140 = Method	#137.#139;	//  scala/xml/factory/NodeFactory$$anonfun$makeNode$1."<init>":(Lscala/xml/factory/NodeFactory;Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Seq;)V
const #141 = Asciz	scala/collection/LinearSeqLike;
const #142 = class	#141;	//  scala/collection/LinearSeqLike
const #143 = Asciz	find;
const #144 = Asciz	(Lscala/Function1;)Lscala/Option;;
const #145 = NameAndType	#143:#144;//  find:(Lscala/Function1;)Lscala/Option;
const #146 = InterfaceMethod	#142.#145;	//  scala/collection/LinearSeqLike.find:(Lscala/Function1;)Lscala/Option;
const #147 = Asciz	scala/xml/Node;
const #148 = class	#147;	//  scala/xml/Node
const #149 = Asciz	scala/MatchError;
const #150 = class	#149;	//  scala/MatchError
const #151 = Asciz	scala/Option;
const #152 = class	#151;	//  scala/Option
const #153 = Asciz	toString;
const #154 = Asciz	()Ljava/lang/String;;
const #155 = NameAndType	#153:#154;//  toString:()Ljava/lang/String;
const #156 = Method	#152.#155;	//  scala/Option.toString:()Ljava/lang/String;
const #157 = Method	#150.#82;	//  scala/MatchError."<init>":(Ljava/lang/String;)V
const #158 = Asciz	scala/xml/factory/NodeFactory$class;
const #159 = class	#158;	//  scala/xml/factory/NodeFactory$class
const #160 = NameAndType	#29:#30;//  cons$1:(Lscala/xml/factory/NodeFactory;Lscala/collection/immutable/List;Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Seq;I)Lscala/xml/Node;
const #161 = Method	#159.#160;	//  scala/xml/factory/NodeFactory$class.cons$1:(Lscala/xml/factory/NodeFactory;Lscala/collection/immutable/List;Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Seq;I)Lscala/xml/Node;
const #162 = Asciz	scala/None$;
const #163 = class	#162;	//  scala/None$
const #164 = Asciz	Lscala/None$;;
const #165 = NameAndType	#45:#164;//  MODULE$:Lscala/None$;
const #166 = Field	#163.#165;	//  scala/None$.MODULE$:Lscala/None$;
const #167 = Asciz	java/lang/Object;
const #168 = class	#167;	//  java/lang/Object
const #169 = Asciz	equals;
const #170 = Asciz	(Ljava/lang/Object;)Z;
const #171 = NameAndType	#169:#170;//  equals:(Ljava/lang/Object;)Z
const #172 = Method	#168.#171;	//  java/lang/Object.equals:(Ljava/lang/Object;)Z
const #173 = Asciz	pre$1;
const #174 = Asciz	name$1;
const #175 = Asciz	attrSeq$1;
const #176 = Asciz	Lscala/xml/MetaData;;
const #177 = Asciz	scope$1;
const #178 = Asciz	Lscala/xml/NamespaceBinding;;
const #179 = Asciz	children$1;
const #180 = Asciz	Lscala/collection/Seq;;
const #181 = Asciz	temp8;
const #182 = Asciz	Lscala/Some;;
const #183 = Asciz	temp5;
const #184 = Asciz	temp6;
const #185 = Asciz	Lscala/xml/Node;;
const #186 = Asciz	temp9;
const #187 = Asciz	temp4;
const #188 = Asciz	Lscala/Option;;
const #189 = Asciz	hash$1;
const #190 = Asciz	I;
const #191 = Asciz	temp7;
const #192 = Asciz	nodeEquals;
const #193 = Asciz	(Lscala/xml/factory/NodeFactory;Lscala/xml/Node;Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Seq;)Z;
const #194 = Asciz	prefix;
const #195 = NameAndType	#194:#154;//  prefix:()Ljava/lang/String;
const #196 = Method	#148.#195;	//  scala/xml/Node.prefix:()Ljava/lang/String;
const #197 = Asciz	label;
const #198 = NameAndType	#197:#154;//  label:()Ljava/lang/String;
const #199 = Method	#148.#198;	//  scala/xml/Node.label:()Ljava/lang/String;
const #200 = Asciz	attributes;
const #201 = Asciz	()Lscala/xml/MetaData;;
const #202 = NameAndType	#200:#201;//  attributes:()Lscala/xml/MetaData;
const #203 = Method	#148.#202;	//  scala/xml/Node.attributes:()Lscala/xml/MetaData;
const #204 = Asciz	child;
const #205 = Asciz	()Lscala/collection/Seq;;
const #206 = NameAndType	#204:#205;//  child:()Lscala/collection/Seq;
const #207 = Method	#148.#206;	//  scala/xml/Node.child:()Lscala/collection/Seq;
const #208 = Asciz	eqElements;
const #209 = Asciz	(Lscala/collection/Seq;Lscala/collection/Seq;)Z;
const #210 = NameAndType	#208:#209;//  eqElements:(Lscala/collection/Seq;Lscala/collection/Seq;)Z
const #211 = InterfaceMethod	#8.#210;	//  scala/xml/factory/NodeFactory.eqElements:(Lscala/collection/Seq;Lscala/collection/Seq;)Z
const #212 = Asciz	n;
const #213 = Asciz	pre;
const #214 = Asciz	name;
const #215 = Asciz	attrSeq;
const #216 = Asciz	scope;
const #217 = Asciz	children;
const #218 = Asciz	(Lscala/xml/factory/NodeFactory;Lscala/collection/Seq;Lscala/collection/Seq;)Z;
const #219 = Asciz	scala/collection/SeqLike;
const #220 = class	#219;	//  scala/collection/SeqLike
const #221 = Asciz	view;
const #222 = Asciz	()Ljava/lang/Object;;
const #223 = NameAndType	#221:#222;//  view:()Ljava/lang/Object;
const #224 = InterfaceMethod	#220.#223;	//  scala/collection/SeqLike.view:()Ljava/lang/Object;
const #225 = Asciz	scala/collection/IterableViewLike;
const #226 = class	#225;	//  scala/collection/IterableViewLike
const #227 = Asciz	scala/collection/Iterable;
const #228 = class	#227;	//  scala/collection/Iterable
const #229 = Asciz	scala/collection/SeqView$;
const #230 = class	#229;	//  scala/collection/SeqView$
const #231 = Asciz	Lscala/collection/SeqView$;;
const #232 = NameAndType	#45:#231;//  MODULE$:Lscala/collection/SeqView$;
const #233 = Field	#230.#232;	//  scala/collection/SeqView$.MODULE$:Lscala/collection/SeqView$;
const #234 = Asciz	canBuildFrom;
const #235 = Asciz	()Lscala/collection/generic/CanBuildFrom;;
const #236 = NameAndType	#234:#235;//  canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
const #237 = Method	#230.#236;	//  scala/collection/SeqView$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
const #238 = Asciz	zipAll;
const #239 = Asciz	(Lscala/collection/Iterable;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;;
const #240 = NameAndType	#238:#239;//  zipAll:(Lscala/collection/Iterable;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
const #241 = InterfaceMethod	#226.#240;	//  scala/collection/IterableViewLike.zipAll:(Lscala/collection/Iterable;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
const #242 = Asciz	scala/collection/IterableLike;
const #243 = class	#242;	//  scala/collection/IterableLike
const #244 = Asciz	scala/xml/factory/NodeFactory$$anonfun$eqElements$1;
const #245 = class	#244;	//  scala/xml/factory/NodeFactory$$anonfun$eqElements$1
const #246 = NameAndType	#18:#4;//  "<init>":(Lscala/xml/factory/NodeFactory;)V
const #247 = Method	#245.#246;	//  scala/xml/factory/NodeFactory$$anonfun$eqElements$1."<init>":(Lscala/xml/factory/NodeFactory;)V
const #248 = Asciz	forall;
const #249 = Asciz	(Lscala/Function1;)Z;
const #250 = NameAndType	#248:#249;//  forall:(Lscala/Function1;)Z
const #251 = InterfaceMethod	#243.#250;	//  scala/collection/IterableLike.forall:(Lscala/Function1;)Z
const #252 = Asciz	ch1;
const #253 = Asciz	ch2;
const #254 = Asciz	(Lscala/xml/factory/NodeFactory;ILscala/collection/immutable/List;Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Seq;)Lscala/xml/Node;;
const #255 = Asciz	create;
const #256 = Asciz	(Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Seq;)Lscala/xml/Node;;
const #257 = NameAndType	#255:#256;//  create:(Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Seq;)Lscala/xml/Node;
const #258 = InterfaceMethod	#8.#257;	//  scala/xml/factory/NodeFactory.create:(Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Seq;)Lscala/xml/Node;
const #259 = Asciz	$colon$colon;
const #260 = Asciz	(Ljava/lang/Object;)Lscala/collection/immutable/List;;
const #261 = NameAndType	#259:#260;//  $colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
const #262 = Method	#135.#261;	//  scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
const #263 = Asciz	update;
const #264 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)V;
const #265 = NameAndType	#263:#264;//  update:(Ljava/lang/Object;Ljava/lang/Object;)V
const #266 = Method	#17.#265;	//  scala/collection/mutable/HashMap.update:(Ljava/lang/Object;Ljava/lang/Object;)V
const #267 = Asciz	hash;
const #268 = Asciz	el;
const #269 = Asciz	Scala;
const #270 = Asciz	InnerClasses;
const #271 = Asciz	$anonfun$makeNode$1;
const #272 = Asciz	$anonfun$eqElements$1;

{
public static void $init$(scala.xml.factory.NodeFactory);
  Code:
   Stack=3, Locals=1, Args_size=1
   0:	aload_0
   1:	iconst_0
   2:	invokeinterface	#12,  2; //InterfaceMethod scala/xml/factory/NodeFactory.scala$xml$factory$NodeFactory$_setter_$ignoreComments_$eq:(Z)V
   7:	aload_0
   8:	iconst_0
   9:	invokeinterface	#15,  2; //InterfaceMethod scala/xml/factory/NodeFactory.scala$xml$factory$NodeFactory$_setter_$ignoreProcInstr_$eq:(Z)V
   14:	aload_0
   15:	new	#17; //class scala/collection/mutable/HashMap
   18:	dup
   19:	invokespecial	#21; //Method scala/collection/mutable/HashMap."<init>":()V
   22:	invokeinterface	#25,  2; //InterfaceMethod scala/xml/factory/NodeFactory.scala$xml$factory$NodeFactory$_setter_$cache_$eq:(Lscala/collection/mutable/HashMap;)V
   27:	return
  LineNumberTable: 
   line 23: 0
   line 24: 7
   line 27: 14

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      28      0    $this       Lscala/xml/factory/NodeFactory;


public static scala.collection.Seq makeProcInstr(scala.xml.factory.NodeFactory, java.lang.String, java.lang.String);
  Code:
   Stack=8, Locals=4, Args_size=3
   0:	aload_0
   1:	invokeinterface	#42,  1; //InterfaceMethod scala/xml/factory/NodeFactory.ignoreProcInstr:()Z
   6:	ifeq	15
   9:	getstatic	#48; //Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
   12:	goto	47
   15:	getstatic	#53; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   18:	iconst_1
   19:	anewarray	#55; //class scala/xml/ProcInstr
   22:	dup
   23:	iconst_0
   24:	new	#55; //class scala/xml/ProcInstr
   27:	dup
   28:	aload_1
   29:	aload_2
   30:	invokespecial	#58; //Method scala/xml/ProcInstr."<init>":(Ljava/lang/String;Ljava/lang/String;)V
   33:	aastore
   34:	checkcast	#60; //class "[Ljava/lang/Object;"
   37:	invokevirtual	#64; //Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
   40:	astore_3
   41:	aload_3
   42:	invokeinterface	#70,  1; //InterfaceMethod scala/collection/TraversableLike.toList:()Lscala/collection/immutable/List;
   47:	areturn
  LineNumberTable: 
   line 65: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      48      0    $this       Lscala/xml/factory/NodeFactory;
   0      48      1    t       Ljava/lang/String;
   0      48      2    s       Ljava/lang/String;


public static scala.collection.Seq makeComment(scala.xml.factory.NodeFactory, java.lang.String);
  Code:
   Stack=7, Locals=3, Args_size=2
   0:	aload_0
   1:	invokeinterface	#78,  1; //InterfaceMethod scala/xml/factory/NodeFactory.ignoreComments:()Z
   6:	ifeq	15
   9:	getstatic	#48; //Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
   12:	goto	46
   15:	getstatic	#53; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   18:	iconst_1
   19:	anewarray	#80; //class scala/xml/Comment
   22:	dup
   23:	iconst_0
   24:	new	#80; //class scala/xml/Comment
   27:	dup
   28:	aload_1
   29:	invokespecial	#83; //Method scala/xml/Comment."<init>":(Ljava/lang/String;)V
   32:	aastore
   33:	checkcast	#60; //class "[Ljava/lang/Object;"
   36:	invokevirtual	#64; //Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
   39:	astore_2
   40:	aload_2
   41:	invokeinterface	#70,  1; //InterfaceMethod scala/collection/TraversableLike.toList:()Lscala/collection/immutable/List;
   46:	areturn
  LineNumberTable: 
   line 63: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      47      0    $this       Lscala/xml/factory/NodeFactory;
   0      47      1    s       Ljava/lang/String;


public static scala.xml.Text makeText(scala.xml.factory.NodeFactory, java.lang.String);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	getstatic	#90; //Field scala/xml/Text$.MODULE$:Lscala/xml/Text$;
   3:	aload_1
   4:	invokevirtual	#94; //Method scala/xml/Text$.apply:(Ljava/lang/String;)Lscala/xml/Text;
   7:	areturn
  LineNumberTable: 
   line 61: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      8      0    $this       Lscala/xml/factory/NodeFactory;
   0      8      1    s       Ljava/lang/String;


public static scala.xml.Node makeNode(scala.xml.factory.NodeFactory, java.lang.String, java.lang.String, scala.xml.MetaData, scala.xml.NamespaceBinding, scala.collection.Seq);
  Code:
   Stack=9, Locals=13, Args_size=6
   0:	getstatic	#101; //Field scala/xml/Utility$.MODULE$:Lscala/xml/Utility$;
   3:	aload_1
   4:	aload_2
   5:	aload_3
   6:	invokevirtual	#107; //Method scala/xml/MetaData.hashCode:()I
   9:	aload	4
   11:	invokevirtual	#110; //Method scala/xml/NamespaceBinding.hashCode:()I
   14:	aload	5
   16:	invokevirtual	#113; //Method scala/xml/Utility$.hashCode:(Ljava/lang/String;Ljava/lang/String;IILscala/collection/Seq;)I
   19:	istore	11
   21:	aload_0
   22:	invokeinterface	#117,  1; //InterfaceMethod scala/xml/factory/NodeFactory.cache:()Lscala/collection/mutable/HashMap;
   27:	iload	11
   29:	invokestatic	#123; //Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   32:	invokevirtual	#127; //Method scala/collection/mutable/HashMap.get:(Ljava/lang/Object;)Lscala/Option;
   35:	astore	12
   37:	aload	12
   39:	instanceof	#129; //class scala/Some
   42:	ifeq	185
   45:	aload	12
   47:	checkcast	#129; //class scala/Some
   50:	astore	6
   52:	aload	6
   54:	getfield	#133; //Field scala/Some.x:Ljava/lang/Object;
   57:	checkcast	#135; //class scala/collection/immutable/List
   60:	astore	9
   62:	iconst_1
   63:	ifeq	172
   66:	aload	9
   68:	new	#137; //class scala/xml/factory/NodeFactory$$anonfun$makeNode$1
   71:	dup
   72:	aload_0
   73:	aload_1
   74:	aload_2
   75:	aload_3
   76:	aload	4
   78:	aload	5
   80:	invokespecial	#140; //Method scala/xml/factory/NodeFactory$$anonfun$makeNode$1."<init>":(Lscala/xml/factory/NodeFactory;Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Seq;)V
   83:	invokeinterface	#146,  2; //InterfaceMethod scala/collection/LinearSeqLike.find:(Lscala/Function1;)Lscala/Option;
   88:	astore	10
   90:	aload	10
   92:	instanceof	#129; //class scala/Some
   95:	ifeq	137
   98:	aload	10
   100:	checkcast	#129; //class scala/Some
   103:	astore	7
   105:	aload	7
   107:	getfield	#133; //Field scala/Some.x:Ljava/lang/Object;
   110:	checkcast	#148; //class scala/xml/Node
   113:	astore	8
   115:	iconst_1
   116:	ifeq	124
   119:	aload	8
   121:	goto	229
   124:	new	#150; //class scala/MatchError
   127:	dup
   128:	aload	10
   130:	invokevirtual	#156; //Method scala/Option.toString:()Ljava/lang/String;
   133:	invokespecial	#157; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   136:	athrow
   137:	iconst_1
   138:	ifeq	159
   141:	aload_0
   142:	aload	9
   144:	aload_1
   145:	aload_2
   146:	aload_3
   147:	aload	4
   149:	aload	5
   151:	iload	11
   153:	invokestatic	#161; //Method cons$1:(Lscala/xml/factory/NodeFactory;Lscala/collection/immutable/List;Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Seq;I)Lscala/xml/Node;
   156:	goto	229
   159:	new	#150; //class scala/MatchError
   162:	dup
   163:	aload	10
   165:	invokevirtual	#156; //Method scala/Option.toString:()Ljava/lang/String;
   168:	invokespecial	#157; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   171:	athrow
   172:	new	#150; //class scala/MatchError
   175:	dup
   176:	aload	12
   178:	invokevirtual	#156; //Method scala/Option.toString:()Ljava/lang/String;
   181:	invokespecial	#157; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   184:	athrow
   185:	getstatic	#166; //Field scala/None$.MODULE$:Lscala/None$;
   188:	dup
   189:	ifnonnull	201
   192:	pop
   193:	aload	12
   195:	ifnull	209
   198:	goto	243
   201:	aload	12
   203:	invokevirtual	#172; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   206:	ifeq	243
   209:	iconst_1
   210:	ifeq	230
   213:	aload_0
   214:	getstatic	#48; //Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
   217:	aload_1
   218:	aload_2
   219:	aload_3
   220:	aload	4
   222:	aload	5
   224:	iload	11
   226:	invokestatic	#161; //Method cons$1:(Lscala/xml/factory/NodeFactory;Lscala/collection/immutable/List;Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Seq;I)Lscala/xml/Node;
   229:	areturn
   230:	new	#150; //class scala/MatchError
   233:	dup
   234:	aload	12
   236:	invokevirtual	#156; //Method scala/Option.toString:()Ljava/lang/String;
   239:	invokespecial	#157; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   242:	athrow
   243:	new	#150; //class scala/MatchError
   246:	dup
   247:	aload	12
   249:	invokevirtual	#156; //Method scala/Option.toString:()Ljava/lang/String;
   252:	invokespecial	#157; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   255:	athrow
  LineNumberTable: 
   line 48: 0
   line 51: 21
   line 47: 45
   line 21: 62
   line 53: 66
   line 47: 98
   line 21: 115
   line 54: 119
   line 53: 124
   line 21: 137
   line 55: 141
   line 53: 159
   line 51: 172
   line 21: 209
   line 57: 213
   line 47: 229
   line 51: 230

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      256      0    $this       Lscala/xml/factory/NodeFactory;
   0      256      1    pre$1       Ljava/lang/String;
   0      256      2    name$1       Ljava/lang/String;
   0      256      3    attrSeq$1       Lscala/xml/MetaData;
   0      256      4    scope$1       Lscala/xml/NamespaceBinding;
   0      256      5    children$1       Lscala/collection/Seq;
   52      133      6    temp8       Lscala/Some;
   105      32      7    temp5       Lscala/Some;
   115      22      8    temp6       Lscala/xml/Node;
   62      123      9    temp9       Lscala/collection/immutable/List;
   90      82      10    temp4       Lscala/Option;
   21      235      11    hash$1       I
   37      219      12    temp7       Lscala/Option;


public static boolean nodeEquals(scala.xml.factory.NodeFactory, scala.xml.Node, java.lang.String, java.lang.String, scala.xml.MetaData, scala.xml.NamespaceBinding, scala.collection.Seq);
  Code:
   Stack=3, Locals=7, Args_size=7
   0:	aload_1
   1:	invokevirtual	#196; //Method scala/xml/Node.prefix:()Ljava/lang/String;
   4:	dup
   5:	ifnonnull	16
   8:	pop
   9:	aload_2
   10:	ifnull	23
   13:	goto	90
   16:	aload_2
   17:	invokevirtual	#172; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   20:	ifeq	90
   23:	aload_1
   24:	invokevirtual	#199; //Method scala/xml/Node.label:()Ljava/lang/String;
   27:	dup
   28:	ifnonnull	39
   31:	pop
   32:	aload_3
   33:	ifnull	46
   36:	goto	90
   39:	aload_3
   40:	invokevirtual	#172; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   43:	ifeq	90
   46:	aload_1
   47:	invokevirtual	#203; //Method scala/xml/Node.attributes:()Lscala/xml/MetaData;
   50:	dup
   51:	ifnonnull	63
   54:	pop
   55:	aload	4
   57:	ifnull	71
   60:	goto	90
   63:	aload	4
   65:	invokevirtual	#172; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   68:	ifeq	90
   71:	aload_0
   72:	aload_1
   73:	invokevirtual	#207; //Method scala/xml/Node.child:()Lscala/collection/Seq;
   76:	aload	6
   78:	invokeinterface	#211,  3; //InterfaceMethod scala/xml/factory/NodeFactory.eqElements:(Lscala/collection/Seq;Lscala/collection/Seq;)Z
   83:	ifeq	90
   86:	iconst_1
   87:	goto	91
   90:	iconst_0
   91:	ireturn
  LineNumberTable: 
   line 41: 0
   line 42: 23
   line 43: 46
   line 45: 71
   line 43: 86

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      92      0    $this       Lscala/xml/factory/NodeFactory;
   0      92      1    n       Lscala/xml/Node;
   0      92      2    pre       Ljava/lang/String;
   0      92      3    name       Ljava/lang/String;
   0      92      4    attrSeq       Lscala/xml/MetaData;
   0      92      5    scope       Lscala/xml/NamespaceBinding;
   0      92      6    children       Lscala/collection/Seq;


public static boolean eqElements(scala.xml.factory.NodeFactory, scala.collection.Seq, scala.collection.Seq);
  Code:
   Stack=5, Locals=3, Args_size=3
   0:	aload_1
   1:	invokeinterface	#224,  1; //InterfaceMethod scala/collection/SeqLike.view:()Ljava/lang/Object;
   6:	checkcast	#226; //class scala/collection/IterableViewLike
   9:	aload_2
   10:	invokeinterface	#224,  1; //InterfaceMethod scala/collection/SeqLike.view:()Ljava/lang/Object;
   15:	checkcast	#228; //class scala/collection/Iterable
   18:	aconst_null
   19:	aconst_null
   20:	getstatic	#233; //Field scala/collection/SeqView$.MODULE$:Lscala/collection/SeqView$;
   23:	invokevirtual	#237; //Method scala/collection/SeqView$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
   26:	invokeinterface	#241,  5; //InterfaceMethod scala/collection/IterableViewLike.zipAll:(Lscala/collection/Iterable;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
   31:	checkcast	#243; //class scala/collection/IterableLike
   34:	new	#245; //class scala/xml/factory/NodeFactory$$anonfun$eqElements$1
   37:	dup
   38:	aload_0
   39:	invokespecial	#247; //Method scala/xml/factory/NodeFactory$$anonfun$eqElements$1."<init>":(Lscala/xml/factory/NodeFactory;)V
   42:	invokeinterface	#251,  2; //InterfaceMethod scala/collection/IterableLike.forall:(Lscala/Function1;)Z
   47:	ireturn
  LineNumberTable: 
   line 38: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      48      0    $this       Lscala/xml/factory/NodeFactory;
   0      48      1    ch1       Lscala/collection/Seq;
   0      48      2    ch2       Lscala/collection/Seq;


public static scala.xml.Node construct(scala.xml.factory.NodeFactory, int, scala.collection.immutable.List, java.lang.String, java.lang.String, scala.xml.MetaData, scala.xml.NamespaceBinding, scala.collection.Seq);
  Code:
   Stack=6, Locals=9, Args_size=8
   0:	aload_0
   1:	aload_3
   2:	aload	4
   4:	aload	5
   6:	aload	6
   8:	aload	7
   10:	invokeinterface	#258,  6; //InterfaceMethod scala/xml/factory/NodeFactory.create:(Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Seq;)Lscala/xml/Node;
   15:	astore	8
   17:	aload_0
   18:	invokeinterface	#117,  1; //InterfaceMethod scala/xml/factory/NodeFactory.cache:()Lscala/collection/mutable/HashMap;
   23:	iload_1
   24:	invokestatic	#123; //Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   27:	aload_2
   28:	aload	8
   30:	invokevirtual	#262; //Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
   33:	invokevirtual	#266; //Method scala/collection/mutable/HashMap.update:(Ljava/lang/Object;Ljava/lang/Object;)V
   36:	aload	8
   38:	areturn
  LineNumberTable: 
   line 32: 0
   line 33: 17
   line 34: 36

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      39      0    $this       Lscala/xml/factory/NodeFactory;
   0      39      1    hash       I
   0      39      2    old       Lscala/collection/immutable/List;
   0      39      3    pre       Ljava/lang/String;
   0      39      4    name       Ljava/lang/String;
   0      39      5    attrSeq       Lscala/xml/MetaData;
   0      39      6    scope       Lscala/xml/NamespaceBinding;
   0      39      7    children       Lscala/collection/Seq;
   17      21      8    el       Lscala/xml/Node;


}

