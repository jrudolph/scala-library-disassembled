Compiled from "Binder.scala"
public abstract class scala.xml.factory.Binder extends scala.xml.parsing.ValidatingMarkupHandler implements scala.ScalaObject
  SourceFile: "Binder.scala"
  ScalaSig: length = 0x2F0
   05 00 73 06 08 01 02 FFFFFF84 FFFFFF80 FFFFFF80 FFFFFF81 00 09 02 06 42
   69 6E 64 65 72 0A 02 03 04 01 07 66 61 63 74 6F
   72 79 0A 02 05 06 01 03 78 6D 6C 0A 01 07 01 05
   73 63 61 6C 61 03 00 13 03 00 0A 10 10 02 0B 0E
   0D 01 0C 0A 02 0D 04 01 07 70 61 72 73 69 6E 67
   09 02 0F 0C 02 17 56 61 6C 69 64 61 74 69 6E 67
   4D 61 72 6B 75 70 48 61 6E 64 6C 65 72 10 02 11
   12 0D 01 06 09 02 13 06 02 0B 53 63 61 6C 61 4F
   62 6A 65 63 74 08 08 15 00 FFFFFF82 FFFFFFC2 FFFFFF80 FFFFFF84 00 16 01
   0A 70 72 65 73 65 72 76 65 57 53 15 01 17 10 02
   11 18 09 02 19 06 02 07 42 6F 6F 6C 65 61 6E 08
   08 1B 00 FFFFFF82 FFFFFF80 FFFFFFA0 FFFFFF80 04 17 01 0B 70 72 65 73 65
   72 76 65 57 53 20 08 05 1D 00 FFFFFF84 00 1E 01 06 3C
   69 6E 69 74 3E 14 02 1F 21 10 02 20 00 0D 01 02
   08 05 15 1C FFFFFFC0 00 17 08 07 23 00 FFFFFFC0 FFFFFF80 FFFFFF84 00 24
   01 06 72 65 73 75 6C 74 15 01 25 10 02 26 27 0D
   01 04 09 02 28 04 02 0A 4E 6F 64 65 42 75 66 66
   65 72 08 07 2A 00 FFFFFFC0 FFFFFF80 FFFFFF84 00 2B 01 0A 72 65 73
   75 6C 74 5F 24 65 71 14 02 2C 2F 10 02 11 2D 09
   02 2E 06 02 04 55 6E 69 74 08 07 30 29 FFFFFF81 FFFFFF80 FFFFFFC0
   00 25 01 03 78 24 31 08 06 32 00 FFFFFFA0 FFFFFFA0 04 25 01
   07 72 65 73 75 6C 74 20 08 05 34 00 FFFFFF84 00 35 01
   11 72 65 70 6F 72 74 53 79 6E 74 61 78 45 72 72
   6F 72 14 03 2C 36 3B 08 05 37 33 FFFFFFC0 00 38 01 03
   70 6F 73 10 02 11 39 09 02 3A 06 02 03 49 6E 74
   08 05 3C 33 FFFFFFC0 00 3D 01 03 73 74 72 10 02 3E 41
   0E 02 11 3F 09 02 40 06 01 06 50 72 65 64 65 66
   09 02 42 43 02 06 53 74 72 69 6E 67 0A 02 40 06
   08 05 45 00 FFFFFF84 02 46 01 09 70 72 6F 63 49 6E 73
   74 72 14 04 47 4A 4B 4D 10 02 26 48 09 02 49 04
   02 09 50 72 6F 63 49 6E 73 74 72 08 05 37 44 FFFFFFC0
   00 38 08 05 4C 44 FFFFFFC0 00 3D 01 06 74 61 72 67 65
   74 08 05 4E 44 FFFFFFC0 00 3D 01 03 74 78 74 08 05 50
   00 FFFFFF84 02 51 01 07 63 6F 6D 6D 65 6E 74 14 03 52
   55 56 10 02 26 53 09 02 54 04 02 07 43 6F 6D 6D
   65 6E 74 08 05 37 4F FFFFFFC0 00 38 08 05 4E 4F FFFFFFC0 00
   3D 08 05 58 00 FFFFFF84 02 59 01 09 65 6E 74 69 74 79
   52 65 66 14 03 5A 5D 5E 10 02 26 5B 09 02 5C 04
   02 09 45 6E 74 69 74 79 52 65 66 08 05 37 57 FFFFFFC0
   00 38 08 05 5F 57 FFFFFFC0 00 3D 01 01 6E 08 05 61 00
   FFFFFF84 02 62 01 04 74 65 78 74 14 03 63 66 67 10 02
   26 64 09 02 65 04 02 04 54 65 78 74 08 05 37 60
   FFFFFFC0 00 38 08 05 4E 60 FFFFFFC0 00 3D 08 05 69 00 FFFFFF84 02
   6A 01 08 74 72 61 76 65 72 73 65 14 02 2C 6B 08
   05 5F 68 FFFFFFC0 00 6C 10 02 26 6D 09 02 6E 04 02 04
   4E 6F 64 65 08 05 70 00 FFFFFF84 02 71 01 08 76 61 6C
   69 64 61 74 65 14 02 6C 72 08 05 5F 6F FFFFFFC0 00 6C
   
  InnerClass: 
   public final #195= #160 of #194; //$anon$1=class scala/xml/NodeSeq$$anon$1 of class scala/xml/NodeSeq
   public final #196= #149 of #12; //$anonfun$traverse$1=class scala/xml/factory/Binder$$anonfun$traverse$1 of class scala/xml/factory/Binder
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Binder.scala;
const #3 = Asciz	result;
const #4 = Asciz	Lscala/xml/NodeBuffer;;
const #5 = Asciz	preserveWS;
const #6 = Asciz	Z;
const #7 = Asciz	<init>;
const #8 = Asciz	(Z)V;
const #9 = Asciz	Code;
const #10 = Asciz	LineNumberTable;
const #11 = Asciz	scala/xml/factory/Binder;
const #12 = class	#11;	//  scala/xml/factory/Binder
const #13 = NameAndType	#5:#6;//  preserveWS:Z
const #14 = Field	#12.#13;	//  scala/xml/factory/Binder.preserveWS:Z
const #15 = Asciz	scala/xml/parsing/ValidatingMarkupHandler;
const #16 = class	#15;	//  scala/xml/parsing/ValidatingMarkupHandler
const #17 = Asciz	()V;
const #18 = NameAndType	#7:#17;//  "<init>":()V
const #19 = Method	#16.#18;	//  scala/xml/parsing/ValidatingMarkupHandler."<init>":()V
const #20 = Asciz	scala/xml/NodeBuffer;
const #21 = class	#20;	//  scala/xml/NodeBuffer
const #22 = Method	#21.#18;	//  scala/xml/NodeBuffer."<init>":()V
const #23 = NameAndType	#3:#4;//  result:Lscala/xml/NodeBuffer;
const #24 = Field	#12.#23;	//  scala/xml/factory/Binder.result:Lscala/xml/NodeBuffer;
const #25 = Asciz	this;
const #26 = Asciz	Lscala/xml/factory/Binder;;
const #27 = Asciz	LocalVariableTable;
const #28 = Asciz	procInstr;
const #29 = Asciz	(ILjava/lang/String;Ljava/lang/String;)Lscala/xml/NodeSeq;;
const #30 = Asciz	(ILjava/lang/String;Ljava/lang/String;)Lscala/xml/ProcInstr;;
const #31 = NameAndType	#28:#30;//  procInstr:(ILjava/lang/String;Ljava/lang/String;)Lscala/xml/ProcInstr;
const #32 = Method	#12.#31;	//  scala/xml/factory/Binder.procInstr:(ILjava/lang/String;Ljava/lang/String;)Lscala/xml/ProcInstr;
const #33 = Asciz	pos;
const #34 = Asciz	I;
const #35 = Asciz	target;
const #36 = Asciz	Ljava/lang/String;;
const #37 = Asciz	txt;
const #38 = Asciz	comment;
const #39 = Asciz	(ILjava/lang/String;)Lscala/xml/NodeSeq;;
const #40 = Asciz	(ILjava/lang/String;)Lscala/xml/Comment;;
const #41 = NameAndType	#38:#40;//  comment:(ILjava/lang/String;)Lscala/xml/Comment;
const #42 = Method	#12.#41;	//  scala/xml/factory/Binder.comment:(ILjava/lang/String;)Lscala/xml/Comment;
const #43 = Asciz	entityRef;
const #44 = Asciz	(ILjava/lang/String;)Lscala/xml/EntityRef;;
const #45 = NameAndType	#43:#44;//  entityRef:(ILjava/lang/String;)Lscala/xml/EntityRef;
const #46 = Method	#12.#45;	//  scala/xml/factory/Binder.entityRef:(ILjava/lang/String;)Lscala/xml/EntityRef;
const #47 = Asciz	n;
const #48 = Asciz	text;
const #49 = Asciz	(ILjava/lang/String;)Lscala/xml/Text;;
const #50 = NameAndType	#48:#49;//  text:(ILjava/lang/String;)Lscala/xml/Text;
const #51 = Method	#12.#50;	//  scala/xml/factory/Binder.text:(ILjava/lang/String;)Lscala/xml/Text;
const #52 = Asciz	validate;
const #53 = Asciz	(Lscala/xml/Node;)Lscala/xml/Node;;
const #54 = Asciz	scala/xml/Node;
const #55 = class	#54;	//  scala/xml/Node
const #56 = Asciz	label;
const #57 = Asciz	()Ljava/lang/String;;
const #58 = NameAndType	#56:#57;//  label:()Ljava/lang/String;
const #59 = Method	#55.#58;	//  scala/xml/Node.label:()Ljava/lang/String;
const #60 = Asciz	rootLabel_$eq;
const #61 = Asciz	(Ljava/lang/String;)V;
const #62 = NameAndType	#60:#61;//  rootLabel_$eq:(Ljava/lang/String;)V
const #63 = Method	#12.#62;	//  scala/xml/factory/Binder.rootLabel_$eq:(Ljava/lang/String;)V
const #64 = Asciz	traverse;
const #65 = Asciz	(Lscala/xml/Node;)V;
const #66 = NameAndType	#64:#65;//  traverse:(Lscala/xml/Node;)V
const #67 = Method	#12.#66;	//  scala/xml/factory/Binder.traverse:(Lscala/xml/Node;)V
const #68 = Asciz	()Lscala/xml/NodeBuffer;;
const #69 = NameAndType	#3:#68;//  result:()Lscala/xml/NodeBuffer;
const #70 = Method	#12.#69;	//  scala/xml/factory/Binder.result:()Lscala/xml/NodeBuffer;
const #71 = Asciz	scala/collection/mutable/ResizableArray;
const #72 = class	#71;	//  scala/collection/mutable/ResizableArray
const #73 = Asciz	apply;
const #74 = Asciz	(I)Ljava/lang/Object;;
const #75 = NameAndType	#73:#74;//  apply:(I)Ljava/lang/Object;
const #76 = InterfaceMethod	#72.#75;	//  scala/collection/mutable/ResizableArray.apply:(I)Ljava/lang/Object;
const #77 = Asciz	Lscala/xml/Node;;
const #78 = Asciz	scala/xml/ProcInstr;
const #79 = class	#78;	//  scala/xml/ProcInstr
const #80 = NameAndType	#35:#57;//  target:()Ljava/lang/String;
const #81 = Method	#79.#80;	//  scala/xml/ProcInstr.target:()Ljava/lang/String;
const #82 = NameAndType	#48:#57;//  text:()Ljava/lang/String;
const #83 = Method	#79.#82;	//  scala/xml/ProcInstr.text:()Ljava/lang/String;
const #84 = Asciz	(Ljava/lang/String;Ljava/lang/String;)V;
const #85 = NameAndType	#7:#84;//  "<init>":(Ljava/lang/String;Ljava/lang/String;)V
const #86 = Method	#79.#85;	//  scala/xml/ProcInstr."<init>":(Ljava/lang/String;Ljava/lang/String;)V
const #87 = Asciz	$amp$plus;
const #88 = Asciz	(Ljava/lang/Object;)Lscala/xml/NodeBuffer;;
const #89 = NameAndType	#87:#88;//  $amp$plus:(Ljava/lang/Object;)Lscala/xml/NodeBuffer;
const #90 = Method	#21.#89;	//  scala/xml/NodeBuffer.$amp$plus:(Ljava/lang/Object;)Lscala/xml/NodeBuffer;
const #91 = Asciz	scala/MatchError;
const #92 = class	#91;	//  scala/MatchError
const #93 = Asciz	toString;
const #94 = NameAndType	#93:#57;//  toString:()Ljava/lang/String;
const #95 = Method	#55.#94;	//  scala/xml/Node.toString:()Ljava/lang/String;
const #96 = NameAndType	#7:#61;//  "<init>":(Ljava/lang/String;)V
const #97 = Method	#92.#96;	//  scala/MatchError."<init>":(Ljava/lang/String;)V
const #98 = Asciz	scala/xml/Comment;
const #99 = class	#98;	//  scala/xml/Comment
const #100 = Method	#99.#82;	//  scala/xml/Comment.text:()Ljava/lang/String;
const #101 = Method	#99.#96;	//  scala/xml/Comment."<init>":(Ljava/lang/String;)V
const #102 = Asciz	scala/xml/Text;
const #103 = class	#102;	//  scala/xml/Text
const #104 = Asciz	data;
const #105 = Asciz	()Ljava/lang/Object;;
const #106 = NameAndType	#104:#105;//  data:()Ljava/lang/Object;
const #107 = Method	#103.#106;	//  scala/xml/Text.data:()Ljava/lang/Object;
const #108 = Asciz	java/lang/String;
const #109 = class	#108;	//  java/lang/String
const #110 = Asciz	scala/xml/Text$;
const #111 = class	#110;	//  scala/xml/Text$
const #112 = Asciz	MODULE$;
const #113 = Asciz	Lscala/xml/Text$;;
const #114 = NameAndType	#112:#113;//  MODULE$:Lscala/xml/Text$;
const #115 = Field	#111.#114;	//  scala/xml/Text$.MODULE$:Lscala/xml/Text$;
const #116 = Asciz	(Ljava/lang/String;)Lscala/xml/Text;;
const #117 = NameAndType	#73:#116;//  apply:(Ljava/lang/String;)Lscala/xml/Text;
const #118 = Method	#111.#117;	//  scala/xml/Text$.apply:(Ljava/lang/String;)Lscala/xml/Text;
const #119 = Asciz	scala/xml/EntityRef;
const #120 = class	#119;	//  scala/xml/EntityRef
const #121 = Asciz	entityName;
const #122 = NameAndType	#121:#57;//  entityName:()Ljava/lang/String;
const #123 = Method	#120.#122;	//  scala/xml/EntityRef.entityName:()Ljava/lang/String;
const #124 = Method	#120.#96;	//  scala/xml/EntityRef."<init>":(Ljava/lang/String;)V
const #125 = Asciz	prefix;
const #126 = NameAndType	#125:#57;//  prefix:()Ljava/lang/String;
const #127 = Method	#55.#126;	//  scala/xml/Node.prefix:()Ljava/lang/String;
const #128 = Asciz	attributes;
const #129 = Asciz	()Lscala/xml/MetaData;;
const #130 = NameAndType	#128:#129;//  attributes:()Lscala/xml/MetaData;
const #131 = Method	#55.#130;	//  scala/xml/Node.attributes:()Lscala/xml/MetaData;
const #132 = Asciz	scope;
const #133 = Asciz	()Lscala/xml/NamespaceBinding;;
const #134 = NameAndType	#132:#133;//  scope:()Lscala/xml/NamespaceBinding;
const #135 = Method	#55.#134;	//  scala/xml/Node.scope:()Lscala/xml/NamespaceBinding;
const #136 = Asciz	elemStart;
const #137 = Asciz	(ILjava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;)V;
const #138 = NameAndType	#136:#137;//  elemStart:(ILjava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;)V
const #139 = Method	#12.#138;	//  scala/xml/factory/Binder.elemStart:(ILjava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;)V
const #140 = Asciz	result_$eq;
const #141 = Asciz	(Lscala/xml/NodeBuffer;)V;
const #142 = NameAndType	#140:#141;//  result_$eq:(Lscala/xml/NodeBuffer;)V
const #143 = Method	#12.#142;	//  scala/xml/factory/Binder.result_$eq:(Lscala/xml/NodeBuffer;)V
const #144 = Asciz	child;
const #145 = Asciz	()Lscala/collection/Seq;;
const #146 = NameAndType	#144:#145;//  child:()Lscala/collection/Seq;
const #147 = Method	#55.#146;	//  scala/xml/Node.child:()Lscala/collection/Seq;
const #148 = Asciz	scala/xml/factory/Binder$$anonfun$traverse$1;
const #149 = class	#148;	//  scala/xml/factory/Binder$$anonfun$traverse$1
const #150 = Asciz	(Lscala/xml/factory/Binder;)V;
const #151 = NameAndType	#7:#150;//  "<init>":(Lscala/xml/factory/Binder;)V
const #152 = Method	#149.#151;	//  scala/xml/factory/Binder$$anonfun$traverse$1."<init>":(Lscala/xml/factory/Binder;)V
const #153 = Asciz	scala/collection/IterableLike;
const #154 = class	#153;	//  scala/collection/IterableLike
const #155 = Asciz	foreach;
const #156 = Asciz	(Lscala/Function1;)V;
const #157 = NameAndType	#155:#156;//  foreach:(Lscala/Function1;)V
const #158 = InterfaceMethod	#154.#157;	//  scala/collection/IterableLike.foreach:(Lscala/Function1;)V
const #159 = Asciz	scala/xml/NodeSeq$$anon$1;
const #160 = class	#159;	//  scala/xml/NodeSeq$$anon$1
const #161 = Asciz	(Lscala/collection/Seq;)V;
const #162 = NameAndType	#7:#161;//  "<init>":(Lscala/collection/Seq;)V
const #163 = Method	#160.#162;	//  scala/xml/NodeSeq$$anon$1."<init>":(Lscala/collection/Seq;)V
const #164 = Asciz	elem;
const #165 = Asciz	(ILjava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/xml/NodeSeq;)Lscala/xml/NodeSeq;;
const #166 = NameAndType	#164:#165;//  elem:(ILjava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/xml/NodeSeq;)Lscala/xml/NodeSeq;
const #167 = Method	#12.#166;	//  scala/xml/factory/Binder.elem:(ILjava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/xml/NodeSeq;)Lscala/xml/NodeSeq;
const #168 = Asciz	scala/collection/TraversableLike;
const #169 = class	#168;	//  scala/collection/TraversableLike
const #170 = Asciz	toList;
const #171 = Asciz	()Lscala/collection/immutable/List;;
const #172 = NameAndType	#170:#171;//  toList:()Lscala/collection/immutable/List;
const #173 = InterfaceMethod	#169.#172;	//  scala/collection/TraversableLike.toList:()Lscala/collection/immutable/List;
const #174 = Asciz	elemEnd;
const #175 = Asciz	(ILjava/lang/String;Ljava/lang/String;)V;
const #176 = NameAndType	#174:#175;//  elemEnd:(ILjava/lang/String;Ljava/lang/String;)V
const #177 = Method	#12.#176;	//  scala/xml/factory/Binder.elemEnd:(ILjava/lang/String;Ljava/lang/String;)V
const #178 = Asciz	temp2;
const #179 = Asciz	Lscala/xml/ProcInstr;;
const #180 = Asciz	temp5;
const #181 = Asciz	Lscala/xml/Comment;;
const #182 = Asciz	temp7;
const #183 = Asciz	Lscala/xml/Text;;
const #184 = Asciz	temp8;
const #185 = Asciz	Lscala/xml/EntityRef;;
const #186 = Asciz	old;
const #187 = Asciz	reportSyntaxError;
const #188 = Asciz	(ILjava/lang/String;)V;
const #189 = Asciz	str;
const #190 = Asciz	()Z;
const #191 = Asciz	ScalaSig;
const #192 = Asciz	InnerClasses;
const #193 = Asciz	scala/xml/NodeSeq;
const #194 = class	#193;	//  scala/xml/NodeSeq
const #195 = Asciz	$anon$1;
const #196 = Asciz	$anonfun$traverse$1;
const #197 = Asciz	scala/ScalaObject;
const #198 = class	#197;	//  scala/ScalaObject

{
public scala.xml.factory.Binder(boolean);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	putfield	#14; //Field preserveWS:Z
   5:	aload_0
   6:	invokespecial	#19; //Method scala/xml/parsing/ValidatingMarkupHandler."<init>":()V
   9:	aload_0
   10:	new	#21; //class scala/xml/NodeBuffer
   13:	dup
   14:	invokespecial	#22; //Method scala/xml/NodeBuffer."<init>":()V
   17:	putfield	#24; //Field result:Lscala/xml/NodeBuffer;
   20:	return
  LineNumberTable: 
   line 20: 0
   line 22: 9

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      21      0    this       Lscala/xml/factory/Binder;
   0      21      1    preserveWS       Z


public final scala.xml.NodeSeq procInstr(int, java.lang.String, java.lang.String);
  Code:
   Stack=4, Locals=4, Args_size=4
   0:	aload_0
   1:	iload_1
   2:	aload_2
   3:	aload_3
   4:	invokevirtual	#32; //Method procInstr:(ILjava/lang/String;Ljava/lang/String;)Lscala/xml/ProcInstr;
   7:	areturn
  LineNumberTable: 
   line 20: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      8      0    this       Lscala/xml/factory/Binder;
   0      8      1    pos       I
   0      8      2    target       Ljava/lang/String;
   0      8      3    txt       Ljava/lang/String;


public final scala.xml.NodeSeq comment(int, java.lang.String);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	iload_1
   2:	aload_2
   3:	invokevirtual	#42; //Method comment:(ILjava/lang/String;)Lscala/xml/Comment;
   6:	areturn
  LineNumberTable: 
   line 20: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/xml/factory/Binder;
   0      7      1    pos       I
   0      7      2    comment       Ljava/lang/String;


public final scala.xml.NodeSeq entityRef(int, java.lang.String);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	iload_1
   2:	aload_2
   3:	invokevirtual	#46; //Method entityRef:(ILjava/lang/String;)Lscala/xml/EntityRef;
   6:	areturn
  LineNumberTable: 
   line 20: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/xml/factory/Binder;
   0      7      1    pos       I
   0      7      2    n       Ljava/lang/String;


public final scala.xml.NodeSeq text(int, java.lang.String);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	aload_0
   1:	iload_1
   2:	aload_2
   3:	invokevirtual	#51; //Method text:(ILjava/lang/String;)Lscala/xml/Text;
   6:	areturn
  LineNumberTable: 
   line 20: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      7      0    this       Lscala/xml/factory/Binder;
   0      7      1    pos       I
   0      7      2    txt       Ljava/lang/String;


public final scala.xml.Node validate(scala.xml.Node);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokevirtual	#59; //Method scala/xml/Node.label:()Ljava/lang/String;
   5:	invokevirtual	#63; //Method rootLabel_$eq:(Ljava/lang/String;)V
   8:	aload_0
   9:	aload_1
   10:	invokevirtual	#67; //Method traverse:(Lscala/xml/Node;)V
   13:	aload_0
   14:	invokevirtual	#70; //Method result:()Lscala/xml/NodeBuffer;
   17:	iconst_0
   18:	invokeinterface	#76,  2; //InterfaceMethod scala/collection/mutable/ResizableArray.apply:(I)Ljava/lang/Object;
   23:	checkcast	#55; //class scala/xml/Node
   26:	areturn
  LineNumberTable: 
   line 57: 0
   line 58: 8
   line 59: 13

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      27      0    this       Lscala/xml/factory/Binder;
   0      27      1    n       Lscala/xml/Node;


public final void traverse(scala.xml.Node);
  Code:
   Stack=11, Locals=13, Args_size=2
   0:	aload_1
   1:	instanceof	#79; //class scala/xml/ProcInstr
   4:	ifeq	60
   7:	aload_1
   8:	checkcast	#79; //class scala/xml/ProcInstr
   11:	astore_2
   12:	iconst_1
   13:	ifeq	48
   16:	aload_0
   17:	invokevirtual	#70; //Method result:()Lscala/xml/NodeBuffer;
   20:	aload_2
   21:	invokevirtual	#81; //Method scala/xml/ProcInstr.target:()Ljava/lang/String;
   24:	aload_2
   25:	invokevirtual	#83; //Method scala/xml/ProcInstr.text:()Ljava/lang/String;
   28:	astore	4
   30:	astore_3
   31:	new	#79; //class scala/xml/ProcInstr
   34:	dup
   35:	aload_3
   36:	aload	4
   38:	invokespecial	#86; //Method scala/xml/ProcInstr."<init>":(Ljava/lang/String;Ljava/lang/String;)V
   41:	invokevirtual	#90; //Method scala/xml/NodeBuffer.$amp$plus:(Ljava/lang/Object;)Lscala/xml/NodeBuffer;
   44:	pop
   45:	goto	352
   48:	new	#92; //class scala/MatchError
   51:	dup
   52:	aload_1
   53:	invokevirtual	#95; //Method scala/xml/Node.toString:()Ljava/lang/String;
   56:	invokespecial	#97; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   59:	athrow
   60:	aload_1
   61:	instanceof	#99; //class scala/xml/Comment
   64:	ifeq	116
   67:	aload_1
   68:	checkcast	#99; //class scala/xml/Comment
   71:	astore	5
   73:	iconst_1
   74:	ifeq	104
   77:	aload_0
   78:	invokevirtual	#70; //Method result:()Lscala/xml/NodeBuffer;
   81:	aload	5
   83:	invokevirtual	#100; //Method scala/xml/Comment.text:()Ljava/lang/String;
   86:	astore	6
   88:	new	#99; //class scala/xml/Comment
   91:	dup
   92:	aload	6
   94:	invokespecial	#101; //Method scala/xml/Comment."<init>":(Ljava/lang/String;)V
   97:	invokevirtual	#90; //Method scala/xml/NodeBuffer.$amp$plus:(Ljava/lang/Object;)Lscala/xml/NodeBuffer;
   100:	pop
   101:	goto	352
   104:	new	#92; //class scala/MatchError
   107:	dup
   108:	aload_1
   109:	invokevirtual	#95; //Method scala/xml/Node.toString:()Ljava/lang/String;
   112:	invokespecial	#97; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   115:	athrow
   116:	aload_1
   117:	instanceof	#103; //class scala/xml/Text
   120:	ifeq	174
   123:	aload_1
   124:	checkcast	#103; //class scala/xml/Text
   127:	astore	7
   129:	iconst_1
   130:	ifeq	162
   133:	aload_0
   134:	invokevirtual	#70; //Method result:()Lscala/xml/NodeBuffer;
   137:	aload	7
   139:	invokevirtual	#107; //Method scala/xml/Text.data:()Ljava/lang/Object;
   142:	checkcast	#109; //class java/lang/String
   145:	astore	8
   147:	getstatic	#115; //Field scala/xml/Text$.MODULE$:Lscala/xml/Text$;
   150:	aload	8
   152:	invokevirtual	#118; //Method scala/xml/Text$.apply:(Ljava/lang/String;)Lscala/xml/Text;
   155:	invokevirtual	#90; //Method scala/xml/NodeBuffer.$amp$plus:(Ljava/lang/Object;)Lscala/xml/NodeBuffer;
   158:	pop
   159:	goto	352
   162:	new	#92; //class scala/MatchError
   165:	dup
   166:	aload_1
   167:	invokevirtual	#95; //Method scala/xml/Node.toString:()Ljava/lang/String;
   170:	invokespecial	#97; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   173:	athrow
   174:	aload_1
   175:	instanceof	#120; //class scala/xml/EntityRef
   178:	ifeq	230
   181:	aload_1
   182:	checkcast	#120; //class scala/xml/EntityRef
   185:	astore	9
   187:	iconst_1
   188:	ifeq	218
   191:	aload_0
   192:	invokevirtual	#70; //Method result:()Lscala/xml/NodeBuffer;
   195:	aload	9
   197:	invokevirtual	#123; //Method scala/xml/EntityRef.entityName:()Ljava/lang/String;
   200:	astore	10
   202:	new	#120; //class scala/xml/EntityRef
   205:	dup
   206:	aload	10
   208:	invokespecial	#124; //Method scala/xml/EntityRef."<init>":(Ljava/lang/String;)V
   211:	invokevirtual	#90; //Method scala/xml/NodeBuffer.$amp$plus:(Ljava/lang/Object;)Lscala/xml/NodeBuffer;
   214:	pop
   215:	goto	352
   218:	new	#92; //class scala/MatchError
   221:	dup
   222:	aload_1
   223:	invokevirtual	#95; //Method scala/xml/Node.toString:()Ljava/lang/String;
   226:	invokespecial	#97; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   229:	athrow
   230:	iconst_1
   231:	ifeq	353
   234:	aload_0
   235:	iconst_0
   236:	aload_1
   237:	invokevirtual	#127; //Method scala/xml/Node.prefix:()Ljava/lang/String;
   240:	aload_1
   241:	invokevirtual	#59; //Method scala/xml/Node.label:()Ljava/lang/String;
   244:	aload_1
   245:	invokevirtual	#131; //Method scala/xml/Node.attributes:()Lscala/xml/MetaData;
   248:	aload_1
   249:	invokevirtual	#135; //Method scala/xml/Node.scope:()Lscala/xml/NamespaceBinding;
   252:	invokevirtual	#139; //Method elemStart:(ILjava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;)V
   255:	aload_0
   256:	invokevirtual	#70; //Method result:()Lscala/xml/NodeBuffer;
   259:	astore	11
   261:	aload_0
   262:	new	#21; //class scala/xml/NodeBuffer
   265:	dup
   266:	invokespecial	#22; //Method scala/xml/NodeBuffer."<init>":()V
   269:	invokevirtual	#143; //Method result_$eq:(Lscala/xml/NodeBuffer;)V
   272:	aload_1
   273:	invokevirtual	#147; //Method scala/xml/Node.child:()Lscala/collection/Seq;
   276:	new	#149; //class scala/xml/factory/Binder$$anonfun$traverse$1
   279:	dup
   280:	aload_0
   281:	invokespecial	#152; //Method scala/xml/factory/Binder$$anonfun$traverse$1."<init>":(Lscala/xml/factory/Binder;)V
   284:	invokeinterface	#158,  2; //InterfaceMethod scala/collection/IterableLike.foreach:(Lscala/Function1;)V
   289:	aload_0
   290:	aload	11
   292:	aload_0
   293:	iconst_0
   294:	aload_1
   295:	invokevirtual	#127; //Method scala/xml/Node.prefix:()Ljava/lang/String;
   298:	aload_1
   299:	invokevirtual	#59; //Method scala/xml/Node.label:()Ljava/lang/String;
   302:	aload_1
   303:	invokevirtual	#131; //Method scala/xml/Node.attributes:()Lscala/xml/MetaData;
   306:	aload_1
   307:	invokevirtual	#135; //Method scala/xml/Node.scope:()Lscala/xml/NamespaceBinding;
   310:	aload_0
   311:	invokevirtual	#70; //Method result:()Lscala/xml/NodeBuffer;
   314:	astore	12
   316:	new	#160; //class scala/xml/NodeSeq$$anon$1
   319:	dup
   320:	aload	12
   322:	invokespecial	#163; //Method scala/xml/NodeSeq$$anon$1."<init>":(Lscala/collection/Seq;)V
   325:	invokevirtual	#167; //Method elem:(ILjava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/xml/NodeSeq;)Lscala/xml/NodeSeq;
   328:	invokeinterface	#173,  1; //InterfaceMethod scala/collection/TraversableLike.toList:()Lscala/collection/immutable/List;
   333:	invokevirtual	#90; //Method scala/xml/NodeBuffer.$amp$plus:(Ljava/lang/Object;)Lscala/xml/NodeBuffer;
   336:	invokevirtual	#143; //Method result_$eq:(Lscala/xml/NodeBuffer;)V
   339:	aload_0
   340:	iconst_0
   341:	aload_1
   342:	invokevirtual	#127; //Method scala/xml/Node.prefix:()Ljava/lang/String;
   345:	aload_1
   346:	invokevirtual	#59; //Method scala/xml/Node.label:()Ljava/lang/String;
   349:	invokevirtual	#177; //Method elemEnd:(ILjava/lang/String;Ljava/lang/String;)V
   352:	return
   353:	new	#92; //class scala/MatchError
   356:	dup
   357:	aload_1
   358:	invokevirtual	#95; //Method scala/xml/Node.toString:()Ljava/lang/String;
   361:	invokespecial	#97; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   364:	athrow
  LineNumberTable: 
   line 38: 0
   line 21: 12
   line 40: 16
   line 38: 48
   line 21: 73
   line 42: 77
   line 38: 104
   line 21: 129
   line 44: 133
   line 38: 162
   line 21: 187
   line 46: 191
   line 38: 218
   line 21: 230
   line 48: 234
   line 49: 255
   line 50: 261
   line 51: 272
   line 52: 289
   line 53: 339
   line 38: 352

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      365      0    this       Lscala/xml/factory/Binder;
   0      365      1    n       Lscala/xml/Node;
   12      48      2    temp2       Lscala/xml/ProcInstr;
   73      43      5    temp5       Lscala/xml/Comment;
   129      45      7    temp7       Lscala/xml/Text;
   187      43      9    temp8       Lscala/xml/EntityRef;
   261      91      11    old       Lscala/xml/NodeBuffer;


public final scala.xml.Text text(int, java.lang.String);
  Code:
   Stack=2, Locals=3, Args_size=3
   0:	getstatic	#115; //Field scala/xml/Text$.MODULE$:Lscala/xml/Text$;
   3:	aload_2
   4:	invokevirtual	#118; //Method scala/xml/Text$.apply:(Ljava/lang/String;)Lscala/xml/Text;
   7:	areturn
  LineNumberTable: 
   line 36: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      8      0    this       Lscala/xml/factory/Binder;
   0      8      1    pos       I
   0      8      2    txt       Ljava/lang/String;


public final scala.xml.EntityRef entityRef(int, java.lang.String);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	new	#120; //class scala/xml/EntityRef
   3:	dup
   4:	aload_2
   5:	invokespecial	#124; //Method scala/xml/EntityRef."<init>":(Ljava/lang/String;)V
   8:	areturn
  LineNumberTable: 
   line 33: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/xml/factory/Binder;
   0      9      1    pos       I
   0      9      2    n       Ljava/lang/String;


public final scala.xml.Comment comment(int, java.lang.String);
  Code:
   Stack=3, Locals=3, Args_size=3
   0:	new	#99; //class scala/xml/Comment
   3:	dup
   4:	aload_2
   5:	invokespecial	#101; //Method scala/xml/Comment."<init>":(Ljava/lang/String;)V
   8:	areturn
  LineNumberTable: 
   line 30: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/xml/factory/Binder;
   0      9      1    pos       I
   0      9      2    txt       Ljava/lang/String;


public final scala.xml.ProcInstr procInstr(int, java.lang.String, java.lang.String);
  Code:
   Stack=4, Locals=4, Args_size=4
   0:	new	#79; //class scala/xml/ProcInstr
   3:	dup
   4:	aload_2
   5:	aload_3
   6:	invokespecial	#86; //Method scala/xml/ProcInstr."<init>":(Ljava/lang/String;Ljava/lang/String;)V
   9:	areturn
  LineNumberTable: 
   line 27: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      10      0    this       Lscala/xml/factory/Binder;
   0      10      1    pos       I
   0      10      2    target       Ljava/lang/String;
   0      10      3    txt       Ljava/lang/String;


public void reportSyntaxError(int, java.lang.String);
  Code:
   Stack=0, Locals=3, Args_size=3
   0:	return
  LineNumberTable: 
   line 24: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      1      0    this       Lscala/xml/factory/Binder;
   0      1      1    pos       I
   0      1      2    str       Ljava/lang/String;


public void result_$eq(scala.xml.NodeBuffer);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	putfield	#24; //Field result:Lscala/xml/NodeBuffer;
   5:	return
  LineNumberTable: 
   line 22: 0


public scala.xml.NodeBuffer result();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#24; //Field result:Lscala/xml/NodeBuffer;
   4:	areturn
  LineNumberTable: 
   line 22: 0


public boolean preserveWS();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	getfield	#14; //Field preserveWS:Z
   4:	ireturn
  LineNumberTable: 
   line 20: 0


}

