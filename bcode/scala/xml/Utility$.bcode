Compiled from "Utility.scala"
public final class scala.xml.Utility$ extends java.lang.Object implements scala.xml.parsing.TokenTests
  InnerClass: 
   public final $anonfun$toXML$1=class scala/xml/Utility$$anonfun$toXML$1 of class scala/xml/Utility
   public final $anonfun$escape$1=class scala/xml/Utility$$anonfun$escape$1 of class scala/xml/Utility
   public final $anonfun$appendQuoted$1=class scala/xml/Utility$$anonfun$appendQuoted$1 of class scala/xml/Utility
   public final $anonfun$sequenceToXML$2=class scala/xml/Utility$$anonfun$sequenceToXML$2 of class scala/xml/Utility
   public final $anonfun$sequenceToXML$1=class scala/xml/Utility$$anonfun$sequenceToXML$1 of class scala/xml/Utility
   public GenericCanBuildFrom=class scala/collection/generic/TraversableFactory$GenericCanBuildFrom of class scala/collection/generic/TraversableFactory
  Scala: length = 0x
   
  SourceFile: "Utility.scala"
  minor version: 0
  major version: 49
  Constant pool:
int	9;
int	10;
int	13;
int	32;
int	60;
int	62;
String	 />
String	&amp;
String	&gt;
String	&lt;
String	&quot;
String	</
class	java/lang/Object
class	java/lang/String
class	scala/collection/IterableLike
class	scala/collection/Iterator
class	scala/collection/generic/TraversableFactory
class	scala/collection/generic/TraversableFactory$GenericCanBuildFrom
class	scala/collection/mutable/StringBuilder
class	scala/runtime/BoxedUnit
class	scala/xml/Comment
class	scala/xml/Group
class	scala/xml/MetaData
class	scala/xml/NamespaceBinding
class	scala/xml/Node
class	scala/xml/SpecialNode
class	scala/xml/Text
class	scala/xml/TopScope$
class	scala/xml/Utility
class	scala/xml/Utility$
class	scala/xml/Utility$$anonfun$appendQuoted$1
class	scala/xml/Utility$$anonfun$escape$1
class	scala/xml/Utility$$anonfun$sequenceToXML$1
class	scala/xml/Utility$$anonfun$sequenceToXML$2
class	scala/xml/Utility$$anonfun$toXML$1
class	scala/xml/parsing/TokenTests
class	scala/xml/parsing/TokenTests$class
Field	scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
Field	scala/xml/Group.nodes:Lscala/collection/Seq;
Field	scala/xml/TopScope$.MODULE$:Lscala/xml/TopScope$;
Field	scala/xml/Utility$.MODULE$:Lscala/xml/Utility$;
Method	java/lang/Object."<init>":()V
Method	java/lang/String.charAt:(I)C
Method	java/lang/String.length:()I
Method	scala/collection/mutable/StringBuilder."<init>":()V
Method	scala/collection/mutable/StringBuilder.append:(C)Lscala/collection/mutable/StringBuilder;
Method	scala/collection/mutable/StringBuilder.append:(Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
Method	scala/xml/Comment.buildString:(Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;
Method	scala/xml/MetaData.buildString:(Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;
Method	scala/xml/NamespaceBinding.buildString:(Lscala/collection/mutable/StringBuilder;Lscala/xml/NamespaceBinding;)V
Method	scala/xml/Node.attributes:()Lscala/xml/MetaData;
Method	scala/xml/Node.child:()Lscala/collection/Seq;
Method	scala/xml/Node.isAtom:()Z
Method	scala/xml/Node.nameToString:(Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;
Method	scala/xml/Node.scope:()Lscala/xml/NamespaceBinding;
Method	scala/xml/SpecialNode.buildString:(Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;
Method	scala/xml/Utility$."<init>":()V
Method	scala/xml/Utility$.gd1$1:(Lscala/xml/Comment;Z)Z
Method	scala/xml/Utility$.sequenceToXML:(Lscala/collection/Seq;Lscala/xml/NamespaceBinding;Lscala/collection/mutable/StringBuilder;Z)V
Method	scala/xml/Utility$.toXML:(Lscala/xml/Node;Lscala/xml/NamespaceBinding;Lscala/collection/mutable/StringBuilder;ZZZZ)Lscala/collection/mutable/StringBuilder;
Method	scala/xml/Utility$$anonfun$sequenceToXML$1."<init>":()V
Method	scala/xml/Utility$$anonfun$sequenceToXML$2."<init>":(Lscala/xml/NamespaceBinding;Lscala/collection/mutable/StringBuilder;)V
Method	scala/xml/Utility$$anonfun$toXML$1."<init>":(Lscala/xml/Node;Lscala/collection/mutable/StringBuilder;)V
Method	scala/xml/parsing/TokenTests$class.$init$:(Lscala/xml/parsing/TokenTests;)V
InterfaceMethod	scala/collection/IterableLike.forall:(Lscala/Function1;)Z
InterfaceMethod	scala/collection/IterableLike.foreach:(Lscala/Function1;)V
InterfaceMethod	scala/collection/IterableLike.isEmpty:()Z
InterfaceMethod	scala/collection/IterableLike.iterator:()Lscala/collection/Iterator;
InterfaceMethod	scala/collection/Iterator.hasNext:()Z
InterfaceMethod	scala/collection/Iterator.next:()Ljava/lang/Object;
NameAndType	$init$:(Lscala/xml/parsing/TokenTests;)V
NameAndType	"<init>":()V
NameAndType	"<init>":(Lscala/xml/NamespaceBinding;Lscala/collection/mutable/StringBuilder;)V
NameAndType	"<init>":(Lscala/xml/Node;Lscala/collection/mutable/StringBuilder;)V
NameAndType	MODULE$:Lscala/xml/TopScope$;
NameAndType	MODULE$:Lscala/xml/Utility$;
NameAndType	UNIT:Lscala/runtime/BoxedUnit;
NameAndType	append:(C)Lscala/collection/mutable/StringBuilder;
NameAndType	append:(Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
NameAndType	attributes:()Lscala/xml/MetaData;
NameAndType	buildString:(Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;
NameAndType	buildString:(Lscala/collection/mutable/StringBuilder;Lscala/xml/NamespaceBinding;)V
NameAndType	charAt:(I)C
NameAndType	child:()Lscala/collection/Seq;
NameAndType	forall:(Lscala/Function1;)Z
NameAndType	foreach:(Lscala/Function1;)V
NameAndType	gd1$1:(Lscala/xml/Comment;Z)Z
NameAndType	hasNext:()Z
NameAndType	isAtom:()Z
NameAndType	isEmpty:()Z
NameAndType	iterator:()Lscala/collection/Iterator;
NameAndType	length:()I
NameAndType	nameToString:(Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;
NameAndType	next:()Ljava/lang/Object;
NameAndType	nodes:Lscala/collection/Seq;
NameAndType	scope:()Lscala/xml/NamespaceBinding;
NameAndType	sequenceToXML:(Lscala/collection/Seq;Lscala/xml/NamespaceBinding;Lscala/collection/mutable/StringBuilder;Z)V
NameAndType	toXML:(Lscala/xml/Node;Lscala/xml/NamespaceBinding;Lscala/collection/mutable/StringBuilder;ZZZZ)Lscala/collection/mutable/StringBuilder;
Asciz	 />;
Asciz	$anonfun$appendQuoted$1;
Asciz	$anonfun$escape$1;
Asciz	$anonfun$sequenceToXML$1;
Asciz	$anonfun$sequenceToXML$2;
Asciz	$anonfun$toXML$1;
Asciz	$init$;
Asciz	&amp;;
Asciz	&gt;;
Asciz	&lt;;
Asciz	&quot;;
Asciz	()I;
Asciz	()Ljava/lang/Object;;
Asciz	()Lscala/collection/Iterator;;
Asciz	()Lscala/collection/Seq;;
Asciz	()Lscala/collection/mutable/StringBuilder;;
Asciz	()Lscala/xml/MetaData;;
Asciz	()Lscala/xml/NamespaceBinding;;
Asciz	()V;
Asciz	()Z;
Asciz	(C)Lscala/collection/mutable/StringBuilder;;
Asciz	(I)C;
Asciz	(Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;;
Asciz	(Ljava/lang/String;Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;;
Asciz	(Lscala/Function1;)V;
Asciz	(Lscala/Function1;)Z;
Asciz	(Lscala/collection/Seq;Lscala/xml/NamespaceBinding;Lscala/collection/mutable/StringBuilder;Z)V;
Asciz	(Lscala/collection/Seq<Lscala/xml/Node;>;Lscala/xml/NamespaceBinding;Lscala/collection/mutable/StringBuilder;Z)V;
Asciz	(Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;;
Asciz	(Lscala/collection/mutable/StringBuilder;Lscala/xml/NamespaceBinding;)V;
Asciz	(Lscala/xml/Comment;Z)Z;
Asciz	(Lscala/xml/NamespaceBinding;Lscala/collection/mutable/StringBuilder;)V;
Asciz	(Lscala/xml/Node;)Z;
Asciz	(Lscala/xml/Node;Lscala/collection/mutable/StringBuilder;)V;
Asciz	(Lscala/xml/Node;Lscala/xml/NamespaceBinding;Lscala/collection/mutable/StringBuilder;ZZZZ)Lscala/collection/mutable/StringBuilder;;
Asciz	(Lscala/xml/parsing/TokenTests;)V;
Asciz	</;
Asciz	<clinit>;
Asciz	<init>;
Asciz	C;
Asciz	Code;
Asciz	GenericCanBuildFrom;
Asciz	I;
Asciz	InnerClasses;
Asciz	LineNumberTable;
Asciz	Ljava/lang/String;;
Asciz	LocalVariableTable;
Asciz	Lscala/collection/Iterator;;
Asciz	Lscala/collection/Seq;;
Asciz	Lscala/collection/mutable/StringBuilder;;
Asciz	Lscala/runtime/BoxedUnit;;
Asciz	Lscala/xml/Comment;;
Asciz	Lscala/xml/NamespaceBinding;;
Asciz	Lscala/xml/Node;;
Asciz	Lscala/xml/SpecialNode;;
Asciz	Lscala/xml/TopScope$;;
Asciz	Lscala/xml/Utility$;;
Asciz	MODULE$;
Asciz	Scala;
Asciz	Signature;
Asciz	SourceFile;
Asciz	UNIT;
Asciz	Utility.scala;
Asciz	Z;
Asciz	append;
Asciz	attributes;
Asciz	buildString;
Asciz	charAt;
Asciz	child;
Asciz	children;
Asciz	decodeEntities;
Asciz	escape;
Asciz	f;
Asciz	forall;
Asciz	foreach;
Asciz	gd1$1;
Asciz	hasNext;
Asciz	isAtom;
Asciz	isAtomAndNotText;
Asciz	isEmpty;
Asciz	it;
Asciz	iterator;
Asciz	java/lang/Object;
Asciz	java/lang/String;
Asciz	len;
Asciz	length;
Asciz	minimizeTags;
Asciz	nameToString;
Asciz	next;
Asciz	nodes;
Asciz	pos;
Asciz	preserveWhitespace;
Asciz	pscope;
Asciz	pscope$1;
Asciz	s;
Asciz	sb$1;
Asciz	sb$2;
Asciz	scala/collection/IterableLike;
Asciz	scala/collection/Iterator;
Asciz	scala/collection/generic/TraversableFactory;
Asciz	scala/collection/generic/TraversableFactory$GenericCanBuildFrom;
Asciz	scala/collection/mutable/StringBuilder;
Asciz	scala/runtime/BoxedUnit;
Asciz	scala/xml/Comment;
Asciz	scala/xml/Group;
Asciz	scala/xml/MetaData;
Asciz	scala/xml/NamespaceBinding;
Asciz	scala/xml/Node;
Asciz	scala/xml/SpecialNode;
Asciz	scala/xml/Text;
Asciz	scala/xml/TopScope$;
Asciz	scala/xml/Utility;
Asciz	scala/xml/Utility$;
Asciz	scala/xml/Utility$$anonfun$appendQuoted$1;
Asciz	scala/xml/Utility$$anonfun$escape$1;
Asciz	scala/xml/Utility$$anonfun$sequenceToXML$1;
Asciz	scala/xml/Utility$$anonfun$sequenceToXML$2;
Asciz	scala/xml/Utility$$anonfun$toXML$1;
Asciz	scala/xml/parsing/TokenTests;
Asciz	scala/xml/parsing/TokenTests$class;
Asciz	scope;
Asciz	sequenceToXML;
Asciz	stripComments;
Asciz	stripComments$1;
Asciz	temp35;
Asciz	temp39;
Asciz	text;
Asciz	this;
Asciz	toXML;
Asciz	toXML$default$2;
Asciz	toXML$default$3;
Asciz	toXML$default$4;
Asciz	toXML$default$5;
Asciz	toXML$default$6;
Asciz	toXML$default$7;
Asciz	x;
Asciz	x$7;

{
public static final scala.xml.Utility$ MODULE$;
  Signature: Lscala/xml/Utility$;

public static {};
  Signature: ()V
  Code:
   Stack=1, Locals=0, Args_size=0
	new	class scala/xml/Utility$
	invokespecial	Method "<init>":()V
	return
  Labels:

public boolean toXML$default$7();
  Signature: ()Z
  Code:
   Stack=1, Locals=1, Args_size=1
	iconst_0
	ireturn
  Labels:

public boolean toXML$default$6();
  Signature: ()Z
  Code:
   Stack=1, Locals=1, Args_size=1
	iconst_0
	ireturn
  Labels:

public boolean toXML$default$5();
  Signature: ()Z
  Code:
   Stack=1, Locals=1, Args_size=1
	iconst_1
	ireturn
  Labels:

public boolean toXML$default$4();
  Signature: ()Z
  Code:
   Stack=1, Locals=1, Args_size=1
	iconst_0
	ireturn
  Labels:

public scala.collection.mutable.StringBuilder toXML$default$3();
  Signature: ()Lscala/collection/mutable/StringBuilder;
  Code:
   Stack=2, Locals=1, Args_size=1
	new	class scala/collection/mutable/StringBuilder
	dup
	invokespecial	Method scala/collection/mutable/StringBuilder."<init>":()V
	areturn
  Labels:

public scala.xml.NamespaceBinding toXML$default$2();
  Signature: ()Lscala/xml/NamespaceBinding;
  Code:
   Stack=1, Locals=1, Args_size=1
	getstatic	Field scala/xml/TopScope$.MODULE$:Lscala/xml/TopScope$;
	areturn
  Labels:

public boolean isAtomAndNotText(scala.xml.Node);
  Signature: (Lscala/xml/Node;)Z
  Code:
   Stack=1, Locals=2, Args_size=2
	aload_1
	invokevirtual	Method scala/xml/Node.isAtom:()Z
	ifeq	l1 // iconst_0
	aload_1
	instanceof	class scala/xml/Text
	ifne	l1 // iconst_0
	iconst_1
	goto	l2 // ireturn
l1	iconst_0
l2	ireturn
  Labels:
   	l1 = 18 // iconst_0
   	l2 = 19 // ireturn
  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      20      0    this       Lscala/xml/Utility$;
   0      20      1    x       Lscala/xml/Node;


public final scala.collection.mutable.StringBuilder escape(java.lang.String, scala.collection.mutable.StringBuilder);
  Signature: (Ljava/lang/String;Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;
  Code:
   Stack=2, Locals=6, Args_size=3
	aload_1
	invokevirtual	Method java/lang/String.length:()I
	istore_3
	iconst_0
	istore	5
l4	iload	5
	iload_3
	if_icmpge	l1 // aload_2
	aload_1
	iload	5
	invokevirtual	Method java/lang/String.charAt:(I)C
	istore	4
	iload	4
	lookupswitch{ //7
		9: 168;
		10: 159;
		13: 150;
		34: 141;
		38: 132;
		60: 123;
		62: 114;
		default: 92 }
	iload	4
	ldc	int 32
	if_icmplt	l2 // getstatic
	aload_2
	iload	4
	invokevirtual	Method scala/collection/mutable/StringBuilder.append:(C)Lscala/collection/mutable/StringBuilder;
	goto	l3 // pop
l2	getstatic	Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
	goto	l3 // pop
	aload_2
	ldc	String &gt;
	invokevirtual	Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
	goto	l3 // pop
	aload_2
	ldc	String &lt;
	invokevirtual	Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
	goto	l3 // pop
	aload_2
	ldc	String &amp;
	invokevirtual	Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
	goto	l3 // pop
	aload_2
	ldc	String &quot;
	invokevirtual	Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
	goto	l3 // pop
	aload_2
	ldc	int 13
	invokevirtual	Method scala/collection/mutable/StringBuilder.append:(C)Lscala/collection/mutable/StringBuilder;
	goto	l3 // pop
	aload_2
	ldc	int 10
	invokevirtual	Method scala/collection/mutable/StringBuilder.append:(C)Lscala/collection/mutable/StringBuilder;
	goto	l3 // pop
	aload_2
	ldc	int 9
	invokevirtual	Method scala/collection/mutable/StringBuilder.append:(C)Lscala/collection/mutable/StringBuilder;
l3	pop
	iload	5
	iconst_1
	iadd
	istore	5
	goto	l4 // iload
l1	aload_2
	areturn
  Labels:
   	l4 = 8 // iload
   	l2 = 108 // getstatic
   	l3 = 174 // pop
   	l1 = 184 // aload_2


public scala.collection.mutable.StringBuilder toXML(scala.xml.Node, scala.xml.NamespaceBinding, scala.collection.mutable.StringBuilder, boolean, boolean, boolean, boolean);
  Signature: (Lscala/xml/Node;Lscala/xml/NamespaceBinding;Lscala/collection/mutable/StringBuilder;ZZZZ)Lscala/collection/mutable/StringBuilder;
  Code:
   Stack=5, Locals=11, Args_size=8
	aload_1
	instanceof	class scala/xml/Comment
	ifeq	l1 // aload_1
	aload_1
	checkcast	class scala/xml/Comment
	astore	8
	aload_0
	aload	8
	iload	4
	invokespecial	Method gd1$1:(Lscala/xml/Comment;Z)Z
	ifeq	l2 // aload
	aload	8
	aload_3
	invokevirtual	Method scala/xml/Comment.buildString:(Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;
	goto	l3 // areturn
l2	aload	8
	astore	9
	goto	l4 // aload
l1	aload_1
	instanceof	class scala/xml/SpecialNode
	ifeq	l5 // aload_1
	aload_1
	checkcast	class scala/xml/SpecialNode
	astore	9
l4	aload	9
	aload_3
	invokevirtual	Method scala/xml/SpecialNode.buildString:(Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;
	goto	l3 // areturn
l5	aload_1
	instanceof	class scala/xml/Group
	ifeq	l6 // aload_3
	aload_1
	checkcast	class scala/xml/Group
	astore	10
	aload	10
	getfield	Field scala/xml/Group.nodes:Lscala/collection/Seq;
	new	class scala/xml/Utility$$anonfun$toXML$1
	dup
	aload_1
	aload_3
	invokespecial	Method scala/xml/Utility$$anonfun$toXML$1."<init>":(Lscala/xml/Node;Lscala/collection/mutable/StringBuilder;)V
	invokeinterface	InterfaceMethod scala/collection/IterableLike.foreach:(Lscala/Function1;)V
	aload_3
	goto	l3 // areturn
l6	aload_3
	ldc	int 60
	invokevirtual	Method scala/collection/mutable/StringBuilder.append:(C)Lscala/collection/mutable/StringBuilder;
	pop
	aload_1
	aload_3
	invokevirtual	Method scala/xml/Node.nameToString:(Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;
	pop
	aload_1
	invokevirtual	Method scala/xml/Node.attributes:()Lscala/xml/MetaData;
	ifnull	l7 // getstatic
	aload_1
	invokevirtual	Method scala/xml/Node.attributes:()Lscala/xml/MetaData;
	aload_3
	invokevirtual	Method scala/xml/MetaData.buildString:(Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;
	goto	l8 // pop
l7	getstatic	Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
l8	pop
	aload_1
	invokevirtual	Method scala/xml/Node.scope:()Lscala/xml/NamespaceBinding;
	aload_3
	aload_2
	invokevirtual	Method scala/xml/NamespaceBinding.buildString:(Lscala/collection/mutable/StringBuilder;Lscala/xml/NamespaceBinding;)V
	aload_1
	invokevirtual	Method scala/xml/Node.child:()Lscala/collection/Seq;
	invokeinterface	InterfaceMethod scala/collection/IterableLike.isEmpty:()Z
	ifeq	l9 // aload_3
	iload	7
	ifeq	l9 // aload_3
	aload_3
	ldc	String  />
	invokevirtual	Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
	goto	l3 // areturn
l9	aload_3
	ldc	int 62
	invokevirtual	Method scala/collection/mutable/StringBuilder.append:(C)Lscala/collection/mutable/StringBuilder;
	pop
	aload_0
	aload_1
	invokevirtual	Method scala/xml/Node.child:()Lscala/collection/Seq;
	aload_1
	invokevirtual	Method scala/xml/Node.scope:()Lscala/xml/NamespaceBinding;
	aload_3
	iload	4
	invokevirtual	Method sequenceToXML:(Lscala/collection/Seq;Lscala/xml/NamespaceBinding;Lscala/collection/mutable/StringBuilder;Z)V
	aload_3
	ldc	String </
	invokevirtual	Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
	pop
	aload_1
	aload_3
	invokevirtual	Method scala/xml/Node.nameToString:(Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;
	pop
	aload_3
	ldc	int 62
	invokevirtual	Method scala/collection/mutable/StringBuilder.append:(C)Lscala/collection/mutable/StringBuilder;
l3	areturn
  Labels:
   	l2 = 33 // aload
   	l1 = 40 // aload_1
   	l4 = 53 // aload
   	l5 = 62 // aload_1
   	l6 = 98 // aload_3
   	l7 = 129 // getstatic
   	l8 = 132 // pop
   	l9 = 168 // aload_3
   	l3 = 209 // areturn


public void sequenceToXML(scala.collection.Seq, scala.xml.NamespaceBinding, scala.collection.mutable.StringBuilder, boolean);
  Signature: (Lscala/collection/Seq;Lscala/xml/NamespaceBinding;Lscala/collection/mutable/StringBuilder;Z)V
  Code:
   Stack=8, Locals=8, Args_size=5
	aload_1
	invokeinterface	InterfaceMethod scala/collection/IterableLike.isEmpty:()Z
	ifeq	l1 // aload_1
	return
l1	aload_1
	new	class scala/xml/Utility$$anonfun$sequenceToXML$1
	dup
	invokespecial	Method scala/xml/Utility$$anonfun$sequenceToXML$1."<init>":()V
	invokeinterface	InterfaceMethod scala/collection/IterableLike.forall:(Lscala/Function1;)Z
	ifeq	l2 // aload_1
	aload_1
	invokeinterface	InterfaceMethod scala/collection/IterableLike.iterator:()Lscala/collection/Iterator;
	astore	6
	aload	6
	invokeinterface	InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
	checkcast	class scala/xml/Node
	astore	5
	aload_0
	aload	5
	aload_2
	aload_3
	iconst_0
	iconst_1
	iconst_0
	iconst_0
	invokevirtual	Method toXML:(Lscala/xml/Node;Lscala/xml/NamespaceBinding;Lscala/collection/mutable/StringBuilder;ZZZZ)Lscala/collection/mutable/StringBuilder;
	pop
l4	aload	6
	invokeinterface	InterfaceMethod scala/collection/Iterator.hasNext:()Z
	ifeq	l3 // return
	aload	6
	invokeinterface	InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
	checkcast	class scala/xml/Node
	astore	7
	aload_3
	ldc	int 32
	invokevirtual	Method scala/collection/mutable/StringBuilder.append:(C)Lscala/collection/mutable/StringBuilder;
	pop
	aload_0
	aload	7
	aload_2
	aload_3
	iconst_0
	iconst_1
	iconst_0
	iconst_0
	invokevirtual	Method toXML:(Lscala/xml/Node;Lscala/xml/NamespaceBinding;Lscala/collection/mutable/StringBuilder;ZZZZ)Lscala/collection/mutable/StringBuilder;
	pop
	goto	l4 // aload
l2	aload_1
	new	class scala/xml/Utility$$anonfun$sequenceToXML$2
	dup
	aload_2
	aload_3
	invokespecial	Method scala/xml/Utility$$anonfun$sequenceToXML$2."<init>":(Lscala/xml/NamespaceBinding;Lscala/collection/mutable/StringBuilder;)V
	invokeinterface	InterfaceMethod scala/collection/IterableLike.foreach:(Lscala/Function1;)V
l3	return
  Labels:
   	l1 = 10 // aload_1
   	l4 = 59 // aload
   	l2 = 104 // aload_1
   	l3 = 119 // return

  Signature: length = 0x2
   00 7E 

private final boolean gd1$1(scala.xml.Comment, boolean);
  Signature: (Lscala/xml/Comment;Z)Z
  Code:
   Stack=1, Locals=3, Args_size=3
	iload_2
	ifeq	l1 // iconst_1
	iconst_0
	goto	l2 // ireturn
l1	iconst_1
l2	ireturn
  Labels:
   	l1 = 8 // iconst_1
   	l2 = 9 // ireturn

private scala.xml.Utility$();
  Signature: ()V
  Code:
   Stack=1, Locals=1, Args_size=1
	aload_0
	invokespecial	Method java/lang/Object."<init>":()V
	aload_0
	putstatic	Field MODULE$:Lscala/xml/Utility$;
	aload_0
	invokestatic	Method scala/xml/parsing/TokenTests$class.$init$:(Lscala/xml/parsing/TokenTests;)V
	return
  Labels:

}

