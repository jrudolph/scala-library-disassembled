Compiled from "Utility.scala"
public final class scala.xml.Utility$ extends java.lang.Object implements scala.xml.parsing.TokenTests,scala.ScalaObject
  SourceFile: "Utility.scala"
  Scala: length = 0x
   
  InnerClass: 
   public final #807= #698 of #806; //$anonfun$2=class scala/xml/Utility$$anonfun$2 of class scala/xml/Utility
   public final #808= #198 of #806; //$anonfun$5=class scala/xml/Utility$$anonfun$5 of class scala/xml/Utility
   public final #809= #691 of #806; //$anonfun$1=class scala/xml/Utility$$anonfun$1 of class scala/xml/Utility
   public final #810= #193 of #806; //$anonfun$4=class scala/xml/Utility$$anonfun$4 of class scala/xml/Utility
   public final #811= #203 of #806; //$anonfun$6=class scala/xml/Utility$$anonfun$6 of class scala/xml/Utility
   public final #812= #753 of #806; //$anonfun$trim$1=class scala/xml/Utility$$anonfun$trim$1 of class scala/xml/Utility
   public final #813= #656 of #806; //$anonfun$sort$1=class scala/xml/Utility$$anonfun$sort$1 of class scala/xml/Utility
   public final #814= #494 of #806; //$anonfun$toXML$1=class scala/xml/Utility$$anonfun$toXML$1 of class scala/xml/Utility
   public final #815= #618 of #806; //$anonfun$escape$1=class scala/xml/Utility$$anonfun$escape$1 of class scala/xml/Utility
   public final #816= #613 of #806; //$anonfun$escape$2=class scala/xml/Utility$$anonfun$escape$2 of class scala/xml/Utility
   public final #817= #342 of #806; //$anonfun$getName$1=class scala/xml/Utility$$anonfun$getName$1 of class scala/xml/Utility
   public final #818= #595 of #806; //$anonfun$unescape$1=class scala/xml/Utility$$anonfun$unescape$1 of class scala/xml/Utility
   public final #819= #604 of #806; //$anonfun$unescape$2=class scala/xml/Utility$$anonfun$unescape$2 of class scala/xml/Utility
   public final #820= #721 of #806; //$anonfun$trimProper$1=class scala/xml/Utility$$anonfun$trimProper$1 of class scala/xml/Utility
   public final #821= #392 of #806; //$anonfun$appendQuoted$1=class scala/xml/Utility$$anonfun$appendQuoted$1 of class scala/xml/Utility
   public final #822= #444 of #806; //$anonfun$sequenceToXML$1=class scala/xml/Utility$$anonfun$sequenceToXML$1 of class scala/xml/Utility
   public final #823= #464 of #806; //$anonfun$sequenceToXML$2=class scala/xml/Utility$$anonfun$sequenceToXML$2 of class scala/xml/Utility
   public final #824= #571 of #806; //$anonfun$collectNamespaces$1=class scala/xml/Utility$$anonfun$collectNamespaces$1 of class scala/xml/Utility
   public final #825= #558 of #806; //$anonfun$collectNamespaces$3=class scala/xml/Utility$$anonfun$collectNamespaces$3 of class scala/xml/Utility
   public final #826= #554 of #806; //$anonfun$collectNamespaces$2=class scala/xml/Utility$$anonfun$collectNamespaces$2 of class scala/xml/Utility
   public final #827= #376 of #806; //$anonfun$appendEscapedQuoted$1=class scala/xml/Utility$$anonfun$appendEscapedQuoted$1 of class scala/xml/Utility
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Asciz	SourceFile;
const #2 = Asciz	Utility.scala;
const #3 = Asciz	Scala;
const #4 = Asciz	MODULE$;
const #5 = Asciz	Lscala/xml/Utility$;;
const #6 = Asciz	<clinit>;
const #7 = Asciz	()V;
const #8 = Asciz	Code;
const #9 = Asciz	scala/xml/Utility$;
const #10 = class	#9;	//  scala/xml/Utility$
const #11 = Asciz	<init>;
const #12 = NameAndType	#11:#7;//  "<init>":()V
const #13 = Method	#10.#12;	//  scala/xml/Utility$."<init>":()V
const #14 = Asciz	LineNumberTable;
const #15 = Asciz	java/lang/Object;
const #16 = class	#15;	//  java/lang/Object
const #17 = Method	#16.#12;	//  java/lang/Object."<init>":()V
const #18 = NameAndType	#4:#5;//  MODULE$:Lscala/xml/Utility$;
const #19 = Field	#10.#18;	//  scala/xml/Utility$.MODULE$:Lscala/xml/Utility$;
const #20 = Asciz	scala/xml/parsing/TokenTests$class;
const #21 = class	#20;	//  scala/xml/parsing/TokenTests$class
const #22 = Asciz	$init$;
const #23 = Asciz	(Lscala/xml/parsing/TokenTests;)V;
const #24 = NameAndType	#22:#23;//  $init$:(Lscala/xml/parsing/TokenTests;)V
const #25 = Method	#21.#24;	//  scala/xml/parsing/TokenTests$class.$init$:(Lscala/xml/parsing/TokenTests;)V
const #26 = Asciz	gd2$1;
const #27 = Asciz	(Lscala/collection/Sequence;C)Z;
const #28 = Asciz	scala/xml/parsing/TokenTests;
const #29 = class	#28;	//  scala/xml/parsing/TokenTests
const #30 = Asciz	isNameStart;
const #31 = Asciz	(C)Z;
const #32 = NameAndType	#30:#31;//  isNameStart:(C)Z
const #33 = InterfaceMethod	#29.#32;	//  scala/xml/parsing/TokenTests.isNameStart:(C)Z
const #34 = Asciz	gd1$1;
const #35 = Asciz	(Lscala/xml/Comment;Z)Z;
const #36 = Asciz	toXML$default$2;
const #37 = Asciz	()Lscala/xml/NamespaceBinding;;
const #38 = Asciz	scala/xml/TopScope$;
const #39 = class	#38;	//  scala/xml/TopScope$
const #40 = Asciz	Lscala/xml/TopScope$;;
const #41 = NameAndType	#4:#40;//  MODULE$:Lscala/xml/TopScope$;
const #42 = Field	#39.#41;	//  scala/xml/TopScope$.MODULE$:Lscala/xml/TopScope$;
const #43 = Asciz	toXML$default$3;
const #44 = Asciz	()Lscala/collection/mutable/StringBuilder;;
const #45 = Asciz	scala/collection/mutable/StringBuilder;
const #46 = class	#45;	//  scala/collection/mutable/StringBuilder
const #47 = Method	#46.#12;	//  scala/collection/mutable/StringBuilder."<init>":()V
const #48 = Asciz	toXML$default$4;
const #49 = Asciz	()Z;
const #50 = Asciz	toXML$default$5;
const #51 = Asciz	toXML$default$6;
const #52 = Asciz	toXML$default$7;
const #53 = Asciz	sequenceToXML$default$2;
const #54 = Asciz	sequenceToXML$default$3;
const #55 = Asciz	sequenceToXML$default$4;
const #56 = Asciz	parseCharRef;
const #57 = Asciz	(Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/String;;
const #58 = Asciz	scala/Function0;
const #59 = class	#58;	//  scala/Function0
const #60 = Asciz	apply;
const #61 = Asciz	()Ljava/lang/Object;;
const #62 = NameAndType	#60:#61;//  apply:()Ljava/lang/Object;
const #63 = InterfaceMethod	#59.#62;	//  scala/Function0.apply:()Ljava/lang/Object;
const #64 = Asciz	scala/runtime/BoxesRunTime;
const #65 = class	#64;	//  scala/runtime/BoxesRunTime
const #66 = Asciz	unboxToChar;
const #67 = Asciz	(Ljava/lang/Object;)C;
const #68 = NameAndType	#66:#67;//  unboxToChar:(Ljava/lang/Object;)C
const #69 = Method	#65.#68;	//  scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
const #70 = int	120;
const #71 = int	16;
const #72 = int	10;
const #73 = int	59;
const #74 = Method	#46.#12;	//  scala/collection/mutable/StringBuilder."<init>":()V
const #75 = Asciz	character ';
const #76 = String	#75;	//  character '
const #77 = Asciz	append;
const #78 = Asciz	(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;;
const #79 = NameAndType	#77:#78;//  append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
const #80 = Method	#46.#79;	//  scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
const #81 = Asciz	' not allowed in char ref\n;
const #82 = String	#81;	//  ' not allowed in char ref\n
const #83 = Asciz	toString;
const #84 = Asciz	()Ljava/lang/String;;
const #85 = NameAndType	#83:#84;//  toString:()Ljava/lang/String;
const #86 = Method	#46.#85;	//  scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
const #87 = Asciz	scala/Function1;
const #88 = class	#87;	//  scala/Function1
const #89 = Asciz	(Ljava/lang/Object;)Ljava/lang/Object;;
const #90 = NameAndType	#60:#89;//  apply:(Ljava/lang/Object;)Ljava/lang/Object;
const #91 = InterfaceMethod	#88.#90;	//  scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
const #92 = Asciz	scala/Predef$;
const #93 = class	#92;	//  scala/Predef$
const #94 = Asciz	Lscala/Predef$;;
const #95 = NameAndType	#4:#94;//  MODULE$:Lscala/Predef$;
const #96 = Field	#93.#95;	//  scala/Predef$.MODULE$:Lscala/Predef$;
const #97 = Asciz	charWrapper;
const #98 = Asciz	(C)Lscala/runtime/RichChar;;
const #99 = NameAndType	#97:#98;//  charWrapper:(C)Lscala/runtime/RichChar;
const #100 = Method	#93.#99;	//  scala/Predef$.charWrapper:(C)Lscala/runtime/RichChar;
const #101 = Asciz	scala/runtime/RichChar;
const #102 = class	#101;	//  scala/runtime/RichChar
const #103 = Asciz	asDigit;
const #104 = Asciz	()I;
const #105 = NameAndType	#103:#104;//  asDigit:()I
const #106 = Method	#102.#105;	//  scala/runtime/RichChar.asDigit:()I
const #107 = Asciz	hex char not allowed in decimal char ref\nDid you mean to write &#x ?;
const #108 = String	#107;	//  hex char not allowed in decimal char ref\nDid you mean to write &#x ?
const #109 = Asciz	scala/runtime/BoxedUnit;
const #110 = class	#109;	//  scala/runtime/BoxedUnit
const #111 = Asciz	UNIT;
const #112 = Asciz	Lscala/runtime/BoxedUnit;;
const #113 = NameAndType	#111:#112;//  UNIT:Lscala/runtime/BoxedUnit;
const #114 = Field	#110.#113;	//  scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
const #115 = Asciz	java/lang/String;
const #116 = class	#115;	//  java/lang/String
const #117 = Asciz	scala/io/UTF8Codec$;
const #118 = class	#117;	//  scala/io/UTF8Codec$
const #119 = Asciz	Lscala/io/UTF8Codec$;;
const #120 = NameAndType	#4:#119;//  MODULE$:Lscala/io/UTF8Codec$;
const #121 = Field	#118.#120;	//  scala/io/UTF8Codec$.MODULE$:Lscala/io/UTF8Codec$;
const #122 = Asciz	encode;
const #123 = Asciz	(I)[B;
const #124 = NameAndType	#122:#123;//  encode:(I)[B
const #125 = Method	#118.#124;	//  scala/io/UTF8Codec$.encode:(I)[B
const #126 = Asciz	utf8;
const #127 = String	#126;	//  utf8
const #128 = Asciz	([BLjava/lang/String;)V;
const #129 = NameAndType	#11:#128;//  "<init>":([BLjava/lang/String;)V
const #130 = Method	#116.#129;	//  java/lang/String."<init>":([BLjava/lang/String;)V
const #131 = Asciz	this;
const #132 = Asciz	ch;
const #133 = Asciz	Lscala/Function0;;
const #134 = Asciz	nextch;
const #135 = Asciz	reportSyntaxError;
const #136 = Asciz	Lscala/Function1;;
const #137 = Asciz	hex;
const #138 = Asciz	Z;
const #139 = Asciz	base;
const #140 = Asciz	I;
const #141 = Asciz	i;
const #142 = Asciz	temp59;
const #143 = Asciz	C;
const #144 = Asciz	LocalVariableTable;
const #145 = Asciz	(Lscala/Function0<Ljava/lang/Character;>;Lscala/Function0<Ljava/lang/Object;>;Lscala/Function1<Ljava/lang/String;Ljava/lang/Object;>;)Ljava/lang/String;;
const #146 = Asciz	Signature;
const #147 = Asciz	parseAttributeValue;
const #148 = Asciz	(Ljava/lang/String;)Lscala/collection/Sequence;;
const #149 = Asciz	stringWrapper;
const #150 = Asciz	(Ljava/lang/String;)Lscala/runtime/RichString;;
const #151 = NameAndType	#149:#150;//  stringWrapper:(Ljava/lang/String;)Lscala/runtime/RichString;
const #152 = Method	#93.#151;	//  scala/Predef$.stringWrapper:(Ljava/lang/String;)Lscala/runtime/RichString;
const #153 = Asciz	scala/xml/NodeBuffer;
const #154 = class	#153;	//  scala/xml/NodeBuffer
const #155 = Method	#154.#12;	//  scala/xml/NodeBuffer."<init>":()V
const #156 = Asciz	scala/collection/generic/IterableTemplate;
const #157 = class	#156;	//  scala/collection/generic/IterableTemplate
const #158 = Asciz	iterator;
const #159 = Asciz	()Lscala/collection/Iterator;;
const #160 = NameAndType	#158:#159;//  iterator:()Lscala/collection/Iterator;
const #161 = InterfaceMethod	#157.#160;	//  scala/collection/generic/IterableTemplate.iterator:()Lscala/collection/Iterator;
const #162 = Asciz	scala/collection/Iterator;
const #163 = class	#162;	//  scala/collection/Iterator
const #164 = Asciz	hasNext;
const #165 = NameAndType	#164:#49;//  hasNext:()Z
const #166 = InterfaceMethod	#163.#165;	//  scala/collection/Iterator.hasNext:()Z
const #167 = Asciz	scala/runtime/CharRef;
const #168 = class	#167;	//  scala/runtime/CharRef
const #169 = Asciz	next;
const #170 = NameAndType	#169:#61;//  next:()Ljava/lang/Object;
const #171 = InterfaceMethod	#163.#170;	//  scala/collection/Iterator.next:()Ljava/lang/Object;
const #172 = Asciz	(C)V;
const #173 = NameAndType	#11:#172;//  "<init>":(C)V
const #174 = Method	#168.#173;	//  scala/runtime/CharRef."<init>":(C)V
const #175 = Asciz	elem;
const #176 = NameAndType	#175:#143;//  elem:C
const #177 = Field	#168.#176;	//  scala/runtime/CharRef.elem:C
const #178 = Asciz	boxToCharacter;
const #179 = Asciz	(C)Ljava/lang/Character;;
const #180 = NameAndType	#178:#179;//  boxToCharacter:(C)Ljava/lang/Character;
const #181 = Method	#65.#180;	//  scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
const #182 = int	38;
const #183 = Asciz	boxToInteger;
const #184 = Asciz	(I)Ljava/lang/Integer;;
const #185 = NameAndType	#183:#184;//  boxToInteger:(I)Ljava/lang/Integer;
const #186 = Method	#65.#185;	//  scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
const #187 = Asciz	equals;
const #188 = Asciz	(Ljava/lang/Object;Ljava/lang/Object;)Z;
const #189 = NameAndType	#187:#188;//  equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
const #190 = Method	#65.#189;	//  scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
const #191 = int	35;
const #192 = Asciz	scala/xml/Utility$$anonfun$4;
const #193 = class	#192;	//  scala/xml/Utility$$anonfun$4
const #194 = Asciz	(Lscala/runtime/CharRef;)V;
const #195 = NameAndType	#11:#194;//  "<init>":(Lscala/runtime/CharRef;)V
const #196 = Method	#193.#195;	//  scala/xml/Utility$$anonfun$4."<init>":(Lscala/runtime/CharRef;)V
const #197 = Asciz	scala/xml/Utility$$anonfun$5;
const #198 = class	#197;	//  scala/xml/Utility$$anonfun$5
const #199 = Asciz	(Lscala/collection/Iterator;Lscala/runtime/CharRef;)V;
const #200 = NameAndType	#11:#199;//  "<init>":(Lscala/collection/Iterator;Lscala/runtime/CharRef;)V
const #201 = Method	#198.#200;	//  scala/xml/Utility$$anonfun$5."<init>":(Lscala/collection/Iterator;Lscala/runtime/CharRef;)V
const #202 = Asciz	scala/xml/Utility$$anonfun$6;
const #203 = class	#202;	//  scala/xml/Utility$$anonfun$6
const #204 = Method	#203.#12;	//  scala/xml/Utility$$anonfun$6."<init>":()V
const #205 = NameAndType	#56:#57;//  parseCharRef:(Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/String;
const #206 = Method	#10.#205;	//  scala/xml/Utility$.parseCharRef:(Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/String;
const #207 = Asciz	(Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;;
const #208 = NameAndType	#77:#207;//  append:(Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
const #209 = Method	#46.#208;	//  scala/collection/mutable/StringBuilder.append:(Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
const #210 = Asciz	(C)Lscala/collection/mutable/StringBuilder;;
const #211 = NameAndType	#77:#210;//  append:(C)Lscala/collection/mutable/StringBuilder;
const #212 = Method	#46.#211;	//  scala/collection/mutable/StringBuilder.append:(C)Lscala/collection/mutable/StringBuilder;
const #213 = Method	#46.#85;	//  scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
const #214 = Asciz	setLength;
const #215 = Asciz	(I)V;
const #216 = NameAndType	#214:#215;//  setLength:(I)V
const #217 = Method	#46.#216;	//  scala/collection/mutable/StringBuilder.setLength:(I)V
const #218 = Asciz	unescape;
const #219 = Asciz	(Ljava/lang/String;Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;;
const #220 = NameAndType	#218:#219;//  unescape:(Ljava/lang/String;Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;
const #221 = Method	#10.#220;	//  scala/xml/Utility$.unescape:(Ljava/lang/String;Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;
const #222 = Asciz	length;
const #223 = NameAndType	#222:#104;//  length:()I
const #224 = Method	#46.#223;	//  scala/collection/mutable/StringBuilder.length:()I
const #225 = Asciz	scala/xml/Text;
const #226 = class	#225;	//  scala/xml/Text
const #227 = Asciz	(Ljava/lang/String;)V;
const #228 = NameAndType	#11:#227;//  "<init>":(Ljava/lang/String;)V
const #229 = Method	#226.#228;	//  scala/xml/Text."<init>":(Ljava/lang/String;)V
const #230 = Asciz	$plus$eq;
const #231 = Asciz	(Ljava/lang/Object;)Lscala/collection/mutable/ArrayBuffer;;
const #232 = NameAndType	#230:#231;//  $plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/ArrayBuffer;
const #233 = Method	#154.#232;	//  scala/xml/NodeBuffer.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/ArrayBuffer;
const #234 = Asciz	scala/xml/EntityRef;
const #235 = class	#234;	//  scala/xml/EntityRef
const #236 = Method	#235.#228;	//  scala/xml/EntityRef."<init>":(Ljava/lang/String;)V
const #237 = Asciz	scala/collection/mutable/ResizableArray;
const #238 = class	#237;	//  scala/collection/mutable/ResizableArray
const #239 = InterfaceMethod	#238.#223;	//  scala/collection/mutable/ResizableArray.length:()I
const #240 = Asciz	value;
const #241 = Asciz	Ljava/lang/String;;
const #242 = Asciz	zs;
const #243 = Asciz	Lscala/collection/Sequence;;
const #244 = Asciz	sb;
const #245 = Asciz	Lscala/collection/mutable/StringBuilder;;
const #246 = Asciz	rfb;
const #247 = Asciz	nb;
const #248 = Asciz	Lscala/xml/NodeBuffer;;
const #249 = Asciz	it$1;
const #250 = Asciz	Lscala/collection/Iterator;;
const #251 = Asciz	c$1;
const #252 = Asciz	Lscala/runtime/CharRef;;
const #253 = Asciz	temp58;
const #254 = Asciz	temp57;
const #255 = Asciz	theChar;
const #256 = Asciz	ref;
const #257 = Asciz	temp55;
const #258 = Asciz	x;
const #259 = Asciz	Lscala/xml/Text;;
const #260 = Asciz	(Ljava/lang/String;)Lscala/collection/Sequence<Lscala/xml/Node;>;;
const #261 = Asciz	checkAttributeValue;
const #262 = Asciz	(Ljava/lang/String;)Ljava/lang/String;;
const #263 = Method	#116.#223;	//  java/lang/String.length:()I
const #264 = Asciz	charAt;
const #265 = Asciz	(I)C;
const #266 = NameAndType	#264:#265;//  charAt:(I)C
const #267 = Method	#116.#266;	//  java/lang/String.charAt:(I)C
const #268 = Asciz	< not allowed in attribute value;
const #269 = String	#268;	//  < not allowed in attribute value
const #270 = Asciz	getName;
const #271 = Asciz	(Ljava/lang/String;I)Ljava/lang/String;;
const #272 = NameAndType	#270:#271;//  getName:(Ljava/lang/String;I)Ljava/lang/String;
const #273 = Method	#10.#272;	//  scala/xml/Utility$.getName:(Ljava/lang/String;I)Ljava/lang/String;
const #274 = Asciz	malformed entity reference in attribute value [;
const #275 = String	#274;	//  malformed entity reference in attribute value [
const #276 = Asciz	];
const #277 = String	#276;	//  ]
const #278 = Asciz	temp54;
const #279 = Asciz	n;
const #280 = Asciz	scala/collection/generic/VectorTemplate;
const #281 = class	#280;	//  scala/collection/generic/VectorTemplate
const #282 = Asciz	drop;
const #283 = Asciz	(I)Lscala/collection/generic/VectorTemplate;;
const #284 = NameAndType	#282:#283;//  drop:(I)Lscala/collection/generic/VectorTemplate;
const #285 = InterfaceMethod	#281.#284;	//  scala/collection/generic/VectorTemplate.drop:(I)Lscala/collection/generic/VectorTemplate;
const #286 = Asciz	scala/runtime/RichString;
const #287 = class	#286;	//  scala/runtime/RichString
const #288 = Asciz	scala/collection/Sequence$;
const #289 = class	#288;	//  scala/collection/Sequence$
const #290 = Asciz	Lscala/collection/Sequence$;;
const #291 = NameAndType	#4:#290;//  MODULE$:Lscala/collection/Sequence$;
const #292 = Field	#289.#291;	//  scala/collection/Sequence$.MODULE$:Lscala/collection/Sequence$;
const #293 = Asciz	unapplySeq;
const #294 = Asciz	(Lscala/collection/Sequence;)Lscala/Some;;
const #295 = NameAndType	#293:#294;//  unapplySeq:(Lscala/collection/Sequence;)Lscala/Some;
const #296 = Method	#289.#295;	//  scala/collection/Sequence$.unapplySeq:(Lscala/collection/Sequence;)Lscala/Some;
const #297 = Asciz	scala/Some;
const #298 = class	#297;	//  scala/Some
const #299 = Asciz	get;
const #300 = NameAndType	#299:#61;//  get:()Ljava/lang/Object;
const #301 = Method	#298.#300;	//  scala/Some.get:()Ljava/lang/Object;
const #302 = Asciz	scala/collection/Sequence;
const #303 = class	#302;	//  scala/collection/Sequence
const #304 = Asciz	scala/runtime/ScalaRunTime$;
const #305 = class	#304;	//  scala/runtime/ScalaRunTime$
const #306 = Asciz	Lscala/runtime/ScalaRunTime$;;
const #307 = NameAndType	#4:#306;//  MODULE$:Lscala/runtime/ScalaRunTime$;
const #308 = Field	#305.#307;	//  scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
const #309 = Asciz	boxArray;
const #310 = Asciz	(Ljava/lang/Object;)Lscala/runtime/BoxedArray;;
const #311 = NameAndType	#309:#310;//  boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
const #312 = Method	#305.#311;	//  scala/runtime/ScalaRunTime$.boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
const #313 = Asciz	scala/collection/generic/SequenceTemplate;
const #314 = class	#313;	//  scala/collection/generic/SequenceTemplate
const #315 = Asciz	lengthCompare;
const #316 = Asciz	(I)I;
const #317 = NameAndType	#315:#316;//  lengthCompare:(I)I
const #318 = InterfaceMethod	#314.#317;	//  scala/collection/generic/SequenceTemplate.lengthCompare:(I)I
const #319 = Asciz	(I)Ljava/lang/Object;;
const #320 = NameAndType	#60:#319;//  apply:(I)Ljava/lang/Object;
const #321 = InterfaceMethod	#314.#320;	//  scala/collection/generic/SequenceTemplate.apply:(I)Ljava/lang/Object;
const #322 = Asciz	scala/collection/generic/TraversableTemplate;
const #323 = class	#322;	//  scala/collection/generic/TraversableTemplate
const #324 = Asciz	(I)Lscala/collection/generic/TraversableTemplate;;
const #325 = NameAndType	#282:#324;//  drop:(I)Lscala/collection/generic/TraversableTemplate;
const #326 = InterfaceMethod	#323.#325;	//  scala/collection/generic/TraversableTemplate.drop:(I)Lscala/collection/generic/TraversableTemplate;
const #327 = Asciz	toSeq;
const #328 = Asciz	()Lscala/collection/Sequence;;
const #329 = NameAndType	#327:#328;//  toSeq:()Lscala/collection/Sequence;
const #330 = InterfaceMethod	#157.#329;	//  scala/collection/generic/IterableTemplate.toSeq:()Lscala/collection/Sequence;
const #331 = NameAndType	#26:#27;//  gd2$1:(Lscala/collection/Sequence;C)Z
const #332 = Method	#10.#331;	//  scala/xml/Utility$.gd2$1:(Lscala/collection/Sequence;C)Z
const #333 = Asciz	scala/Array$;
const #334 = class	#333;	//  scala/Array$
const #335 = Asciz	Lscala/Array$;;
const #336 = NameAndType	#4:#335;//  MODULE$:Lscala/Array$;
const #337 = Field	#334.#336;	//  scala/Array$.MODULE$:Lscala/Array$;
const #338 = Asciz	(Lscala/collection/Sequence;)[C;
const #339 = NameAndType	#60:#338;//  apply:(Lscala/collection/Sequence;)[C
const #340 = Method	#334.#339;	//  scala/Array$.apply:(Lscala/collection/Sequence;)[C
const #341 = Asciz	scala/xml/Utility$$anonfun$getName$1;
const #342 = class	#341;	//  scala/xml/Utility$$anonfun$getName$1
const #343 = Method	#342.#12;	//  scala/xml/Utility$$anonfun$getName$1."<init>":()V
const #344 = Asciz	takeWhile;
const #345 = Asciz	(Lscala/Function1;)Lscala/collection/generic/TraversableTemplate;;
const #346 = NameAndType	#344:#345;//  takeWhile:(Lscala/Function1;)Lscala/collection/generic/TraversableTemplate;
const #347 = InterfaceMethod	#323.#346;	//  scala/collection/generic/TraversableTemplate.takeWhile:(Lscala/Function1;)Lscala/collection/generic/TraversableTemplate;
const #348 = Asciz	scala/collection/Traversable;
const #349 = class	#348;	//  scala/collection/Traversable
const #350 = Asciz	builderFactory;
const #351 = Asciz	()Lscala/collection/generic/BuilderFactory;;
const #352 = NameAndType	#350:#351;//  builderFactory:()Lscala/collection/generic/BuilderFactory;
const #353 = Method	#334.#352;	//  scala/Array$.builderFactory:()Lscala/collection/generic/BuilderFactory;
const #354 = Asciz	$plus$plus;
const #355 = Asciz	(Lscala/collection/Traversable;Lscala/collection/generic/BuilderFactory;)Ljava/lang/Object;;
const #356 = NameAndType	#354:#355;//  $plus$plus:(Lscala/collection/Traversable;Lscala/collection/generic/BuilderFactory;)Ljava/lang/Object;
const #357 = InterfaceMethod	#323.#356;	//  scala/collection/generic/TraversableTemplate.$plus$plus:(Lscala/collection/Traversable;Lscala/collection/generic/BuilderFactory;)Ljava/lang/Object;
const #358 = Asciz	mkString;
const #359 = NameAndType	#358:#84;//  mkString:()Ljava/lang/String;
const #360 = InterfaceMethod	#323.#359;	//  scala/collection/generic/TraversableTemplate.mkString:()Ljava/lang/String;
const #361 = Asciz	;
const #362 = String	#361;	//  
const #363 = Asciz	s;
const #364 = Asciz	index;
const #365 = Asciz	temp49;
const #366 = Asciz	Lscala/runtime/RichString;;
const #367 = Asciz	temp50;
const #368 = Asciz	Lscala/Some;;
const #369 = Asciz	temp51;
const #370 = Asciz	temp52;
const #371 = Asciz	temp53;
const #372 = Asciz	xs;
const #373 = Asciz	appendEscapedQuoted;
const #374 = int	34;
const #375 = Asciz	scala/xml/Utility$$anonfun$appendEscapedQuoted$1;
const #376 = class	#375;	//  scala/xml/Utility$$anonfun$appendEscapedQuoted$1
const #377 = Asciz	(Lscala/collection/mutable/StringBuilder;)V;
const #378 = NameAndType	#11:#377;//  "<init>":(Lscala/collection/mutable/StringBuilder;)V
const #379 = Method	#376.#378;	//  scala/xml/Utility$$anonfun$appendEscapedQuoted$1."<init>":(Lscala/collection/mutable/StringBuilder;)V
const #380 = Asciz	foreach;
const #381 = Asciz	(Lscala/Function1;)V;
const #382 = NameAndType	#380:#381;//  foreach:(Lscala/Function1;)V
const #383 = InterfaceMethod	#281.#382;	//  scala/collection/generic/VectorTemplate.foreach:(Lscala/Function1;)V
const #384 = Asciz	sb$3;
const #385 = Asciz	appendQuoted;
const #386 = Asciz	contains;
const #387 = Asciz	(Ljava/lang/Object;)Z;
const #388 = NameAndType	#386:#387;//  contains:(Ljava/lang/Object;)Z
const #389 = InterfaceMethod	#314.#388;	//  scala/collection/generic/SequenceTemplate.contains:(Ljava/lang/Object;)Z
const #390 = int	39;
const #391 = Asciz	scala/xml/Utility$$anonfun$appendQuoted$1;
const #392 = class	#391;	//  scala/xml/Utility$$anonfun$appendQuoted$1
const #393 = Method	#392.#228;	//  scala/xml/Utility$$anonfun$appendQuoted$1."<init>":(Ljava/lang/String;)V
const #394 = Asciz	sbToString;
const #395 = Asciz	(Lscala/Function1;)Ljava/lang/String;;
const #396 = NameAndType	#394:#395;//  sbToString:(Lscala/Function1;)Ljava/lang/String;
const #397 = Method	#10.#396;	//  scala/xml/Utility$.sbToString:(Lscala/Function1;)Ljava/lang/String;
const #398 = Asciz	s$2;
const #399 = Asciz	hashCode;
const #400 = Asciz	(Ljava/lang/String;Ljava/lang/String;IILscala/collection/Sequence;)I;
const #401 = int	41;
const #402 = NameAndType	#399:#104;//  hashCode:()I
const #403 = Method	#116.#402;	//  java/lang/String.hashCode:()I
const #404 = int	7;
const #405 = int	53;
const #406 = int	31;
const #407 = Asciz	scala/xml/Node;
const #408 = class	#407;	//  scala/xml/Node
const #409 = Method	#408.#402;	//  scala/xml/Node.hashCode:()I
const #410 = Asciz	pre;
const #411 = Asciz	label;
const #412 = Asciz	attribHashCode;
const #413 = Asciz	scpeHash;
const #414 = Asciz	children;
const #415 = Asciz	c;
const #416 = Asciz	(Ljava/lang/String;Ljava/lang/String;IILscala/collection/Sequence<Lscala/xml/Node;>;)I;
const #417 = Asciz	prefix;
const #418 = Asciz	(Ljava/lang/String;)Lscala/Option;;
const #419 = int	58;
const #420 = Asciz	indexOf;
const #421 = NameAndType	#420:#316;//  indexOf:(I)I
const #422 = Method	#116.#421;	//  java/lang/String.indexOf:(I)I
const #423 = Asciz	scala/None$;
const #424 = class	#423;	//  scala/None$
const #425 = Asciz	Lscala/None$;;
const #426 = NameAndType	#4:#425;//  MODULE$:Lscala/None$;
const #427 = Field	#424.#426;	//  scala/None$.MODULE$:Lscala/None$;
const #428 = Asciz	substring;
const #429 = Asciz	(II)Ljava/lang/String;;
const #430 = NameAndType	#428:#429;//  substring:(II)Ljava/lang/String;
const #431 = Method	#116.#430;	//  java/lang/String.substring:(II)Ljava/lang/String;
const #432 = Asciz	(Ljava/lang/Object;)V;
const #433 = NameAndType	#11:#432;//  "<init>":(Ljava/lang/Object;)V
const #434 = Method	#298.#433;	//  scala/Some."<init>":(Ljava/lang/Object;)V
const #435 = Asciz	name;
const #436 = Asciz	temp47;
const #437 = Asciz	(Ljava/lang/String;)Lscala/Option<Ljava/lang/String;>;;
const #438 = Asciz	sequenceToXML;
const #439 = Asciz	(Lscala/collection/Sequence;Lscala/xml/NamespaceBinding;Lscala/collection/mutable/StringBuilder;Z)V;
const #440 = Asciz	isEmpty;
const #441 = NameAndType	#440:#49;//  isEmpty:()Z
const #442 = InterfaceMethod	#157.#441;	//  scala/collection/generic/IterableTemplate.isEmpty:()Z
const #443 = Asciz	scala/xml/Utility$$anonfun$sequenceToXML$1;
const #444 = class	#443;	//  scala/xml/Utility$$anonfun$sequenceToXML$1
const #445 = Method	#444.#12;	//  scala/xml/Utility$$anonfun$sequenceToXML$1."<init>":()V
const #446 = Asciz	forall;
const #447 = Asciz	(Lscala/Function1;)Z;
const #448 = NameAndType	#446:#447;//  forall:(Lscala/Function1;)Z
const #449 = InterfaceMethod	#323.#448;	//  scala/collection/generic/TraversableTemplate.forall:(Lscala/Function1;)Z
const #450 = NameAndType	#48:#49;//  toXML$default$4:()Z
const #451 = Method	#10.#450;	//  scala/xml/Utility$.toXML$default$4:()Z
const #452 = NameAndType	#50:#49;//  toXML$default$5:()Z
const #453 = Method	#10.#452;	//  scala/xml/Utility$.toXML$default$5:()Z
const #454 = NameAndType	#51:#49;//  toXML$default$6:()Z
const #455 = Method	#10.#454;	//  scala/xml/Utility$.toXML$default$6:()Z
const #456 = NameAndType	#52:#49;//  toXML$default$7:()Z
const #457 = Method	#10.#456;	//  scala/xml/Utility$.toXML$default$7:()Z
const #458 = Asciz	toXML;
const #459 = Asciz	(Lscala/xml/Node;Lscala/xml/NamespaceBinding;Lscala/collection/mutable/StringBuilder;ZZZZ)Lscala/collection/mutable/StringBuilder;;
const #460 = NameAndType	#458:#459;//  toXML:(Lscala/xml/Node;Lscala/xml/NamespaceBinding;Lscala/collection/mutable/StringBuilder;ZZZZ)Lscala/collection/mutable/StringBuilder;
const #461 = Method	#10.#460;	//  scala/xml/Utility$.toXML:(Lscala/xml/Node;Lscala/xml/NamespaceBinding;Lscala/collection/mutable/StringBuilder;ZZZZ)Lscala/collection/mutable/StringBuilder;
const #462 = int	32;
const #463 = Asciz	scala/xml/Utility$$anonfun$sequenceToXML$2;
const #464 = class	#463;	//  scala/xml/Utility$$anonfun$sequenceToXML$2
const #465 = Asciz	(Lscala/xml/NamespaceBinding;Lscala/collection/mutable/StringBuilder;)V;
const #466 = NameAndType	#11:#465;//  "<init>":(Lscala/xml/NamespaceBinding;Lscala/collection/mutable/StringBuilder;)V
const #467 = Method	#464.#466;	//  scala/xml/Utility$$anonfun$sequenceToXML$2."<init>":(Lscala/xml/NamespaceBinding;Lscala/collection/mutable/StringBuilder;)V
const #468 = InterfaceMethod	#157.#382;	//  scala/collection/generic/IterableTemplate.foreach:(Lscala/Function1;)V
const #469 = Asciz	pscope$1;
const #470 = Asciz	Lscala/xml/NamespaceBinding;;
const #471 = Asciz	sb$2;
const #472 = Asciz	stripComments;
const #473 = Asciz	it;
const #474 = Asciz	f;
const #475 = Asciz	Lscala/xml/Node;;
const #476 = Asciz	(Lscala/collection/Sequence<Lscala/xml/Node;>;Lscala/xml/NamespaceBinding;Lscala/collection/mutable/StringBuilder;Z)V;
const #477 = Asciz	scala/xml/Comment;
const #478 = class	#477;	//  scala/xml/Comment
const #479 = NameAndType	#34:#35;//  gd1$1:(Lscala/xml/Comment;Z)Z
const #480 = Method	#10.#479;	//  scala/xml/Utility$.gd1$1:(Lscala/xml/Comment;Z)Z
const #481 = Asciz	buildString;
const #482 = Asciz	(Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;;
const #483 = NameAndType	#481:#482;//  buildString:(Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;
const #484 = Method	#478.#483;	//  scala/xml/Comment.buildString:(Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;
const #485 = Asciz	scala/xml/SpecialNode;
const #486 = class	#485;	//  scala/xml/SpecialNode
const #487 = Method	#486.#483;	//  scala/xml/SpecialNode.buildString:(Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;
const #488 = Asciz	scala/xml/Group;
const #489 = class	#488;	//  scala/xml/Group
const #490 = Asciz	nodes;
const #491 = NameAndType	#490:#328;//  nodes:()Lscala/collection/Sequence;
const #492 = Method	#489.#491;	//  scala/xml/Group.nodes:()Lscala/collection/Sequence;
const #493 = Asciz	scala/xml/Utility$$anonfun$toXML$1;
const #494 = class	#493;	//  scala/xml/Utility$$anonfun$toXML$1
const #495 = Asciz	(Lscala/xml/Node;Lscala/collection/mutable/StringBuilder;)V;
const #496 = NameAndType	#11:#495;//  "<init>":(Lscala/xml/Node;Lscala/collection/mutable/StringBuilder;)V
const #497 = Method	#494.#496;	//  scala/xml/Utility$$anonfun$toXML$1."<init>":(Lscala/xml/Node;Lscala/collection/mutable/StringBuilder;)V
const #498 = int	60;
const #499 = Asciz	nameToString;
const #500 = NameAndType	#499:#482;//  nameToString:(Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;
const #501 = Method	#408.#500;	//  scala/xml/Node.nameToString:(Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;
const #502 = Asciz	attributes;
const #503 = Asciz	()Lscala/xml/MetaData;;
const #504 = NameAndType	#502:#503;//  attributes:()Lscala/xml/MetaData;
const #505 = Method	#408.#504;	//  scala/xml/Node.attributes:()Lscala/xml/MetaData;
const #506 = Asciz	scala/xml/MetaData;
const #507 = class	#506;	//  scala/xml/MetaData
const #508 = Method	#507.#483;	//  scala/xml/MetaData.buildString:(Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;
const #509 = Asciz	scope;
const #510 = NameAndType	#509:#37;//  scope:()Lscala/xml/NamespaceBinding;
const #511 = Method	#408.#510;	//  scala/xml/Node.scope:()Lscala/xml/NamespaceBinding;
const #512 = Asciz	scala/xml/NamespaceBinding;
const #513 = class	#512;	//  scala/xml/NamespaceBinding
const #514 = Asciz	(Lscala/collection/mutable/StringBuilder;Lscala/xml/NamespaceBinding;)V;
const #515 = NameAndType	#481:#514;//  buildString:(Lscala/collection/mutable/StringBuilder;Lscala/xml/NamespaceBinding;)V
const #516 = Method	#513.#515;	//  scala/xml/NamespaceBinding.buildString:(Lscala/collection/mutable/StringBuilder;Lscala/xml/NamespaceBinding;)V
const #517 = Asciz	child;
const #518 = NameAndType	#517:#328;//  child:()Lscala/collection/Sequence;
const #519 = Method	#408.#518;	//  scala/xml/Node.child:()Lscala/collection/Sequence;
const #520 = Asciz	 />;
const #521 = String	#520;	//   />
const #522 = int	62;
const #523 = NameAndType	#438:#439;//  sequenceToXML:(Lscala/collection/Sequence;Lscala/xml/NamespaceBinding;Lscala/collection/mutable/StringBuilder;Z)V
const #524 = Method	#10.#523;	//  scala/xml/Utility$.sequenceToXML:(Lscala/collection/Sequence;Lscala/xml/NamespaceBinding;Lscala/collection/mutable/StringBuilder;Z)V
const #525 = Asciz	</;
const #526 = String	#525;	//  </
const #527 = Asciz	x$9;
const #528 = Asciz	pscope;
const #529 = Asciz	sb$1;
const #530 = Asciz	stripComments$1;
const #531 = Asciz	decodeEntities;
const #532 = Asciz	preserveWhitespace;
const #533 = Asciz	minimizeTags;
const #534 = Asciz	temp41;
const #535 = Asciz	temp42;
const #536 = Asciz	Lscala/xml/Comment;;
const #537 = Asciz	Lscala/xml/SpecialNode;;
const #538 = Asciz	temp45;
const #539 = Asciz	Lscala/xml/Group;;
const #540 = Asciz	collectNamespaces;
const #541 = Asciz	(Lscala/xml/Node;Lscala/collection/mutable/Set;)V;
const #542 = Asciz	doCollectNamespaces;
const #543 = NameAndType	#542:#49;//  doCollectNamespaces:()Z
const #544 = Method	#408.#543;	//  scala/xml/Node.doCollectNamespaces:()Z
const #545 = Asciz	namespace;
const #546 = NameAndType	#545:#84;//  namespace:()Ljava/lang/String;
const #547 = Method	#408.#546;	//  scala/xml/Node.namespace:()Ljava/lang/String;
const #548 = Asciz	scala/collection/generic/MutableSetTemplate;
const #549 = class	#548;	//  scala/collection/generic/MutableSetTemplate
const #550 = Asciz	(Ljava/lang/Object;)Lscala/collection/generic/MutableSetTemplate;;
const #551 = NameAndType	#230:#550;//  $plus$eq:(Ljava/lang/Object;)Lscala/collection/generic/MutableSetTemplate;
const #552 = InterfaceMethod	#549.#551;	//  scala/collection/generic/MutableSetTemplate.$plus$eq:(Ljava/lang/Object;)Lscala/collection/generic/MutableSetTemplate;
const #553 = Asciz	scala/xml/Utility$$anonfun$collectNamespaces$2;
const #554 = class	#553;	//  scala/xml/Utility$$anonfun$collectNamespaces$2
const #555 = NameAndType	#11:#541;//  "<init>":(Lscala/xml/Node;Lscala/collection/mutable/Set;)V
const #556 = Method	#554.#555;	//  scala/xml/Utility$$anonfun$collectNamespaces$2."<init>":(Lscala/xml/Node;Lscala/collection/mutable/Set;)V
const #557 = Asciz	scala/xml/Utility$$anonfun$collectNamespaces$3;
const #558 = class	#557;	//  scala/xml/Utility$$anonfun$collectNamespaces$3
const #559 = Asciz	(Lscala/collection/mutable/Set;)V;
const #560 = NameAndType	#11:#559;//  "<init>":(Lscala/collection/mutable/Set;)V
const #561 = Method	#558.#560;	//  scala/xml/Utility$$anonfun$collectNamespaces$3."<init>":(Lscala/collection/mutable/Set;)V
const #562 = Asciz	n$1;
const #563 = Asciz	set$1;
const #564 = Asciz	Lscala/collection/mutable/Set;;
const #565 = Asciz	(Lscala/xml/Node;Lscala/collection/mutable/Set<Ljava/lang/String;>;)V;
const #566 = Asciz	(Lscala/collection/Sequence;)Lscala/collection/mutable/Set;;
const #567 = Asciz	scala/collection/mutable/HashSet;
const #568 = class	#567;	//  scala/collection/mutable/HashSet
const #569 = Method	#568.#12;	//  scala/collection/mutable/HashSet."<init>":()V
const #570 = Asciz	scala/xml/Utility$$anonfun$collectNamespaces$1;
const #571 = class	#570;	//  scala/xml/Utility$$anonfun$collectNamespaces$1
const #572 = Method	#571.#12;	//  scala/xml/Utility$$anonfun$collectNamespaces$1."<init>":()V
const #573 = Asciz	foldLeft;
const #574 = Asciz	(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;;
const #575 = NameAndType	#573:#574;//  foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
const #576 = InterfaceMethod	#323.#575;	//  scala/collection/generic/TraversableTemplate.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
const #577 = Asciz	scala/collection/mutable/Set;
const #578 = class	#577;	//  scala/collection/mutable/Set
const #579 = Asciz	(Lscala/collection/Sequence<Lscala/xml/Node;>;)Lscala/collection/mutable/Set<Ljava/lang/String;>;;
const #580 = Asciz	scala/xml/Utility$Escapes$;
const #581 = class	#580;	//  scala/xml/Utility$Escapes$
const #582 = Asciz	Lscala/xml/Utility$Escapes$;;
const #583 = NameAndType	#4:#582;//  MODULE$:Lscala/xml/Utility$Escapes$;
const #584 = Field	#581.#583;	//  scala/xml/Utility$Escapes$.MODULE$:Lscala/xml/Utility$Escapes$;
const #585 = Asciz	unescMap;
const #586 = Asciz	()Lscala/collection/immutable/Map;;
const #587 = NameAndType	#585:#586;//  unescMap:()Lscala/collection/immutable/Map;
const #588 = Method	#581.#587;	//  scala/xml/Utility$Escapes$.unescMap:()Lscala/collection/immutable/Map;
const #589 = Asciz	scala/collection/generic/MapTemplate;
const #590 = class	#589;	//  scala/collection/generic/MapTemplate
const #591 = Asciz	(Ljava/lang/Object;)Lscala/Option;;
const #592 = NameAndType	#299:#591;//  get:(Ljava/lang/Object;)Lscala/Option;
const #593 = InterfaceMethod	#590.#592;	//  scala/collection/generic/MapTemplate.get:(Ljava/lang/Object;)Lscala/Option;
const #594 = Asciz	scala/xml/Utility$$anonfun$unescape$1;
const #595 = class	#594;	//  scala/xml/Utility$$anonfun$unescape$1
const #596 = Method	#595.#378;	//  scala/xml/Utility$$anonfun$unescape$1."<init>":(Lscala/collection/mutable/StringBuilder;)V
const #597 = Asciz	scala/Option;
const #598 = class	#597;	//  scala/Option
const #599 = Asciz	map;
const #600 = Asciz	(Lscala/Function1;)Lscala/Option;;
const #601 = NameAndType	#599:#600;//  map:(Lscala/Function1;)Lscala/Option;
const #602 = Method	#598.#601;	//  scala/Option.map:(Lscala/Function1;)Lscala/Option;
const #603 = Asciz	scala/xml/Utility$$anonfun$unescape$2;
const #604 = class	#603;	//  scala/xml/Utility$$anonfun$unescape$2
const #605 = Method	#604.#12;	//  scala/xml/Utility$$anonfun$unescape$2."<init>":()V
const #606 = Asciz	getOrElse;
const #607 = Asciz	(Lscala/Function0;)Ljava/lang/Object;;
const #608 = NameAndType	#606:#607;//  getOrElse:(Lscala/Function0;)Ljava/lang/Object;
const #609 = Method	#598.#608;	//  scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
const #610 = Asciz	s$1;
const #611 = Asciz	escape;
const #612 = Asciz	scala/xml/Utility$$anonfun$escape$2;
const #613 = class	#612;	//  scala/xml/Utility$$anonfun$escape$2
const #614 = Method	#613.#12;	//  scala/xml/Utility$$anonfun$escape$2."<init>":()V
const #615 = InterfaceMethod	#281.#575;	//  scala/collection/generic/VectorTemplate.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
const #616 = Asciz	text;
const #617 = Asciz	scala/xml/Utility$$anonfun$escape$1;
const #618 = class	#617;	//  scala/xml/Utility$$anonfun$escape$1
const #619 = Method	#618.#228;	//  scala/xml/Utility$$anonfun$escape$1."<init>":(Ljava/lang/String;)V
const #620 = Asciz	text$1;
const #621 = Asciz	view;
const #622 = Asciz	(Ljava/lang/String;)Lscala/xml/Text;;
const #623 = Asciz	sort;
const #624 = Asciz	(Lscala/xml/Node;)Lscala/xml/Node;;
const #625 = Asciz	scala/xml/Elem$;
const #626 = class	#625;	//  scala/xml/Elem$
const #627 = Asciz	Lscala/xml/Elem$;;
const #628 = NameAndType	#4:#627;//  MODULE$:Lscala/xml/Elem$;
const #629 = Field	#626.#628;	//  scala/xml/Elem$.MODULE$:Lscala/xml/Elem$;
const #630 = Asciz	(Lscala/xml/Node;)Lscala/Option;;
const #631 = NameAndType	#293:#630;//  unapplySeq:(Lscala/xml/Node;)Lscala/Option;
const #632 = Method	#626.#631;	//  scala/xml/Elem$.unapplySeq:(Lscala/xml/Node;)Lscala/Option;
const #633 = Method	#598.#441;	//  scala/Option.isEmpty:()Z
const #634 = Method	#598.#300;	//  scala/Option.get:()Ljava/lang/Object;
const #635 = Asciz	scala/Tuple5;
const #636 = class	#635;	//  scala/Tuple5
const #637 = Asciz	_1;
const #638 = NameAndType	#637:#61;//  _1:()Ljava/lang/Object;
const #639 = Method	#636.#638;	//  scala/Tuple5._1:()Ljava/lang/Object;
const #640 = Asciz	_2;
const #641 = NameAndType	#640:#61;//  _2:()Ljava/lang/Object;
const #642 = Method	#636.#641;	//  scala/Tuple5._2:()Ljava/lang/Object;
const #643 = Asciz	_3;
const #644 = NameAndType	#643:#61;//  _3:()Ljava/lang/Object;
const #645 = Method	#636.#644;	//  scala/Tuple5._3:()Ljava/lang/Object;
const #646 = Asciz	_4;
const #647 = NameAndType	#646:#61;//  _4:()Ljava/lang/Object;
const #648 = Method	#636.#647;	//  scala/Tuple5._4:()Ljava/lang/Object;
const #649 = Asciz	_5;
const #650 = NameAndType	#649:#61;//  _5:()Ljava/lang/Object;
const #651 = Method	#636.#650;	//  scala/Tuple5._5:()Ljava/lang/Object;
const #652 = Asciz	(Lscala/xml/MetaData;)Lscala/xml/MetaData;;
const #653 = NameAndType	#623:#652;//  sort:(Lscala/xml/MetaData;)Lscala/xml/MetaData;
const #654 = Method	#10.#653;	//  scala/xml/Utility$.sort:(Lscala/xml/MetaData;)Lscala/xml/MetaData;
const #655 = Asciz	scala/xml/Utility$$anonfun$sort$1;
const #656 = class	#655;	//  scala/xml/Utility$$anonfun$sort$1
const #657 = Method	#656.#12;	//  scala/xml/Utility$$anonfun$sort$1."<init>":()V
const #658 = Method	#289.#352;	//  scala/collection/Sequence$.builderFactory:()Lscala/collection/generic/BuilderFactory;
const #659 = Asciz	(Lscala/Function1;Lscala/collection/generic/BuilderFactory;)Ljava/lang/Object;;
const #660 = NameAndType	#599:#659;//  map:(Lscala/Function1;Lscala/collection/generic/BuilderFactory;)Ljava/lang/Object;
const #661 = InterfaceMethod	#323.#660;	//  scala/collection/generic/TraversableTemplate.map:(Lscala/Function1;Lscala/collection/generic/BuilderFactory;)Ljava/lang/Object;
const #662 = Asciz	(Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Sequence;)Lscala/xml/Elem;;
const #663 = NameAndType	#60:#662;//  apply:(Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Sequence;)Lscala/xml/Elem;
const #664 = Method	#626.#663;	//  scala/xml/Elem$.apply:(Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Sequence;)Lscala/xml/Elem;
const #665 = Asciz	temp23;
const #666 = Asciz	temp24;
const #667 = Asciz	Lscala/Option;;
const #668 = Asciz	temp25;
const #669 = Asciz	Lscala/Tuple5;;
const #670 = Asciz	temp26;
const #671 = Asciz	temp27;
const #672 = Asciz	temp28;
const #673 = Asciz	Lscala/xml/MetaData;;
const #674 = Asciz	temp29;
const #675 = Asciz	temp30;
const #676 = Asciz	temp31;
const #677 = Asciz	scp;
const #678 = Asciz	md;
const #679 = Asciz	lab;
const #680 = Asciz	scala/xml/Null$;
const #681 = class	#680;	//  scala/xml/Null$
const #682 = Asciz	Lscala/xml/Null$;;
const #683 = NameAndType	#4:#682;//  MODULE$:Lscala/xml/Null$;
const #684 = Field	#681.#683;	//  scala/xml/Null$.MODULE$:Lscala/xml/Null$;
const #685 = NameAndType	#169:#503;//  next:()Lscala/xml/MetaData;
const #686 = Method	#507.#685;	//  scala/xml/MetaData.next:()Lscala/xml/MetaData;
const #687 = Asciz	key;
const #688 = NameAndType	#687:#84;//  key:()Ljava/lang/String;
const #689 = Method	#507.#688;	//  scala/xml/MetaData.key:()Ljava/lang/String;
const #690 = Asciz	scala/xml/Utility$$anonfun$1;
const #691 = class	#690;	//  scala/xml/Utility$$anonfun$1
const #692 = Method	#691.#228;	//  scala/xml/Utility$$anonfun$1."<init>":(Ljava/lang/String;)V
const #693 = Asciz	filter;
const #694 = Asciz	(Lscala/Function1;)Lscala/xml/MetaData;;
const #695 = NameAndType	#693:#694;//  filter:(Lscala/Function1;)Lscala/xml/MetaData;
const #696 = Method	#507.#695;	//  scala/xml/MetaData.filter:(Lscala/Function1;)Lscala/xml/MetaData;
const #697 = Asciz	scala/xml/Utility$$anonfun$2;
const #698 = class	#697;	//  scala/xml/Utility$$anonfun$2
const #699 = Method	#698.#228;	//  scala/xml/Utility$$anonfun$2."<init>":(Ljava/lang/String;)V
const #700 = Asciz	append$default$2;
const #701 = NameAndType	#700:#37;//  append$default$2:()Lscala/xml/NamespaceBinding;
const #702 = Method	#507.#701;	//  scala/xml/MetaData.append$default$2:()Lscala/xml/NamespaceBinding;
const #703 = Asciz	(Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;)Lscala/xml/MetaData;;
const #704 = NameAndType	#77:#703;//  append:(Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;)Lscala/xml/MetaData;
const #705 = Method	#507.#704;	//  scala/xml/MetaData.append:(Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;)Lscala/xml/MetaData;
const #706 = Asciz	copy;
const #707 = NameAndType	#706:#652;//  copy:(Lscala/xml/MetaData;)Lscala/xml/MetaData;
const #708 = Method	#507.#707;	//  scala/xml/MetaData.copy:(Lscala/xml/MetaData;)Lscala/xml/MetaData;
const #709 = Asciz	key$1;
const #710 = Asciz	smaller;
const #711 = Asciz	greater;
const #712 = Asciz	qual$1;
const #713 = Asciz	x$7;
const #714 = Asciz	x$8;
const #715 = Asciz	trimProper;
const #716 = Asciz	(Lscala/xml/Node;)Lscala/collection/Sequence;;
const #717 = Asciz	_data;
const #718 = NameAndType	#717:#84;//  _data:()Ljava/lang/String;
const #719 = Method	#226.#718;	//  scala/xml/Text._data:()Ljava/lang/String;
const #720 = Asciz	scala/xml/Utility$$anonfun$trimProper$1;
const #721 = class	#720;	//  scala/xml/Utility$$anonfun$trimProper$1
const #722 = Method	#721.#12;	//  scala/xml/Utility$$anonfun$trimProper$1."<init>":()V
const #723 = Asciz	flatMap;
const #724 = NameAndType	#723:#659;//  flatMap:(Lscala/Function1;Lscala/collection/generic/BuilderFactory;)Ljava/lang/Object;
const #725 = InterfaceMethod	#323.#724;	//  scala/collection/generic/TraversableTemplate.flatMap:(Lscala/Function1;Lscala/collection/generic/BuilderFactory;)Ljava/lang/Object;
const #726 = Asciz	scala/xml/TextBuffer;
const #727 = class	#726;	//  scala/xml/TextBuffer
const #728 = Method	#727.#12;	//  scala/xml/TextBuffer."<init>":()V
const #729 = Asciz	(Lscala/collection/Sequence;)Lscala/xml/TextBuffer;;
const #730 = NameAndType	#77:#729;//  append:(Lscala/collection/Sequence;)Lscala/xml/TextBuffer;
const #731 = Method	#727.#730;	//  scala/xml/TextBuffer.append:(Lscala/collection/Sequence;)Lscala/xml/TextBuffer;
const #732 = Asciz	toText;
const #733 = NameAndType	#732:#328;//  toText:()Lscala/collection/Sequence;
const #734 = Method	#727.#733;	//  scala/xml/TextBuffer.toText:()Lscala/collection/Sequence;
const #735 = Asciz	temp10;
const #736 = Asciz	temp11;
const #737 = Asciz	temp12;
const #738 = Asciz	temp13;
const #739 = Asciz	temp14;
const #740 = Asciz	temp15;
const #741 = Asciz	temp16;
const #742 = Asciz	temp17;
const #743 = Asciz	temp18;
const #744 = Asciz	temp19;
const #745 = Asciz	temp20;
const #746 = Asciz	(Lscala/xml/Node;)Lscala/collection/Sequence<Lscala/xml/Node;>;;
const #747 = Asciz	trim;
const #748 = Asciz	scala/MatchError;
const #749 = class	#748;	//  scala/MatchError
const #750 = Method	#408.#85;	//  scala/xml/Node.toString:()Ljava/lang/String;
const #751 = Method	#749.#228;	//  scala/MatchError."<init>":(Ljava/lang/String;)V
const #752 = Asciz	scala/xml/Utility$$anonfun$trim$1;
const #753 = class	#752;	//  scala/xml/Utility$$anonfun$trim$1
const #754 = Method	#753.#12;	//  scala/xml/Utility$$anonfun$trim$1."<init>":()V
const #755 = Asciz	temp1;
const #756 = Asciz	temp2;
const #757 = Asciz	temp3;
const #758 = Asciz	temp4;
const #759 = Asciz	temp5;
const #760 = Asciz	temp6;
const #761 = Asciz	temp7;
const #762 = Asciz	temp8;
const #763 = Asciz	temp9;
const #764 = Asciz	isAtomAndNotText;
const #765 = Asciz	(Lscala/xml/Node;)Z;
const #766 = Asciz	isAtom;
const #767 = NameAndType	#766:#49;//  isAtom:()Z
const #768 = Method	#408.#767;	//  scala/xml/Node.isAtom:()Z
const #769 = Asciz	(Lscala/Function1<Lscala/collection/mutable/StringBuilder;Ljava/lang/Object;>;)Ljava/lang/String;;
const #770 = Asciz	implicitSbToString;
const #771 = Asciz	(Lscala/collection/mutable/StringBuilder;)Ljava/lang/String;;
const #772 = Asciz	checkPubID;
const #773 = Asciz	(Ljava/lang/String;)Z;
const #774 = Asciz	(Lscala/xml/parsing/TokenTests;Ljava/lang/String;)Z;
const #775 = NameAndType	#772:#774;//  checkPubID:(Lscala/xml/parsing/TokenTests;Ljava/lang/String;)Z
const #776 = Method	#21.#775;	//  scala/xml/parsing/TokenTests$class.checkPubID:(Lscala/xml/parsing/TokenTests;Ljava/lang/String;)Z
const #777 = Asciz	checkSysID;
const #778 = NameAndType	#777:#774;//  checkSysID:(Lscala/xml/parsing/TokenTests;Ljava/lang/String;)Z
const #779 = Method	#21.#778;	//  scala/xml/parsing/TokenTests$class.checkSysID:(Lscala/xml/parsing/TokenTests;Ljava/lang/String;)Z
const #780 = Asciz	isValidIANAEncoding;
const #781 = Asciz	(Lscala/collection/Sequence;)Z;
const #782 = Asciz	(Lscala/xml/parsing/TokenTests;Lscala/collection/Sequence;)Z;
const #783 = NameAndType	#780:#782;//  isValidIANAEncoding:(Lscala/xml/parsing/TokenTests;Lscala/collection/Sequence;)Z
const #784 = Method	#21.#783;	//  scala/xml/parsing/TokenTests$class.isValidIANAEncoding:(Lscala/xml/parsing/TokenTests;Lscala/collection/Sequence;)Z
const #785 = Asciz	ianaEncoding;
const #786 = Asciz	isPubIDChar;
const #787 = Asciz	(Lscala/xml/parsing/TokenTests;C)Z;
const #788 = NameAndType	#786:#787;//  isPubIDChar:(Lscala/xml/parsing/TokenTests;C)Z
const #789 = Method	#21.#788;	//  scala/xml/parsing/TokenTests$class.isPubIDChar:(Lscala/xml/parsing/TokenTests;C)Z
const #790 = Asciz	isName;
const #791 = NameAndType	#790:#774;//  isName:(Lscala/xml/parsing/TokenTests;Ljava/lang/String;)Z
const #792 = Method	#21.#791;	//  scala/xml/parsing/TokenTests$class.isName:(Lscala/xml/parsing/TokenTests;Ljava/lang/String;)Z
const #793 = NameAndType	#30:#787;//  isNameStart:(Lscala/xml/parsing/TokenTests;C)Z
const #794 = Method	#21.#793;	//  scala/xml/parsing/TokenTests$class.isNameStart:(Lscala/xml/parsing/TokenTests;C)Z
const #795 = Asciz	isNameChar;
const #796 = NameAndType	#795:#787;//  isNameChar:(Lscala/xml/parsing/TokenTests;C)Z
const #797 = Method	#21.#796;	//  scala/xml/parsing/TokenTests$class.isNameChar:(Lscala/xml/parsing/TokenTests;C)Z
const #798 = Asciz	isSpace;
const #799 = NameAndType	#798:#782;//  isSpace:(Lscala/xml/parsing/TokenTests;Lscala/collection/Sequence;)Z
const #800 = Method	#21.#799;	//  scala/xml/parsing/TokenTests$class.isSpace:(Lscala/xml/parsing/TokenTests;Lscala/collection/Sequence;)Z
const #801 = Asciz	cs;
const #802 = NameAndType	#798:#787;//  isSpace:(Lscala/xml/parsing/TokenTests;C)Z
const #803 = Method	#21.#802;	//  scala/xml/parsing/TokenTests$class.isSpace:(Lscala/xml/parsing/TokenTests;C)Z
const #804 = Asciz	InnerClasses;
const #805 = Asciz	scala/xml/Utility;
const #806 = class	#805;	//  scala/xml/Utility
const #807 = Asciz	$anonfun$2;
const #808 = Asciz	$anonfun$5;
const #809 = Asciz	$anonfun$1;
const #810 = Asciz	$anonfun$4;
const #811 = Asciz	$anonfun$6;
const #812 = Asciz	$anonfun$trim$1;
const #813 = Asciz	$anonfun$sort$1;
const #814 = Asciz	$anonfun$toXML$1;
const #815 = Asciz	$anonfun$escape$1;
const #816 = Asciz	$anonfun$escape$2;
const #817 = Asciz	$anonfun$getName$1;
const #818 = Asciz	$anonfun$unescape$1;
const #819 = Asciz	$anonfun$unescape$2;
const #820 = Asciz	$anonfun$trimProper$1;
const #821 = Asciz	$anonfun$appendQuoted$1;
const #822 = Asciz	$anonfun$sequenceToXML$1;
const #823 = Asciz	$anonfun$sequenceToXML$2;
const #824 = Asciz	$anonfun$collectNamespaces$1;
const #825 = Asciz	$anonfun$collectNamespaces$3;
const #826 = Asciz	$anonfun$collectNamespaces$2;
const #827 = Asciz	$anonfun$appendEscapedQuoted$1;
const #828 = Asciz	scala/ScalaObject;
const #829 = class	#828;	//  scala/ScalaObject

{
public static final scala.xml.Utility$ MODULE$;

public static {};
  Code:
   Stack=1, Locals=0, Args_size=0
   0:	new	#10; //class scala/xml/Utility$
   3:	invokespecial	#13; //Method "<init>":()V
   6:	return

public scala.xml.NamespaceBinding toXML$default$2();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	getstatic	#42; //Field scala/xml/TopScope$.MODULE$:Lscala/xml/TopScope$;
   3:	areturn
  LineNumberTable: 
   line 173: 0


public scala.collection.mutable.StringBuilder toXML$default$3();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	new	#46; //class scala/collection/mutable/StringBuilder
   3:	dup
   4:	invokespecial	#47; //Method scala/collection/mutable/StringBuilder."<init>":()V
   7:	areturn
  LineNumberTable: 
   line 174: 0


public boolean toXML$default$4();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	iconst_0
   1:	ireturn
  LineNumberTable: 
   line 175: 0


public boolean toXML$default$5();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	iconst_1
   1:	ireturn
  LineNumberTable: 
   line 176: 0


public boolean toXML$default$6();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	iconst_0
   1:	ireturn
  LineNumberTable: 
   line 177: 0


public boolean toXML$default$7();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	iconst_0
   1:	ireturn
  LineNumberTable: 
   line 178: 0


public scala.xml.NamespaceBinding sequenceToXML$default$2();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	getstatic	#42; //Field scala/xml/TopScope$.MODULE$:Lscala/xml/TopScope$;
   3:	areturn
  LineNumberTable: 
   line 206: 0


public scala.collection.mutable.StringBuilder sequenceToXML$default$3();
  Code:
   Stack=2, Locals=1, Args_size=1
   0:	new	#46; //class scala/collection/mutable/StringBuilder
   3:	dup
   4:	invokespecial	#47; //Method scala/collection/mutable/StringBuilder."<init>":()V
   7:	areturn
  LineNumberTable: 
   line 207: 0


public boolean sequenceToXML$default$4();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	iconst_0
   1:	ireturn
  LineNumberTable: 
   line 208: 0


public java.lang.String parseCharRef(scala.Function0, scala.Function0, scala.Function1);
  Code:
   Stack=4, Locals=8, Args_size=4
   0:	aload_1
   1:	invokeinterface	#63,  1; //InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
   6:	invokestatic	#69; //Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
   9:	ldc	#70; //int 120
   11:	if_icmpne	29
   14:	aload_2
   15:	invokeinterface	#63,  1; //InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
   20:	pop
   21:	iconst_1
   22:	ifeq	29
   25:	iconst_1
   26:	goto	30
   29:	iconst_0
   30:	istore	4
   32:	iload	4
   34:	ifeq	42
   37:	ldc	#71; //int 16
   39:	goto	44
   42:	ldc	#72; //int 10
   44:	istore	5
   46:	iconst_0
   47:	istore	6
   49:	aload_1
   50:	invokeinterface	#63,  1; //InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
   55:	invokestatic	#69; //Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
   58:	ldc	#73; //int 59
   60:	if_icmpeq	391
   63:	aload_1
   64:	invokeinterface	#63,  1; //InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
   69:	invokestatic	#69; //Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
   72:	istore	7
   74:	iload	7
   76:	lookupswitch{ //22
		48: 351;
		49: 351;
		50: 351;
		51: 351;
		52: 351;
		53: 351;
		54: 351;
		55: 351;
		56: 351;
		57: 351;
		65: 302;
		66: 302;
		67: 302;
		68: 302;
		69: 302;
		70: 302;
		97: 302;
		98: 302;
		99: 302;
		100: 302;
		101: 302;
		102: 302;
		default: 264 }
   264:	aload_3
   265:	new	#46; //class scala/collection/mutable/StringBuilder
   268:	dup
   269:	invokespecial	#74; //Method scala/collection/mutable/StringBuilder."<init>":()V
   272:	ldc	#76; //String character '
   274:	invokevirtual	#80; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   277:	aload_1
   278:	invokeinterface	#63,  1; //InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
   283:	invokevirtual	#80; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   286:	ldc	#82; //String ' not allowed in char ref\n
   288:	invokevirtual	#80; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   291:	invokevirtual	#86; //Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
   294:	invokeinterface	#91,  2; //InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
   299:	goto	380
   302:	iload	4
   304:	ifeq	336
   307:	iload	6
   309:	iload	5
   311:	imul
   312:	getstatic	#96; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   315:	aload_1
   316:	invokeinterface	#63,  1; //InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
   321:	invokestatic	#69; //Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
   324:	invokevirtual	#100; //Method scala/Predef$.charWrapper:(C)Lscala/runtime/RichChar;
   327:	invokevirtual	#106; //Method scala/runtime/RichChar.asDigit:()I
   330:	iadd
   331:	istore	6
   333:	goto	345
   336:	aload_3
   337:	ldc	#108; //String hex char not allowed in decimal char ref\nDid you mean to write &#x ?
   339:	invokeinterface	#91,  2; //InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
   344:	pop
   345:	getstatic	#114; //Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
   348:	goto	380
   351:	iload	6
   353:	iload	5
   355:	imul
   356:	getstatic	#96; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   359:	aload_1
   360:	invokeinterface	#63,  1; //InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
   365:	invokestatic	#69; //Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
   368:	invokevirtual	#100; //Method scala/Predef$.charWrapper:(C)Lscala/runtime/RichChar;
   371:	invokevirtual	#106; //Method scala/runtime/RichChar.asDigit:()I
   374:	iadd
   375:	istore	6
   377:	getstatic	#114; //Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
   380:	pop
   381:	aload_2
   382:	invokeinterface	#63,  1; //InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
   387:	pop
   388:	goto	49
   391:	new	#116; //class java/lang/String
   394:	dup
   395:	getstatic	#121; //Field scala/io/UTF8Codec$.MODULE$:Lscala/io/UTF8Codec$;
   398:	iload	6
   400:	invokevirtual	#125; //Method scala/io/UTF8Codec$.encode:(I)[B
   403:	ldc	#127; //String utf8
   405:	invokespecial	#130; //Method java/lang/String."<init>":([BLjava/lang/String;)V
   408:	areturn
  LineNumberTable: 
   line 398: 0
   line 399: 32
   line 400: 46
   line 401: 49
   line 402: 63
   line 413: 264
   line 402: 299
   line 407: 302
   line 411: 307
   line 408: 336
   line 402: 345
   line 404: 351
   line 402: 377
   line 417: 380
   line 415: 381
   line 401: 388
   line 417: 391

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      409      0    this       Lscala/xml/Utility$;
   0      409      1    ch       Lscala/Function0;
   0      409      2    nextch       Lscala/Function0;
   0      409      3    reportSyntaxError       Lscala/Function1;
   32      376      4    hex       Z
   46      362      5    base       I
   49      359      6    i       I
   74      307      7    temp59       C

  Signature: length = 0x2
   00 FFFFFF91 

public scala.collection.Sequence parseAttributeValue(java.lang.String);
  Code:
   Stack=6, Locals=14, Args_size=2
   0:	getstatic	#96; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   3:	aload_1
   4:	invokevirtual	#152; //Method scala/Predef$.stringWrapper:(Ljava/lang/String;)Lscala/runtime/RichString;
   7:	astore_2
   8:	new	#46; //class scala/collection/mutable/StringBuilder
   11:	dup
   12:	invokespecial	#47; //Method scala/collection/mutable/StringBuilder."<init>":()V
   15:	astore_3
   16:	aconst_null
   17:	pop
   18:	aconst_null
   19:	astore	4
   21:	new	#154; //class scala/xml/NodeBuffer
   24:	dup
   25:	invokespecial	#155; //Method scala/xml/NodeBuffer."<init>":()V
   28:	astore	5
   30:	aload_2
   31:	invokeinterface	#161,  1; //InterfaceMethod scala/collection/generic/IterableTemplate.iterator:()Lscala/collection/Iterator;
   36:	astore	6
   38:	aload	6
   40:	invokeinterface	#166,  1; //InterfaceMethod scala/collection/Iterator.hasNext:()Z
   45:	ifeq	343
   48:	new	#168; //class scala/runtime/CharRef
   51:	dup
   52:	aload	6
   54:	invokeinterface	#171,  1; //InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
   59:	invokestatic	#69; //Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
   62:	invokespecial	#174; //Method scala/runtime/CharRef."<init>":(C)V
   65:	astore	7
   67:	aload	7
   69:	getfield	#177; //Field scala/runtime/CharRef.elem:C
   72:	istore	8
   74:	iload	8
   76:	invokestatic	#181; //Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
   79:	ldc	#182; //int 38
   81:	invokestatic	#186; //Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   84:	invokestatic	#190; //Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
   87:	ifeq	333
   90:	aload	6
   92:	invokeinterface	#171,  1; //InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
   97:	invokestatic	#69; //Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
   100:	istore	9
   102:	iload	9
   104:	invokestatic	#181; //Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
   107:	ldc	#191; //int 35
   109:	invokestatic	#186; //Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   112:	invokestatic	#190; //Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
   115:	ifeq	175
   118:	aload	7
   120:	aload	6
   122:	invokeinterface	#171,  1; //InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
   127:	invokestatic	#69; //Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
   130:	putfield	#177; //Field scala/runtime/CharRef.elem:C
   133:	aload_0
   134:	new	#193; //class scala/xml/Utility$$anonfun$4
   137:	dup
   138:	aload	7
   140:	invokespecial	#196; //Method scala/xml/Utility$$anonfun$4."<init>":(Lscala/runtime/CharRef;)V
   143:	new	#198; //class scala/xml/Utility$$anonfun$5
   146:	dup
   147:	aload	6
   149:	aload	7
   151:	invokespecial	#201; //Method scala/xml/Utility$$anonfun$5."<init>":(Lscala/collection/Iterator;Lscala/runtime/CharRef;)V
   154:	new	#203; //class scala/xml/Utility$$anonfun$6
   157:	dup
   158:	invokespecial	#204; //Method scala/xml/Utility$$anonfun$6."<init>":()V
   161:	invokevirtual	#206; //Method parseCharRef:(Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/String;
   164:	astore	10
   166:	aload_3
   167:	aload	10
   169:	invokevirtual	#209; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
   172:	goto	339
   175:	aload	4
   177:	ifnonnull	189
   180:	new	#46; //class scala/collection/mutable/StringBuilder
   183:	dup
   184:	invokespecial	#47; //Method scala/collection/mutable/StringBuilder."<init>":()V
   187:	astore	4
   189:	aload	4
   191:	iload	9
   193:	invokevirtual	#212; //Method scala/collection/mutable/StringBuilder.append:(C)Lscala/collection/mutable/StringBuilder;
   196:	pop
   197:	aload	7
   199:	aload	6
   201:	invokeinterface	#171,  1; //InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
   206:	invokestatic	#69; //Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
   209:	putfield	#177; //Field scala/runtime/CharRef.elem:C
   212:	aload	7
   214:	getfield	#177; //Field scala/runtime/CharRef.elem:C
   217:	ldc	#73; //int 59
   219:	if_icmpeq	251
   222:	aload	4
   224:	aload	7
   226:	getfield	#177; //Field scala/runtime/CharRef.elem:C
   229:	invokevirtual	#212; //Method scala/collection/mutable/StringBuilder.append:(C)Lscala/collection/mutable/StringBuilder;
   232:	pop
   233:	aload	7
   235:	aload	6
   237:	invokeinterface	#171,  1; //InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
   242:	invokestatic	#69; //Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
   245:	putfield	#177; //Field scala/runtime/CharRef.elem:C
   248:	goto	212
   251:	aload	4
   253:	invokevirtual	#213; //Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
   256:	astore	11
   258:	aload	4
   260:	iconst_0
   261:	invokevirtual	#217; //Method scala/collection/mutable/StringBuilder.setLength:(I)V
   264:	aload_0
   265:	aload	11
   267:	aload_3
   268:	invokevirtual	#221; //Method unescape:(Ljava/lang/String;Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;
   271:	astore	12
   273:	aload	12
   275:	ifnonnull	327
   278:	aload_3
   279:	invokevirtual	#224; //Method scala/collection/mutable/StringBuilder.length:()I
   282:	iconst_0
   283:	if_icmple	308
   286:	aload	5
   288:	new	#226; //class scala/xml/Text
   291:	dup
   292:	aload_3
   293:	invokevirtual	#213; //Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
   296:	invokespecial	#229; //Method scala/xml/Text."<init>":(Ljava/lang/String;)V
   299:	invokevirtual	#233; //Method scala/xml/NodeBuffer.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/ArrayBuffer;
   302:	pop
   303:	aload_3
   304:	iconst_0
   305:	invokevirtual	#217; //Method scala/collection/mutable/StringBuilder.setLength:(I)V
   308:	aload	5
   310:	new	#235; //class scala/xml/EntityRef
   313:	dup
   314:	aload_3
   315:	invokevirtual	#213; //Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
   318:	invokespecial	#236; //Method scala/xml/EntityRef."<init>":(Ljava/lang/String;)V
   321:	invokevirtual	#233; //Method scala/xml/NodeBuffer.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/ArrayBuffer;
   324:	goto	339
   327:	getstatic	#114; //Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
   330:	goto	339
   333:	aload_3
   334:	iload	8
   336:	invokevirtual	#212; //Method scala/collection/mutable/StringBuilder.append:(C)Lscala/collection/mutable/StringBuilder;
   339:	pop
   340:	goto	38
   343:	aload_3
   344:	invokevirtual	#224; //Method scala/collection/mutable/StringBuilder.length:()I
   347:	iconst_0
   348:	if_icmple	388
   351:	new	#226; //class scala/xml/Text
   354:	dup
   355:	aload_3
   356:	invokevirtual	#213; //Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
   359:	invokespecial	#229; //Method scala/xml/Text."<init>":(Ljava/lang/String;)V
   362:	astore	13
   364:	aload	5
   366:	invokeinterface	#239,  1; //InterfaceMethod scala/collection/mutable/ResizableArray.length:()I
   371:	iconst_0
   372:	if_icmpne	378
   375:	aload	13
   377:	areturn
   378:	aload	5
   380:	aload	13
   382:	invokevirtual	#233; //Method scala/xml/NodeBuffer.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/ArrayBuffer;
   385:	goto	391
   388:	getstatic	#114; //Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
   391:	pop
   392:	aload	5
   394:	areturn
  LineNumberTable: 
   line 334: 0
   line 335: 8
   line 336: 16
   line 337: 21
   line 338: 30
   line 339: 38
   line 340: 48
   line 341: 67
   line 343: 90
   line 345: 118
   line 346: 133
   line 347: 166
   line 350: 175
   line 351: 189
   line 349: 191
   line 351: 193
   line 352: 197
   line 353: 212
   line 354: 222
   line 355: 233
   line 353: 248
   line 357: 251
   line 358: 258
   line 359: 264
   line 361: 278
   line 362: 286
   line 363: 303
   line 365: 308
   line 359: 327
   line 370: 333
   line 369: 334
   line 370: 336
   line 341: 339
   line 339: 340
   line 373: 343
   line 374: 351
   line 375: 364
   line 376: 375
   line 378: 378
   line 373: 388
   line 380: 392

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      395      0    this       Lscala/xml/Utility$;
   0      395      1    value       Ljava/lang/String;
   8      386      2    zs       Lscala/collection/Sequence;
   16      378      3    sb       Lscala/collection/mutable/StringBuilder;
   21      373      4    rfb       Lscala/collection/mutable/StringBuilder;
   30      364      5    nb       Lscala/xml/NodeBuffer;
   38      356      6    it$1       Lscala/collection/Iterator;
   67      273      7    c$1       Lscala/runtime/CharRef;
   74      266      8    temp58       C
   102      231      9    temp57       C
   166      6      10    theChar       Ljava/lang/String;
   258      75      11    ref       Ljava/lang/String;
   273      60      12    temp55       Lscala/collection/mutable/StringBuilder;
   364      24      13    x       Lscala/xml/Text;

  Signature: length = 0x2
   01 04 

public java.lang.String checkAttributeValue(java.lang.String);
  Code:
   Stack=4, Locals=5, Args_size=2
   0:	iconst_0
   1:	istore_2
   2:	iload_2
   3:	aload_1
   4:	invokevirtual	#263; //Method java/lang/String.length:()I
   7:	if_icmpge	152
   10:	aload_1
   11:	iload_2
   12:	invokevirtual	#267; //Method java/lang/String.charAt:(I)C
   15:	istore_3
   16:	iload_3
   17:	lookupswitch{ //2
		38: 48;
		60: 44;
		default: 145 }
   44:	ldc_w	#269; //String < not allowed in attribute value
   47:	areturn
   48:	aload_0
   49:	aload_1
   50:	iload_2
   51:	iconst_1
   52:	iadd
   53:	invokevirtual	#273; //Method getName:(Ljava/lang/String;I)Ljava/lang/String;
   56:	astore	4
   58:	aload	4
   60:	ifnonnull	90
   63:	new	#46; //class scala/collection/mutable/StringBuilder
   66:	dup
   67:	invokespecial	#74; //Method scala/collection/mutable/StringBuilder."<init>":()V
   70:	ldc_w	#275; //String malformed entity reference in attribute value [
   73:	invokevirtual	#80; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   76:	aload_1
   77:	invokevirtual	#80; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   80:	ldc_w	#277; //String ]
   83:	invokevirtual	#80; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   86:	invokevirtual	#86; //Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
   89:	areturn
   90:	iload_2
   91:	aload	4
   93:	invokevirtual	#263; //Method java/lang/String.length:()I
   96:	iadd
   97:	iconst_1
   98:	iadd
   99:	istore_2
   100:	iload_2
   101:	aload_1
   102:	invokevirtual	#263; //Method java/lang/String.length:()I
   105:	if_icmpge	118
   108:	aload_1
   109:	iload_2
   110:	invokevirtual	#267; //Method java/lang/String.charAt:(I)C
   113:	ldc	#73; //int 59
   115:	if_icmpeq	145
   118:	new	#46; //class scala/collection/mutable/StringBuilder
   121:	dup
   122:	invokespecial	#74; //Method scala/collection/mutable/StringBuilder."<init>":()V
   125:	ldc_w	#275; //String malformed entity reference in attribute value [
   128:	invokevirtual	#80; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   131:	aload_1
   132:	invokevirtual	#80; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   135:	ldc_w	#277; //String ]
   138:	invokevirtual	#80; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   141:	invokevirtual	#86; //Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
   144:	areturn
   145:	iload_2
   146:	iconst_1
   147:	iadd
   148:	istore_2
   149:	goto	2
   152:	aconst_null
   153:	pop
   154:	aconst_null
   155:	areturn
  LineNumberTable: 
   line 308: 0
   line 309: 2
   line 310: 10
   line 312: 44
   line 314: 48
   line 315: 58
   line 316: 63
   line 317: 90
   line 318: 100
   line 319: 118
   line 322: 145
   line 309: 149
   line 324: 152

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      156      0    this       Lscala/xml/Utility$;
   0      156      1    value       Ljava/lang/String;
   2      153      2    i       I
   16      136      3    temp54       C
   58      87      4    n       Ljava/lang/String;


public java.lang.String getName(java.lang.String, int);
  Code:
   Stack=7, Locals=12, Args_size=3
   0:	iload_2
   1:	aload_1
   2:	invokevirtual	#263; //Method java/lang/String.length:()I
   5:	if_icmplt	14
   8:	aconst_null
   9:	pop
   10:	aconst_null
   11:	goto	246
   14:	getstatic	#96; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   17:	aload_1
   18:	invokevirtual	#152; //Method scala/Predef$.stringWrapper:(Ljava/lang/String;)Lscala/runtime/RichString;
   21:	iload_2
   22:	invokeinterface	#285,  2; //InterfaceMethod scala/collection/generic/VectorTemplate.drop:(I)Lscala/collection/generic/VectorTemplate;
   27:	checkcast	#287; //class scala/runtime/RichString
   30:	astore_3
   31:	getstatic	#292; //Field scala/collection/Sequence$.MODULE$:Lscala/collection/Sequence$;
   34:	aload_3
   35:	invokevirtual	#296; //Method scala/collection/Sequence$.unapplySeq:(Lscala/collection/Sequence;)Lscala/Some;
   38:	astore	4
   40:	iconst_1
   41:	ifeq	243
   44:	aload	4
   46:	invokevirtual	#301; //Method scala/Some.get:()Ljava/lang/Object;
   49:	astore	6
   51:	aload	6
   53:	instanceof	#303; //class scala/collection/Sequence
   56:	ifeq	64
   59:	aload	6
   61:	goto	72
   64:	getstatic	#308; //Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   67:	aload	6
   69:	invokevirtual	#312; //Method scala/runtime/ScalaRunTime$.boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
   72:	checkcast	#303; //class scala/collection/Sequence
   75:	astore	5
   77:	aload	5
   79:	iconst_1
   80:	invokeinterface	#318,  2; //InterfaceMethod scala/collection/generic/SequenceTemplate.lengthCompare:(I)I
   85:	iconst_0
   86:	if_icmplt	237
   89:	aload	5
   91:	iconst_0
   92:	invokeinterface	#321,  2; //InterfaceMethod scala/collection/generic/SequenceTemplate.apply:(I)Ljava/lang/Object;
   97:	invokestatic	#69; //Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
   100:	istore	7
   102:	aload	5
   104:	iconst_1
   105:	invokeinterface	#326,  2; //InterfaceMethod scala/collection/generic/TraversableTemplate.drop:(I)Lscala/collection/generic/TraversableTemplate;
   110:	checkcast	#157; //class scala/collection/generic/IterableTemplate
   113:	invokeinterface	#330,  1; //InterfaceMethod scala/collection/generic/IterableTemplate.toSeq:()Lscala/collection/Sequence;
   118:	astore	8
   120:	aload	8
   122:	astore	9
   124:	iload	7
   126:	istore	10
   128:	aload_0
   129:	aload	9
   131:	iload	10
   133:	invokespecial	#332; //Method gd2$1:(Lscala/collection/Sequence;C)Z
   136:	ifeq	231
   139:	aload	8
   141:	astore	9
   143:	getstatic	#308; //Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   146:	getstatic	#337; //Field scala/Array$.MODULE$:Lscala/Array$;
   149:	getstatic	#308; //Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   152:	iconst_1
   153:	newarray char
   155:	dup
   156:	iconst_0
   157:	iload	7
   159:	castore
   160:	invokevirtual	#312; //Method scala/runtime/ScalaRunTime$.boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
   163:	invokevirtual	#340; //Method scala/Array$.apply:(Lscala/collection/Sequence;)[C
   166:	invokevirtual	#312; //Method scala/runtime/ScalaRunTime$.boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
   169:	aload	9
   171:	new	#342; //class scala/xml/Utility$$anonfun$getName$1
   174:	dup
   175:	invokespecial	#343; //Method scala/xml/Utility$$anonfun$getName$1."<init>":()V
   178:	invokeinterface	#347,  2; //InterfaceMethod scala/collection/generic/TraversableTemplate.takeWhile:(Lscala/Function1;)Lscala/collection/generic/TraversableTemplate;
   183:	checkcast	#349; //class scala/collection/Traversable
   186:	getstatic	#337; //Field scala/Array$.MODULE$:Lscala/Array$;
   189:	invokevirtual	#353; //Method scala/Array$.builderFactory:()Lscala/collection/generic/BuilderFactory;
   192:	invokeinterface	#357,  3; //InterfaceMethod scala/collection/generic/TraversableTemplate.$plus$plus:(Lscala/collection/Traversable;Lscala/collection/generic/BuilderFactory;)Ljava/lang/Object;
   197:	astore	11
   199:	aload	11
   201:	instanceof	#323; //class scala/collection/generic/TraversableTemplate
   204:	ifeq	212
   207:	aload	11
   209:	goto	220
   212:	getstatic	#308; //Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   215:	aload	11
   217:	invokevirtual	#312; //Method scala/runtime/ScalaRunTime$.boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
   220:	checkcast	#323; //class scala/collection/generic/TraversableTemplate
   223:	invokeinterface	#360,  1; //InterfaceMethod scala/collection/generic/TraversableTemplate.mkString:()Ljava/lang/String;
   228:	goto	246
   231:	ldc_w	#362; //String 
   234:	goto	246
   237:	ldc_w	#362; //String 
   240:	goto	246
   243:	ldc_w	#362; //String 
   246:	areturn
  LineNumberTable: 
   line 293: 0
   line 294: 14
   line 295: 31
   line 294: 40
   line 295: 44
   line 294: 77
   line 45: 85
   line 295: 89
   line 294: 128
   line 295: 139
   line 296: 220
   line 295: 223
   line 296: 231
   line 293: 246

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      247      0    this       Lscala/xml/Utility$;
   0      247      1    s       Ljava/lang/String;
   0      247      2    index       I
   31      215      3    temp49       Lscala/runtime/RichString;
   40      206      4    temp50       Lscala/Some;
   77      166      5    temp51       Lscala/collection/Sequence;
   102      135      7    temp52       C
   120      117      8    temp53       Lscala/collection/Sequence;
   124      15      9    xs       Lscala/collection/Sequence;
   143      64      9    xs       Lscala/collection/Sequence;
   139      89      9    xs       Lscala/collection/Sequence;
   231      6      9    xs       Lscala/collection/Sequence;
   128      109      10    x       C


public scala.collection.mutable.StringBuilder appendEscapedQuoted(java.lang.String, scala.collection.mutable.StringBuilder);
  Code:
   Stack=4, Locals=3, Args_size=3
   0:	aload_2
   1:	ldc_w	#374; //int 34
   4:	invokevirtual	#212; //Method scala/collection/mutable/StringBuilder.append:(C)Lscala/collection/mutable/StringBuilder;
   7:	pop
   8:	getstatic	#96; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   11:	aload_1
   12:	invokevirtual	#152; //Method scala/Predef$.stringWrapper:(Ljava/lang/String;)Lscala/runtime/RichString;
   15:	new	#376; //class scala/xml/Utility$$anonfun$appendEscapedQuoted$1
   18:	dup
   19:	aload_2
   20:	invokespecial	#379; //Method scala/xml/Utility$$anonfun$appendEscapedQuoted$1."<init>":(Lscala/collection/mutable/StringBuilder;)V
   23:	invokeinterface	#383,  2; //InterfaceMethod scala/collection/generic/VectorTemplate.foreach:(Lscala/Function1;)V
   28:	aload_2
   29:	ldc_w	#374; //int 34
   32:	invokevirtual	#212; //Method scala/collection/mutable/StringBuilder.append:(C)Lscala/collection/mutable/StringBuilder;
   35:	areturn
  LineNumberTable: 
   line 279: 0
   line 280: 8
   line 284: 28

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      36      0    this       Lscala/xml/Utility$;
   0      36      1    s       Ljava/lang/String;
   0      36      2    sb$3       Lscala/collection/mutable/StringBuilder;


public scala.collection.mutable.StringBuilder appendQuoted(java.lang.String, scala.collection.mutable.StringBuilder);
  Code:
   Stack=2, Locals=4, Args_size=3
   0:	getstatic	#96; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   3:	aload_1
   4:	invokevirtual	#152; //Method scala/Predef$.stringWrapper:(Ljava/lang/String;)Lscala/runtime/RichString;
   7:	ldc_w	#374; //int 34
   10:	invokestatic	#181; //Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
   13:	invokeinterface	#389,  2; //InterfaceMethod scala/collection/generic/SequenceTemplate.contains:(Ljava/lang/Object;)Z
   18:	ifeq	27
   21:	ldc_w	#390; //int 39
   24:	goto	30
   27:	ldc_w	#374; //int 34
   30:	istore_3
   31:	aload_2
   32:	iload_3
   33:	invokevirtual	#212; //Method scala/collection/mutable/StringBuilder.append:(C)Lscala/collection/mutable/StringBuilder;
   36:	aload_1
   37:	invokevirtual	#209; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
   40:	iload_3
   41:	invokevirtual	#212; //Method scala/collection/mutable/StringBuilder.append:(C)Lscala/collection/mutable/StringBuilder;
   44:	areturn
  LineNumberTable: 
   line 267: 0
   line 268: 31

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      45      0    this       Lscala/xml/Utility$;
   0      45      1    s       Ljava/lang/String;
   0      45      2    sb       Lscala/collection/mutable/StringBuilder;
   31      13      3    ch       C


public java.lang.String appendQuoted(java.lang.String);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	aload_0
   1:	new	#392; //class scala/xml/Utility$$anonfun$appendQuoted$1
   4:	dup
   5:	aload_1
   6:	invokespecial	#393; //Method scala/xml/Utility$$anonfun$appendQuoted$1."<init>":(Ljava/lang/String;)V
   9:	invokevirtual	#397; //Method sbToString:(Lscala/Function1;)Ljava/lang/String;
   12:	areturn
  LineNumberTable: 
   line 256: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      13      0    this       Lscala/xml/Utility$;
   0      13      1    s$2       Ljava/lang/String;


public int hashCode(java.lang.String, java.lang.String, int, int, scala.collection.Sequence);
  Code:
   Stack=3, Locals=8, Args_size=6
   0:	aload_1
   1:	ifnull	19
   4:	ldc_w	#401; //int 41
   7:	aload_1
   8:	invokevirtual	#403; //Method java/lang/String.hashCode:()I
   11:	imul
   12:	ldc_w	#404; //int 7
   15:	irem
   16:	goto	20
   19:	iconst_0
   20:	aload_2
   21:	invokevirtual	#403; //Method java/lang/String.hashCode:()I
   24:	ldc_w	#405; //int 53
   27:	imul
   28:	iadd
   29:	iload_3
   30:	ldc_w	#404; //int 7
   33:	imul
   34:	iadd
   35:	iload	4
   37:	ldc_w	#406; //int 31
   40:	imul
   41:	iadd
   42:	iconst_0
   43:	istore	6
   45:	aload	5
   47:	invokeinterface	#161,  1; //InterfaceMethod scala/collection/generic/IterableTemplate.iterator:()Lscala/collection/Iterator;
   52:	astore	7
   54:	aload	7
   56:	invokeinterface	#166,  1; //InterfaceMethod scala/collection/Iterator.hasNext:()Z
   61:	ifeq	89
   64:	iload	6
   66:	ldc_w	#401; //int 41
   69:	imul
   70:	aload	7
   72:	invokeinterface	#171,  1; //InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
   77:	checkcast	#408; //class scala/xml/Node
   80:	invokevirtual	#409; //Method scala/xml/Node.hashCode:()I
   83:	iadd
   84:	istore	6
   86:	goto	54
   89:	iload	6
   91:	iadd
   92:	ireturn
  LineNumberTable: 
   line 244: 0
   line 245: 20
   line 246: 29
   line 247: 35
   line 249: 42
   line 250: 45
   line 251: 54
   line 252: 89
   line 248: 91

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      93      0    this       Lscala/xml/Utility$;
   0      93      1    pre       Ljava/lang/String;
   0      93      2    label       Ljava/lang/String;
   0      93      3    attribHashCode       I
   0      93      4    scpeHash       I
   0      93      5    children       Lscala/collection/Sequence;
   45      46      6    c       I
   54      37      7    i       Lscala/collection/Iterator;

  Signature: length = 0x2
   01 FFFFFFA0 

public final scala.Option prefix(java.lang.String);
  Code:
   Stack=5, Locals=3, Args_size=2
   0:	aload_1
   1:	ldc_w	#419; //int 58
   4:	invokevirtual	#422; //Method java/lang/String.indexOf:(I)I
   7:	istore_2
   8:	iload_2
   9:	invokestatic	#186; //Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   12:	iconst_m1
   13:	invokestatic	#186; //Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   16:	invokestatic	#190; //Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
   19:	ifeq	28
   22:	getstatic	#427; //Field scala/None$.MODULE$:Lscala/None$;
   25:	goto	41
   28:	new	#298; //class scala/Some
   31:	dup
   32:	aload_1
   33:	iconst_0
   34:	iload_2
   35:	invokevirtual	#431; //Method java/lang/String.substring:(II)Ljava/lang/String;
   38:	invokespecial	#434; //Method scala/Some."<init>":(Ljava/lang/Object;)V
   41:	areturn
  LineNumberTable: 
   line 230: 0
   line 231: 22
   line 232: 28
   line 230: 41

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      42      0    this       Lscala/xml/Utility$;
   0      42      1    name       Ljava/lang/String;
   8      34      2    temp47       I

  Signature: length = 0x2
   01 FFFFFFB5 

public void sequenceToXML(scala.collection.Sequence, scala.xml.NamespaceBinding, scala.collection.mutable.StringBuilder, boolean);
  Code:
   Stack=8, Locals=8, Args_size=5
   0:	aload_1
   1:	invokeinterface	#442,  1; //InterfaceMethod scala/collection/generic/IterableTemplate.isEmpty:()Z
   6:	ifeq	10
   9:	return
   10:	aload_1
   11:	new	#444; //class scala/xml/Utility$$anonfun$sequenceToXML$1
   14:	dup
   15:	invokespecial	#445; //Method scala/xml/Utility$$anonfun$sequenceToXML$1."<init>":()V
   18:	invokeinterface	#449,  2; //InterfaceMethod scala/collection/generic/TraversableTemplate.forall:(Lscala/Function1;)Z
   23:	ifeq	129
   26:	aload_1
   27:	invokeinterface	#161,  1; //InterfaceMethod scala/collection/generic/IterableTemplate.iterator:()Lscala/collection/Iterator;
   32:	astore	5
   34:	aload	5
   36:	invokeinterface	#171,  1; //InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
   41:	checkcast	#408; //class scala/xml/Node
   44:	astore	6
   46:	aload_0
   47:	aload	6
   49:	aload_2
   50:	aload_3
   51:	aload_0
   52:	invokevirtual	#451; //Method toXML$default$4:()Z
   55:	aload_0
   56:	invokevirtual	#453; //Method toXML$default$5:()Z
   59:	aload_0
   60:	invokevirtual	#455; //Method toXML$default$6:()Z
   63:	aload_0
   64:	invokevirtual	#457; //Method toXML$default$7:()Z
   67:	invokevirtual	#461; //Method toXML:(Lscala/xml/Node;Lscala/xml/NamespaceBinding;Lscala/collection/mutable/StringBuilder;ZZZZ)Lscala/collection/mutable/StringBuilder;
   70:	pop
   71:	aload	5
   73:	invokeinterface	#166,  1; //InterfaceMethod scala/collection/Iterator.hasNext:()Z
   78:	ifeq	144
   81:	aload	5
   83:	invokeinterface	#171,  1; //InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
   88:	checkcast	#408; //class scala/xml/Node
   91:	astore	7
   93:	aload_3
   94:	ldc_w	#462; //int 32
   97:	invokevirtual	#212; //Method scala/collection/mutable/StringBuilder.append:(C)Lscala/collection/mutable/StringBuilder;
   100:	pop
   101:	aload_0
   102:	aload	7
   104:	aload_2
   105:	aload_3
   106:	aload_0
   107:	invokevirtual	#451; //Method toXML$default$4:()Z
   110:	aload_0
   111:	invokevirtual	#453; //Method toXML$default$5:()Z
   114:	aload_0
   115:	invokevirtual	#455; //Method toXML$default$6:()Z
   118:	aload_0
   119:	invokevirtual	#457; //Method toXML$default$7:()Z
   122:	invokevirtual	#461; //Method toXML:(Lscala/xml/Node;Lscala/xml/NamespaceBinding;Lscala/collection/mutable/StringBuilder;ZZZZ)Lscala/collection/mutable/StringBuilder;
   125:	pop
   126:	goto	71
   129:	aload_1
   130:	new	#464; //class scala/xml/Utility$$anonfun$sequenceToXML$2
   133:	dup
   134:	aload_2
   135:	aload_3
   136:	invokespecial	#467; //Method scala/xml/Utility$$anonfun$sequenceToXML$2."<init>":(Lscala/xml/NamespaceBinding;Lscala/collection/mutable/StringBuilder;)V
   139:	invokeinterface	#468,  2; //InterfaceMethod scala/collection/generic/IterableTemplate.foreach:(Lscala/Function1;)V
   144:	return
  LineNumberTable: 
   line 210: 0
   line 211: 10
   line 212: 26
   line 213: 34
   line 214: 46
   line 215: 71
   line 216: 81
   line 217: 93
   line 218: 101
   line 215: 126
   line 221: 129
   line 210: 144

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      145      0    this       Lscala/xml/Utility$;
   0      145      1    children       Lscala/collection/Sequence;
   0      145      2    pscope$1       Lscala/xml/NamespaceBinding;
   0      145      3    sb$2       Lscala/collection/mutable/StringBuilder;
   0      145      4    stripComments       Z
   34      95      5    it       Lscala/collection/Iterator;
   46      83      6    f       Lscala/xml/Node;
   93      33      7    x       Lscala/xml/Node;

  Signature: length = 0x2
   01 FFFFFFDC 

public scala.collection.mutable.StringBuilder toXML(scala.xml.Node, scala.xml.NamespaceBinding, scala.collection.mutable.StringBuilder, boolean, boolean, boolean, boolean);
  Code:
   Stack=5, Locals=13, Args_size=8
   0:	aload_1
   1:	astore	8
   3:	aload	8
   5:	instanceof	#478; //class scala/xml/Comment
   8:	ifeq	49
   11:	aload	8
   13:	checkcast	#478; //class scala/xml/Comment
   16:	astore	9
   18:	aload	9
   20:	astore	10
   22:	aload_0
   23:	aload	10
   25:	iload	4
   27:	invokespecial	#480; //Method gd1$1:(Lscala/xml/Comment;Z)Z
   30:	ifeq	42
   33:	aload	9
   35:	aload_3
   36:	invokevirtual	#484; //Method scala/xml/Comment.buildString:(Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;
   39:	goto	227
   42:	aload	9
   44:	astore	11
   46:	goto	64
   49:	aload	8
   51:	instanceof	#486; //class scala/xml/SpecialNode
   54:	ifeq	73
   57:	aload	8
   59:	checkcast	#486; //class scala/xml/SpecialNode
   62:	astore	11
   64:	aload	11
   66:	aload_3
   67:	invokevirtual	#487; //Method scala/xml/SpecialNode.buildString:(Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;
   70:	goto	227
   73:	aload	8
   75:	instanceof	#489; //class scala/xml/Group
   78:	ifeq	111
   81:	aload	8
   83:	checkcast	#489; //class scala/xml/Group
   86:	astore	12
   88:	aload	12
   90:	invokevirtual	#492; //Method scala/xml/Group.nodes:()Lscala/collection/Sequence;
   93:	new	#494; //class scala/xml/Utility$$anonfun$toXML$1
   96:	dup
   97:	aload_1
   98:	aload_3
   99:	invokespecial	#497; //Method scala/xml/Utility$$anonfun$toXML$1."<init>":(Lscala/xml/Node;Lscala/collection/mutable/StringBuilder;)V
   102:	invokeinterface	#468,  2; //InterfaceMethod scala/collection/generic/IterableTemplate.foreach:(Lscala/Function1;)V
   107:	aload_3
   108:	goto	227
   111:	aload_3
   112:	ldc_w	#498; //int 60
   115:	invokevirtual	#212; //Method scala/collection/mutable/StringBuilder.append:(C)Lscala/collection/mutable/StringBuilder;
   118:	pop
   119:	aload_1
   120:	aload_3
   121:	invokevirtual	#501; //Method scala/xml/Node.nameToString:(Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;
   124:	pop
   125:	aload_1
   126:	invokevirtual	#505; //Method scala/xml/Node.attributes:()Lscala/xml/MetaData;
   129:	ifnull	143
   132:	aload_1
   133:	invokevirtual	#505; //Method scala/xml/Node.attributes:()Lscala/xml/MetaData;
   136:	aload_3
   137:	invokevirtual	#508; //Method scala/xml/MetaData.buildString:(Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;
   140:	goto	146
   143:	getstatic	#114; //Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
   146:	pop
   147:	aload_1
   148:	invokevirtual	#511; //Method scala/xml/Node.scope:()Lscala/xml/NamespaceBinding;
   151:	aload_3
   152:	aload_2
   153:	invokevirtual	#516; //Method scala/xml/NamespaceBinding.buildString:(Lscala/collection/mutable/StringBuilder;Lscala/xml/NamespaceBinding;)V
   156:	aload_1
   157:	invokevirtual	#519; //Method scala/xml/Node.child:()Lscala/collection/Sequence;
   160:	invokeinterface	#442,  1; //InterfaceMethod scala/collection/generic/IterableTemplate.isEmpty:()Z
   165:	ifeq	183
   168:	iload	7
   170:	ifeq	183
   173:	aload_3
   174:	ldc_w	#521; //String  />
   177:	invokevirtual	#209; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
   180:	goto	227
   183:	aload_3
   184:	ldc_w	#522; //int 62
   187:	invokevirtual	#212; //Method scala/collection/mutable/StringBuilder.append:(C)Lscala/collection/mutable/StringBuilder;
   190:	pop
   191:	aload_0
   192:	aload_1
   193:	invokevirtual	#519; //Method scala/xml/Node.child:()Lscala/collection/Sequence;
   196:	aload_1
   197:	invokevirtual	#511; //Method scala/xml/Node.scope:()Lscala/xml/NamespaceBinding;
   200:	aload_3
   201:	iload	4
   203:	invokevirtual	#524; //Method sequenceToXML:(Lscala/collection/Sequence;Lscala/xml/NamespaceBinding;Lscala/collection/mutable/StringBuilder;Z)V
   206:	aload_3
   207:	ldc_w	#526; //String </
   210:	invokevirtual	#209; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
   213:	pop
   214:	aload_1
   215:	aload_3
   216:	invokevirtual	#501; //Method scala/xml/Node.nameToString:(Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;
   219:	pop
   220:	aload_3
   221:	ldc_w	#522; //int 62
   224:	invokevirtual	#212; //Method scala/collection/mutable/StringBuilder.append:(C)Lscala/collection/mutable/StringBuilder;
   227:	areturn
  LineNumberTable: 
   line 180: 0
   line 181: 18
   line 180: 22
   line 181: 33
   line 182: 42
   line 180: 49
   line 182: 64
   line 180: 73
   line 183: 88
   line 186: 111
   line 187: 119
   line 188: 125
   line 189: 147
   line 190: 156
   line 192: 173
   line 195: 183
   line 196: 191
   line 197: 206
   line 198: 214
   line 199: 220
   line 180: 227

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      228      0    this       Lscala/xml/Utility$;
   0      228      1    x$9       Lscala/xml/Node;
   0      228      2    pscope       Lscala/xml/NamespaceBinding;
   0      228      3    sb$1       Lscala/collection/mutable/StringBuilder;
   0      228      4    stripComments$1       Z
   0      228      5    decodeEntities       Z
   0      228      6    preserveWhitespace       Z
   0      228      7    minimizeTags       Z
   3      225      8    temp41       Lscala/xml/Node;
   18      31      9    temp42       Lscala/xml/Comment;
   64      9      9    temp42       Lscala/xml/Comment;
   22      27      10    c       Lscala/xml/Comment;
   64      9      10    c       Lscala/xml/Comment;
   46      3      11    x       Lscala/xml/SpecialNode;
   64      6      11    x       Lscala/xml/SpecialNode;
   88      20      12    temp45       Lscala/xml/Group;


public void collectNamespaces(scala.xml.Node, scala.collection.mutable.Set);
  Code:
   Stack=5, Locals=3, Args_size=3
   0:	aload_1
   1:	invokevirtual	#544; //Method scala/xml/Node.doCollectNamespaces:()Z
   4:	ifeq	53
   7:	aload_2
   8:	aload_1
   9:	invokevirtual	#547; //Method scala/xml/Node.namespace:()Ljava/lang/String;
   12:	invokeinterface	#552,  2; //InterfaceMethod scala/collection/generic/MutableSetTemplate.$plus$eq:(Ljava/lang/Object;)Lscala/collection/generic/MutableSetTemplate;
   17:	pop
   18:	aload_1
   19:	invokevirtual	#505; //Method scala/xml/Node.attributes:()Lscala/xml/MetaData;
   22:	new	#554; //class scala/xml/Utility$$anonfun$collectNamespaces$2
   25:	dup
   26:	aload_1
   27:	aload_2
   28:	invokespecial	#556; //Method scala/xml/Utility$$anonfun$collectNamespaces$2."<init>":(Lscala/xml/Node;Lscala/collection/mutable/Set;)V
   31:	invokeinterface	#468,  2; //InterfaceMethod scala/collection/generic/IterableTemplate.foreach:(Lscala/Function1;)V
   36:	aload_1
   37:	invokevirtual	#519; //Method scala/xml/Node.child:()Lscala/collection/Sequence;
   40:	new	#558; //class scala/xml/Utility$$anonfun$collectNamespaces$3
   43:	dup
   44:	aload_2
   45:	invokespecial	#561; //Method scala/xml/Utility$$anonfun$collectNamespaces$3."<init>":(Lscala/collection/mutable/Set;)V
   48:	invokeinterface	#468,  2; //InterfaceMethod scala/collection/generic/IterableTemplate.foreach:(Lscala/Function1;)V
   53:	return
  LineNumberTable: 
   line 146: 0
   line 147: 7
   line 148: 18
   line 153: 36
   line 146: 53

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      54      0    this       Lscala/xml/Utility$;
   0      54      1    n$1       Lscala/xml/Node;
   0      54      2    set$1       Lscala/collection/mutable/Set;

  Signature: length = 0x2
   02 35 

public scala.collection.mutable.Set collectNamespaces(scala.collection.Sequence);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	aload_1
   1:	new	#568; //class scala/collection/mutable/HashSet
   4:	dup
   5:	invokespecial	#569; //Method scala/collection/mutable/HashSet."<init>":()V
   8:	new	#571; //class scala/xml/Utility$$anonfun$collectNamespaces$1
   11:	dup
   12:	invokespecial	#572; //Method scala/xml/Utility$$anonfun$collectNamespaces$1."<init>":()V
   15:	invokeinterface	#576,  3; //InterfaceMethod scala/collection/generic/TraversableTemplate.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
   20:	checkcast	#578; //class scala/collection/mutable/Set
   23:	areturn
  LineNumberTable: 
   line 137: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      24      0    this       Lscala/xml/Utility$;
   0      24      1    nodes       Lscala/collection/Sequence;

  Signature: length = 0x2
   02 43 

public final scala.collection.mutable.StringBuilder unescape(java.lang.String, scala.collection.mutable.StringBuilder);
  Code:
   Stack=4, Locals=3, Args_size=3
   0:	getstatic	#584; //Field scala/xml/Utility$Escapes$.MODULE$:Lscala/xml/Utility$Escapes$;
   3:	invokevirtual	#588; //Method scala/xml/Utility$Escapes$.unescMap:()Lscala/collection/immutable/Map;
   6:	aload_1
   7:	invokeinterface	#593,  2; //InterfaceMethod scala/collection/generic/MapTemplate.get:(Ljava/lang/Object;)Lscala/Option;
   12:	new	#595; //class scala/xml/Utility$$anonfun$unescape$1
   15:	dup
   16:	aload_2
   17:	invokespecial	#596; //Method scala/xml/Utility$$anonfun$unescape$1."<init>":(Lscala/collection/mutable/StringBuilder;)V
   20:	invokevirtual	#602; //Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
   23:	new	#604; //class scala/xml/Utility$$anonfun$unescape$2
   26:	dup
   27:	invokespecial	#605; //Method scala/xml/Utility$$anonfun$unescape$2."<init>":()V
   30:	invokevirtual	#609; //Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
   33:	checkcast	#46; //class scala/collection/mutable/StringBuilder
   36:	areturn
  LineNumberTable: 
   line 127: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      37      0    this       Lscala/xml/Utility$;
   0      37      1    ref       Ljava/lang/String;
   0      37      2    s$1       Lscala/collection/mutable/StringBuilder;


public final scala.collection.mutable.StringBuilder escape(java.lang.String, scala.collection.mutable.StringBuilder);
  Code:
   Stack=4, Locals=3, Args_size=3
   0:	getstatic	#96; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   3:	aload_1
   4:	invokevirtual	#152; //Method scala/Predef$.stringWrapper:(Ljava/lang/String;)Lscala/runtime/RichString;
   7:	aload_2
   8:	new	#613; //class scala/xml/Utility$$anonfun$escape$2
   11:	dup
   12:	invokespecial	#614; //Method scala/xml/Utility$$anonfun$escape$2."<init>":()V
   15:	invokeinterface	#615,  3; //InterfaceMethod scala/collection/generic/VectorTemplate.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
   20:	checkcast	#46; //class scala/collection/mutable/StringBuilder
   23:	areturn
  LineNumberTable: 
   line 112: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      24      0    this       Lscala/xml/Utility$;
   0      24      1    text       Ljava/lang/String;
   0      24      2    s       Lscala/collection/mutable/StringBuilder;


public final java.lang.String escape(java.lang.String);
  Code:
   Stack=4, Locals=2, Args_size=2
   0:	aload_0
   1:	new	#618; //class scala/xml/Utility$$anonfun$escape$1
   4:	dup
   5:	aload_1
   6:	invokespecial	#619; //Method scala/xml/Utility$$anonfun$escape$1."<init>":(Ljava/lang/String;)V
   9:	invokevirtual	#397; //Method sbToString:(Lscala/Function1;)Ljava/lang/String;
   12:	areturn
  LineNumberTable: 
   line 85: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      13      0    this       Lscala/xml/Utility$;
   0      13      1    text$1       Ljava/lang/String;


public scala.xml.Text view(java.lang.String);
  Code:
   Stack=3, Locals=2, Args_size=2
   0:	new	#226; //class scala/xml/Text
   3:	dup
   4:	aload_1
   5:	invokespecial	#229; //Method scala/xml/Text."<init>":(Ljava/lang/String;)V
   8:	areturn
  LineNumberTable: 
   line 77: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      9      0    this       Lscala/xml/Utility$;
   0      9      1    s       Ljava/lang/String;


public scala.xml.Node sort(scala.xml.Node);
  Code:
   Stack=8, Locals=17, Args_size=2
   0:	aload_1
   1:	astore_2
   2:	getstatic	#629; //Field scala/xml/Elem$.MODULE$:Lscala/xml/Elem$;
   5:	aload_2
   6:	invokevirtual	#632; //Method scala/xml/Elem$.unapplySeq:(Lscala/xml/Node;)Lscala/Option;
   9:	astore_3
   10:	aload_3
   11:	invokevirtual	#633; //Method scala/Option.isEmpty:()Z
   14:	ifne	198
   17:	aload_3
   18:	invokevirtual	#634; //Method scala/Option.get:()Ljava/lang/Object;
   21:	checkcast	#636; //class scala/Tuple5
   24:	astore	4
   26:	aload	4
   28:	invokevirtual	#639; //Method scala/Tuple5._1:()Ljava/lang/Object;
   31:	checkcast	#116; //class java/lang/String
   34:	astore	5
   36:	aload	4
   38:	invokevirtual	#642; //Method scala/Tuple5._2:()Ljava/lang/Object;
   41:	checkcast	#116; //class java/lang/String
   44:	astore	6
   46:	aload	4
   48:	invokevirtual	#645; //Method scala/Tuple5._3:()Ljava/lang/Object;
   51:	checkcast	#507; //class scala/xml/MetaData
   54:	astore	7
   56:	aload	4
   58:	invokevirtual	#648; //Method scala/Tuple5._4:()Ljava/lang/Object;
   61:	checkcast	#513; //class scala/xml/NamespaceBinding
   64:	astore	8
   66:	aload	4
   68:	invokevirtual	#651; //Method scala/Tuple5._5:()Ljava/lang/Object;
   71:	astore	10
   73:	aload	10
   75:	instanceof	#303; //class scala/collection/Sequence
   78:	ifeq	86
   81:	aload	10
   83:	goto	94
   86:	getstatic	#308; //Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   89:	aload	10
   91:	invokevirtual	#312; //Method scala/runtime/ScalaRunTime$.boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
   94:	checkcast	#303; //class scala/collection/Sequence
   97:	astore	9
   99:	aload	9
   101:	iconst_0
   102:	invokeinterface	#318,  2; //InterfaceMethod scala/collection/generic/SequenceTemplate.lengthCompare:(I)I
   107:	iconst_0
   108:	if_icmplt	198
   111:	aload	9
   113:	astore	11
   115:	aload	11
   117:	astore	12
   119:	aload	8
   121:	astore	13
   123:	aload	7
   125:	astore	14
   127:	aload	6
   129:	astore	15
   131:	getstatic	#629; //Field scala/xml/Elem$.MODULE$:Lscala/xml/Elem$;
   134:	aload	5
   136:	aload	15
   138:	aload_0
   139:	aload	14
   141:	invokevirtual	#654; //Method sort:(Lscala/xml/MetaData;)Lscala/xml/MetaData;
   144:	aload	13
   146:	aload	12
   148:	new	#656; //class scala/xml/Utility$$anonfun$sort$1
   151:	dup
   152:	invokespecial	#657; //Method scala/xml/Utility$$anonfun$sort$1."<init>":()V
   155:	getstatic	#292; //Field scala/collection/Sequence$.MODULE$:Lscala/collection/Sequence$;
   158:	invokevirtual	#658; //Method scala/collection/Sequence$.builderFactory:()Lscala/collection/generic/BuilderFactory;
   161:	invokeinterface	#661,  3; //InterfaceMethod scala/collection/generic/TraversableTemplate.map:(Lscala/Function1;Lscala/collection/generic/BuilderFactory;)Ljava/lang/Object;
   166:	astore	16
   168:	aload	16
   170:	instanceof	#303; //class scala/collection/Sequence
   173:	ifeq	181
   176:	aload	16
   178:	goto	189
   181:	getstatic	#308; //Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   184:	aload	16
   186:	invokevirtual	#312; //Method scala/runtime/ScalaRunTime$.boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
   189:	checkcast	#303; //class scala/collection/Sequence
   192:	invokevirtual	#664; //Method scala/xml/Elem$.apply:(Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Sequence;)Lscala/xml/Elem;
   195:	goto	199
   198:	aload_1
   199:	areturn
  LineNumberTable: 
   line 70: 0
   line 71: 2
   line 70: 10
   line 71: 17
   line 70: 99
   line 45: 107
   line 71: 111
   line 72: 131
   line 71: 134
   line 72: 136
   line 73: 189
   line 72: 192
   line 73: 198
   line 70: 199

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      200      0    this       Lscala/xml/Utility$;
   0      200      1    n       Lscala/xml/Node;
   2      198      2    temp23       Lscala/xml/Node;
   10      190      3    temp24       Lscala/Option;
   26      173      4    temp25       Lscala/Tuple5;
   36      163      5    temp26       Ljava/lang/String;
   46      153      6    temp27       Ljava/lang/String;
   56      143      7    temp28       Lscala/xml/MetaData;
   66      133      8    temp29       Lscala/xml/NamespaceBinding;
   99      100      9    temp30       Lscala/collection/Sequence;
   115      80      11    temp31       Lscala/collection/Sequence;
   119      76      12    child       Lscala/collection/Sequence;
   123      72      13    scp       Lscala/xml/NamespaceBinding;
   127      68      14    md       Lscala/xml/MetaData;
   131      64      15    lab       Ljava/lang/String;


public scala.xml.MetaData sort(scala.xml.MetaData);
  Code:
   Stack=5, Locals=8, Args_size=2
   0:	aload_1
   1:	getstatic	#684; //Field scala/xml/Null$.MODULE$:Lscala/xml/Null$;
   4:	if_acmpeq	17
   7:	aload_1
   8:	invokevirtual	#686; //Method scala/xml/MetaData.next:()Lscala/xml/MetaData;
   11:	getstatic	#684; //Field scala/xml/Null$.MODULE$:Lscala/xml/Null$;
   14:	if_acmpne	21
   17:	aload_1
   18:	goto	98
   21:	aload_1
   22:	invokevirtual	#689; //Method scala/xml/MetaData.key:()Ljava/lang/String;
   25:	astore_2
   26:	aload_0
   27:	aload_1
   28:	new	#691; //class scala/xml/Utility$$anonfun$1
   31:	dup
   32:	aload_2
   33:	invokespecial	#692; //Method scala/xml/Utility$$anonfun$1."<init>":(Ljava/lang/String;)V
   36:	invokevirtual	#696; //Method scala/xml/MetaData.filter:(Lscala/Function1;)Lscala/xml/MetaData;
   39:	invokevirtual	#654; //Method sort:(Lscala/xml/MetaData;)Lscala/xml/MetaData;
   42:	astore_3
   43:	aload_0
   44:	aload_1
   45:	new	#698; //class scala/xml/Utility$$anonfun$2
   48:	dup
   49:	aload_2
   50:	invokespecial	#699; //Method scala/xml/Utility$$anonfun$2."<init>":(Ljava/lang/String;)V
   53:	invokevirtual	#696; //Method scala/xml/MetaData.filter:(Lscala/Function1;)Lscala/xml/MetaData;
   56:	invokevirtual	#654; //Method sort:(Lscala/xml/MetaData;)Lscala/xml/MetaData;
   59:	astore	4
   61:	aload_3
   62:	getstatic	#684; //Field scala/xml/Null$.MODULE$:Lscala/xml/Null$;
   65:	aload_3
   66:	invokevirtual	#702; //Method scala/xml/MetaData.append$default$2:()Lscala/xml/NamespaceBinding;
   69:	invokevirtual	#705; //Method scala/xml/MetaData.append:(Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;)Lscala/xml/MetaData;
   72:	astore	5
   74:	aload_1
   75:	aload	4
   77:	invokevirtual	#708; //Method scala/xml/MetaData.copy:(Lscala/xml/MetaData;)Lscala/xml/MetaData;
   80:	astore	6
   82:	aload	5
   84:	invokevirtual	#702; //Method scala/xml/MetaData.append$default$2:()Lscala/xml/NamespaceBinding;
   87:	astore	7
   89:	aload	5
   91:	aload	6
   93:	aload	7
   95:	invokevirtual	#705; //Method scala/xml/MetaData.append:(Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;)Lscala/xml/MetaData;
   98:	areturn
  LineNumberTable: 
   line 62: 0
   line 63: 21
   line 64: 26
   line 65: 43
   line 66: 61
   line 62: 98

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      99      0    this       Lscala/xml/Utility$;
   0      99      1    md       Lscala/xml/MetaData;
   26      72      2    key$1       Ljava/lang/String;
   43      55      3    smaller       Lscala/xml/MetaData;
   61      37      4    greater       Lscala/xml/MetaData;
   74      24      5    qual$1       Lscala/xml/MetaData;
   82      16      6    x$7       Lscala/xml/MetaData;
   89      9      7    x$8       Lscala/xml/NamespaceBinding;


public scala.collection.Sequence trimProper(scala.xml.Node);
  Code:
   Stack=8, Locals=20, Args_size=2
   0:	aload_1
   1:	astore_2
   2:	getstatic	#629; //Field scala/xml/Elem$.MODULE$:Lscala/xml/Elem$;
   5:	aload_2
   6:	invokevirtual	#632; //Method scala/xml/Elem$.unapplySeq:(Lscala/xml/Node;)Lscala/Option;
   9:	astore_3
   10:	aload_3
   11:	invokevirtual	#633; //Method scala/Option.isEmpty:()Z
   14:	ifeq	36
   17:	aload_2
   18:	instanceof	#226; //class scala/xml/Text
   21:	ifeq	261
   24:	aload_2
   25:	checkcast	#226; //class scala/xml/Text
   28:	invokevirtual	#719; //Method scala/xml/Text._data:()Ljava/lang/String;
   31:	astore	19
   33:	goto	237
   36:	aload_3
   37:	invokevirtual	#634; //Method scala/Option.get:()Ljava/lang/Object;
   40:	checkcast	#636; //class scala/Tuple5
   43:	astore	4
   45:	aload	4
   47:	invokevirtual	#639; //Method scala/Tuple5._1:()Ljava/lang/Object;
   50:	checkcast	#116; //class java/lang/String
   53:	astore	5
   55:	aload	4
   57:	invokevirtual	#642; //Method scala/Tuple5._2:()Ljava/lang/Object;
   60:	checkcast	#116; //class java/lang/String
   63:	astore	6
   65:	aload	4
   67:	invokevirtual	#645; //Method scala/Tuple5._3:()Ljava/lang/Object;
   70:	checkcast	#507; //class scala/xml/MetaData
   73:	astore	7
   75:	aload	4
   77:	invokevirtual	#648; //Method scala/Tuple5._4:()Ljava/lang/Object;
   80:	checkcast	#513; //class scala/xml/NamespaceBinding
   83:	astore	8
   85:	aload	4
   87:	invokevirtual	#651; //Method scala/Tuple5._5:()Ljava/lang/Object;
   90:	astore	10
   92:	aload	10
   94:	instanceof	#303; //class scala/collection/Sequence
   97:	ifeq	105
   100:	aload	10
   102:	goto	113
   105:	getstatic	#308; //Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   108:	aload	10
   110:	invokevirtual	#312; //Method scala/runtime/ScalaRunTime$.boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
   113:	checkcast	#303; //class scala/collection/Sequence
   116:	astore	9
   118:	aload	9
   120:	iconst_0
   121:	invokeinterface	#318,  2; //InterfaceMethod scala/collection/generic/SequenceTemplate.lengthCompare:(I)I
   126:	iconst_0
   127:	if_icmplt	213
   130:	aload	9
   132:	astore	11
   134:	aload	11
   136:	astore	12
   138:	aload	8
   140:	astore	13
   142:	aload	7
   144:	astore	14
   146:	aload	6
   148:	astore	15
   150:	getstatic	#629; //Field scala/xml/Elem$.MODULE$:Lscala/xml/Elem$;
   153:	aload	5
   155:	aload	15
   157:	aload	14
   159:	aload	13
   161:	aload	12
   163:	new	#721; //class scala/xml/Utility$$anonfun$trimProper$1
   166:	dup
   167:	invokespecial	#722; //Method scala/xml/Utility$$anonfun$trimProper$1."<init>":()V
   170:	getstatic	#292; //Field scala/collection/Sequence$.MODULE$:Lscala/collection/Sequence$;
   173:	invokevirtual	#658; //Method scala/collection/Sequence$.builderFactory:()Lscala/collection/generic/BuilderFactory;
   176:	invokeinterface	#725,  3; //InterfaceMethod scala/collection/generic/TraversableTemplate.flatMap:(Lscala/Function1;Lscala/collection/generic/BuilderFactory;)Ljava/lang/Object;
   181:	astore	16
   183:	aload	16
   185:	instanceof	#303; //class scala/collection/Sequence
   188:	ifeq	196
   191:	aload	16
   193:	goto	204
   196:	getstatic	#308; //Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   199:	aload	16
   201:	invokevirtual	#312; //Method scala/runtime/ScalaRunTime$.boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
   204:	checkcast	#303; //class scala/collection/Sequence
   207:	invokevirtual	#664; //Method scala/xml/Elem$.apply:(Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Sequence;)Lscala/xml/Elem;
   210:	goto	262
   213:	aload_2
   214:	instanceof	#226; //class scala/xml/Text
   217:	ifeq	261
   220:	aload_2
   221:	checkcast	#226; //class scala/xml/Text
   224:	astore	17
   226:	aload	17
   228:	invokevirtual	#719; //Method scala/xml/Text._data:()Ljava/lang/String;
   231:	astore	18
   233:	aload	18
   235:	astore	19
   237:	new	#727; //class scala/xml/TextBuffer
   240:	dup
   241:	invokespecial	#728; //Method scala/xml/TextBuffer."<init>":()V
   244:	getstatic	#96; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   247:	aload	19
   249:	invokevirtual	#152; //Method scala/Predef$.stringWrapper:(Ljava/lang/String;)Lscala/runtime/RichString;
   252:	invokevirtual	#731; //Method scala/xml/TextBuffer.append:(Lscala/collection/Sequence;)Lscala/xml/TextBuffer;
   255:	invokevirtual	#734; //Method scala/xml/TextBuffer.toText:()Lscala/collection/Sequence;
   258:	goto	262
   261:	aload_1
   262:	areturn
  LineNumberTable: 
   line 53: 0
   line 54: 2
   line 53: 10
   line 54: 36
   line 53: 118
   line 45: 126
   line 54: 130
   line 55: 150
   line 54: 153
   line 55: 155
   line 53: 204
   line 55: 207
   line 53: 213
   line 56: 233
   line 57: 237
   line 59: 261
   line 53: 262

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      263      0    this       Lscala/xml/Utility$;
   0      263      1    x       Lscala/xml/Node;
   2      261      2    temp10       Lscala/xml/Node;
   10      253      3    temp11       Lscala/Option;
   45      217      4    temp12       Lscala/Tuple5;
   55      207      5    temp13       Ljava/lang/String;
   65      197      6    temp14       Ljava/lang/String;
   75      187      7    temp15       Lscala/xml/MetaData;
   85      177      8    temp16       Lscala/xml/NamespaceBinding;
   118      144      9    temp17       Lscala/collection/Sequence;
   134      76      11    temp18       Lscala/collection/Sequence;
   138      72      12    child       Lscala/collection/Sequence;
   142      68      13    scp       Lscala/xml/NamespaceBinding;
   146      64      14    md       Lscala/xml/MetaData;
   150      60      15    lab       Ljava/lang/String;
   226      32      17    temp19       Lscala/xml/Text;
   233      25      18    temp20       Ljava/lang/String;
   237      21      19    s       Ljava/lang/String;

  Signature: length = 0x2
   02 FFFFFFEA 

public scala.xml.Node trim(scala.xml.Node);
  Code:
   Stack=8, Locals=17, Args_size=2
   0:	aload_1
   1:	astore_2
   2:	getstatic	#629; //Field scala/xml/Elem$.MODULE$:Lscala/xml/Elem$;
   5:	aload_2
   6:	invokevirtual	#632; //Method scala/xml/Elem$.unapplySeq:(Lscala/xml/Node;)Lscala/Option;
   9:	astore_3
   10:	aload_3
   11:	invokevirtual	#633; //Method scala/Option.isEmpty:()Z
   14:	ifeq	29
   17:	new	#749; //class scala/MatchError
   20:	dup
   21:	aload_2
   22:	invokevirtual	#750; //Method scala/xml/Node.toString:()Ljava/lang/String;
   25:	invokespecial	#751; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   28:	athrow
   29:	aload_3
   30:	invokevirtual	#634; //Method scala/Option.get:()Ljava/lang/Object;
   33:	checkcast	#636; //class scala/Tuple5
   36:	astore	4
   38:	aload	4
   40:	invokevirtual	#639; //Method scala/Tuple5._1:()Ljava/lang/Object;
   43:	checkcast	#116; //class java/lang/String
   46:	astore	5
   48:	aload	4
   50:	invokevirtual	#642; //Method scala/Tuple5._2:()Ljava/lang/Object;
   53:	checkcast	#116; //class java/lang/String
   56:	astore	6
   58:	aload	4
   60:	invokevirtual	#645; //Method scala/Tuple5._3:()Ljava/lang/Object;
   63:	checkcast	#507; //class scala/xml/MetaData
   66:	astore	7
   68:	aload	4
   70:	invokevirtual	#648; //Method scala/Tuple5._4:()Ljava/lang/Object;
   73:	checkcast	#513; //class scala/xml/NamespaceBinding
   76:	astore	8
   78:	aload	4
   80:	invokevirtual	#651; //Method scala/Tuple5._5:()Ljava/lang/Object;
   83:	astore	10
   85:	aload	10
   87:	instanceof	#303; //class scala/collection/Sequence
   90:	ifeq	98
   93:	aload	10
   95:	goto	106
   98:	getstatic	#308; //Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   101:	aload	10
   103:	invokevirtual	#312; //Method scala/runtime/ScalaRunTime$.boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
   106:	checkcast	#303; //class scala/collection/Sequence
   109:	astore	9
   111:	aload	9
   113:	iconst_0
   114:	invokeinterface	#318,  2; //InterfaceMethod scala/collection/generic/SequenceTemplate.lengthCompare:(I)I
   119:	iconst_0
   120:	if_icmplt	204
   123:	aload	9
   125:	astore	11
   127:	aload	11
   129:	astore	12
   131:	aload	8
   133:	astore	13
   135:	aload	7
   137:	astore	14
   139:	aload	6
   141:	astore	15
   143:	getstatic	#629; //Field scala/xml/Elem$.MODULE$:Lscala/xml/Elem$;
   146:	aload	5
   148:	aload	15
   150:	aload	14
   152:	aload	13
   154:	aload	12
   156:	new	#753; //class scala/xml/Utility$$anonfun$trim$1
   159:	dup
   160:	invokespecial	#754; //Method scala/xml/Utility$$anonfun$trim$1."<init>":()V
   163:	getstatic	#292; //Field scala/collection/Sequence$.MODULE$:Lscala/collection/Sequence$;
   166:	invokevirtual	#658; //Method scala/collection/Sequence$.builderFactory:()Lscala/collection/generic/BuilderFactory;
   169:	invokeinterface	#725,  3; //InterfaceMethod scala/collection/generic/TraversableTemplate.flatMap:(Lscala/Function1;Lscala/collection/generic/BuilderFactory;)Ljava/lang/Object;
   174:	astore	16
   176:	aload	16
   178:	instanceof	#303; //class scala/collection/Sequence
   181:	ifeq	189
   184:	aload	16
   186:	goto	197
   189:	getstatic	#308; //Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   192:	aload	16
   194:	invokevirtual	#312; //Method scala/runtime/ScalaRunTime$.boxArray:(Ljava/lang/Object;)Lscala/runtime/BoxedArray;
   197:	checkcast	#303; //class scala/collection/Sequence
   200:	invokevirtual	#664; //Method scala/xml/Elem$.apply:(Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/Sequence;)Lscala/xml/Elem;
   203:	areturn
   204:	new	#749; //class scala/MatchError
   207:	dup
   208:	aload_2
   209:	invokevirtual	#750; //Method scala/xml/Node.toString:()Ljava/lang/String;
   212:	invokespecial	#751; //Method scala/MatchError."<init>":(Ljava/lang/String;)V
   215:	athrow
  LineNumberTable: 
   line 45: 0
   line 46: 2
   line 45: 10
   line 46: 29
   line 45: 111
   line 46: 123
   line 47: 143
   line 46: 146
   line 47: 148
   line 45: 197
   line 47: 200
   line 45: 203

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      216      0    this       Lscala/xml/Utility$;
   0      216      1    x       Lscala/xml/Node;
   2      214      2    temp1       Lscala/xml/Node;
   10      206      3    temp2       Lscala/Option;
   38      165      4    temp3       Lscala/Tuple5;
   204      12      4    temp3       Lscala/Tuple5;
   48      155      5    temp4       Ljava/lang/String;
   204      12      5    temp4       Ljava/lang/String;
   58      145      6    temp5       Ljava/lang/String;
   204      12      6    temp5       Ljava/lang/String;
   68      135      7    temp6       Lscala/xml/MetaData;
   204      12      7    temp6       Lscala/xml/MetaData;
   78      125      8    temp7       Lscala/xml/NamespaceBinding;
   204      12      8    temp7       Lscala/xml/NamespaceBinding;
   111      92      9    temp8       Lscala/collection/Sequence;
   204      12      9    temp8       Lscala/collection/Sequence;
   127      76      11    temp9       Lscala/collection/Sequence;
   131      72      12    child       Lscala/collection/Sequence;
   135      68      13    scp       Lscala/xml/NamespaceBinding;
   139      64      14    md       Lscala/xml/MetaData;
   143      60      15    lab       Ljava/lang/String;


public boolean isAtomAndNotText(scala.xml.Node);
  Code:
   Stack=1, Locals=2, Args_size=2
   0:	aload_1
   1:	invokevirtual	#768; //Method scala/xml/Node.isAtom:()Z
   4:	ifeq	18
   7:	aload_1
   8:	instanceof	#226; //class scala/xml/Text
   11:	ifne	18
   14:	iconst_1
   15:	goto	19
   18:	iconst_0
   19:	ireturn
  LineNumberTable: 
   line 34: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      20      0    this       Lscala/xml/Utility$;
   0      20      1    x       Lscala/xml/Node;


public java.lang.String sbToString(scala.Function1);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	new	#46; //class scala/collection/mutable/StringBuilder
   3:	dup
   4:	invokespecial	#47; //Method scala/collection/mutable/StringBuilder."<init>":()V
   7:	astore_2
   8:	aload_1
   9:	aload_2
   10:	invokeinterface	#91,  2; //InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
   15:	pop
   16:	aload_2
   17:	invokevirtual	#213; //Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
   20:	areturn
  LineNumberTable: 
   line 30: 0
   line 31: 8
   line 32: 16

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      21      0    this       Lscala/xml/Utility$;
   0      21      1    f       Lscala/Function1;
   8      12      2    sb       Lscala/collection/mutable/StringBuilder;

  Signature: length = 0x2
   03 01 

public java.lang.String implicitSbToString(scala.collection.mutable.StringBuilder);
  Code:
   Stack=1, Locals=2, Args_size=2
   0:	aload_1
   1:	invokevirtual	#213; //Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
   4:	areturn
  LineNumberTable: 
   line 25: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    this       Lscala/xml/Utility$;
   0      5      1    sb       Lscala/collection/mutable/StringBuilder;


public boolean checkPubID(java.lang.String);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#776; //Method scala/xml/parsing/TokenTests$class.checkPubID:(Lscala/xml/parsing/TokenTests;Ljava/lang/String;)Z
   5:	ireturn
  LineNumberTable: 
   line 23: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/Utility$;
   0      6      1    s       Ljava/lang/String;


public boolean checkSysID(java.lang.String);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#779; //Method scala/xml/parsing/TokenTests$class.checkSysID:(Lscala/xml/parsing/TokenTests;Ljava/lang/String;)Z
   5:	ireturn
  LineNumberTable: 
   line 23: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/Utility$;
   0      6      1    s       Ljava/lang/String;


public boolean isValidIANAEncoding(scala.collection.Sequence);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#784; //Method scala/xml/parsing/TokenTests$class.isValidIANAEncoding:(Lscala/xml/parsing/TokenTests;Lscala/collection/Sequence;)Z
   5:	ireturn
  LineNumberTable: 
   line 23: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/Utility$;
   0      6      1    ianaEncoding       Lscala/collection/Sequence;


public boolean isPubIDChar(char);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	invokestatic	#789; //Method scala/xml/parsing/TokenTests$class.isPubIDChar:(Lscala/xml/parsing/TokenTests;C)Z
   5:	ireturn
  LineNumberTable: 
   line 23: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/Utility$;
   0      6      1    ch       C


public boolean isName(java.lang.String);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#792; //Method scala/xml/parsing/TokenTests$class.isName:(Lscala/xml/parsing/TokenTests;Ljava/lang/String;)Z
   5:	ireturn
  LineNumberTable: 
   line 23: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/Utility$;
   0      6      1    s       Ljava/lang/String;


public boolean isNameStart(char);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	invokestatic	#794; //Method scala/xml/parsing/TokenTests$class.isNameStart:(Lscala/xml/parsing/TokenTests;C)Z
   5:	ireturn
  LineNumberTable: 
   line 23: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/Utility$;
   0      6      1    ch       C


public boolean isNameChar(char);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	invokestatic	#797; //Method scala/xml/parsing/TokenTests$class.isNameChar:(Lscala/xml/parsing/TokenTests;C)Z
   5:	ireturn
  LineNumberTable: 
   line 23: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/Utility$;
   0      6      1    ch       C


public final boolean isSpace(scala.collection.Sequence);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	aload_1
   2:	invokestatic	#800; //Method scala/xml/parsing/TokenTests$class.isSpace:(Lscala/xml/parsing/TokenTests;Lscala/collection/Sequence;)Z
   5:	ireturn
  LineNumberTable: 
   line 23: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/Utility$;
   0      6      1    cs       Lscala/collection/Sequence;


public final boolean isSpace(char);
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	aload_0
   1:	iload_1
   2:	invokestatic	#803; //Method scala/xml/parsing/TokenTests$class.isSpace:(Lscala/xml/parsing/TokenTests;C)Z
   5:	ireturn
  LineNumberTable: 
   line 23: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      6      0    this       Lscala/xml/Utility$;
   0      6      1    ch       C


}

