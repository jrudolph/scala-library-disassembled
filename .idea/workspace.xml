<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager" verified="true">
    <list default="true" readonly="true" id="c4876752-18ab-438c-aefc-f940842cb140" name="Default" comment="">
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/RegexParsers$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/HashMap.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$$anonfun$success$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Iterator$$anon$27.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Reactor$$anonfun$4.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/script/Reset$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/parsing/ConsoleErrorHandler$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/Parsing$$anonfun$checkPubID$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/BytePickle$PicklerEnv.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Console.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/input/PagedSeqReader.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/BitSet$BitSet2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Iterator$$anon$19.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Array$$anonfun$ofDim$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$Parser$$anonfun$$tilde$greater$1$$anonfun$apply$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/Cloneable$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/path/Expression$DescOrSelf$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/BitSetFactory$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/ParameterEntityDecl$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/input/NoPosition.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/include/sax/Main$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$Parser$$anonfun$$less$tilde$1$$anonfun$apply$4.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/text/DocGroup.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceViewTemplate$Patched.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/pilib$Product.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/TreeSet.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/List$$anonfun$transpose$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/PackratParsers$MemoEntry$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/XML.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/HashSet$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Numeric$BigDecimalIsFractional$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/control/Exception$$anonfun$unwrapping$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/ClassDef.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/PagedSeq$$anonfun$toString$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableFactory$$anonfun$fill$4.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/pull/XMLEventReader$Parser$$anonfun$setEvent$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Sequence$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Traversable$PairTraversableOps.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/RichClass$$anonfun$reflectiveCall$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/jolib$Join$$anonfun$tryMatch$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MutableSetTemplate$$anonfun$clear$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Iterator$$anon$21.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$nonzero$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/LinkedHashSet$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MutableSetTemplate$$anonfun$$plus$plus$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/LinearSequence.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Numeric$Ops.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/QNode$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/VectorViewTemplate$$anon$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Ordering$$anon$8.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/PropertiesTrait$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Application$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/ImmutableMapAdaptor$$anonfun$retain$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/Growable$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Map$$anonfun$withDefaultValue$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MutableVectorViewTemplate$Reversed$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/remote/CustomObjectInputStream$$anonfun$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/Xhtml$$anonfun$toXhtml$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/MIXED.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/ParsedEntityDecl$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Manifest$$anon$5.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/NodeSeq$$anonfun$$bslash$bslash$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/scheduler/SimpleExecutorScheduler.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableFactory$$anonfun$tabulate$3$$anonfun$apply$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/BitSet$BitSet1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/parsing/ConstructingParser.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableViewTemplate$TakenWhile.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function21$$anonfun$curry$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/ast/Binders$BoundElement$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/BytePickle$$anon$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$token$7.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/MailBox$Receiver.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/ReplyableReactor.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/BitSetTemplate$$anonfun$$amp$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/pull/EvEntityRef.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$$anonfun$chainr1$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Futures.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/remote/Terminate$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Parser$$anonfun$objEntry$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/JSON$$anonfun$resolveType$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/transform/BasicTransformer$$anonfun$transform$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/Traversable$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/regexp/SyntaxError.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableTemplate$$anonfun$filterNot$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/testing/Show$$anonfun$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/Source$$anonfun$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/LocalMethod.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Traversable$TraversableTraversableOps$$anonfun$flatten$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Iterator$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Ordering$StringOrdering$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function12.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceTemplate$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Actor$$anonfun$5.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Ordered$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$token$2$$anonfun$apply$4.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MapTemplate$$anon$1$$anonfun$iterator$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Array$$anonfun$apply$6.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Invocation$SymbolWithArguments$$anonfun$getArgTypes$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/Utility.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Invocation$PrimitivePreserver.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/throws.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/pull/EvProcInstr.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/path/Expression$Exists$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$token$3$$anonfun$apply$7.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$token$2$$anonfun$apply$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SetTemplate$$anonfun$intersect$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/PriorityQueue$$anonfun$equals$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/pilib$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/path/Expression$Equals.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/Tokens.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/ast/Binders$BoundElement.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/Subtractable$$anonfun$$minus$minus$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Parser$$anonfun$objEntry$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function22$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$token$3$$anonfun$apply$9.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/VectorViewTemplate$$anon$10.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MutableVectorViewTemplate$Reversed.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Actor$$anonfun$9.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/ops$$anonfun$par$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Reactor$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/GenericRange$$anonfun$contains$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/VectorTemplate$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SetTemplate$$anonfun$subsetOf$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/ListSerializeEnd.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/UniquenessCache.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/pull/XMLEventReader.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/TIMEOUT.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Array$$anonfun$fromFunction$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/GenericRange$$anonfun$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/BoxesRunTime.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/JavaConversions$MutableMapWrapper$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/Parsing$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/ManagedBlocker.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/Node$$anonfun$descendant$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/parsing/XhtmlParser$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/SyncChannel.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Tuple3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function10$$anonfun$curry$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/JavaTokenParsers$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/ScalaClassLoader$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceTemplate$$anonfun$indexWhere$1$$anonfun$apply$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableClass$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/ImmutableSortedSetFactory.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/FJTask$Par2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableTemplate$$anonfun$addString$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function22$$anonfun$curry$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/TreeSet$$anonfun$foreach$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function4$$anonfun$curry$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Either$RightProjection.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/LinkedHashMap.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Field$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/PrettyPrinter$$anonfun$doPreserve$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/lexical/Lexical.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/lexical/StdLexical$$anonfun$whitespace$1$$anonfun$apply$16.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/Hashable$$anonfun$hashCode$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/BytePickle$$anonfun$list$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/DefaultMapModel.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/parsing/MarkupHandler.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableTemplate$$anonfun$filterMap$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/testing/SUnit$TestConsoleMain.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/input/StreamReader.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/BitSetTemplate$$anonfun$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Range$Inclusive.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Ordering$$anon$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$fracPart$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Tuple4.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/TreeSet$$anonfun$iterator$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/StaticAnnotation.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/SynchronizedQueue.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/SuspendActorException.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Reactor$$anonfun$seq$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/MapProxy.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/VectorViewTemplate$Patched$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Stack$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Map$EmptyMap.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/Set$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/automata/WordBerrySethi$$anonfun$automatonFrom$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Channel$$anonfun$$bang$qmark$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/Utility$$anonfun$escape$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/parsing/NoBindingFactoryAdapter.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function6$$anonfun$curry$1$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Array$$anonfun$apply$9.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Tuple20$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/NodeSeq$$anonfun$$bslash$bslash$4.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/IterableViewTemplate$Filtered.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableFactory$$anonfun$tabulate$4.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/lexical/StdLexical$$anonfun$comment$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/ObservableSet$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/JavaConversions$MutableBufferWrapper$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/scheduler/DrainableForkJoinPool.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Tuple18.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableTemplate$$anonfun$span$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/JavaConversions$JSetWrapper$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/annotation/experimental.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Range$BigInt$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/Decl.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/SortedSet$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/Sorting$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/FJTask$Seq2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/DefaultDecl.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableViewTemplate$Appended$$anonfun$foreach$4.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Actor$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/Text$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/testing/RegexTest$$anonfun$4.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/mobile/Code$$anonfun$apply$4.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/ast/Binders$ReturnAndDo.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/BoxedIntArray.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Ordering$ByteOrdering$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/logging/Logged$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Traversable$ComparableTraversableOps$$anonfun$min$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Reaction$$anonfun$$init$$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/Xhtml$$anonfun$toXhtml$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceViewTemplate$TakenWhile$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/text/DocNest.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Set$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Numeric$BigDecimalAsIfIntegral$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function$$anonfun$untupled$4.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Array$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/path/Expression$FExp$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/NodeSeq$$anonfun$filt$1$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Futures$$anonfun$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/RichString$$anonfun$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/VectorTemplate$$anonfun$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Traversable$ComparableTraversableOps$$anonfun$max$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/PagedSeq$$anonfun$fromLines$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/VectorTemplate$$anonfun$exists$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/BitSetTemplate.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product22$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/IntMapUtils.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/ImplicitConversions.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$4$$anonfun$apply$9.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/RegexParsers$$anon$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/Iterable.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/Properties.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/ListMap.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/BytePickle$$anonfun$fixedList$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/New.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Stack$$anonfun$pushAll$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/lexical/StdLexical$$anonfun$_delim$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function$$anonfun$curried$4$$anonfun$apply$8.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Super.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/lexical/StdLexical.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/BytePickle$$anonfun$data$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Iterator$$anon$4.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$7.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/PackratParsers$$anonfun$scala$util$parsing$combinator$PackratParsers$$setupLR$2$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Enumeration$ValueSet$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$$tilde.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Range$Partial.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/BytePickle$$anonfun$ulist$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/VectorViewTemplate$Sliced$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/ScalaClassLoader.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/Codec$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Futures$$anon$1$$anonfun$act$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/scheduler/SingleThreadedScheduler$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Literal$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/ImmutableMapAdaptor.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/PackratParsers$$anonfun$scala$util$parsing$combinator$PackratParsers$$setupLR$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/RevertableHistory.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/JavaConversions$JIterableWrapper$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SortedMapFactory.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/jolib$Join.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Ordering$Boolean$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/transform/BasicTransformer.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/ImmutableMapTemplate$$anonfun$filterNot$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/IterableTemplate$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/RedBlack$Tree.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Stack$$anonfun$pushAll$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product15$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Tuple1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function8$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/LinkedListTemplate$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/matching/Regex$MatchIterator.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$charSeq$5$$anonfun$apply$24.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SetBuilder.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/scheduler/ThreadPoolScheduler.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/grammar/ConsRHS$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MapTemplate$DefaultValuesIterable.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/JavaConversions$JEnumerationWrapper$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/ast/Binders$$anon$6$$anonfun$gmap$7$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/lexical/StdLexical$$anonfun$whitespace$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Actor$$anonfun$respondOn$1$$anon$4.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/transform/RewriteRule.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/mobile/Code$$anonfun$apply$6.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/UninitializedError.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/VectorViewTemplate$$anon$9.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Stream$$anonfun$removeDuplicates$1$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/IntRef.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/NoSymbol$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/LongMap$Bin$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/Utility$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/IterableForwarder.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/pull/EvText.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Manifest$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableView.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Either$$anonfun$lefts$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/PartialFunction$$anon$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/ReplyReactor.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$Parser$$anon$4.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Sequence$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$token$3$$anonfun$apply$8.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/VectorViewTemplate$FlatMapped.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceViewTemplate$$anon$6.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/ContentModelParser.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Parser.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/scheduler/TerminationMonitor$$anonfun$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/RedBlack$Empty$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableFactory$$anonfun$tabulate$4$$anonfun$apply$4.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Tuple21.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MutableMapTemplate$$anonfun$$plus$plus$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product15$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/matching/Regex$Match.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableView$NoBuilder.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/Sorted$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/text/Document.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/ElemDecl$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/VectorViewTemplate$TakenWhile$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/path/Expression$GenExp.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/ReplyableActor$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MapTemplate$$anon$1$$anonfun$foreach$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/LongMapValueIterator.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Tuple16.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function7$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Tuple22.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableViewTemplate$Mapped$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/syntax/StdTokens$StringLit.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SortedMapTemplate.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/SortedSet$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/script/Scriptable.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$charSeq$5.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/parsing/MarkupParser$$anonfun$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/RichException$$anonfun$getStackTraceString$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceView.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Either$LeftProjection.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Actor$$anonfun$exitLinked$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Numeric$LongIsIntegral$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function10$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Actor$$anonfun$unlinkFrom$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/NodeSeq$$anonfun$newBuilder$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$$anonfun$mkList$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/automata/SubsetConstruction$$anonfun$determinize$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/Node$$anonfun$noEmpties$1$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Ordering$Double$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/LinkedEntry.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/VectorViewTemplate$FlatMapped$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/MapProxy$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/LongMap$$anonfun$toList$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/SynchronizedBuffer.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/factory/NodeFactory$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableFactory$VirtualBuilderFactory.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/ReplyableActor$$anon$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Integral$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/DFAContentModel.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/PrettyPrinter.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/ListMap$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/PCData$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/automata/SubsetConstruction$$anonfun$determinize$2$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Iterator$$anon$7.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function2$$anonfun$curry$1$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/NodeBuffer$$anonfun$$amp$plus$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SortedSetFactory$SortedSetBuilderFactory.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/VectorViewTemplate$$anon$5.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/ListQueueCreator.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/regexp/Base$Alt$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/include/UnavailableResourceException.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableTemplate$$anonfun$find$1$$anonfun$apply$4.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Range.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/GenericRange$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/Nothing$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Stream$StreamBuilder.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/RichString$$anonfun$lines$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/parsing/MarkupParser$$anonfun$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/control/Exception$Catch$$anonfun$either$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SortedMapTemplate$DefaultKeySortedSet.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Stream$$anonfun$loop$5$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MutableVectorViewTemplate$TakenWhile.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/jolib$Join$$anonfun$values$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Predef$Pair$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/syntactical/StdTokenParsers$$anonfun$keyword$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MutableVectorView.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/Comment.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/HashTable$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/XML$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/text/DocCons.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SetTemplate$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/scheduler/DaemonScheduler$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Ordering$BigDecimal$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Ordering$BigIntOrdering$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/Source$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/BigDecimal$RoundingMode$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/lexical/Lexical$$anonfun$chrExcept$1$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/automata/NondetWordAutom$$anonfun$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/History$$anonfun$events$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$Parser$$anonfun$$tilde$bang$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/ReplyableReactor$$anon$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/PrefixedType.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function5$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Template$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Iterator$$anon$13.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/ast/Mappable$$anon$1$$anonfun$gmap$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/remote/Apply0.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/parsing/ExternalSources.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/Random$$anonfun$shuffle$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/BufferTemplate.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Responder$$anonfun$loopWhile$1$$anonfun$apply$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MapTemplate$DefaultValuesIterable$$anonfun$iterator$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MapTemplate$$anon$2$$anonfun$foreach$4.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/text/Document$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/KillActorException.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/ast/Binders$$anon$6.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Symbol.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/RichString$$anon$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/regexp/Base$Alt$$anonfun$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/transient.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function18$$anonfun$curry$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/jolib$Join$$anonfun$tryMatch$3$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/net/Utility.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/HasKeyValue.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Replyable$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MutableVectorViewTemplate$TakenWhile$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/ImmutableMapTemplate$$anonfun$transform$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MapProxyTemplate.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/control/Exception$$anon$5.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/GenericRange$Inclusive.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$$anonfun$positioned$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Predef$ArrowAssoc.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$Parser$$anonfun$$times$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/Addable$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$$anonfun$opt$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/PolyMethodCache.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/ReplyableReactor$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/BytePickle$UnPicklerEnv.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/testing/SUnit$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Iterator$$anon$23.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/forkjoin/ForkJoinWorkerThread$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/ValidationException$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Math.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function21$$anonfun$curry$1$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Manifest$$anon$6.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/IntMapEntryIterator.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product14$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/Elem$$anonfun$text$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$scala$util$parsing$json$Lexer$$unicodeBlock$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Stream$$anonfun$loop$10$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Ordering$UnitOrdering$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/BoxedDoubleArray.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/HashEntry$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Fractional$FractionalOps.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function4$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/input/StreamReader$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/Utility$$anonfun$collectNamespaces$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/automata/NondetWordAutom$$anonfun$isEmpty$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableFactory$$anonfun$fill$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/ResizableArray$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function6$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MapTemplate$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Print$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableTemplate$$anonfun$dropWhile$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Right$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/factory/XMLLoader.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceViewTemplate$Transformed.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/input/OffsetPosition$$anonfun$index$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/testing/SUnit$TestConsoleMain$$anonfun$main$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/forkjoin/ForkJoinPool$AdaptedRunnable.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Assign$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Ordering$$anon$6.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/IterableViewTemplate$$anon$4.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/NameTransformer$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Traversable$PairTraversableOps$$anonfun$unzip$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function12$$anonfun$curry$1$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Block$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/testing/Show$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/Channel.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Ordering$BooleanOrdering.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/lexical/StdLexical$$anonfun$_delim$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/ListMap$Node.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/regexp/WordExp$Letter$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Parser$$anonfun$stringVal$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/BytePickle$PicklerState.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/Iterable$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Invocation$SymbolWithArguments$$anonfun$argsMatch$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Map.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/ref/Reference$$anonfun$toString$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/path/Expression$Attrib.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/ContentModel$$anonfun$buildString$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/BytePickle$SPU.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/ListMap$$anonfun$get$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/forkjoin/RecursiveAction.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/IntMapKeyIterator.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableTemplate$$anonfun$takeWhile$1$$anonfun$apply$9.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/SetProxy$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Ordering$$anon$5.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Range$Int$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/control/Exception$Catch$$anon$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/PagedSeq.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$$anonfun$log$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/jolib$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/Builder$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Some$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableViewTemplate$DroppedWhile$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/PrettyPrinter$$anonfun$format$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Parser$$anonfun$value$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/forkjoin/ThreadLocalRandom.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product1$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$4$$anonfun$apply$8.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/BytePickle$$anon$7.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MutableSetTemplate.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/NodeSeq$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/PrettyPrinter$Item.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/IterableViewTemplate$Transformed.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Tuple5$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/BufferedSource$$anon$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Parser$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceViewTemplate$Mapped$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/IterableView$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$OnceParser$$anonfun$$tilde$2$$anonfun$apply$12.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceViewTemplate$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/PackratParsers$$anonfun$scala$util$parsing$combinator$PackratParsers$$setupLR$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/ImmutableMapTemplate$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Stream$$anonfun$const$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/ElementValidator.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/IterableViewTemplate$Filtered$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/BitSetFactory$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/ScalaObject.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Stream$StreamBuilderFactory.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/automata/NondetWordAutom$$anonfun$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function14$$anonfun$curry$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/OpenHashMap$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/Hashable.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/scheduler/SchedulerService.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Map$Map3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Map$$anonfun$hashCode$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Integral.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableViewTemplate$Mapped$$anonfun$foreach$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/SynchronizedStack.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/parsing/MarkupParser$$anonfun$xCharRef$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/BytePickle$$anonfun$bytearray$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/Elem.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Actor$$anonfun$receive$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableViewTemplate$FlatMapped$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$Parser$$anonfun$$tilde$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/text/DocCons$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/BufferTemplate$$anonfun$$plus$plus$colon$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Tuple15.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/Utility$$anonfun$appendQuoted$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/MalformedAttributeException.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MapTemplate$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product2$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Predef$Ensuring.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/pull/XMLEventReader$Parser$$anonfun$run$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$$anonfun$acceptMatch$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/BigDecimal$$anonfun$to$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/pilib$Sum.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Tuple2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableViewTemplate$Transformed.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Tuple7$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/PackratParsers.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/Text.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$token$6.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/ByteRef.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableTemplate$$anonfun$slice$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/Utils$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SetClass.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/Hashable$$anonfun$hashCode$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/RichClass$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/scheduler/ThreadPoolScheduler$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Ordering$CharOrdering.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/ArrayBuffer.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/ops$$anonfun$replicate$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Reactor$$anonfun$2$$anonfun$apply$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/Hashable$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Fractional.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$number$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/pilib$Sum$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product22.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/LinkedHashMap$$anon$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Iterator$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/SortedSet.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Either$$anonfun$separate$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/lexical/StdLexical$$anonfun$whitespace$1$$anonfun$apply$23$$anonfun$apply$25.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/TextBuffer$$anonfun$append$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/Attribute.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/factory/NodeFactory.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/DTD.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$Parser$$anonfun$$tilde$bang$1$$anonfun$apply$5.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableTemplate$$anonfun$map$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/BytePickle$$anon$9.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/Utility$$anonfun$getName$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/Subtractable$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/PackratParsers$$anonfun$parser2packrat$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function21$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/lexical/StdLexical$$anonfun$whitespace$1$$anonfun$apply$19$$anonfun$apply$21$$anonfun$apply$22.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/pilib$UGP$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$Success.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/Marshal.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/VectorViewTemplate$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MutableVectorTemplate$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Array$$anonfun$apply$8.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/path/Expression$FExp$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/LongMapIterator.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/RichString$$anon$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/syntactical/StdTokenParsers.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/IntMapUtils$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/LightReaction$$anonfun$$init$$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product11$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/deprecated.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/SyncVar.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Class$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Predef$Ensuring$$anonfun$ensuring$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/ReplyableReactor$$anon$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/parsing/MarkupParser$$anon$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/Hashable$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Numeric$LongIsIntegral.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Ordering$$anon$12.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/MetaData.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceTemplate$$anonfun$lastIndexOf$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/input/OffsetPosition.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function4.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/input/Positional$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/lexical/Scanners.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/NamedType.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/grammar/ConsRHS.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/MapProxy.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Invocation$ReflectionOperators.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceViewTemplate$Reversed$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product6.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/lexical/StdLexical$$anonfun$whitespace$1$$anonfun$apply$23.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableViewTemplate$$anon$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/ast/Binders$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Stream$$anonfun$loop$9$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/StreamCons.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceViewTemplate$$anon$7.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/parsing/MarkupParser$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/ast/Binders$$anonfun$sequence$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/IntMap$Tip$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/AddingBuilder.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/ReplyableActor$$anon$2$$anonfun$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableViewTemplate$TakenWhile$$anonfun$foreach$7.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/PrettyPrinter$Para$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/include/sax/EncodingHeuristics.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SortedMapTemplate$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceTemplate$$anonfun$diff$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/DefaultMap$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$intPart$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/ProcInstr$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/PagedSeq$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceTemplate$$anonfun$occCounts$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/NamespaceBinding$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/path/Expression$FExp.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$$anonfun$accept$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Array$$anonfun$ofDim$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Stream$$anonfun$from$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/IntMap$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/Companion.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/ast/Binders$$anon$4$$anonfun$gmap$4.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/VectorViewTemplate.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/jolib.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/JavaConversions$MutableSetWrapper$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Enumeration$Value.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/LinearSequence.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/testing/SUnit$TestFailure.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Actor$$anonfun$$qmark$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/control/Exception$$anonfun$failing$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/FlatHashTable$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/IntMap$$anonfun$toList$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/library.properties" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Ordered.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/syntactical/StdTokenParsers$$anonfun$stringLit$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product11$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Responder$$anonfun$loop$1$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceTemplate$$anon$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/SortedMap$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/Map.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Actor$$anonfun$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function4$$anonfun$curry$1$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/remote/Service.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/ops$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/JSON.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/GenericRange$$anonfun$contains$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Map$Map2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product17$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/parsing/ConsoleErrorHandler.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/pull/ProducerConsumerIterator$$anonfun$fillBuffer$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/PrefixedType$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Actor$$anonfun$receiveWithin$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/mobile/Code$$anonfun$apply$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$$anonfun$rep1sep$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/ReplyableActor$$anon$2$$anonfun$respond$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SetTemplate.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/syntactical/StandardTokenParsers.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/Traversable$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MutableVectorView$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Iterator$$anonfun$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/ScalaClassLoader$$anonfun$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/script/Message.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/$colon$colon$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/JavaConversions$MutableMapWrapper.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/RichDouble$$anonfun$until$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/BitSet$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$charSeq$6.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/script/Remove.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/BitSet.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/factory/NodeFactory$$anonfun$makeNode$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Responder$$anon$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/BytePickle$$anonfun$upair$2$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/BitSet.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/testing/SUnit$Test.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$NoSuccess.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SetFactory$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/testing/Number.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/CloneableCollection.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/VectorViewTemplate$TakenWhile.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/ast/Binders$$anon$11.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/pilib$$anonfun$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Iterator$$anon$17.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Manifest$$anon$3$$anonfun$$less$colon$less$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceTemplate$$anonfun$contains$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/RedBlack$BlackTree.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Iterator$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/lexical/StdLexical$$anonfun$whitespace$1$$anonfun$apply$23$$anonfun$apply$24.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$token$8.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/ast/Binders$$anon$5$$anonfun$gmap$5.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/RangeToString.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/ast/Binders$UnderBinder.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableTemplate$$anonfun$filter$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function9.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/SetProxy$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/List$$anonfun$toStream$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$$anonfun$repsep$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Invocation$SymbolWithArguments$$anonfun$getDeclaredMethodsOn$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/Xhtml$$anonfun$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/FlatHashTable$$anonfun$newThreshold$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Futures$$anonfun$4$$anonfun$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/input/StreamReader$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/PackratParsers$PackratParser.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableViewTemplate$Filtered.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/syntactical/TokenParsers.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$number$2$$anonfun$apply$16.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/automata/Inclusion$$anonfun$inclusion$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Tuple15$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/testing/RegexTest$$anonfun$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/HashSet$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MutableSetTemplate$$anonfun$retain$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/JavaConversions$JIteratorWrapper$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/forkjoin/ForkJoinPool$ManagedBlocker.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/RichBoolean.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/PagedSeq$$anonfun$fromReader$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/PrettyPrinter$$anonfun$endTag$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/text/DocNil.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function13$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/scheduler/TerminationMonitor$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/factory/Binder.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableViewTemplate$Mapped.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableViewTemplate$FlatMapped.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Array$$anonfun$apply$5.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/OpenHashMap$$anonfun$foreachUndeletedEntry$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/scheduler/QuitException.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceForwarder$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Actor$$anonfun$link$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function$$anonfun$curried$3$$anonfun$apply$5$$anonfun$apply$6$$anonfun$apply$7.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$Parser$$anonfun$flatMap$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/testing/Show$SymApply.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/IterableViewTemplate$DroppedWhile$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/pull/EvElemEnd.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/ast/AbstractSyntax$NameElement$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/File$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/jolib$Join$$anonfun$tryMatch$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product9$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/testing/Str$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/ast/Binders$UnderBinder$$anon$9.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Vector$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/BufferTemplate$$anonfun$$less$less$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/BigDecimal$RoundingMode$$anonfun$$init$$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/testing/RegexTest$$anonfun$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Unhashable.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Ordering$Char$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/factory/Binder$$anonfun$traverse$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Traversable$NumericTraversableOps.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Parser$$anonfun$jsonArray$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Tuple6$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/input/NoPosition$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/script/Index$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/BitSet$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/script/Script.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Nil.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Iterator$PartitionIterator$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/remote/TcpService$$anonfun$run$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$string$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/parsing/ExternalSources$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$scala$util$parsing$json$Lexer$$unicodeBlock$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/ast/Binders$$anon$6$$anonfun$gmap$6.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/LongMap$Bin.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function4$$anonfun$curry$1$$anonfun$apply$1$$anonfun$apply$2$$anonfun$apply$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product6$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/transform/BasicTransformer$$anonfun$transform$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Reactor$$anonfun$seq$1$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Array$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Futures$$anonfun$4.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/List$$anonfun$separate$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function1$$anonfun$andThen$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$Success$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/NodeSeq$$anonfun$text$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/Utility$$anonfun$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/EntityRef.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MutableVectorViewTemplate$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MapFactory.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Actor$$anonfun$reactWithin$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/lexical/StdLexical$$anonfun$parseDelim$1$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/File$$anonfun$iterator$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/$bang$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product7$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/ast/AbstractSyntax.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Method$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/Addable$$anonfun$$plus$plus$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product4.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/remote/TcpService.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function8.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/PrettyPrinter$Break$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$5$$anonfun$apply$10$$anonfun$apply$11.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/control/Exception$Described.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/PartialFunction$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$hexDigit$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/syntax/Tokens.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/ReactorTask.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceViewTemplate$$anon$8.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Enumeration$ValueSet.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Stream$StreamBuilder$$anonfun$result$1$$anonfun$apply$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/NamespaceBinding$$anonfun$buildString$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/Sorting$$anonfun$stableSort$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$expPart$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/BoxedArray.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/pilib$UChan.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/remote/NetKernel$$anonfun$terminate$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/syntax/Tokens$EOF$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/OpenHashMap$$anonfun$growTable$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/OpenHashMap$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$5$$anonfun$apply$10.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/BytePickle$$anonfun$bool$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/DelayedLazyVal$$anonfun$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/HashEntry.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/remote/DelegateActor$$anonfun$act$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Futures$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/forkjoin/LinkedTransferQueue$PaddedAtomicReference.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/Shrinkable.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/BoxedShortArray.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableTemplate$$anonfun$exists$1$$anonfun$apply$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function11$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/input/Position.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Ordering$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/JavaConversions$MutableSetWrapper$$anon$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/ref/ReferenceWrapper.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/noinline.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/remote/Locator.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceTemplate$$anonfun$indexWhere$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/scheduler/DefaultExecutorScheduler.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/path/Expression$Exists.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/MailBox$PreReceiver.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$token$2$$anonfun$apply$5.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Invocation.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/grammar/LabelledRHS.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Numeric$FloatIsFractional.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/LongRef.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Reactor$$anonfun$start$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$charSeq$2$$anonfun$apply$21.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Iterator$$anon$25.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/testing/SUnit$AssertFailed.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/remote/TcpService$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Goto$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MapTemplate$DefaultKeySet$$anonfun$iterator$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/Vector.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/Sequence.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Responder$$anonfun$run$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Console$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MutableVectorViewTemplate$Sliced$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Array$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/MapProxy$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/control/TailRec$Call.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Exit$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/automata/NondetWordAutom$$anonfun$next$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Ordering$String$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/testing/SUnit$TestCase.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Either.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Set$EmptySet.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableTemplate$$anonfun$foldLeft$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/AppliedType.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/PagedSeq$$anonfun$fromIterator$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Range$Double$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableTemplate$$anonfun$size$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Futures$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/ActorProxy.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/OpenHashMap$$anonfun$clone$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/DefDef.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/XML$$anonfun$save$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/NodeSeq$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Actor$$anonfun$10.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/Utility$$anonfun$5.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/ReplyableReactor$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$Parser$$anonfun$$plus$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/QNode.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$expPart$2$$anonfun$apply$20.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/parsing/PCDataMarkupParser$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/Sorting.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableViewTemplate$Appended$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/ReplyReactor$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function1$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Iterator.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/control/Exception$Catch$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Traversable$TraversableTraversableOps$$anonfun$transpose$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Channel$$anonfun$reactWithin$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/LongMap$$anonfun$unionWith$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/ObservableBuffer.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/grammar/AnyHedgeRHS$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/IntMap$$anonfun$unionWith$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/ContentModelParser$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/control/Exception$$anonfun$handling$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Tuple21$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Array$$anonfun$fromFunction$4.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/NotationDecl$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Iterator$$anon$6.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Tuple11$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/ref/SoftReference.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Stack.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/BufferedSource$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/Queue.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/Publisher$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Actor$$anonfun$12.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Option$NullableOption.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/PublicID$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/remote/Locator$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/Vector$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/AbstractReactor.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Option.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Set$Set4.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/BitSetTemplate$$anonfun$$amp$tilde$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Immutable.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/transform/RuleTransformer.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/IntDef$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Stream$$anonfun$partition$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/remote/Proxy.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Futures$$anon$2$$anonfun$respond$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$Failure$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$$anonfun$rep1sep$1$$anonfun$apply$7.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function11.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/BytePickle$$anonfun$pair$2$$anonfun$apply$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/matching/Regex$MatchData$$anonfun$subgroups$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/BytePickle$$anon$6.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Ordering$IntOrdering$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MutableSetTemplate$$anonfun$$less$less$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/PartialFunction.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/PrettyPrinter$Box$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/BufferedIterator.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/input/CharArrayReader.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/parsing/XhtmlEntities$$anonfun$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/syntax/Tokens$ErrorToken.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$fracPart$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/testing/SUnit$AssertFailed$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/forkjoin/ForkJoinTask.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$$anonfun$commit$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableViewTemplate$Sliced.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Manifest$$anon$4.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/ImmutableSetAdaptor.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/remote/ExitFun.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/SingleType.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Array$$anonfun$concat$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$1$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/FlatHashTable$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/IterableViewTemplate$Sliced$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SetClass$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MutableMapFactory.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Ordering$BigDecimalOrdering$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$token$2$$anonfun$apply$6.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Manifest$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Parser$$anonfun$jsonObj$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product14$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/BytePickle$Def.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Range$BigDecimal$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/IntMapValueIterator.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Futures$$anon$2$$anonfun$apply$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/VectorTemplate.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/Map$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Enumeration$$anonfun$values$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/OptManifest.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Futures$$anon$3$$anonfun$5.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/syntax/StdTokens$Identifier$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/TypeBounds.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/pilib$Spawn.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/ContentModel$$anonfun$buildString$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/parsing/MarkupParser$$anonfun$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/remote/SendTo.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Array$$anonfun$fromFunction$4$$anonfun$apply$14.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/testing/SUnit$TestSuite.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/pilib$Chan$$anonfun$input$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableTemplate$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Function.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/LocalValue.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/BoxedObjectArray.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/RichString$$anonfun$newBuilder$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$Parser$$anonfun$$up$qmark$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/testing/SUnit$TestSuite$$anonfun$run$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/Source$$anon$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Traversable$ComparableTraversableOps$$anonfun$min$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableTemplate$$anonfun$drop$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/ImplicitConversions$$anonfun$flatten2$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function20.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/ContentModel$ElemName$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/forkjoin/LinkedTransferQueue$QNode.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/ProcInstr.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/RichClass$ReflectiveCall.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/LinkedListQueueCreator.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/SynchronizedSet.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/scheduler/SingleThreadedScheduler.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Array$$anonfun$apply$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/Growable.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/ReplyableActor.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Iterable$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function18$$anonfun$curry$1$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/$bang.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/pull/ProducerConsumerIterator$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/Utility$$anonfun$trim$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceViewTemplate$Appended.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/ActorGC$$anonfun$terminated$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/regexp/Base$Meta.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Either$$anonfun$joinRight$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/remote/DelegateActor.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$expPart$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/ScalaBeanInfo$$anonfun$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/IterableViewTemplate$$anon$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceViewTemplate$Filtered$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/JavaConversions$IteratorWrapper.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/DaemonActor$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Numeric$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$charSeq$4.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$fracPart$1$$anonfun$apply$18.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/native.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/BigDecimal$$anonfun$until$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/DoubleLinkedListTemplate$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableTemplate$$anonfun$head$1$$anonfun$apply$5$$anonfun$apply$6.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceTemplate$$anonfun$lastIndexOf$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/NamedType$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/Sorting$$anonfun$stableSort$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function$$anonfun$curried$4$$anonfun$apply$8$$anonfun$apply$9$$anonfun$apply$10$$anonfun$apply$11.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/remote/NetKernel.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Actor$$anonfun$receive$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/text/DocText.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Actor$$anonfun$unlink$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/ELEMENTS.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Parser$$anonfun$jsonArray$1$$anonfun$apply$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceViewTemplate$Patched$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Ordering$BooleanOrdering$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/parsing/ConstructingParser$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/ast/Mappable$Mappable$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/IntMap$Bin$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Tuple13$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/ThisType.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/ActorGC$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/remote/LinkToFun.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/forkjoin/ForkJoinPool$AdaptedCallable.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function$$anonfun$uncurried$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/FJTaskRunner.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/MutableList.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Invocation$PreservedAnyRef.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$8$$anonfun$apply$15.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function18.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableTemplate$$anonfun$reduceLeft$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/ast/Binders$UnderBinder$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/List$$anonfun$transpose$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceTemplate$$anonfun$indexOf$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/factory/NodeFactory$$anonfun$eqElements$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/ObservableMap$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableClass.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function$$anonfun$tupled$4.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function$$anonfun$untupled$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$charSeq$3$$anonfun$apply$22.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product20.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Tuple9.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$$anonfun$chainl1$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/ref/WeakReference.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/PropertiesTrait$$anonfun$props$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Predef$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/This.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/TypeField.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/PrettyPrinter$BrokenException.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/ExtDef.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/ContentModel$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Predef$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/DaemonActor.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/automata/SubsetConstruction.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/IntMap$Bin.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MutableSetTemplate$$anonfun$$minus$minus$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/PCDATA.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/RedBlack$NonEmpty.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product12$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Select.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Stack$Node.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceViewTemplate$TakenWhile.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/ClassDef$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/Stack$$anonfun$pushAll$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/IterableViewTemplate$Sliced.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/LazyBuilder.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceProxyTemplate$$anonfun$lastIndexOf$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/package$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Map$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function7.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/pilib$Chan.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableViewTemplate$TakenWhile$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/NodeBuffer.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/EntityDef.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/IterableTemplate$$anonfun$takeRight$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/Comment$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/JavaConversions$IteratorWrapper$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/ast/Binders$$anonfun$unsequence$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/LinearSequenceTemplate$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/Channel$LinkedList.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/ObservableMap.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/IMPLIED$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Array$$anonfun$newBuilder$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/File.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/DocType$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/JavaTokenParsers.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/ops$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/UnparsedEntityDecl.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function5.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MutableVectorTemplate$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Parser$$anonfun$root$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/PagedSeq$$anonfun$fromStrings$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/RichClass$$anonfun$getDeclaredConstructorsTyped$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/pilib$UGP.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/BytePickle$$anon$4.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/automata/NondetWordAutom.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Iterator$IteratorIteratorOps$$anon$12.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Numeric$IntIsIntegral.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Ordering$Ops.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Ordering$UnitOrdering.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/OpenHashMap$$anonfun$retain$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/ReplyableActor$$anon$2$$anonfun$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/Shrinkable$$anonfun$$minus$minus$eq$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function$$anonfun$curried$1$$anonfun$apply$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$$anonfun$err$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/PackratParsers$LR.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/pilib$Chan$$anonfun$write$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/BitSet$BitSetN.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/History.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Reaction.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/Sorting$$anonfun$main$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$5.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/BoxedLongArray.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/regexp/PointedHedgeExp$Point$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/matching/Regex$Match$$anonfun$starts$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/Codec.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Actor$$anonfun$receiveWithin$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function19$$anonfun$curry$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/MegaMethodCache.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/TypeApply$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Iterator$$anon$16.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/Stack.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Symbol.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product12.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/serializable.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/None.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/path/Expression$Expr.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/ast/AbstractSyntax$Element.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$token$1$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Ident.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/ListBuffer$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/ListBuffer.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Iterable$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/forkjoin/ForkJoinPool$InvokeAll.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/FJTaskRunnerGroup$InvokableFJTask.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/text/DocBreak$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/matching/Regex.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Iterator$$anon$26.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/LinkedHashMap$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/scheduler/TerminationService.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$token$1$$anonfun$apply$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Futures$$anon$3$$anonfun$isDefinedAt$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/include/CircularIncludeException.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$Parser$$anonfun$$tilde$greater$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$token$7$$anonfun$apply$10.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/lexical/StdLexical$$anonfun$comment$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/DefaultMapModel$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/LinkedList.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/factory/LoggedNodeFactory.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Traversable$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MutableMapTemplate$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/Marshal$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/syntactical/StdTokenParsers$$anonfun$ident$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/StrictHashable.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/ReplyableActor$$anonfun$$bang$qmark$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Traversable.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Ordering$$anon$7.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Ordering$$anon$11.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/MessageQueue.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/Sorting$$anonfun$stableSort$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/NonLocalReturnException.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Invocation$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MapTemplate$DefaultKeySet.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/JavaConversions$JListWrapper$$anonfun$insertAll$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Actor$$anonfun$loopWhile$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product18$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/parsing/MarkupParser.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MutableVectorViewTemplate$DroppedWhile$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/testing/RegexTest$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/Source$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/parsing/PCDataMarkupParser.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableFactory$$anonfun$tabulate$2$$anonfun$apply$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/ref/ReferenceQueue.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/scheduler/TerminationService$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/LocalMethod$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/ast/Binders$$anon$5.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Print.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/testing/SUnit.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/ContentModel$ElemName.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/regexp/Base$Alt.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Math$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/pull/EvText$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/BytePickle$$anonfun$ufixedList$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/forkjoin/LinkedTransferQueue$Itr.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Numeric$BigIntIsIntegral$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/remote/RemoteActor$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/ObservableMap$$anon$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Set$$anonfun$hashCode$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Array$$anonfun$apply$7.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/syntax/StdTokens$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$token$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MapTemplate$DefaultKeySet$$anonfun$foreach$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/BytePickle$$anonfun$pair$2$$anonfun$apply$4.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Iterator$Partner$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/SchedulerAdapter$$anonfun$execute$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/BufferedSource.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product20$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function17.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/BytePickle$$anon$5.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Numeric$DoubleIsFractional$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableTemplate$$anonfun$groupBy$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Set$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/ActorTask.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/mobile/Code$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$charSeq$8$$anonfun$apply$27.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/regexp/PointedHedgeExp$TopIter$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/scheduler/ForkJoinScheduler$$anonfun$allWorkersBlocked$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/lexical/StdLexical$$anonfun$identChar$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/BuilderFactory.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/PEReference$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/forkjoin/LinkedTransferQueue$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Invocation$SymbolWithArguments$$anonfun$getArgs$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function$$anonfun$curried$2$$anonfun$apply$3$$anonfun$apply$4.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/AppliedType$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/FlatHashTable$$anonfun$checkConsistent$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/Parsing$$anonfun$isSpace$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/PrettyPrinter$$anonfun$startTag$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/BoxedBooleanArray.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/LinearSequence$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/VectorViewTemplate$Appended$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$$anonfun$rep1sep$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/BitSetFactory$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Parser$$anonfun$jsonObj$1$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/automata/NondetWordAutom$$anonfun$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/OpenHashMap$Entry.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Enumeration$ValueSet$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/MessageQueueElement.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function15$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function15$$anonfun$curry$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Reactor$$anonfun$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Stream$$anonfun$continually$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/grammar/HedgeRHS.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/AttrDecl.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Actor$$anonfun$8.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product7.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/matching/Regex$MatchData.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/automata/WordBerrySethi.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Ordering$DoubleOrdering$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/ImplicitConversions$$anonfun$flatten5$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Left$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/NameTransformer.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/ValDef.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/HashMap$$anonfun$iterator$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/IterableView.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableClass$$anonfun$transpose$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/JavaConversions$MutableSetWrapper.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceViewTemplate$$anonfun$padTo$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/JavaConversions.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceViewTemplate$$anon$4.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Actor$$anonfun$link$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Tuple19$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Stream.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/compat/Platform$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Actor$Body.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Predef.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function$$anonfun$uncurried$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Array$$anonfun$apply$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/ActorGC.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/include/sax/Main.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Ordering$$anon$10.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Enumeration$ValueSet$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/LongMap$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/regexp/WordExp$Label.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/pilib$$anonfun$matches$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/LinkedListTemplate.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/automata/NondetWordAutom$$anonfun$next$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/path/Expression$Expr$$anon$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Predef$$anon$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/syntax/Tokens$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/PackratParsers$$anon$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/FJTaskScheduler2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableTemplate$$anonfun$foldRight$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/parsing/TokenTests$$anonfun$isSpace$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/remote/Service$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MapTemplate$$anon$2$$anonfun$iterator$4.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/BitSetTemplate$$anonfun$$bar$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/Utility$$anonfun$collectNamespaces$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/input/Positional.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/syntax/StdTokens$NumericLit.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Manifest.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/PrettyPrinter$$anonfun$doPreserve$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/ScalaRunTime$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/RichClass$ReflectiveCall$$anonfun$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/ImplicitConversions$$anonfun$flatten3$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableFactory$$anonfun$fill$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/ast/Binders.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/path/Expression$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product10.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/remote/FreshNameCreator.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Numeric$FloatIsFractional$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/ImmutableSortedMapFactory.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/MailBox.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/PEReference.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableTemplate$$anonfun$take$1$$anonfun$apply$7.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/IterableForwarder$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Ordering$Long$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function7$$anonfun$curry$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Block.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/control/Exception.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/QueueModule.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Actor$$anonfun$react$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/input/CharSequenceReader$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableViewTemplate$Sliced$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Futures$$anonfun$awaitEither$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$3$$anonfun$apply$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Actor$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product8$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/forkjoin/ForkJoinPool$WaitQueueNode.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MutableVectorViewTemplate$Filtered$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/parsing/FatalError.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/ScalaClassLoader$$anonfun$run$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/Properties$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceViewTemplate$Filtered.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Ordering$BigIntOrdering.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/testing/Number$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Stream$StreamBuilder$$anonfun$result$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/Source$$anonfun$fromFile$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/BoxedArray$$anonfun$genericBuilder$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/IntMap$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/lexical/StdLexical$$anonfun$whitespace$1$$anonfun$apply$19$$anonfun$apply$20.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/VectorViewTemplate$DroppedWhile.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/LinkedListTemplate$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function19$$anonfun$curry$1$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/forkjoin/TransferQueue.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/mobile/Location$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceTemplate$$anonfun$reverse$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/Utility$$anonfun$escape$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Tuple5.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/Shrinkable$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/ReplyableActor$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/ListSet$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Futures$$anon$3$$anonfun$6.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function9$$anonfun$curry$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/ast/Binders$EmptyBinderEnv$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/regexp/Base$Sequ$$anonfun$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function6$$anonfun$curry$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Application.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableTemplate$$anonfun$forall$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/EntityRef$$anonfun$text$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableForwarder$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Set.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceViewTemplate$$anon$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MapTemplate$$anonfun$equals$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/ObservableMap$$anon$4.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/URLClassLoader.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Iterator$$anonfun$toStream$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/PrettyPrinter$$anonfun$leafTag$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/TopScope$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/script/Reset.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/automata/WordBerrySethi$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$intList$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/ast/Mappable$Mapper.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/LongMapEntryIterator.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/remote/TcpService$$anonfun$run$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$4$$anonfun$apply$6.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/ScalaRunTime$Try.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/BigDecimal.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/regexp/PointedHedgeExp.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Futures$$anonfun$future$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Equiv.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/BeanInfoSkip.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/IntMap$Tip.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/Buffer$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableViewTemplate$Sliced$$anonfun$foreach$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Array$$anonfun$apply$10.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Stream$$anonfun$loop$7$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/forkjoin/RunnableFuture.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/ReplyableReactor$$anon$1$$anonfun$respond$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product12$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$number$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MutableVectorViewTemplate$Transformed.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$Parser$$anonfun$$tilde$1$$anonfun$apply$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/control/ControlException.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceViewTemplate$Filtered$$anonfun$index$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Scheduler.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function16.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/PrefixedAttribute.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/remote/RemoteActor$$anonfun$createKernelOnPort$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Parser$$anonfun$value$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/GenericRange$Exclusive.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Map.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/Xhtml.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Iterator$$anon$28.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product4$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/parsing/ExternalSources$MyClass$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$NoSuccess$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Channel$$anonfun$react$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/TypeConstraint.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/EmptyMethodCache.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Actor$$anonfun$11.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/control/TailRec$Call$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Traversable$TraversableTraversableOps$$anonfun$transpose$1$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/UnprefixedAttribute.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/forkjoin/ForkJoinPool$ForkJoinWorkerThreadFactory.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product17.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Stream$$anonfun$loop$4$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/ref/Reference$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Responder$$anon$4.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/ImplicitConversions$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/BytePickle$$anon$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableClass$$anonfun$transpose$1$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product6$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/control/Exception$$anonfun$ignoring$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/ElementValidator$$anonfun$getIterator$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Parser$$anonfun$jsonArray$1$$anonfun$apply$4.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/scheduler/DelegatingScheduler.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/BytePickle.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Vector$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$charSeq$7$$anonfun$apply$26.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/JavaConversions$JIterableWrapper.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Ordering$ShortOrdering$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/regexp/Base$Star.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceViewTemplate$FlatMapped$$anonfun$index$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function$$anonfun$curried$2$$anonfun$apply$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/BytePickle$Ref$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/DelayedLazyVal.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function11$$anonfun$curry$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$token$9.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Iterable$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/NoType.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Literal.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableTemplate$$anonfun$take$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/LinearSequence$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/include/sax/XIncludeFilter.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/Attribute$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Iterator$$anon$24.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/LinkedQueue.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Function$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/pull/EvProcInstr$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/control/Exception$$anonfun$scala$util$control$Exception$$wouldMatch$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/lexical/StdLexical$$anonfun$comment$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/regexp/Base$Eps$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/Lock.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/scheduler/TerminationMonitor.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceTemplate$$anon$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/BufferTemplate$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/TextBuffer$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MapFactory$MapBuilderFactory.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/syntactical/StdTokenParsers$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$Parser$$anonfun$append$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$8.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/mobile/Code$$anonfun$apply$5.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceViewTemplate$$anon$9.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/HashMap.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SortedSetTemplate.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/LabelSymbol.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MutableVectorViewTemplate$DroppedWhile.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$string$1$$anonfun$apply$13$$anonfun$apply$14.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/Utility$$anonfun$4.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function18$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/JavaConversions$JMapWrapper$$anon$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MutableMapTemplate$$anonfun$clear$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/Sorted.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/parsing/FactoryAdapter$$anonfun$processingInstruction$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$exponent$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/Source.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Enumeration$$anonfun$valueOf$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/NodeSeq.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/ElementValidator$$anonfun$getIterator$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/Map$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/ScalaBeanInfo$$anonfun$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$charSeq$9.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/NotDefinedError.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/Random$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/lexical/StdLexical$$anonfun$whitespace$1$$anonfun$apply$19.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/LocalValue$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/script/End.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableProxyTemplate$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/DynamicVariable$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/JavaConversions$IterableWrapper.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/BytePickle$$anonfun$triple$2$$anonfun$apply$6$$anonfun$apply$8.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MutableMapTemplate$$anonfun$transform$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/scheduler/SchedulerService$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/ImplicitConversions$$anonfun$headOptionTailToFunList$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/ast/Mappable$$anon$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Vector$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/ast/Mappable$Mappable$$anon$8.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SortedSetTemplate$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/JavaConversions$IterableWrapper$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Responder$$anon$2$$anonfun$respond$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Predef$Ensuring$$anonfun$ensuring$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceProxyTemplate$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/BytePickle$$anonfun$wrap$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableTemplate$$anonfun$foldRight$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Range$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/RichDouble.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/PolyType.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$token$8$$anonfun$apply$11.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/net/Utility$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/IterableTemplate$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableTemplate$$anonfun$flatMap$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function13.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Vector$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$OnceParser$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Invocation$SymbolWithArguments$$anonfun$getMethodOn$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Predef$Triple$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/NodeSeq$$anonfun$$bslash$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$Error$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/Publisher.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Stream$$anonfun$init$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableViewTemplate$$anon$6.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Manifest$$anon$7.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceForwarder.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Stack$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/remote/FreshNameCreator$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/parsing/XhtmlEntities$$anonfun$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/script/NoLo.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Either$$anonfun$joinLeft$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/control/Exception$Finally$$anonfun$and$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$Parser$$anonfun$$times$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/ast/Mappable.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SetProxyTemplate$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/IterableViewTemplate$Mapped.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/EntityDecl.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableFactory$$anonfun$tabulate$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function$$anonfun$chain$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/text/DocBreak.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Iterator$$anon$9.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/text/DocText$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Goto.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/BytePickle$$anonfun$uwrap$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/RichSorting$$anonfun$sort$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/FJTask.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/StringBuilder$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/ObservableBuffer$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/BigInt$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/control/Exception$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceTemplate$$anonfun$lengthCompare$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/IterableViewTemplate$$anon$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceView$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/ast/AbstractSyntax$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Set$Set3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/syntax/StdTokens$Identifier.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/control/Exception$$anon$5$$anonfun$$init$$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/PriorityQueue$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/persistent/IndexedStorage.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/DefaultMap$$anonfun$$minus$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$number$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Map$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/RichString.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/volatile.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/IterableViewTemplate$$anon$6.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/BitSetTemplate$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/matching/Regex$$anonfun$unapplySeq$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/jolib$Asynchr.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/SortedMap$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product21$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceView$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/LongMap$$anonfun$$plus$plus$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/forkjoin/ForkJoinPool.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableTemplate$$anonfun$head$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/automata/DetWordAutom.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/lexical/Lexical$$anonfun$letter$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/control/Exception$Finally.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/StringAdd.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/lexical/StdLexical$$anonfun$whitespace$1$$anonfun$apply$16$$anonfun$apply$18.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/control/Exception$Catch$$anonfun$toEither$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/OutputChannel.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/IterableProxy.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MapTemplate$$anon$4.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/Set.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/testing/SUnit$TestResult$$anonfun$failures$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Tree.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/BytePickle$$anonfun$bytearray$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/DoubleRef.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/parsing/MarkupParser$$anonfun$appendText$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceViewTemplate$$anon$5.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/Null$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Numeric$BigDecimalIsFractional$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/ast/Binders$UnderBinder$$anon$10.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/ImmutableMapTemplate$$anonfun$$plus$plus$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/CharRef.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Parser$$anonfun$value$4.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/path/Expression$Cond.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$expPart$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Stream$$anonfun$takeWhile$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/control/Exception$Catch.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Iterator$$anonfun$contains$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Array$$anonfun$fromFunction$3$$anonfun$apply$13.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/forkjoin/ThreadLocalRandom$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/MetaData$$anonfun$toString1$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/testing/Show$$anonfun$test$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/MethodCache.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/ObservableBuffer$$anon$4.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/BufferedIterator$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/persistent/SetStorage$$anonfun$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/New$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Ordering$$anon$4.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/Shrinkable$$anonfun$$minus$minus$eq$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/SortedMap$$anonfun$$plus$plus$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Responder$$anon$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Tuple7.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/RichChar$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/pull/EvElemEnd$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/HashSet.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Set$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$Error.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/ArrayStack$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableTemplate$$anonfun$count$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/IntMap.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/logging/ConsoleLogger$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/ScalaRunTime$$anonfun$forceBoxedArray$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/SetProxy.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Iterator$$anon$5.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/TIMEOUT$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/IterableTemplate$$anonfun$dropRight$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/DefDef$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Invocation$SymbolWithArguments$$anonfun$getMethodOn$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/IterableProxyTemplate$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Invocation$RichSymbol.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/If$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableClass$$anonfun$unzip$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Ordering$BigDecimalOrdering.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableFactory$$anonfun$tabulate$1$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/ValidationException.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product11.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product9$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/ast/Binders$$anonfun$sequence$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/net/Utility$$anonfun$parseURL$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Actor$ActorBlocker.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function22.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Traversable$ComparableTraversableOps$$anonfun$max$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/LinkedListQueueCreator$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Tuple8.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Futures$$anonfun$alarm$1$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/NoManifest$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/BufferTemplate$$anonfun$$minus$minus$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/DoubleLinkedListTemplate.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/Source$$anonfun$fromInputStream$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Channel$$anonfun$receiveWithin$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/RangeToString$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Mutable.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/VectorViewTemplate$Zipped.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/BitSet$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/Atom.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/script/End$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MutableMapTemplate.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Actor$$anon$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/ReplyableActor$$anon$2$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/RegexParsers$$anonfun$phrase$1$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Map$Map4.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Enumeration$ValueSet$$anonfun$iterator$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/TypeBounds$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/IterableViewTemplate$Appended$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/Addable.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/Sequence$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MapTemplate$$anon$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableViewTemplate$Transformed$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Iterator$$anon$20.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableViewTemplate$Appended.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Tuple12.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/BytePickle$Def$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product22$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Ordering$StringOrdering.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/input/CharArrayPosition.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/AttListDecl.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/Utility$$anonfun$toXML$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Responder$$anon$4$$anonfun$respond$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/MarkupDecl.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/HashMap$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/transform/BasicTransformer$$anonfun$transform$2$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$token$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/OpenHashMap.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function12$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MapTemplate$$anon$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/pull/EvElemStart$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Traversable$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Array.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function$$anonfun$tupled$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Traversable$NumericTraversableOps$$anonfun$sum$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/TypeApply.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Ident$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/Addable$$anonfun$$plus$plus$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/XML$$anonfun$save$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function$$anonfun$curried$4.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/include/sax/EncodingHeuristics$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/BytePickle$$anonfun$bool$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/BytePickle$PU.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Iterator$$anon$15.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function20$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/NodeTraverser$$anonfun$traverse$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/ast/Mappable$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$OnceParser$$anonfun$$tilde$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Ordering.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/LinkedList$$anonfun$newBuilder$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/script/Include.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/path/Expression$Attrib$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/testing/Str.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/control/Exception$Catch$$anonfun$opt$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/ObservableMap$$anon$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/VectorViewTemplate$Appended.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/remote/DelegateActor$$anonfun$act$1$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function3$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/File$$anonfun$scala$io$File$$deleteRecursively$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/ObservableMap$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/pilib$$anonfun$matches$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/ObservableSet$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/Position$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Numeric$BigDecimalIsFractional.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/LinkedListQueueCreator$$anon$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Traversable$TraversableTraversableOps$$anonfun$transpose$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function3$$anonfun$curry$1$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/CloneableCollection$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Exit.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Traversable.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Iterator$$anon$14.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/SingleType$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/scheduler/DelegatingScheduler$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Stream$$anonfun$take$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Tuple11.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/IterableViewTemplate$Mapped$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/SortedMap$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product15.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function20$$anonfun$curry$1$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/LongMap$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/control/TailRec$Done$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/RichException.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function$$anonfun$curried$4$$anonfun$apply$8$$anonfun$apply$9$$anonfun$apply$10.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/ast/AbstractSyntax$NameElement.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/annotation/unchecked/uncheckedStable.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Numeric.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/RichString$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/VectorViewTemplate$$anon$8.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableTemplate$$anonfun$splitAt$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Traversable$TraversableTraversableOps.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product17$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function$$anonfun$tupled$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/automata/Inclusion.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/BitSetFactory.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/JavaConversions$JListWrapper$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Iterator$IteratorIteratorOps.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MutableVectorViewTemplate.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableViewTemplate$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/GlobalSymbol.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/mobile/Code$$anonfun$apply$7.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/BitSetTemplate$$anonfun$foreach$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/ExternalID.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Apply.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableTemplate$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Numeric$BigDecimalAsIfIntegral.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/NoPrefix$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Actor$$anonfun$6.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/LinkedHashMap$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Stream$$anonfun$loop$6$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/lexical/Scanners$Scanner.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Stream$$anonfun$loop$3$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableViewTemplate$$anon$7.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MutableSetTemplate$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/IterableViewTemplate$FlatMapped$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Numeric$FloatIsFractional$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/script/Index.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/Set$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/PackratParsers$PackratReader$$anon$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/HashMap$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/MetaData$$anonfun$toString$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/JavaConversions$MutableBufferWrapper.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/SortedMap$$anonfun$$plus$plus$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/SchedulerAdapter.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/IntMap$$anonfun$unionWith$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$$tilde$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function$$anonfun$uncurried$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/remote/Terminate.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/Unparsed.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/ANY$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/PackratParsers$Head.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/ast/Binders$BinderEnv.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/DefaultMapModel$$anonfun$iterator$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MapTemplate$$anonfun$$plus$plus$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/List$$anonfun$lefts$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function16$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/LinkedHashSet.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/PropertiesTrait.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/lexical/Lexical$$anonfun$chrExcept$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Assign.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/MultiMap$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Ordering$FloatOrdering$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceTemplate$$anonfun$segmentLength$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/Group$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/Builder$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Traversable$NumericTraversableOps$$anonfun$product$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/SynchronizedBuffer$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceViewTemplate$$anon$10.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/NoPrefix.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/Subtractable.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/input/CharArrayReader$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Integral$IntegralOps.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/ast/Binders$Scope$$anonfun$bindersToString$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/automata/Inclusion$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Tuple8$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/LongMap.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/List$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product7$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Stream$$anonfun$partition$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/TreeSet$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/lexical/StdLexical$$anonfun$_delim$3$$anonfun$apply$27.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceViewTemplate$Zipped.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/IterableViewTemplate$Appended.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/matching/Regex$Match$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function14$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/syntax/StdTokens$StringLit$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/BitSetTemplate$$anonfun$$up$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$7$$anonfun$apply$14.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/ref/Reference.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MutableVectorViewTemplate$$anon$4.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceTemplate.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/PCDATA$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Reactor.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/VectorViewTemplate$Sliced.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Numeric$BigIntIsIntegral.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$scala$util$parsing$json$Lexer$$unicodeBlock$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MutableMapTemplate$$anonfun$$minus$minus$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/path/Expression$Test.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/ops$$anonfun$future$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/script/Remove$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/BytePickle$$anonfun$triple$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/JavaConversions$JListWrapper.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/LongMap$$anonfun$intersection$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/IterableViewTemplate$$anon$7.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/MetaData$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/ArrayStack$$anonfun$$plus$plus$eq$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/FJTaskScheduler2$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/MakeValidationException.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/package.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$$anonfun$failure$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/VectorViewTemplate$Filtered.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/MakeValidationException$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/IterableView$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/parsing/MarkupParser$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$charSeq$9$$anonfun$apply$29.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/matching/Regex$Match$$anonfun$ends$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Stream$$anonfun$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product16$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/SetProxy.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/JavaConversions$JCollectionWrapper$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/MIXED$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/remote/Node.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/parsing/ConsoleErrorHandler$$anonfun$printError$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/mobile/Code$$anonfun$apply$9.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$charSeq$7.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$ParseResult.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Ordering$LongOrdering.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/grammar/TreeRHS.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/script/Update.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Stream$cons$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceTemplate$$anonfun$zipWithIndex$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/HashTable$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$$anonfun$acceptSeq$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/ContentModel.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function16$$anonfun$curry$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MapBuilder.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/SynchronizedMap.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/VectorViewTemplate$$anon$4.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/LongMapUtils$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product10$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/SetProxy$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function$$anonfun$untupled$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/control/Exception$$anonfun$catching$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$string$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/parsing/ValidatingMarkupHandler.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/JavaConversions$MutableMapWrapper$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MapProxyTemplate$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function$$anonfun$chain$1$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/parsing/FactoryAdapter.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/PrefixedAttribute$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Manifest$$anon$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Ordering$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Iterable.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/ListSet.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/Node.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/IntMap$$anonfun$intersection$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/mobile/Code.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/path/Expression$Child.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Manifest$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/VectorViewTemplate$$anon$7.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/control/Breaks$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/ReplyableActor$$anonfun$$bang$qmark$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$charSeq$6$$anonfun$apply$25.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Responder$$anonfun$loopWhile$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Parser$$anonfun$jsonObj$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/MethodType.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/SortedMap.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableTemplate$$anonfun$slice$1$$anonfun$apply$8.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/Utility$$anonfun$sequenceToXML$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/BoxedUnit.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/pull/EvEntityRef$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/regexp/PointedHedgeExp$TopIter.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/BitSetTemplate$$anonfun$addString$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$charSeq$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Sequence$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/remote/Node$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/ParameterEntityDecl.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Stream$$anonfun$append$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/List$$anonfun$unzip$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/path/Expression$NameTest.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/VectorViewTemplate$Mapped$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/BytePickle$$anonfun$string$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/path/Expression$NameTest$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/RedBlack.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$charSeq$8.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Sequence$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/PrettyPrinter$$anonfun$traverse$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$expPart$1$$anonfun$apply$19.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableViewTemplate$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableTemplate$$anonfun$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function17$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/regexp/PointedHedgeExp$Node.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/regexp/Base$Star$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/JSON$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableTemplate$$anonfun$forall$1$$anonfun$apply$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Iterable$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/ValDef$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/RegexParsers$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Code.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function14.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/PrettyPrinter$Box.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/UnprefixedAttribute$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Channel$$anonfun$$bang$qmark$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/ElemDecl.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/ref/Reference$$anonfun$toString$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/ObservableSet.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Ordering$IntOrdering.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/Utility$$anonfun$appendEscapedQuoted$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/parsing/XhtmlEntities$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/PolyType$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/SetProxy.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function9$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/Elem$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Stream$Cons.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/PrettyPrinter$$anonfun$formatNodes$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/syntax/Tokens$Token.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/ListQueueCreator$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/RedBlack$NonEmpty$$anonfun$toStream$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/LongMap$Nil$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Parser$$anonfun$number$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/IntMapIterator.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/lexical/StdLexical$$anonfun$whitespace$1$$anonfun$apply$19$$anonfun$apply$21.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Stream$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/testing/SUnit$Assert.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/pilib$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/pilib$$anonfun$matches$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Ordering$Unit$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/HashTable.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/InputChannel.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$Parser$$anonfun$$up$qmark$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/Hashable$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/testing/Ident$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/NodeTraverser.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/RedBlack$RedTree.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceViewTemplate$$anon$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/LongMap$Tip.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/BoxedAnyArray.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/RichString$$anonfun$$times$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/RedBlack$RedTree$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/FJTask$Seq.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$Parser$$anonfun$$up$up$up$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function22$$anonfun$curry$1$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/MetaData$$anonfun$equals$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/remote/Apply0$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/FJTaskRunner$VolatileTaskRef.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/path/Expression$Equals$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Futures$Eval$2$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/regexp/Base$Sequ$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/ScalaClassLoader$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/scheduler/ForkJoinScheduler.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$scala$util$parsing$json$Lexer$$unicodeBlock$4.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/Iterable$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/IterableViewTemplate$FlatMapped.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/Node$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableTemplate$$anonfun$takeWhile$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MutableVectorViewTemplate$Sliced.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/ParsedEntityDecl.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/DTD$$anonfun$toString$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/JavaConversions$JEnumerationWrapper.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/NameTransformer$OpCodes.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/IntMap$$anonfun$$plus$plus$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/SequenceProxy.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Futures$$anonfun$alarm$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product3$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Either$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/ListBuffer$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Left.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableFactory.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/remote/RemoteApply0$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/IterableViewTemplate$Appended$$anonfun$iterator$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/NoSymbol.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableTemplate$$anonfun$copyToBuffer$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/control/BreakException.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/ast/Binders$BinderEnv$$anon$7.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/scheduler/ForkJoinScheduler$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/parsing/TokenTests$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/jolib$Signal.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/testing/RegexTest$$anonfun$5.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Reactor$$anonfun$react$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/Codec$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/JavaConversions$MutableMapWrapper$$anon$1$$anon$4$$anon$5.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SortedMapTemplate$$anonfun$$plus$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/JavaConversions$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/pull/ProducerConsumerIterator.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/remote/RemoteApply0.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/testing/SUnit$TestConsoleMain$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/BytePickle$$anonfun$fixedList$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Map$WithDefault.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Ordering$DoubleOrdering.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/List.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Enumeration.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/GenericRange.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/TraversableProxy.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/MetaData$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/Xhtml$$anonfun$sequenceToXML$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/Utility$$anonfun$6.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/Subscriber.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableTemplate$$anonfun$copyToArray$1$$anonfun$apply$10.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/This$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/ResizableArray$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/FlatHashTable.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/control/Breaks.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Ordering$LongOrdering$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/ListMap$$anonfun$get$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/Utility$$anonfun$unescape$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Stream$$anonfun$iterate$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Channel.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Proxy.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/scheduler/ThreadPoolConfig$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/pull/XMLEvent.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Iterator$$anon$22.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/persistent/IndexedStorage$$anonfun$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/LongMapKeyIterator.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product3$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/annotation/tailrec.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function9$$anonfun$curry$1$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/BoxedFloatArray.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$Parser$$anonfun$append$1$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/text/DocGroup$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/Utility$$anonfun$sort$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/RichClass.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/LinearSequence.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/scheduler/ExecutorScheduler$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MapTemplate$DefaultValuesIterable$$anonfun$foreach$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/regexp/Base.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/regexp/WordExp$Letter.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/Null$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function15$$anonfun$curry$1$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Futures$$anon$4.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/BufferTemplate$$anonfun$remove$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceViewTemplate$Zipped$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Iterable.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/Vector$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Futures$$anon$2$$anonfun$isSet$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Actor$$anonfun$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/ast/Mappable$$anon$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/IterableViewTemplate$$anon$5.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/testing/RegexTest.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/input/PagedSeqReader$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function7$$anonfun$curry$1$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableTemplate$$anonfun$exists$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$charSeq$4$$anonfun$apply$23.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Tuple17.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product18$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Actor$$anonfun$react$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/BytePickle$$anonfun$ulist$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$4$$anonfun$apply$6$$anonfun$apply$7.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceProxyTemplate.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Either$$anonfun$rights$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/grammar/LabelledRHS$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/parsing/DefaultMarkupHandler.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/pilib$GP.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Traversable$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/scheduler/DefaultExecutorScheduler$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/BytePickle$$anonfun$ufixedList$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableViewTemplate$DroppedWhile$$anonfun$foreach$8.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/control/Exception$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Stream$Empty$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/VectorViewTemplate$Patched.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Tuple3$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Unhashable$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SortedSetFactory.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/JavaConversions$JCollectionWrapper.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/JavaConversions$JSetWrapper.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MutableMapTemplate$$anonfun$$plus$plus$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Debug$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/mobile/Code$$anonfun$apply$8.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MutableVectorViewTemplate$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Manifest$$anon$8.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$charSeq$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Numeric$DoubleIsFractional.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/pull/EvElemStart.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/Document.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/cloneable.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function$$anonfun$curried$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/forkjoin/ForkJoinPool$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/path/Expression$WildcardTest$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Actor$$anon$5.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Fractional$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/Source$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/IterableViewTemplate$FlatMapped$$anonfun$iterator$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/BitSetTemplate$$anonfun$foreach$1$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Futures$$anonfun$awaitAll$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/ast/Binders$$anon$4.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/control/TailRec.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/unsealed.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/specialized.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/remote.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/input/OffsetPosition$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function$$anonfun$curried$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/PackratParsers$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Stream$ConsWrapper.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableTemplate$$anonfun$groupBy$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Actor$RecursiveProxyHandler.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Ordering$ShortOrdering.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/ImmutableMapFactory.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/NodeSeq$$anonfun$$bslash$bslash$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/BoxedByteArray.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/forkjoin/ForkJoinTask$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/automata/SubsetConstruction$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Tuple17$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Nil$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/VectorView$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product10$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$3$$anonfun$apply$5.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/scheduler/TerminationMonitor$$anonfun$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Set$Set1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Futures$$anon$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/pull/ProducerConsumerIterator$$anonfun$fillBuffer$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/mobile/Code$$anonfun$apply$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$3$$anonfun$apply$3$$anonfun$apply$4.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Numeric$BigIntIsIntegral$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function2$$anonfun$curry$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/testing/Ident.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableViewTemplate$Filtered$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/IterableViewTemplate$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/LongMapUtils.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/syntactical/StdTokenParsers$$anonfun$numericLit$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/BytePickle$$anon$8.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceViewTemplate$DroppedWhile$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/text/DocNil$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$6.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableTemplate$$anonfun$init$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/JavaConversions$MutableMapWrapper$$anon$1$$anon$4.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/FJTaskRunnerGroup.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/automata/SubsetConstruction$$anonfun$determinize$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Numeric$LongIsIntegral$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/HashMap$$anonfun$iterator$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$$anonfun$chainr1$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function8$$anonfun$curry$1$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/LongMap$$anonfun$unionWith$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function$$anonfun$curried$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/Utility$Escapes$$anonfun$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableViewTemplate$FlatMapped$$anonfun$foreach$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/forkjoin/RecursiveTask.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Apply$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Actor$$anonfun$start$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/BoxedCharArray.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Page.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/ContentModel$$anonfun$toString$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/automata/NondetWordAutom$$anonfun$containsFinal$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/NotationDecl.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableViewTemplate$FlatMapped$$anonfun$foreach$3$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MutableMapTemplate$$anonfun$retain$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/List$$anonfun$flatten$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product19$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/TreeSet$$anonfun$toStream$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/syntactical/StdTokenParsers$$anonfun$stringLit$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product18.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/BufferedSource$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/BufferTemplate$$anonfun$$minus$minus$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Parser$$anonfun$value$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$$anonfun$acceptIf$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Proxy$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/UnparsedEntityDecl$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/If.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/path/Expression$DescOrSelf.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/RegexParsers$$anonfun$phrase$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function11$$anonfun$curry$1$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Array$$anonfun$ofDim$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/script/Start$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/Scanner.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SortedMapFactory$SortedMapBuilderFactory.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product8.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableTemplate$$anonfun$partition$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/BytePickle$Ref.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/Publisher$$anonfun$subscribe$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/remote/CustomObjectInputStream.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/Buffer$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/pull/XMLEventReader$Parser.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Traversable$ComparableTraversableOps.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Map$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/PartialOrdering.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/matching/Regex$MatchData$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/BufferTemplate$$anonfun$$plus$plus$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/input/Position$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/parsing/XhtmlParser.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Target$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Scheduler$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/PrettyPrinter$$anonfun$childrenAreLeaves$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/VectorViewTemplate$$anon$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$$anonfun$not$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Responder$$anonfun$loop$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableViewTemplate$$anon$5.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Ordering$ByteOrdering.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/AttrDecl$$anonfun$toString$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/matching/Regex$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/RedBlack$BlackTree$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/DefaultEntry.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$token$4.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/persistent/SetStorage.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/parsing/FactoryAdapter$$anonfun$startElement$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/SortedSet.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/NodeSeq$$anonfun$$bslash$bslash$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/ast/Binders$$anon$6$$anonfun$gmap$7.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/AbstractActor.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/BooleanRef.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function12$$anonfun$curry$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Parser$$anonfun$objEntry$1$$anonfun$apply$5.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Map$Map1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableClass$$anonfun$transpose$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/PackratParsers$LR$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/VectorTemplate$Elements.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/ast/Binders$Scope$$anonfun$indexFor$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/LinkedNode.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Tuple22$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/Parsing.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product19$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/UninitializedFieldError$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/path/Expression.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/RegexParsers.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/BeanDescription.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/LinearSequence$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableProxyTemplate.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableFactory$$anonfun$tabulate$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Replyable$$anonfun$$bang$bang$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/SystemID.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/control/TailRec$Done.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Stream$$anonfun$removeDuplicates$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/RichClass$FailedReflectiveCall.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/BufferTemplate$$anonfun$$plus$plus$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Replyable$$anonfun$$bang$bang$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Queue.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/BitSetTemplate$$anonfun$subSet$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/remote/RemoteActor.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/MapProxy.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/BytePickle$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/FJTask$Wrap.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceViewTemplate$FlatMapped.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/scheduler/ThreadPoolConfig.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/logging/Logged.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function13$$anonfun$curry$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Array$$anonfun$ofDim$4.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function15.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/VectorViewTemplate$DroppedWhile$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/IterableProxyTemplate.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableView$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableTemplate$$anonfun$head$1$$anonfun$apply$5.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/DocType.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Futures$$anon$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/NamespaceBinding.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product13.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/ScalaRunTime.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Debug.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/script/Update$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function5$$anonfun$curry$1$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableFactory$$anonfun$tabulate$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/IterableViewTemplate$TakenWhile.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/IFJTaskRunnerGroup.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/ShortRef.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/Utils.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Channel$$anonfun$$qmark$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/script/Start.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/testing/Tester.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/ObservableBuffer$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function19.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$charSeq$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/Stack$$anonfun$pushAll$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/ast/Binders$Scope.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Replyable.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/PackratParsers$MemoEntry.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/MatchError.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/pull/ProducerConsumerIterator$$anonfun$produce$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/BytePickle$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/Xhtml$$anonfun$toXhtml$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$$anonfun$chainr1$2$$anonfun$apply$11.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/syntax/StdTokens$Keyword$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableViewTemplate$Filtered$$anonfun$foreach$6.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$$anonfun$chainl1$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Tuple10.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Annotation.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/VectorViewTemplate$Reversed$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/unchecked.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Numeric$BigDecimalAsIfIntegral$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function6.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceTemplate$$anonfun$segmentLength$1$$anonfun$apply$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/ast/Binders$_Binder$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/RichInt.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/REQUIRED.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Numeric$IntIsIntegral$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/ObservableBuffer$$anon$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/Utility$$anonfun$collectNamespaces$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Iterator$$anon$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Enumeration$$anonfun$withName$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/LongMap$Tip$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/grammar/EmptyHedgeRHS$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/testing/Show.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/ArrayStack$$anonfun$$plus$plus$eq$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/lexical/StdLexical$$anonfun$whitespace$1$$anonfun$apply$16$$anonfun$apply$17.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/Publisher$$anonfun$publish$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/parsing/MarkupParser$$anonfun$4.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function$$anonfun$tupled$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/IntDef.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/TypeSymbol.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function17$$anonfun$curry$1$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/SynchronizedSet$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/Growable$$anonfun$$plus$plus$eq$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Array$$anonfun$fromFunction$1$$anonfun$apply$11.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/ast/Binders$BindingSensitive.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/remote/NamedSend$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceViewTemplate$DroppedWhile.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/Source.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/ast/Mappable$$anon$2$$anonfun$gmap$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableFactory$$anonfun$concat$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function10.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/grammar/AnyTreeRHS$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/ScalaBeanInfo.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Ordering$CharOrdering$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/remote/TcpService$$anonfun$liftedTree1$1$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/NamespaceBinding$$anonfun$toString$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Sequence.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/persistent/Index.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/EMPTY$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/CountedIterator.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Array$$anonfun$concat$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/PrettyPrinter$Para.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/RichString$$anonfun$linesIterator$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product8$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Array$$anonfun$apply$4.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Method.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/VectorViewTemplate$Mapped.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/RootSymbol$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/remote/JavaSerializer.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Actor$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$number$1$$anonfun$apply$15.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/NoType$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$$anonfun$chainr1$1$$anonfun$apply$10.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MutableVectorViewTemplate$$anon$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/LocalSymbol.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function19$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$$anonfun$chainl1$1$$anonfun$apply$8.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Invocation$SymbolWithArguments.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/BeanDisplayName.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/BytePickle$UnPicklerState.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/StringBuilder$$anonfun$setLength$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/BeanInfo.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceTemplate$$anonfun$lengthCompare$1$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/BitSetTemplate$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/MalformedAttributeException$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function$$anonfun$curried$3$$anonfun$apply$5$$anonfun$apply$6.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/RichClass$ReflectiveCall$$anonfun$methodForArgs$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/remote/NamedSend.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product13$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/OpenHashMap$$anonfun$transform$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/META-INF/MANIFEST.MF" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/BitSet.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/DefaultMap.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/mobile/Location.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Iterator$$anon$8.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function5$$anonfun$curry$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/automata/WordBerrySethi$$anonfun$automatonFrom$1$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Invocation$SymbolWithArguments$$anonfun$getDeclaredMethodsOn$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Responder.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$$anonfun$repN$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/ops.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/Boxed.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Reactor$$anonfun$searchMailbox$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Stream$$anonfun$fill$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/parsing/ConstructingHandler.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product21$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/include/sax/XIncluder.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/UninitializedFieldError.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$OnceParser.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/ast/Mappable$Mappable.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function13$$anonfun$curry$1$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/lexical/Scanners$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/SetProxy$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/LinkedList$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/automata/BaseBerrySethi.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/Growable$$anonfun$$plus$plus$eq$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/PrettyPrinter$$anonfun$makeBox$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/parsing/TokenTests.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/IterableViewTemplate.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Parser$$anonfun$value$6.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/ast/Binders$_Binder$$anonfun$genId$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/syntax/StdTokens$NumericLit$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/StringBuilder.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/testing/Show$$anonfun$test$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Tuple13.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/automata/SubsetConstruction$$anonfun$determinize$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Parser$$anonfun$jsonObj$1$$anonfun$apply$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableView$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/NodeSeq$$anonfun$makeSeq$1$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/AttListDecl$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Manifest$$anonfun$subtype$1$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/ImmutableMapTemplate.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableFactory$$anonfun$fill$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/Utility$$anonfun$trimProper$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SetProxyTemplate.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/List$$anonfun$rights$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/PublicID.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/jolib$Synchr.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/IterableTemplate.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/Unparsed$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function$$anonfun$uncurried$4.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MutableVectorViewTemplate$$anon$5.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/ObservableSet$$anon$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/Random.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/TypeField$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product14.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/control/Exception$$anon$4.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/ImmutableMapTemplate$$anonfun$$plus$plus$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product5$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableTemplate.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$$anonfun$opt$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/RichDouble$$anonfun$to$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Tuple10$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/ImplicitConversions$$anonfun$flatten4$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/BooleanBeanProperty.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Actor$$anonfun$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/ObservableBuffer$$anon$5.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/ScalaClassLoader$$anonfun$tryClass$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/ListMap.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MutableMapTemplate$$anonfun$$minus$minus$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/FJTaskScheduler2$$anonfun$allWorkersBlocked$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$$anonfun$rep1$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Array$$anonfun$fromFunction$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/NodeSeq$$anon$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/FloatRef.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/PackratParsers$Head$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/ListMap$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/syntax/StdTokens$Keyword.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/EntityRef$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/pilib$Chan$$anonfun$output$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/NotNull.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$intList$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/remote/Serializer.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Parser$$anonfun$value$5.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Queue$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableTemplate$$anonfun$reduceRight$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/SchedulerAdapter$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$whitespace$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Type.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Reactor$$anonfun$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/ContentModel$Translator$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Ordering$BigInt$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Stream$$anonfun$range$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableViewTemplate$Appended$$anonfun$foreach$5.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Numeric$BigDecimalIsConflicted$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/BytePickle$RefDef.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/OpenHashMap$$anonfun$foreach$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/grammar/AnyHedgeRHS.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/BytePickle$$anonfun$triple$2$$anonfun$apply$6$$anonfun$apply$7.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/scheduler/DaemonScheduler.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Parser$$anonfun$jsonArray$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$sign$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function17$$anonfun$curry$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Some.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$token$5.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$$anon$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/automata/SubsetConstruction$$anonfun$selectTag$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Ordering$$anon$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/SortedMap$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Future.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/remote/TcpServiceWorker.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/JavaConversions$JIteratorWrapper.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function0$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/DEFAULT.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$string$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/RichShort.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/Publisher$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function1$$anonfun$compose$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/RichLong.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/VectorTemplate$$anonfun$indexWhere$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Invocation$PreservedAnyVal.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/regexp/PointedHedgeExp$Node$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MutableSetTemplate$$anonfun$$minus$minus$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/ast/Binders$$anonfun$sequence$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Set.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Actor.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Tuple18$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/Utility$$anonfun$unescape$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/Utility$Escapes$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/VectorViewTemplate$Reversed.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MutableMapTemplateBase.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceFactory.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/SystemID$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/testing/Benchmark$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Cell.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/ast/Mappable$$anon$3$$anonfun$gmap$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Invocation$PreservedAnyRef$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function$$anonfun$curried$3$$anonfun$apply$5.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/testing/SUnit$TestResult.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/LightReaction.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$Parser$$anonfun$map$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/annotation/unchecked/uncheckedVariance.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/BufferTemplate$$anonfun$$plus$plus$colon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Tuple14$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/ReplyableActor$$anon$2$$anonfun$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/ast/Mappable$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Actor$$anonfun$7.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Sequence.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableTemplate$$anonfun$last$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Actor$$anon$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/testing/Benchmark$$anonfun$main$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function21.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/Utility$$anonfun$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceViewTemplate$Reversed.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceViewTemplate$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceTemplate$$anonfun$removeDuplicates$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/lexical/StdLexical$$anonfun$comment$3$$anonfun$apply$26.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/jolib$Join$$anonfun$tryMatch$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Tuple9$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/PartialOrdering$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/logging/ConsoleLogger.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/VectorViewTemplate$Filtered$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function14$$anonfun$curry$1$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Numeric$IntIsIntegral$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Invocation$SymbolWithArguments$$anonfun$argsMatch$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Stream$$anonfun$loop$9$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Tuple12$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function$$anonfun$curried$4$$anonfun$apply$8$$anonfun$apply$9.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/include/sax/EncodingHeuristics$EncodingNames$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/BytePickle$$anonfun$pair$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/BeanProperty.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/regexp/WordExp.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$5$$anonfun$apply$13.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/MapProxy$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product1$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/remote/LocalApply0.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceTemplate$$anonfun$reverse$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Parser$$anonfun$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Tuple20.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/TextBuffer.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/RichString$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceViewTemplate$Appended$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Range$Long$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/pilib$Chan$$anonfun$attach$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MapTemplate.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/ops$$anonfun$future$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Ordering$Int$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SetFactory.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Array$$anonfun$fromFunction$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product4$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/regexp/Base$RegExp.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/LinearSequenceTemplate.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$$anonfun$elem$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MutableVectorTemplate.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product21.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Enumeration$Val.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/matching/Regex$MatchIterator$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Select$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function3$$anonfun$curry$1$$anonfun$apply$1$$anonfun$apply$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/IterableTemplate$$anonfun$dropRight$1$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/TreeMap$$anonfun$foreach$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/BitSet$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/pull/XMLEventReader$POISON$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/pilib$Chan$$anonfun$read$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MutableSetTemplate$$anonfun$$plus$plus$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/IterableViewTemplate$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/IMPLIED.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$Failure.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/LinearSequence$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Channel$$anonfun$receive$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/ExceptionHandling.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/lexical/StdLexical$$anonfun$parseDelim$1$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/LinearSequence$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableTemplate$$anonfun$reduceRight$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MutableVectorViewTemplate$Filtered.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/automata/NondetWordAutom$$anonfun$next$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/JavaConversions$JMapWrapper.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Numeric$DoubleIsFractional$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/pilib.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Vector$$anonfun$newBuilder$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Iterator$$anon$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/Buffer.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$$anonfun$acceptSeq$1$$anonfun$apply$6.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableTemplate$$anonfun$isEmpty$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/VectorViewTemplate$$anon$6.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableViewTemplate.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Manifest$$anon$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Tuple14.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/Traversable.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/regexp/WordExp$Wildcard$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/inline.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$9.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableTemplate$$anonfun$copyToArray$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/SynchronizedMap$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/Publisher$$anonfun$publish$1$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$$anonfun$repN$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/persistent/CachedFileStorage.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Set$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Ordering$Float$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/path/Expression$Root$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/DynamicVariable.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/ref/PhantomReference.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/MultiMap.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableTemplate$$anonfun$find$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/IntMap$Nil$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/PartiallyOrdered$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/JavaConversions$JMapWrapper$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Ordering$Byte$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$token$8$$anonfun$apply$12.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/NodeSeq$$anonfun$$bslash$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Target.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/syntax/Tokens$ErrorToken$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/RichByte.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceViewTemplate.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$1$$anonfun$apply$1$$anonfun$apply$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/remote/UnlinkFromFun.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Tuple16$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/ELEMENTS$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MutableMapTemplateBase$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/SpecialNode.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/RichClass$$anonfun$getConstructorsTyped$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/VectorViewTemplate$Transformed.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function4$$anonfun$curry$1$$anonfun$apply$1$$anonfun$apply$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Super$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$Parser$$anonfun$$qmark$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Either$RightProjection$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MutableVectorView$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$5$$anonfun$apply$12.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/scheduler/ExecutorScheduler.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/Cloneable.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/PartialFunction$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/VectorView.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/ListSet$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/ObservableBuffer$$anon$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/text/DocNest$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/AbstractActor$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/AttrDecl$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/UTF8Codec.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/IterableViewTemplate$DroppedWhile.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Ordering$Short$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/pull/EvComment.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/TreeMap.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/ImplicitMethodType.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Symbol$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Map$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Actor$$anonfun$reactWithin$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Ordering$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Stream$$anonfun$make$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableViewTemplate$$anon$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$$anonfun$rep$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/scheduler/ForkJoinScheduler$$anon$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/testing/Benchmark$$anonfun$runBenchmark$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/control/TailRec$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/parsing/XhtmlEntities.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/factory/XMLLoader$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/PartialOrdering$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Ordering$$anon$9.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/CountedIterator$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/None$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/WeakHashMap.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/ListSerializeEnd$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableTemplate$$anonfun$isEmpty$1$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Field.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/MapProxy$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/BytePickle$$anonfun$upair$2$$anonfun$apply$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/BigDecimal$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/BytePickle$$anonfun$triple$2$$anonfun$apply$6.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/regexp/WordExp$Wildcard.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/ast/Binders$UnboundElement.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Either$LeftProjection$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/HashMap$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$4.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableClass$$anonfun$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/mobile/Code$$anonfun$apply$10.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$$anonfun$chainl1$2$$anonfun$apply$9.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/TopScope.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/parsing/ExternalSources$MyClass$1$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/BytePickle$$anonfun$upair$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Vector$Impl.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/ListSet$Node.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Tuple19.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/RedBlack$NonEmpty$$anonfun$toStream$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product20$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Vector.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceViewTemplate$Sliced.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/VectorViewTemplate$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Responder$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/IterableViewTemplate$TakenWhile$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/VectorTemplate$$anonfun$forall$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/Subtractable$$anonfun$$minus$minus$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product19.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/Null.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product13$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function8$$anonfun$curry$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/RichFloat.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/control/Exception$By.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/RichChar.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/RevertableHistory$$anonfun$undo$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/input/CharSequenceReader.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Actor$$anon$6.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/RichString$$anonfun$stripMargin$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/BytePickle$$anonfun$pair$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product16.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/lexical/StdLexical$$anonfun$token$10.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceViewTemplate$FlatMapped$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/syntactical/StdTokenParsers$$anonfun$ident$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$string$1$$anonfun$apply$13.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Array$$anonfun$fromFunction$2$$anonfun$apply$12.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$Parser.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/compat/Platform.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/forkjoin/ForkJoinWorkerThread.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MapTemplate$$anonfun$$plus$plus$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/ArrayStack.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Cell$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Reactor$$anonfun$5.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/PackratParsers$PackratReader.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/Undoable.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/TIMEOUT.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/PrettyPrinter$$anonfun$format$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function0.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/LinearSequence$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Invocation$PreservedAnyVal$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/PriorityQueue.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/VectorTemplate$$anon$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Right.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/automata/DetWordAutom$$anonfun$toString$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/Builder.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/RichUnit.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/ScalaRunTime$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function3$$anonfun$curry$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/Utility$$anonfun$sequenceToXML$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/BitSetTemplate$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/grammar/EmptyHedgeRHS.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/DEFAULT$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/PropertiesTrait$$anonfun$props$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product2$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function2$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$token$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Actor$$anonfun$4.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/BytePickle$$anonfun$triple$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/ReplyableActor$$anon$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/ReplyableReactor$$anonfun$$bang$bang$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/automata/WordBerrySethi$$anonfun$automatonFrom$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/ScalaBeanInfo$$anonfun$1$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/Xhtml$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/HashSet.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceTemplate$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function10$$anonfun$curry$1$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$$anonfun$guard$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/pull/EvComment$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/ExtDef$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/ThisType$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function16$$anonfun$curry$1$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/BytePickle$$anonfun$triple$2$$anonfun$apply$5.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceViewTemplate$Sliced$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Ordering$FloatOrdering.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Actor$$anon$7.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/BytePickle$$anonfun$list$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/DEFAULT$$anonfun$toString$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/runtime/ObjectRef.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/FJTask$Par.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/script/Location.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/ListQueueCreator$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/TreeMap$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/RootSymbol.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/$colon$colon.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/REQUIRED$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/input/Reader.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/ClassfileAnnotation.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/MethodType$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Iterator$$anon$10.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$$anonfun$accept$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/testing/Benchmark.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/PartiallyOrdered.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/ResizableArray.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/FlatHashTable$$anonfun$checkConsistent$1$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/SerialVersionUID.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/OpenHashMap$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/control/Exception$Try.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MutableVectorViewTemplate$$anon$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/MailBox$$anonfun$scanSentMsgs$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Sequence$$anonfun$hashCode$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/grammar/AnyTreeRHS.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/VectorTemplate$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceViewTemplate$Mapped.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Responder$$anon$3$$anonfun$respond$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product9.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$charSeq$9$$anonfun$apply$28.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Stream$$hash$colon$colon$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Numeric$BigDecimalIsConflicted.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/MailBox$$anonfun$send$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableClass$$anonfun$flatten$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/annotation/switch.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/Sequence$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Tuple4$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/control/Exception$$anon$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/path/Expression$Child$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/PackratParsers$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/ArrayBuffer$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function20$$anonfun$curry$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/ObservableSet$$anon$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/remote/SendTo$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/control/Exception$Catch$$anonfun$toOption$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Numeric$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/mutable/LinkedHashMap$$anon$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/IScheduler$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/SequenceTemplate$$anonfun$intersect$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/transform/RuleTransformer$$anonfun$transform$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Stream$$anonfun$concat$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/SortedMap.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/LinearSequenceTemplate$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/PrettyPrinter$$anonfun$formatNodes$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/jolib$Join$$anonfun$canMatch$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/include/XIncludeException.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product5$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Option$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/BytePickle$$anonfun$string$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function$$anonfun$untupled$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/PCData.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableViewTemplate$DroppedWhile.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/json/Lexer$$anonfun$intList$1$$anonfun$apply$17.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/lexical/Lexical$$anonfun$digit$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/NoManifest.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/script/NoLo$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/IScheduler.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableForwarder.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/lexical/Lexical$$anonfun$whitespaceChar$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Tuple1$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/TIMEOUT$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/BigInt.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/syntactical/StdTokenParsers$$anonfun$numericLit$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/Position.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Tuple2$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Vector.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Template.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/forkjoin/LinkedTransferQueue.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/DtdTypeSymbol.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/LabelSymbol$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/RichSorting.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/XML$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Code$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Responder$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/ANY.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/Group.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/PackratParsers$$anonfun$scala$util$parsing$combinator$PackratParsers$$recall$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Iterator$$anon$18.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Tuple6.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/MapTemplate$$anonfun$addString$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/UTF8Codec$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/dtd/EMPTY.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/testing/RegexTest$$anonfun$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/reflect/Print$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Traversable$TraversableTraversableOps$$anonfun$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Traversable$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/ListMap$$anon$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Reactor$$anonfun$react$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/control/Exception$Described$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/forkjoin/ForkJoinPool$DefaultForkJoinWorkerThreadFactory.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Actor$$anonfun$loop$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/syntax/StdTokens.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/lexical/StdLexical$$anonfun$_delim$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/ref/ReferenceWrapper$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/VectorView$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Actor$$anonfun$respondOn$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product5.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/testing/SUnit$Assert$class.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$Parser$$anonfun$$less$tilde$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/Parsers$$anon$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/io/BytePickle$$anonfun$upair$2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/generic/TraversableViewTemplate$$anon$4.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/concurrent/pilib$UChan$$anonfun$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/parsing/combinator/syntactical/StdTokenParsers$$anonfun$keyword$1$$anonfun$apply$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/HashSet$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/parsing/FatalError$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/immutable/Set$Set2.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Reactor$$anonfun$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/Futures$$anonfun$3.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Function.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/util/regexp/Base$Sequ.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/Iterator$$anon$11.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/xml/parsing/MarkupParser$$anonfun$document$1.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/collection/script/Include$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/actors/remote/LocalApply0$.class" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/class/scala/Product16$.class" />
    </list>
    <ignored path="scala-disassembled.iws" />
    <ignored path=".idea/workspace.xml" />
    <option name="TRACKING_ENABLED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ChangesViewManager" flattened_view="true" show_ignored="false" />
  <component name="CreatePatchCommitExecutor">
    <option name="PATCH_PATH" value="" />
    <option name="REVERSE_PATCH" value="false" />
  </component>
  <component name="DaemonCodeAnalyzer">
    <disable_hints />
  </component>
  <component name="DebuggerManager">
    <breakpoint_any>
      <breakpoint>
        <option name="NOTIFY_CAUGHT" value="true" />
        <option name="NOTIFY_UNCAUGHT" value="true" />
        <option name="ENABLED" value="false" />
        <option name="LOG_ENABLED" value="false" />
        <option name="LOG_EXPRESSION_ENABLED" value="false" />
        <option name="SUSPEND_POLICY" value="SuspendAll" />
        <option name="COUNT_FILTER_ENABLED" value="false" />
        <option name="COUNT_FILTER" value="0" />
        <option name="CONDITION_ENABLED" value="false" />
        <option name="CLASS_FILTERS_ENABLED" value="false" />
        <option name="INSTANCE_FILTERS_ENABLED" value="false" />
        <option name="CONDITION" value="" />
        <option name="LOG_MESSAGE" value="" />
      </breakpoint>
      <breakpoint>
        <option name="NOTIFY_CAUGHT" value="true" />
        <option name="NOTIFY_UNCAUGHT" value="true" />
        <option name="ENABLED" value="false" />
        <option name="LOG_ENABLED" value="false" />
        <option name="LOG_EXPRESSION_ENABLED" value="false" />
        <option name="SUSPEND_POLICY" value="SuspendAll" />
        <option name="COUNT_FILTER_ENABLED" value="false" />
        <option name="COUNT_FILTER" value="0" />
        <option name="CONDITION_ENABLED" value="false" />
        <option name="CLASS_FILTERS_ENABLED" value="false" />
        <option name="INSTANCE_FILTERS_ENABLED" value="false" />
        <option name="CONDITION" value="" />
        <option name="LOG_MESSAGE" value="" />
      </breakpoint>
    </breakpoint_any>
    <breakpoint_rules />
    <ui_properties />
  </component>
  <component name="ErrorTreeViewConfiguration">
    <option name="hideWarnings" value="true" />
    <option name="HIDE_WARNINGS" value="true" />
  </component>
  <component name="FavoritesManager">
    <favorites_list name="scala-disassembled" />
  </component>
  <component name="FileColors" enabled="true" enabledForTabs="true" />
  <component name="FileEditorManager">
    <leaf>
      <file leaf-file-name="find.scala" pinned="false" current="true" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/src/find.scala">
          <provider selected="true" editor-type-id="text-editor">
            <state line="19" column="23" selection-start="521" selection-end="521" vertical-scroll-proportion="-0.93167704">
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="PdfBrowser.scala" pinned="false" current="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/../sweetgui-scala/src/main/scala/net/virtualvoid/pdf/PdfBrowser.scala">
          <provider selected="true" editor-type-id="text-editor">
            <state line="26" column="37" selection-start="683" selection-end="716" vertical-scroll-proportion="0.0">
              <folding />
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="FindManager">
    <FindUsagesManager>
      <setting name="OPEN_NEW_TAB" value="false" />
    </FindUsagesManager>
  </component>
  <component name="IdeDocumentHistory">
    <option name="changedFiles">
      <list>
        <option value="$PROJECT_DIR$/src/find.scala" />
      </list>
    </option>
  </component>
  <component name="ModuleEditorState">
    <option name="LAST_EDITED_MODULE_NAME" />
    <option name="LAST_EDITED_TAB_NAME" />
  </component>
  <component name="ProjectInspectionProfilesVisibleTreeState">
    <entry key="Project Default">
      <profile-state />
    </entry>
  </component>
  <component name="ProjectLevelVcsManager">
    <OptionsSetting value="true" id="Add" />
    <OptionsSetting value="true" id="Remove" />
    <OptionsSetting value="true" id="Checkout" />
    <OptionsSetting value="true" id="Update" />
    <OptionsSetting value="true" id="Status" />
    <OptionsSetting value="true" id="Edit" />
    <ConfirmationsSetting value="0" id="Add" />
    <ConfirmationsSetting value="0" id="Remove" />
  </component>
  <component name="ProjectReloadState">
    <option name="STATE" value="0" />
  </component>
  <component name="ProjectView">
    <navigator currentView="ProjectPane" proportions="" version="1" splitterProportion="0.5">
      <flattenPackages />
      <showMembers />
      <showModules />
      <showLibraryContents />
      <hideEmptyPackages />
      <abbreviatePackageNames />
      <autoscrollToSource />
      <autoscrollFromSource />
      <sortByType />
    </navigator>
    <panes>
      <pane id="ProjectPane">
        <subPane>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="scala-disassembled" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="External Libraries" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ExternalLibrariesNode" />
            </PATH_ELEMENT>
          </PATH>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="scala-disassembled" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="scala-disassembled" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
          </PATH>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="scala-disassembled" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="scala-disassembled" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="src" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
          </PATH>
        </subPane>
      </pane>
      <pane id="Scope" />
      <pane id="Favorites" />
      <pane id="PackagesPane" />
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="project.structure.last.edited" value="Libraries" />
    <property name="GoToFile.includeJavaFiles" value="false" />
    <property name="project.structure.proportion" value="0.0" />
    <property name="options.splitter.main.proportions" value="0.3" />
    <property name="options.lastSelected" value="preferences.pluginManager" />
    <property name="MemberChooser.sorted" value="false" />
    <property name="recentsLimit" value="5" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/../sweetgui-scala/src/main/scala/net/virtualvoid/pdf" />
    <property name="project.structure.side.proportion" value="0.2" />
    <property name="MemberChooser.copyJavadoc" value="false" />
    <property name="GoToClass.toSaveIncludeLibraries" value="false" />
    <property name="MemberChooser.showClasses" value="true" />
    <property name="GoToClass.includeLibraries" value="false" />
    <property name="options.searchVisible" value="true" />
    <property name="options.splitter.details.proportions" value="0.2" />
    <property name="dynamic.classpath" value="false" />
  </component>
  <component name="RunManager" selected="Scala Console.Scala Console">
    <configuration default="false" name="Scala Console" type="ScalaScriptConsoleRunConfiguration" factoryName="Scala Console" temporary="true">
      <module name="scala-disassembled" />
      <setting name="vmparams" value="" />
      <setting name="consoleArgs" value="" />
      <RunnerSettings RunnerId="Run" />
      <ConfigurationWrapper RunnerId="Run" />
      <method />
    </configuration>
    <configuration default="true" type="ScalaScriptConsoleRunConfiguration" factoryName="Scala Console">
      <module name="" />
      <setting name="vmparams" value="" />
      <setting name="consoleArgs" value="" />
      <method>
        <option name="AntTarget" enabled="false" />
        <option name="BuildArtifacts" enabled="false" />
        <option name="Make" enabled="true" />
        <option name="Maven.BeforeRunTask" enabled="false" />
      </method>
    </configuration>
    <configuration default="true" type="Remote" factoryName="Remote">
      <option name="USE_SOCKET_TRANSPORT" value="true" />
      <option name="SERVER_MODE" value="false" />
      <option name="SHMEM_ADDRESS" value="javadebug" />
      <option name="HOST" value="localhost" />
      <option name="PORT" value="5005" />
      <method>
        <option name="AntTarget" enabled="false" />
        <option name="BuildArtifacts" enabled="false" />
        <option name="Maven.BeforeRunTask" enabled="false" />
      </method>
    </configuration>
    <configuration default="true" type="SpecsRunConfiguration" factoryName="Specs">
      <module name="" />
      <setting name="path" value="" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <method>
        <option name="AntTarget" enabled="false" />
        <option name="BuildArtifacts" enabled="false" />
        <option name="Make" enabled="true" />
        <option name="Maven.BeforeRunTask" enabled="false" />
      </method>
    </configuration>
    <configuration default="true" type="TestNG" factoryName="TestNG">
      <extension name="snapshooter" />
      <module name="" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="SUITE_NAME" />
      <option name="PACKAGE_NAME" />
      <option name="MAIN_CLASS_NAME" />
      <option name="METHOD_NAME" />
      <option name="GROUP_NAME" />
      <option name="TEST_OBJECT" value="CLASS" />
      <option name="VM_PARAMETERS" />
      <option name="PARAMETERS" />
      <option name="WORKING_DIRECTORY" />
      <option name="OUTPUT_DIRECTORY" />
      <option name="ANNOTATION_TYPE" />
      <option name="ENV_VARIABLES" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="TEST_SEARCH_SCOPE">
        <value defaultName="moduleWithDependencies" />
      </option>
      <option name="USE_DEFAULT_REPORTERS" value="false" />
      <option name="PROPERTIES_FILE" />
      <envs />
      <properties />
      <listeners />
      <method>
        <option name="AntTarget" enabled="false" />
        <option name="BuildArtifacts" enabled="false" />
        <option name="Make" enabled="true" />
        <option name="Maven.BeforeRunTask" enabled="false" />
      </method>
    </configuration>
    <configuration default="true" type="Applet" factoryName="Applet">
      <module name="" />
      <option name="MAIN_CLASS_NAME" />
      <option name="HTML_FILE_NAME" />
      <option name="HTML_USED" value="false" />
      <option name="WIDTH" value="400" />
      <option name="HEIGHT" value="300" />
      <option name="POLICY_FILE" value="$APPLICATION_HOME_DIR$/bin/appletviewer.policy" />
      <option name="VM_PARAMETERS" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <method>
        <option name="AntTarget" enabled="false" />
        <option name="BuildArtifacts" enabled="false" />
        <option name="Make" enabled="true" />
        <option name="Maven.BeforeRunTask" enabled="false" />
      </method>
    </configuration>
    <configuration default="true" type="Application" factoryName="Application">
      <extension name="snapshooter" />
      <option name="MAIN_CLASS_NAME" />
      <option name="VM_PARAMETERS" />
      <option name="PROGRAM_PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="ENABLE_SWING_INSPECTOR" value="false" />
      <option name="ENV_VARIABLES" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <module name="" />
      <envs />
      <method>
        <option name="AntTarget" enabled="false" />
        <option name="BuildArtifacts" enabled="false" />
        <option name="Make" enabled="true" />
        <option name="Maven.BeforeRunTask" enabled="false" />
      </method>
    </configuration>
    <configuration default="true" type="JUnit" factoryName="JUnit">
      <extension name="snapshooter" />
      <module name="" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="PACKAGE_NAME" />
      <option name="MAIN_CLASS_NAME" />
      <option name="METHOD_NAME" />
      <option name="TEST_OBJECT" value="class" />
      <option name="VM_PARAMETERS" />
      <option name="PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="ENV_VARIABLES" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="TEST_SEARCH_SCOPE">
        <value defaultName="moduleWithDependencies" />
      </option>
      <envs />
      <method>
        <option name="AntTarget" enabled="false" />
        <option name="BuildArtifacts" enabled="false" />
        <option name="Make" enabled="true" />
        <option name="Maven.BeforeRunTask" enabled="false" />
      </method>
    </configuration>
    <configuration default="true" type="ScalaTestRunConfiguration" factoryName="ScalaTest">
      <module name="" />
      <setting name="path" value="" />
      <setting name="package" value="" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="version" value="false" />
      <method>
        <option name="AntTarget" enabled="false" />
        <option name="BuildArtifacts" enabled="false" />
        <option name="Make" enabled="true" />
        <option name="Maven.BeforeRunTask" enabled="false" />
      </method>
    </configuration>
    <list size="1">
      <item index="0" class="java.lang.String" itemvalue="Scala Console.Scala Console" />
    </list>
    <configuration name="&lt;template&gt;" type="WebApp" default="true" selected="false">
      <Host>localhost</Host>
      <Port>5050</Port>
    </configuration>
  </component>
  <component name="ShelveChangesManager" show_recycled="false" />
  <component name="SvnConfiguration">
    <option name="USER" value="" />
    <option name="PASSWORD" value="" />
    <option name="LAST_MERGED_REVISION" />
    <option name="UPDATE_RUN_STATUS" value="false" />
    <option name="MERGE_DRY_RUN" value="false" />
    <option name="MERGE_DIFF_USE_ANCESTRY" value="true" />
    <option name="UPDATE_LOCK_ON_DEMAND" value="false" />
    <option name="IGNORE_SPACES_IN_MERGE" value="false" />
    <option name="DETECT_NESTED_COPIES" value="false" />
    <option name="IGNORE_SPACES_IN_ANNOTATE" value="true" />
    <option name="SHOW_MERGE_SOURCES_IN_ANNOTATE" value="true" />
    <configuration useDefault="true">$PROJECT_DIR$/../../../.subversion</configuration>
    <myIsUseDefaultProxy>false</myIsUseDefaultProxy>
    <supportedVersion>125</supportedVersion>
  </component>
  <component name="ToolWindowManager">
    <frame x="1" y="1" width="1278" height="663" extended-state="0" />
    <editor active="true" />
    <layout>
      <window_info id="Changes" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Palette" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Ant Build" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Debug" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.4" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Version Control" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Messages" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.32897195" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="TODO" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
      <window_info id="Structure" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="1" side_tool="true" content_ui="tabs" />
      <window_info id="Maven Projects" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Commander" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.4" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Project" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" weight="0.25" sideWeight="0.6579439" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Dependency Viewer" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Run" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.32897195" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Cvs" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
      <window_info id="Message" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Inspection" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.4" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
      <window_info id="Hierarchy" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="2" side_tool="false" content_ui="combo" />
    </layout>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="OFFER_MOVE_TO_ANOTHER_CHANGELIST_ON_PARTIAL_COMMIT" value="true" />
    <option name="CHECK_CODE_SMELLS_BEFORE_PROJECT_COMMIT" value="true" />
    <option name="PERFORM_UPDATE_IN_BACKGROUND" value="true" />
    <option name="PERFORM_COMMIT_IN_BACKGROUND" value="true" />
    <option name="PERFORM_EDIT_IN_BACKGROUND" value="true" />
    <option name="PERFORM_CHECKOUT_IN_BACKGROUND" value="true" />
    <option name="PERFORM_ADD_REMOVE_IN_BACKGROUND" value="true" />
    <option name="PERFORM_ROLLBACK_IN_BACKGROUND" value="false" />
    <option name="CHECK_LOCALLY_CHANGED_CONFLICTS_IN_BACKGROUND" value="true" />
    <option name="FORCE_NON_EMPTY_COMMENT" value="false" />
    <option name="LAST_COMMIT_MESSAGE" />
    <option name="MAKE_NEW_CHANGELIST_ACTIVE" value="true" />
    <option name="OPTIMIZE_IMPORTS_BEFORE_PROJECT_COMMIT" value="false" />
    <option name="CHECK_FILES_UP_TO_DATE_BEFORE_COMMIT" value="false" />
    <option name="REFORMAT_BEFORE_PROJECT_COMMIT" value="false" />
    <option name="REFORMAT_BEFORE_FILE_COMMIT" value="false" />
    <option name="FILE_HISTORY_DIALOG_COMMENTS_SPLITTER_PROPORTION" value="0.8" />
    <option name="FILE_HISTORY_DIALOG_SPLITTER_PROPORTION" value="0.5" />
    <option name="ACTIVE_VCS_NAME" />
    <option name="UPDATE_GROUP_BY_PACKAGES" value="false" />
    <option name="UPDATE_GROUP_BY_CHANGELIST" value="false" />
    <option name="SHOW_FILE_HISTORY_AS_TREE" value="false" />
    <option name="FILE_HISTORY_SPLITTER_PROPORTION" value="0.6" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager />
  </component>
  <component name="antWorkspaceConfiguration">
    <option name="IS_AUTOSCROLL_TO_SOURCE" value="false" />
    <option name="FILTER_TARGETS" value="false" />
  </component>
  <component name="editorHistoryManager">
    <entry file="jar://$MAVEN_REPOSITORY$/org/scala-lang/scala-library/2.8.0.Beta1/scala-library-2.8.0.Beta1.jar!/scala/collection/TraversableLike.class">
      <provider selected="true" editor-type-id="text-editor">
        <state line="79" column="0" selection-start="7160" selection-end="7160" vertical-scroll-proportion="0.704918">
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/org/scala-lang/scala-library/2.8.0.Beta1/scala-library-2.8.0.Beta1.jar!/scala/collection/IndexedSeqLike.class">
      <provider selected="true" editor-type-id="text-editor">
        <state line="53" column="0" selection-start="4693" selection-end="4693" vertical-scroll-proportion="0.6830986">
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/org/scala-lang/scala-library/2.8.0.Beta1/scala-library-2.8.0.Beta1.jar!/scala/collection/mutable/ArrayOps.class">
      <provider selected="true" editor-type-id="text-editor">
        <state line="67" column="0" selection-start="5190" selection-end="5190" vertical-scroll-proportion="0.0">
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="jar:///usr/lib/jvm/java-6-openjdk/jre/lib/rt.jar!/sun/reflect/DelegatingMethodAccessorImpl.class">
      <provider selected="true" editor-type-id="text-editor">
        <state line="13" column="0" selection-start="657" selection-end="657" vertical-scroll-proportion="0.0">
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="jar://$PROJECT_DIR$/../treegraph/project/boot/scala-2.8.0.Beta1/lib/scala-compiler.jar!/scala/tools/nsc/InterpreterLoop.class">
      <provider selected="true" editor-type-id="text-editor">
        <state line="50" column="0" selection-start="3955" selection-end="3955" vertical-scroll-proportion="0.6830986">
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="jar:///usr/lib/jvm/java-6-openjdk/jre/lib/rt.jar!/sun/reflect/NativeMethodAccessorImpl.class">
      <provider selected="true" editor-type-id="text-editor">
        <state line="17" column="0" selection-start="870" selection-end="870" vertical-scroll-proportion="0.6830986">
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/../sweetgui-scala/src/main/scala/net/virtualvoid/pdf/PdfBrowser.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state line="26" column="37" selection-start="683" selection-end="716" vertical-scroll-proportion="0.0">
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/find.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state line="19" column="23" selection-start="521" selection-end="521" vertical-scroll-proportion="-0.93167704">
          <folding />
        </state>
      </provider>
    </entry>
  </component>
  <component name="masterDetails">
    <states>
      <state key="ArtifactsStructureConfigurable.UI">
        <UIState>
          <splitter-proportions>
            <SplitterProportionsDataImpl>
              <option name="proportions">
                <list>
                  <option value="0.2" />
                </list>
              </option>
            </SplitterProportionsDataImpl>
          </splitter-proportions>
          <settings />
        </UIState>
      </state>
      <state key="Copyright.UI">
        <UIState>
          <splitter-proportions>
            <SplitterProportionsDataImpl />
          </splitter-proportions>
        </UIState>
      </state>
      <state key="ProjectJDKs.UI">
        <UIState>
          <splitter-proportions>
            <SplitterProportionsDataImpl>
              <option name="proportions">
                <list>
                  <option value="0.2" />
                </list>
              </option>
            </SplitterProportionsDataImpl>
          </splitter-proportions>
          <last-edited>1.6</last-edited>
        </UIState>
      </state>
      <state key="ScopeChooserConfigurable.UI">
        <UIState>
          <splitter-proportions>
            <SplitterProportionsDataImpl />
          </splitter-proportions>
          <settings />
        </UIState>
      </state>
    </states>
  </component>
</project>

